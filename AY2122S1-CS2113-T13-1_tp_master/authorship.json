[{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"EricBryann"},"content":"    mainClassName \u003d \"medbot.MedBot\"","lastModifiedDate":"2021-10-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"EricBryann"},"content":"    archiveBaseName \u003d \"medBot\"","lastModifiedDate":"2021-10-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.23\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":44,"EricBryann":2}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# About us","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"Display | Name | Github Profile | Portfolio ","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"--------|:----:|:--------------:|:---------:","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"Kureans"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Yi Shiong | [Github](https://github.com/Kureans) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2021-09-30"},{"lineNumber":6,"author":{"gitId":"CrimsonTitan79"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Atticus | [Github](https://github.com/CrimsonTitan79) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2021-09-30"},{"lineNumber":7,"author":{"gitId":"jushg"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Hoang Trong Tan | [Github](https://github.com/jushg) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2021-09-30"},{"lineNumber":8,"author":{"gitId":"EricBryann"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Eric Bryan | [Github](https://github.com/) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2021-09-30"},{"lineNumber":9,"author":{"gitId":"justinfidelis"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Justin Wong | [Github](https://github.com/justinfidelis) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2021-09-30"}],"authorContributionMap":{"justinfidelis":1,"CrimsonTitan79":1,"jushg":1,"-":4,"Kureans":1,"EricBryann":1}},{"path":"src/main/java/medbot/MedBot.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"justinfidelis"},"content":"package medbot;","lastModifiedDate":"2021-09-30"},{"lineNumber":2,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":3,"author":{"gitId":"justinfidelis"},"content":"import medbot.command.Command;","lastModifiedDate":"2021-09-30"},{"lineNumber":4,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":5,"author":{"gitId":"CrimsonTitan79"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"justinfidelis"},"content":"public class MedBot {","lastModifiedDate":"2021-09-30"},{"lineNumber":8,"author":{"gitId":"justinfidelis"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-09-30"},{"lineNumber":9,"author":{"gitId":"justinfidelis"},"content":"        interactWithUser();","lastModifiedDate":"2021-09-30"},{"lineNumber":10,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":11,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":12,"author":{"gitId":"justinfidelis"},"content":"    public static void interactWithUser() {","lastModifiedDate":"2021-09-30"},{"lineNumber":13,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"justinfidelis"},"content":"        PatientList patientList \u003d new PatientList();","lastModifiedDate":"2021-09-30"},{"lineNumber":15,"author":{"gitId":"justinfidelis"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2021-09-30"},{"lineNumber":16,"author":{"gitId":"CrimsonTitan79"},"content":"        Storage storage \u003d null;","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"CrimsonTitan79"},"content":"        boolean isInteracting \u003d true;","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"CrimsonTitan79"},"content":"        ui.printWelcomeMessageOne();","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"CrimsonTitan79"},"content":"        try {","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"CrimsonTitan79"},"content":"            storage \u003d new Storage();","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"CrimsonTitan79"},"content":"            String loadStorageErrorMessage \u003d storage.loadStorage(patientList);","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"CrimsonTitan79"},"content":"            if (!loadStorageErrorMessage.isBlank()) {","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"CrimsonTitan79"},"content":"                ui.printOutput(loadStorageErrorMessage);","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"CrimsonTitan79"},"content":"            }","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"CrimsonTitan79"},"content":"            ui.printWelcomeMessageTwo();","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"CrimsonTitan79"},"content":"        } catch (FileNotFoundException | MedBotException e) {","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"CrimsonTitan79"},"content":"            ui.printOutput(e.getMessage());","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"CrimsonTitan79"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":33,"author":{"gitId":"justinfidelis"},"content":"        while (isInteracting) {","lastModifiedDate":"2021-09-30"},{"lineNumber":34,"author":{"gitId":"justinfidelis"},"content":"            String userInput \u003d ui.readInput();","lastModifiedDate":"2021-09-30"},{"lineNumber":35,"author":{"gitId":"justinfidelis"},"content":"            try {","lastModifiedDate":"2021-09-30"},{"lineNumber":36,"author":{"gitId":"justinfidelis"},"content":"                Command command \u003d Parser.parseCommand(userInput);","lastModifiedDate":"2021-09-30"},{"lineNumber":37,"author":{"gitId":"justinfidelis"},"content":"                isInteracting \u003d !command.isExit();","lastModifiedDate":"2021-09-30"},{"lineNumber":38,"author":{"gitId":"justinfidelis"},"content":"                command.execute(patientList, ui);","lastModifiedDate":"2021-09-30"},{"lineNumber":39,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":40,"author":{"gitId":"CrimsonTitan79"},"content":"                storage.saveData(patientList);","lastModifiedDate":"2021-10-08"},{"lineNumber":41,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":42,"author":{"gitId":"justinfidelis"},"content":"            } catch (MedBotException mbe) {","lastModifiedDate":"2021-09-30"},{"lineNumber":43,"author":{"gitId":"justinfidelis"},"content":"                ui.printOutput(mbe.getMessage());","lastModifiedDate":"2021-09-30"},{"lineNumber":44,"author":{"gitId":"justinfidelis"},"content":"            }","lastModifiedDate":"2021-09-30"},{"lineNumber":45,"author":{"gitId":"justinfidelis"},"content":"        }","lastModifiedDate":"2021-09-30"},{"lineNumber":46,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":47,"author":{"gitId":"justinfidelis"},"content":"}","lastModifiedDate":"2021-09-30"}],"authorContributionMap":{"justinfidelis":24,"CrimsonTitan79":22,"EricBryann":1}},{"path":"src/main/java/medbot/MedBotException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"justinfidelis"},"content":"package medbot;","lastModifiedDate":"2021-09-30"},{"lineNumber":2,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":3,"author":{"gitId":"justinfidelis"},"content":"public class MedBotException extends Exception {","lastModifiedDate":"2021-09-30"},{"lineNumber":4,"author":{"gitId":"justinfidelis"},"content":"    public MedBotException(String message) {","lastModifiedDate":"2021-09-30"},{"lineNumber":5,"author":{"gitId":"justinfidelis"},"content":"        super(message);","lastModifiedDate":"2021-09-30"},{"lineNumber":6,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":7,"author":{"gitId":"justinfidelis"},"content":"}","lastModifiedDate":"2021-09-30"}],"authorContributionMap":{"justinfidelis":7}},{"path":"src/main/java/medbot/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"justinfidelis"},"content":"package medbot;","lastModifiedDate":"2021-09-30"},{"lineNumber":2,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":3,"author":{"gitId":"Kureans"},"content":"import medbot.command.AddPatientCommand;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"Kureans"},"content":"import medbot.command.Command;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"Kureans"},"content":"import medbot.command.DeletePatientCommand;","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"Kureans"},"content":"import medbot.command.EditPatientCommand;","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"Kureans"},"content":"import medbot.command.ExitCommand;","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"Kureans"},"content":"import medbot.command.ListPatientCommand;","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"Kureans"},"content":"import medbot.command.ViewPatientCommand;","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"Kureans"},"content":"import medbot.command.HelpCommand;","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"justinfidelis"},"content":"import medbot.person.Patient;","lastModifiedDate":"2021-09-30"},{"lineNumber":12,"author":{"gitId":"justinfidelis"},"content":"import medbot.person.Person;","lastModifiedDate":"2021-09-30"},{"lineNumber":13,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":14,"author":{"gitId":"EricBryann"},"content":"import java.util.function.Function;","lastModifiedDate":"2021-10-04"},{"lineNumber":15,"author":{"gitId":"EricBryann"},"content":"import java.util.regex.MatchResult;","lastModifiedDate":"2021-10-04"},{"lineNumber":16,"author":{"gitId":"EricBryann"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2021-10-04"},{"lineNumber":17,"author":{"gitId":"EricBryann"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2021-10-04"},{"lineNumber":18,"author":{"gitId":"justinfidelis"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":20,"author":{"gitId":"justinfidelis"},"content":"public class Parser {","lastModifiedDate":"2021-09-30"},{"lineNumber":21,"author":{"gitId":"justinfidelis"},"content":"    private static final String COMMAND_ADD \u003d \"add\";","lastModifiedDate":"2021-09-30"},{"lineNumber":22,"author":{"gitId":"justinfidelis"},"content":"    private static final String COMMAND_DELETE \u003d \"delete\";","lastModifiedDate":"2021-09-30"},{"lineNumber":23,"author":{"gitId":"justinfidelis"},"content":"    private static final String COMMAND_EDIT \u003d \"edit\";","lastModifiedDate":"2021-09-30"},{"lineNumber":24,"author":{"gitId":"justinfidelis"},"content":"    private static final String COMMAND_VIEW \u003d \"view\";","lastModifiedDate":"2021-09-30"},{"lineNumber":25,"author":{"gitId":"justinfidelis"},"content":"    private static final String COMMAND_LIST \u003d \"list\";","lastModifiedDate":"2021-09-30"},{"lineNumber":26,"author":{"gitId":"justinfidelis"},"content":"    private static final String COMMAND_EXIT \u003d \"exit\";","lastModifiedDate":"2021-09-30"},{"lineNumber":27,"author":{"gitId":"Kureans"},"content":"    private static final String COMMAND_HELP \u003d \"help\";","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":29,"author":{"gitId":"EricBryann"},"content":"    private static final String PARAMETER_NAME \u003d \"n/\";","lastModifiedDate":"2021-10-06"},{"lineNumber":30,"author":{"gitId":"EricBryann"},"content":"    private static final String PARAMETER_PHONE \u003d \"p/\";","lastModifiedDate":"2021-10-06"},{"lineNumber":31,"author":{"gitId":"EricBryann"},"content":"    private static final String PARAMETER_EMAIL \u003d \"e/\";","lastModifiedDate":"2021-10-06"},{"lineNumber":32,"author":{"gitId":"EricBryann"},"content":"    private static final String PARAMETER_IC \u003d \"i/\";","lastModifiedDate":"2021-10-06"},{"lineNumber":33,"author":{"gitId":"EricBryann"},"content":"    private static final String PARAMETER_ADDRESS \u003d \"a/\";","lastModifiedDate":"2021-10-06"},{"lineNumber":34,"author":{"gitId":"Kureans"},"content":"    private static final Integer PARAMETER_BUFFER \u003d 2;","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":36,"author":{"gitId":"EricBryann"},"content":"    private static final String WRONG_COMMAND_ERROR \u003d \"Unable to parse command.\";","lastModifiedDate":"2021-10-06"},{"lineNumber":37,"author":{"gitId":"EricBryann"},"content":"    private static final String WRONG_NUMBER_ERROR \u003d \"Unable to parse number.\";","lastModifiedDate":"2021-10-06"},{"lineNumber":38,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":39,"author":{"gitId":"EricBryann"},"content":"    private static final String ERROR_NO_PARAMETER \u003d \"No parameters given\";","lastModifiedDate":"2021-10-06"},{"lineNumber":40,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":41,"author":{"gitId":"EricBryann"},"content":"    private static final String ERROR_PATIENT_ID_NOT_SPECIFIED \u003d \"Patient ID not specified.\";","lastModifiedDate":"2021-10-06"},{"lineNumber":42,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":43,"author":{"gitId":"EricBryann"},"content":"    private static final String ERROR_NAME_NOT_SPECIFIED \u003d \"Name not specified\";","lastModifiedDate":"2021-10-06"},{"lineNumber":44,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":45,"author":{"gitId":"EricBryann"},"content":"    private static final String ERROR_IC_NUMBER_NOT_SPECIFIED \u003d \"IC number not specified\";","lastModifiedDate":"2021-10-06"},{"lineNumber":46,"author":{"gitId":"EricBryann"},"content":"    private static final String ERROR_IC_NUMBER_INCORRECT_FORMAT \u003d \"Incorrect IC number format\";","lastModifiedDate":"2021-10-06"},{"lineNumber":47,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":48,"author":{"gitId":"EricBryann"},"content":"    private static final String ERROR_PHONE_NUMBER_NOT_SPECIFIED \u003d \"Phone number not specified\";","lastModifiedDate":"2021-10-06"},{"lineNumber":49,"author":{"gitId":"EricBryann"},"content":"    private static final String ERROR_PHONE_NUMBER_TOO_FEW_DIGITS \u003d \"Phone number has too few digits\";","lastModifiedDate":"2021-10-06"},{"lineNumber":50,"author":{"gitId":"EricBryann"},"content":"    private static final String ERROR_PHONE_NUMBER_TOO_MANY_DIGITS \u003d \"Phone number has too many digits\";","lastModifiedDate":"2021-10-06"},{"lineNumber":51,"author":{"gitId":"EricBryann"},"content":"    private static final String ERROR_PHONE_NUMBER_UNEXPECTED_CHARACTERS \u003d","lastModifiedDate":"2021-10-06"},{"lineNumber":52,"author":{"gitId":"EricBryann"},"content":"            \"Phone number contains unexpected characters\";","lastModifiedDate":"2021-10-06"},{"lineNumber":53,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":54,"author":{"gitId":"EricBryann"},"content":"    private static final String ERROR_EMAIL_ADDRESS_NOT_SPECIFIED \u003d \"Email address not specified\";","lastModifiedDate":"2021-10-06"},{"lineNumber":55,"author":{"gitId":"EricBryann"},"content":"    private static final String ERROR_EMAIL_ADDRESS_WRONG_FORMAT \u003d \"Incorrect email address format\";","lastModifiedDate":"2021-10-06"},{"lineNumber":56,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":57,"author":{"gitId":"EricBryann"},"content":"    private static final String ERROR_ADDRESS_NOT_SPECIFIED \u003d \"Address not specified\";","lastModifiedDate":"2021-10-06"},{"lineNumber":58,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":59,"author":{"gitId":"EricBryann"},"content":"    private static final String REGEX_VERTICAL_LINE \u003d \"\\\\|\";","lastModifiedDate":"2021-10-06"},{"lineNumber":60,"author":{"gitId":"EricBryann"},"content":"    private static final String REGEX_INPUT_PARAMETER \u003d \" [a-zA-Z]{1,2}/\";","lastModifiedDate":"2021-10-06"},{"lineNumber":61,"author":{"gitId":"EricBryann"},"content":"    private static final String REGEX_EMAIL \u003d \"(([\\\\w\u0026\u0026[^_]][\\\\w-\\\\.]*[\\\\w\u0026\u0026[^_]])|[\\\\w\u0026\u0026[^_]])\\\\@([\\\\w]+\\\\.)+[\\\\w]+\";","lastModifiedDate":"2021-10-06"},{"lineNumber":62,"author":{"gitId":"EricBryann"},"content":"    private static final String REGEX_IC \u003d \"[STFGM][0-9]{7}[A-Z]\";","lastModifiedDate":"2021-10-06"},{"lineNumber":63,"author":{"gitId":"EricBryann"},"content":"    private static final String REGEX_PHONE_NUMBER \u003d \"[\\\\d]{8}\";","lastModifiedDate":"2021-10-06"},{"lineNumber":64,"author":{"gitId":"EricBryann"},"content":"    private static final String REGEX_PHONE_NUMBER_SEPARATOR \u003d \"[- _+()]\";","lastModifiedDate":"2021-10-06"},{"lineNumber":65,"author":{"gitId":"EricBryann"},"content":"    private static final String REGEX_CAPITALISE_POSITION \u003d \"(\\\\A|[ _-])[a-z]\";","lastModifiedDate":"2021-10-06"},{"lineNumber":66,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":67,"author":{"gitId":"EricBryann"},"content":"    private static final String VERTICAL_LINE \u003d \"|\";","lastModifiedDate":"2021-10-06"},{"lineNumber":68,"author":{"gitId":"Kureans"},"content":"    private static final String SEPARATOR_SPACE \u003d \" \";","lastModifiedDate":"2021-10-07"},{"lineNumber":69,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":70,"author":{"gitId":"EricBryann"},"content":"    private static final String EMPTY_STRING \u003d \"\";","lastModifiedDate":"2021-10-06"},{"lineNumber":71,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":72,"author":{"gitId":"Kureans"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":73,"author":{"gitId":"Kureans"},"content":"     * Parses the user input for commands and returns the relevant Command object.","lastModifiedDate":"2021-10-07"},{"lineNumber":74,"author":{"gitId":"Kureans"},"content":"     *","lastModifiedDate":"2021-10-07"},{"lineNumber":75,"author":{"gitId":"Kureans"},"content":"     * @param userInput String containing the full user input.","lastModifiedDate":"2021-10-07"},{"lineNumber":76,"author":{"gitId":"Kureans"},"content":"     * @return the corresponding Command object.","lastModifiedDate":"2021-10-07"},{"lineNumber":77,"author":{"gitId":"Kureans"},"content":"     * @throws MedBotException if command is unrecognised.","lastModifiedDate":"2021-10-07"},{"lineNumber":78,"author":{"gitId":"Kureans"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":79,"author":{"gitId":"justinfidelis"},"content":"    public static Command parseCommand(String userInput) throws MedBotException {","lastModifiedDate":"2021-09-30"},{"lineNumber":80,"author":{"gitId":"justinfidelis"},"content":"        userInput \u003d preprocessInput(userInput);","lastModifiedDate":"2021-09-30"},{"lineNumber":81,"author":{"gitId":"justinfidelis"},"content":"        if (userInput.startsWith(COMMAND_ADD)) {","lastModifiedDate":"2021-09-30"},{"lineNumber":82,"author":{"gitId":"justinfidelis"},"content":"            return parseAddPatientCommand(userInput);","lastModifiedDate":"2021-09-30"},{"lineNumber":83,"author":{"gitId":"justinfidelis"},"content":"        }","lastModifiedDate":"2021-09-30"},{"lineNumber":84,"author":{"gitId":"justinfidelis"},"content":"        if (userInput.startsWith(COMMAND_DELETE)) {","lastModifiedDate":"2021-09-30"},{"lineNumber":85,"author":{"gitId":"justinfidelis"},"content":"            return parseDeletePatientCommand(userInput);","lastModifiedDate":"2021-09-30"},{"lineNumber":86,"author":{"gitId":"justinfidelis"},"content":"        }","lastModifiedDate":"2021-09-30"},{"lineNumber":87,"author":{"gitId":"justinfidelis"},"content":"        if (userInput.startsWith(COMMAND_VIEW)) {","lastModifiedDate":"2021-09-30"},{"lineNumber":88,"author":{"gitId":"justinfidelis"},"content":"            return parseViewPatientCommand(userInput);","lastModifiedDate":"2021-09-30"},{"lineNumber":89,"author":{"gitId":"justinfidelis"},"content":"        }","lastModifiedDate":"2021-09-30"},{"lineNumber":90,"author":{"gitId":"Kureans"},"content":"        if (userInput.equals(COMMAND_LIST)) {","lastModifiedDate":"2021-10-12"},{"lineNumber":91,"author":{"gitId":"justinfidelis"},"content":"            return new ListPatientCommand();","lastModifiedDate":"2021-09-30"},{"lineNumber":92,"author":{"gitId":"justinfidelis"},"content":"        }","lastModifiedDate":"2021-09-30"},{"lineNumber":93,"author":{"gitId":"Kureans"},"content":"        if (userInput.equals(COMMAND_EXIT)) {","lastModifiedDate":"2021-10-12"},{"lineNumber":94,"author":{"gitId":"justinfidelis"},"content":"            return new ExitCommand();","lastModifiedDate":"2021-09-30"},{"lineNumber":95,"author":{"gitId":"justinfidelis"},"content":"        }","lastModifiedDate":"2021-09-30"},{"lineNumber":96,"author":{"gitId":"jushg"},"content":"        if (userInput.startsWith(COMMAND_EDIT)) {","lastModifiedDate":"2021-10-05"},{"lineNumber":97,"author":{"gitId":"jushg"},"content":"            return parseEditPatientCommand(userInput);","lastModifiedDate":"2021-10-05"},{"lineNumber":98,"author":{"gitId":"jushg"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":99,"author":{"gitId":"Kureans"},"content":"        if (userInput.startsWith(COMMAND_HELP)) {","lastModifiedDate":"2021-10-07"},{"lineNumber":100,"author":{"gitId":"Kureans"},"content":"            return parseHelpCommand(userInput);","lastModifiedDate":"2021-10-07"},{"lineNumber":101,"author":{"gitId":"Kureans"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":102,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":103,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":104,"author":{"gitId":"Kureans"},"content":"        throw new MedBotException(WRONG_COMMAND_ERROR);","lastModifiedDate":"2021-10-07"},{"lineNumber":105,"author":{"gitId":"Kureans"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":106,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":107,"author":{"gitId":"Kureans"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":108,"author":{"gitId":"Kureans"},"content":"     * Parses user input to pass relevant parameters into the HelpCommand constructor.","lastModifiedDate":"2021-10-07"},{"lineNumber":109,"author":{"gitId":"Kureans"},"content":"     *","lastModifiedDate":"2021-10-07"},{"lineNumber":110,"author":{"gitId":"Kureans"},"content":"     * @param userInput String containing the full user input.","lastModifiedDate":"2021-10-07"},{"lineNumber":111,"author":{"gitId":"Kureans"},"content":"     * @return HelpCommand object.","lastModifiedDate":"2021-10-07"},{"lineNumber":112,"author":{"gitId":"Kureans"},"content":"     * @throws MedBotException if parameters.length \u003c 1 \u0026\u0026 \u003e 2","lastModifiedDate":"2021-10-07"},{"lineNumber":113,"author":{"gitId":"Kureans"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":114,"author":{"gitId":"Kureans"},"content":"    private static HelpCommand parseHelpCommand(String userInput) throws MedBotException {","lastModifiedDate":"2021-10-07"},{"lineNumber":115,"author":{"gitId":"Kureans"},"content":"        String[] parameters \u003d userInput.split(SEPARATOR_SPACE);","lastModifiedDate":"2021-10-07"},{"lineNumber":116,"author":{"gitId":"Kureans"},"content":"        if (parameters.length \u003d\u003d 1) {","lastModifiedDate":"2021-10-07"},{"lineNumber":117,"author":{"gitId":"Kureans"},"content":"            return new HelpCommand(userInput);","lastModifiedDate":"2021-10-07"},{"lineNumber":118,"author":{"gitId":"Kureans"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":119,"author":{"gitId":"Kureans"},"content":"        if (parameters.length \u003d\u003d 2) {","lastModifiedDate":"2021-10-07"},{"lineNumber":120,"author":{"gitId":"Kureans"},"content":"            return new HelpCommand(parameters[1]);","lastModifiedDate":"2021-10-07"},{"lineNumber":121,"author":{"gitId":"Kureans"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":122,"author":{"gitId":"Kureans"},"content":"        assert parameters.length \u003e 2;","lastModifiedDate":"2021-10-12"},{"lineNumber":123,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":124,"author":{"gitId":"EricBryann"},"content":"        throw new MedBotException(WRONG_COMMAND_ERROR);","lastModifiedDate":"2021-10-06"},{"lineNumber":125,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":126,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":127,"author":{"gitId":"Kureans"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":128,"author":{"gitId":"Kureans"},"content":"     * Parses user input to pass relevant parameters into the ViewPatientCommand constructor.","lastModifiedDate":"2021-10-07"},{"lineNumber":129,"author":{"gitId":"Kureans"},"content":"     *","lastModifiedDate":"2021-10-07"},{"lineNumber":130,"author":{"gitId":"Kureans"},"content":"     * @param userInput String containing the full user input.","lastModifiedDate":"2021-10-07"},{"lineNumber":131,"author":{"gitId":"Kureans"},"content":"     * @return ViewPatientCommand object.","lastModifiedDate":"2021-10-07"},{"lineNumber":132,"author":{"gitId":"Kureans"},"content":"     * @throws MedBotException when patient id given is out of range, or no id is specified.","lastModifiedDate":"2021-10-07"},{"lineNumber":133,"author":{"gitId":"Kureans"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":134,"author":{"gitId":"justinfidelis"},"content":"    private static ViewPatientCommand parseViewPatientCommand(String userInput) throws MedBotException {","lastModifiedDate":"2021-09-30"},{"lineNumber":135,"author":{"gitId":"Kureans"},"content":"        int patientId;","lastModifiedDate":"2021-10-12"},{"lineNumber":136,"author":{"gitId":"justinfidelis"},"content":"        try {","lastModifiedDate":"2021-09-30"},{"lineNumber":137,"author":{"gitId":"justinfidelis"},"content":"            patientId \u003d Integer.parseInt(userInput.substring(4).strip());","lastModifiedDate":"2021-09-30"},{"lineNumber":138,"author":{"gitId":"justinfidelis"},"content":"        } catch (NumberFormatException ne) {","lastModifiedDate":"2021-09-30"},{"lineNumber":139,"author":{"gitId":"EricBryann"},"content":"            throw new MedBotException(WRONG_NUMBER_ERROR);","lastModifiedDate":"2021-10-06"},{"lineNumber":140,"author":{"gitId":"justinfidelis"},"content":"        } catch (IndexOutOfBoundsException ie) {","lastModifiedDate":"2021-09-30"},{"lineNumber":141,"author":{"gitId":"EricBryann"},"content":"            throw new MedBotException(ERROR_PATIENT_ID_NOT_SPECIFIED);","lastModifiedDate":"2021-10-06"},{"lineNumber":142,"author":{"gitId":"justinfidelis"},"content":"        }","lastModifiedDate":"2021-09-30"},{"lineNumber":143,"author":{"gitId":"justinfidelis"},"content":"        return new ViewPatientCommand(patientId);","lastModifiedDate":"2021-09-30"},{"lineNumber":144,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":145,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":146,"author":{"gitId":"Kureans"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":147,"author":{"gitId":"Kureans"},"content":"     * Parses user input to pass relevant parameters into the DeletePatientCommand constructor.","lastModifiedDate":"2021-10-07"},{"lineNumber":148,"author":{"gitId":"Kureans"},"content":"     *","lastModifiedDate":"2021-10-07"},{"lineNumber":149,"author":{"gitId":"Kureans"},"content":"     * @param userInput String containing the full user input.","lastModifiedDate":"2021-10-07"},{"lineNumber":150,"author":{"gitId":"Kureans"},"content":"     * @return DeletePatientCommand object.","lastModifiedDate":"2021-10-07"},{"lineNumber":151,"author":{"gitId":"Kureans"},"content":"     * @throws MedBotException when patient id given is out of range, or no id is specified.","lastModifiedDate":"2021-10-07"},{"lineNumber":152,"author":{"gitId":"Kureans"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":153,"author":{"gitId":"justinfidelis"},"content":"    private static DeletePatientCommand parseDeletePatientCommand(String userInput) throws MedBotException {","lastModifiedDate":"2021-09-30"},{"lineNumber":154,"author":{"gitId":"Kureans"},"content":"        int patientId;","lastModifiedDate":"2021-10-12"},{"lineNumber":155,"author":{"gitId":"justinfidelis"},"content":"        try {","lastModifiedDate":"2021-09-30"},{"lineNumber":156,"author":{"gitId":"justinfidelis"},"content":"            patientId \u003d Integer.parseInt(userInput.substring(6).strip());","lastModifiedDate":"2021-09-30"},{"lineNumber":157,"author":{"gitId":"justinfidelis"},"content":"        } catch (NumberFormatException ne) {","lastModifiedDate":"2021-09-30"},{"lineNumber":158,"author":{"gitId":"EricBryann"},"content":"            throw new MedBotException(WRONG_NUMBER_ERROR);","lastModifiedDate":"2021-10-06"},{"lineNumber":159,"author":{"gitId":"justinfidelis"},"content":"        } catch (IndexOutOfBoundsException ie) {","lastModifiedDate":"2021-09-30"},{"lineNumber":160,"author":{"gitId":"EricBryann"},"content":"            throw new MedBotException(ERROR_PATIENT_ID_NOT_SPECIFIED);","lastModifiedDate":"2021-10-06"},{"lineNumber":161,"author":{"gitId":"justinfidelis"},"content":"        }","lastModifiedDate":"2021-09-30"},{"lineNumber":162,"author":{"gitId":"justinfidelis"},"content":"        return new DeletePatientCommand(patientId);","lastModifiedDate":"2021-09-30"},{"lineNumber":163,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":164,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":165,"author":{"gitId":"jushg"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":166,"author":{"gitId":"jushg"},"content":"     * Processes user input for the editPatientInformation command.","lastModifiedDate":"2021-10-13"},{"lineNumber":167,"author":{"gitId":"jushg"},"content":"     *","lastModifiedDate":"2021-10-05"},{"lineNumber":168,"author":{"gitId":"jushg"},"content":"     * @param userInput String containing the full user input.","lastModifiedDate":"2021-10-13"},{"lineNumber":169,"author":{"gitId":"jushg"},"content":"     * @return EditPatientCommand objects","lastModifiedDate":"2021-10-13"},{"lineNumber":170,"author":{"gitId":"jushg"},"content":"     * @throws MedBotException when the parameters given cannot be parsed","lastModifiedDate":"2021-10-05"},{"lineNumber":171,"author":{"gitId":"jushg"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":172,"author":{"gitId":"jushg"},"content":"    private static EditPatientCommand parseEditPatientCommand(String userInput) throws MedBotException {","lastModifiedDate":"2021-10-05"},{"lineNumber":173,"author":{"gitId":"Kureans"},"content":"        int patientId;","lastModifiedDate":"2021-10-12"},{"lineNumber":174,"author":{"gitId":"jushg"},"content":"        try {","lastModifiedDate":"2021-10-05"},{"lineNumber":175,"author":{"gitId":"justinfidelis"},"content":"            String patientIdString \u003d userInput.substring(4).stripLeading();","lastModifiedDate":"2021-10-06"},{"lineNumber":176,"author":{"gitId":"justinfidelis"},"content":"            int endSpaceIndex \u003d patientIdString.indexOf(\u0027 \u0027);","lastModifiedDate":"2021-10-06"},{"lineNumber":177,"author":{"gitId":"justinfidelis"},"content":"            if (endSpaceIndex !\u003d -1) {","lastModifiedDate":"2021-10-06"},{"lineNumber":178,"author":{"gitId":"justinfidelis"},"content":"                patientIdString \u003d patientIdString.substring(0, endSpaceIndex);","lastModifiedDate":"2021-10-06"},{"lineNumber":179,"author":{"gitId":"justinfidelis"},"content":"            }","lastModifiedDate":"2021-10-06"},{"lineNumber":180,"author":{"gitId":"justinfidelis"},"content":"            patientId \u003d Integer.parseInt(patientIdString);","lastModifiedDate":"2021-10-06"},{"lineNumber":181,"author":{"gitId":"jushg"},"content":"        } catch (NumberFormatException ne) {","lastModifiedDate":"2021-10-05"},{"lineNumber":182,"author":{"gitId":"EricBryann"},"content":"            throw new MedBotException(WRONG_NUMBER_ERROR);","lastModifiedDate":"2021-10-06"},{"lineNumber":183,"author":{"gitId":"jushg"},"content":"        } catch (IndexOutOfBoundsException ie) {","lastModifiedDate":"2021-10-05"},{"lineNumber":184,"author":{"gitId":"EricBryann"},"content":"            throw new MedBotException(ERROR_PATIENT_ID_NOT_SPECIFIED);","lastModifiedDate":"2021-10-06"},{"lineNumber":185,"author":{"gitId":"jushg"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":186,"author":{"gitId":"jushg"},"content":"        String[] parameters \u003d getParameters(userInput);","lastModifiedDate":"2021-10-13"},{"lineNumber":187,"author":{"gitId":"jushg"},"content":"        Patient patient \u003d new Patient();","lastModifiedDate":"2021-10-05"},{"lineNumber":188,"author":{"gitId":"justinfidelis"},"content":"        patient.setNull();","lastModifiedDate":"2021-10-06"},{"lineNumber":189,"author":{"gitId":"justinfidelis"},"content":"        updateMultiplePersonalInformation(patient, parameters);","lastModifiedDate":"2021-10-13"},{"lineNumber":190,"author":{"gitId":"jushg"},"content":"        return new EditPatientCommand(patientId, patient);","lastModifiedDate":"2021-10-05"},{"lineNumber":191,"author":{"gitId":"jushg"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":192,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":193,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":194,"author":{"gitId":"Kureans"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":195,"author":{"gitId":"jushg"},"content":"     * Processes user input to create a new patient object with the corresponding information.","lastModifiedDate":"2021-10-13"},{"lineNumber":196,"author":{"gitId":"Kureans"},"content":"     *","lastModifiedDate":"2021-10-07"},{"lineNumber":197,"author":{"gitId":"Kureans"},"content":"     * @param userInput String containing the full user input.","lastModifiedDate":"2021-10-07"},{"lineNumber":198,"author":{"gitId":"Kureans"},"content":"     * @return AddPatientCommand object.","lastModifiedDate":"2021-10-07"},{"lineNumber":199,"author":{"gitId":"Kureans"},"content":"     * @throws MedBotException when no parameters are specified.","lastModifiedDate":"2021-10-07"},{"lineNumber":200,"author":{"gitId":"Kureans"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":201,"author":{"gitId":"justinfidelis"},"content":"    private static AddPatientCommand parseAddPatientCommand(String userInput) throws MedBotException {","lastModifiedDate":"2021-09-30"},{"lineNumber":202,"author":{"gitId":"jushg"},"content":"        String[] parameters \u003d getParameters(userInput);","lastModifiedDate":"2021-10-13"},{"lineNumber":203,"author":{"gitId":"jushg"},"content":"        Patient patient \u003d new Patient();","lastModifiedDate":"2021-10-13"},{"lineNumber":204,"author":{"gitId":"justinfidelis"},"content":"        updateMultiplePersonalInformation(patient, parameters);","lastModifiedDate":"2021-10-13"},{"lineNumber":205,"author":{"gitId":"jushg"},"content":"        return new AddPatientCommand(patient);","lastModifiedDate":"2021-10-13"},{"lineNumber":206,"author":{"gitId":"jushg"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":207,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":208,"author":{"gitId":"jushg"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":209,"author":{"gitId":"jushg"},"content":"     * Parses user input to the correct patient information format.","lastModifiedDate":"2021-10-13"},{"lineNumber":210,"author":{"gitId":"jushg"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":211,"author":{"gitId":"jushg"},"content":"     * @param userInput String containing the full user input.","lastModifiedDate":"2021-10-13"},{"lineNumber":212,"author":{"gitId":"jushg"},"content":"     * @return The parameters list given by user.","lastModifiedDate":"2021-10-13"},{"lineNumber":213,"author":{"gitId":"jushg"},"content":"     * @throws MedBotException when no parameters are specified.","lastModifiedDate":"2021-10-13"},{"lineNumber":214,"author":{"gitId":"jushg"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":215,"author":{"gitId":"jushg"},"content":"    private static String[] getParameters(String userInput) throws MedBotException {","lastModifiedDate":"2021-10-13"},{"lineNumber":216,"author":{"gitId":"justinfidelis"},"content":"        String processedInput \u003d preprocessMultiAttributeInput(userInput);","lastModifiedDate":"2021-09-30"},{"lineNumber":217,"author":{"gitId":"justinfidelis"},"content":"        String[] words \u003d processedInput.split(REGEX_VERTICAL_LINE);","lastModifiedDate":"2021-10-13"},{"lineNumber":218,"author":{"gitId":"justinfidelis"},"content":"        if (words.length \u003d\u003d 1) {","lastModifiedDate":"2021-10-13"},{"lineNumber":219,"author":{"gitId":"EricBryann"},"content":"            throw new MedBotException(ERROR_NO_PARAMETER);","lastModifiedDate":"2021-10-06"},{"lineNumber":220,"author":{"gitId":"justinfidelis"},"content":"        }","lastModifiedDate":"2021-09-30"},{"lineNumber":221,"author":{"gitId":"justinfidelis"},"content":"        assert words.length \u003e 1;","lastModifiedDate":"2021-10-13"},{"lineNumber":222,"author":{"gitId":"justinfidelis"},"content":"        String[] parameters \u003d Arrays.copyOfRange(words, 1, words.length);","lastModifiedDate":"2021-10-13"},{"lineNumber":223,"author":{"gitId":"justinfidelis"},"content":"        assert parameters.length \u003e\u003d 1;","lastModifiedDate":"2021-10-13"},{"lineNumber":224,"author":{"gitId":"jushg"},"content":"        return parameters;","lastModifiedDate":"2021-10-13"},{"lineNumber":225,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":226,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":227,"author":{"gitId":"jushg"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":228,"author":{"gitId":"jushg"},"content":"     * Preprocesses user input to remove invalid substring that can not be parsed.","lastModifiedDate":"2021-10-13"},{"lineNumber":229,"author":{"gitId":"jushg"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":230,"author":{"gitId":"jushg"},"content":"     * @param userInput The initial user input.","lastModifiedDate":"2021-10-13"},{"lineNumber":231,"author":{"gitId":"jushg"},"content":"     * @return user input without leading white space and vertical lines present.","lastModifiedDate":"2021-10-13"},{"lineNumber":232,"author":{"gitId":"jushg"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":233,"author":{"gitId":"jushg"},"content":"    private static String preprocessInput(String userInput) {","lastModifiedDate":"2021-10-13"},{"lineNumber":234,"author":{"gitId":"jushg"},"content":"        return userInput.stripLeading().replace(VERTICAL_LINE, EMPTY_STRING);","lastModifiedDate":"2021-10-13"},{"lineNumber":235,"author":{"gitId":"jushg"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":236,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":237,"author":{"gitId":"justinfidelis"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":238,"author":{"gitId":"justinfidelis"},"content":"     * Parses attributeStrings array and modifies all the corresponding attribute in person.","lastModifiedDate":"2021-10-13"},{"lineNumber":239,"author":{"gitId":"justinfidelis"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":240,"author":{"gitId":"justinfidelis"},"content":"     * @param person           Person whose personal information will be updated","lastModifiedDate":"2021-10-13"},{"lineNumber":241,"author":{"gitId":"justinfidelis"},"content":"     * @param attributeStrings String Array containing Strings of an attribute specifier and the corresponding","lastModifiedDate":"2021-10-13"},{"lineNumber":242,"author":{"gitId":"justinfidelis"},"content":"     *                         personal information","lastModifiedDate":"2021-10-13"},{"lineNumber":243,"author":{"gitId":"justinfidelis"},"content":"     * @throws MedBotException if the attributeString contains missing/invalid information","lastModifiedDate":"2021-10-13"},{"lineNumber":244,"author":{"gitId":"justinfidelis"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":245,"author":{"gitId":"justinfidelis"},"content":"    public static void updateMultiplePersonalInformation(Person person, String[] attributeStrings)","lastModifiedDate":"2021-10-13"},{"lineNumber":246,"author":{"gitId":"justinfidelis"},"content":"            throws MedBotException {","lastModifiedDate":"2021-10-13"},{"lineNumber":247,"author":{"gitId":"justinfidelis"},"content":"        for (int i \u003d 0; i \u003c attributeStrings.length; i++) {","lastModifiedDate":"2021-10-13"},{"lineNumber":248,"author":{"gitId":"justinfidelis"},"content":"            updatePersonalInformation(person, attributeStrings[i]);","lastModifiedDate":"2021-10-13"},{"lineNumber":249,"author":{"gitId":"justinfidelis"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":250,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":251,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":252,"author":{"gitId":"justinfidelis"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":253,"author":{"gitId":"EricBryann"},"content":"     * Parses attributeString and modifies the corresponding attribute in person.","lastModifiedDate":"2021-10-04"},{"lineNumber":254,"author":{"gitId":"justinfidelis"},"content":"     *","lastModifiedDate":"2021-09-30"},{"lineNumber":255,"author":{"gitId":"justinfidelis"},"content":"     * @param person          Person whose personal information will be updated","lastModifiedDate":"2021-09-30"},{"lineNumber":256,"author":{"gitId":"justinfidelis"},"content":"     * @param attributeString String containing an attribute specifier and the corresponding personal information","lastModifiedDate":"2021-09-30"},{"lineNumber":257,"author":{"gitId":"justinfidelis"},"content":"     * @throws MedBotException if the attributeString contains missing/invalid information","lastModifiedDate":"2021-09-30"},{"lineNumber":258,"author":{"gitId":"justinfidelis"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":259,"author":{"gitId":"CrimsonTitan79"},"content":"    public static void updatePersonalInformation(Person person, String attributeString) throws MedBotException {","lastModifiedDate":"2021-10-08"},{"lineNumber":260,"author":{"gitId":"EricBryann"},"content":"        if (attributeString.startsWith(PARAMETER_NAME)) {","lastModifiedDate":"2021-10-06"},{"lineNumber":261,"author":{"gitId":"Kureans"},"content":"            String name \u003d parseName(attributeString.substring(PARAMETER_BUFFER));","lastModifiedDate":"2021-10-12"},{"lineNumber":262,"author":{"gitId":"justinfidelis"},"content":"            person.setName(name);","lastModifiedDate":"2021-09-30"},{"lineNumber":263,"author":{"gitId":"justinfidelis"},"content":"            return;","lastModifiedDate":"2021-09-30"},{"lineNumber":264,"author":{"gitId":"justinfidelis"},"content":"        }","lastModifiedDate":"2021-09-30"},{"lineNumber":265,"author":{"gitId":"EricBryann"},"content":"        if (attributeString.startsWith(PARAMETER_PHONE)) {","lastModifiedDate":"2021-10-06"},{"lineNumber":266,"author":{"gitId":"Kureans"},"content":"            String phoneNumber \u003d parsePhoneNumber(attributeString.substring(PARAMETER_BUFFER));","lastModifiedDate":"2021-10-12"},{"lineNumber":267,"author":{"gitId":"justinfidelis"},"content":"            person.setPhoneNumber(phoneNumber);","lastModifiedDate":"2021-09-30"},{"lineNumber":268,"author":{"gitId":"justinfidelis"},"content":"            return;","lastModifiedDate":"2021-09-30"},{"lineNumber":269,"author":{"gitId":"justinfidelis"},"content":"        }","lastModifiedDate":"2021-09-30"},{"lineNumber":270,"author":{"gitId":"EricBryann"},"content":"        if (attributeString.startsWith(PARAMETER_EMAIL)) {","lastModifiedDate":"2021-10-06"},{"lineNumber":271,"author":{"gitId":"Kureans"},"content":"            String email \u003d parseEmailAddress(attributeString.substring(PARAMETER_BUFFER));","lastModifiedDate":"2021-10-12"},{"lineNumber":272,"author":{"gitId":"justinfidelis"},"content":"            person.setEmailAddress(email);","lastModifiedDate":"2021-09-30"},{"lineNumber":273,"author":{"gitId":"justinfidelis"},"content":"            return;","lastModifiedDate":"2021-09-30"},{"lineNumber":274,"author":{"gitId":"justinfidelis"},"content":"        }","lastModifiedDate":"2021-09-30"},{"lineNumber":275,"author":{"gitId":"EricBryann"},"content":"        if (attributeString.startsWith(PARAMETER_IC)) {","lastModifiedDate":"2021-10-06"},{"lineNumber":276,"author":{"gitId":"Kureans"},"content":"            String icNumber \u003d parseIcNumber(attributeString.substring(PARAMETER_BUFFER));","lastModifiedDate":"2021-10-12"},{"lineNumber":277,"author":{"gitId":"justinfidelis"},"content":"            person.setIcNumber(icNumber);","lastModifiedDate":"2021-09-30"},{"lineNumber":278,"author":{"gitId":"justinfidelis"},"content":"        }","lastModifiedDate":"2021-09-30"},{"lineNumber":279,"author":{"gitId":"EricBryann"},"content":"        if (attributeString.startsWith(PARAMETER_ADDRESS)) {","lastModifiedDate":"2021-10-06"},{"lineNumber":280,"author":{"gitId":"Kureans"},"content":"            String address \u003d parseResidentialAddress(attributeString.substring(PARAMETER_BUFFER));","lastModifiedDate":"2021-10-12"},{"lineNumber":281,"author":{"gitId":"justinfidelis"},"content":"            person.setResidentialAddress(address);","lastModifiedDate":"2021-09-30"},{"lineNumber":282,"author":{"gitId":"justinfidelis"},"content":"        }","lastModifiedDate":"2021-09-30"},{"lineNumber":283,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":284,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":285,"author":{"gitId":"justinfidelis"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":286,"author":{"gitId":"EricBryann"},"content":"     * Returns a String containing the names specified in attributeString, with each name capitalised.","lastModifiedDate":"2021-10-04"},{"lineNumber":287,"author":{"gitId":"EricBryann"},"content":"     *","lastModifiedDate":"2021-10-04"},{"lineNumber":288,"author":{"gitId":"justinfidelis"},"content":"     * @param attributeString String containing the name to be parsed","lastModifiedDate":"2021-09-30"},{"lineNumber":289,"author":{"gitId":"justinfidelis"},"content":"     * @return String containing the name specified in attributeString","lastModifiedDate":"2021-09-30"},{"lineNumber":290,"author":{"gitId":"justinfidelis"},"content":"     * @throws MedBotException if no name is given","lastModifiedDate":"2021-09-30"},{"lineNumber":291,"author":{"gitId":"justinfidelis"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":292,"author":{"gitId":"justinfidelis"},"content":"    private static String parseName(String attributeString) throws MedBotException {","lastModifiedDate":"2021-09-30"},{"lineNumber":293,"author":{"gitId":"justinfidelis"},"content":"        try {","lastModifiedDate":"2021-09-30"},{"lineNumber":294,"author":{"gitId":"justinfidelis"},"content":"            String name \u003d attributeString.strip();","lastModifiedDate":"2021-10-06"},{"lineNumber":295,"author":{"gitId":"EricBryann"},"content":"            if (name.equals(EMPTY_STRING)) {","lastModifiedDate":"2021-10-06"},{"lineNumber":296,"author":{"gitId":"EricBryann"},"content":"                throw new MedBotException(ERROR_NAME_NOT_SPECIFIED);","lastModifiedDate":"2021-10-06"},{"lineNumber":297,"author":{"gitId":"justinfidelis"},"content":"            }","lastModifiedDate":"2021-09-30"},{"lineNumber":298,"author":{"gitId":"justinfidelis"},"content":"            return capitaliseEachWord(name);","lastModifiedDate":"2021-09-30"},{"lineNumber":299,"author":{"gitId":"justinfidelis"},"content":"        } catch (IndexOutOfBoundsException ie) {","lastModifiedDate":"2021-09-30"},{"lineNumber":300,"author":{"gitId":"EricBryann"},"content":"            throw new MedBotException(ERROR_NAME_NOT_SPECIFIED);","lastModifiedDate":"2021-10-06"},{"lineNumber":301,"author":{"gitId":"justinfidelis"},"content":"        }","lastModifiedDate":"2021-09-30"},{"lineNumber":302,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":303,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":304,"author":{"gitId":"justinfidelis"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":305,"author":{"gitId":"EricBryann"},"content":"     * Returns a String containing the IC number specified in attributeString.","lastModifiedDate":"2021-10-04"},{"lineNumber":306,"author":{"gitId":"justinfidelis"},"content":"     *","lastModifiedDate":"2021-09-30"},{"lineNumber":307,"author":{"gitId":"justinfidelis"},"content":"     * \u003cp\u003eChecks if the resultant String is of the right IC number format","lastModifiedDate":"2021-10-13"},{"lineNumber":308,"author":{"gitId":"justinfidelis"},"content":"     *","lastModifiedDate":"2021-09-30"},{"lineNumber":309,"author":{"gitId":"justinfidelis"},"content":"     * @param attributeString String containing the IC number to be parsed","lastModifiedDate":"2021-09-30"},{"lineNumber":310,"author":{"gitId":"justinfidelis"},"content":"     * @return String containing the IC number specified in attributeString","lastModifiedDate":"2021-09-30"},{"lineNumber":311,"author":{"gitId":"justinfidelis"},"content":"     * @throws MedBotException if IC number is not specified, or is in the wrong format","lastModifiedDate":"2021-09-30"},{"lineNumber":312,"author":{"gitId":"justinfidelis"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":313,"author":{"gitId":"justinfidelis"},"content":"    private static String parseIcNumber(String attributeString) throws MedBotException {","lastModifiedDate":"2021-09-30"},{"lineNumber":314,"author":{"gitId":"justinfidelis"},"content":"        try {","lastModifiedDate":"2021-09-30"},{"lineNumber":315,"author":{"gitId":"justinfidelis"},"content":"            String icString \u003d attributeString.toUpperCase().strip();","lastModifiedDate":"2021-10-06"},{"lineNumber":316,"author":{"gitId":"EricBryann"},"content":"            if (icString.equals(EMPTY_STRING)) {","lastModifiedDate":"2021-10-06"},{"lineNumber":317,"author":{"gitId":"EricBryann"},"content":"                throw new MedBotException(ERROR_IC_NUMBER_NOT_SPECIFIED);","lastModifiedDate":"2021-10-06"},{"lineNumber":318,"author":{"gitId":"justinfidelis"},"content":"            }","lastModifiedDate":"2021-09-30"},{"lineNumber":319,"author":{"gitId":"EricBryann"},"content":"            if (!icString.matches(REGEX_IC)) {","lastModifiedDate":"2021-10-06"},{"lineNumber":320,"author":{"gitId":"EricBryann"},"content":"                throw new MedBotException(ERROR_IC_NUMBER_INCORRECT_FORMAT);","lastModifiedDate":"2021-10-06"},{"lineNumber":321,"author":{"gitId":"justinfidelis"},"content":"            }","lastModifiedDate":"2021-09-30"},{"lineNumber":322,"author":{"gitId":"jushg"},"content":"            assert icString.length() \u003d\u003d 9;","lastModifiedDate":"2021-10-13"},{"lineNumber":323,"author":{"gitId":"justinfidelis"},"content":"            return icString;","lastModifiedDate":"2021-09-30"},{"lineNumber":324,"author":{"gitId":"justinfidelis"},"content":"        } catch (IndexOutOfBoundsException ie) {","lastModifiedDate":"2021-09-30"},{"lineNumber":325,"author":{"gitId":"EricBryann"},"content":"            throw new MedBotException(ERROR_IC_NUMBER_NOT_SPECIFIED);","lastModifiedDate":"2021-10-06"},{"lineNumber":326,"author":{"gitId":"justinfidelis"},"content":"        }","lastModifiedDate":"2021-09-30"},{"lineNumber":327,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":328,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":329,"author":{"gitId":"justinfidelis"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":330,"author":{"gitId":"justinfidelis"},"content":"     * Returns a String containing the phone number specified in attributeString.","lastModifiedDate":"2021-09-30"},{"lineNumber":331,"author":{"gitId":"EricBryann"},"content":"     *","lastModifiedDate":"2021-10-04"},{"lineNumber":332,"author":{"gitId":"justinfidelis"},"content":"     * \u003cp\u003eRemoves special characters \"- _+()\" and checks if the length of the resultant String is 8","lastModifiedDate":"2021-10-13"},{"lineNumber":333,"author":{"gitId":"justinfidelis"},"content":"     *","lastModifiedDate":"2021-09-30"},{"lineNumber":334,"author":{"gitId":"justinfidelis"},"content":"     * @param attributeString String containing the phone number to be parsed","lastModifiedDate":"2021-09-30"},{"lineNumber":335,"author":{"gitId":"justinfidelis"},"content":"     * @return String containing the phone number specified in attributeString","lastModifiedDate":"2021-09-30"},{"lineNumber":336,"author":{"gitId":"EricBryann"},"content":"     * @throws MedBotException if the phone number is not specified,","lastModifiedDate":"2021-10-04"},{"lineNumber":337,"author":{"gitId":"EricBryann"},"content":"     *                         has too many/few digits or contains unexpected characters","lastModifiedDate":"2021-10-04"},{"lineNumber":338,"author":{"gitId":"justinfidelis"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":339,"author":{"gitId":"justinfidelis"},"content":"    private static String parsePhoneNumber(String attributeString) throws MedBotException {","lastModifiedDate":"2021-09-30"},{"lineNumber":340,"author":{"gitId":"justinfidelis"},"content":"        try {","lastModifiedDate":"2021-09-30"},{"lineNumber":341,"author":{"gitId":"justinfidelis"},"content":"            String numberString \u003d attributeString.replaceAll(REGEX_PHONE_NUMBER_SEPARATOR, EMPTY_STRING).strip();","lastModifiedDate":"2021-10-13"},{"lineNumber":342,"author":{"gitId":"EricBryann"},"content":"            if (numberString.equals(EMPTY_STRING)) {","lastModifiedDate":"2021-10-06"},{"lineNumber":343,"author":{"gitId":"EricBryann"},"content":"                throw new MedBotException(ERROR_PHONE_NUMBER_NOT_SPECIFIED);","lastModifiedDate":"2021-10-06"},{"lineNumber":344,"author":{"gitId":"justinfidelis"},"content":"            }","lastModifiedDate":"2021-09-30"},{"lineNumber":345,"author":{"gitId":"justinfidelis"},"content":"            if (numberString.length() \u003e 8) {","lastModifiedDate":"2021-09-30"},{"lineNumber":346,"author":{"gitId":"EricBryann"},"content":"                throw new MedBotException(ERROR_PHONE_NUMBER_TOO_MANY_DIGITS);","lastModifiedDate":"2021-10-06"},{"lineNumber":347,"author":{"gitId":"justinfidelis"},"content":"            }","lastModifiedDate":"2021-09-30"},{"lineNumber":348,"author":{"gitId":"justinfidelis"},"content":"            if (numberString.length() \u003c 8) {","lastModifiedDate":"2021-09-30"},{"lineNumber":349,"author":{"gitId":"EricBryann"},"content":"                throw new MedBotException(ERROR_PHONE_NUMBER_TOO_FEW_DIGITS);","lastModifiedDate":"2021-10-06"},{"lineNumber":350,"author":{"gitId":"justinfidelis"},"content":"            }","lastModifiedDate":"2021-09-30"},{"lineNumber":351,"author":{"gitId":"EricBryann"},"content":"            if (!numberString.matches(REGEX_PHONE_NUMBER)) {","lastModifiedDate":"2021-10-06"},{"lineNumber":352,"author":{"gitId":"EricBryann"},"content":"                throw new MedBotException(ERROR_PHONE_NUMBER_UNEXPECTED_CHARACTERS);","lastModifiedDate":"2021-10-06"},{"lineNumber":353,"author":{"gitId":"justinfidelis"},"content":"            }","lastModifiedDate":"2021-09-30"},{"lineNumber":354,"author":{"gitId":"Kureans"},"content":"            assert numberString.length() \u003d\u003d 8;","lastModifiedDate":"2021-10-12"},{"lineNumber":355,"author":{"gitId":"justinfidelis"},"content":"            return numberString;","lastModifiedDate":"2021-09-30"},{"lineNumber":356,"author":{"gitId":"justinfidelis"},"content":"        } catch (IndexOutOfBoundsException ie) {","lastModifiedDate":"2021-09-30"},{"lineNumber":357,"author":{"gitId":"EricBryann"},"content":"            throw new MedBotException(ERROR_PHONE_NUMBER_NOT_SPECIFIED);","lastModifiedDate":"2021-10-06"},{"lineNumber":358,"author":{"gitId":"justinfidelis"},"content":"        }","lastModifiedDate":"2021-09-30"},{"lineNumber":359,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":360,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":361,"author":{"gitId":"justinfidelis"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":362,"author":{"gitId":"EricBryann"},"content":"     * Returns a String containing the email address specified in attributeString.","lastModifiedDate":"2021-10-04"},{"lineNumber":363,"author":{"gitId":"EricBryann"},"content":"     *","lastModifiedDate":"2021-10-04"},{"lineNumber":364,"author":{"gitId":"justinfidelis"},"content":"     * \u003cp\u003eChecks if the resultant String is of the right email format","lastModifiedDate":"2021-10-13"},{"lineNumber":365,"author":{"gitId":"justinfidelis"},"content":"     *","lastModifiedDate":"2021-09-30"},{"lineNumber":366,"author":{"gitId":"justinfidelis"},"content":"     * @param attributeString String containing the email address to be parsed","lastModifiedDate":"2021-09-30"},{"lineNumber":367,"author":{"gitId":"justinfidelis"},"content":"     * @return String containing the email address specified in attributeString","lastModifiedDate":"2021-09-30"},{"lineNumber":368,"author":{"gitId":"justinfidelis"},"content":"     * @throws MedBotException if the email address is not specified or is in the wrong format","lastModifiedDate":"2021-09-30"},{"lineNumber":369,"author":{"gitId":"justinfidelis"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":370,"author":{"gitId":"justinfidelis"},"content":"    private static String parseEmailAddress(String attributeString) throws MedBotException {","lastModifiedDate":"2021-09-30"},{"lineNumber":371,"author":{"gitId":"justinfidelis"},"content":"        try {","lastModifiedDate":"2021-09-30"},{"lineNumber":372,"author":{"gitId":"justinfidelis"},"content":"            String emailString \u003d attributeString.strip();","lastModifiedDate":"2021-10-06"},{"lineNumber":373,"author":{"gitId":"jushg"},"content":"            if (emailString.equals(EMPTY_STRING)) {","lastModifiedDate":"2021-10-07"},{"lineNumber":374,"author":{"gitId":"EricBryann"},"content":"                throw new MedBotException(ERROR_EMAIL_ADDRESS_NOT_SPECIFIED);","lastModifiedDate":"2021-10-06"},{"lineNumber":375,"author":{"gitId":"justinfidelis"},"content":"            }","lastModifiedDate":"2021-09-30"},{"lineNumber":376,"author":{"gitId":"EricBryann"},"content":"            if (!emailString.matches(REGEX_EMAIL)) {","lastModifiedDate":"2021-10-06"},{"lineNumber":377,"author":{"gitId":"EricBryann"},"content":"                throw new MedBotException(ERROR_EMAIL_ADDRESS_WRONG_FORMAT);","lastModifiedDate":"2021-10-06"},{"lineNumber":378,"author":{"gitId":"justinfidelis"},"content":"            }","lastModifiedDate":"2021-09-30"},{"lineNumber":379,"author":{"gitId":"justinfidelis"},"content":"            return emailString;","lastModifiedDate":"2021-09-30"},{"lineNumber":380,"author":{"gitId":"justinfidelis"},"content":"        } catch (IndexOutOfBoundsException ie) {","lastModifiedDate":"2021-09-30"},{"lineNumber":381,"author":{"gitId":"EricBryann"},"content":"            throw new MedBotException(ERROR_EMAIL_ADDRESS_NOT_SPECIFIED);","lastModifiedDate":"2021-10-06"},{"lineNumber":382,"author":{"gitId":"justinfidelis"},"content":"        }","lastModifiedDate":"2021-09-30"},{"lineNumber":383,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":384,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":385,"author":{"gitId":"justinfidelis"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":386,"author":{"gitId":"EricBryann"},"content":"     * Returns the String containing the address specified in attributeString, with each word capitalised.","lastModifiedDate":"2021-10-04"},{"lineNumber":387,"author":{"gitId":"justinfidelis"},"content":"     *","lastModifiedDate":"2021-09-30"},{"lineNumber":388,"author":{"gitId":"justinfidelis"},"content":"     * \u003cp\u003eCapitalises each word in the address","lastModifiedDate":"2021-10-13"},{"lineNumber":389,"author":{"gitId":"justinfidelis"},"content":"     *","lastModifiedDate":"2021-09-30"},{"lineNumber":390,"author":{"gitId":"justinfidelis"},"content":"     * @param attributeString String containing the address to be parsed","lastModifiedDate":"2021-09-30"},{"lineNumber":391,"author":{"gitId":"justinfidelis"},"content":"     * @return String containing the address specified in attributeString","lastModifiedDate":"2021-09-30"},{"lineNumber":392,"author":{"gitId":"justinfidelis"},"content":"     * @throws MedBotException if address is not specified","lastModifiedDate":"2021-09-30"},{"lineNumber":393,"author":{"gitId":"justinfidelis"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":394,"author":{"gitId":"justinfidelis"},"content":"    private static String parseResidentialAddress(String attributeString) throws MedBotException {","lastModifiedDate":"2021-09-30"},{"lineNumber":395,"author":{"gitId":"justinfidelis"},"content":"        try {","lastModifiedDate":"2021-09-30"},{"lineNumber":396,"author":{"gitId":"justinfidelis"},"content":"            String addressString \u003d attributeString.strip();","lastModifiedDate":"2021-10-06"},{"lineNumber":397,"author":{"gitId":"EricBryann"},"content":"            if (addressString.equals(EMPTY_STRING)) {","lastModifiedDate":"2021-10-06"},{"lineNumber":398,"author":{"gitId":"EricBryann"},"content":"                throw new MedBotException(ERROR_ADDRESS_NOT_SPECIFIED);","lastModifiedDate":"2021-10-06"},{"lineNumber":399,"author":{"gitId":"justinfidelis"},"content":"            }","lastModifiedDate":"2021-09-30"},{"lineNumber":400,"author":{"gitId":"justinfidelis"},"content":"            return capitaliseEachWord(addressString);","lastModifiedDate":"2021-09-30"},{"lineNumber":401,"author":{"gitId":"justinfidelis"},"content":"        } catch (IndexOutOfBoundsException ie) {","lastModifiedDate":"2021-09-30"},{"lineNumber":402,"author":{"gitId":"EricBryann"},"content":"            throw new MedBotException(ERROR_ADDRESS_NOT_SPECIFIED);","lastModifiedDate":"2021-10-06"},{"lineNumber":403,"author":{"gitId":"justinfidelis"},"content":"        }","lastModifiedDate":"2021-09-30"},{"lineNumber":404,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":405,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":406,"author":{"gitId":"justinfidelis"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":407,"author":{"gitId":"EricBryann"},"content":"     * Sets the first letter of each word of each word to uppercase and sets all others to lowercase.","lastModifiedDate":"2021-10-04"},{"lineNumber":408,"author":{"gitId":"EricBryann"},"content":"     *","lastModifiedDate":"2021-10-04"},{"lineNumber":409,"author":{"gitId":"EricBryann"},"content":"     * \u003cp\u003eA letter is considered the first letter of a word if it is the first letter of the input String or","lastModifiedDate":"2021-10-04"},{"lineNumber":410,"author":{"gitId":"justinfidelis"},"content":"     * is immediately after any of the characters \" _-\".","lastModifiedDate":"2021-09-30"},{"lineNumber":411,"author":{"gitId":"justinfidelis"},"content":"     *","lastModifiedDate":"2021-09-30"},{"lineNumber":412,"author":{"gitId":"justinfidelis"},"content":"     * @param input String which will be capitalised","lastModifiedDate":"2021-09-30"},{"lineNumber":413,"author":{"gitId":"justinfidelis"},"content":"     * @return String with each word capitalised","lastModifiedDate":"2021-09-30"},{"lineNumber":414,"author":{"gitId":"justinfidelis"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":415,"author":{"gitId":"justinfidelis"},"content":"    private static String capitaliseEachWord(String input) {","lastModifiedDate":"2021-09-30"},{"lineNumber":416,"author":{"gitId":"justinfidelis"},"content":"        input \u003d input.toLowerCase();","lastModifiedDate":"2021-10-06"},{"lineNumber":417,"author":{"gitId":"justinfidelis"},"content":"        Function\u003cMatchResult, String\u003e multiAttributeReplacementFunction \u003d x -\u003e {","lastModifiedDate":"2021-09-30"},{"lineNumber":418,"author":{"gitId":"justinfidelis"},"content":"            String match \u003d x.group();","lastModifiedDate":"2021-09-30"},{"lineNumber":419,"author":{"gitId":"justinfidelis"},"content":"            if (match.length() \u003d\u003d 1) {","lastModifiedDate":"2021-09-30"},{"lineNumber":420,"author":{"gitId":"justinfidelis"},"content":"                //if substring is the first character of the string","lastModifiedDate":"2021-10-13"},{"lineNumber":421,"author":{"gitId":"justinfidelis"},"content":"                return match.toUpperCase();","lastModifiedDate":"2021-09-30"},{"lineNumber":422,"author":{"gitId":"justinfidelis"},"content":"            } else {","lastModifiedDate":"2021-09-30"},{"lineNumber":423,"author":{"gitId":"justinfidelis"},"content":"                //if substring consists of one of the characters \" _-\" followed by a letter","lastModifiedDate":"2021-10-13"},{"lineNumber":424,"author":{"gitId":"justinfidelis"},"content":"                return match.charAt(0) + match.substring(1).toUpperCase();","lastModifiedDate":"2021-09-30"},{"lineNumber":425,"author":{"gitId":"justinfidelis"},"content":"            }","lastModifiedDate":"2021-09-30"},{"lineNumber":426,"author":{"gitId":"justinfidelis"},"content":"        };","lastModifiedDate":"2021-09-30"},{"lineNumber":427,"author":{"gitId":"EricBryann"},"content":"        Pattern pattern \u003d Pattern.compile(REGEX_CAPITALISE_POSITION);","lastModifiedDate":"2021-10-06"},{"lineNumber":428,"author":{"gitId":"justinfidelis"},"content":"        Matcher matcher \u003d pattern.matcher(input);","lastModifiedDate":"2021-09-30"},{"lineNumber":429,"author":{"gitId":"justinfidelis"},"content":"        return matcher.replaceAll(multiAttributeReplacementFunction);","lastModifiedDate":"2021-09-30"},{"lineNumber":430,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":431,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":432,"author":{"gitId":"justinfidelis"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":433,"author":{"gitId":"EricBryann"},"content":"     * Places a \"|\" separator before each attribute specifier in input and returns the resultant string.","lastModifiedDate":"2021-10-04"},{"lineNumber":434,"author":{"gitId":"EricBryann"},"content":"     *","lastModifiedDate":"2021-10-04"},{"lineNumber":435,"author":{"gitId":"EricBryann"},"content":"     * \u003cp\u003eAttribute specifiers are in the following formats \"a/\" or \"ab/\" where a and b can be any uppercase","lastModifiedDate":"2021-10-04"},{"lineNumber":436,"author":{"gitId":"justinfidelis"},"content":"     * or lowercase alphabet.","lastModifiedDate":"2021-09-30"},{"lineNumber":437,"author":{"gitId":"justinfidelis"},"content":"     *","lastModifiedDate":"2021-09-30"},{"lineNumber":438,"author":{"gitId":"justinfidelis"},"content":"     * @param input userInput String containing attribute specifiers","lastModifiedDate":"2021-09-30"},{"lineNumber":439,"author":{"gitId":"justinfidelis"},"content":"     * @return String containing added separator characters","lastModifiedDate":"2021-09-30"},{"lineNumber":440,"author":{"gitId":"justinfidelis"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":441,"author":{"gitId":"justinfidelis"},"content":"    private static String preprocessMultiAttributeInput(String input) {","lastModifiedDate":"2021-09-30"},{"lineNumber":442,"author":{"gitId":"justinfidelis"},"content":"        //replacement function to add a \"|\" character before an attribute specifier","lastModifiedDate":"2021-09-30"},{"lineNumber":443,"author":{"gitId":"jushg"},"content":"        Function\u003cMatchResult, String\u003e replacementFunction \u003d x -\u003e","lastModifiedDate":"2021-10-07"},{"lineNumber":444,"author":{"gitId":"jushg"},"content":"                SEPARATOR_SPACE + VERTICAL_LINE + x.group().substring(1);","lastModifiedDate":"2021-10-07"},{"lineNumber":445,"author":{"gitId":"EricBryann"},"content":"        Pattern pattern \u003d Pattern.compile(REGEX_INPUT_PARAMETER);","lastModifiedDate":"2021-10-06"},{"lineNumber":446,"author":{"gitId":"justinfidelis"},"content":"        Matcher matcher \u003d pattern.matcher(input);","lastModifiedDate":"2021-09-30"},{"lineNumber":447,"author":{"gitId":"justinfidelis"},"content":"        return matcher.replaceAll(replacementFunction);","lastModifiedDate":"2021-09-30"},{"lineNumber":448,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":449,"author":{"gitId":"justinfidelis"},"content":"}","lastModifiedDate":"2021-09-30"}],"authorContributionMap":{"justinfidelis":229,"CrimsonTitan79":1,"jushg":49,"Kureans":72,"EricBryann":98}},{"path":"src/main/java/medbot/PatientList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"justinfidelis"},"content":"package medbot;","lastModifiedDate":"2021-09-30"},{"lineNumber":2,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":3,"author":{"gitId":"justinfidelis"},"content":"import medbot.person.Patient;","lastModifiedDate":"2021-09-30"},{"lineNumber":4,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":5,"author":{"gitId":"EricBryann"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"justinfidelis"},"content":"public class PatientList {","lastModifiedDate":"2021-09-30"},{"lineNumber":8,"author":{"gitId":"justinfidelis"},"content":"    private HashMap\u003cInteger, Patient\u003e patients \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-09-30"},{"lineNumber":9,"author":{"gitId":"justinfidelis"},"content":"    private int lastId \u003d 1;","lastModifiedDate":"2021-09-30"},{"lineNumber":10,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":11,"author":{"gitId":"justinfidelis"},"content":"    public int size() {","lastModifiedDate":"2021-09-30"},{"lineNumber":12,"author":{"gitId":"justinfidelis"},"content":"        return patients.size();","lastModifiedDate":"2021-09-30"},{"lineNumber":13,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":14,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":15,"author":{"gitId":"justinfidelis"},"content":"    public int addPatient(Patient patient) {","lastModifiedDate":"2021-09-30"},{"lineNumber":16,"author":{"gitId":"justinfidelis"},"content":"        int patientId \u003d generatePatientId();","lastModifiedDate":"2021-09-30"},{"lineNumber":17,"author":{"gitId":"justinfidelis"},"content":"        patient.setPatientId(patientId);","lastModifiedDate":"2021-09-30"},{"lineNumber":18,"author":{"gitId":"justinfidelis"},"content":"        patients.put(patientId, patient);","lastModifiedDate":"2021-09-30"},{"lineNumber":19,"author":{"gitId":"justinfidelis"},"content":"        return patientId;","lastModifiedDate":"2021-09-30"},{"lineNumber":20,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":21,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":22,"author":{"gitId":"justinfidelis"},"content":"    public String getPatientInfo(int patientId) throws MedBotException {","lastModifiedDate":"2021-09-30"},{"lineNumber":23,"author":{"gitId":"justinfidelis"},"content":"        if (!patients.containsKey(patientId)) {","lastModifiedDate":"2021-09-30"},{"lineNumber":24,"author":{"gitId":"EricBryann"},"content":"            throw new MedBotException(getNoPatientIdErrorMessage(patientId));","lastModifiedDate":"2021-10-06"},{"lineNumber":25,"author":{"gitId":"justinfidelis"},"content":"        }","lastModifiedDate":"2021-09-30"},{"lineNumber":26,"author":{"gitId":"justinfidelis"},"content":"        return patients.get(patientId).toString();","lastModifiedDate":"2021-09-30"},{"lineNumber":27,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":28,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":29,"author":{"gitId":"justinfidelis"},"content":"    private int generatePatientId() {","lastModifiedDate":"2021-09-30"},{"lineNumber":30,"author":{"gitId":"justinfidelis"},"content":"        while (patients.containsKey(lastId)) {","lastModifiedDate":"2021-09-30"},{"lineNumber":31,"author":{"gitId":"justinfidelis"},"content":"            lastId++;","lastModifiedDate":"2021-09-30"},{"lineNumber":32,"author":{"gitId":"justinfidelis"},"content":"        }","lastModifiedDate":"2021-09-30"},{"lineNumber":33,"author":{"gitId":"justinfidelis"},"content":"        return lastId;","lastModifiedDate":"2021-09-30"},{"lineNumber":34,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":35,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":36,"author":{"gitId":"jushg"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":37,"author":{"gitId":"jushg"},"content":"     * Replaces all values of the Patient data that is non-null in the new inputted data.","lastModifiedDate":"2021-10-05"},{"lineNumber":38,"author":{"gitId":"jushg"},"content":"     *","lastModifiedDate":"2021-10-05"},{"lineNumber":39,"author":{"gitId":"jushg"},"content":"     * @param oldPatientData the old patient data in the system","lastModifiedDate":"2021-10-05"},{"lineNumber":40,"author":{"gitId":"jushg"},"content":"     * @param newPatientData the new patient data inputted by the user","lastModifiedDate":"2021-10-05"},{"lineNumber":41,"author":{"gitId":"jushg"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":42,"author":{"gitId":"jushg"},"content":"    private void mergeEditPatientData(Patient oldPatientData, Patient newPatientData) {","lastModifiedDate":"2021-10-05"},{"lineNumber":43,"author":{"gitId":"jushg"},"content":"        if (newPatientData.getName() !\u003d null) {","lastModifiedDate":"2021-10-05"},{"lineNumber":44,"author":{"gitId":"jushg"},"content":"            oldPatientData.setName(newPatientData.getName());","lastModifiedDate":"2021-10-05"},{"lineNumber":45,"author":{"gitId":"jushg"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":46,"author":{"gitId":"jushg"},"content":"        if (newPatientData.getIcNumber() !\u003d null) {","lastModifiedDate":"2021-10-05"},{"lineNumber":47,"author":{"gitId":"jushg"},"content":"            oldPatientData.setIcNumber(newPatientData.getIcNumber());","lastModifiedDate":"2021-10-05"},{"lineNumber":48,"author":{"gitId":"jushg"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":49,"author":{"gitId":"jushg"},"content":"        if (newPatientData.getEmailAddress() !\u003d null) {","lastModifiedDate":"2021-10-05"},{"lineNumber":50,"author":{"gitId":"jushg"},"content":"            oldPatientData.setEmailAddress(newPatientData.getEmailAddress());","lastModifiedDate":"2021-10-05"},{"lineNumber":51,"author":{"gitId":"jushg"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":52,"author":{"gitId":"jushg"},"content":"        if (newPatientData.getPhoneNumber() !\u003d null) {","lastModifiedDate":"2021-10-05"},{"lineNumber":53,"author":{"gitId":"jushg"},"content":"            oldPatientData.setPhoneNumber(newPatientData.getPhoneNumber());","lastModifiedDate":"2021-10-05"},{"lineNumber":54,"author":{"gitId":"jushg"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":55,"author":{"gitId":"jushg"},"content":"        if (newPatientData.getResidentialAddress() !\u003d null) {","lastModifiedDate":"2021-10-05"},{"lineNumber":56,"author":{"gitId":"jushg"},"content":"            oldPatientData.setResidentialAddress(newPatientData.getResidentialAddress());","lastModifiedDate":"2021-10-05"},{"lineNumber":57,"author":{"gitId":"jushg"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":58,"author":{"gitId":"jushg"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":59,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":60,"author":{"gitId":"jushg"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":61,"author":{"gitId":"jushg"},"content":"     * Edits the specified fields on patient information with new values from the user.","lastModifiedDate":"2021-10-05"},{"lineNumber":62,"author":{"gitId":"jushg"},"content":"     *","lastModifiedDate":"2021-10-05"},{"lineNumber":63,"author":{"gitId":"jushg"},"content":"     * @param patientId      The patient with information to change","lastModifiedDate":"2021-10-05"},{"lineNumber":64,"author":{"gitId":"jushg"},"content":"     * @param newPatientData the new Patient data to change to (except the null fields)","lastModifiedDate":"2021-10-05"},{"lineNumber":65,"author":{"gitId":"jushg"},"content":"     * @throws MedBotException when the patient ID cannot be found","lastModifiedDate":"2021-10-05"},{"lineNumber":66,"author":{"gitId":"jushg"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":67,"author":{"gitId":"jushg"},"content":"    public void editPatient(int patientId, Patient newPatientData) throws MedBotException {","lastModifiedDate":"2021-10-05"},{"lineNumber":68,"author":{"gitId":"jushg"},"content":"        if (!patients.containsKey(patientId)) {","lastModifiedDate":"2021-10-05"},{"lineNumber":69,"author":{"gitId":"EricBryann"},"content":"            throw new MedBotException(getNoPatientIdErrorMessage(patientId));","lastModifiedDate":"2021-10-06"},{"lineNumber":70,"author":{"gitId":"jushg"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":71,"author":{"gitId":"jushg"},"content":"        assert (patientId \u003e 0) \u0026\u0026 (patientId \u003c\u003d size());","lastModifiedDate":"2021-10-13"},{"lineNumber":72,"author":{"gitId":"jushg"},"content":"        mergeEditPatientData(patients.get(patientId), newPatientData);","lastModifiedDate":"2021-10-13"},{"lineNumber":73,"author":{"gitId":"jushg"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":74,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":75,"author":{"gitId":"jushg"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":76,"author":{"gitId":"jushg"},"content":"     * Deletes the specified patient.","lastModifiedDate":"2021-10-13"},{"lineNumber":77,"author":{"gitId":"jushg"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":78,"author":{"gitId":"jushg"},"content":"     * @param patientId The patient to delete.","lastModifiedDate":"2021-10-13"},{"lineNumber":79,"author":{"gitId":"jushg"},"content":"     * @throws MedBotException when the patient ID cannot be found.","lastModifiedDate":"2021-10-13"},{"lineNumber":80,"author":{"gitId":"jushg"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":81,"author":{"gitId":"jushg"},"content":"    public void deletePatient(int patientId) throws MedBotException {","lastModifiedDate":"2021-10-13"},{"lineNumber":82,"author":{"gitId":"justinfidelis"},"content":"        if (!patients.containsKey(patientId)) {","lastModifiedDate":"2021-09-30"},{"lineNumber":83,"author":{"gitId":"EricBryann"},"content":"            throw new MedBotException(getNoPatientIdErrorMessage(patientId));","lastModifiedDate":"2021-10-06"},{"lineNumber":84,"author":{"gitId":"justinfidelis"},"content":"        }","lastModifiedDate":"2021-09-30"},{"lineNumber":85,"author":{"gitId":"jushg"},"content":"        assert (patientId \u003e 0) \u0026\u0026 (patientId \u003c\u003d size());","lastModifiedDate":"2021-10-13"},{"lineNumber":86,"author":{"gitId":"jushg"},"content":"        patients.remove(patientId);","lastModifiedDate":"2021-10-13"},{"lineNumber":87,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":88,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":89,"author":{"gitId":"jushg"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":90,"author":{"gitId":"jushg"},"content":"     * Lists all current patients.","lastModifiedDate":"2021-10-13"},{"lineNumber":91,"author":{"gitId":"jushg"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":92,"author":{"gitId":"jushg"},"content":"     * @return String displays the list of all current patients","lastModifiedDate":"2021-10-13"},{"lineNumber":93,"author":{"gitId":"jushg"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":94,"author":{"gitId":"EricBryann"},"content":"    public String listPatients() {","lastModifiedDate":"2021-10-06"},{"lineNumber":95,"author":{"gitId":"EricBryann"},"content":"        String output \u003d \"\";","lastModifiedDate":"2021-10-06"},{"lineNumber":96,"author":{"gitId":"justinfidelis"},"content":"        for (int key : patients.keySet()) {","lastModifiedDate":"2021-09-30"},{"lineNumber":97,"author":{"gitId":"justinfidelis"},"content":"            output +\u003d patients.get(key) + System.lineSeparator();","lastModifiedDate":"2021-10-13"},{"lineNumber":98,"author":{"gitId":"justinfidelis"},"content":"        }","lastModifiedDate":"2021-09-30"},{"lineNumber":99,"author":{"gitId":"EricBryann"},"content":"        return output;","lastModifiedDate":"2021-10-06"},{"lineNumber":100,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":101,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":102,"author":{"gitId":"EricBryann"},"content":"    private String getNoPatientIdErrorMessage(int patientId) {","lastModifiedDate":"2021-10-06"},{"lineNumber":103,"author":{"gitId":"EricBryann"},"content":"        return \"No patient with ID \" + patientId + \" found.\";","lastModifiedDate":"2021-10-06"},{"lineNumber":104,"author":{"gitId":"EricBryann"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":105,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":106,"author":{"gitId":"CrimsonTitan79"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":107,"author":{"gitId":"CrimsonTitan79"},"content":"     * Get storageString for all patients.","lastModifiedDate":"2021-10-09"},{"lineNumber":108,"author":{"gitId":"CrimsonTitan79"},"content":"     *","lastModifiedDate":"2021-10-08"},{"lineNumber":109,"author":{"gitId":"CrimsonTitan79"},"content":"     * @return storageString of all patients","lastModifiedDate":"2021-10-08"},{"lineNumber":110,"author":{"gitId":"CrimsonTitan79"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":111,"author":{"gitId":"CrimsonTitan79"},"content":"    public String getStorageString() {","lastModifiedDate":"2021-10-08"},{"lineNumber":112,"author":{"gitId":"CrimsonTitan79"},"content":"        String output \u003d \"\";","lastModifiedDate":"2021-10-08"},{"lineNumber":113,"author":{"gitId":"CrimsonTitan79"},"content":"        for (int key : patients.keySet()) {","lastModifiedDate":"2021-10-08"},{"lineNumber":114,"author":{"gitId":"CrimsonTitan79"},"content":"            Patient patient \u003d patients.get(key);","lastModifiedDate":"2021-10-08"},{"lineNumber":115,"author":{"gitId":"CrimsonTitan79"},"content":"            String patientStorageString \u003d patient.getStorageString();","lastModifiedDate":"2021-10-08"},{"lineNumber":116,"author":{"gitId":"justinfidelis"},"content":"            output +\u003d patientStorageString + System.lineSeparator();","lastModifiedDate":"2021-10-13"},{"lineNumber":117,"author":{"gitId":"CrimsonTitan79"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":118,"author":{"gitId":"CrimsonTitan79"},"content":"        return output;","lastModifiedDate":"2021-10-08"},{"lineNumber":119,"author":{"gitId":"CrimsonTitan79"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":120,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":121,"author":{"gitId":"CrimsonTitan79"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":122,"author":{"gitId":"CrimsonTitan79"},"content":"     * Adds a patient to patients hashmap.","lastModifiedDate":"2021-10-09"},{"lineNumber":123,"author":{"gitId":"CrimsonTitan79"},"content":"     *","lastModifiedDate":"2021-10-08"},{"lineNumber":124,"author":{"gitId":"CrimsonTitan79"},"content":"     * @param patient an instance of Patient","lastModifiedDate":"2021-10-08"},{"lineNumber":125,"author":{"gitId":"CrimsonTitan79"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":126,"author":{"gitId":"CrimsonTitan79"},"content":"    public void addPatientFromStorage(Patient patient) {","lastModifiedDate":"2021-10-08"},{"lineNumber":127,"author":{"gitId":"CrimsonTitan79"},"content":"        int patientId \u003d patient.getPatientId();","lastModifiedDate":"2021-10-08"},{"lineNumber":128,"author":{"gitId":"CrimsonTitan79"},"content":"        patients.put(patientId, patient);","lastModifiedDate":"2021-10-08"},{"lineNumber":129,"author":{"gitId":"CrimsonTitan79"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":130,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":131,"author":{"gitId":"CrimsonTitan79"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":132,"author":{"gitId":"CrimsonTitan79"},"content":"     * Set lastId to a new number.","lastModifiedDate":"2021-10-09"},{"lineNumber":133,"author":{"gitId":"CrimsonTitan79"},"content":"     *","lastModifiedDate":"2021-10-08"},{"lineNumber":134,"author":{"gitId":"CrimsonTitan79"},"content":"     * @param newLastId lastId to be set to this","lastModifiedDate":"2021-10-08"},{"lineNumber":135,"author":{"gitId":"CrimsonTitan79"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":136,"author":{"gitId":"CrimsonTitan79"},"content":"    public void setLastId(int newLastId) {","lastModifiedDate":"2021-10-08"},{"lineNumber":137,"author":{"gitId":"CrimsonTitan79"},"content":"        lastId \u003d newLastId;","lastModifiedDate":"2021-10-08"},{"lineNumber":138,"author":{"gitId":"CrimsonTitan79"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":139,"author":{"gitId":"justinfidelis"},"content":"}","lastModifiedDate":"2021-09-30"}],"authorContributionMap":{"justinfidelis":42,"CrimsonTitan79":33,"jushg":52,"EricBryann":12}},{"path":"src/main/java/medbot/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"CrimsonTitan79"},"content":"package medbot;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"CrimsonTitan79"},"content":"import medbot.person.Patient;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"CrimsonTitan79"},"content":"import medbot.utilities.Pair;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"CrimsonTitan79"},"content":"import static medbot.Parser.updatePersonalInformation;","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"CrimsonTitan79"},"content":"import static medbot.Ui.VERTICAL_LINE_SPACED_ESCAPED;","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"CrimsonTitan79"},"content":"import java.io.File;","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"CrimsonTitan79"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"CrimsonTitan79"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"CrimsonTitan79"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"CrimsonTitan79"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"CrimsonTitan79"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"CrimsonTitan79"},"content":"public class Storage {","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"CrimsonTitan79"},"content":"    private static final String DEFAULT_DATA_PATH \u003d \"storage/data.txt\";","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"CrimsonTitan79"},"content":"    private static final String CREATED_NEW_FILE \u003d \"New data file created.\";","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"CrimsonTitan79"},"content":"    private static final String ERROR_LOAD_STORAGE \u003d \"Error: Unable to load data file.\";","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"CrimsonTitan79"},"content":"    private static final String ERROR_SAVE_STORAGE \u003d \"Error: Unable to save data.\";","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"CrimsonTitan79"},"content":"    private static final String ERROR_INVALID_STORAGE_LINE_INSTRUCTION \u003d \"\\n\\n\"","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"CrimsonTitan79"},"content":"            + \"Please decide if you wish to:\" + \"\\n\"","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"CrimsonTitan79"},"content":"            + \"1. Enter \u0027exit\u0027 to exit Medbot to correct the storage file\" + \"\\n\"","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"CrimsonTitan79"},"content":"            + \"2. Enter other valid commands to OVERWRITE all invalid data!\" + \"\\n\";","lastModifiedDate":"2021-10-09"},{"lineNumber":28,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"CrimsonTitan79"},"content":"    private static File dataFile;","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"CrimsonTitan79"},"content":"    private static String actualDataPath;","lastModifiedDate":"2021-10-10"},{"lineNumber":31,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"CrimsonTitan79"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"CrimsonTitan79"},"content":"     * Constructor","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"CrimsonTitan79"},"content":"     * which creates a storage/data.txt file if it doesn\u0027t exist.","lastModifiedDate":"2021-10-10"},{"lineNumber":35,"author":{"gitId":"CrimsonTitan79"},"content":"     *","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"CrimsonTitan79"},"content":"     * @throws MedBotException if storage/data.txt cannot be created and does not exist","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"CrimsonTitan79"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"CrimsonTitan79"},"content":"    public Storage() throws MedBotException {","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"CrimsonTitan79"},"content":"        this(DEFAULT_DATA_PATH);","lastModifiedDate":"2021-10-10"},{"lineNumber":40,"author":{"gitId":"CrimsonTitan79"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":41,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":42,"author":{"gitId":"CrimsonTitan79"},"content":"    public Storage(String dataPath) throws MedBotException {","lastModifiedDate":"2021-10-10"},{"lineNumber":43,"author":{"gitId":"CrimsonTitan79"},"content":"        try {","lastModifiedDate":"2021-10-08"},{"lineNumber":44,"author":{"gitId":"CrimsonTitan79"},"content":"            actualDataPath \u003d dataPath;","lastModifiedDate":"2021-10-10"},{"lineNumber":45,"author":{"gitId":"CrimsonTitan79"},"content":"            dataFile \u003d new File(actualDataPath);","lastModifiedDate":"2021-10-10"},{"lineNumber":46,"author":{"gitId":"CrimsonTitan79"},"content":"            dataFile.getParentFile().mkdirs();","lastModifiedDate":"2021-10-10"},{"lineNumber":47,"author":{"gitId":"CrimsonTitan79"},"content":"            dataFile.createNewFile();","lastModifiedDate":"2021-10-10"},{"lineNumber":48,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":49,"author":{"gitId":"CrimsonTitan79"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-10-08"},{"lineNumber":50,"author":{"gitId":"CrimsonTitan79"},"content":"            throw new MedBotException(ERROR_LOAD_STORAGE);","lastModifiedDate":"2021-10-08"},{"lineNumber":51,"author":{"gitId":"CrimsonTitan79"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":52,"author":{"gitId":"CrimsonTitan79"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":53,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":54,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":55,"author":{"gitId":"CrimsonTitan79"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":56,"author":{"gitId":"CrimsonTitan79"},"content":"     * Reads in storage/data.txt file, parses each line and adds the data into the program","lastModifiedDate":"2021-10-08"},{"lineNumber":57,"author":{"gitId":"CrimsonTitan79"},"content":"     * returns all line numbers of storage/data.txt that are invalid","lastModifiedDate":"2021-10-13"},{"lineNumber":58,"author":{"gitId":"CrimsonTitan79"},"content":"     *","lastModifiedDate":"2021-10-08"},{"lineNumber":59,"author":{"gitId":"CrimsonTitan79"},"content":"     * @param patientList instance of PatientList","lastModifiedDate":"2021-10-08"},{"lineNumber":60,"author":{"gitId":"CrimsonTitan79"},"content":"     * @return Error message if there are formatting errors in storage/data.txt","lastModifiedDate":"2021-10-13"},{"lineNumber":61,"author":{"gitId":"CrimsonTitan79"},"content":"     * @throws FileNotFoundException if storage/data.txt cannot be found","lastModifiedDate":"2021-10-08"},{"lineNumber":62,"author":{"gitId":"CrimsonTitan79"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":63,"author":{"gitId":"CrimsonTitan79"},"content":"    public String loadStorage(PatientList patientList) throws FileNotFoundException {","lastModifiedDate":"2021-10-10"},{"lineNumber":64,"author":{"gitId":"CrimsonTitan79"},"content":"        int lineNumber \u003d 1;","lastModifiedDate":"2021-10-08"},{"lineNumber":65,"author":{"gitId":"CrimsonTitan79"},"content":"        int lastId \u003d 1;","lastModifiedDate":"2021-10-08"},{"lineNumber":66,"author":{"gitId":"CrimsonTitan79"},"content":"        Scanner s \u003d new Scanner(dataFile);","lastModifiedDate":"2021-10-10"},{"lineNumber":67,"author":{"gitId":"CrimsonTitan79"},"content":"        String loadStorageErrorMessage \u003d \"\";","lastModifiedDate":"2021-10-10"},{"lineNumber":68,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":69,"author":{"gitId":"CrimsonTitan79"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2021-10-08"},{"lineNumber":70,"author":{"gitId":"CrimsonTitan79"},"content":"            Patient patient;","lastModifiedDate":"2021-10-10"},{"lineNumber":71,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":72,"author":{"gitId":"CrimsonTitan79"},"content":"            try {","lastModifiedDate":"2021-10-08"},{"lineNumber":73,"author":{"gitId":"CrimsonTitan79"},"content":"                String storageLine \u003d s.nextLine();","lastModifiedDate":"2021-10-13"},{"lineNumber":74,"author":{"gitId":"CrimsonTitan79"},"content":"                Pair\u003cInteger, ArrayList\u003cString\u003e\u003e patientDetails \u003d parseStorageLine(storageLine);","lastModifiedDate":"2021-10-13"},{"lineNumber":75,"author":{"gitId":"CrimsonTitan79"},"content":"                patient \u003d createPatient(patientDetails);","lastModifiedDate":"2021-10-13"},{"lineNumber":76,"author":{"gitId":"CrimsonTitan79"},"content":"                patientList.addPatientFromStorage(patient);","lastModifiedDate":"2021-10-08"},{"lineNumber":77,"author":{"gitId":"CrimsonTitan79"},"content":"                lastId \u003d patient.getPatientId();","lastModifiedDate":"2021-10-10"},{"lineNumber":78,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":79,"author":{"gitId":"CrimsonTitan79"},"content":"            } catch (Exception e) {","lastModifiedDate":"2021-10-08"},{"lineNumber":80,"author":{"gitId":"CrimsonTitan79"},"content":"                loadStorageErrorMessage +\u003d loadStorageLineErrorMessage(lineNumber);","lastModifiedDate":"2021-10-13"},{"lineNumber":81,"author":{"gitId":"CrimsonTitan79"},"content":"            }","lastModifiedDate":"2021-10-08"},{"lineNumber":82,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":83,"author":{"gitId":"CrimsonTitan79"},"content":"            lineNumber++;","lastModifiedDate":"2021-10-08"},{"lineNumber":84,"author":{"gitId":"CrimsonTitan79"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":85,"author":{"gitId":"CrimsonTitan79"},"content":"        patientList.setLastId(lastId);","lastModifiedDate":"2021-10-08"},{"lineNumber":86,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":87,"author":{"gitId":"CrimsonTitan79"},"content":"        if (!loadStorageErrorMessage.isBlank()) {","lastModifiedDate":"2021-10-10"},{"lineNumber":88,"author":{"gitId":"CrimsonTitan79"},"content":"            loadStorageErrorMessage +\u003d ERROR_INVALID_STORAGE_LINE_INSTRUCTION;","lastModifiedDate":"2021-10-13"},{"lineNumber":89,"author":{"gitId":"CrimsonTitan79"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":90,"author":{"gitId":"CrimsonTitan79"},"content":"        return loadStorageErrorMessage;","lastModifiedDate":"2021-10-10"},{"lineNumber":91,"author":{"gitId":"CrimsonTitan79"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":92,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":93,"author":{"gitId":"CrimsonTitan79"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":94,"author":{"gitId":"CrimsonTitan79"},"content":"     * Parse a line from storage/data.txt by splitting its constituent parts.","lastModifiedDate":"2021-10-13"},{"lineNumber":95,"author":{"gitId":"CrimsonTitan79"},"content":"     *","lastModifiedDate":"2021-10-08"},{"lineNumber":96,"author":{"gitId":"CrimsonTitan79"},"content":"     * @param storageLine a line from storage/data.txt","lastModifiedDate":"2021-10-08"},{"lineNumber":97,"author":{"gitId":"CrimsonTitan79"},"content":"     * @return patient details, consisting of patient ID and other parameters","lastModifiedDate":"2021-10-13"},{"lineNumber":98,"author":{"gitId":"CrimsonTitan79"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":99,"author":{"gitId":"CrimsonTitan79"},"content":"    private static Pair\u003cInteger, ArrayList\u003cString\u003e\u003e parseStorageLine(String storageLine) {","lastModifiedDate":"2021-10-13"},{"lineNumber":100,"author":{"gitId":"CrimsonTitan79"},"content":"        if (storageLine.isBlank()) {","lastModifiedDate":"2021-10-08"},{"lineNumber":101,"author":{"gitId":"CrimsonTitan79"},"content":"            return null;","lastModifiedDate":"2021-10-08"},{"lineNumber":102,"author":{"gitId":"CrimsonTitan79"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":103,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":104,"author":{"gitId":"CrimsonTitan79"},"content":"        String[] personParameters \u003d splitStorageLine(storageLine);","lastModifiedDate":"2021-10-13"},{"lineNumber":105,"author":{"gitId":"CrimsonTitan79"},"content":"        String[] parameterPrefixes \u003d {\"i/\", \"n/\", \"p/\", \"e/\", \"a/\"};","lastModifiedDate":"2021-10-08"},{"lineNumber":106,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":107,"author":{"gitId":"CrimsonTitan79"},"content":"        ArrayList\u003cString\u003e prefixPlusPersonParameters \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-08"},{"lineNumber":108,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":109,"author":{"gitId":"CrimsonTitan79"},"content":"        Integer patientId \u003d Integer.parseInt(personParameters[0]);","lastModifiedDate":"2021-10-13"},{"lineNumber":110,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":111,"author":{"gitId":"CrimsonTitan79"},"content":"        for (int i \u003d 0; i \u003c parameterPrefixes.length; i++) {","lastModifiedDate":"2021-10-08"},{"lineNumber":112,"author":{"gitId":"CrimsonTitan79"},"content":"            // i + 1, since personParameters[0] is the patientId","lastModifiedDate":"2021-10-13"},{"lineNumber":113,"author":{"gitId":"CrimsonTitan79"},"content":"            if (isStorageParameterNull(personParameters[i + 1])) {","lastModifiedDate":"2021-10-08"},{"lineNumber":114,"author":{"gitId":"CrimsonTitan79"},"content":"                continue;","lastModifiedDate":"2021-10-08"},{"lineNumber":115,"author":{"gitId":"CrimsonTitan79"},"content":"            }","lastModifiedDate":"2021-10-08"},{"lineNumber":116,"author":{"gitId":"CrimsonTitan79"},"content":"            // i + 1, since personParameters[0] is the patientId","lastModifiedDate":"2021-10-13"},{"lineNumber":117,"author":{"gitId":"CrimsonTitan79"},"content":"            String prefixPlusPersonParameter \u003d parameterPrefixes[i] + personParameters[i + 1];","lastModifiedDate":"2021-10-08"},{"lineNumber":118,"author":{"gitId":"CrimsonTitan79"},"content":"            prefixPlusPersonParameters.add(prefixPlusPersonParameter);","lastModifiedDate":"2021-10-08"},{"lineNumber":119,"author":{"gitId":"CrimsonTitan79"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":120,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":121,"author":{"gitId":"CrimsonTitan79"},"content":"        assert personParameters.length \u003d\u003d parameterPrefixes.length + 1;","lastModifiedDate":"2021-10-13"},{"lineNumber":122,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":123,"author":{"gitId":"CrimsonTitan79"},"content":"        return new Pair\u003c\u003e(patientId, prefixPlusPersonParameters);","lastModifiedDate":"2021-10-13"},{"lineNumber":124,"author":{"gitId":"CrimsonTitan79"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":125,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":126,"author":{"gitId":"CrimsonTitan79"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":127,"author":{"gitId":"CrimsonTitan79"},"content":"     * Create a patient object from the given parameters/details.","lastModifiedDate":"2021-10-13"},{"lineNumber":128,"author":{"gitId":"CrimsonTitan79"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":129,"author":{"gitId":"CrimsonTitan79"},"content":"     * @param patientDetails contains all the parameters of the patient, eg. i/S8712345A","lastModifiedDate":"2021-10-13"},{"lineNumber":130,"author":{"gitId":"CrimsonTitan79"},"content":"     * @return a patient object with the given parameters. return null if patientDetails \u003d\u003d null","lastModifiedDate":"2021-10-13"},{"lineNumber":131,"author":{"gitId":"CrimsonTitan79"},"content":"     * @throws MedBotException if fail to update patient\u0027s personal information","lastModifiedDate":"2021-10-13"},{"lineNumber":132,"author":{"gitId":"CrimsonTitan79"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":133,"author":{"gitId":"CrimsonTitan79"},"content":"    private Patient createPatient(Pair\u003cInteger, ArrayList\u003cString\u003e\u003e patientDetails) throws MedBotException {","lastModifiedDate":"2021-10-13"},{"lineNumber":134,"author":{"gitId":"CrimsonTitan79"},"content":"        if (patientDetails \u003d\u003d null) {","lastModifiedDate":"2021-10-13"},{"lineNumber":135,"author":{"gitId":"CrimsonTitan79"},"content":"            return null;","lastModifiedDate":"2021-10-13"},{"lineNumber":136,"author":{"gitId":"CrimsonTitan79"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":137,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":138,"author":{"gitId":"CrimsonTitan79"},"content":"        Patient patient \u003d new Patient();","lastModifiedDate":"2021-10-08"},{"lineNumber":139,"author":{"gitId":"CrimsonTitan79"},"content":"        int patientId \u003d patientDetails.first;","lastModifiedDate":"2021-10-13"},{"lineNumber":140,"author":{"gitId":"CrimsonTitan79"},"content":"        ArrayList\u003cString\u003e prefixPlusPersonParameters \u003d patientDetails.second;","lastModifiedDate":"2021-10-13"},{"lineNumber":141,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":142,"author":{"gitId":"CrimsonTitan79"},"content":"        patient.setPatientId(patientId);","lastModifiedDate":"2021-10-08"},{"lineNumber":143,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":144,"author":{"gitId":"CrimsonTitan79"},"content":"        for (String prefixPlusPersonParameter : prefixPlusPersonParameters) {","lastModifiedDate":"2021-10-08"},{"lineNumber":145,"author":{"gitId":"CrimsonTitan79"},"content":"            //updatePersonalInformation does error-checking of patient details","lastModifiedDate":"2021-10-13"},{"lineNumber":146,"author":{"gitId":"CrimsonTitan79"},"content":"            //in addition to updating patient info","lastModifiedDate":"2021-10-13"},{"lineNumber":147,"author":{"gitId":"CrimsonTitan79"},"content":"            updatePersonalInformation(patient, prefixPlusPersonParameter);","lastModifiedDate":"2021-10-08"},{"lineNumber":148,"author":{"gitId":"CrimsonTitan79"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":149,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":150,"author":{"gitId":"CrimsonTitan79"},"content":"        return patient;","lastModifiedDate":"2021-10-08"},{"lineNumber":151,"author":{"gitId":"CrimsonTitan79"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":152,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":153,"author":{"gitId":"CrimsonTitan79"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":154,"author":{"gitId":"CrimsonTitan79"},"content":"     * String split a line with \" | \" as the delimiters.","lastModifiedDate":"2021-10-13"},{"lineNumber":155,"author":{"gitId":"CrimsonTitan79"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":156,"author":{"gitId":"CrimsonTitan79"},"content":"     * @param storageLine a line in storage/data.txt","lastModifiedDate":"2021-10-13"},{"lineNumber":157,"author":{"gitId":"CrimsonTitan79"},"content":"     * @return String[] with the parameters separated in different indexes in the array","lastModifiedDate":"2021-10-13"},{"lineNumber":158,"author":{"gitId":"CrimsonTitan79"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":159,"author":{"gitId":"CrimsonTitan79"},"content":"    private static String[] splitStorageLine(String storageLine) {","lastModifiedDate":"2021-10-13"},{"lineNumber":160,"author":{"gitId":"CrimsonTitan79"},"content":"        return storageLine.split(VERTICAL_LINE_SPACED_ESCAPED);","lastModifiedDate":"2021-10-13"},{"lineNumber":161,"author":{"gitId":"CrimsonTitan79"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":162,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":163,"author":{"gitId":"CrimsonTitan79"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":164,"author":{"gitId":"CrimsonTitan79"},"content":"     * True if \"X\", which means the parameter is null, false otherwise.","lastModifiedDate":"2021-10-09"},{"lineNumber":165,"author":{"gitId":"CrimsonTitan79"},"content":"     *","lastModifiedDate":"2021-10-09"},{"lineNumber":166,"author":{"gitId":"CrimsonTitan79"},"content":"     * @param parameter a parameter in a line of storage/data.txt","lastModifiedDate":"2021-10-08"},{"lineNumber":167,"author":{"gitId":"CrimsonTitan79"},"content":"     * @return true if \"X\", which means the parameter is null, false otherwise","lastModifiedDate":"2021-10-08"},{"lineNumber":168,"author":{"gitId":"CrimsonTitan79"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":169,"author":{"gitId":"CrimsonTitan79"},"content":"    private static boolean isStorageParameterNull(String parameter) {","lastModifiedDate":"2021-10-08"},{"lineNumber":170,"author":{"gitId":"CrimsonTitan79"},"content":"        return parameter.equals(\"X\");","lastModifiedDate":"2021-10-08"},{"lineNumber":171,"author":{"gitId":"CrimsonTitan79"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":172,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":173,"author":{"gitId":"CrimsonTitan79"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":174,"author":{"gitId":"CrimsonTitan79"},"content":"     * Write patientList storageString to storage/data.txt.","lastModifiedDate":"2021-10-13"},{"lineNumber":175,"author":{"gitId":"CrimsonTitan79"},"content":"     *","lastModifiedDate":"2021-10-08"},{"lineNumber":176,"author":{"gitId":"CrimsonTitan79"},"content":"     * @param patientList instance of PatientList","lastModifiedDate":"2021-10-08"},{"lineNumber":177,"author":{"gitId":"CrimsonTitan79"},"content":"     * @throws MedBotException if unable to write to storage/data.txt","lastModifiedDate":"2021-10-08"},{"lineNumber":178,"author":{"gitId":"CrimsonTitan79"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":179,"author":{"gitId":"CrimsonTitan79"},"content":"    public void saveData(PatientList patientList) throws MedBotException {","lastModifiedDate":"2021-10-08"},{"lineNumber":180,"author":{"gitId":"CrimsonTitan79"},"content":"        try {","lastModifiedDate":"2021-10-08"},{"lineNumber":181,"author":{"gitId":"CrimsonTitan79"},"content":"            FileWriter fw \u003d new FileWriter(actualDataPath);","lastModifiedDate":"2021-10-10"},{"lineNumber":182,"author":{"gitId":"CrimsonTitan79"},"content":"            fw.write(patientList.getStorageString());","lastModifiedDate":"2021-10-08"},{"lineNumber":183,"author":{"gitId":"CrimsonTitan79"},"content":"            fw.close();","lastModifiedDate":"2021-10-08"},{"lineNumber":184,"author":{"gitId":"CrimsonTitan79"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-10-08"},{"lineNumber":185,"author":{"gitId":"CrimsonTitan79"},"content":"            throw new MedBotException(ERROR_SAVE_STORAGE);","lastModifiedDate":"2021-10-08"},{"lineNumber":186,"author":{"gitId":"CrimsonTitan79"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":187,"author":{"gitId":"CrimsonTitan79"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":188,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":189,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":190,"author":{"gitId":"CrimsonTitan79"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":191,"author":{"gitId":"CrimsonTitan79"},"content":"     * Error message that shows the line number of a line in storage/data.txt with improper formatting.","lastModifiedDate":"2021-10-13"},{"lineNumber":192,"author":{"gitId":"CrimsonTitan79"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":193,"author":{"gitId":"CrimsonTitan79"},"content":"     * @param lineNumber the line number with improper formatting in storage/data.txt","lastModifiedDate":"2021-10-13"},{"lineNumber":194,"author":{"gitId":"CrimsonTitan79"},"content":"     * @return Error message","lastModifiedDate":"2021-10-13"},{"lineNumber":195,"author":{"gitId":"CrimsonTitan79"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":196,"author":{"gitId":"CrimsonTitan79"},"content":"    private String loadStorageLineErrorMessage(int lineNumber) {","lastModifiedDate":"2021-10-13"},{"lineNumber":197,"author":{"gitId":"CrimsonTitan79"},"content":"        return \"Error: Line \" + lineNumber + \" of \" + DEFAULT_DATA_PATH","lastModifiedDate":"2021-10-10"},{"lineNumber":198,"author":{"gitId":"CrimsonTitan79"},"content":"                + \" is invalid!\\n\";","lastModifiedDate":"2021-10-13"},{"lineNumber":199,"author":{"gitId":"CrimsonTitan79"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":200,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":201,"author":{"gitId":"CrimsonTitan79"},"content":"}","lastModifiedDate":"2021-10-08"},{"lineNumber":202,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"CrimsonTitan79":202}},{"path":"src/main/java/medbot/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"justinfidelis"},"content":"package medbot;","lastModifiedDate":"2021-09-30"},{"lineNumber":2,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":3,"author":{"gitId":"justinfidelis"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-09-30"},{"lineNumber":4,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":5,"author":{"gitId":"EricBryann"},"content":"/**","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"EricBryann"},"content":" * Represents a UI class that interacts with User","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"EricBryann"},"content":" * (Reading user input and printing message to users).","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"EricBryann"},"content":" */","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"justinfidelis"},"content":"public class Ui {","lastModifiedDate":"2021-09-30"},{"lineNumber":10,"author":{"gitId":"CrimsonTitan79"},"content":"    public static final String VERTICAL_LINE_SPACED_ESCAPED \u003d \" \\\\| \";","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"CrimsonTitan79"},"content":"    public static final String VERTICAL_LINE_SPACED \u003d \" | \";","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"justinfidelis"},"content":"    private Scanner inputScanner \u003d new Scanner(System.in);","lastModifiedDate":"2021-09-30"},{"lineNumber":14,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":15,"author":{"gitId":"justinfidelis"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":16,"author":{"gitId":"justinfidelis"},"content":"     * Gets user input from terminal and returns it as a String.","lastModifiedDate":"2021-09-30"},{"lineNumber":17,"author":{"gitId":"justinfidelis"},"content":"     *","lastModifiedDate":"2021-09-30"},{"lineNumber":18,"author":{"gitId":"justinfidelis"},"content":"     * @return the String containing the user input.","lastModifiedDate":"2021-09-30"},{"lineNumber":19,"author":{"gitId":"justinfidelis"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":20,"author":{"gitId":"justinfidelis"},"content":"    public String readInput() {","lastModifiedDate":"2021-09-30"},{"lineNumber":21,"author":{"gitId":"justinfidelis"},"content":"        String line;","lastModifiedDate":"2021-09-30"},{"lineNumber":22,"author":{"gitId":"justinfidelis"},"content":"        line \u003d inputScanner.nextLine();","lastModifiedDate":"2021-09-30"},{"lineNumber":23,"author":{"gitId":"justinfidelis"},"content":"        return line;","lastModifiedDate":"2021-09-30"},{"lineNumber":24,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":25,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":26,"author":{"gitId":"EricBryann"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":27,"author":{"gitId":"EricBryann"},"content":"     * Prints a message.","lastModifiedDate":"2021-10-06"},{"lineNumber":28,"author":{"gitId":"EricBryann"},"content":"     *","lastModifiedDate":"2021-10-06"},{"lineNumber":29,"author":{"gitId":"EricBryann"},"content":"     * @param outputMessage the message to be printed","lastModifiedDate":"2021-10-06"},{"lineNumber":30,"author":{"gitId":"EricBryann"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":31,"author":{"gitId":"justinfidelis"},"content":"    public void printOutput(String outputMessage) {","lastModifiedDate":"2021-09-30"},{"lineNumber":32,"author":{"gitId":"justinfidelis"},"content":"        System.out.println(outputMessage);","lastModifiedDate":"2021-09-30"},{"lineNumber":33,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":34,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":35,"author":{"gitId":"EricBryann"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":36,"author":{"gitId":"EricBryann"},"content":"     * Prints a welcome message when MedBot is first loaded.","lastModifiedDate":"2021-10-06"},{"lineNumber":37,"author":{"gitId":"EricBryann"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":38,"author":{"gitId":"CrimsonTitan79"},"content":"    public void printWelcomeMessageOne() {","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"CrimsonTitan79"},"content":"        printOutput(\"Hello, I\u0027m MedBot!\" + System.lineSeparator());","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"CrimsonTitan79"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"EricBryann"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":43,"author":{"gitId":"EricBryann"},"content":"     * Prints a welcome message when MedBot file storage is successfully loaded.","lastModifiedDate":"2021-10-13"},{"lineNumber":44,"author":{"gitId":"EricBryann"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":45,"author":{"gitId":"CrimsonTitan79"},"content":"    public void printWelcomeMessageTwo() {","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"justinfidelis"},"content":"        printOutput(\"How can I help you today?\" + System.lineSeparator() + System.lineSeparator());","lastModifiedDate":"2021-10-13"},{"lineNumber":47,"author":{"gitId":"EricBryann"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":48,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":49,"author":{"gitId":"EricBryann"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":50,"author":{"gitId":"EricBryann"},"content":"     * Returns a message when successfully add a patient to a list.","lastModifiedDate":"2021-10-06"},{"lineNumber":51,"author":{"gitId":"EricBryann"},"content":"     *","lastModifiedDate":"2021-10-06"},{"lineNumber":52,"author":{"gitId":"EricBryann"},"content":"     * @param patientId the ID of the patient to be added","lastModifiedDate":"2021-10-06"},{"lineNumber":53,"author":{"gitId":"EricBryann"},"content":"     * @return the Successful Message","lastModifiedDate":"2021-10-06"},{"lineNumber":54,"author":{"gitId":"EricBryann"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":55,"author":{"gitId":"EricBryann"},"content":"    public String getAddPatientMessage(int patientId) {","lastModifiedDate":"2021-10-06"},{"lineNumber":56,"author":{"gitId":"EricBryann"},"content":"        assert patientId \u003e 0;","lastModifiedDate":"2021-10-13"},{"lineNumber":57,"author":{"gitId":"EricBryann"},"content":"        return \"Added patient with patient ID: \" + patientId;","lastModifiedDate":"2021-10-06"},{"lineNumber":58,"author":{"gitId":"EricBryann"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":59,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":60,"author":{"gitId":"EricBryann"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":61,"author":{"gitId":"EricBryann"},"content":"     * Returns a message when successfully delete a patient from a list.","lastModifiedDate":"2021-10-06"},{"lineNumber":62,"author":{"gitId":"EricBryann"},"content":"     *","lastModifiedDate":"2021-10-06"},{"lineNumber":63,"author":{"gitId":"EricBryann"},"content":"     * @param patientId the ID of the patient to be deleted.","lastModifiedDate":"2021-10-06"},{"lineNumber":64,"author":{"gitId":"EricBryann"},"content":"     * @return the Successful Message","lastModifiedDate":"2021-10-06"},{"lineNumber":65,"author":{"gitId":"EricBryann"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":66,"author":{"gitId":"EricBryann"},"content":"    public String getDeletePatientMessage(int patientId) {","lastModifiedDate":"2021-10-06"},{"lineNumber":67,"author":{"gitId":"EricBryann"},"content":"        assert patientId \u003e 0;","lastModifiedDate":"2021-10-13"},{"lineNumber":68,"author":{"gitId":"EricBryann"},"content":"        return \"Patient with id \" + patientId + \" deleted from system.\";","lastModifiedDate":"2021-10-06"},{"lineNumber":69,"author":{"gitId":"EricBryann"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":70,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":71,"author":{"gitId":"EricBryann"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":72,"author":{"gitId":"EricBryann"},"content":"     * Returns a message when successfully edit a patient in a list.","lastModifiedDate":"2021-10-06"},{"lineNumber":73,"author":{"gitId":"EricBryann"},"content":"     *","lastModifiedDate":"2021-10-06"},{"lineNumber":74,"author":{"gitId":"EricBryann"},"content":"     * @param patientId the ID of the patient to be edited.","lastModifiedDate":"2021-10-06"},{"lineNumber":75,"author":{"gitId":"EricBryann"},"content":"     * @return the Successful Message","lastModifiedDate":"2021-10-06"},{"lineNumber":76,"author":{"gitId":"EricBryann"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":77,"author":{"gitId":"EricBryann"},"content":"    public String getEditPatientMessage(int patientId, String patientInfo) {","lastModifiedDate":"2021-10-06"},{"lineNumber":78,"author":{"gitId":"EricBryann"},"content":"        assert patientId \u003e 0;","lastModifiedDate":"2021-10-13"},{"lineNumber":79,"author":{"gitId":"EricBryann"},"content":"        return \"The information of patient with ID \" + patientId + \" has been edited to:\"","lastModifiedDate":"2021-10-06"},{"lineNumber":80,"author":{"gitId":"EricBryann"},"content":"                + System.lineSeparator() + patientInfo;","lastModifiedDate":"2021-10-06"},{"lineNumber":81,"author":{"gitId":"EricBryann"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":82,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":83,"author":{"gitId":"EricBryann"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":84,"author":{"gitId":"EricBryann"},"content":"     * Prints an exit message when MedBot is exiting.","lastModifiedDate":"2021-10-06"},{"lineNumber":85,"author":{"gitId":"Kureans"},"content":"     *","lastModifiedDate":"2021-10-07"},{"lineNumber":86,"author":{"gitId":"EricBryann"},"content":"     * @return the exit Message","lastModifiedDate":"2021-10-06"},{"lineNumber":87,"author":{"gitId":"EricBryann"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":88,"author":{"gitId":"EricBryann"},"content":"    public String getExitMessage() {","lastModifiedDate":"2021-10-06"},{"lineNumber":89,"author":{"gitId":"justinfidelis"},"content":"        return \"Thank you for using MedBot!\" + System.lineSeparator() + \"See you again!\";","lastModifiedDate":"2021-10-13"},{"lineNumber":90,"author":{"gitId":"EricBryann"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":91,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":92,"author":{"gitId":"EricBryann"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":93,"author":{"gitId":"EricBryann"},"content":"     * Prints a message when viewing the profile of a patient.","lastModifiedDate":"2021-10-06"},{"lineNumber":94,"author":{"gitId":"EricBryann"},"content":"     *","lastModifiedDate":"2021-10-06"},{"lineNumber":95,"author":{"gitId":"EricBryann"},"content":"     * @param patientInfo the Info of the patient to be printed.","lastModifiedDate":"2021-10-06"},{"lineNumber":96,"author":{"gitId":"EricBryann"},"content":"     * @return the Patient information","lastModifiedDate":"2021-10-06"},{"lineNumber":97,"author":{"gitId":"EricBryann"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":98,"author":{"gitId":"Kureans"},"content":"    public String getPatientInfo(String patientInfo) {","lastModifiedDate":"2021-10-12"},{"lineNumber":99,"author":{"gitId":"justinfidelis"},"content":"        return \"Here\u0027s the requested patient:\" + System.lineSeparator() + patientInfo;","lastModifiedDate":"2021-10-13"},{"lineNumber":100,"author":{"gitId":"EricBryann"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":101,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":102,"author":{"gitId":"EricBryann"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":103,"author":{"gitId":"EricBryann"},"content":"     * Prints all patients in a list.","lastModifiedDate":"2021-10-06"},{"lineNumber":104,"author":{"gitId":"EricBryann"},"content":"     *","lastModifiedDate":"2021-10-06"},{"lineNumber":105,"author":{"gitId":"EricBryann"},"content":"     * @param patientList the list containing patients to be printed.","lastModifiedDate":"2021-10-06"},{"lineNumber":106,"author":{"gitId":"EricBryann"},"content":"     * @return all Patients\u0027 information.","lastModifiedDate":"2021-10-06"},{"lineNumber":107,"author":{"gitId":"EricBryann"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":108,"author":{"gitId":"EricBryann"},"content":"    public String getAllPatientsString(PatientList patientList) {","lastModifiedDate":"2021-10-06"},{"lineNumber":109,"author":{"gitId":"justinfidelis"},"content":"        String output \u003d \"Here is a list of all patients:\" + System.lineSeparator();","lastModifiedDate":"2021-10-13"},{"lineNumber":110,"author":{"gitId":"EricBryann"},"content":"        output +\u003d patientList.listPatients();","lastModifiedDate":"2021-10-06"},{"lineNumber":111,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":112,"author":{"gitId":"EricBryann"},"content":"        return output;","lastModifiedDate":"2021-10-06"},{"lineNumber":113,"author":{"gitId":"EricBryann"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":114,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":115,"author":{"gitId":"Kureans"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":116,"author":{"gitId":"Kureans"},"content":"     * Prints a list of all available commands.","lastModifiedDate":"2021-10-07"},{"lineNumber":117,"author":{"gitId":"EricBryann"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":118,"author":{"gitId":"EricBryann"},"content":"     * @return all supported commands.","lastModifiedDate":"2021-10-13"},{"lineNumber":119,"author":{"gitId":"Kureans"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":120,"author":{"gitId":"Kureans"},"content":"    public String getCommandList() {","lastModifiedDate":"2021-10-07"},{"lineNumber":121,"author":{"gitId":"Kureans"},"content":"        return \"Here are the list of commands:\\n\\n\"","lastModifiedDate":"2021-10-07"},{"lineNumber":122,"author":{"gitId":"Kureans"},"content":"                + \"help\\n\" + \"add\\n\" + \"list\\n\" + \"view\\n\" + \"edit\\n\" + \"delete\\n\"","lastModifiedDate":"2021-10-07"},{"lineNumber":123,"author":{"gitId":"Kureans"},"content":"                + \"exit\\n\" + \"\\n\"","lastModifiedDate":"2021-10-07"},{"lineNumber":124,"author":{"gitId":"Kureans"},"content":"                + \"To obtain more information on each command and their respective required inputs, type:\\n\"","lastModifiedDate":"2021-10-07"},{"lineNumber":125,"author":{"gitId":"Kureans"},"content":"                + \"help [COMMAND]\\n\\n\"","lastModifiedDate":"2021-10-12"},{"lineNumber":126,"author":{"gitId":"Kureans"},"content":"                + \"*Note that all commands will remove any \u0027|\u0027 inputs for format parsing purposes\";","lastModifiedDate":"2021-10-12"},{"lineNumber":127,"author":{"gitId":"Kureans"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":128,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":129,"author":{"gitId":"EricBryann"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":130,"author":{"gitId":"EricBryann"},"content":"     * Prints information about list command.","lastModifiedDate":"2021-10-13"},{"lineNumber":131,"author":{"gitId":"EricBryann"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":132,"author":{"gitId":"EricBryann"},"content":"     * @return the information on list command.","lastModifiedDate":"2021-10-13"},{"lineNumber":133,"author":{"gitId":"EricBryann"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":134,"author":{"gitId":"Kureans"},"content":"    public String getListHelpMessage() {","lastModifiedDate":"2021-10-07"},{"lineNumber":135,"author":{"gitId":"Kureans"},"content":"        return \"View information of all current patients.\\n\"","lastModifiedDate":"2021-10-07"},{"lineNumber":136,"author":{"gitId":"Kureans"},"content":"                + \"Format: list\\n\" + \"Expected Output for 2 patients: \\n\"","lastModifiedDate":"2021-10-12"},{"lineNumber":137,"author":{"gitId":"Kureans"},"content":"                + \"Patient ID: [PATIENT_ID_1] IC: [PATIENT_IC]\"","lastModifiedDate":"2021-10-12"},{"lineNumber":138,"author":{"gitId":"Kureans"},"content":"                + \"Name: [PATIENT_NAME] H/P: [PHONE NUMBER] Email: [EMAIL]  Address: [ADDRESS]\\n\"","lastModifiedDate":"2021-10-12"},{"lineNumber":139,"author":{"gitId":"Kureans"},"content":"                + \"Patient ID: [PATIENT_ID_2] IC: [PATIENT_IC]\"","lastModifiedDate":"2021-10-12"},{"lineNumber":140,"author":{"gitId":"Kureans"},"content":"                + \"Name: [PATIENT_NAME] H/P: [PHONE NUMBER] Email: [EMAIL]  Address: [ADDRESS]\\n\";","lastModifiedDate":"2021-10-12"},{"lineNumber":141,"author":{"gitId":"Kureans"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":142,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":143,"author":{"gitId":"EricBryann"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":144,"author":{"gitId":"EricBryann"},"content":"     * Prints information about help command.","lastModifiedDate":"2021-10-13"},{"lineNumber":145,"author":{"gitId":"EricBryann"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":146,"author":{"gitId":"EricBryann"},"content":"     * @return the information on help command.","lastModifiedDate":"2021-10-13"},{"lineNumber":147,"author":{"gitId":"EricBryann"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":148,"author":{"gitId":"Kureans"},"content":"    public String getViewHelpMessage() {","lastModifiedDate":"2021-10-07"},{"lineNumber":149,"author":{"gitId":"Kureans"},"content":"        return \"View a patient’s personal information.\\n\" + \"Format: view PATIENT_ID\\n\"","lastModifiedDate":"2021-10-07"},{"lineNumber":150,"author":{"gitId":"Kureans"},"content":"                + \"Expected Output:\\n\" + \"id: PATIENT_ID \" + \"name: NAME \"","lastModifiedDate":"2021-10-12"},{"lineNumber":151,"author":{"gitId":"Kureans"},"content":"                + \"phone number: PHONE_NUMBER \" + \"email: EMAIL \" + \"address: ADDRESS\\n\";","lastModifiedDate":"2021-10-12"},{"lineNumber":152,"author":{"gitId":"Kureans"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":153,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":154,"author":{"gitId":"EricBryann"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":155,"author":{"gitId":"EricBryann"},"content":"     * Prints information about add command.","lastModifiedDate":"2021-10-13"},{"lineNumber":156,"author":{"gitId":"EricBryann"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":157,"author":{"gitId":"EricBryann"},"content":"     * @return the information on add command.","lastModifiedDate":"2021-10-13"},{"lineNumber":158,"author":{"gitId":"EricBryann"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":159,"author":{"gitId":"Kureans"},"content":"    public String getAddHelpMessage() {","lastModifiedDate":"2021-10-07"},{"lineNumber":160,"author":{"gitId":"Kureans"},"content":"        return \"Add a patient to the patient’s list.\\n\"","lastModifiedDate":"2021-10-07"},{"lineNumber":161,"author":{"gitId":"Kureans"},"content":"                + \"Format:\\n\"","lastModifiedDate":"2021-10-07"},{"lineNumber":162,"author":{"gitId":"Kureans"},"content":"                + \"add i/PATIENT_IC [n/NAME] [p/PHONE_NUMBER] [e/EMAIL] [a/ADDRESS]\\n\"","lastModifiedDate":"2021-10-12"},{"lineNumber":163,"author":{"gitId":"Kureans"},"content":"                + \"Expected output:\\n\"","lastModifiedDate":"2021-10-07"},{"lineNumber":164,"author":{"gitId":"Kureans"},"content":"                + \"Added patient with patient ID: PATIENT_ID\";","lastModifiedDate":"2021-10-12"},{"lineNumber":165,"author":{"gitId":"Kureans"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":166,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":167,"author":{"gitId":"EricBryann"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":168,"author":{"gitId":"EricBryann"},"content":"     * Prints information about edit command.","lastModifiedDate":"2021-10-13"},{"lineNumber":169,"author":{"gitId":"EricBryann"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":170,"author":{"gitId":"EricBryann"},"content":"     * @return the information on edit command.","lastModifiedDate":"2021-10-13"},{"lineNumber":171,"author":{"gitId":"EricBryann"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":172,"author":{"gitId":"Kureans"},"content":"    public String getEditHelpMessage() {","lastModifiedDate":"2021-10-07"},{"lineNumber":173,"author":{"gitId":"Kureans"},"content":"        return \"Edit the personal and medical information of a patient in the list.\\n\"","lastModifiedDate":"2021-10-07"},{"lineNumber":174,"author":{"gitId":"Kureans"},"content":"                + \"Format:\\n\"","lastModifiedDate":"2021-10-12"},{"lineNumber":175,"author":{"gitId":"Kureans"},"content":"                + \"edit PATIENT ID [i/PATIENT_IC] [n/NAME] [p/PHONE_NUMBER] [e/EMAIL] [a/ADDRESS]\\n\"","lastModifiedDate":"2021-10-12"},{"lineNumber":176,"author":{"gitId":"Kureans"},"content":"                + \"Expected output: \\n\"","lastModifiedDate":"2021-10-07"},{"lineNumber":177,"author":{"gitId":"Kureans"},"content":"                + \"The information of patient with ID PATIENT_ID has been edited to:\\n\"","lastModifiedDate":"2021-10-12"},{"lineNumber":178,"author":{"gitId":"Kureans"},"content":"                + \"Patient ID: [PATIENT_ID] IC: [PATIENT_IC] Name: [NAME] H/P: [PHONE_NUMBER] \"","lastModifiedDate":"2021-10-12"},{"lineNumber":179,"author":{"gitId":"Kureans"},"content":"                + \"Email: [EMAIL] Address: [ADDRESS] \\n\";","lastModifiedDate":"2021-10-12"},{"lineNumber":180,"author":{"gitId":"Kureans"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":181,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":182,"author":{"gitId":"EricBryann"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":183,"author":{"gitId":"EricBryann"},"content":"     * Prints information about delete command.","lastModifiedDate":"2021-10-13"},{"lineNumber":184,"author":{"gitId":"EricBryann"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":185,"author":{"gitId":"EricBryann"},"content":"     * @return the information on delete command.","lastModifiedDate":"2021-10-13"},{"lineNumber":186,"author":{"gitId":"EricBryann"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":187,"author":{"gitId":"Kureans"},"content":"    public String getDeleteHelpMessage() {","lastModifiedDate":"2021-10-07"},{"lineNumber":188,"author":{"gitId":"Kureans"},"content":"        return \"Delete a patient from the list.\\n\"","lastModifiedDate":"2021-10-07"},{"lineNumber":189,"author":{"gitId":"Kureans"},"content":"                + \"Format:\\n\"","lastModifiedDate":"2021-10-07"},{"lineNumber":190,"author":{"gitId":"Kureans"},"content":"                + \"delete PATIENT_ID\\n\"","lastModifiedDate":"2021-10-07"},{"lineNumber":191,"author":{"gitId":"Kureans"},"content":"                + \"Expected Output:\\n\"","lastModifiedDate":"2021-10-07"},{"lineNumber":192,"author":{"gitId":"Kureans"},"content":"                + \"Patient with id PATIENT_ID deleted from system.\\n\";","lastModifiedDate":"2021-10-12"},{"lineNumber":193,"author":{"gitId":"Kureans"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":194,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":195,"author":{"gitId":"EricBryann"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":196,"author":{"gitId":"EricBryann"},"content":"     * Prints information about exit command.","lastModifiedDate":"2021-10-13"},{"lineNumber":197,"author":{"gitId":"EricBryann"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":198,"author":{"gitId":"EricBryann"},"content":"     * @return the information on exot command.","lastModifiedDate":"2021-10-13"},{"lineNumber":199,"author":{"gitId":"EricBryann"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":200,"author":{"gitId":"Kureans"},"content":"    public String getExitHelpMessage() {","lastModifiedDate":"2021-10-07"},{"lineNumber":201,"author":{"gitId":"Kureans"},"content":"        return \"Exits the program.\\n\" + \"Format: exit\\n\";","lastModifiedDate":"2021-10-07"},{"lineNumber":202,"author":{"gitId":"Kureans"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":203,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":204,"author":{"gitId":"EricBryann"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":205,"author":{"gitId":"EricBryann"},"content":"     * Prints unrecognised command message.","lastModifiedDate":"2021-10-13"},{"lineNumber":206,"author":{"gitId":"EricBryann"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":207,"author":{"gitId":"EricBryann"},"content":"     * @return the error message on unrecognised command.","lastModifiedDate":"2021-10-13"},{"lineNumber":208,"author":{"gitId":"EricBryann"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":209,"author":{"gitId":"Kureans"},"content":"    public String getUnrecognisedCommandHelpMessage() {","lastModifiedDate":"2021-10-07"},{"lineNumber":210,"author":{"gitId":"Kureans"},"content":"        return \"Sorry, that\u0027s not a recognised command. To view a list of commands, type:\\n\" + \"help\\n\";","lastModifiedDate":"2021-10-07"},{"lineNumber":211,"author":{"gitId":"Kureans"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":212,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":213,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":214,"author":{"gitId":"justinfidelis"},"content":"}","lastModifiedDate":"2021-09-30"}],"authorContributionMap":{"justinfidelis":26,"CrimsonTitan79":10,"EricBryann":115,"Kureans":63}},{"path":"src/main/java/medbot/command/AddPatientCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"justinfidelis"},"content":"package medbot.command;","lastModifiedDate":"2021-09-30"},{"lineNumber":2,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":3,"author":{"gitId":"justinfidelis"},"content":"import medbot.PatientList;","lastModifiedDate":"2021-09-30"},{"lineNumber":4,"author":{"gitId":"justinfidelis"},"content":"import medbot.Ui;","lastModifiedDate":"2021-09-30"},{"lineNumber":5,"author":{"gitId":"justinfidelis"},"content":"import medbot.person.Patient;","lastModifiedDate":"2021-09-30"},{"lineNumber":6,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":7,"author":{"gitId":"justinfidelis"},"content":"public class AddPatientCommand extends Command {","lastModifiedDate":"2021-09-30"},{"lineNumber":8,"author":{"gitId":"justinfidelis"},"content":"    private Patient patient;","lastModifiedDate":"2021-09-30"},{"lineNumber":9,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":10,"author":{"gitId":"justinfidelis"},"content":"    public AddPatientCommand(Patient patient) {","lastModifiedDate":"2021-09-30"},{"lineNumber":11,"author":{"gitId":"justinfidelis"},"content":"        this.patient \u003d patient;","lastModifiedDate":"2021-09-30"},{"lineNumber":12,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":13,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":14,"author":{"gitId":"justinfidelis"},"content":"    @Override","lastModifiedDate":"2021-09-30"},{"lineNumber":15,"author":{"gitId":"justinfidelis"},"content":"    public void execute(PatientList patientList, Ui ui) {","lastModifiedDate":"2021-09-30"},{"lineNumber":16,"author":{"gitId":"justinfidelis"},"content":"        int patientId \u003d patientList.addPatient(patient);","lastModifiedDate":"2021-09-30"},{"lineNumber":17,"author":{"gitId":"EricBryann"},"content":"        String successMessage \u003d ui.getAddPatientMessage(patientId);","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"EricBryann"},"content":"        ui.printOutput(successMessage);","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":20,"author":{"gitId":"justinfidelis"},"content":"}","lastModifiedDate":"2021-09-30"}],"authorContributionMap":{"justinfidelis":18,"EricBryann":2}},{"path":"src/main/java/medbot/command/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"justinfidelis"},"content":"package medbot.command;","lastModifiedDate":"2021-09-30"},{"lineNumber":2,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":3,"author":{"gitId":"justinfidelis"},"content":"import medbot.MedBotException;","lastModifiedDate":"2021-09-30"},{"lineNumber":4,"author":{"gitId":"justinfidelis"},"content":"import medbot.PatientList;","lastModifiedDate":"2021-09-30"},{"lineNumber":5,"author":{"gitId":"justinfidelis"},"content":"import medbot.Ui;","lastModifiedDate":"2021-09-30"},{"lineNumber":6,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":7,"author":{"gitId":"justinfidelis"},"content":"public abstract class Command {","lastModifiedDate":"2021-09-30"},{"lineNumber":8,"author":{"gitId":"justinfidelis"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":9,"author":{"gitId":"EricBryann"},"content":"     * Returns if the command type is the exitCommand.","lastModifiedDate":"2021-10-04"},{"lineNumber":10,"author":{"gitId":"justinfidelis"},"content":"     *","lastModifiedDate":"2021-09-30"},{"lineNumber":11,"author":{"gitId":"justinfidelis"},"content":"     * @return boolean value of whether the command is the exitCommand","lastModifiedDate":"2021-09-30"},{"lineNumber":12,"author":{"gitId":"justinfidelis"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":13,"author":{"gitId":"justinfidelis"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-09-30"},{"lineNumber":14,"author":{"gitId":"justinfidelis"},"content":"        return false;","lastModifiedDate":"2021-09-30"},{"lineNumber":15,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":16,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":17,"author":{"gitId":"justinfidelis"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":18,"author":{"gitId":"EricBryann"},"content":"     * Abstract method that executes the command.","lastModifiedDate":"2021-10-04"},{"lineNumber":19,"author":{"gitId":"justinfidelis"},"content":"     *","lastModifiedDate":"2021-09-30"},{"lineNumber":20,"author":{"gitId":"justinfidelis"},"content":"     * @param patientList the patientList that will be modified","lastModifiedDate":"2021-09-30"},{"lineNumber":21,"author":{"gitId":"justinfidelis"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":22,"author":{"gitId":"justinfidelis"},"content":"    public abstract void execute(PatientList patientList, Ui ui) throws MedBotException;","lastModifiedDate":"2021-09-30"},{"lineNumber":23,"author":{"gitId":"justinfidelis"},"content":"}","lastModifiedDate":"2021-09-30"}],"authorContributionMap":{"justinfidelis":21,"EricBryann":2}},{"path":"src/main/java/medbot/command/DeletePatientCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"justinfidelis"},"content":"package medbot.command;","lastModifiedDate":"2021-09-30"},{"lineNumber":2,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":3,"author":{"gitId":"justinfidelis"},"content":"import medbot.MedBotException;","lastModifiedDate":"2021-09-30"},{"lineNumber":4,"author":{"gitId":"justinfidelis"},"content":"import medbot.PatientList;","lastModifiedDate":"2021-09-30"},{"lineNumber":5,"author":{"gitId":"justinfidelis"},"content":"import medbot.Ui;","lastModifiedDate":"2021-09-30"},{"lineNumber":6,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":7,"author":{"gitId":"justinfidelis"},"content":"public class DeletePatientCommand extends Command {","lastModifiedDate":"2021-09-30"},{"lineNumber":8,"author":{"gitId":"justinfidelis"},"content":"    private int patientId \u003d 0;","lastModifiedDate":"2021-09-30"},{"lineNumber":9,"author":{"gitId":"justinfidelis"},"content":"    ","lastModifiedDate":"2021-09-30"},{"lineNumber":10,"author":{"gitId":"justinfidelis"},"content":"    public DeletePatientCommand(int patientId) {","lastModifiedDate":"2021-09-30"},{"lineNumber":11,"author":{"gitId":"justinfidelis"},"content":"        this.patientId \u003d patientId;","lastModifiedDate":"2021-09-30"},{"lineNumber":12,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":13,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":14,"author":{"gitId":"justinfidelis"},"content":"    @Override","lastModifiedDate":"2021-09-30"},{"lineNumber":15,"author":{"gitId":"justinfidelis"},"content":"    public void execute(PatientList patientList, Ui ui) throws MedBotException {","lastModifiedDate":"2021-09-30"},{"lineNumber":16,"author":{"gitId":"justinfidelis"},"content":"        patientList.deletePatient(patientId);","lastModifiedDate":"2021-09-30"},{"lineNumber":17,"author":{"gitId":"EricBryann"},"content":"        String deletePatientMessage \u003d ui.getDeletePatientMessage(patientId);","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"EricBryann"},"content":"        ui.printOutput(deletePatientMessage);","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":20,"author":{"gitId":"justinfidelis"},"content":"}","lastModifiedDate":"2021-09-30"}],"authorContributionMap":{"justinfidelis":18,"EricBryann":2}},{"path":"src/main/java/medbot/command/EditPatientCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jushg"},"content":"package medbot.command;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"jushg"},"content":"import medbot.MedBotException;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"jushg"},"content":"import medbot.PatientList;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"jushg"},"content":"import medbot.Ui;","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"jushg"},"content":"import medbot.person.Patient;","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"jushg"},"content":"public class EditPatientCommand extends Command {","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"jushg"},"content":"    private int patientId \u003d 0;","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"jushg"},"content":"    private Patient patient \u003d null;","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"jushg"},"content":"    public EditPatientCommand(int patientId, Patient patient) {","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"jushg"},"content":"        this.patientId \u003d patientId;","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"jushg"},"content":"        this.patient \u003d patient;","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"jushg"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"jushg"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"jushg"},"content":"    public void execute(PatientList patientList, Ui ui) throws MedBotException {","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"jushg"},"content":"        patientList.editPatient(patientId, patient);","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"jushg"},"content":"        String patientInfo \u003d patientList.getPatientInfo(patientId);","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"EricBryann"},"content":"        String editPatientMessage \u003d ui.getEditPatientMessage(patientId, patientInfo);","lastModifiedDate":"2021-10-06"},{"lineNumber":22,"author":{"gitId":"EricBryann"},"content":"        ui.printOutput(editPatientMessage);","lastModifiedDate":"2021-10-06"},{"lineNumber":23,"author":{"gitId":"jushg"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"jushg"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"jushg":22,"EricBryann":2}},{"path":"src/main/java/medbot/command/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"justinfidelis"},"content":"package medbot.command;","lastModifiedDate":"2021-09-30"},{"lineNumber":2,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":3,"author":{"gitId":"justinfidelis"},"content":"import medbot.PatientList;","lastModifiedDate":"2021-09-30"},{"lineNumber":4,"author":{"gitId":"justinfidelis"},"content":"import medbot.Ui;","lastModifiedDate":"2021-09-30"},{"lineNumber":5,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":6,"author":{"gitId":"justinfidelis"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2021-09-30"},{"lineNumber":7,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":8,"author":{"gitId":"justinfidelis"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-09-30"},{"lineNumber":9,"author":{"gitId":"justinfidelis"},"content":"        return true;","lastModifiedDate":"2021-09-30"},{"lineNumber":10,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":11,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":12,"author":{"gitId":"EricBryann"},"content":"    @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"justinfidelis"},"content":"    public void execute(PatientList patientList, Ui ui) {","lastModifiedDate":"2021-09-30"},{"lineNumber":14,"author":{"gitId":"EricBryann"},"content":"        String exitMessage \u003d ui.getExitMessage();","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"EricBryann"},"content":"        ui.printOutput(exitMessage);","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":17,"author":{"gitId":"justinfidelis"},"content":"}","lastModifiedDate":"2021-09-30"}],"authorContributionMap":{"justinfidelis":14,"EricBryann":3}},{"path":"src/main/java/medbot/command/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Kureans"},"content":"package medbot.command;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"Kureans"},"content":"import medbot.PatientList;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"Kureans"},"content":"import medbot.Ui;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"Kureans"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"Kureans"},"content":"    private static final String COMMAND_ADD \u003d \"add\";","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"Kureans"},"content":"    private static final String COMMAND_DELETE \u003d \"delete\";","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"Kureans"},"content":"    private static final String COMMAND_EDIT \u003d \"edit\";","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"Kureans"},"content":"    private static final String COMMAND_VIEW \u003d \"view\";","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"Kureans"},"content":"    private static final String COMMAND_LIST \u003d \"list\";","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"Kureans"},"content":"    private static final String COMMAND_EXIT \u003d \"exit\";","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"Kureans"},"content":"    private static final String COMMAND_HELP \u003d \"help\";","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"Kureans"},"content":"    private String secondCommand;","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"Kureans"},"content":"    public HelpCommand(String secondCommand) {","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"Kureans"},"content":"        this.secondCommand \u003d secondCommand;","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"Kureans"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"Kureans"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"Kureans"},"content":"    public void execute(PatientList patientList, Ui ui) {","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"Kureans"},"content":"        String output;","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"Kureans"},"content":"        if (secondCommand.equals(COMMAND_HELP)) {","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"Kureans"},"content":"            output \u003d ui.getCommandList();","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"Kureans"},"content":"        } else if (secondCommand.equals(COMMAND_LIST)) {","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"Kureans"},"content":"            output \u003d ui.getListHelpMessage();","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"Kureans"},"content":"        } else if (secondCommand.equals(COMMAND_VIEW)) {","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"Kureans"},"content":"            output \u003d ui.getViewHelpMessage();","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"Kureans"},"content":"        } else if (secondCommand.equals(COMMAND_ADD)) {","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"Kureans"},"content":"            output \u003d ui.getAddHelpMessage();","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"Kureans"},"content":"        } else if (secondCommand.equals(COMMAND_EDIT)) {","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"Kureans"},"content":"            output \u003d ui.getEditHelpMessage();","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"Kureans"},"content":"        } else if (secondCommand.equals(COMMAND_DELETE)) {","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"Kureans"},"content":"            output \u003d ui.getDeleteHelpMessage();","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"Kureans"},"content":"        } else if (secondCommand.equals(COMMAND_EXIT)) {","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"Kureans"},"content":"            output \u003d ui.getExitHelpMessage();","lastModifiedDate":"2021-10-07"},{"lineNumber":38,"author":{"gitId":"Kureans"},"content":"        } else {","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"Kureans"},"content":"            output \u003d ui.getUnrecognisedCommandHelpMessage();","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"Kureans"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"Kureans"},"content":"        ui.printOutput(output);","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"Kureans"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"Kureans"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"Kureans":43}},{"path":"src/main/java/medbot/command/ListPatientCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"justinfidelis"},"content":"package medbot.command;","lastModifiedDate":"2021-09-30"},{"lineNumber":2,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":3,"author":{"gitId":"justinfidelis"},"content":"import medbot.PatientList;","lastModifiedDate":"2021-09-30"},{"lineNumber":4,"author":{"gitId":"justinfidelis"},"content":"import medbot.Ui;","lastModifiedDate":"2021-09-30"},{"lineNumber":5,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":6,"author":{"gitId":"justinfidelis"},"content":"public class ListPatientCommand extends Command {","lastModifiedDate":"2021-09-30"},{"lineNumber":7,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":8,"author":{"gitId":"justinfidelis"},"content":"    @Override","lastModifiedDate":"2021-09-30"},{"lineNumber":9,"author":{"gitId":"justinfidelis"},"content":"    public void execute(PatientList patientList, Ui ui) {","lastModifiedDate":"2021-09-30"},{"lineNumber":10,"author":{"gitId":"EricBryann"},"content":"        String allPatientsString \u003d ui.getAllPatientsString(patientList);","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"EricBryann"},"content":"        ui.printOutput(allPatientsString);","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":13,"author":{"gitId":"justinfidelis"},"content":"}","lastModifiedDate":"2021-09-30"}],"authorContributionMap":{"justinfidelis":11,"EricBryann":2}},{"path":"src/main/java/medbot/command/ViewPatientCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"justinfidelis"},"content":"package medbot.command;","lastModifiedDate":"2021-09-30"},{"lineNumber":2,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":3,"author":{"gitId":"justinfidelis"},"content":"import medbot.MedBotException;","lastModifiedDate":"2021-09-30"},{"lineNumber":4,"author":{"gitId":"justinfidelis"},"content":"import medbot.PatientList;","lastModifiedDate":"2021-09-30"},{"lineNumber":5,"author":{"gitId":"justinfidelis"},"content":"import medbot.Ui;","lastModifiedDate":"2021-09-30"},{"lineNumber":6,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":7,"author":{"gitId":"justinfidelis"},"content":"public class ViewPatientCommand extends Command {","lastModifiedDate":"2021-09-30"},{"lineNumber":8,"author":{"gitId":"justinfidelis"},"content":"    private int patientId \u003d 0;","lastModifiedDate":"2021-09-30"},{"lineNumber":9,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":10,"author":{"gitId":"justinfidelis"},"content":"    public ViewPatientCommand(int patientId) {","lastModifiedDate":"2021-09-30"},{"lineNumber":11,"author":{"gitId":"justinfidelis"},"content":"        this.patientId \u003d patientId;","lastModifiedDate":"2021-09-30"},{"lineNumber":12,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":13,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":14,"author":{"gitId":"justinfidelis"},"content":"    @Override","lastModifiedDate":"2021-09-30"},{"lineNumber":15,"author":{"gitId":"justinfidelis"},"content":"    public void execute(PatientList patientList, Ui ui) throws MedBotException {","lastModifiedDate":"2021-09-30"},{"lineNumber":16,"author":{"gitId":"justinfidelis"},"content":"        String patientInfo \u003d patientList.getPatientInfo(patientId);","lastModifiedDate":"2021-09-30"},{"lineNumber":17,"author":{"gitId":"Kureans"},"content":"        ui.printOutput(ui.getPatientInfo(patientInfo));","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":19,"author":{"gitId":"justinfidelis"},"content":"}","lastModifiedDate":"2021-09-30"}],"authorContributionMap":{"justinfidelis":18,"Kureans":1}},{"path":"src/main/java/medbot/person/Patient.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"justinfidelis"},"content":"package medbot.person;","lastModifiedDate":"2021-09-30"},{"lineNumber":2,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":3,"author":{"gitId":"CrimsonTitan79"},"content":"import static medbot.Ui.VERTICAL_LINE_SPACED;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"justinfidelis"},"content":"public class Patient extends Person {","lastModifiedDate":"2021-09-30"},{"lineNumber":6,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"justinfidelis"},"content":"    private int patientId \u003d 0;","lastModifiedDate":"2021-09-30"},{"lineNumber":8,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":9,"author":{"gitId":"justinfidelis"},"content":"    public Patient() {","lastModifiedDate":"2021-09-30"},{"lineNumber":10,"author":{"gitId":"justinfidelis"},"content":"        super.personType \u003d PersonType.PATIENT;","lastModifiedDate":"2021-09-30"},{"lineNumber":11,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":12,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":13,"author":{"gitId":"justinfidelis"},"content":"    public int getPatientId() {","lastModifiedDate":"2021-09-30"},{"lineNumber":14,"author":{"gitId":"justinfidelis"},"content":"        return patientId;","lastModifiedDate":"2021-09-30"},{"lineNumber":15,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":16,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":17,"author":{"gitId":"justinfidelis"},"content":"    public void setPatientId(int patientId) {","lastModifiedDate":"2021-09-30"},{"lineNumber":18,"author":{"gitId":"justinfidelis"},"content":"        this.patientId \u003d patientId;","lastModifiedDate":"2021-09-30"},{"lineNumber":19,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":20,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":21,"author":{"gitId":"justinfidelis"},"content":"    public String toString() {","lastModifiedDate":"2021-09-30"},{"lineNumber":22,"author":{"gitId":"justinfidelis"},"content":"        return \"Patient ID: \" + patientId + \" \" + super.toString();","lastModifiedDate":"2021-09-30"},{"lineNumber":23,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":24,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"CrimsonTitan79"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"CrimsonTitan79"},"content":"     * Text to be written to storage/data.txt of a patient","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"CrimsonTitan79"},"content":"     *","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"CrimsonTitan79"},"content":"     * @return storageString of a patient","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"CrimsonTitan79"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"CrimsonTitan79"},"content":"    @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"CrimsonTitan79"},"content":"    public String getStorageString() {","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"CrimsonTitan79"},"content":"        return patientId + VERTICAL_LINE_SPACED","lastModifiedDate":"2021-10-13"},{"lineNumber":34,"author":{"gitId":"CrimsonTitan79"},"content":"                + super.getStorageString();","lastModifiedDate":"2021-10-09"},{"lineNumber":35,"author":{"gitId":"CrimsonTitan79"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"justinfidelis"},"content":"}","lastModifiedDate":"2021-09-30"}],"authorContributionMap":{"justinfidelis":21,"CrimsonTitan79":15}},{"path":"src/main/java/medbot/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"justinfidelis"},"content":"package medbot.person;","lastModifiedDate":"2021-09-30"},{"lineNumber":2,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":3,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"CrimsonTitan79"},"content":"import static medbot.Ui.VERTICAL_LINE_SPACED;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"justinfidelis"},"content":"public abstract class Person {","lastModifiedDate":"2021-09-30"},{"lineNumber":8,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"justinfidelis"},"content":"    protected String icNumber \u003d \"\";","lastModifiedDate":"2021-09-30"},{"lineNumber":10,"author":{"gitId":"justinfidelis"},"content":"    protected String name \u003d \"\";","lastModifiedDate":"2021-09-30"},{"lineNumber":11,"author":{"gitId":"justinfidelis"},"content":"    protected String phoneNumber \u003d \"\";","lastModifiedDate":"2021-09-30"},{"lineNumber":12,"author":{"gitId":"justinfidelis"},"content":"    protected String emailAddress \u003d \"\";","lastModifiedDate":"2021-09-30"},{"lineNumber":13,"author":{"gitId":"justinfidelis"},"content":"    protected String residentialAddress \u003d \"\";","lastModifiedDate":"2021-09-30"},{"lineNumber":14,"author":{"gitId":"justinfidelis"},"content":"    protected PersonType personType;","lastModifiedDate":"2021-09-30"},{"lineNumber":15,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":16,"author":{"gitId":"justinfidelis"},"content":"    public String toString() {","lastModifiedDate":"2021-09-30"},{"lineNumber":17,"author":{"gitId":"EricBryann"},"content":"        return \"IC: \" + icNumber + \" Name: \" + name + \" H/P: \" + phoneNumber","lastModifiedDate":"2021-10-04"},{"lineNumber":18,"author":{"gitId":"EricBryann"},"content":"                + \" Email: \" + emailAddress + \" Address: \" + residentialAddress;","lastModifiedDate":"2021-10-04"},{"lineNumber":19,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":20,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":21,"author":{"gitId":"justinfidelis"},"content":"    public String getIcNumber() {","lastModifiedDate":"2021-09-30"},{"lineNumber":22,"author":{"gitId":"justinfidelis"},"content":"        return icNumber;","lastModifiedDate":"2021-09-30"},{"lineNumber":23,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":24,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":25,"author":{"gitId":"justinfidelis"},"content":"    public void setIcNumber(String icNumber) {","lastModifiedDate":"2021-09-30"},{"lineNumber":26,"author":{"gitId":"justinfidelis"},"content":"        this.icNumber \u003d icNumber;","lastModifiedDate":"2021-09-30"},{"lineNumber":27,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":28,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":29,"author":{"gitId":"justinfidelis"},"content":"    public String getName() {","lastModifiedDate":"2021-09-30"},{"lineNumber":30,"author":{"gitId":"justinfidelis"},"content":"        return name;","lastModifiedDate":"2021-09-30"},{"lineNumber":31,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":32,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":33,"author":{"gitId":"justinfidelis"},"content":"    public void setName(String name) {","lastModifiedDate":"2021-09-30"},{"lineNumber":34,"author":{"gitId":"justinfidelis"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-09-30"},{"lineNumber":35,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":36,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":37,"author":{"gitId":"justinfidelis"},"content":"    public String getPhoneNumber() {","lastModifiedDate":"2021-09-30"},{"lineNumber":38,"author":{"gitId":"justinfidelis"},"content":"        return phoneNumber;","lastModifiedDate":"2021-09-30"},{"lineNumber":39,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":40,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":41,"author":{"gitId":"justinfidelis"},"content":"    public void setPhoneNumber(String phoneNumber) {","lastModifiedDate":"2021-09-30"},{"lineNumber":42,"author":{"gitId":"justinfidelis"},"content":"        this.phoneNumber \u003d phoneNumber;","lastModifiedDate":"2021-09-30"},{"lineNumber":43,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":44,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":45,"author":{"gitId":"justinfidelis"},"content":"    public String getEmailAddress() {","lastModifiedDate":"2021-09-30"},{"lineNumber":46,"author":{"gitId":"justinfidelis"},"content":"        return emailAddress;","lastModifiedDate":"2021-09-30"},{"lineNumber":47,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":48,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":49,"author":{"gitId":"justinfidelis"},"content":"    public void setEmailAddress(String emailAddress) {","lastModifiedDate":"2021-09-30"},{"lineNumber":50,"author":{"gitId":"justinfidelis"},"content":"        this.emailAddress \u003d emailAddress;","lastModifiedDate":"2021-09-30"},{"lineNumber":51,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":52,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":53,"author":{"gitId":"justinfidelis"},"content":"    public String getResidentialAddress() {","lastModifiedDate":"2021-09-30"},{"lineNumber":54,"author":{"gitId":"justinfidelis"},"content":"        return residentialAddress;","lastModifiedDate":"2021-09-30"},{"lineNumber":55,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":56,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":57,"author":{"gitId":"justinfidelis"},"content":"    public void setResidentialAddress(String residentialAddress) {","lastModifiedDate":"2021-09-30"},{"lineNumber":58,"author":{"gitId":"justinfidelis"},"content":"        this.residentialAddress \u003d residentialAddress;","lastModifiedDate":"2021-09-30"},{"lineNumber":59,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":60,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":61,"author":{"gitId":"justinfidelis"},"content":"    public void setNull() {","lastModifiedDate":"2021-10-06"},{"lineNumber":62,"author":{"gitId":"justinfidelis"},"content":"        icNumber \u003d null;","lastModifiedDate":"2021-10-06"},{"lineNumber":63,"author":{"gitId":"justinfidelis"},"content":"        name \u003d null;","lastModifiedDate":"2021-10-06"},{"lineNumber":64,"author":{"gitId":"justinfidelis"},"content":"        phoneNumber \u003d null;","lastModifiedDate":"2021-10-06"},{"lineNumber":65,"author":{"gitId":"justinfidelis"},"content":"        emailAddress \u003d null;","lastModifiedDate":"2021-10-06"},{"lineNumber":66,"author":{"gitId":"justinfidelis"},"content":"        residentialAddress \u003d null;","lastModifiedDate":"2021-10-06"},{"lineNumber":67,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":68,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":69,"author":{"gitId":"CrimsonTitan79"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":70,"author":{"gitId":"CrimsonTitan79"},"content":"     * Text to be written to storage/data.txt of a person","lastModifiedDate":"2021-10-08"},{"lineNumber":71,"author":{"gitId":"CrimsonTitan79"},"content":"     *","lastModifiedDate":"2021-10-08"},{"lineNumber":72,"author":{"gitId":"CrimsonTitan79"},"content":"     * @return storageString of a person","lastModifiedDate":"2021-10-08"},{"lineNumber":73,"author":{"gitId":"CrimsonTitan79"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":74,"author":{"gitId":"CrimsonTitan79"},"content":"    public String getStorageString() {","lastModifiedDate":"2021-10-08"},{"lineNumber":75,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":76,"author":{"gitId":"CrimsonTitan79"},"content":"        return setAsStorageParameterOrNull(icNumber) + VERTICAL_LINE_SPACED","lastModifiedDate":"2021-10-13"},{"lineNumber":77,"author":{"gitId":"CrimsonTitan79"},"content":"                + setAsStorageParameterOrNull(name) + VERTICAL_LINE_SPACED","lastModifiedDate":"2021-10-13"},{"lineNumber":78,"author":{"gitId":"CrimsonTitan79"},"content":"                + setAsStorageParameterOrNull(phoneNumber) + VERTICAL_LINE_SPACED","lastModifiedDate":"2021-10-13"},{"lineNumber":79,"author":{"gitId":"CrimsonTitan79"},"content":"                + setAsStorageParameterOrNull(emailAddress) + VERTICAL_LINE_SPACED","lastModifiedDate":"2021-10-13"},{"lineNumber":80,"author":{"gitId":"CrimsonTitan79"},"content":"                + setAsStorageParameterOrNull(residentialAddress);","lastModifiedDate":"2021-10-09"},{"lineNumber":81,"author":{"gitId":"CrimsonTitan79"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":82,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":83,"author":{"gitId":"CrimsonTitan79"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":84,"author":{"gitId":"CrimsonTitan79"},"content":"     * Return \"X\" if parameter \u003d\u003d null || parameter.isBlank(), otherwise return parameter itself","lastModifiedDate":"2021-10-08"},{"lineNumber":85,"author":{"gitId":"CrimsonTitan79"},"content":"     *","lastModifiedDate":"2021-10-08"},{"lineNumber":86,"author":{"gitId":"CrimsonTitan79"},"content":"     * @param parameter an attribute of a person","lastModifiedDate":"2021-10-08"},{"lineNumber":87,"author":{"gitId":"CrimsonTitan79"},"content":"     * @return \"X\" if parameter \u003d\u003d null || parameter.isBlank(), otherwise return parameter itself","lastModifiedDate":"2021-10-08"},{"lineNumber":88,"author":{"gitId":"CrimsonTitan79"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":89,"author":{"gitId":"CrimsonTitan79"},"content":"    protected String setAsStorageParameterOrNull(String parameter) {","lastModifiedDate":"2021-10-08"},{"lineNumber":90,"author":{"gitId":"CrimsonTitan79"},"content":"        return (parameter \u003d\u003d null || parameter.isBlank()) ? \"X\" : parameter;","lastModifiedDate":"2021-10-08"},{"lineNumber":91,"author":{"gitId":"CrimsonTitan79"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":92,"author":{"gitId":"justinfidelis"},"content":"}","lastModifiedDate":"2021-09-30"}],"authorContributionMap":{"justinfidelis":61,"CrimsonTitan79":29,"EricBryann":2}},{"path":"src/main/java/medbot/person/PersonType.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"justinfidelis"},"content":"package medbot.person;","lastModifiedDate":"2021-09-30"},{"lineNumber":2,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":3,"author":{"gitId":"justinfidelis"},"content":"public enum PersonType {","lastModifiedDate":"2021-09-30"},{"lineNumber":4,"author":{"gitId":"justinfidelis"},"content":"    PATIENT, DOCTOR, NURSE","lastModifiedDate":"2021-09-30"},{"lineNumber":5,"author":{"gitId":"justinfidelis"},"content":"}","lastModifiedDate":"2021-09-30"}],"authorContributionMap":{"justinfidelis":5}},{"path":"src/main/java/medbot/utilities/Pair.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"CrimsonTitan79"},"content":"package medbot.utilities;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"CrimsonTitan79"},"content":"public class Pair\u003cX, Y\u003e {","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"CrimsonTitan79"},"content":"    public final X first;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"CrimsonTitan79"},"content":"    public final Y second;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"CrimsonTitan79"},"content":"    public Pair(X x, Y y) {","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"CrimsonTitan79"},"content":"        this.first \u003d x;","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"CrimsonTitan79"},"content":"        this.second \u003d y;","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"CrimsonTitan79"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"CrimsonTitan79"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"CrimsonTitan79":11}},{"path":"src/test/java/medbot/MedBotTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"justinfidelis"},"content":"package medbot;","lastModifiedDate":"2021-09-30"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"EricBryann"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"justinfidelis"},"content":"class MedBotTest {","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2020-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public void sampleTest() {","lastModifiedDate":"2020-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"        assertTrue(true);","lastModifiedDate":"2020-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"justinfidelis":2,"-":8,"EricBryann":2}},{"path":"src/test/java/medbot/ParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"justinfidelis"},"content":"package medbot;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"justinfidelis"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"justinfidelis"},"content":"import java.lang.reflect.InvocationTargetException;","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"justinfidelis"},"content":"import java.lang.reflect.Method;","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"justinfidelis"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"justinfidelis"},"content":"import medbot.person.Patient;","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"justinfidelis"},"content":"import medbot.person.Person;","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"EricBryann"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"justinfidelis"},"content":"class ParserTest {","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"justinfidelis"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"justinfidelis"},"content":"    public void testParseEmailAddress() throws Exception {","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"justinfidelis"},"content":"        String[][] testEmails \u003d {","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"justinfidelis"},"content":"                {\"johntan@example.com\", \"johntan@example.com\"},","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"justinfidelis"},"content":"                {\"johntan@example.com.sg\", \"johntan@example.com.sg\"},","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"justinfidelis"},"content":"                {\"johntan2@example.com\", \"johntan2@example.com\"},","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"justinfidelis"},"content":"                {\"john_tan@example.com\", \"john_tan@example.com\"},","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"justinfidelis"},"content":"                {\"john.tan@example.com\", \"john.tan@example.com\"},","lastModifiedDate":"2021-10-06"},{"lineNumber":22,"author":{"gitId":"justinfidelis"},"content":"                {\" johntan@example.com \", \"johntan@example.com\"},","lastModifiedDate":"2021-10-06"},{"lineNumber":23,"author":{"gitId":"justinfidelis"},"content":"                {\"   \", \"Email address not specified\"},","lastModifiedDate":"2021-10-06"},{"lineNumber":24,"author":{"gitId":"justinfidelis"},"content":"                {\"johntan_@example.com\", \"Incorrect email address format\"},","lastModifiedDate":"2021-10-06"},{"lineNumber":25,"author":{"gitId":"justinfidelis"},"content":"                {\"_johntan@example.com\", \"Incorrect email address format\"},","lastModifiedDate":"2021-10-06"},{"lineNumber":26,"author":{"gitId":"justinfidelis"},"content":"                {\"johntan@example\", \"Incorrect email address format\"}","lastModifiedDate":"2021-10-06"},{"lineNumber":27,"author":{"gitId":"justinfidelis"},"content":"        };","lastModifiedDate":"2021-10-06"},{"lineNumber":28,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":29,"author":{"gitId":"justinfidelis"},"content":"        Method method \u003d Parser.class.getDeclaredMethod(\"parseEmailAddress\", String.class);","lastModifiedDate":"2021-10-06"},{"lineNumber":30,"author":{"gitId":"justinfidelis"},"content":"        method.setAccessible(true);","lastModifiedDate":"2021-10-06"},{"lineNumber":31,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":32,"author":{"gitId":"justinfidelis"},"content":"        for (String[] testEmail : testEmails) {","lastModifiedDate":"2021-10-06"},{"lineNumber":33,"author":{"gitId":"justinfidelis"},"content":"            try {","lastModifiedDate":"2021-10-06"},{"lineNumber":34,"author":{"gitId":"justinfidelis"},"content":"                assertEquals(testEmail[1], method.invoke(method, testEmail[0]));","lastModifiedDate":"2021-10-06"},{"lineNumber":35,"author":{"gitId":"justinfidelis"},"content":"            } catch (InvocationTargetException e) {","lastModifiedDate":"2021-10-06"},{"lineNumber":36,"author":{"gitId":"justinfidelis"},"content":"                assertEquals(testEmail[1], e.getTargetException().getMessage());","lastModifiedDate":"2021-10-06"},{"lineNumber":37,"author":{"gitId":"justinfidelis"},"content":"            }","lastModifiedDate":"2021-10-06"},{"lineNumber":38,"author":{"gitId":"justinfidelis"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":39,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":40,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":41,"author":{"gitId":"justinfidelis"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":42,"author":{"gitId":"justinfidelis"},"content":"    public void testParsePhoneNumber() throws Exception {","lastModifiedDate":"2021-10-06"},{"lineNumber":43,"author":{"gitId":"justinfidelis"},"content":"        String[][] testPhoneNumbers \u003d {","lastModifiedDate":"2021-10-06"},{"lineNumber":44,"author":{"gitId":"justinfidelis"},"content":"                {\"81234567\", \"81234567\"},","lastModifiedDate":"2021-10-06"},{"lineNumber":45,"author":{"gitId":"justinfidelis"},"content":"                {\"8123 4567\", \"81234567\"},","lastModifiedDate":"2021-10-06"},{"lineNumber":46,"author":{"gitId":"justinfidelis"},"content":"                {\"8123_4567\", \"81234567\"},","lastModifiedDate":"2021-10-06"},{"lineNumber":47,"author":{"gitId":"justinfidelis"},"content":"                {\"8123456\", \"Phone number has too few digits\"},","lastModifiedDate":"2021-10-06"},{"lineNumber":48,"author":{"gitId":"justinfidelis"},"content":"                {\"812345678\", \"Phone number has too many digits\"},","lastModifiedDate":"2021-10-06"},{"lineNumber":49,"author":{"gitId":"justinfidelis"},"content":"                {\"   \", \"Phone number not specified\"},","lastModifiedDate":"2021-10-06"},{"lineNumber":50,"author":{"gitId":"justinfidelis"},"content":"                {\"8123456A\", \"Phone number contains unexpected characters\"},","lastModifiedDate":"2021-10-06"},{"lineNumber":51,"author":{"gitId":"justinfidelis"},"content":"        };","lastModifiedDate":"2021-10-06"},{"lineNumber":52,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":53,"author":{"gitId":"justinfidelis"},"content":"        Method method \u003d Parser.class.getDeclaredMethod(\"parsePhoneNumber\", String.class);","lastModifiedDate":"2021-10-06"},{"lineNumber":54,"author":{"gitId":"justinfidelis"},"content":"        method.setAccessible(true);","lastModifiedDate":"2021-10-06"},{"lineNumber":55,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":56,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":57,"author":{"gitId":"justinfidelis"},"content":"        for (String[] testPhoneNumber : testPhoneNumbers) {","lastModifiedDate":"2021-10-06"},{"lineNumber":58,"author":{"gitId":"justinfidelis"},"content":"            try {","lastModifiedDate":"2021-10-06"},{"lineNumber":59,"author":{"gitId":"justinfidelis"},"content":"                assertEquals(testPhoneNumber[1], method.invoke(method, testPhoneNumber[0]));","lastModifiedDate":"2021-10-06"},{"lineNumber":60,"author":{"gitId":"justinfidelis"},"content":"            } catch (InvocationTargetException e) {","lastModifiedDate":"2021-10-06"},{"lineNumber":61,"author":{"gitId":"justinfidelis"},"content":"                assertEquals(testPhoneNumber[1], e.getTargetException().getMessage());","lastModifiedDate":"2021-10-06"},{"lineNumber":62,"author":{"gitId":"justinfidelis"},"content":"            }","lastModifiedDate":"2021-10-06"},{"lineNumber":63,"author":{"gitId":"justinfidelis"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":64,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":65,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":66,"author":{"gitId":"justinfidelis"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":67,"author":{"gitId":"justinfidelis"},"content":"    public void testParseName() throws Exception {","lastModifiedDate":"2021-10-06"},{"lineNumber":68,"author":{"gitId":"justinfidelis"},"content":"        Method method \u003d Parser.class.getDeclaredMethod(\"parseName\", String.class);","lastModifiedDate":"2021-10-06"},{"lineNumber":69,"author":{"gitId":"justinfidelis"},"content":"        method.setAccessible(true);","lastModifiedDate":"2021-10-06"},{"lineNumber":70,"author":{"gitId":"justinfidelis"},"content":"        String[][] testNames \u003d {","lastModifiedDate":"2021-10-06"},{"lineNumber":71,"author":{"gitId":"justinfidelis"},"content":"                {\"John Tan\", \"John Tan\"},","lastModifiedDate":"2021-10-06"},{"lineNumber":72,"author":{"gitId":"justinfidelis"},"content":"                {\"john tan\", \"John Tan\"},","lastModifiedDate":"2021-10-06"},{"lineNumber":73,"author":{"gitId":"justinfidelis"},"content":"                {\"john-tan\", \"John-Tan\"},","lastModifiedDate":"2021-10-06"},{"lineNumber":74,"author":{"gitId":"justinfidelis"},"content":"                {\"JOHN TAN\", \"John Tan\"},","lastModifiedDate":"2021-10-06"},{"lineNumber":75,"author":{"gitId":"justinfidelis"},"content":"                {\"   \", \"Name not specified\"}","lastModifiedDate":"2021-10-06"},{"lineNumber":76,"author":{"gitId":"justinfidelis"},"content":"        };","lastModifiedDate":"2021-10-06"},{"lineNumber":77,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":78,"author":{"gitId":"justinfidelis"},"content":"        for (String[] testName : testNames) {","lastModifiedDate":"2021-10-06"},{"lineNumber":79,"author":{"gitId":"justinfidelis"},"content":"            try {","lastModifiedDate":"2021-10-06"},{"lineNumber":80,"author":{"gitId":"justinfidelis"},"content":"                assertEquals(testName[1], method.invoke(method, testName[0]));","lastModifiedDate":"2021-10-06"},{"lineNumber":81,"author":{"gitId":"justinfidelis"},"content":"            } catch (InvocationTargetException e) {","lastModifiedDate":"2021-10-06"},{"lineNumber":82,"author":{"gitId":"justinfidelis"},"content":"                assertEquals(testName[1], e.getTargetException().getMessage());","lastModifiedDate":"2021-10-06"},{"lineNumber":83,"author":{"gitId":"justinfidelis"},"content":"            }","lastModifiedDate":"2021-10-06"},{"lineNumber":84,"author":{"gitId":"justinfidelis"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":85,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":86,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":87,"author":{"gitId":"jushg"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":88,"author":{"gitId":"jushg"},"content":"    public void testParseIcNumber() throws Exception {","lastModifiedDate":"2021-10-07"},{"lineNumber":89,"author":{"gitId":"jushg"},"content":"        Method method \u003d Parser.class.getDeclaredMethod(\"parseIcNumber\", String.class);","lastModifiedDate":"2021-10-07"},{"lineNumber":90,"author":{"gitId":"jushg"},"content":"        method.setAccessible(true);","lastModifiedDate":"2021-10-07"},{"lineNumber":91,"author":{"gitId":"jushg"},"content":"        String[][] testIcNumbers \u003d {","lastModifiedDate":"2021-10-07"},{"lineNumber":92,"author":{"gitId":"jushg"},"content":"                {\"S1234567A\", \"S1234567A\"},","lastModifiedDate":"2021-10-07"},{"lineNumber":93,"author":{"gitId":"jushg"},"content":"                {\"F1234567A\", \"F1234567A\"},","lastModifiedDate":"2021-10-07"},{"lineNumber":94,"author":{"gitId":"jushg"},"content":"                {\"Z1234567A\", \"Incorrect IC number format\"},","lastModifiedDate":"2021-10-07"},{"lineNumber":95,"author":{"gitId":"jushg"},"content":"                {\"F1234567\", \"Incorrect IC number format\"},","lastModifiedDate":"2021-10-07"},{"lineNumber":96,"author":{"gitId":"jushg"},"content":"                {\"F1234A\", \"Incorrect IC number format\"},","lastModifiedDate":"2021-10-07"},{"lineNumber":97,"author":{"gitId":"jushg"},"content":"                {\"   \", \"IC number not specified\"},","lastModifiedDate":"2021-10-07"},{"lineNumber":98,"author":{"gitId":"jushg"},"content":"                {\"1234567A\", \"Incorrect IC number format\"}","lastModifiedDate":"2021-10-07"},{"lineNumber":99,"author":{"gitId":"jushg"},"content":"        };","lastModifiedDate":"2021-10-07"},{"lineNumber":100,"author":{"gitId":"jushg"},"content":"        for (String[] testIcNumber : testIcNumbers) {","lastModifiedDate":"2021-10-07"},{"lineNumber":101,"author":{"gitId":"jushg"},"content":"            try {","lastModifiedDate":"2021-10-07"},{"lineNumber":102,"author":{"gitId":"jushg"},"content":"                assertEquals(testIcNumber[1], method.invoke(method, testIcNumber[0]));","lastModifiedDate":"2021-10-07"},{"lineNumber":103,"author":{"gitId":"jushg"},"content":"            } catch (InvocationTargetException e) {","lastModifiedDate":"2021-10-07"},{"lineNumber":104,"author":{"gitId":"jushg"},"content":"                assertEquals(testIcNumber[1], e.getTargetException().getMessage());","lastModifiedDate":"2021-10-07"},{"lineNumber":105,"author":{"gitId":"jushg"},"content":"            }","lastModifiedDate":"2021-10-07"},{"lineNumber":106,"author":{"gitId":"jushg"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":107,"author":{"gitId":"jushg"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":108,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":109,"author":{"gitId":"jushg"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":110,"author":{"gitId":"jushg"},"content":"    void testParseResidentialAddress() throws Exception {","lastModifiedDate":"2021-10-07"},{"lineNumber":111,"author":{"gitId":"jushg"},"content":"        Method method \u003d Parser.class.getDeclaredMethod(\"parseResidentialAddress\", String.class);","lastModifiedDate":"2021-10-07"},{"lineNumber":112,"author":{"gitId":"jushg"},"content":"        method.setAccessible(true);","lastModifiedDate":"2021-10-07"},{"lineNumber":113,"author":{"gitId":"jushg"},"content":"        String[][] testResidentialAddresses \u003d {","lastModifiedDate":"2021-10-07"},{"lineNumber":114,"author":{"gitId":"jushg"},"content":"                {\"12 Lower Kent Ridge\", \"12 Lower Kent Ridge\"},","lastModifiedDate":"2021-10-07"},{"lineNumber":115,"author":{"gitId":"jushg"},"content":"                {\"12 lower kent ridge\", \"12 Lower Kent Ridge\"},","lastModifiedDate":"2021-10-07"},{"lineNumber":116,"author":{"gitId":"jushg"},"content":"                {\"12 LOWER KENT RIDGE\", \"12 Lower Kent Ridge\"},","lastModifiedDate":"2021-10-07"},{"lineNumber":117,"author":{"gitId":"jushg"},"content":"                {\"   \", \"Address not specified\"}","lastModifiedDate":"2021-10-07"},{"lineNumber":118,"author":{"gitId":"jushg"},"content":"        };","lastModifiedDate":"2021-10-07"},{"lineNumber":119,"author":{"gitId":"jushg"},"content":"        for (String[] testResidentialAddress : testResidentialAddresses) {","lastModifiedDate":"2021-10-07"},{"lineNumber":120,"author":{"gitId":"jushg"},"content":"            try {","lastModifiedDate":"2021-10-07"},{"lineNumber":121,"author":{"gitId":"jushg"},"content":"                assertEquals(testResidentialAddress[1], method.invoke(method, testResidentialAddress[0]));","lastModifiedDate":"2021-10-07"},{"lineNumber":122,"author":{"gitId":"jushg"},"content":"            } catch (InvocationTargetException e) {","lastModifiedDate":"2021-10-07"},{"lineNumber":123,"author":{"gitId":"jushg"},"content":"                assertEquals(testResidentialAddress[1], e.getTargetException().getMessage());","lastModifiedDate":"2021-10-07"},{"lineNumber":124,"author":{"gitId":"jushg"},"content":"            }","lastModifiedDate":"2021-10-07"},{"lineNumber":125,"author":{"gitId":"jushg"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":126,"author":{"gitId":"jushg"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":127,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":128,"author":{"gitId":"justinfidelis"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":129,"author":{"gitId":"justinfidelis"},"content":"    void testPreprocessMultiAttributeInput() throws Exception {","lastModifiedDate":"2021-10-13"},{"lineNumber":130,"author":{"gitId":"justinfidelis"},"content":"        Method method \u003d Parser.class.getDeclaredMethod(\"preprocessMultiAttributeInput\", String.class);","lastModifiedDate":"2021-10-13"},{"lineNumber":131,"author":{"gitId":"justinfidelis"},"content":"        method.setAccessible(true);","lastModifiedDate":"2021-10-13"},{"lineNumber":132,"author":{"gitId":"justinfidelis"},"content":"        String[][] testInputStrings \u003d {","lastModifiedDate":"2021-10-13"},{"lineNumber":133,"author":{"gitId":"justinfidelis"},"content":"                {\"add n/John Tan i/S8712345G e/john@gmail.com p/8123 4567 a/123 bishan st 24 #05-19\",","lastModifiedDate":"2021-10-13"},{"lineNumber":134,"author":{"gitId":"justinfidelis"},"content":"                \"add |n/John Tan |i/S8712345G |e/john@gmail.com |p/8123 4567 |a/123 bishan st 24 #05-19\"},","lastModifiedDate":"2021-10-13"},{"lineNumber":135,"author":{"gitId":"justinfidelis"},"content":"                {\"add n/joe ong e/joe@gmail.com a/123 Bishan st 24 #05-19 \",","lastModifiedDate":"2021-10-13"},{"lineNumber":136,"author":{"gitId":"justinfidelis"},"content":"                \"add |n/joe ong |e/joe@gmail.com |a/123 Bishan st 24 #05-19 \"},","lastModifiedDate":"2021-10-13"},{"lineNumber":137,"author":{"gitId":"justinfidelis"},"content":"                {\"add   n/Tim lee   e/tim_lee@gmail.com.sg   a/123 queenstown ave 6 #05-19 \",","lastModifiedDate":"2021-10-13"},{"lineNumber":138,"author":{"gitId":"justinfidelis"},"content":"                \"add   |n/Tim lee   |e/tim_lee@gmail.com.sg   |a/123 queenstown ave 6 #05-19 \"},","lastModifiedDate":"2021-10-13"},{"lineNumber":139,"author":{"gitId":"justinfidelis"},"content":"                {\"add i/S8712345G \",","lastModifiedDate":"2021-10-13"},{"lineNumber":140,"author":{"gitId":"justinfidelis"},"content":"                \"add |i/S8712345G \"}","lastModifiedDate":"2021-10-13"},{"lineNumber":141,"author":{"gitId":"justinfidelis"},"content":"        };","lastModifiedDate":"2021-10-13"},{"lineNumber":142,"author":{"gitId":"justinfidelis"},"content":"        for (String[] testInputString : testInputStrings) {","lastModifiedDate":"2021-10-13"},{"lineNumber":143,"author":{"gitId":"justinfidelis"},"content":"            assertEquals(testInputString[1], method.invoke(method, testInputString[0]));","lastModifiedDate":"2021-10-13"},{"lineNumber":144,"author":{"gitId":"justinfidelis"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":145,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":146,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":147,"author":{"gitId":"justinfidelis"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":148,"author":{"gitId":"justinfidelis"},"content":"    void testUpdateMultiplePersonalInformation() throws Exception {","lastModifiedDate":"2021-10-13"},{"lineNumber":149,"author":{"gitId":"justinfidelis"},"content":"        Method method \u003d Parser.class.getDeclaredMethod(\"updateMultiplePersonalInformation\", Person.class,","lastModifiedDate":"2021-10-13"},{"lineNumber":150,"author":{"gitId":"justinfidelis"},"content":"                String[].class);","lastModifiedDate":"2021-10-13"},{"lineNumber":151,"author":{"gitId":"justinfidelis"},"content":"        method.setAccessible(true);","lastModifiedDate":"2021-10-13"},{"lineNumber":152,"author":{"gitId":"justinfidelis"},"content":"        Patient patient \u003d new Patient();","lastModifiedDate":"2021-10-13"},{"lineNumber":153,"author":{"gitId":"justinfidelis"},"content":"        String[] attributeStrings \u003d {\"n/John tan  \", \"i/S8712345G  \", \"e/john_tan@gmail.com \", \"p/8123 4567\",","lastModifiedDate":"2021-10-13"},{"lineNumber":154,"author":{"gitId":"justinfidelis"},"content":"                                     \"a/123 bishan st 24 #05-19  \"};","lastModifiedDate":"2021-10-13"},{"lineNumber":155,"author":{"gitId":"justinfidelis"},"content":"        method.invoke(method, patient, attributeStrings);","lastModifiedDate":"2021-10-13"},{"lineNumber":156,"author":{"gitId":"justinfidelis"},"content":"        assertEquals(patient.getName(), \"John Tan\");","lastModifiedDate":"2021-10-13"},{"lineNumber":157,"author":{"gitId":"justinfidelis"},"content":"        assertEquals(patient.getIcNumber(), \"S8712345G\");","lastModifiedDate":"2021-10-13"},{"lineNumber":158,"author":{"gitId":"justinfidelis"},"content":"        assertEquals(patient.getEmailAddress(), \"john_tan@gmail.com\");","lastModifiedDate":"2021-10-13"},{"lineNumber":159,"author":{"gitId":"justinfidelis"},"content":"        assertEquals(patient.getPhoneNumber(), \"81234567\");","lastModifiedDate":"2021-10-13"},{"lineNumber":160,"author":{"gitId":"justinfidelis"},"content":"        assertEquals(patient.getResidentialAddress(), \"123 Bishan St 24 #05-19\");","lastModifiedDate":"2021-10-13"},{"lineNumber":161,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":162,"author":{"gitId":"justinfidelis"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"justinfidelis":119,"jushg":41,"EricBryann":2}},{"path":"src/test/java/medbot/StorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"CrimsonTitan79"},"content":"package medbot;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"CrimsonTitan79"},"content":"import static medbot.Parser.updatePersonalInformation;","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"CrimsonTitan79"},"content":"import medbot.person.Patient;","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"CrimsonTitan79"},"content":"import java.io.File;","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"CrimsonTitan79"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"CrimsonTitan79"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"CrimsonTitan79"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"CrimsonTitan79"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"CrimsonTitan79"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"CrimsonTitan79"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"CrimsonTitan79"},"content":"class StorageTest {","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"CrimsonTitan79"},"content":"    private static final String INVALID_TEST_DATA \u003d \"src/test/data/StorageTest/invalidData.txt\";","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"CrimsonTitan79"},"content":"    private static final String VALID_TEST_DATA \u003d \"src/test/data/StorageTest/validData.txt\";","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"CrimsonTitan79"},"content":"    private static final String SAVED_TEST_DATA \u003d \"src/test/data/StorageTest/savedData.txt\";","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"CrimsonTitan79"},"content":"    private static final String NON_EXISTENT_FILE_NAME \u003d \"NON_EXISTENT_FILE.txt\";","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"CrimsonTitan79"},"content":"    private static final String ERROR_INVALID_STORAGE_LINE_INSTRUCTION \u003d \"\\n\\n\"","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"CrimsonTitan79"},"content":"            + \"Please decide if you wish to:\" + \"\\n\"","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"CrimsonTitan79"},"content":"            + \"1. Enter \u0027exit\u0027 to exit Medbot to correct the storage file\" + \"\\n\"","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"CrimsonTitan79"},"content":"            + \"2. Enter other valid commands to OVERWRITE all invalid data!\" + \"\\n\";","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"CrimsonTitan79"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"CrimsonTitan79"},"content":"    public void testConstructor_nullFilePath_exceptionThrown() {","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"CrimsonTitan79"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Storage(null));","lastModifiedDate":"2021-10-10"},{"lineNumber":31,"author":{"gitId":"CrimsonTitan79"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"CrimsonTitan79"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":34,"author":{"gitId":"CrimsonTitan79"},"content":"    public void testConstructor_invalidFilePath_exceptionThrown() {","lastModifiedDate":"2021-10-13"},{"lineNumber":35,"author":{"gitId":"CrimsonTitan79"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Storage(NON_EXISTENT_FILE_NAME));","lastModifiedDate":"2021-10-10"},{"lineNumber":36,"author":{"gitId":"CrimsonTitan79"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":37,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":38,"author":{"gitId":"CrimsonTitan79"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":39,"author":{"gitId":"CrimsonTitan79"},"content":"    public void testLoadStorage_partialInvalidFormat_exceptionThrown() throws MedBotException, FileNotFoundException {","lastModifiedDate":"2021-10-13"},{"lineNumber":40,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":41,"author":{"gitId":"CrimsonTitan79"},"content":"        Storage storage \u003d new Storage(INVALID_TEST_DATA);","lastModifiedDate":"2021-10-10"},{"lineNumber":42,"author":{"gitId":"CrimsonTitan79"},"content":"        PatientList actualPl \u003d new PatientList();","lastModifiedDate":"2021-10-10"},{"lineNumber":43,"author":{"gitId":"CrimsonTitan79"},"content":"        PatientList expectedPl \u003d getTestPatientList();","lastModifiedDate":"2021-10-10"},{"lineNumber":44,"author":{"gitId":"CrimsonTitan79"},"content":"        String expectedLoadStorageErrorMessage \u003d","lastModifiedDate":"2021-10-10"},{"lineNumber":45,"author":{"gitId":"CrimsonTitan79"},"content":"                \"Error: Line 8 of storage/data.txt is invalid!\\n\"","lastModifiedDate":"2021-10-13"},{"lineNumber":46,"author":{"gitId":"CrimsonTitan79"},"content":"                        + \"Error: Line 9 of storage/data.txt is invalid!\\n\"","lastModifiedDate":"2021-10-13"},{"lineNumber":47,"author":{"gitId":"CrimsonTitan79"},"content":"                        + \"Error: Line 10 of storage/data.txt is invalid!\\n\"","lastModifiedDate":"2021-10-13"},{"lineNumber":48,"author":{"gitId":"CrimsonTitan79"},"content":"                        + \"Error: Line 11 of storage/data.txt is invalid!\\n\"","lastModifiedDate":"2021-10-13"},{"lineNumber":49,"author":{"gitId":"CrimsonTitan79"},"content":"                        + ERROR_INVALID_STORAGE_LINE_INSTRUCTION;","lastModifiedDate":"2021-10-13"},{"lineNumber":50,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":51,"author":{"gitId":"CrimsonTitan79"},"content":"        //Test for both correct error message and correct loading of storage","lastModifiedDate":"2021-10-10"},{"lineNumber":52,"author":{"gitId":"CrimsonTitan79"},"content":"        assertEquals(expectedLoadStorageErrorMessage, storage.loadStorage(actualPl));","lastModifiedDate":"2021-10-10"},{"lineNumber":53,"author":{"gitId":"CrimsonTitan79"},"content":"        assertEquals(expectedPl.getStorageString(), actualPl.getStorageString());","lastModifiedDate":"2021-10-10"},{"lineNumber":54,"author":{"gitId":"CrimsonTitan79"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":55,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":56,"author":{"gitId":"CrimsonTitan79"},"content":"    // expected: patients added through the program","lastModifiedDate":"2021-10-10"},{"lineNumber":57,"author":{"gitId":"CrimsonTitan79"},"content":"    // actual: patients added through loading storage","lastModifiedDate":"2021-10-10"},{"lineNumber":58,"author":{"gitId":"CrimsonTitan79"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":59,"author":{"gitId":"CrimsonTitan79"},"content":"    public void testLoadStorage_validFormat() throws FileNotFoundException, MedBotException {","lastModifiedDate":"2021-10-13"},{"lineNumber":60,"author":{"gitId":"CrimsonTitan79"},"content":"        Storage storage \u003d new Storage(VALID_TEST_DATA);","lastModifiedDate":"2021-10-10"},{"lineNumber":61,"author":{"gitId":"CrimsonTitan79"},"content":"        PatientList actualPl \u003d new PatientList();","lastModifiedDate":"2021-10-10"},{"lineNumber":62,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":63,"author":{"gitId":"CrimsonTitan79"},"content":"        storage.loadStorage(actualPl);","lastModifiedDate":"2021-10-10"},{"lineNumber":64,"author":{"gitId":"CrimsonTitan79"},"content":"        PatientList expectedPl \u003d getTestPatientList();","lastModifiedDate":"2021-10-10"},{"lineNumber":65,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":66,"author":{"gitId":"CrimsonTitan79"},"content":"        // ensure storage data is properly loaded into the program","lastModifiedDate":"2021-10-13"},{"lineNumber":67,"author":{"gitId":"CrimsonTitan79"},"content":"        assertEquals(expectedPl.getStorageString(), actualPl.getStorageString());","lastModifiedDate":"2021-10-10"},{"lineNumber":68,"author":{"gitId":"CrimsonTitan79"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":69,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":70,"author":{"gitId":"CrimsonTitan79"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":71,"author":{"gitId":"CrimsonTitan79"},"content":"    public void testSaveData() throws MedBotException {","lastModifiedDate":"2021-10-13"},{"lineNumber":72,"author":{"gitId":"CrimsonTitan79"},"content":"        PatientList patientList \u003d getTestPatientList();","lastModifiedDate":"2021-10-10"},{"lineNumber":73,"author":{"gitId":"CrimsonTitan79"},"content":"        Storage storage \u003d new Storage(SAVED_TEST_DATA);","lastModifiedDate":"2021-10-10"},{"lineNumber":74,"author":{"gitId":"CrimsonTitan79"},"content":"        storage.saveData(patientList);","lastModifiedDate":"2021-10-10"},{"lineNumber":75,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":76,"author":{"gitId":"CrimsonTitan79"},"content":"        try {","lastModifiedDate":"2021-10-10"},{"lineNumber":77,"author":{"gitId":"CrimsonTitan79"},"content":"            String actualFileString \u003d scanFileToString(SAVED_TEST_DATA);","lastModifiedDate":"2021-10-10"},{"lineNumber":78,"author":{"gitId":"CrimsonTitan79"},"content":"            String expectedFileString \u003d scanFileToString(VALID_TEST_DATA);","lastModifiedDate":"2021-10-10"},{"lineNumber":79,"author":{"gitId":"CrimsonTitan79"},"content":"            assertEquals(expectedFileString, actualFileString);","lastModifiedDate":"2021-10-10"},{"lineNumber":80,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":81,"author":{"gitId":"CrimsonTitan79"},"content":"            deleteSavedData();","lastModifiedDate":"2021-10-13"},{"lineNumber":82,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":83,"author":{"gitId":"CrimsonTitan79"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-10-10"},{"lineNumber":84,"author":{"gitId":"CrimsonTitan79"},"content":"            throw new MedBotException(\"FILE ERROR\");","lastModifiedDate":"2021-10-10"},{"lineNumber":85,"author":{"gitId":"CrimsonTitan79"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":86,"author":{"gitId":"CrimsonTitan79"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":87,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":88,"author":{"gitId":"CrimsonTitan79"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":89,"author":{"gitId":"CrimsonTitan79"},"content":"     * Create a test PatientList containing Patient objects.","lastModifiedDate":"2021-10-10"},{"lineNumber":90,"author":{"gitId":"CrimsonTitan79"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":91,"author":{"gitId":"CrimsonTitan79"},"content":"     * @return a test PatientList","lastModifiedDate":"2021-10-10"},{"lineNumber":92,"author":{"gitId":"CrimsonTitan79"},"content":"     * @throws MedBotException if any patient instantiation fails","lastModifiedDate":"2021-10-10"},{"lineNumber":93,"author":{"gitId":"CrimsonTitan79"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":94,"author":{"gitId":"CrimsonTitan79"},"content":"    private PatientList getTestPatientList() throws MedBotException {","lastModifiedDate":"2021-10-10"},{"lineNumber":95,"author":{"gitId":"CrimsonTitan79"},"content":"        PatientList testPatientList \u003d new PatientList();","lastModifiedDate":"2021-10-10"},{"lineNumber":96,"author":{"gitId":"CrimsonTitan79"},"content":"        Patient patient1 \u003d createPatient(1, \"S7912345A\", \"Doge\",","lastModifiedDate":"2021-10-10"},{"lineNumber":97,"author":{"gitId":"CrimsonTitan79"},"content":"                \"91234567\", \"doge@mail.com\",","lastModifiedDate":"2021-10-10"},{"lineNumber":98,"author":{"gitId":"CrimsonTitan79"},"content":"                \"Doge Town 2nd Street\");","lastModifiedDate":"2021-10-10"},{"lineNumber":99,"author":{"gitId":"CrimsonTitan79"},"content":"        Patient patient2 \u003d createPatient(2, \"\", \"Cheems\",","lastModifiedDate":"2021-10-10"},{"lineNumber":100,"author":{"gitId":"CrimsonTitan79"},"content":"                \"\", \"cheems@mail.com\",","lastModifiedDate":"2021-10-10"},{"lineNumber":101,"author":{"gitId":"CrimsonTitan79"},"content":"                \"Doge County\");","lastModifiedDate":"2021-10-10"},{"lineNumber":102,"author":{"gitId":"CrimsonTitan79"},"content":"        Patient patient3 \u003d createPatient(4, \"S2312345A\", \"\",","lastModifiedDate":"2021-10-10"},{"lineNumber":103,"author":{"gitId":"CrimsonTitan79"},"content":"                \"81234567\", \"cheems@mail.com\",","lastModifiedDate":"2021-10-10"},{"lineNumber":104,"author":{"gitId":"CrimsonTitan79"},"content":"                \"Arken Street\");","lastModifiedDate":"2021-10-10"},{"lineNumber":105,"author":{"gitId":"CrimsonTitan79"},"content":"        Patient patient4 \u003d createPatient(6, \"F9123456X\", \"Emma\",","lastModifiedDate":"2021-10-10"},{"lineNumber":106,"author":{"gitId":"CrimsonTitan79"},"content":"                \"\", \"emma@mail.com\",","lastModifiedDate":"2021-10-10"},{"lineNumber":107,"author":{"gitId":"CrimsonTitan79"},"content":"                \"Greensville County\");","lastModifiedDate":"2021-10-10"},{"lineNumber":108,"author":{"gitId":"CrimsonTitan79"},"content":"        Patient patient5 \u003d createPatient(7, \"F3232145B\", \"Norman\",","lastModifiedDate":"2021-10-10"},{"lineNumber":109,"author":{"gitId":"CrimsonTitan79"},"content":"                \"\", \"norman@mail.com\",","lastModifiedDate":"2021-10-10"},{"lineNumber":110,"author":{"gitId":"CrimsonTitan79"},"content":"                \"Petalburg City\");","lastModifiedDate":"2021-10-10"},{"lineNumber":111,"author":{"gitId":"CrimsonTitan79"},"content":"        Patient patient6 \u003d createPatient(9, \"S9145645C\", \"Arthur\",","lastModifiedDate":"2021-10-10"},{"lineNumber":112,"author":{"gitId":"CrimsonTitan79"},"content":"                \"67654321\", \"\",","lastModifiedDate":"2021-10-10"},{"lineNumber":113,"author":{"gitId":"CrimsonTitan79"},"content":"                \"Evergrande District\");","lastModifiedDate":"2021-10-10"},{"lineNumber":114,"author":{"gitId":"CrimsonTitan79"},"content":"        Patient patient7 \u003d createPatient(10, \"T0123463X\", \"William\",","lastModifiedDate":"2021-10-10"},{"lineNumber":115,"author":{"gitId":"CrimsonTitan79"},"content":"                \"\", \"will@mail.com\",","lastModifiedDate":"2021-10-10"},{"lineNumber":116,"author":{"gitId":"CrimsonTitan79"},"content":"                \"Doge County\");","lastModifiedDate":"2021-10-10"},{"lineNumber":117,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":118,"author":{"gitId":"CrimsonTitan79"},"content":"        Patient[] patients \u003d {patient1, patient2, patient3, patient4, patient5, patient6, patient7};","lastModifiedDate":"2021-10-10"},{"lineNumber":119,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":120,"author":{"gitId":"CrimsonTitan79"},"content":"        for (Patient p : patients) {","lastModifiedDate":"2021-10-10"},{"lineNumber":121,"author":{"gitId":"CrimsonTitan79"},"content":"            testPatientList.setLastId(p.getPatientId());","lastModifiedDate":"2021-10-10"},{"lineNumber":122,"author":{"gitId":"CrimsonTitan79"},"content":"            testPatientList.addPatient(p);","lastModifiedDate":"2021-10-10"},{"lineNumber":123,"author":{"gitId":"CrimsonTitan79"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":124,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":125,"author":{"gitId":"CrimsonTitan79"},"content":"        return testPatientList;","lastModifiedDate":"2021-10-10"},{"lineNumber":126,"author":{"gitId":"CrimsonTitan79"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":127,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":128,"author":{"gitId":"CrimsonTitan79"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":129,"author":{"gitId":"CrimsonTitan79"},"content":"     * Instantiate a patient object with the given parameters.","lastModifiedDate":"2021-10-10"},{"lineNumber":130,"author":{"gitId":"CrimsonTitan79"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":131,"author":{"gitId":"CrimsonTitan79"},"content":"     * @param id                 patientId","lastModifiedDate":"2021-10-10"},{"lineNumber":132,"author":{"gitId":"CrimsonTitan79"},"content":"     * @param icNumber           I/C number of patient","lastModifiedDate":"2021-10-10"},{"lineNumber":133,"author":{"gitId":"CrimsonTitan79"},"content":"     * @param name               name of patient","lastModifiedDate":"2021-10-10"},{"lineNumber":134,"author":{"gitId":"CrimsonTitan79"},"content":"     * @param phoneNumber        phone number of patient","lastModifiedDate":"2021-10-10"},{"lineNumber":135,"author":{"gitId":"CrimsonTitan79"},"content":"     * @param emailAddress       email address of patient","lastModifiedDate":"2021-10-10"},{"lineNumber":136,"author":{"gitId":"CrimsonTitan79"},"content":"     * @param residentialAddress residential address of patient","lastModifiedDate":"2021-10-10"},{"lineNumber":137,"author":{"gitId":"CrimsonTitan79"},"content":"     * @return a patient object","lastModifiedDate":"2021-10-10"},{"lineNumber":138,"author":{"gitId":"CrimsonTitan79"},"content":"     * @throws MedBotException if fail to update any patient parameters","lastModifiedDate":"2021-10-10"},{"lineNumber":139,"author":{"gitId":"CrimsonTitan79"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":140,"author":{"gitId":"CrimsonTitan79"},"content":"    private Patient createPatient(int id, String icNumber, String name,","lastModifiedDate":"2021-10-10"},{"lineNumber":141,"author":{"gitId":"CrimsonTitan79"},"content":"                                  String phoneNumber, String emailAddress,","lastModifiedDate":"2021-10-10"},{"lineNumber":142,"author":{"gitId":"CrimsonTitan79"},"content":"                                  String residentialAddress)","lastModifiedDate":"2021-10-10"},{"lineNumber":143,"author":{"gitId":"CrimsonTitan79"},"content":"            throws MedBotException {","lastModifiedDate":"2021-10-10"},{"lineNumber":144,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":145,"author":{"gitId":"CrimsonTitan79"},"content":"        Patient patient \u003d new Patient();","lastModifiedDate":"2021-10-10"},{"lineNumber":146,"author":{"gitId":"CrimsonTitan79"},"content":"        patient.setPatientId(id);","lastModifiedDate":"2021-10-10"},{"lineNumber":147,"author":{"gitId":"CrimsonTitan79"},"content":"        String[] parameterPrefixes \u003d {\"i/\", \"n/\", \"p/\", \"e/\", \"a/\"};","lastModifiedDate":"2021-10-10"},{"lineNumber":148,"author":{"gitId":"CrimsonTitan79"},"content":"        String[] parameters \u003d {icNumber, name, phoneNumber, emailAddress, residentialAddress};","lastModifiedDate":"2021-10-10"},{"lineNumber":149,"author":{"gitId":"CrimsonTitan79"},"content":"        ArrayList\u003cString\u003e prefixPlusPersonParameters \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-10"},{"lineNumber":150,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":151,"author":{"gitId":"CrimsonTitan79"},"content":"        for (int i \u003d 0; i \u003c parameterPrefixes.length; i++) {","lastModifiedDate":"2021-10-10"},{"lineNumber":152,"author":{"gitId":"CrimsonTitan79"},"content":"            if (parameters[i].isBlank()) {","lastModifiedDate":"2021-10-10"},{"lineNumber":153,"author":{"gitId":"CrimsonTitan79"},"content":"                continue;","lastModifiedDate":"2021-10-10"},{"lineNumber":154,"author":{"gitId":"CrimsonTitan79"},"content":"            }","lastModifiedDate":"2021-10-10"},{"lineNumber":155,"author":{"gitId":"CrimsonTitan79"},"content":"            String prefixPlusPersonParameter \u003d parameterPrefixes[i] + parameters[i];","lastModifiedDate":"2021-10-10"},{"lineNumber":156,"author":{"gitId":"CrimsonTitan79"},"content":"            prefixPlusPersonParameters.add(prefixPlusPersonParameter);","lastModifiedDate":"2021-10-10"},{"lineNumber":157,"author":{"gitId":"CrimsonTitan79"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":158,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":159,"author":{"gitId":"CrimsonTitan79"},"content":"        for (String prefixPlusPersonParameter : prefixPlusPersonParameters) {","lastModifiedDate":"2021-10-10"},{"lineNumber":160,"author":{"gitId":"CrimsonTitan79"},"content":"            updatePersonalInformation(patient, prefixPlusPersonParameter);","lastModifiedDate":"2021-10-10"},{"lineNumber":161,"author":{"gitId":"CrimsonTitan79"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":162,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":163,"author":{"gitId":"CrimsonTitan79"},"content":"        return patient;","lastModifiedDate":"2021-10-10"},{"lineNumber":164,"author":{"gitId":"CrimsonTitan79"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":165,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":166,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":167,"author":{"gitId":"CrimsonTitan79"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":168,"author":{"gitId":"CrimsonTitan79"},"content":"     * Scans a text file and converts it to a String.","lastModifiedDate":"2021-10-10"},{"lineNumber":169,"author":{"gitId":"CrimsonTitan79"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":170,"author":{"gitId":"CrimsonTitan79"},"content":"     * @param filePath path of the text file","lastModifiedDate":"2021-10-10"},{"lineNumber":171,"author":{"gitId":"CrimsonTitan79"},"content":"     * @return String of the contents of the text file","lastModifiedDate":"2021-10-10"},{"lineNumber":172,"author":{"gitId":"CrimsonTitan79"},"content":"     * @throws FileNotFoundException if text file does not exist of path invalid","lastModifiedDate":"2021-10-10"},{"lineNumber":173,"author":{"gitId":"CrimsonTitan79"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":174,"author":{"gitId":"CrimsonTitan79"},"content":"    private String scanFileToString(String filePath) throws FileNotFoundException {","lastModifiedDate":"2021-10-10"},{"lineNumber":175,"author":{"gitId":"CrimsonTitan79"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2021-10-10"},{"lineNumber":176,"author":{"gitId":"CrimsonTitan79"},"content":"        Scanner s \u003d new Scanner(file);","lastModifiedDate":"2021-10-10"},{"lineNumber":177,"author":{"gitId":"CrimsonTitan79"},"content":"        String output \u003d \"\";","lastModifiedDate":"2021-10-10"},{"lineNumber":178,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":179,"author":{"gitId":"CrimsonTitan79"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2021-10-10"},{"lineNumber":180,"author":{"gitId":"CrimsonTitan79"},"content":"            output +\u003d s.nextLine();","lastModifiedDate":"2021-10-10"},{"lineNumber":181,"author":{"gitId":"CrimsonTitan79"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":182,"author":{"gitId":"CrimsonTitan79"},"content":"        return output;","lastModifiedDate":"2021-10-10"},{"lineNumber":183,"author":{"gitId":"CrimsonTitan79"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":184,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":185,"author":{"gitId":"CrimsonTitan79"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":186,"author":{"gitId":"CrimsonTitan79"},"content":"     * Delete saved test data text file from the JUNIT testing.","lastModifiedDate":"2021-10-10"},{"lineNumber":187,"author":{"gitId":"CrimsonTitan79"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":188,"author":{"gitId":"CrimsonTitan79"},"content":"    private void deleteSavedData() {","lastModifiedDate":"2021-10-10"},{"lineNumber":189,"author":{"gitId":"CrimsonTitan79"},"content":"        File savedDataFile \u003d new File(SAVED_TEST_DATA);","lastModifiedDate":"2021-10-10"},{"lineNumber":190,"author":{"gitId":"CrimsonTitan79"},"content":"        savedDataFile.delete();","lastModifiedDate":"2021-10-10"},{"lineNumber":191,"author":{"gitId":"CrimsonTitan79"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":192,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":193,"author":{"gitId":"CrimsonTitan79"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"CrimsonTitan79":193}},{"path":"src/test/java/medbot/UiTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"EricBryann"},"content":"package medbot;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"EricBryann"},"content":"import medbot.person.Patient;","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"EricBryann"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"EricBryann"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"EricBryann"},"content":"class UiTest {","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"EricBryann"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"EricBryann"},"content":"    public void testPrintAddPatientMessage() {","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"EricBryann"},"content":"        int patientId \u003d 2;","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"EricBryann"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"EricBryann"},"content":"        String expectedOutput \u003d \"Added patient with patient ID: 2\";","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"EricBryann"},"content":"        assertEquals(ui.getAddPatientMessage(patientId), expectedOutput);","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"EricBryann"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"EricBryann"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"EricBryann"},"content":"    public void testPrintDeletePatientMessage() {","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"EricBryann"},"content":"        int patientId \u003d 2;","lastModifiedDate":"2021-10-06"},{"lineNumber":22,"author":{"gitId":"EricBryann"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2021-10-06"},{"lineNumber":23,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":24,"author":{"gitId":"EricBryann"},"content":"        String expectedOutput \u003d \"Patient with id 2 deleted from system.\";","lastModifiedDate":"2021-10-06"},{"lineNumber":25,"author":{"gitId":"EricBryann"},"content":"        assertEquals(ui.getDeletePatientMessage(patientId), expectedOutput);","lastModifiedDate":"2021-10-06"},{"lineNumber":26,"author":{"gitId":"EricBryann"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":27,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":28,"author":{"gitId":"EricBryann"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":29,"author":{"gitId":"EricBryann"},"content":"    public void testEditPatientMessage() {","lastModifiedDate":"2021-10-06"},{"lineNumber":30,"author":{"gitId":"EricBryann"},"content":"        PatientList patientList \u003d new PatientList();","lastModifiedDate":"2021-10-06"},{"lineNumber":31,"author":{"gitId":"EricBryann"},"content":"        Patient patient \u003d new Patient();","lastModifiedDate":"2021-10-06"},{"lineNumber":32,"author":{"gitId":"EricBryann"},"content":"        patient.setName(\"John Doe\");","lastModifiedDate":"2021-10-06"},{"lineNumber":33,"author":{"gitId":"EricBryann"},"content":"        patient.setEmailAddress(\"John@gmail.com\");","lastModifiedDate":"2021-10-06"},{"lineNumber":34,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":35,"author":{"gitId":"EricBryann"},"content":"        patientList.addPatient(patient);","lastModifiedDate":"2021-10-06"},{"lineNumber":36,"author":{"gitId":"EricBryann"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2021-10-06"},{"lineNumber":37,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":38,"author":{"gitId":"EricBryann"},"content":"        patient.setName(\"Bob\");","lastModifiedDate":"2021-10-06"},{"lineNumber":39,"author":{"gitId":"EricBryann"},"content":"        String patientInfo \u003d patient.toString();","lastModifiedDate":"2021-10-06"},{"lineNumber":40,"author":{"gitId":"EricBryann"},"content":"        String expectedOutput \u003d \"The information of patient with ID 1 has been edited to:\"","lastModifiedDate":"2021-10-06"},{"lineNumber":41,"author":{"gitId":"EricBryann"},"content":"                + System.lineSeparator()","lastModifiedDate":"2021-10-06"},{"lineNumber":42,"author":{"gitId":"EricBryann"},"content":"                + \"Patient ID: 1 IC:  Name: Bob H/P:  Email: John@gmail.com Address: \";","lastModifiedDate":"2021-10-06"},{"lineNumber":43,"author":{"gitId":"EricBryann"},"content":"        int patientId \u003d 1;","lastModifiedDate":"2021-10-06"},{"lineNumber":44,"author":{"gitId":"EricBryann"},"content":"        assertEquals(ui.getEditPatientMessage(patientId, patientInfo), expectedOutput);","lastModifiedDate":"2021-10-06"},{"lineNumber":45,"author":{"gitId":"EricBryann"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":46,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":47,"author":{"gitId":"EricBryann"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":48,"author":{"gitId":"EricBryann"},"content":"    public void testGetPatientInfoMessage() {","lastModifiedDate":"2021-10-06"},{"lineNumber":49,"author":{"gitId":"EricBryann"},"content":"        PatientList patientList \u003d new PatientList();","lastModifiedDate":"2021-10-06"},{"lineNumber":50,"author":{"gitId":"EricBryann"},"content":"        Patient patient \u003d new Patient();","lastModifiedDate":"2021-10-06"},{"lineNumber":51,"author":{"gitId":"EricBryann"},"content":"        patient.setName(\"John Doe\");","lastModifiedDate":"2021-10-06"},{"lineNumber":52,"author":{"gitId":"EricBryann"},"content":"        patient.setEmailAddress(\"John@gmail.com\");","lastModifiedDate":"2021-10-06"},{"lineNumber":53,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":54,"author":{"gitId":"EricBryann"},"content":"        patientList.addPatient(patient);","lastModifiedDate":"2021-10-06"},{"lineNumber":55,"author":{"gitId":"EricBryann"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2021-10-06"},{"lineNumber":56,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":57,"author":{"gitId":"EricBryann"},"content":"        String patientInfo \u003d patient.toString();","lastModifiedDate":"2021-10-06"},{"lineNumber":58,"author":{"gitId":"justinfidelis"},"content":"        String expectedOutput \u003d \"Here\u0027s the requested patient:\" + System.lineSeparator()","lastModifiedDate":"2021-10-13"},{"lineNumber":59,"author":{"gitId":"Kureans"},"content":"                + \"Patient ID: 1 IC:  \" + \"Name: John Doe H/P:  Email: John@gmail.com Address: \";","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"EricBryann"},"content":"        int patientId \u003d 1;","lastModifiedDate":"2021-10-06"},{"lineNumber":61,"author":{"gitId":"Kureans"},"content":"        assertEquals(ui.getPatientInfo(patientInfo), expectedOutput);","lastModifiedDate":"2021-10-12"},{"lineNumber":62,"author":{"gitId":"EricBryann"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":63,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":64,"author":{"gitId":"EricBryann"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":65,"author":{"gitId":"EricBryann"},"content":"    public void testGetAllPatientsMessage() {","lastModifiedDate":"2021-10-06"},{"lineNumber":66,"author":{"gitId":"EricBryann"},"content":"        PatientList patientList \u003d new PatientList();","lastModifiedDate":"2021-10-06"},{"lineNumber":67,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":68,"author":{"gitId":"Kureans"},"content":"        Patient patient1 \u003d new Patient();","lastModifiedDate":"2021-10-07"},{"lineNumber":69,"author":{"gitId":"Kureans"},"content":"        patient1.setName(\"John Doe\");","lastModifiedDate":"2021-10-07"},{"lineNumber":70,"author":{"gitId":"Kureans"},"content":"        patient1.setEmailAddress(\"John@gmail.com\");","lastModifiedDate":"2021-10-07"},{"lineNumber":71,"author":{"gitId":"Kureans"},"content":"        patientList.addPatient(patient1);","lastModifiedDate":"2021-10-07"},{"lineNumber":72,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":73,"author":{"gitId":"EricBryann"},"content":"        Patient patient2 \u003d new Patient();","lastModifiedDate":"2021-10-06"},{"lineNumber":74,"author":{"gitId":"Kureans"},"content":"        patient2.setName(\"Bob\");","lastModifiedDate":"2021-10-07"},{"lineNumber":75,"author":{"gitId":"Kureans"},"content":"        patient2.setPhoneNumber(\"88889999\");","lastModifiedDate":"2021-10-07"},{"lineNumber":76,"author":{"gitId":"EricBryann"},"content":"        patientList.addPatient(patient2);","lastModifiedDate":"2021-10-06"},{"lineNumber":77,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":78,"author":{"gitId":"EricBryann"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2021-10-06"},{"lineNumber":79,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":80,"author":{"gitId":"Kureans"},"content":"        String patientOneInfo \u003d patient1.toString();","lastModifiedDate":"2021-10-07"},{"lineNumber":81,"author":{"gitId":"EricBryann"},"content":"        String patientTwoInfo \u003d patient2.toString();","lastModifiedDate":"2021-10-06"},{"lineNumber":82,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":83,"author":{"gitId":"justinfidelis"},"content":"        String expectedOutput \u003d \"Here is a list of all patients:\" + System.lineSeparator() + patientOneInfo","lastModifiedDate":"2021-10-13"},{"lineNumber":84,"author":{"gitId":"justinfidelis"},"content":"                + System.lineSeparator() + patientTwoInfo + System.lineSeparator();","lastModifiedDate":"2021-10-13"},{"lineNumber":85,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":86,"author":{"gitId":"EricBryann"},"content":"        assertEquals(ui.getAllPatientsString(patientList), expectedOutput);","lastModifiedDate":"2021-10-06"},{"lineNumber":87,"author":{"gitId":"EricBryann"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":88,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":89,"author":{"gitId":"Kureans"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":90,"author":{"gitId":"Kureans"},"content":"    public void testGetCommandListMessage() {","lastModifiedDate":"2021-10-07"},{"lineNumber":91,"author":{"gitId":"Kureans"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2021-10-07"},{"lineNumber":92,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":93,"author":{"gitId":"Kureans"},"content":"        String expectedOutput \u003d \"Here are the list of commands:\\n\\n\"","lastModifiedDate":"2021-10-07"},{"lineNumber":94,"author":{"gitId":"Kureans"},"content":"                + \"help\\n\" + \"add\\n\" + \"list\\n\" + \"view\\n\" + \"edit\\n\" + \"delete\\n\"","lastModifiedDate":"2021-10-07"},{"lineNumber":95,"author":{"gitId":"Kureans"},"content":"                + \"exit\\n\" + \"\\n\"","lastModifiedDate":"2021-10-07"},{"lineNumber":96,"author":{"gitId":"Kureans"},"content":"                + \"To obtain more information on each command and their respective required inputs, type:\\n\"","lastModifiedDate":"2021-10-07"},{"lineNumber":97,"author":{"gitId":"Kureans"},"content":"                + \"help [COMMAND]\\n\\n\"","lastModifiedDate":"2021-10-12"},{"lineNumber":98,"author":{"gitId":"Kureans"},"content":"                + \"*Note that all commands will remove any \u0027|\u0027 inputs for format parsing purposes\";","lastModifiedDate":"2021-10-12"},{"lineNumber":99,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":100,"author":{"gitId":"Kureans"},"content":"        assertEquals(ui.getCommandList(), expectedOutput);","lastModifiedDate":"2021-10-07"},{"lineNumber":101,"author":{"gitId":"Kureans"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":102,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":103,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":104,"author":{"gitId":"EricBryann"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"justinfidelis":4,"EricBryann":75,"Kureans":25}},{"path":"text-ui-test/runtest.sh","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# change to script directory","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"cd \"${0%/*}\"","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"cd ..","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"./gradlew clean shadowJar","lastModifiedDate":"2020-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"cd text-ui-test","lastModifiedDate":"2020-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"java  -jar $(find ../build/libs/ -mindepth 1 -print -quit) \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"CrimsonTitan79"},"content":"diff EXPECTED.TXT ACTUAL.TXT","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    echo \"Test passed!\"","lastModifiedDate":"2020-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    echo \"Test failed!\"","lastModifiedDate":"2020-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"CrimsonTitan79":1,"-":20}}]
