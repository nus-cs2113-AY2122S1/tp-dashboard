[{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"EricBryann"},"content":"    mainClassName \u003d \"medbot.MedBot\"","lastModifiedDate":"2021-10-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"EricBryann"},"content":"    archiveBaseName \u003d \"medBot\"","lastModifiedDate":"2021-10-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.23\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"Kureans"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2021-10-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":44,"EricBryann":2,"Kureans":1}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# About us","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"Display | Name | Github Profile | Portfolio ","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"--------|:----:|:--------------:|:---------:","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"Kureans"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Yi Shiong | [Github](https://github.com/Kureans) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2021-09-30"},{"lineNumber":6,"author":{"gitId":"CrimsonTitan79"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Atticus | [Github](https://github.com/CrimsonTitan79) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2021-09-30"},{"lineNumber":7,"author":{"gitId":"jushg"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Hoang Trong Tan | [Github](https://github.com/jushg) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2021-09-30"},{"lineNumber":8,"author":{"gitId":"EricBryann"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Eric Bryan | [Github](https://github.com/) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2021-09-30"},{"lineNumber":9,"author":{"gitId":"justinfidelis"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Justin Wong | [Github](https://github.com/justinfidelis) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2021-09-30"}],"authorContributionMap":{"justinfidelis":1,"CrimsonTitan79":1,"jushg":1,"-":4,"Kureans":1,"EricBryann":1}},{"path":"docs/ClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Kureans"},"content":"@startuml","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"Kureans"},"content":"\u0027https://plantuml.com/class-diagram","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"Kureans"},"content":"abstract class AbstractList","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"Kureans"},"content":"abstract AbstractCollection","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"Kureans"},"content":"interface List","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"Kureans"},"content":"interface Collection","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"Kureans"},"content":"List \u003c|-- AbstractList","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"Kureans"},"content":"Collection \u003c|-- AbstractCollection","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"Kureans"},"content":"Collection \u003c|- List","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"Kureans"},"content":"AbstractCollection \u003c|- AbstractList","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"Kureans"},"content":"AbstractList \u003c|-- ArrayList","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"Kureans"},"content":"class ArrayList {","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"Kureans"},"content":"Object[] elementData","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"Kureans"},"content":"size()","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"Kureans"},"content":"}","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"Kureans"},"content":"enum ViewType {","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"Kureans"},"content":"PATIENT_INFO","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"Kureans"},"content":"SCHEDULER","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"Kureans"},"content":"MEDICAL_STAFF_INFO","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"Kureans"},"content":"}","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"Kureans"},"content":"@enduml","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"Kureans":27}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Developer Guide","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Acknowledgements","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"Kureans"},"content":"Inspired by AB3\u0027s [Developer Guide](https://se-education.org/addressbook-level3/DeveloperGuide.html). ","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"Kureans"},"content":"## Design ","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":9,"author":{"gitId":"Kureans"},"content":"### Architecture","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":11,"author":{"gitId":"Kureans"},"content":"## Implementation","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"Kureans"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"Kureans"},"content":"### Switch view feature","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"Kureans"},"content":"#### Implementation","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"Kureans"},"content":"The switch view mechanism is heavily linked to the `Parser` class. By having a","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"Kureans"},"content":"`ViewType` enumeration property in `Parser`, the view of the console can be switched by ","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"Kureans"},"content":"executing the appropriate `SwitchCommand` class, which modifies the corresponding `ViewType`","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"Kureans"},"content":"of the `Parser`. The 3 possible views and the corresponding user input commands are as follows:","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"Kureans"},"content":"* `switch patientinfo` - switches to the patient info view.","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"Kureans"},"content":"* `switch staffinfo` - switches to the medical staff info view.","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"Kureans"},"content":"* `switch scheduler` - switches to the scheduler view.","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"Kureans"},"content":"* `switch` - will switch to a another view depending on the current view. ","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"Kureans"},"content":"Each command essentially evokes the `Parser#setViewType(ViewType)` method, which will set the corresponding","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"Kureans"},"content":"`ViewType` property in the `Parser` class.","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"Kureans"},"content":"By having different views, we can execute different commands given the same","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"Kureans"},"content":"user input. This will be demonstrated in the example usage scenario below, and how","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"Kureans"},"content":"the switch view mechanism works for different views.","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"Kureans"},"content":"![Image of Sequence Diagram]()","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":37,"author":{"gitId":"Kureans"},"content":"\u003c!--","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"Kureans"},"content":"Update with image + explanation","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"Kureans"},"content":"--\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":41,"author":{"gitId":"Kureans"},"content":"#### Design Considerations","lastModifiedDate":"2021-10-19"},{"lineNumber":42,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":43,"author":{"gitId":"Kureans"},"content":"**Aspect: How different views are identified**","lastModifiedDate":"2021-10-19"},{"lineNumber":44,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":45,"author":{"gitId":"Kureans"},"content":"Currently, a enum property in the `Parser` class is used to","lastModifiedDate":"2021-10-19"},{"lineNumber":46,"author":{"gitId":"Kureans"},"content":"differentiate between views.","lastModifiedDate":"2021-10-19"},{"lineNumber":47,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":48,"author":{"gitId":"Kureans"},"content":"Pros: ","lastModifiedDate":"2021-10-19"},{"lineNumber":49,"author":{"gitId":"Kureans"},"content":"* Straightforward to implement","lastModifiedDate":"2021-10-19"},{"lineNumber":50,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":51,"author":{"gitId":"Kureans"},"content":"Cons: ","lastModifiedDate":"2021-10-19"},{"lineNumber":52,"author":{"gitId":"Kureans"},"content":"* Maintainability concerns as complexity of Uis increase","lastModifiedDate":"2021-10-19"},{"lineNumber":53,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":54,"author":{"gitId":"Kureans"},"content":"#### Alternatives Considered","lastModifiedDate":"2021-10-19"},{"lineNumber":55,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":56,"author":{"gitId":"Kureans"},"content":"3 sub `Ui` classes \u0026 sub `Parser` classes that inherit from the main `Ui` and `Parser` class.","lastModifiedDate":"2021-10-19"},{"lineNumber":57,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":58,"author":{"gitId":"Kureans"},"content":"Pros:","lastModifiedDate":"2021-10-19"},{"lineNumber":59,"author":{"gitId":"Kureans"},"content":"* Potential for reduced coupling where only sub `Ui` or sub `Parser` classes affected by changes in other class","lastModifiedDate":"2021-10-19"},{"lineNumber":60,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":61,"author":{"gitId":"Kureans"},"content":"Cons:","lastModifiedDate":"2021-10-19"},{"lineNumber":62,"author":{"gitId":"Kureans"},"content":"* Less straightforward implementation","lastModifiedDate":"2021-10-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":64,"author":{"gitId":"EricBryann"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":65,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":66,"author":{"gitId":"EricBryann"},"content":"### Find feature","lastModifiedDate":"2021-10-20"},{"lineNumber":67,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":68,"author":{"gitId":"EricBryann"},"content":"#### Functionality","lastModifiedDate":"2021-10-20"},{"lineNumber":69,"author":{"gitId":"EricBryann"},"content":"This command will find a list of `Person` that match the given attributes in a table format.","lastModifiedDate":"2021-10-20"},{"lineNumber":70,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":71,"author":{"gitId":"EricBryann"},"content":"#### Implementation","lastModifiedDate":"2021-10-20"},{"lineNumber":72,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":73,"author":{"gitId":"EricBryann"},"content":"The `find` feature is facilitated by the `FindCommand` class. It extends from `Command` class and overrides","lastModifiedDate":"2021-10-20"},{"lineNumber":74,"author":{"gitId":"EricBryann"},"content":"the `execute()` method to achieve the desired functionality.","lastModifiedDate":"2021-10-20"},{"lineNumber":75,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":76,"author":{"gitId":"EricBryann"},"content":"The example below gives a direction on how this command behaves.","lastModifiedDate":"2021-10-20"},{"lineNumber":77,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":78,"author":{"gitId":"EricBryann"},"content":"Step 1.","lastModifiedDate":"2021-10-20"},{"lineNumber":79,"author":{"gitId":"EricBryann"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":80,"author":{"gitId":"EricBryann"},"content":"A User execute the `find n/John` command. The `Parser#parseCommand()` method will parse this command","lastModifiedDate":"2021-10-20"},{"lineNumber":81,"author":{"gitId":"EricBryann"},"content":"and eventually returns a `new FindPatientCommand()` object.","lastModifiedDate":"2021-10-20"},{"lineNumber":82,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":83,"author":{"gitId":"EricBryann"},"content":"Step 2.","lastModifiedDate":"2021-10-20"},{"lineNumber":84,"author":{"gitId":"EricBryann"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":85,"author":{"gitId":"EricBryann"},"content":"A `CommandManager` object will run the `execute()` method in the `new FindPatientCommand()` object.","lastModifiedDate":"2021-10-20"},{"lineNumber":86,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":87,"author":{"gitId":"EricBryann"},"content":"Step 3.","lastModifiedDate":"2021-10-20"},{"lineNumber":88,"author":{"gitId":"EricBryann"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":89,"author":{"gitId":"EricBryann"},"content":"The `execute()` method will call `PersonList#findPersons()` method with the parameter `n/John` passed in.","lastModifiedDate":"2021-10-20"},{"lineNumber":90,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":91,"author":{"gitId":"EricBryann"},"content":"Step 4.","lastModifiedDate":"2021-10-20"},{"lineNumber":92,"author":{"gitId":"EricBryann"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":93,"author":{"gitId":"EricBryann"},"content":"`PersonList#findPersons()` will check all the `persons` list and returns all `Person` in the list whose name contains","lastModifiedDate":"2021-10-20"},{"lineNumber":94,"author":{"gitId":"EricBryann"},"content":"the string `john`. The attribute match is case-insensitive.","lastModifiedDate":"2021-10-20"},{"lineNumber":95,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":96,"author":{"gitId":"EricBryann"},"content":"Step 5.","lastModifiedDate":"2021-10-20"},{"lineNumber":97,"author":{"gitId":"EricBryann"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":98,"author":{"gitId":"EricBryann"},"content":"The filtered `Person` list is then passed into the `Ui` class to be displayed into a table format through","lastModifiedDate":"2021-10-20"},{"lineNumber":99,"author":{"gitId":"EricBryann"},"content":"`Ui#getFindPatientsMessage()`.","lastModifiedDate":"2021-10-20"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":103,"author":{"gitId":"-"},"content":"## Product scope","lastModifiedDate":"2020-05-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"### Target user profile","lastModifiedDate":"2020-05-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"{Describe the target user profile}","lastModifiedDate":"2020-05-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"### Value proposition","lastModifiedDate":"2020-05-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"{Describe the value proposition: what problem does it solve?}","lastModifiedDate":"2020-05-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"## User Stories","lastModifiedDate":"2020-05-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"|Version| As a ... | I want to ... | So that I can ...|","lastModifiedDate":"2020-05-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"|--------|----------|---------------|------------------|","lastModifiedDate":"2020-05-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"|v1.0|new user|see usage instructions|refer to them when I forget how to use the application|","lastModifiedDate":"2020-05-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"|v2.0|user|find a to-do item by name|locate a to-do without having to go through the entire list|","lastModifiedDate":"2020-05-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"## Non-Functional Requirements","lastModifiedDate":"2020-05-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"{Give non-functional requirements}","lastModifiedDate":"2020-05-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"## Glossary","lastModifiedDate":"2020-05-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"* *glossary item* - Definition","lastModifiedDate":"2020-05-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"## Instructions for manual testing","lastModifiedDate":"2020-05-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"{Give instructions on how to do a manual product testing e.g., how to load sample data to be used for testing}","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"-":38,"Kureans":55,"EricBryann":36}},{"path":"docs/SwitchViewDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Kureans"},"content":"@startuml","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"Kureans"},"content":"Medbot -\u003e Ui","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"Kureans"},"content":"Ui -\u003e Parser","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"Kureans"},"content":"Parser -\u003e Command","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"Kureans"},"content":"Command --\u003e Ui","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"Kureans"},"content":"Command -\u003e PatientList","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"Kureans"},"content":"PatientList --\u003e Ui","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"Kureans"},"content":"@enduml","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"Kureans":8}},{"path":"src/main/java/medbot/CommandManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jushg"},"content":"package medbot;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"jushg"},"content":"import medbot.command.Command;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"jushg"},"content":"import medbot.exceptions.MedBotException;","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"jushg"},"content":"import medbot.list.MedicalStaffList;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"jushg"},"content":"import medbot.list.PatientList;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"jushg"},"content":"import medbot.utilities.ViewType;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"jushg"},"content":"public class CommandManager {","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"jushg"},"content":"    private PatientList patientList;","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"jushg"},"content":"    private MedicalStaffList staffList;","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"jushg"},"content":"    private static ViewType viewType;","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"jushg"},"content":"    public CommandManager(PatientList patientList, MedicalStaffList staffList) {","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"jushg"},"content":"        this.patientList \u003d patientList;","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"jushg"},"content":"        this.staffList \u003d staffList;","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"jushg"},"content":"        viewType \u003d ViewType.PATIENT_INFO;","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"jushg"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"jushg"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"jushg":21}},{"path":"src/main/java/medbot/MedBot.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"justinfidelis"},"content":"package medbot;","lastModifiedDate":"2021-09-30"},{"lineNumber":2,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":3,"author":{"gitId":"justinfidelis"},"content":"import medbot.command.Command;","lastModifiedDate":"2021-09-30"},{"lineNumber":4,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":5,"author":{"gitId":"CrimsonTitan79"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"justinfidelis"},"content":"import medbot.exceptions.MedBotException;","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"jushg"},"content":"import medbot.list.MedicalStaffList;","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"jushg"},"content":"import medbot.list.PatientList;","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"jushg"},"content":"import medbot.utilities.ViewType;","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"justinfidelis"},"content":"public class MedBot {","lastModifiedDate":"2021-09-30"},{"lineNumber":13,"author":{"gitId":"justinfidelis"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-09-30"},{"lineNumber":14,"author":{"gitId":"justinfidelis"},"content":"        interactWithUser();","lastModifiedDate":"2021-09-30"},{"lineNumber":15,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":16,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":17,"author":{"gitId":"justinfidelis"},"content":"    public static void interactWithUser() {","lastModifiedDate":"2021-09-30"},{"lineNumber":18,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"justinfidelis"},"content":"        Scheduler scheduler \u003d new Scheduler();","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"justinfidelis"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2021-09-30"},{"lineNumber":21,"author":{"gitId":"CrimsonTitan79"},"content":"        Storage storage \u003d null;","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"jushg"},"content":"        ViewType viewContext;","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"CrimsonTitan79"},"content":"        boolean isInteracting \u003d true;","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"CrimsonTitan79"},"content":"        ui.printWelcomeMessageOne();","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"CrimsonTitan79"},"content":"        try {","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"CrimsonTitan79"},"content":"            storage \u003d new Storage();","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"justinfidelis"},"content":"            String loadStorageErrorMessage \u003d storage.loadStorage(scheduler.getPatientList());","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"CrimsonTitan79"},"content":"            if (!loadStorageErrorMessage.isBlank()) {","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"CrimsonTitan79"},"content":"                ui.printOutput(loadStorageErrorMessage);","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"CrimsonTitan79"},"content":"            }","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"CrimsonTitan79"},"content":"            ui.printWelcomeMessageTwo();","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"CrimsonTitan79"},"content":"        } catch (FileNotFoundException | MedBotException e) {","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"CrimsonTitan79"},"content":"            ui.printOutput(e.getMessage());","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"CrimsonTitan79"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":39,"author":{"gitId":"justinfidelis"},"content":"        while (isInteracting) {","lastModifiedDate":"2021-09-30"},{"lineNumber":40,"author":{"gitId":"justinfidelis"},"content":"            String userInput \u003d ui.readInput();","lastModifiedDate":"2021-09-30"},{"lineNumber":41,"author":{"gitId":"justinfidelis"},"content":"            try {","lastModifiedDate":"2021-09-30"},{"lineNumber":42,"author":{"gitId":"justinfidelis"},"content":"                Command command \u003d Parser.parseCommand(userInput);","lastModifiedDate":"2021-10-20"},{"lineNumber":43,"author":{"gitId":"justinfidelis"},"content":"                command.execute(scheduler, ui);","lastModifiedDate":"2021-10-20"},{"lineNumber":44,"author":{"gitId":"justinfidelis"},"content":"                storage.saveData(scheduler.getPatientList());","lastModifiedDate":"2021-10-20"},{"lineNumber":45,"author":{"gitId":"justinfidelis"},"content":"                isInteracting \u003d !command.isExit();","lastModifiedDate":"2021-09-30"},{"lineNumber":46,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":47,"author":{"gitId":"justinfidelis"},"content":"            } catch (MedBotException mbe) {","lastModifiedDate":"2021-09-30"},{"lineNumber":48,"author":{"gitId":"justinfidelis"},"content":"                ui.printOutput(mbe.getMessage());","lastModifiedDate":"2021-09-30"},{"lineNumber":49,"author":{"gitId":"justinfidelis"},"content":"            }","lastModifiedDate":"2021-09-30"},{"lineNumber":50,"author":{"gitId":"justinfidelis"},"content":"        }","lastModifiedDate":"2021-09-30"},{"lineNumber":51,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":52,"author":{"gitId":"justinfidelis"},"content":"}","lastModifiedDate":"2021-09-30"}],"authorContributionMap":{"justinfidelis":27,"CrimsonTitan79":19,"jushg":5,"EricBryann":1}},{"path":"src/main/java/medbot/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"justinfidelis"},"content":"package medbot;","lastModifiedDate":"2021-09-30"},{"lineNumber":2,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":3,"author":{"gitId":"justinfidelis"},"content":"import medbot.command.AddPersonCommand;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"justinfidelis"},"content":"import medbot.command.DeletePersonCommand;","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"justinfidelis"},"content":"import medbot.command.EditPersonCommand;","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"justinfidelis"},"content":"import medbot.command.ViewPersonCommand;","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"justinfidelis"},"content":"import medbot.command.FindPersonCommand;","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"jushg"},"content":"import medbot.command.HelpCommand;","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"jushg"},"content":"import medbot.command.SwitchCommand;","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"Kureans"},"content":"import medbot.command.Command;","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"jushg"},"content":"import medbot.command.ExitCommand;","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"justinfidelis"},"content":"import medbot.command.CommandType;","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"jushg"},"content":"import medbot.command.patientcommand.AddPatientCommand;","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"jushg"},"content":"import medbot.command.patientcommand.DeletePatientCommand;","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"jushg"},"content":"import medbot.command.patientcommand.EditPatientCommand;","lastModifiedDate":"2021-10-18"},{"lineNumber":17,"author":{"gitId":"EricBryann"},"content":"import medbot.command.patientcommand.FindPatientCommand;","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"EricBryann"},"content":"import medbot.command.patientcommand.ListPatientCommand;","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"jushg"},"content":"import medbot.command.patientcommand.ViewPatientCommand;","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"jushg"},"content":"import medbot.command.staffcommand.AddStaffCommand;","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"jushg"},"content":"import medbot.command.staffcommand.DeleteStaffCommand;","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"jushg"},"content":"import medbot.command.staffcommand.EditStaffCommand;","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"jushg"},"content":"import medbot.command.staffcommand.FindStaffCommand;","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"jushg"},"content":"import medbot.command.staffcommand.ListStaffCommand;","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"jushg"},"content":"import medbot.command.staffcommand.ViewStaffCommand;","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"justinfidelis"},"content":"import medbot.exceptions.MedBotParserException;","lastModifiedDate":"2021-10-18"},{"lineNumber":30,"author":{"gitId":"justinfidelis"},"content":"import medbot.person.Patient;","lastModifiedDate":"2021-09-30"},{"lineNumber":31,"author":{"gitId":"justinfidelis"},"content":"import medbot.person.Person;","lastModifiedDate":"2021-09-30"},{"lineNumber":32,"author":{"gitId":"jushg"},"content":"import medbot.person.Staff;","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"Kureans"},"content":"import medbot.utilities.ViewType;","lastModifiedDate":"2021-10-16"},{"lineNumber":34,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":35,"author":{"gitId":"EricBryann"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"EricBryann"},"content":"import java.util.function.Function;","lastModifiedDate":"2021-10-04"},{"lineNumber":37,"author":{"gitId":"EricBryann"},"content":"import java.util.regex.MatchResult;","lastModifiedDate":"2021-10-04"},{"lineNumber":38,"author":{"gitId":"EricBryann"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2021-10-04"},{"lineNumber":39,"author":{"gitId":"EricBryann"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2021-10-04"},{"lineNumber":40,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":41,"author":{"gitId":"justinfidelis"},"content":"public class Parser {","lastModifiedDate":"2021-09-30"},{"lineNumber":42,"author":{"gitId":"jushg"},"content":"    private static final String END_LINE \u003d System.lineSeparator();","lastModifiedDate":"2021-10-19"},{"lineNumber":43,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":44,"author":{"gitId":"justinfidelis"},"content":"    private static final String COMMAND_ADD \u003d \"add\";","lastModifiedDate":"2021-09-30"},{"lineNumber":45,"author":{"gitId":"justinfidelis"},"content":"    private static final String COMMAND_DELETE \u003d \"delete\";","lastModifiedDate":"2021-09-30"},{"lineNumber":46,"author":{"gitId":"justinfidelis"},"content":"    private static final String COMMAND_EDIT \u003d \"edit\";","lastModifiedDate":"2021-09-30"},{"lineNumber":47,"author":{"gitId":"justinfidelis"},"content":"    private static final String COMMAND_VIEW \u003d \"view\";","lastModifiedDate":"2021-09-30"},{"lineNumber":48,"author":{"gitId":"justinfidelis"},"content":"    private static final String COMMAND_LIST \u003d \"list\";","lastModifiedDate":"2021-09-30"},{"lineNumber":49,"author":{"gitId":"justinfidelis"},"content":"    private static final String COMMAND_EXIT \u003d \"exit\";","lastModifiedDate":"2021-09-30"},{"lineNumber":50,"author":{"gitId":"Kureans"},"content":"    private static final String COMMAND_HELP \u003d \"help\";","lastModifiedDate":"2021-10-07"},{"lineNumber":51,"author":{"gitId":"Kureans"},"content":"    private static final String COMMAND_SWITCH \u003d \"switch\";","lastModifiedDate":"2021-10-16"},{"lineNumber":52,"author":{"gitId":"EricBryann"},"content":"    private static final String COMMAND_FIND \u003d \"find\";","lastModifiedDate":"2021-10-19"},{"lineNumber":53,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":54,"author":{"gitId":"EricBryann"},"content":"    private static final String PARAMETER_NAME \u003d \"n/\";","lastModifiedDate":"2021-10-06"},{"lineNumber":55,"author":{"gitId":"EricBryann"},"content":"    private static final String PARAMETER_PHONE \u003d \"p/\";","lastModifiedDate":"2021-10-06"},{"lineNumber":56,"author":{"gitId":"EricBryann"},"content":"    private static final String PARAMETER_EMAIL \u003d \"e/\";","lastModifiedDate":"2021-10-06"},{"lineNumber":57,"author":{"gitId":"EricBryann"},"content":"    private static final String PARAMETER_IC \u003d \"i/\";","lastModifiedDate":"2021-10-06"},{"lineNumber":58,"author":{"gitId":"EricBryann"},"content":"    private static final String PARAMETER_ADDRESS \u003d \"a/\";","lastModifiedDate":"2021-10-06"},{"lineNumber":59,"author":{"gitId":"justinfidelis"},"content":"    private static final int PARAMETER_BUFFER \u003d 2;","lastModifiedDate":"2021-10-18"},{"lineNumber":60,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":61,"author":{"gitId":"justinfidelis"},"content":"    private static final String VIEW_TYPE_PATIENT_VIEW \u003d \"p\";","lastModifiedDate":"2021-10-18"},{"lineNumber":62,"author":{"gitId":"justinfidelis"},"content":"    private static final String VIEW_TYPE_MEDICAL_STAFF_VIEW \u003d \"m\";","lastModifiedDate":"2021-10-18"},{"lineNumber":63,"author":{"gitId":"justinfidelis"},"content":"    private static final String VIEW_TYPE_SCHEDULER_VIEW \u003d \"s\";","lastModifiedDate":"2021-10-18"},{"lineNumber":64,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":65,"author":{"gitId":"jushg"},"content":"    private static final String ERROR_WRONG_COMMAND \u003d \"Unable to parse command.\" + END_LINE;","lastModifiedDate":"2021-10-19"},{"lineNumber":66,"author":{"gitId":"jushg"},"content":"    private static final String ERROR_NO_VIEW_FOUND \u003d \"Unidentified view.\" + END_LINE;","lastModifiedDate":"2021-10-19"},{"lineNumber":67,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":68,"author":{"gitId":"jushg"},"content":"    private static final String ERROR_NO_PARAMETER \u003d \"No parameters given\" + END_LINE;","lastModifiedDate":"2021-10-19"},{"lineNumber":69,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":70,"author":{"gitId":"justinfidelis"},"content":"    private static final String ERROR_ID_NOT_SPECIFIED \u003d \"ID not specified or not a number.\" + END_LINE;","lastModifiedDate":"2021-10-20"},{"lineNumber":71,"author":{"gitId":"jushg"},"content":"    private static final String ERROR_PATIENT_ID_NOT_SPECIFIED \u003d \"Patient ID not specified.\" + END_LINE;","lastModifiedDate":"2021-10-19"},{"lineNumber":72,"author":{"gitId":"justinfidelis"},"content":"    private static final String ERROR_STAFF_ID_NOT_SPECIFIED \u003d \"Staff ID not specified.\" + END_LINE;","lastModifiedDate":"2021-10-20"},{"lineNumber":73,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":74,"author":{"gitId":"jushg"},"content":"    private static final String ERROR_INVALID_VIEW_TYPE \u003d \"Invalid view type code.\" + END_LINE;","lastModifiedDate":"2021-10-19"},{"lineNumber":75,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":76,"author":{"gitId":"justinfidelis"},"content":"    private static final String ERROR_NAME_NOT_SPECIFIED \u003d \"Name not specified.\" + END_LINE;","lastModifiedDate":"2021-10-20"},{"lineNumber":77,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":78,"author":{"gitId":"justinfidelis"},"content":"    private static final String ERROR_IC_NUMBER_NOT_SPECIFIED \u003d \"IC number not specified.\" + END_LINE;","lastModifiedDate":"2021-10-20"},{"lineNumber":79,"author":{"gitId":"justinfidelis"},"content":"    private static final String ERROR_IC_NUMBER_INCORRECT_FORMAT \u003d \"Incorrect IC number format.\" + END_LINE;","lastModifiedDate":"2021-10-20"},{"lineNumber":80,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":81,"author":{"gitId":"justinfidelis"},"content":"    private static final String ERROR_PHONE_NUMBER_NOT_SPECIFIED \u003d \"Phone number not specified.\" + END_LINE;","lastModifiedDate":"2021-10-20"},{"lineNumber":82,"author":{"gitId":"justinfidelis"},"content":"    private static final String ERROR_PHONE_NUMBER_TOO_FEW_DIGITS \u003d \"Phone number has too few digits.\" + END_LINE;","lastModifiedDate":"2021-10-20"},{"lineNumber":83,"author":{"gitId":"justinfidelis"},"content":"    private static final String ERROR_PHONE_NUMBER_TOO_MANY_DIGITS \u003d \"Phone number has too many digits.\" + END_LINE;","lastModifiedDate":"2021-10-20"},{"lineNumber":84,"author":{"gitId":"EricBryann"},"content":"    private static final String ERROR_PHONE_NUMBER_UNEXPECTED_CHARACTERS \u003d","lastModifiedDate":"2021-10-06"},{"lineNumber":85,"author":{"gitId":"justinfidelis"},"content":"            \"Phone number contains unexpected characters.\" + END_LINE;","lastModifiedDate":"2021-10-20"},{"lineNumber":86,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":87,"author":{"gitId":"justinfidelis"},"content":"    private static final String ERROR_EMAIL_ADDRESS_NOT_SPECIFIED \u003d \"Email address not specified.\" + END_LINE;","lastModifiedDate":"2021-10-20"},{"lineNumber":88,"author":{"gitId":"justinfidelis"},"content":"    private static final String ERROR_EMAIL_ADDRESS_WRONG_FORMAT \u003d \"Incorrect email address format.\" + END_LINE;","lastModifiedDate":"2021-10-20"},{"lineNumber":89,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":90,"author":{"gitId":"justinfidelis"},"content":"    private static final String ERROR_ADDRESS_NOT_SPECIFIED \u003d \"Address not specified.\" + END_LINE;","lastModifiedDate":"2021-10-20"},{"lineNumber":91,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":92,"author":{"gitId":"EricBryann"},"content":"    private static final String REGEX_VERTICAL_LINE \u003d \"\\\\|\";","lastModifiedDate":"2021-10-06"},{"lineNumber":93,"author":{"gitId":"EricBryann"},"content":"    private static final String REGEX_INPUT_PARAMETER \u003d \" [a-zA-Z]{1,2}/\";","lastModifiedDate":"2021-10-06"},{"lineNumber":94,"author":{"gitId":"justinfidelis"},"content":"    private static final String REGEX_EMAIL \u003d \"(([a-zA-Z0-9][\\\\w-.]*[a-zA-Z0-9])|[a-zA-Z0-9])@([\\\\w]+\\\\.)+[\\\\w]+\";","lastModifiedDate":"2021-10-20"},{"lineNumber":95,"author":{"gitId":"EricBryann"},"content":"    private static final String REGEX_IC \u003d \"[STFGM][0-9]{7}[A-Z]\";","lastModifiedDate":"2021-10-06"},{"lineNumber":96,"author":{"gitId":"EricBryann"},"content":"    private static final String REGEX_PHONE_NUMBER \u003d \"[\\\\d]{8}\";","lastModifiedDate":"2021-10-06"},{"lineNumber":97,"author":{"gitId":"EricBryann"},"content":"    private static final String REGEX_PHONE_NUMBER_SEPARATOR \u003d \"[- _+()]\";","lastModifiedDate":"2021-10-06"},{"lineNumber":98,"author":{"gitId":"justinfidelis"},"content":"    private static final String REGEX_PERSON_ID \u003d \"([0-9]+$)|([0-9]+ )\";","lastModifiedDate":"2021-10-20"},{"lineNumber":99,"author":{"gitId":"EricBryann"},"content":"    private static final String REGEX_CAPITALISE_POSITION \u003d \"(\\\\A|[ _-])[a-z]\";","lastModifiedDate":"2021-10-06"},{"lineNumber":100,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":101,"author":{"gitId":"EricBryann"},"content":"    private static final String VERTICAL_LINE \u003d \"|\";","lastModifiedDate":"2021-10-06"},{"lineNumber":102,"author":{"gitId":"Kureans"},"content":"    private static final String SEPARATOR_SPACE \u003d \" \";","lastModifiedDate":"2021-10-07"},{"lineNumber":103,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":104,"author":{"gitId":"EricBryann"},"content":"    private static final String EMPTY_STRING \u003d \"\";","lastModifiedDate":"2021-10-06"},{"lineNumber":105,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":106,"author":{"gitId":"justinfidelis"},"content":"    private static ViewType viewType \u003d  ViewType.PATIENT_INFO;","lastModifiedDate":"2021-10-20"},{"lineNumber":107,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":108,"author":{"gitId":"justinfidelis"},"content":"    public static ViewType getViewType() {","lastModifiedDate":"2021-10-20"},{"lineNumber":109,"author":{"gitId":"justinfidelis"},"content":"        return viewType;","lastModifiedDate":"2021-10-20"},{"lineNumber":110,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":111,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":112,"author":{"gitId":"justinfidelis"},"content":"    public static void setViewType(ViewType viewType) {","lastModifiedDate":"2021-10-20"},{"lineNumber":113,"author":{"gitId":"justinfidelis"},"content":"        Parser.viewType \u003d viewType;","lastModifiedDate":"2021-10-20"},{"lineNumber":114,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":115,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":116,"author":{"gitId":"Kureans"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":117,"author":{"gitId":"Kureans"},"content":"     * Checks the current view type that the parser is in and returns the relevant","lastModifiedDate":"2021-10-16"},{"lineNumber":118,"author":{"gitId":"Kureans"},"content":"     * parseCommand object based on the view type.","lastModifiedDate":"2021-10-16"},{"lineNumber":119,"author":{"gitId":"Kureans"},"content":"     *","lastModifiedDate":"2021-10-16"},{"lineNumber":120,"author":{"gitId":"Kureans"},"content":"     * @param userInput String containing the full user input.","lastModifiedDate":"2021-10-16"},{"lineNumber":121,"author":{"gitId":"Kureans"},"content":"     * @return the corresponding Command object.","lastModifiedDate":"2021-10-16"},{"lineNumber":122,"author":{"gitId":"justinfidelis"},"content":"     * @throws MedBotParserException if command is unrecognised.","lastModifiedDate":"2021-10-18"},{"lineNumber":123,"author":{"gitId":"Kureans"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":124,"author":{"gitId":"justinfidelis"},"content":"    public static Command parseCommand(String userInput) throws MedBotParserException {","lastModifiedDate":"2021-10-20"},{"lineNumber":125,"author":{"gitId":"jushg"},"content":"        userInput \u003d preprocessInput(userInput);","lastModifiedDate":"2021-10-19"},{"lineNumber":126,"author":{"gitId":"justinfidelis"},"content":"        //commands valid in all viewTypes","lastModifiedDate":"2021-10-20"},{"lineNumber":127,"author":{"gitId":"jushg"},"content":"        if (userInput.startsWith(COMMAND_SWITCH)) {","lastModifiedDate":"2021-10-19"},{"lineNumber":128,"author":{"gitId":"jushg"},"content":"            return parseSwitchCommand(userInput);","lastModifiedDate":"2021-10-19"},{"lineNumber":129,"author":{"gitId":"jushg"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":130,"author":{"gitId":"jushg"},"content":"        if (userInput.equals(COMMAND_EXIT)) {","lastModifiedDate":"2021-10-19"},{"lineNumber":131,"author":{"gitId":"jushg"},"content":"            return new ExitCommand();","lastModifiedDate":"2021-10-19"},{"lineNumber":132,"author":{"gitId":"jushg"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":133,"author":{"gitId":"jushg"},"content":"        if (userInput.startsWith(COMMAND_HELP)) {","lastModifiedDate":"2021-10-19"},{"lineNumber":134,"author":{"gitId":"jushg"},"content":"            return parseHelpCommand(userInput);","lastModifiedDate":"2021-10-19"},{"lineNumber":135,"author":{"gitId":"jushg"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":136,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":137,"author":{"gitId":"jushg"},"content":"        switch (viewType) {","lastModifiedDate":"2021-10-19"},{"lineNumber":138,"author":{"gitId":"jushg"},"content":"        case PATIENT_INFO:","lastModifiedDate":"2021-10-19"},{"lineNumber":139,"author":{"gitId":"justinfidelis"},"content":"            return parsePatientCommand(userInput, ViewType.PATIENT_INFO);","lastModifiedDate":"2021-10-20"},{"lineNumber":140,"author":{"gitId":"jushg"},"content":"        case MEDICAL_STAFF_INFO:","lastModifiedDate":"2021-10-19"},{"lineNumber":141,"author":{"gitId":"justinfidelis"},"content":"            return parseStaffCommand(userInput, ViewType.MEDICAL_STAFF_INFO);","lastModifiedDate":"2021-10-20"},{"lineNumber":142,"author":{"gitId":"jushg"},"content":"        case SCHEDULER:","lastModifiedDate":"2021-10-19"},{"lineNumber":143,"author":{"gitId":"jushg"},"content":"            return parseSchedulingCommand(userInput);","lastModifiedDate":"2021-10-19"},{"lineNumber":144,"author":{"gitId":"jushg"},"content":"        default:","lastModifiedDate":"2021-10-19"},{"lineNumber":145,"author":{"gitId":"justinfidelis"},"content":"            assert false;","lastModifiedDate":"2021-10-18"},{"lineNumber":146,"author":{"gitId":"jushg"},"content":"            throw new MedBotParserException(ERROR_NO_VIEW_FOUND);","lastModifiedDate":"2021-10-19"},{"lineNumber":147,"author":{"gitId":"Kureans"},"content":"        }","lastModifiedDate":"2021-10-16"},{"lineNumber":148,"author":{"gitId":"jushg"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":149,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":150,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":151,"author":{"gitId":"Kureans"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":152,"author":{"gitId":"Kureans"},"content":"     * Parses the user input for patient information related commands and returns the relevant Command object.","lastModifiedDate":"2021-10-16"},{"lineNumber":153,"author":{"gitId":"Kureans"},"content":"     *","lastModifiedDate":"2021-10-07"},{"lineNumber":154,"author":{"gitId":"Kureans"},"content":"     * @param userInput String containing the full user input.","lastModifiedDate":"2021-10-07"},{"lineNumber":155,"author":{"gitId":"Kureans"},"content":"     * @return the corresponding Command object.","lastModifiedDate":"2021-10-07"},{"lineNumber":156,"author":{"gitId":"justinfidelis"},"content":"     * @throws MedBotParserException if command is unrecognised.","lastModifiedDate":"2021-10-18"},{"lineNumber":157,"author":{"gitId":"Kureans"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":158,"author":{"gitId":"justinfidelis"},"content":"    public static Command parsePatientCommand(String userInput, ViewType viewType) throws MedBotParserException {","lastModifiedDate":"2021-10-20"},{"lineNumber":159,"author":{"gitId":"justinfidelis"},"content":"        if (userInput.startsWith(COMMAND_ADD)) {","lastModifiedDate":"2021-09-30"},{"lineNumber":160,"author":{"gitId":"justinfidelis"},"content":"            return parseAddPatientCommand(userInput);","lastModifiedDate":"2021-10-20"},{"lineNumber":161,"author":{"gitId":"justinfidelis"},"content":"        }","lastModifiedDate":"2021-09-30"},{"lineNumber":162,"author":{"gitId":"justinfidelis"},"content":"        if (userInput.startsWith(COMMAND_DELETE)) {","lastModifiedDate":"2021-09-30"},{"lineNumber":163,"author":{"gitId":"justinfidelis"},"content":"            return parseDeletePatientCommand(userInput);","lastModifiedDate":"2021-10-20"},{"lineNumber":164,"author":{"gitId":"justinfidelis"},"content":"        }","lastModifiedDate":"2021-09-30"},{"lineNumber":165,"author":{"gitId":"justinfidelis"},"content":"        if (userInput.startsWith(COMMAND_VIEW)) {","lastModifiedDate":"2021-09-30"},{"lineNumber":166,"author":{"gitId":"justinfidelis"},"content":"            return parseViewPatientCommand(userInput);","lastModifiedDate":"2021-10-20"},{"lineNumber":167,"author":{"gitId":"justinfidelis"},"content":"        }","lastModifiedDate":"2021-09-30"},{"lineNumber":168,"author":{"gitId":"Kureans"},"content":"        if (userInput.equals(COMMAND_LIST)) {","lastModifiedDate":"2021-10-12"},{"lineNumber":169,"author":{"gitId":"justinfidelis"},"content":"            return new ListPatientCommand();","lastModifiedDate":"2021-09-30"},{"lineNumber":170,"author":{"gitId":"justinfidelis"},"content":"        }","lastModifiedDate":"2021-09-30"},{"lineNumber":171,"author":{"gitId":"jushg"},"content":"        if (userInput.startsWith(COMMAND_EDIT)) {","lastModifiedDate":"2021-10-05"},{"lineNumber":172,"author":{"gitId":"justinfidelis"},"content":"            return parseEditPatientCommand(userInput);","lastModifiedDate":"2021-10-20"},{"lineNumber":173,"author":{"gitId":"jushg"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":174,"author":{"gitId":"EricBryann"},"content":"        if (userInput.startsWith(COMMAND_FIND)) {","lastModifiedDate":"2021-10-19"},{"lineNumber":175,"author":{"gitId":"justinfidelis"},"content":"            return parseFindPatientCommand(userInput);","lastModifiedDate":"2021-10-20"},{"lineNumber":176,"author":{"gitId":"justinfidelis"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":177,"author":{"gitId":"justinfidelis"},"content":"        throw new MedBotParserException(ERROR_WRONG_COMMAND);","lastModifiedDate":"2021-10-20"},{"lineNumber":178,"author":{"gitId":"EricBryann"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":179,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":180,"author":{"gitId":"justinfidelis"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":181,"author":{"gitId":"justinfidelis"},"content":"     * Parses the user input for patient information related commands and returns the relevant Command object.","lastModifiedDate":"2021-10-20"},{"lineNumber":182,"author":{"gitId":"justinfidelis"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":183,"author":{"gitId":"justinfidelis"},"content":"     * @param userInput String containing the full user input.","lastModifiedDate":"2021-10-20"},{"lineNumber":184,"author":{"gitId":"justinfidelis"},"content":"     * @return the corresponding Command object.","lastModifiedDate":"2021-10-20"},{"lineNumber":185,"author":{"gitId":"justinfidelis"},"content":"     * @throws MedBotParserException if command is unrecognised.","lastModifiedDate":"2021-10-20"},{"lineNumber":186,"author":{"gitId":"justinfidelis"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":187,"author":{"gitId":"justinfidelis"},"content":"    public static Command parseStaffCommand(String userInput, ViewType viewType) throws MedBotParserException {","lastModifiedDate":"2021-10-20"},{"lineNumber":188,"author":{"gitId":"justinfidelis"},"content":"        if (userInput.startsWith(COMMAND_ADD)) {","lastModifiedDate":"2021-10-20"},{"lineNumber":189,"author":{"gitId":"justinfidelis"},"content":"            return parseAddStaffCommand(userInput);","lastModifiedDate":"2021-10-20"},{"lineNumber":190,"author":{"gitId":"justinfidelis"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":191,"author":{"gitId":"justinfidelis"},"content":"        if (userInput.startsWith(COMMAND_DELETE)) {","lastModifiedDate":"2021-10-20"},{"lineNumber":192,"author":{"gitId":"justinfidelis"},"content":"            return parseDeleteStaffCommand(userInput);","lastModifiedDate":"2021-10-20"},{"lineNumber":193,"author":{"gitId":"justinfidelis"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":194,"author":{"gitId":"justinfidelis"},"content":"        if (userInput.startsWith(COMMAND_VIEW)) {","lastModifiedDate":"2021-10-20"},{"lineNumber":195,"author":{"gitId":"justinfidelis"},"content":"            return parseViewStaffCommand(userInput);","lastModifiedDate":"2021-10-20"},{"lineNumber":196,"author":{"gitId":"justinfidelis"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":197,"author":{"gitId":"justinfidelis"},"content":"        if (userInput.equals(COMMAND_LIST)) {","lastModifiedDate":"2021-10-20"},{"lineNumber":198,"author":{"gitId":"justinfidelis"},"content":"            return new ListStaffCommand();","lastModifiedDate":"2021-10-20"},{"lineNumber":199,"author":{"gitId":"justinfidelis"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":200,"author":{"gitId":"justinfidelis"},"content":"        if (userInput.startsWith(COMMAND_EDIT)) {","lastModifiedDate":"2021-10-20"},{"lineNumber":201,"author":{"gitId":"justinfidelis"},"content":"            return parseEditStaffCommand(userInput);","lastModifiedDate":"2021-10-20"},{"lineNumber":202,"author":{"gitId":"justinfidelis"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":203,"author":{"gitId":"justinfidelis"},"content":"        if (userInput.startsWith(COMMAND_FIND)) {","lastModifiedDate":"2021-10-20"},{"lineNumber":204,"author":{"gitId":"justinfidelis"},"content":"            return parseFindStaffCommand(userInput);","lastModifiedDate":"2021-10-20"},{"lineNumber":205,"author":{"gitId":"justinfidelis"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":206,"author":{"gitId":"jushg"},"content":"        throw new MedBotParserException(ERROR_WRONG_COMMAND);","lastModifiedDate":"2021-10-19"},{"lineNumber":207,"author":{"gitId":"Kureans"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":208,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":209,"author":{"gitId":"Kureans"},"content":"    //Update with relevant scheduling commands","lastModifiedDate":"2021-10-16"},{"lineNumber":210,"author":{"gitId":"justinfidelis"},"content":"    public static Command parseSchedulingCommand(String userInput) throws MedBotParserException {","lastModifiedDate":"2021-10-18"},{"lineNumber":211,"author":{"gitId":"jushg"},"content":"        throw new MedBotParserException(ERROR_WRONG_COMMAND);","lastModifiedDate":"2021-10-19"},{"lineNumber":212,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":213,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":214,"author":{"gitId":"justinfidelis"},"content":"    //Parse Command Methods","lastModifiedDate":"2021-10-18"},{"lineNumber":215,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":216,"author":{"gitId":"Kureans"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":217,"author":{"gitId":"Kureans"},"content":"     * Parses user input to pass relevant parameters into the HelpCommand constructor.","lastModifiedDate":"2021-10-07"},{"lineNumber":218,"author":{"gitId":"Kureans"},"content":"     *","lastModifiedDate":"2021-10-07"},{"lineNumber":219,"author":{"gitId":"Kureans"},"content":"     * @param userInput String containing the full user input.","lastModifiedDate":"2021-10-07"},{"lineNumber":220,"author":{"gitId":"Kureans"},"content":"     * @return HelpCommand object.","lastModifiedDate":"2021-10-07"},{"lineNumber":221,"author":{"gitId":"justinfidelis"},"content":"     * @throws MedBotParserException if parameters.length \u003c 1 \u0026\u0026 \u003e 2","lastModifiedDate":"2021-10-18"},{"lineNumber":222,"author":{"gitId":"Kureans"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":223,"author":{"gitId":"justinfidelis"},"content":"    private static HelpCommand parseHelpCommand(String userInput) throws MedBotParserException {","lastModifiedDate":"2021-10-18"},{"lineNumber":224,"author":{"gitId":"justinfidelis"},"content":"        String commandTypeString \u003d EMPTY_STRING;","lastModifiedDate":"2021-10-18"},{"lineNumber":225,"author":{"gitId":"justinfidelis"},"content":"        try {","lastModifiedDate":"2021-10-18"},{"lineNumber":226,"author":{"gitId":"justinfidelis"},"content":"            commandTypeString \u003d userInput.substring(4).strip();","lastModifiedDate":"2021-10-18"},{"lineNumber":227,"author":{"gitId":"justinfidelis"},"content":"        } catch (IndexOutOfBoundsException ie) {","lastModifiedDate":"2021-10-18"},{"lineNumber":228,"author":{"gitId":"justinfidelis"},"content":"            return new HelpCommand();","lastModifiedDate":"2021-10-18"},{"lineNumber":229,"author":{"gitId":"justinfidelis"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":230,"author":{"gitId":"justinfidelis"},"content":"        if (commandTypeString.equals(EMPTY_STRING)) {","lastModifiedDate":"2021-10-18"},{"lineNumber":231,"author":{"gitId":"justinfidelis"},"content":"            return new HelpCommand();","lastModifiedDate":"2021-10-18"},{"lineNumber":232,"author":{"gitId":"Kureans"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":233,"author":{"gitId":"justinfidelis"},"content":"        CommandType commandType \u003d parseHelpCommandType(commandTypeString);","lastModifiedDate":"2021-10-18"},{"lineNumber":234,"author":{"gitId":"justinfidelis"},"content":"        return new HelpCommand(commandType);","lastModifiedDate":"2021-10-18"},{"lineNumber":235,"author":{"gitId":"Kureans"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":236,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":237,"author":{"gitId":"justinfidelis"},"content":"    private static CommandType parseHelpCommandType(String commandTypeString) throws MedBotParserException {","lastModifiedDate":"2021-10-18"},{"lineNumber":238,"author":{"gitId":"justinfidelis"},"content":"        switch (commandTypeString) {","lastModifiedDate":"2021-10-18"},{"lineNumber":239,"author":{"gitId":"justinfidelis"},"content":"        case COMMAND_ADD:","lastModifiedDate":"2021-10-18"},{"lineNumber":240,"author":{"gitId":"justinfidelis"},"content":"            return CommandType.ADD_PATIENT;","lastModifiedDate":"2021-10-18"},{"lineNumber":241,"author":{"gitId":"justinfidelis"},"content":"        case COMMAND_DELETE:","lastModifiedDate":"2021-10-18"},{"lineNumber":242,"author":{"gitId":"justinfidelis"},"content":"            return CommandType.DELETE_PATIENT;","lastModifiedDate":"2021-10-18"},{"lineNumber":243,"author":{"gitId":"justinfidelis"},"content":"        case COMMAND_EDIT:","lastModifiedDate":"2021-10-18"},{"lineNumber":244,"author":{"gitId":"justinfidelis"},"content":"            return CommandType.EDIT_PATIENT;","lastModifiedDate":"2021-10-18"},{"lineNumber":245,"author":{"gitId":"justinfidelis"},"content":"        case COMMAND_EXIT:","lastModifiedDate":"2021-10-18"},{"lineNumber":246,"author":{"gitId":"justinfidelis"},"content":"            return CommandType.EXIT;","lastModifiedDate":"2021-10-18"},{"lineNumber":247,"author":{"gitId":"justinfidelis"},"content":"        case COMMAND_HELP:","lastModifiedDate":"2021-10-18"},{"lineNumber":248,"author":{"gitId":"justinfidelis"},"content":"            return CommandType.HELP;","lastModifiedDate":"2021-10-18"},{"lineNumber":249,"author":{"gitId":"justinfidelis"},"content":"        case COMMAND_LIST:","lastModifiedDate":"2021-10-18"},{"lineNumber":250,"author":{"gitId":"justinfidelis"},"content":"            return CommandType.LIST_PATIENT;","lastModifiedDate":"2021-10-18"},{"lineNumber":251,"author":{"gitId":"justinfidelis"},"content":"        case COMMAND_SWITCH:","lastModifiedDate":"2021-10-18"},{"lineNumber":252,"author":{"gitId":"justinfidelis"},"content":"            return CommandType.SWITCH;","lastModifiedDate":"2021-10-18"},{"lineNumber":253,"author":{"gitId":"justinfidelis"},"content":"        case COMMAND_VIEW:","lastModifiedDate":"2021-10-18"},{"lineNumber":254,"author":{"gitId":"justinfidelis"},"content":"            return CommandType.VIEW_PATIENT;","lastModifiedDate":"2021-10-18"},{"lineNumber":255,"author":{"gitId":"EricBryann"},"content":"        case COMMAND_FIND:","lastModifiedDate":"2021-10-19"},{"lineNumber":256,"author":{"gitId":"EricBryann"},"content":"            return CommandType.FIND_PATIENT;","lastModifiedDate":"2021-10-19"},{"lineNumber":257,"author":{"gitId":"justinfidelis"},"content":"        default:","lastModifiedDate":"2021-10-18"},{"lineNumber":258,"author":{"gitId":"jushg"},"content":"            throw new MedBotParserException(ERROR_WRONG_COMMAND);","lastModifiedDate":"2021-10-19"},{"lineNumber":259,"author":{"gitId":"justinfidelis"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":260,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":261,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":262,"author":{"gitId":"Kureans"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":263,"author":{"gitId":"justinfidelis"},"content":"     * Parses user input and returns ViewPatientCommand with the specified patient ID.","lastModifiedDate":"2021-10-20"},{"lineNumber":264,"author":{"gitId":"Kureans"},"content":"     *","lastModifiedDate":"2021-10-07"},{"lineNumber":265,"author":{"gitId":"Kureans"},"content":"     * @param userInput String containing the full user input.","lastModifiedDate":"2021-10-07"},{"lineNumber":266,"author":{"gitId":"justinfidelis"},"content":"     * @return ViewPatientCommand object.","lastModifiedDate":"2021-10-20"},{"lineNumber":267,"author":{"gitId":"justinfidelis"},"content":"     * @throws MedBotParserException when patient id is not specified or not a number.","lastModifiedDate":"2021-10-20"},{"lineNumber":268,"author":{"gitId":"Kureans"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":269,"author":{"gitId":"justinfidelis"},"content":"    private static ViewPatientCommand parseViewPatientCommand(String userInput) throws MedBotParserException {","lastModifiedDate":"2021-10-20"},{"lineNumber":270,"author":{"gitId":"justinfidelis"},"content":"        int personId \u003d parsePersonId(userInput.substring(4));","lastModifiedDate":"2021-10-20"},{"lineNumber":271,"author":{"gitId":"jushg"},"content":"        return new ViewPatientCommand(personId);","lastModifiedDate":"2021-10-19"},{"lineNumber":272,"author":{"gitId":"jushg"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":273,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":274,"author":{"gitId":"justinfidelis"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":275,"author":{"gitId":"justinfidelis"},"content":"     * Parses user input and returns ViewStaffCommand with the specified staff ID.","lastModifiedDate":"2021-10-20"},{"lineNumber":276,"author":{"gitId":"justinfidelis"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":277,"author":{"gitId":"justinfidelis"},"content":"     * @param userInput String containing the full user input.","lastModifiedDate":"2021-10-20"},{"lineNumber":278,"author":{"gitId":"justinfidelis"},"content":"     * @return ViewStaffCommand object.","lastModifiedDate":"2021-10-20"},{"lineNumber":279,"author":{"gitId":"justinfidelis"},"content":"     * @throws MedBotParserException when staff id is not specified or not a number.","lastModifiedDate":"2021-10-20"},{"lineNumber":280,"author":{"gitId":"justinfidelis"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":281,"author":{"gitId":"justinfidelis"},"content":"    private static ViewStaffCommand parseViewStaffCommand(String userInput) throws MedBotParserException {","lastModifiedDate":"2021-10-20"},{"lineNumber":282,"author":{"gitId":"justinfidelis"},"content":"        int personId \u003d parsePersonId(userInput.substring(4));","lastModifiedDate":"2021-10-20"},{"lineNumber":283,"author":{"gitId":"justinfidelis"},"content":"        return new ViewStaffCommand(personId);","lastModifiedDate":"2021-10-20"},{"lineNumber":284,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":285,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":286,"author":{"gitId":"Kureans"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":287,"author":{"gitId":"justinfidelis"},"content":"     * Parses user input and returns DeletePatientCommand with the specified patient ID.","lastModifiedDate":"2021-10-20"},{"lineNumber":288,"author":{"gitId":"Kureans"},"content":"     *","lastModifiedDate":"2021-10-07"},{"lineNumber":289,"author":{"gitId":"Kureans"},"content":"     * @param userInput String containing the full user input.","lastModifiedDate":"2021-10-07"},{"lineNumber":290,"author":{"gitId":"justinfidelis"},"content":"     * @return DeletePatientCommand object.","lastModifiedDate":"2021-10-20"},{"lineNumber":291,"author":{"gitId":"justinfidelis"},"content":"     * @throws MedBotParserException when patient id given is not specified or not a number.","lastModifiedDate":"2021-10-20"},{"lineNumber":292,"author":{"gitId":"Kureans"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":293,"author":{"gitId":"justinfidelis"},"content":"    private static DeletePatientCommand parseDeletePatientCommand(String userInput) throws MedBotParserException {","lastModifiedDate":"2021-10-20"},{"lineNumber":294,"author":{"gitId":"justinfidelis"},"content":"        int personId \u003d parsePersonId(userInput.substring(6));","lastModifiedDate":"2021-10-20"},{"lineNumber":295,"author":{"gitId":"jushg"},"content":"        return new DeletePatientCommand(personId);","lastModifiedDate":"2021-10-19"},{"lineNumber":296,"author":{"gitId":"jushg"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":297,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":298,"author":{"gitId":"justinfidelis"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":299,"author":{"gitId":"justinfidelis"},"content":"     * Parses user input and returns DeleteStaffCommand with the specified staff ID.","lastModifiedDate":"2021-10-20"},{"lineNumber":300,"author":{"gitId":"justinfidelis"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":301,"author":{"gitId":"justinfidelis"},"content":"     * @param userInput String containing the full user input.","lastModifiedDate":"2021-10-20"},{"lineNumber":302,"author":{"gitId":"justinfidelis"},"content":"     * @return DeleteStaffCommand object.","lastModifiedDate":"2021-10-20"},{"lineNumber":303,"author":{"gitId":"justinfidelis"},"content":"     * @throws MedBotParserException when staff id given is not specified or not a number.","lastModifiedDate":"2021-10-20"},{"lineNumber":304,"author":{"gitId":"justinfidelis"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":305,"author":{"gitId":"justinfidelis"},"content":"    private static DeleteStaffCommand parseDeleteStaffCommand(String userInput) throws MedBotParserException {","lastModifiedDate":"2021-10-20"},{"lineNumber":306,"author":{"gitId":"justinfidelis"},"content":"        int personId \u003d parsePersonId(userInput.substring(6));","lastModifiedDate":"2021-10-20"},{"lineNumber":307,"author":{"gitId":"justinfidelis"},"content":"        return new DeleteStaffCommand(personId);","lastModifiedDate":"2021-10-20"},{"lineNumber":308,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":309,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":310,"author":{"gitId":"jushg"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":311,"author":{"gitId":"justinfidelis"},"content":"     * Parses user input and returns EditPatientCommand with the specified patient ID and parameters.","lastModifiedDate":"2021-10-20"},{"lineNumber":312,"author":{"gitId":"jushg"},"content":"     *","lastModifiedDate":"2021-10-05"},{"lineNumber":313,"author":{"gitId":"jushg"},"content":"     * @param userInput String containing the full user input.","lastModifiedDate":"2021-10-13"},{"lineNumber":314,"author":{"gitId":"justinfidelis"},"content":"     * @return EditPatientCommand object.","lastModifiedDate":"2021-10-20"},{"lineNumber":315,"author":{"gitId":"justinfidelis"},"content":"     * @throws MedBotParserException when patient id given is not specified or not a number, or when","lastModifiedDate":"2021-10-20"},{"lineNumber":316,"author":{"gitId":"justinfidelis"},"content":"     *                               the parameters given cannot be parsed.","lastModifiedDate":"2021-10-20"},{"lineNumber":317,"author":{"gitId":"jushg"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":318,"author":{"gitId":"justinfidelis"},"content":"    private static EditPatientCommand parseEditPatientCommand(String userInput) throws MedBotParserException {","lastModifiedDate":"2021-10-20"},{"lineNumber":319,"author":{"gitId":"justinfidelis"},"content":"        int patientId \u003d parsePersonId(userInput.substring(4));","lastModifiedDate":"2021-10-20"},{"lineNumber":320,"author":{"gitId":"jushg"},"content":"        String[] parameters \u003d getParameters(userInput);","lastModifiedDate":"2021-10-13"},{"lineNumber":321,"author":{"gitId":"jushg"},"content":"        Patient patient \u003d new Patient();","lastModifiedDate":"2021-10-05"},{"lineNumber":322,"author":{"gitId":"justinfidelis"},"content":"        patient.setNull();","lastModifiedDate":"2021-10-06"},{"lineNumber":323,"author":{"gitId":"justinfidelis"},"content":"        updateMultiplePersonalInformation(patient, parameters);","lastModifiedDate":"2021-10-13"},{"lineNumber":324,"author":{"gitId":"justinfidelis"},"content":"        return new EditPatientCommand(patientId, patient);","lastModifiedDate":"2021-10-20"},{"lineNumber":325,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":326,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":327,"author":{"gitId":"justinfidelis"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":328,"author":{"gitId":"justinfidelis"},"content":"     * Parses user input and returns EditStaffCommand with the specified patient ID and parameters.","lastModifiedDate":"2021-10-20"},{"lineNumber":329,"author":{"gitId":"justinfidelis"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":330,"author":{"gitId":"justinfidelis"},"content":"     * @param userInput String containing the full user input.","lastModifiedDate":"2021-10-20"},{"lineNumber":331,"author":{"gitId":"justinfidelis"},"content":"     * @return EditStaffCommand objects","lastModifiedDate":"2021-10-20"},{"lineNumber":332,"author":{"gitId":"justinfidelis"},"content":"     * @throws MedBotParserException when staff id given is not specified or not a number, or when","lastModifiedDate":"2021-10-20"},{"lineNumber":333,"author":{"gitId":"justinfidelis"},"content":"     *                               the parameters given cannot be parsed.","lastModifiedDate":"2021-10-20"},{"lineNumber":334,"author":{"gitId":"justinfidelis"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":335,"author":{"gitId":"justinfidelis"},"content":"    private static EditStaffCommand parseEditStaffCommand(String userInput) throws MedBotParserException {","lastModifiedDate":"2021-10-20"},{"lineNumber":336,"author":{"gitId":"justinfidelis"},"content":"        int staffId \u003d parsePersonId(userInput.substring(4));","lastModifiedDate":"2021-10-20"},{"lineNumber":337,"author":{"gitId":"justinfidelis"},"content":"        String[] parameters \u003d getParameters(userInput);","lastModifiedDate":"2021-10-20"},{"lineNumber":338,"author":{"gitId":"jushg"},"content":"        Staff staff \u003d new Staff();","lastModifiedDate":"2021-10-19"},{"lineNumber":339,"author":{"gitId":"jushg"},"content":"        staff.setNull();","lastModifiedDate":"2021-10-19"},{"lineNumber":340,"author":{"gitId":"jushg"},"content":"        updateMultiplePersonalInformation(staff, parameters);","lastModifiedDate":"2021-10-19"},{"lineNumber":341,"author":{"gitId":"justinfidelis"},"content":"        return new EditStaffCommand(staffId, staff);","lastModifiedDate":"2021-10-20"},{"lineNumber":342,"author":{"gitId":"jushg"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":343,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":344,"author":{"gitId":"Kureans"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":345,"author":{"gitId":"justinfidelis"},"content":"     * Parses user input and returns AddPatientCommand with the specified parameters.","lastModifiedDate":"2021-10-20"},{"lineNumber":346,"author":{"gitId":"Kureans"},"content":"     *","lastModifiedDate":"2021-10-07"},{"lineNumber":347,"author":{"gitId":"Kureans"},"content":"     * @param userInput String containing the full user input.","lastModifiedDate":"2021-10-07"},{"lineNumber":348,"author":{"gitId":"justinfidelis"},"content":"     * @return AddPatientCommand object.","lastModifiedDate":"2021-10-20"},{"lineNumber":349,"author":{"gitId":"justinfidelis"},"content":"     * @throws MedBotParserException when no parameters are specified, or when the parameters given cannot be parsed.","lastModifiedDate":"2021-10-20"},{"lineNumber":350,"author":{"gitId":"Kureans"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":351,"author":{"gitId":"justinfidelis"},"content":"    private static AddPatientCommand parseAddPatientCommand(String userInput) throws MedBotParserException {","lastModifiedDate":"2021-10-20"},{"lineNumber":352,"author":{"gitId":"jushg"},"content":"        String[] parameters \u003d getParameters(userInput);","lastModifiedDate":"2021-10-13"},{"lineNumber":353,"author":{"gitId":"jushg"},"content":"        Patient patient \u003d new Patient();","lastModifiedDate":"2021-10-13"},{"lineNumber":354,"author":{"gitId":"justinfidelis"},"content":"        updateMultiplePersonalInformation(patient, parameters);","lastModifiedDate":"2021-10-13"},{"lineNumber":355,"author":{"gitId":"jushg"},"content":"        return new AddPatientCommand(patient);","lastModifiedDate":"2021-10-13"},{"lineNumber":356,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":357,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":358,"author":{"gitId":"justinfidelis"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":359,"author":{"gitId":"justinfidelis"},"content":"     * Parses user input and returns AddStaffCommand with the specified parameters.","lastModifiedDate":"2021-10-20"},{"lineNumber":360,"author":{"gitId":"justinfidelis"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":361,"author":{"gitId":"justinfidelis"},"content":"     * @param userInput String containing the full user input.","lastModifiedDate":"2021-10-20"},{"lineNumber":362,"author":{"gitId":"justinfidelis"},"content":"     * @return AddStaffCommand object.","lastModifiedDate":"2021-10-20"},{"lineNumber":363,"author":{"gitId":"justinfidelis"},"content":"     * @throws MedBotParserException when no parameters are specified, or when the parameters given cannot be parsed.","lastModifiedDate":"2021-10-20"},{"lineNumber":364,"author":{"gitId":"justinfidelis"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":365,"author":{"gitId":"justinfidelis"},"content":"    private static AddStaffCommand parseAddStaffCommand(String userInput) throws MedBotParserException {","lastModifiedDate":"2021-10-20"},{"lineNumber":366,"author":{"gitId":"justinfidelis"},"content":"        String[] parameters \u003d getParameters(userInput);","lastModifiedDate":"2021-10-20"},{"lineNumber":367,"author":{"gitId":"jushg"},"content":"        Staff staff \u003d new Staff();","lastModifiedDate":"2021-10-19"},{"lineNumber":368,"author":{"gitId":"jushg"},"content":"        updateMultiplePersonalInformation(staff, parameters);","lastModifiedDate":"2021-10-19"},{"lineNumber":369,"author":{"gitId":"jushg"},"content":"        return new AddStaffCommand(staff);","lastModifiedDate":"2021-10-19"},{"lineNumber":370,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":371,"author":{"gitId":"jushg"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":372,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":373,"author":{"gitId":"justinfidelis"},"content":"    private static FindPatientCommand parseFindPatientCommand(String userInput) throws MedBotParserException {","lastModifiedDate":"2021-10-20"},{"lineNumber":374,"author":{"gitId":"EricBryann"},"content":"        String[] parameters \u003d getParameters(userInput);","lastModifiedDate":"2021-10-19"},{"lineNumber":375,"author":{"gitId":"EricBryann"},"content":"        return new FindPatientCommand(parameters);","lastModifiedDate":"2021-10-19"},{"lineNumber":376,"author":{"gitId":"jushg"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":377,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":378,"author":{"gitId":"justinfidelis"},"content":"    private static FindStaffCommand parseFindStaffCommand(String userInput) throws MedBotParserException {","lastModifiedDate":"2021-10-20"},{"lineNumber":379,"author":{"gitId":"justinfidelis"},"content":"        String[] parameters \u003d getParameters(userInput);","lastModifiedDate":"2021-10-20"},{"lineNumber":380,"author":{"gitId":"justinfidelis"},"content":"        return new FindStaffCommand(parameters);","lastModifiedDate":"2021-10-20"},{"lineNumber":381,"author":{"gitId":"EricBryann"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":382,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":383,"author":{"gitId":"justinfidelis"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":384,"author":{"gitId":"justinfidelis"},"content":"     * Processes user input and returns a SwitchCommand.","lastModifiedDate":"2021-10-18"},{"lineNumber":385,"author":{"gitId":"justinfidelis"},"content":"     *","lastModifiedDate":"2021-10-18"},{"lineNumber":386,"author":{"gitId":"justinfidelis"},"content":"     * \u003cp\u003eIf view type is specified, returns a switch command with that new view type. If not, returns","lastModifiedDate":"2021-10-18"},{"lineNumber":387,"author":{"gitId":"justinfidelis"},"content":"     * a switch command that iterates through the various views.","lastModifiedDate":"2021-10-18"},{"lineNumber":388,"author":{"gitId":"justinfidelis"},"content":"     *","lastModifiedDate":"2021-10-18"},{"lineNumber":389,"author":{"gitId":"justinfidelis"},"content":"     * @param userInput String containing the full user input.","lastModifiedDate":"2021-10-18"},{"lineNumber":390,"author":{"gitId":"justinfidelis"},"content":"     * @return SwitchCommand with the new view type if specified","lastModifiedDate":"2021-10-18"},{"lineNumber":391,"author":{"gitId":"justinfidelis"},"content":"     * @throws MedBotParserException if an invalid view type code is specified","lastModifiedDate":"2021-10-18"},{"lineNumber":392,"author":{"gitId":"justinfidelis"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":393,"author":{"gitId":"justinfidelis"},"content":"    private static SwitchCommand parseSwitchCommand(String userInput) throws MedBotParserException {","lastModifiedDate":"2021-10-18"},{"lineNumber":394,"author":{"gitId":"justinfidelis"},"content":"        String newType;","lastModifiedDate":"2021-10-20"},{"lineNumber":395,"author":{"gitId":"justinfidelis"},"content":"        try {","lastModifiedDate":"2021-10-18"},{"lineNumber":396,"author":{"gitId":"justinfidelis"},"content":"            newType \u003d userInput.substring(6).strip();","lastModifiedDate":"2021-10-18"},{"lineNumber":397,"author":{"gitId":"justinfidelis"},"content":"        } catch (IndexOutOfBoundsException ie) {","lastModifiedDate":"2021-10-18"},{"lineNumber":398,"author":{"gitId":"justinfidelis"},"content":"            newType \u003d EMPTY_STRING;","lastModifiedDate":"2021-10-20"},{"lineNumber":399,"author":{"gitId":"justinfidelis"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":400,"author":{"gitId":"justinfidelis"},"content":"        switch (newType) {","lastModifiedDate":"2021-10-18"},{"lineNumber":401,"author":{"gitId":"justinfidelis"},"content":"        case EMPTY_STRING:","lastModifiedDate":"2021-10-18"},{"lineNumber":402,"author":{"gitId":"justinfidelis"},"content":"            return new SwitchCommand(ViewType.getNextView(viewType));","lastModifiedDate":"2021-10-20"},{"lineNumber":403,"author":{"gitId":"justinfidelis"},"content":"        case VIEW_TYPE_PATIENT_VIEW:","lastModifiedDate":"2021-10-18"},{"lineNumber":404,"author":{"gitId":"justinfidelis"},"content":"            return new SwitchCommand(ViewType.PATIENT_INFO);","lastModifiedDate":"2021-10-18"},{"lineNumber":405,"author":{"gitId":"justinfidelis"},"content":"        case VIEW_TYPE_MEDICAL_STAFF_VIEW:","lastModifiedDate":"2021-10-18"},{"lineNumber":406,"author":{"gitId":"justinfidelis"},"content":"            return new SwitchCommand(ViewType.MEDICAL_STAFF_INFO);","lastModifiedDate":"2021-10-18"},{"lineNumber":407,"author":{"gitId":"justinfidelis"},"content":"        case VIEW_TYPE_SCHEDULER_VIEW:","lastModifiedDate":"2021-10-18"},{"lineNumber":408,"author":{"gitId":"justinfidelis"},"content":"            return new SwitchCommand(ViewType.SCHEDULER);","lastModifiedDate":"2021-10-18"},{"lineNumber":409,"author":{"gitId":"justinfidelis"},"content":"        default:","lastModifiedDate":"2021-10-18"},{"lineNumber":410,"author":{"gitId":"justinfidelis"},"content":"            throw new MedBotParserException(ERROR_INVALID_VIEW_TYPE);","lastModifiedDate":"2021-10-18"},{"lineNumber":411,"author":{"gitId":"justinfidelis"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":412,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":413,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":414,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":415,"author":{"gitId":"jushg"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":416,"author":{"gitId":"jushg"},"content":"     * Parses user input to the correct patient information format.","lastModifiedDate":"2021-10-13"},{"lineNumber":417,"author":{"gitId":"jushg"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":418,"author":{"gitId":"jushg"},"content":"     * @param userInput String containing the full user input.","lastModifiedDate":"2021-10-13"},{"lineNumber":419,"author":{"gitId":"jushg"},"content":"     * @return The parameters list given by user.","lastModifiedDate":"2021-10-13"},{"lineNumber":420,"author":{"gitId":"justinfidelis"},"content":"     * @throws MedBotParserException when no parameters are specified.","lastModifiedDate":"2021-10-18"},{"lineNumber":421,"author":{"gitId":"jushg"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":422,"author":{"gitId":"justinfidelis"},"content":"    private static String[] getParameters(String userInput) throws MedBotParserException {","lastModifiedDate":"2021-10-18"},{"lineNumber":423,"author":{"gitId":"justinfidelis"},"content":"        String processedInput \u003d preprocessMultiAttributeInput(userInput);","lastModifiedDate":"2021-09-30"},{"lineNumber":424,"author":{"gitId":"justinfidelis"},"content":"        String[] words \u003d processedInput.split(REGEX_VERTICAL_LINE);","lastModifiedDate":"2021-10-13"},{"lineNumber":425,"author":{"gitId":"justinfidelis"},"content":"        if (words.length \u003d\u003d 1) {","lastModifiedDate":"2021-10-13"},{"lineNumber":426,"author":{"gitId":"justinfidelis"},"content":"            throw new MedBotParserException(ERROR_NO_PARAMETER);","lastModifiedDate":"2021-10-18"},{"lineNumber":427,"author":{"gitId":"justinfidelis"},"content":"        }","lastModifiedDate":"2021-09-30"},{"lineNumber":428,"author":{"gitId":"justinfidelis"},"content":"        assert words.length \u003e 1;","lastModifiedDate":"2021-10-13"},{"lineNumber":429,"author":{"gitId":"justinfidelis"},"content":"        String[] parameters \u003d Arrays.copyOfRange(words, 1, words.length);","lastModifiedDate":"2021-10-13"},{"lineNumber":430,"author":{"gitId":"justinfidelis"},"content":"        assert parameters.length \u003e\u003d 1;","lastModifiedDate":"2021-10-13"},{"lineNumber":431,"author":{"gitId":"jushg"},"content":"        return parameters;","lastModifiedDate":"2021-10-13"},{"lineNumber":432,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":433,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":434,"author":{"gitId":"jushg"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":435,"author":{"gitId":"jushg"},"content":"     * Preprocesses user input to remove invalid substring that can not be parsed.","lastModifiedDate":"2021-10-13"},{"lineNumber":436,"author":{"gitId":"jushg"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":437,"author":{"gitId":"jushg"},"content":"     * @param userInput The initial user input.","lastModifiedDate":"2021-10-13"},{"lineNumber":438,"author":{"gitId":"jushg"},"content":"     * @return user input without leading white space and vertical lines present.","lastModifiedDate":"2021-10-13"},{"lineNumber":439,"author":{"gitId":"jushg"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":440,"author":{"gitId":"jushg"},"content":"    private static String preprocessInput(String userInput) {","lastModifiedDate":"2021-10-13"},{"lineNumber":441,"author":{"gitId":"justinfidelis"},"content":"        return userInput.strip().replace(VERTICAL_LINE, EMPTY_STRING);","lastModifiedDate":"2021-10-20"},{"lineNumber":442,"author":{"gitId":"jushg"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":443,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":444,"author":{"gitId":"justinfidelis"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":445,"author":{"gitId":"justinfidelis"},"content":"     * Parses attributeStrings array and modifies all the corresponding attribute in person.","lastModifiedDate":"2021-10-13"},{"lineNumber":446,"author":{"gitId":"justinfidelis"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":447,"author":{"gitId":"justinfidelis"},"content":"     * @param person           Person whose personal information will be updated","lastModifiedDate":"2021-10-13"},{"lineNumber":448,"author":{"gitId":"justinfidelis"},"content":"     * @param attributeStrings String Array containing Strings of an attribute specifier and the corresponding","lastModifiedDate":"2021-10-13"},{"lineNumber":449,"author":{"gitId":"justinfidelis"},"content":"     *                         personal information","lastModifiedDate":"2021-10-13"},{"lineNumber":450,"author":{"gitId":"justinfidelis"},"content":"     * @throws MedBotParserException if the attributeString contains missing/invalid information","lastModifiedDate":"2021-10-18"},{"lineNumber":451,"author":{"gitId":"justinfidelis"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":452,"author":{"gitId":"justinfidelis"},"content":"    public static void updateMultiplePersonalInformation(Person person, String[] attributeStrings)","lastModifiedDate":"2021-10-13"},{"lineNumber":453,"author":{"gitId":"justinfidelis"},"content":"            throws MedBotParserException {","lastModifiedDate":"2021-10-18"},{"lineNumber":454,"author":{"gitId":"justinfidelis"},"content":"        for (String attributeString : attributeStrings) {","lastModifiedDate":"2021-10-18"},{"lineNumber":455,"author":{"gitId":"justinfidelis"},"content":"            updatePersonalInformation(person, attributeString);","lastModifiedDate":"2021-10-18"},{"lineNumber":456,"author":{"gitId":"justinfidelis"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":457,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":458,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":459,"author":{"gitId":"justinfidelis"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":460,"author":{"gitId":"EricBryann"},"content":"     * Parses attributeString and modifies the corresponding attribute in person.","lastModifiedDate":"2021-10-04"},{"lineNumber":461,"author":{"gitId":"justinfidelis"},"content":"     *","lastModifiedDate":"2021-09-30"},{"lineNumber":462,"author":{"gitId":"justinfidelis"},"content":"     * @param person          Person whose personal information will be updated","lastModifiedDate":"2021-09-30"},{"lineNumber":463,"author":{"gitId":"justinfidelis"},"content":"     * @param attributeString String containing an attribute specifier and the corresponding personal information","lastModifiedDate":"2021-09-30"},{"lineNumber":464,"author":{"gitId":"justinfidelis"},"content":"     * @throws MedBotParserException if the attributeString contains missing/invalid information","lastModifiedDate":"2021-10-18"},{"lineNumber":465,"author":{"gitId":"justinfidelis"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":466,"author":{"gitId":"justinfidelis"},"content":"    public static void updatePersonalInformation(Person person, String attributeString) throws MedBotParserException {","lastModifiedDate":"2021-10-18"},{"lineNumber":467,"author":{"gitId":"EricBryann"},"content":"        if (attributeString.startsWith(PARAMETER_NAME)) {","lastModifiedDate":"2021-10-06"},{"lineNumber":468,"author":{"gitId":"Kureans"},"content":"            String name \u003d parseName(attributeString.substring(PARAMETER_BUFFER));","lastModifiedDate":"2021-10-12"},{"lineNumber":469,"author":{"gitId":"justinfidelis"},"content":"            person.setName(name);","lastModifiedDate":"2021-09-30"},{"lineNumber":470,"author":{"gitId":"justinfidelis"},"content":"            return;","lastModifiedDate":"2021-09-30"},{"lineNumber":471,"author":{"gitId":"justinfidelis"},"content":"        }","lastModifiedDate":"2021-09-30"},{"lineNumber":472,"author":{"gitId":"EricBryann"},"content":"        if (attributeString.startsWith(PARAMETER_PHONE)) {","lastModifiedDate":"2021-10-06"},{"lineNumber":473,"author":{"gitId":"Kureans"},"content":"            String phoneNumber \u003d parsePhoneNumber(attributeString.substring(PARAMETER_BUFFER));","lastModifiedDate":"2021-10-12"},{"lineNumber":474,"author":{"gitId":"justinfidelis"},"content":"            person.setPhoneNumber(phoneNumber);","lastModifiedDate":"2021-09-30"},{"lineNumber":475,"author":{"gitId":"justinfidelis"},"content":"            return;","lastModifiedDate":"2021-09-30"},{"lineNumber":476,"author":{"gitId":"justinfidelis"},"content":"        }","lastModifiedDate":"2021-09-30"},{"lineNumber":477,"author":{"gitId":"EricBryann"},"content":"        if (attributeString.startsWith(PARAMETER_EMAIL)) {","lastModifiedDate":"2021-10-06"},{"lineNumber":478,"author":{"gitId":"Kureans"},"content":"            String email \u003d parseEmailAddress(attributeString.substring(PARAMETER_BUFFER));","lastModifiedDate":"2021-10-12"},{"lineNumber":479,"author":{"gitId":"justinfidelis"},"content":"            person.setEmailAddress(email);","lastModifiedDate":"2021-09-30"},{"lineNumber":480,"author":{"gitId":"justinfidelis"},"content":"            return;","lastModifiedDate":"2021-09-30"},{"lineNumber":481,"author":{"gitId":"justinfidelis"},"content":"        }","lastModifiedDate":"2021-09-30"},{"lineNumber":482,"author":{"gitId":"EricBryann"},"content":"        if (attributeString.startsWith(PARAMETER_IC)) {","lastModifiedDate":"2021-10-06"},{"lineNumber":483,"author":{"gitId":"Kureans"},"content":"            String icNumber \u003d parseIcNumber(attributeString.substring(PARAMETER_BUFFER));","lastModifiedDate":"2021-10-12"},{"lineNumber":484,"author":{"gitId":"justinfidelis"},"content":"            person.setIcNumber(icNumber);","lastModifiedDate":"2021-09-30"},{"lineNumber":485,"author":{"gitId":"justinfidelis"},"content":"        }","lastModifiedDate":"2021-09-30"},{"lineNumber":486,"author":{"gitId":"EricBryann"},"content":"        if (attributeString.startsWith(PARAMETER_ADDRESS)) {","lastModifiedDate":"2021-10-06"},{"lineNumber":487,"author":{"gitId":"Kureans"},"content":"            String address \u003d parseResidentialAddress(attributeString.substring(PARAMETER_BUFFER));","lastModifiedDate":"2021-10-12"},{"lineNumber":488,"author":{"gitId":"justinfidelis"},"content":"            person.setResidentialAddress(address);","lastModifiedDate":"2021-09-30"},{"lineNumber":489,"author":{"gitId":"justinfidelis"},"content":"        }","lastModifiedDate":"2021-09-30"},{"lineNumber":490,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":491,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":492,"author":{"gitId":"justinfidelis"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":493,"author":{"gitId":"EricBryann"},"content":"     * Returns a String containing the names specified in attributeString, with each name capitalised.","lastModifiedDate":"2021-10-04"},{"lineNumber":494,"author":{"gitId":"EricBryann"},"content":"     *","lastModifiedDate":"2021-10-04"},{"lineNumber":495,"author":{"gitId":"justinfidelis"},"content":"     * @param attributeString String containing the name to be parsed","lastModifiedDate":"2021-09-30"},{"lineNumber":496,"author":{"gitId":"justinfidelis"},"content":"     * @return String containing the name specified in attributeString","lastModifiedDate":"2021-09-30"},{"lineNumber":497,"author":{"gitId":"justinfidelis"},"content":"     * @throws MedBotParserException if no name is given","lastModifiedDate":"2021-10-18"},{"lineNumber":498,"author":{"gitId":"justinfidelis"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":499,"author":{"gitId":"justinfidelis"},"content":"    private static String parseName(String attributeString) throws MedBotParserException {","lastModifiedDate":"2021-10-18"},{"lineNumber":500,"author":{"gitId":"justinfidelis"},"content":"        try {","lastModifiedDate":"2021-09-30"},{"lineNumber":501,"author":{"gitId":"justinfidelis"},"content":"            String name \u003d attributeString.strip();","lastModifiedDate":"2021-10-06"},{"lineNumber":502,"author":{"gitId":"EricBryann"},"content":"            if (name.equals(EMPTY_STRING)) {","lastModifiedDate":"2021-10-06"},{"lineNumber":503,"author":{"gitId":"justinfidelis"},"content":"                throw new MedBotParserException(ERROR_NAME_NOT_SPECIFIED);","lastModifiedDate":"2021-10-18"},{"lineNumber":504,"author":{"gitId":"justinfidelis"},"content":"            }","lastModifiedDate":"2021-09-30"},{"lineNumber":505,"author":{"gitId":"justinfidelis"},"content":"            return capitaliseEachWord(name);","lastModifiedDate":"2021-09-30"},{"lineNumber":506,"author":{"gitId":"justinfidelis"},"content":"        } catch (IndexOutOfBoundsException ie) {","lastModifiedDate":"2021-09-30"},{"lineNumber":507,"author":{"gitId":"justinfidelis"},"content":"            throw new MedBotParserException(ERROR_NAME_NOT_SPECIFIED);","lastModifiedDate":"2021-10-18"},{"lineNumber":508,"author":{"gitId":"justinfidelis"},"content":"        }","lastModifiedDate":"2021-09-30"},{"lineNumber":509,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":510,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":511,"author":{"gitId":"justinfidelis"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":512,"author":{"gitId":"EricBryann"},"content":"     * Returns a String containing the IC number specified in attributeString.","lastModifiedDate":"2021-10-04"},{"lineNumber":513,"author":{"gitId":"justinfidelis"},"content":"     *","lastModifiedDate":"2021-09-30"},{"lineNumber":514,"author":{"gitId":"justinfidelis"},"content":"     * \u003cp\u003eChecks if the resultant String is of the right IC number format","lastModifiedDate":"2021-10-13"},{"lineNumber":515,"author":{"gitId":"justinfidelis"},"content":"     *","lastModifiedDate":"2021-09-30"},{"lineNumber":516,"author":{"gitId":"justinfidelis"},"content":"     * @param attributeString String containing the IC number to be parsed","lastModifiedDate":"2021-09-30"},{"lineNumber":517,"author":{"gitId":"justinfidelis"},"content":"     * @return String containing the IC number specified in attributeString","lastModifiedDate":"2021-09-30"},{"lineNumber":518,"author":{"gitId":"justinfidelis"},"content":"     * @throws MedBotParserException if IC number is not specified, or is in the wrong format","lastModifiedDate":"2021-10-18"},{"lineNumber":519,"author":{"gitId":"justinfidelis"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":520,"author":{"gitId":"justinfidelis"},"content":"    private static String parseIcNumber(String attributeString) throws MedBotParserException {","lastModifiedDate":"2021-10-18"},{"lineNumber":521,"author":{"gitId":"justinfidelis"},"content":"        try {","lastModifiedDate":"2021-09-30"},{"lineNumber":522,"author":{"gitId":"justinfidelis"},"content":"            String icString \u003d attributeString.toUpperCase().strip();","lastModifiedDate":"2021-10-06"},{"lineNumber":523,"author":{"gitId":"EricBryann"},"content":"            if (icString.equals(EMPTY_STRING)) {","lastModifiedDate":"2021-10-06"},{"lineNumber":524,"author":{"gitId":"justinfidelis"},"content":"                throw new MedBotParserException(ERROR_IC_NUMBER_NOT_SPECIFIED);","lastModifiedDate":"2021-10-18"},{"lineNumber":525,"author":{"gitId":"justinfidelis"},"content":"            }","lastModifiedDate":"2021-09-30"},{"lineNumber":526,"author":{"gitId":"EricBryann"},"content":"            if (!icString.matches(REGEX_IC)) {","lastModifiedDate":"2021-10-06"},{"lineNumber":527,"author":{"gitId":"justinfidelis"},"content":"                throw new MedBotParserException(ERROR_IC_NUMBER_INCORRECT_FORMAT);","lastModifiedDate":"2021-10-18"},{"lineNumber":528,"author":{"gitId":"justinfidelis"},"content":"            }","lastModifiedDate":"2021-09-30"},{"lineNumber":529,"author":{"gitId":"jushg"},"content":"            assert icString.length() \u003d\u003d 9;","lastModifiedDate":"2021-10-13"},{"lineNumber":530,"author":{"gitId":"justinfidelis"},"content":"            return icString;","lastModifiedDate":"2021-09-30"},{"lineNumber":531,"author":{"gitId":"justinfidelis"},"content":"        } catch (IndexOutOfBoundsException ie) {","lastModifiedDate":"2021-09-30"},{"lineNumber":532,"author":{"gitId":"justinfidelis"},"content":"            throw new MedBotParserException(ERROR_IC_NUMBER_NOT_SPECIFIED);","lastModifiedDate":"2021-10-18"},{"lineNumber":533,"author":{"gitId":"justinfidelis"},"content":"        }","lastModifiedDate":"2021-09-30"},{"lineNumber":534,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":535,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":536,"author":{"gitId":"justinfidelis"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":537,"author":{"gitId":"justinfidelis"},"content":"     * Returns a String containing the phone number specified in attributeString.","lastModifiedDate":"2021-09-30"},{"lineNumber":538,"author":{"gitId":"EricBryann"},"content":"     *","lastModifiedDate":"2021-10-04"},{"lineNumber":539,"author":{"gitId":"justinfidelis"},"content":"     * \u003cp\u003eRemoves special characters \"- _+()\" and checks if the length of the resultant String is 8","lastModifiedDate":"2021-10-13"},{"lineNumber":540,"author":{"gitId":"justinfidelis"},"content":"     *","lastModifiedDate":"2021-09-30"},{"lineNumber":541,"author":{"gitId":"justinfidelis"},"content":"     * @param attributeString String containing the phone number to be parsed","lastModifiedDate":"2021-09-30"},{"lineNumber":542,"author":{"gitId":"justinfidelis"},"content":"     * @return String containing the phone number specified in attributeString","lastModifiedDate":"2021-09-30"},{"lineNumber":543,"author":{"gitId":"justinfidelis"},"content":"     * @throws MedBotParserException if the phone number is not specified,","lastModifiedDate":"2021-10-18"},{"lineNumber":544,"author":{"gitId":"EricBryann"},"content":"     *                               has too many/few digits or contains unexpected characters","lastModifiedDate":"2021-10-04"},{"lineNumber":545,"author":{"gitId":"justinfidelis"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":546,"author":{"gitId":"justinfidelis"},"content":"    private static String parsePhoneNumber(String attributeString) throws MedBotParserException {","lastModifiedDate":"2021-10-18"},{"lineNumber":547,"author":{"gitId":"justinfidelis"},"content":"        try {","lastModifiedDate":"2021-09-30"},{"lineNumber":548,"author":{"gitId":"justinfidelis"},"content":"            String numberString \u003d attributeString.replaceAll(REGEX_PHONE_NUMBER_SEPARATOR, EMPTY_STRING).strip();","lastModifiedDate":"2021-10-13"},{"lineNumber":549,"author":{"gitId":"EricBryann"},"content":"            if (numberString.equals(EMPTY_STRING)) {","lastModifiedDate":"2021-10-06"},{"lineNumber":550,"author":{"gitId":"justinfidelis"},"content":"                throw new MedBotParserException(ERROR_PHONE_NUMBER_NOT_SPECIFIED);","lastModifiedDate":"2021-10-18"},{"lineNumber":551,"author":{"gitId":"justinfidelis"},"content":"            }","lastModifiedDate":"2021-09-30"},{"lineNumber":552,"author":{"gitId":"justinfidelis"},"content":"            if (numberString.length() \u003e 8) {","lastModifiedDate":"2021-09-30"},{"lineNumber":553,"author":{"gitId":"justinfidelis"},"content":"                throw new MedBotParserException(ERROR_PHONE_NUMBER_TOO_MANY_DIGITS);","lastModifiedDate":"2021-10-18"},{"lineNumber":554,"author":{"gitId":"justinfidelis"},"content":"            }","lastModifiedDate":"2021-09-30"},{"lineNumber":555,"author":{"gitId":"justinfidelis"},"content":"            if (numberString.length() \u003c 8) {","lastModifiedDate":"2021-09-30"},{"lineNumber":556,"author":{"gitId":"justinfidelis"},"content":"                throw new MedBotParserException(ERROR_PHONE_NUMBER_TOO_FEW_DIGITS);","lastModifiedDate":"2021-10-18"},{"lineNumber":557,"author":{"gitId":"justinfidelis"},"content":"            }","lastModifiedDate":"2021-09-30"},{"lineNumber":558,"author":{"gitId":"EricBryann"},"content":"            if (!numberString.matches(REGEX_PHONE_NUMBER)) {","lastModifiedDate":"2021-10-06"},{"lineNumber":559,"author":{"gitId":"justinfidelis"},"content":"                throw new MedBotParserException(ERROR_PHONE_NUMBER_UNEXPECTED_CHARACTERS);","lastModifiedDate":"2021-10-18"},{"lineNumber":560,"author":{"gitId":"justinfidelis"},"content":"            }","lastModifiedDate":"2021-09-30"},{"lineNumber":561,"author":{"gitId":"justinfidelis"},"content":"            return numberString;","lastModifiedDate":"2021-09-30"},{"lineNumber":562,"author":{"gitId":"justinfidelis"},"content":"        } catch (IndexOutOfBoundsException ie) {","lastModifiedDate":"2021-09-30"},{"lineNumber":563,"author":{"gitId":"justinfidelis"},"content":"            throw new MedBotParserException(ERROR_PHONE_NUMBER_NOT_SPECIFIED);","lastModifiedDate":"2021-10-18"},{"lineNumber":564,"author":{"gitId":"justinfidelis"},"content":"        }","lastModifiedDate":"2021-09-30"},{"lineNumber":565,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":566,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":567,"author":{"gitId":"justinfidelis"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":568,"author":{"gitId":"EricBryann"},"content":"     * Returns a String containing the email address specified in attributeString.","lastModifiedDate":"2021-10-04"},{"lineNumber":569,"author":{"gitId":"EricBryann"},"content":"     *","lastModifiedDate":"2021-10-04"},{"lineNumber":570,"author":{"gitId":"justinfidelis"},"content":"     * \u003cp\u003eChecks if the resultant String is of the right email format","lastModifiedDate":"2021-10-13"},{"lineNumber":571,"author":{"gitId":"justinfidelis"},"content":"     *","lastModifiedDate":"2021-09-30"},{"lineNumber":572,"author":{"gitId":"justinfidelis"},"content":"     * @param attributeString String containing the email address to be parsed","lastModifiedDate":"2021-09-30"},{"lineNumber":573,"author":{"gitId":"justinfidelis"},"content":"     * @return String containing the email address specified in attributeString","lastModifiedDate":"2021-09-30"},{"lineNumber":574,"author":{"gitId":"justinfidelis"},"content":"     * @throws MedBotParserException if the email address is not specified or is in the wrong format","lastModifiedDate":"2021-10-18"},{"lineNumber":575,"author":{"gitId":"justinfidelis"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":576,"author":{"gitId":"justinfidelis"},"content":"    private static String parseEmailAddress(String attributeString) throws MedBotParserException {","lastModifiedDate":"2021-10-18"},{"lineNumber":577,"author":{"gitId":"justinfidelis"},"content":"        try {","lastModifiedDate":"2021-09-30"},{"lineNumber":578,"author":{"gitId":"justinfidelis"},"content":"            String emailString \u003d attributeString.strip();","lastModifiedDate":"2021-10-06"},{"lineNumber":579,"author":{"gitId":"jushg"},"content":"            if (emailString.equals(EMPTY_STRING)) {","lastModifiedDate":"2021-10-07"},{"lineNumber":580,"author":{"gitId":"justinfidelis"},"content":"                throw new MedBotParserException(ERROR_EMAIL_ADDRESS_NOT_SPECIFIED);","lastModifiedDate":"2021-10-18"},{"lineNumber":581,"author":{"gitId":"justinfidelis"},"content":"            }","lastModifiedDate":"2021-09-30"},{"lineNumber":582,"author":{"gitId":"EricBryann"},"content":"            if (!emailString.matches(REGEX_EMAIL)) {","lastModifiedDate":"2021-10-06"},{"lineNumber":583,"author":{"gitId":"justinfidelis"},"content":"                throw new MedBotParserException(ERROR_EMAIL_ADDRESS_WRONG_FORMAT);","lastModifiedDate":"2021-10-18"},{"lineNumber":584,"author":{"gitId":"justinfidelis"},"content":"            }","lastModifiedDate":"2021-09-30"},{"lineNumber":585,"author":{"gitId":"justinfidelis"},"content":"            return emailString;","lastModifiedDate":"2021-09-30"},{"lineNumber":586,"author":{"gitId":"justinfidelis"},"content":"        } catch (IndexOutOfBoundsException ie) {","lastModifiedDate":"2021-09-30"},{"lineNumber":587,"author":{"gitId":"justinfidelis"},"content":"            throw new MedBotParserException(ERROR_EMAIL_ADDRESS_NOT_SPECIFIED);","lastModifiedDate":"2021-10-18"},{"lineNumber":588,"author":{"gitId":"justinfidelis"},"content":"        }","lastModifiedDate":"2021-09-30"},{"lineNumber":589,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":590,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":591,"author":{"gitId":"justinfidelis"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":592,"author":{"gitId":"EricBryann"},"content":"     * Returns the String containing the address specified in attributeString, with each word capitalised.","lastModifiedDate":"2021-10-04"},{"lineNumber":593,"author":{"gitId":"justinfidelis"},"content":"     *","lastModifiedDate":"2021-09-30"},{"lineNumber":594,"author":{"gitId":"justinfidelis"},"content":"     * \u003cp\u003eCapitalises each word in the address","lastModifiedDate":"2021-10-13"},{"lineNumber":595,"author":{"gitId":"justinfidelis"},"content":"     *","lastModifiedDate":"2021-09-30"},{"lineNumber":596,"author":{"gitId":"justinfidelis"},"content":"     * @param attributeString String containing the address to be parsed","lastModifiedDate":"2021-09-30"},{"lineNumber":597,"author":{"gitId":"justinfidelis"},"content":"     * @return String containing the address specified in attributeString","lastModifiedDate":"2021-09-30"},{"lineNumber":598,"author":{"gitId":"justinfidelis"},"content":"     * @throws MedBotParserException if address is not specified","lastModifiedDate":"2021-10-18"},{"lineNumber":599,"author":{"gitId":"justinfidelis"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":600,"author":{"gitId":"justinfidelis"},"content":"    private static String parseResidentialAddress(String attributeString) throws MedBotParserException {","lastModifiedDate":"2021-10-18"},{"lineNumber":601,"author":{"gitId":"justinfidelis"},"content":"        try {","lastModifiedDate":"2021-09-30"},{"lineNumber":602,"author":{"gitId":"justinfidelis"},"content":"            String addressString \u003d attributeString.strip();","lastModifiedDate":"2021-10-06"},{"lineNumber":603,"author":{"gitId":"EricBryann"},"content":"            if (addressString.equals(EMPTY_STRING)) {","lastModifiedDate":"2021-10-06"},{"lineNumber":604,"author":{"gitId":"justinfidelis"},"content":"                throw new MedBotParserException(ERROR_ADDRESS_NOT_SPECIFIED);","lastModifiedDate":"2021-10-18"},{"lineNumber":605,"author":{"gitId":"justinfidelis"},"content":"            }","lastModifiedDate":"2021-09-30"},{"lineNumber":606,"author":{"gitId":"justinfidelis"},"content":"            return capitaliseEachWord(addressString);","lastModifiedDate":"2021-09-30"},{"lineNumber":607,"author":{"gitId":"justinfidelis"},"content":"        } catch (IndexOutOfBoundsException ie) {","lastModifiedDate":"2021-09-30"},{"lineNumber":608,"author":{"gitId":"justinfidelis"},"content":"            throw new MedBotParserException(ERROR_ADDRESS_NOT_SPECIFIED);","lastModifiedDate":"2021-10-18"},{"lineNumber":609,"author":{"gitId":"justinfidelis"},"content":"        }","lastModifiedDate":"2021-09-30"},{"lineNumber":610,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":611,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":612,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":613,"author":{"gitId":"justinfidelis"},"content":"    private static int parsePersonId(String userInput) throws MedBotParserException {","lastModifiedDate":"2021-10-20"},{"lineNumber":614,"author":{"gitId":"justinfidelis"},"content":"        userInput \u003d userInput.strip();","lastModifiedDate":"2021-10-20"},{"lineNumber":615,"author":{"gitId":"justinfidelis"},"content":"        if (userInput.equals(EMPTY_STRING)) {","lastModifiedDate":"2021-10-20"},{"lineNumber":616,"author":{"gitId":"justinfidelis"},"content":"            throw new MedBotParserException(ERROR_ID_NOT_SPECIFIED);","lastModifiedDate":"2021-10-20"},{"lineNumber":617,"author":{"gitId":"justinfidelis"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":618,"author":{"gitId":"justinfidelis"},"content":"        Pattern pattern \u003d Pattern.compile(REGEX_PERSON_ID);","lastModifiedDate":"2021-10-20"},{"lineNumber":619,"author":{"gitId":"justinfidelis"},"content":"        Matcher matcher \u003d pattern.matcher(userInput);","lastModifiedDate":"2021-10-20"},{"lineNumber":620,"author":{"gitId":"justinfidelis"},"content":"        if (matcher.lookingAt()) {","lastModifiedDate":"2021-10-20"},{"lineNumber":621,"author":{"gitId":"justinfidelis"},"content":"            int id;","lastModifiedDate":"2021-10-20"},{"lineNumber":622,"author":{"gitId":"justinfidelis"},"content":"            try {","lastModifiedDate":"2021-10-20"},{"lineNumber":623,"author":{"gitId":"justinfidelis"},"content":"                id \u003d Integer.parseInt(matcher.group().stripTrailing());","lastModifiedDate":"2021-10-20"},{"lineNumber":624,"author":{"gitId":"justinfidelis"},"content":"            } catch (NumberFormatException ne) {","lastModifiedDate":"2021-10-20"},{"lineNumber":625,"author":{"gitId":"justinfidelis"},"content":"                assert false;","lastModifiedDate":"2021-10-20"},{"lineNumber":626,"author":{"gitId":"justinfidelis"},"content":"                throw new MedBotParserException(ERROR_ID_NOT_SPECIFIED);","lastModifiedDate":"2021-10-20"},{"lineNumber":627,"author":{"gitId":"justinfidelis"},"content":"            }","lastModifiedDate":"2021-10-20"},{"lineNumber":628,"author":{"gitId":"justinfidelis"},"content":"            return id;","lastModifiedDate":"2021-10-20"},{"lineNumber":629,"author":{"gitId":"justinfidelis"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":630,"author":{"gitId":"justinfidelis"},"content":"        throw new MedBotParserException(ERROR_ID_NOT_SPECIFIED);","lastModifiedDate":"2021-10-20"},{"lineNumber":631,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":632,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":633,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":634,"author":{"gitId":"justinfidelis"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":635,"author":{"gitId":"EricBryann"},"content":"     * Sets the first letter of each word of each word to uppercase and sets all others to lowercase.","lastModifiedDate":"2021-10-04"},{"lineNumber":636,"author":{"gitId":"EricBryann"},"content":"     *","lastModifiedDate":"2021-10-04"},{"lineNumber":637,"author":{"gitId":"EricBryann"},"content":"     * \u003cp\u003eA letter is considered the first letter of a word if it is the first letter of the input String or","lastModifiedDate":"2021-10-04"},{"lineNumber":638,"author":{"gitId":"justinfidelis"},"content":"     * is immediately after any of the characters \" _-\".","lastModifiedDate":"2021-09-30"},{"lineNumber":639,"author":{"gitId":"justinfidelis"},"content":"     *","lastModifiedDate":"2021-09-30"},{"lineNumber":640,"author":{"gitId":"justinfidelis"},"content":"     * @param input String which will be capitalised","lastModifiedDate":"2021-09-30"},{"lineNumber":641,"author":{"gitId":"justinfidelis"},"content":"     * @return String with each word capitalised","lastModifiedDate":"2021-09-30"},{"lineNumber":642,"author":{"gitId":"justinfidelis"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":643,"author":{"gitId":"justinfidelis"},"content":"    private static String capitaliseEachWord(String input) {","lastModifiedDate":"2021-09-30"},{"lineNumber":644,"author":{"gitId":"justinfidelis"},"content":"        input \u003d input.toLowerCase();","lastModifiedDate":"2021-10-06"},{"lineNumber":645,"author":{"gitId":"justinfidelis"},"content":"        Function\u003cMatchResult, String\u003e multiAttributeReplacementFunction \u003d x -\u003e {","lastModifiedDate":"2021-09-30"},{"lineNumber":646,"author":{"gitId":"justinfidelis"},"content":"            String match \u003d x.group();","lastModifiedDate":"2021-09-30"},{"lineNumber":647,"author":{"gitId":"justinfidelis"},"content":"            if (match.length() \u003d\u003d 1) {","lastModifiedDate":"2021-09-30"},{"lineNumber":648,"author":{"gitId":"justinfidelis"},"content":"                //if substring is the first character of the string","lastModifiedDate":"2021-10-13"},{"lineNumber":649,"author":{"gitId":"justinfidelis"},"content":"                return match.toUpperCase();","lastModifiedDate":"2021-09-30"},{"lineNumber":650,"author":{"gitId":"justinfidelis"},"content":"            } else {","lastModifiedDate":"2021-09-30"},{"lineNumber":651,"author":{"gitId":"justinfidelis"},"content":"                //if substring consists of one of the characters \" _-\" followed by a letter","lastModifiedDate":"2021-10-13"},{"lineNumber":652,"author":{"gitId":"justinfidelis"},"content":"                return match.charAt(0) + match.substring(1).toUpperCase();","lastModifiedDate":"2021-09-30"},{"lineNumber":653,"author":{"gitId":"justinfidelis"},"content":"            }","lastModifiedDate":"2021-09-30"},{"lineNumber":654,"author":{"gitId":"justinfidelis"},"content":"        };","lastModifiedDate":"2021-09-30"},{"lineNumber":655,"author":{"gitId":"EricBryann"},"content":"        Pattern pattern \u003d Pattern.compile(REGEX_CAPITALISE_POSITION);","lastModifiedDate":"2021-10-06"},{"lineNumber":656,"author":{"gitId":"justinfidelis"},"content":"        Matcher matcher \u003d pattern.matcher(input);","lastModifiedDate":"2021-09-30"},{"lineNumber":657,"author":{"gitId":"justinfidelis"},"content":"        return matcher.replaceAll(multiAttributeReplacementFunction);","lastModifiedDate":"2021-09-30"},{"lineNumber":658,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":659,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":660,"author":{"gitId":"justinfidelis"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":661,"author":{"gitId":"EricBryann"},"content":"     * Places a \"|\" separator before each attribute specifier in input and returns the resultant string.","lastModifiedDate":"2021-10-04"},{"lineNumber":662,"author":{"gitId":"EricBryann"},"content":"     *","lastModifiedDate":"2021-10-04"},{"lineNumber":663,"author":{"gitId":"EricBryann"},"content":"     * \u003cp\u003eAttribute specifiers are in the following formats \"a/\" or \"ab/\" where a and b can be any uppercase","lastModifiedDate":"2021-10-04"},{"lineNumber":664,"author":{"gitId":"justinfidelis"},"content":"     * or lowercase alphabet.","lastModifiedDate":"2021-09-30"},{"lineNumber":665,"author":{"gitId":"justinfidelis"},"content":"     *","lastModifiedDate":"2021-09-30"},{"lineNumber":666,"author":{"gitId":"justinfidelis"},"content":"     * @param input userInput String containing attribute specifiers","lastModifiedDate":"2021-09-30"},{"lineNumber":667,"author":{"gitId":"justinfidelis"},"content":"     * @return String containing added separator characters","lastModifiedDate":"2021-09-30"},{"lineNumber":668,"author":{"gitId":"justinfidelis"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":669,"author":{"gitId":"justinfidelis"},"content":"    private static String preprocessMultiAttributeInput(String input) {","lastModifiedDate":"2021-09-30"},{"lineNumber":670,"author":{"gitId":"justinfidelis"},"content":"        //replacement function to add a \"|\" character before an attribute specifier","lastModifiedDate":"2021-09-30"},{"lineNumber":671,"author":{"gitId":"jushg"},"content":"        Function\u003cMatchResult, String\u003e replacementFunction \u003d x -\u003e","lastModifiedDate":"2021-10-07"},{"lineNumber":672,"author":{"gitId":"jushg"},"content":"                SEPARATOR_SPACE + VERTICAL_LINE + x.group().substring(1);","lastModifiedDate":"2021-10-07"},{"lineNumber":673,"author":{"gitId":"EricBryann"},"content":"        Pattern pattern \u003d Pattern.compile(REGEX_INPUT_PARAMETER);","lastModifiedDate":"2021-10-06"},{"lineNumber":674,"author":{"gitId":"justinfidelis"},"content":"        Matcher matcher \u003d pattern.matcher(input);","lastModifiedDate":"2021-09-30"},{"lineNumber":675,"author":{"gitId":"justinfidelis"},"content":"        return matcher.replaceAll(replacementFunction);","lastModifiedDate":"2021-09-30"},{"lineNumber":676,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":677,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":678,"author":{"gitId":"justinfidelis"},"content":"}","lastModifiedDate":"2021-09-30"}],"authorContributionMap":{"justinfidelis":463,"jushg":93,"Kureans":50,"EricBryann":72}},{"path":"src/main/java/medbot/Scheduler.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"justinfidelis"},"content":"package medbot;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"justinfidelis"},"content":"import medbot.list.MedicalStaffList;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"justinfidelis"},"content":"import medbot.list.PatientList;","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"justinfidelis"},"content":"public class Scheduler {","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"justinfidelis"},"content":"    private final PatientList patientList \u003d new PatientList();","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"justinfidelis"},"content":"    private final MedicalStaffList medicalStaffList \u003d new MedicalStaffList();","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"justinfidelis"},"content":"    public PatientList getPatientList() {","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"justinfidelis"},"content":"        return patientList;","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"justinfidelis"},"content":"    public MedicalStaffList getMedicalStaffList() {","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"justinfidelis"},"content":"        return medicalStaffList;","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"justinfidelis"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"justinfidelis":17}},{"path":"src/main/java/medbot/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"CrimsonTitan79"},"content":"package medbot;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"justinfidelis"},"content":"import medbot.exceptions.MedBotException;","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"jushg"},"content":"import medbot.list.PatientList;","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"CrimsonTitan79"},"content":"import medbot.person.Patient;","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"CrimsonTitan79"},"content":"import medbot.utilities.Pair;","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"CrimsonTitan79"},"content":"import static medbot.Parser.updatePersonalInformation;","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"CrimsonTitan79"},"content":"import static medbot.Ui.VERTICAL_LINE_SPACED_ESCAPED;","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"CrimsonTitan79"},"content":"import java.io.File;","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"CrimsonTitan79"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"CrimsonTitan79"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"CrimsonTitan79"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"CrimsonTitan79"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"CrimsonTitan79"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"CrimsonTitan79"},"content":"public class Storage {","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"CrimsonTitan79"},"content":"    private static final String DEFAULT_DATA_PATH \u003d \"storage/data.txt\";","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"CrimsonTitan79"},"content":"    private static final String CREATED_NEW_FILE \u003d \"New data file created.\";","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"CrimsonTitan79"},"content":"    private static final String ERROR_LOAD_STORAGE \u003d \"Error: Unable to load data file.\";","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"CrimsonTitan79"},"content":"    private static final String ERROR_SAVE_STORAGE \u003d \"Error: Unable to save data.\";","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"CrimsonTitan79"},"content":"    private static final String ERROR_INVALID_STORAGE_LINE_INSTRUCTION \u003d \"\\n\\n\"","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"CrimsonTitan79"},"content":"            + \"Please decide if you wish to:\" + \"\\n\"","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"CrimsonTitan79"},"content":"            + \"1. Enter \u0027exit\u0027 to exit Medbot to correct the storage file\" + \"\\n\"","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"CrimsonTitan79"},"content":"            + \"2. Enter other valid commands to OVERWRITE all invalid data!\" + \"\\n\";","lastModifiedDate":"2021-10-09"},{"lineNumber":30,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"CrimsonTitan79"},"content":"    private static File dataFile;","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"CrimsonTitan79"},"content":"    private static String actualDataPath;","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":34,"author":{"gitId":"CrimsonTitan79"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"CrimsonTitan79"},"content":"     * Constructor","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"CrimsonTitan79"},"content":"     * which creates a storage/data.txt file if it doesn\u0027t exist.","lastModifiedDate":"2021-10-10"},{"lineNumber":37,"author":{"gitId":"CrimsonTitan79"},"content":"     *","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"CrimsonTitan79"},"content":"     * @throws MedBotException if storage/data.txt cannot be created and does not exist","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"CrimsonTitan79"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":40,"author":{"gitId":"CrimsonTitan79"},"content":"    public Storage() throws MedBotException {","lastModifiedDate":"2021-10-08"},{"lineNumber":41,"author":{"gitId":"CrimsonTitan79"},"content":"        this(DEFAULT_DATA_PATH);","lastModifiedDate":"2021-10-10"},{"lineNumber":42,"author":{"gitId":"CrimsonTitan79"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":43,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":44,"author":{"gitId":"CrimsonTitan79"},"content":"    public Storage(String dataPath) throws MedBotException {","lastModifiedDate":"2021-10-10"},{"lineNumber":45,"author":{"gitId":"CrimsonTitan79"},"content":"        try {","lastModifiedDate":"2021-10-08"},{"lineNumber":46,"author":{"gitId":"CrimsonTitan79"},"content":"            actualDataPath \u003d dataPath;","lastModifiedDate":"2021-10-10"},{"lineNumber":47,"author":{"gitId":"CrimsonTitan79"},"content":"            dataFile \u003d new File(actualDataPath);","lastModifiedDate":"2021-10-10"},{"lineNumber":48,"author":{"gitId":"CrimsonTitan79"},"content":"            dataFile.getParentFile().mkdirs();","lastModifiedDate":"2021-10-10"},{"lineNumber":49,"author":{"gitId":"CrimsonTitan79"},"content":"            dataFile.createNewFile();","lastModifiedDate":"2021-10-10"},{"lineNumber":50,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":51,"author":{"gitId":"CrimsonTitan79"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-10-08"},{"lineNumber":52,"author":{"gitId":"CrimsonTitan79"},"content":"            throw new MedBotException(ERROR_LOAD_STORAGE);","lastModifiedDate":"2021-10-08"},{"lineNumber":53,"author":{"gitId":"CrimsonTitan79"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":54,"author":{"gitId":"CrimsonTitan79"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":55,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":56,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":57,"author":{"gitId":"CrimsonTitan79"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":58,"author":{"gitId":"CrimsonTitan79"},"content":"     * Reads in storage/data.txt file, parses each line and adds the data into the program","lastModifiedDate":"2021-10-08"},{"lineNumber":59,"author":{"gitId":"CrimsonTitan79"},"content":"     * returns all line numbers of storage/data.txt that are invalid","lastModifiedDate":"2021-10-13"},{"lineNumber":60,"author":{"gitId":"CrimsonTitan79"},"content":"     *","lastModifiedDate":"2021-10-08"},{"lineNumber":61,"author":{"gitId":"CrimsonTitan79"},"content":"     * @param patientList instance of PatientList","lastModifiedDate":"2021-10-08"},{"lineNumber":62,"author":{"gitId":"CrimsonTitan79"},"content":"     * @return Error message if there are formatting errors in storage/data.txt","lastModifiedDate":"2021-10-13"},{"lineNumber":63,"author":{"gitId":"CrimsonTitan79"},"content":"     * @throws FileNotFoundException if storage/data.txt cannot be found","lastModifiedDate":"2021-10-08"},{"lineNumber":64,"author":{"gitId":"CrimsonTitan79"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":65,"author":{"gitId":"CrimsonTitan79"},"content":"    public String loadStorage(PatientList patientList) throws FileNotFoundException {","lastModifiedDate":"2021-10-10"},{"lineNumber":66,"author":{"gitId":"CrimsonTitan79"},"content":"        int lineNumber \u003d 1;","lastModifiedDate":"2021-10-08"},{"lineNumber":67,"author":{"gitId":"CrimsonTitan79"},"content":"        int lastId \u003d 1;","lastModifiedDate":"2021-10-08"},{"lineNumber":68,"author":{"gitId":"CrimsonTitan79"},"content":"        Scanner s \u003d new Scanner(dataFile);","lastModifiedDate":"2021-10-10"},{"lineNumber":69,"author":{"gitId":"CrimsonTitan79"},"content":"        String loadStorageErrorMessage \u003d \"\";","lastModifiedDate":"2021-10-10"},{"lineNumber":70,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":71,"author":{"gitId":"CrimsonTitan79"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2021-10-08"},{"lineNumber":72,"author":{"gitId":"CrimsonTitan79"},"content":"            Patient patient;","lastModifiedDate":"2021-10-10"},{"lineNumber":73,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":74,"author":{"gitId":"CrimsonTitan79"},"content":"            try {","lastModifiedDate":"2021-10-08"},{"lineNumber":75,"author":{"gitId":"CrimsonTitan79"},"content":"                String storageLine \u003d s.nextLine();","lastModifiedDate":"2021-10-13"},{"lineNumber":76,"author":{"gitId":"CrimsonTitan79"},"content":"                Pair\u003cInteger, ArrayList\u003cString\u003e\u003e patientDetails \u003d parseStorageLine(storageLine);","lastModifiedDate":"2021-10-13"},{"lineNumber":77,"author":{"gitId":"CrimsonTitan79"},"content":"                patient \u003d createPatient(patientDetails);","lastModifiedDate":"2021-10-13"},{"lineNumber":78,"author":{"gitId":"jushg"},"content":"                patientList.addPersonFromStorage(patient);","lastModifiedDate":"2021-10-18"},{"lineNumber":79,"author":{"gitId":"jushg"},"content":"                lastId \u003d patient.getPersonId();","lastModifiedDate":"2021-10-19"},{"lineNumber":80,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":81,"author":{"gitId":"CrimsonTitan79"},"content":"            } catch (Exception e) {","lastModifiedDate":"2021-10-08"},{"lineNumber":82,"author":{"gitId":"CrimsonTitan79"},"content":"                loadStorageErrorMessage +\u003d loadStorageLineErrorMessage(lineNumber);","lastModifiedDate":"2021-10-13"},{"lineNumber":83,"author":{"gitId":"CrimsonTitan79"},"content":"            }","lastModifiedDate":"2021-10-08"},{"lineNumber":84,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":85,"author":{"gitId":"CrimsonTitan79"},"content":"            lineNumber++;","lastModifiedDate":"2021-10-08"},{"lineNumber":86,"author":{"gitId":"CrimsonTitan79"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":87,"author":{"gitId":"CrimsonTitan79"},"content":"        patientList.setLastId(lastId);","lastModifiedDate":"2021-10-08"},{"lineNumber":88,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":89,"author":{"gitId":"CrimsonTitan79"},"content":"        if (!loadStorageErrorMessage.isBlank()) {","lastModifiedDate":"2021-10-10"},{"lineNumber":90,"author":{"gitId":"CrimsonTitan79"},"content":"            loadStorageErrorMessage +\u003d ERROR_INVALID_STORAGE_LINE_INSTRUCTION;","lastModifiedDate":"2021-10-13"},{"lineNumber":91,"author":{"gitId":"CrimsonTitan79"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":92,"author":{"gitId":"CrimsonTitan79"},"content":"        return loadStorageErrorMessage;","lastModifiedDate":"2021-10-10"},{"lineNumber":93,"author":{"gitId":"CrimsonTitan79"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":94,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":95,"author":{"gitId":"CrimsonTitan79"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":96,"author":{"gitId":"CrimsonTitan79"},"content":"     * Parse a line from storage/data.txt by splitting its constituent parts.","lastModifiedDate":"2021-10-13"},{"lineNumber":97,"author":{"gitId":"CrimsonTitan79"},"content":"     *","lastModifiedDate":"2021-10-08"},{"lineNumber":98,"author":{"gitId":"CrimsonTitan79"},"content":"     * @param storageLine a line from storage/data.txt","lastModifiedDate":"2021-10-08"},{"lineNumber":99,"author":{"gitId":"CrimsonTitan79"},"content":"     * @return patient details, consisting of patient ID and other parameters","lastModifiedDate":"2021-10-13"},{"lineNumber":100,"author":{"gitId":"CrimsonTitan79"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":101,"author":{"gitId":"CrimsonTitan79"},"content":"    private static Pair\u003cInteger, ArrayList\u003cString\u003e\u003e parseStorageLine(String storageLine) {","lastModifiedDate":"2021-10-13"},{"lineNumber":102,"author":{"gitId":"CrimsonTitan79"},"content":"        if (storageLine.isBlank()) {","lastModifiedDate":"2021-10-08"},{"lineNumber":103,"author":{"gitId":"CrimsonTitan79"},"content":"            return null;","lastModifiedDate":"2021-10-08"},{"lineNumber":104,"author":{"gitId":"CrimsonTitan79"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":105,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":106,"author":{"gitId":"CrimsonTitan79"},"content":"        String[] personParameters \u003d splitStorageLine(storageLine);","lastModifiedDate":"2021-10-13"},{"lineNumber":107,"author":{"gitId":"CrimsonTitan79"},"content":"        String[] parameterPrefixes \u003d {\"i/\", \"n/\", \"p/\", \"e/\", \"a/\"};","lastModifiedDate":"2021-10-08"},{"lineNumber":108,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":109,"author":{"gitId":"CrimsonTitan79"},"content":"        ArrayList\u003cString\u003e prefixPlusPersonParameters \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-08"},{"lineNumber":110,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":111,"author":{"gitId":"CrimsonTitan79"},"content":"        Integer patientId \u003d Integer.parseInt(personParameters[0]);","lastModifiedDate":"2021-10-13"},{"lineNumber":112,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":113,"author":{"gitId":"CrimsonTitan79"},"content":"        for (int i \u003d 0; i \u003c parameterPrefixes.length; i++) {","lastModifiedDate":"2021-10-08"},{"lineNumber":114,"author":{"gitId":"CrimsonTitan79"},"content":"            // i + 1, since personParameters[0] is the patientId","lastModifiedDate":"2021-10-13"},{"lineNumber":115,"author":{"gitId":"CrimsonTitan79"},"content":"            if (isStorageParameterNull(personParameters[i + 1])) {","lastModifiedDate":"2021-10-08"},{"lineNumber":116,"author":{"gitId":"CrimsonTitan79"},"content":"                continue;","lastModifiedDate":"2021-10-08"},{"lineNumber":117,"author":{"gitId":"CrimsonTitan79"},"content":"            }","lastModifiedDate":"2021-10-08"},{"lineNumber":118,"author":{"gitId":"CrimsonTitan79"},"content":"            // i + 1, since personParameters[0] is the patientId","lastModifiedDate":"2021-10-13"},{"lineNumber":119,"author":{"gitId":"CrimsonTitan79"},"content":"            String prefixPlusPersonParameter \u003d parameterPrefixes[i] + personParameters[i + 1];","lastModifiedDate":"2021-10-08"},{"lineNumber":120,"author":{"gitId":"CrimsonTitan79"},"content":"            prefixPlusPersonParameters.add(prefixPlusPersonParameter);","lastModifiedDate":"2021-10-08"},{"lineNumber":121,"author":{"gitId":"CrimsonTitan79"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":122,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":123,"author":{"gitId":"CrimsonTitan79"},"content":"        assert personParameters.length \u003d\u003d parameterPrefixes.length + 1;","lastModifiedDate":"2021-10-13"},{"lineNumber":124,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":125,"author":{"gitId":"CrimsonTitan79"},"content":"        return new Pair\u003c\u003e(patientId, prefixPlusPersonParameters);","lastModifiedDate":"2021-10-13"},{"lineNumber":126,"author":{"gitId":"CrimsonTitan79"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":127,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":128,"author":{"gitId":"CrimsonTitan79"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":129,"author":{"gitId":"CrimsonTitan79"},"content":"     * Create a patient object from the given parameters/details.","lastModifiedDate":"2021-10-13"},{"lineNumber":130,"author":{"gitId":"CrimsonTitan79"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":131,"author":{"gitId":"CrimsonTitan79"},"content":"     * @param patientDetails contains all the parameters of the patient, eg. i/S8712345A","lastModifiedDate":"2021-10-13"},{"lineNumber":132,"author":{"gitId":"CrimsonTitan79"},"content":"     * @return a patient object with the given parameters. return null if patientDetails \u003d\u003d null","lastModifiedDate":"2021-10-13"},{"lineNumber":133,"author":{"gitId":"CrimsonTitan79"},"content":"     * @throws MedBotException if fail to update patient\u0027s personal information","lastModifiedDate":"2021-10-13"},{"lineNumber":134,"author":{"gitId":"CrimsonTitan79"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":135,"author":{"gitId":"CrimsonTitan79"},"content":"    private Patient createPatient(Pair\u003cInteger, ArrayList\u003cString\u003e\u003e patientDetails) throws MedBotException {","lastModifiedDate":"2021-10-13"},{"lineNumber":136,"author":{"gitId":"CrimsonTitan79"},"content":"        if (patientDetails \u003d\u003d null) {","lastModifiedDate":"2021-10-13"},{"lineNumber":137,"author":{"gitId":"CrimsonTitan79"},"content":"            return null;","lastModifiedDate":"2021-10-13"},{"lineNumber":138,"author":{"gitId":"CrimsonTitan79"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":139,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":140,"author":{"gitId":"CrimsonTitan79"},"content":"        Patient patient \u003d new Patient();","lastModifiedDate":"2021-10-08"},{"lineNumber":141,"author":{"gitId":"CrimsonTitan79"},"content":"        int patientId \u003d patientDetails.first;","lastModifiedDate":"2021-10-13"},{"lineNumber":142,"author":{"gitId":"CrimsonTitan79"},"content":"        ArrayList\u003cString\u003e prefixPlusPersonParameters \u003d patientDetails.second;","lastModifiedDate":"2021-10-13"},{"lineNumber":143,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":144,"author":{"gitId":"jushg"},"content":"        patient.setPersonId(patientId);","lastModifiedDate":"2021-10-19"},{"lineNumber":145,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":146,"author":{"gitId":"CrimsonTitan79"},"content":"        for (String prefixPlusPersonParameter : prefixPlusPersonParameters) {","lastModifiedDate":"2021-10-08"},{"lineNumber":147,"author":{"gitId":"CrimsonTitan79"},"content":"            //updatePersonalInformation does error-checking of patient details","lastModifiedDate":"2021-10-13"},{"lineNumber":148,"author":{"gitId":"CrimsonTitan79"},"content":"            //in addition to updating patient info","lastModifiedDate":"2021-10-13"},{"lineNumber":149,"author":{"gitId":"CrimsonTitan79"},"content":"            updatePersonalInformation(patient, prefixPlusPersonParameter);","lastModifiedDate":"2021-10-08"},{"lineNumber":150,"author":{"gitId":"CrimsonTitan79"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":151,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":152,"author":{"gitId":"CrimsonTitan79"},"content":"        return patient;","lastModifiedDate":"2021-10-08"},{"lineNumber":153,"author":{"gitId":"CrimsonTitan79"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":154,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":155,"author":{"gitId":"CrimsonTitan79"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":156,"author":{"gitId":"CrimsonTitan79"},"content":"     * String split a line with \" | \" as the delimiters.","lastModifiedDate":"2021-10-13"},{"lineNumber":157,"author":{"gitId":"CrimsonTitan79"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":158,"author":{"gitId":"CrimsonTitan79"},"content":"     * @param storageLine a line in storage/data.txt","lastModifiedDate":"2021-10-13"},{"lineNumber":159,"author":{"gitId":"CrimsonTitan79"},"content":"     * @return String[] with the parameters separated in different indexes in the array","lastModifiedDate":"2021-10-13"},{"lineNumber":160,"author":{"gitId":"CrimsonTitan79"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":161,"author":{"gitId":"CrimsonTitan79"},"content":"    private static String[] splitStorageLine(String storageLine) {","lastModifiedDate":"2021-10-13"},{"lineNumber":162,"author":{"gitId":"CrimsonTitan79"},"content":"        return storageLine.split(VERTICAL_LINE_SPACED_ESCAPED);","lastModifiedDate":"2021-10-13"},{"lineNumber":163,"author":{"gitId":"CrimsonTitan79"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":164,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":165,"author":{"gitId":"CrimsonTitan79"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":166,"author":{"gitId":"CrimsonTitan79"},"content":"     * True if \"X\", which means the parameter is null, false otherwise.","lastModifiedDate":"2021-10-09"},{"lineNumber":167,"author":{"gitId":"CrimsonTitan79"},"content":"     *","lastModifiedDate":"2021-10-09"},{"lineNumber":168,"author":{"gitId":"CrimsonTitan79"},"content":"     * @param parameter a parameter in a line of storage/data.txt","lastModifiedDate":"2021-10-08"},{"lineNumber":169,"author":{"gitId":"CrimsonTitan79"},"content":"     * @return true if \"X\", which means the parameter is null, false otherwise","lastModifiedDate":"2021-10-08"},{"lineNumber":170,"author":{"gitId":"CrimsonTitan79"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":171,"author":{"gitId":"CrimsonTitan79"},"content":"    private static boolean isStorageParameterNull(String parameter) {","lastModifiedDate":"2021-10-08"},{"lineNumber":172,"author":{"gitId":"CrimsonTitan79"},"content":"        return parameter.equals(\"X\");","lastModifiedDate":"2021-10-08"},{"lineNumber":173,"author":{"gitId":"CrimsonTitan79"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":174,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":175,"author":{"gitId":"CrimsonTitan79"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":176,"author":{"gitId":"CrimsonTitan79"},"content":"     * Write patientList storageString to storage/data.txt.","lastModifiedDate":"2021-10-13"},{"lineNumber":177,"author":{"gitId":"CrimsonTitan79"},"content":"     *","lastModifiedDate":"2021-10-08"},{"lineNumber":178,"author":{"gitId":"CrimsonTitan79"},"content":"     * @param patientList instance of PatientList","lastModifiedDate":"2021-10-08"},{"lineNumber":179,"author":{"gitId":"CrimsonTitan79"},"content":"     * @throws MedBotException if unable to write to storage/data.txt","lastModifiedDate":"2021-10-08"},{"lineNumber":180,"author":{"gitId":"CrimsonTitan79"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":181,"author":{"gitId":"CrimsonTitan79"},"content":"    public void saveData(PatientList patientList) throws MedBotException {","lastModifiedDate":"2021-10-08"},{"lineNumber":182,"author":{"gitId":"CrimsonTitan79"},"content":"        try {","lastModifiedDate":"2021-10-08"},{"lineNumber":183,"author":{"gitId":"CrimsonTitan79"},"content":"            FileWriter fw \u003d new FileWriter(actualDataPath);","lastModifiedDate":"2021-10-10"},{"lineNumber":184,"author":{"gitId":"CrimsonTitan79"},"content":"            fw.write(patientList.getStorageString());","lastModifiedDate":"2021-10-08"},{"lineNumber":185,"author":{"gitId":"CrimsonTitan79"},"content":"            fw.close();","lastModifiedDate":"2021-10-08"},{"lineNumber":186,"author":{"gitId":"CrimsonTitan79"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-10-08"},{"lineNumber":187,"author":{"gitId":"CrimsonTitan79"},"content":"            throw new MedBotException(ERROR_SAVE_STORAGE);","lastModifiedDate":"2021-10-08"},{"lineNumber":188,"author":{"gitId":"CrimsonTitan79"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":189,"author":{"gitId":"CrimsonTitan79"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":190,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":191,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":192,"author":{"gitId":"CrimsonTitan79"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":193,"author":{"gitId":"CrimsonTitan79"},"content":"     * Error message that shows the line number of a line in storage/data.txt with improper formatting.","lastModifiedDate":"2021-10-13"},{"lineNumber":194,"author":{"gitId":"CrimsonTitan79"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":195,"author":{"gitId":"CrimsonTitan79"},"content":"     * @param lineNumber the line number with improper formatting in storage/data.txt","lastModifiedDate":"2021-10-13"},{"lineNumber":196,"author":{"gitId":"CrimsonTitan79"},"content":"     * @return Error message","lastModifiedDate":"2021-10-13"},{"lineNumber":197,"author":{"gitId":"CrimsonTitan79"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":198,"author":{"gitId":"CrimsonTitan79"},"content":"    private String loadStorageLineErrorMessage(int lineNumber) {","lastModifiedDate":"2021-10-13"},{"lineNumber":199,"author":{"gitId":"CrimsonTitan79"},"content":"        return \"Error: Line \" + lineNumber + \" of \" + DEFAULT_DATA_PATH","lastModifiedDate":"2021-10-10"},{"lineNumber":200,"author":{"gitId":"CrimsonTitan79"},"content":"                + \" is invalid!\\n\";","lastModifiedDate":"2021-10-13"},{"lineNumber":201,"author":{"gitId":"CrimsonTitan79"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":202,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":203,"author":{"gitId":"CrimsonTitan79"},"content":"}","lastModifiedDate":"2021-10-08"},{"lineNumber":204,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"justinfidelis":1,"CrimsonTitan79":199,"jushg":4}},{"path":"src/main/java/medbot/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"justinfidelis"},"content":"package medbot;","lastModifiedDate":"2021-09-30"},{"lineNumber":2,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":3,"author":{"gitId":"jushg"},"content":"import medbot.list.PersonList;","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"Kureans"},"content":"import medbot.utilities.ViewType;","lastModifiedDate":"2021-10-16"},{"lineNumber":5,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":6,"author":{"gitId":"Kureans"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"EricBryann"},"content":"import java.util.List;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"justinfidelis"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-09-30"},{"lineNumber":9,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":10,"author":{"gitId":"EricBryann"},"content":"/**","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"EricBryann"},"content":" * Represents a UI class that interacts with User","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"EricBryann"},"content":" * (Reading user input and printing message to users).","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"EricBryann"},"content":" */","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"justinfidelis"},"content":"public class Ui {","lastModifiedDate":"2021-09-30"},{"lineNumber":15,"author":{"gitId":"CrimsonTitan79"},"content":"    public static final String VERTICAL_LINE_SPACED_ESCAPED \u003d \" \\\\| \";","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"CrimsonTitan79"},"content":"    public static final String VERTICAL_LINE_SPACED \u003d \" | \";","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"justinfidelis"},"content":"    public static final String ENDLINE \u003d System.lineSeparator();","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"justinfidelis"},"content":"    private Scanner inputScanner \u003d new Scanner(System.in);","lastModifiedDate":"2021-09-30"},{"lineNumber":20,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":21,"author":{"gitId":"justinfidelis"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":22,"author":{"gitId":"justinfidelis"},"content":"     * Gets user input from terminal and returns it as a String.","lastModifiedDate":"2021-09-30"},{"lineNumber":23,"author":{"gitId":"justinfidelis"},"content":"     *","lastModifiedDate":"2021-09-30"},{"lineNumber":24,"author":{"gitId":"justinfidelis"},"content":"     * @return the String containing the user input.","lastModifiedDate":"2021-09-30"},{"lineNumber":25,"author":{"gitId":"justinfidelis"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":26,"author":{"gitId":"justinfidelis"},"content":"    public String readInput() {","lastModifiedDate":"2021-09-30"},{"lineNumber":27,"author":{"gitId":"justinfidelis"},"content":"        String line;","lastModifiedDate":"2021-09-30"},{"lineNumber":28,"author":{"gitId":"justinfidelis"},"content":"        line \u003d inputScanner.nextLine();","lastModifiedDate":"2021-09-30"},{"lineNumber":29,"author":{"gitId":"justinfidelis"},"content":"        return line;","lastModifiedDate":"2021-09-30"},{"lineNumber":30,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":31,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":32,"author":{"gitId":"EricBryann"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":33,"author":{"gitId":"EricBryann"},"content":"     * Prints a message.","lastModifiedDate":"2021-10-06"},{"lineNumber":34,"author":{"gitId":"EricBryann"},"content":"     *","lastModifiedDate":"2021-10-06"},{"lineNumber":35,"author":{"gitId":"EricBryann"},"content":"     * @param outputMessage the message to be printed","lastModifiedDate":"2021-10-06"},{"lineNumber":36,"author":{"gitId":"EricBryann"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":37,"author":{"gitId":"justinfidelis"},"content":"    public void printOutput(String outputMessage) {","lastModifiedDate":"2021-09-30"},{"lineNumber":38,"author":{"gitId":"justinfidelis"},"content":"        System.out.println(outputMessage);","lastModifiedDate":"2021-09-30"},{"lineNumber":39,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":40,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":41,"author":{"gitId":"EricBryann"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":42,"author":{"gitId":"EricBryann"},"content":"     * Prints a welcome message when MedBot is first loaded.","lastModifiedDate":"2021-10-06"},{"lineNumber":43,"author":{"gitId":"EricBryann"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":44,"author":{"gitId":"CrimsonTitan79"},"content":"    public void printWelcomeMessageOne() {","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"EricBryann"},"content":"        printOutput(\"Hello, I\u0027m MedBot!\");","lastModifiedDate":"2021-10-19"},{"lineNumber":46,"author":{"gitId":"CrimsonTitan79"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"EricBryann"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":49,"author":{"gitId":"EricBryann"},"content":"     * Prints a welcome message when MedBot file storage is successfully loaded.","lastModifiedDate":"2021-10-13"},{"lineNumber":50,"author":{"gitId":"EricBryann"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":51,"author":{"gitId":"CrimsonTitan79"},"content":"    public void printWelcomeMessageTwo() {","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"EricBryann"},"content":"        printOutput(\"How can I help you today?\" + ENDLINE);","lastModifiedDate":"2021-10-19"},{"lineNumber":53,"author":{"gitId":"EricBryann"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":54,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":55,"author":{"gitId":"EricBryann"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":56,"author":{"gitId":"EricBryann"},"content":"     * Returns a message when successfully add a patient to a list.","lastModifiedDate":"2021-10-06"},{"lineNumber":57,"author":{"gitId":"EricBryann"},"content":"     *","lastModifiedDate":"2021-10-06"},{"lineNumber":58,"author":{"gitId":"EricBryann"},"content":"     * @param patientId the ID of the patient to be added","lastModifiedDate":"2021-10-06"},{"lineNumber":59,"author":{"gitId":"EricBryann"},"content":"     * @return the Successful Message","lastModifiedDate":"2021-10-06"},{"lineNumber":60,"author":{"gitId":"EricBryann"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":61,"author":{"gitId":"EricBryann"},"content":"    public String getAddPatientMessage(int patientId) {","lastModifiedDate":"2021-10-06"},{"lineNumber":62,"author":{"gitId":"EricBryann"},"content":"        assert patientId \u003e 0;","lastModifiedDate":"2021-10-13"},{"lineNumber":63,"author":{"gitId":"EricBryann"},"content":"        return \"Added patient with patient ID: \" + patientId + ENDLINE;","lastModifiedDate":"2021-10-19"},{"lineNumber":64,"author":{"gitId":"EricBryann"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":65,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":66,"author":{"gitId":"EricBryann"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":67,"author":{"gitId":"EricBryann"},"content":"     * Returns a message when successfully delete a patient from a list.","lastModifiedDate":"2021-10-06"},{"lineNumber":68,"author":{"gitId":"EricBryann"},"content":"     *","lastModifiedDate":"2021-10-06"},{"lineNumber":69,"author":{"gitId":"EricBryann"},"content":"     * @param patientId the ID of the patient to be deleted.","lastModifiedDate":"2021-10-06"},{"lineNumber":70,"author":{"gitId":"EricBryann"},"content":"     * @return the Successful Message","lastModifiedDate":"2021-10-06"},{"lineNumber":71,"author":{"gitId":"EricBryann"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":72,"author":{"gitId":"EricBryann"},"content":"    public String getDeletePatientMessage(int patientId) {","lastModifiedDate":"2021-10-06"},{"lineNumber":73,"author":{"gitId":"EricBryann"},"content":"        assert patientId \u003e 0;","lastModifiedDate":"2021-10-13"},{"lineNumber":74,"author":{"gitId":"EricBryann"},"content":"        return \"Patient with id \" + patientId + \" deleted from system.\" + ENDLINE;","lastModifiedDate":"2021-10-19"},{"lineNumber":75,"author":{"gitId":"EricBryann"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":76,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":77,"author":{"gitId":"EricBryann"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":78,"author":{"gitId":"EricBryann"},"content":"     * Returns a message when successfully edit a patient in a list.","lastModifiedDate":"2021-10-06"},{"lineNumber":79,"author":{"gitId":"EricBryann"},"content":"     *","lastModifiedDate":"2021-10-06"},{"lineNumber":80,"author":{"gitId":"EricBryann"},"content":"     * @param patientId the ID of the patient to be edited.","lastModifiedDate":"2021-10-06"},{"lineNumber":81,"author":{"gitId":"EricBryann"},"content":"     * @return the Successful Message","lastModifiedDate":"2021-10-06"},{"lineNumber":82,"author":{"gitId":"EricBryann"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":83,"author":{"gitId":"EricBryann"},"content":"    public String getEditPatientMessage(int patientId, String patientInfo) {","lastModifiedDate":"2021-10-06"},{"lineNumber":84,"author":{"gitId":"EricBryann"},"content":"        assert patientId \u003e 0;","lastModifiedDate":"2021-10-13"},{"lineNumber":85,"author":{"gitId":"EricBryann"},"content":"        return \"The information of patient with ID \" + patientId + \" has been edited to:\" + ENDLINE + ENDLINE","lastModifiedDate":"2021-10-19"},{"lineNumber":86,"author":{"gitId":"EricBryann"},"content":"                + patientInfo + ENDLINE;","lastModifiedDate":"2021-10-19"},{"lineNumber":87,"author":{"gitId":"EricBryann"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":88,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":89,"author":{"gitId":"EricBryann"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":90,"author":{"gitId":"EricBryann"},"content":"     * Returns the information of the filtered patients.","lastModifiedDate":"2021-10-19"},{"lineNumber":91,"author":{"gitId":"EricBryann"},"content":"     *","lastModifiedDate":"2021-10-19"},{"lineNumber":92,"author":{"gitId":"EricBryann"},"content":"     * @param patients the filtered patients to be printed.","lastModifiedDate":"2021-10-19"},{"lineNumber":93,"author":{"gitId":"EricBryann"},"content":"     * @return The information of the filtered patients","lastModifiedDate":"2021-10-19"},{"lineNumber":94,"author":{"gitId":"EricBryann"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":95,"author":{"gitId":"EricBryann"},"content":"    public String getFindPatientsMessage(List\u003cString\u003e patients) {","lastModifiedDate":"2021-10-19"},{"lineNumber":96,"author":{"gitId":"EricBryann"},"content":"        if (patients.size() \u003d\u003d 0) {","lastModifiedDate":"2021-10-19"},{"lineNumber":97,"author":{"gitId":"EricBryann"},"content":"            return \"There is no patient with such attributes.\" + ENDLINE;","lastModifiedDate":"2021-10-19"},{"lineNumber":98,"author":{"gitId":"EricBryann"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":99,"author":{"gitId":"EricBryann"},"content":"        String output \u003d getPatientTableHeader();","lastModifiedDate":"2021-10-19"},{"lineNumber":100,"author":{"gitId":"EricBryann"},"content":"        for (String patient : patients) {","lastModifiedDate":"2021-10-19"},{"lineNumber":101,"author":{"gitId":"EricBryann"},"content":"            output +\u003d patient;","lastModifiedDate":"2021-10-19"},{"lineNumber":102,"author":{"gitId":"EricBryann"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":103,"author":{"gitId":"EricBryann"},"content":"        output +\u003d ENDLINE;","lastModifiedDate":"2021-10-19"},{"lineNumber":104,"author":{"gitId":"EricBryann"},"content":"        output +\u003d getPatientTableRowSeparator();","lastModifiedDate":"2021-10-19"},{"lineNumber":105,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":106,"author":{"gitId":"EricBryann"},"content":"        return output;","lastModifiedDate":"2021-10-19"},{"lineNumber":107,"author":{"gitId":"EricBryann"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":108,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":109,"author":{"gitId":"EricBryann"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":110,"author":{"gitId":"EricBryann"},"content":"     * Prints an exit message when MedBot is exiting.","lastModifiedDate":"2021-10-06"},{"lineNumber":111,"author":{"gitId":"Kureans"},"content":"     *","lastModifiedDate":"2021-10-07"},{"lineNumber":112,"author":{"gitId":"EricBryann"},"content":"     * @return the exit Message","lastModifiedDate":"2021-10-06"},{"lineNumber":113,"author":{"gitId":"EricBryann"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":114,"author":{"gitId":"EricBryann"},"content":"    public String getExitMessage() {","lastModifiedDate":"2021-10-06"},{"lineNumber":115,"author":{"gitId":"justinfidelis"},"content":"        return \"Thank you for using MedBot!\" + ENDLINE + \"See you again!\";","lastModifiedDate":"2021-10-18"},{"lineNumber":116,"author":{"gitId":"EricBryann"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":117,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":118,"author":{"gitId":"EricBryann"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":119,"author":{"gitId":"EricBryann"},"content":"     * Prints a message when viewing the profile of a patient.","lastModifiedDate":"2021-10-06"},{"lineNumber":120,"author":{"gitId":"EricBryann"},"content":"     *","lastModifiedDate":"2021-10-06"},{"lineNumber":121,"author":{"gitId":"EricBryann"},"content":"     * @param patientInfo the Info of the patient to be printed.","lastModifiedDate":"2021-10-06"},{"lineNumber":122,"author":{"gitId":"EricBryann"},"content":"     * @return the Patient information","lastModifiedDate":"2021-10-06"},{"lineNumber":123,"author":{"gitId":"EricBryann"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":124,"author":{"gitId":"Kureans"},"content":"    public String getPatientInfo(String patientInfo) {","lastModifiedDate":"2021-10-12"},{"lineNumber":125,"author":{"gitId":"EricBryann"},"content":"        return \"Here\u0027s the requested patient:\" + ENDLINE + ENDLINE","lastModifiedDate":"2021-10-19"},{"lineNumber":126,"author":{"gitId":"EricBryann"},"content":"                + patientInfo + ENDLINE;","lastModifiedDate":"2021-10-19"},{"lineNumber":127,"author":{"gitId":"EricBryann"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":128,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":129,"author":{"gitId":"EricBryann"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":130,"author":{"gitId":"EricBryann"},"content":"     * Prints all patients in a list.","lastModifiedDate":"2021-10-06"},{"lineNumber":131,"author":{"gitId":"EricBryann"},"content":"     *","lastModifiedDate":"2021-10-06"},{"lineNumber":132,"author":{"gitId":"EricBryann"},"content":"     * @param patientList the list containing patients to be printed.","lastModifiedDate":"2021-10-06"},{"lineNumber":133,"author":{"gitId":"EricBryann"},"content":"     * @return all Patients\u0027 information.","lastModifiedDate":"2021-10-06"},{"lineNumber":134,"author":{"gitId":"EricBryann"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":135,"author":{"gitId":"jushg"},"content":"    public String getAllPatientsString(PersonList patientList) {","lastModifiedDate":"2021-10-18"},{"lineNumber":136,"author":{"gitId":"EricBryann"},"content":"        String output \u003d getPatientTableHeader();","lastModifiedDate":"2021-10-19"},{"lineNumber":137,"author":{"gitId":"jushg"},"content":"        output +\u003d patientList.listPersons();","lastModifiedDate":"2021-10-18"},{"lineNumber":138,"author":{"gitId":"EricBryann"},"content":"        output +\u003d getPatientTableRowSeparator();","lastModifiedDate":"2021-10-19"},{"lineNumber":139,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":140,"author":{"gitId":"EricBryann"},"content":"        return output;","lastModifiedDate":"2021-10-06"},{"lineNumber":141,"author":{"gitId":"EricBryann"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":142,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":143,"author":{"gitId":"EricBryann"},"content":"    private String getPatientTableHeader() {","lastModifiedDate":"2021-10-19"},{"lineNumber":144,"author":{"gitId":"EricBryann"},"content":"        String output \u003d \"Here is a list of all patients:\" + ENDLINE;","lastModifiedDate":"2021-10-19"},{"lineNumber":145,"author":{"gitId":"EricBryann"},"content":"        output +\u003d \"For full details of each patient, please use the command \\\"view PATIENT_ID\\\"\" + ENDLINE;","lastModifiedDate":"2021-10-19"},{"lineNumber":146,"author":{"gitId":"EricBryann"},"content":"        output +\u003d getPatientTableRowSeparator();","lastModifiedDate":"2021-10-19"},{"lineNumber":147,"author":{"gitId":"EricBryann"},"content":"        output +\u003d \" |  ID  | IC Number |         Name         |\"","lastModifiedDate":"2021-10-19"},{"lineNumber":148,"author":{"gitId":"EricBryann"},"content":"                + \" Phone No. |        Email         |       Address        | \" + ENDLINE;","lastModifiedDate":"2021-10-19"},{"lineNumber":149,"author":{"gitId":"EricBryann"},"content":"        output +\u003d getPatientTableRowSeparator();","lastModifiedDate":"2021-10-19"},{"lineNumber":150,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":151,"author":{"gitId":"EricBryann"},"content":"        return output;","lastModifiedDate":"2021-10-06"},{"lineNumber":152,"author":{"gitId":"EricBryann"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":153,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":154,"author":{"gitId":"EricBryann"},"content":"    private String getPatientTableRowSeparator() {","lastModifiedDate":"2021-10-19"},{"lineNumber":155,"author":{"gitId":"EricBryann"},"content":"        return \" ------------------------------------------------\"","lastModifiedDate":"2021-10-19"},{"lineNumber":156,"author":{"gitId":"EricBryann"},"content":"                + \"----------------------------------------------------- \" + ENDLINE;","lastModifiedDate":"2021-10-19"},{"lineNumber":157,"author":{"gitId":"EricBryann"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":158,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":159,"author":{"gitId":"Kureans"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":160,"author":{"gitId":"Kureans"},"content":"     * Prints a list of all available commands.","lastModifiedDate":"2021-10-07"},{"lineNumber":161,"author":{"gitId":"EricBryann"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":162,"author":{"gitId":"EricBryann"},"content":"     * @return all supported commands.","lastModifiedDate":"2021-10-13"},{"lineNumber":163,"author":{"gitId":"Kureans"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":164,"author":{"gitId":"Kureans"},"content":"    public String getCommandList() {","lastModifiedDate":"2021-10-07"},{"lineNumber":165,"author":{"gitId":"justinfidelis"},"content":"        return \"Here are the list of commands:\" + ENDLINE + ENDLINE","lastModifiedDate":"2021-10-18"},{"lineNumber":166,"author":{"gitId":"justinfidelis"},"content":"                + \"help\" + ENDLINE + \"add\" + ENDLINE + \"list\" + ENDLINE + \"view\" + ENDLINE + \"edit\" + ENDLINE","lastModifiedDate":"2021-10-18"},{"lineNumber":167,"author":{"gitId":"EricBryann"},"content":"                + \"find\" + ENDLINE + \"delete\" + ENDLINE + \"exit\" + ENDLINE + ENDLINE","lastModifiedDate":"2021-10-19"},{"lineNumber":168,"author":{"gitId":"justinfidelis"},"content":"                + \"To obtain more information on each command and their respective required inputs, type:\" + ENDLINE","lastModifiedDate":"2021-10-18"},{"lineNumber":169,"author":{"gitId":"justinfidelis"},"content":"                + \"help [COMMAND]\" + ENDLINE + ENDLINE","lastModifiedDate":"2021-10-18"},{"lineNumber":170,"author":{"gitId":"EricBryann"},"content":"                + \"*Note that all commands will remove any \u0027|\u0027 inputs for format parsing purposes\" + ENDLINE;","lastModifiedDate":"2021-10-19"},{"lineNumber":171,"author":{"gitId":"Kureans"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":172,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":173,"author":{"gitId":"EricBryann"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":174,"author":{"gitId":"EricBryann"},"content":"     * Prints information about list command.","lastModifiedDate":"2021-10-13"},{"lineNumber":175,"author":{"gitId":"EricBryann"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":176,"author":{"gitId":"EricBryann"},"content":"     * @return the information on list command.","lastModifiedDate":"2021-10-13"},{"lineNumber":177,"author":{"gitId":"EricBryann"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":178,"author":{"gitId":"Kureans"},"content":"    public String getListHelpMessage() {","lastModifiedDate":"2021-10-07"},{"lineNumber":179,"author":{"gitId":"justinfidelis"},"content":"        return \"View information of all current patients.\" + ENDLINE","lastModifiedDate":"2021-10-18"},{"lineNumber":180,"author":{"gitId":"justinfidelis"},"content":"                + \"Format: list\" + ENDLINE","lastModifiedDate":"2021-10-18"},{"lineNumber":181,"author":{"gitId":"justinfidelis"},"content":"                + \"Expected Output for 2 patients: \" + ENDLINE","lastModifiedDate":"2021-10-18"},{"lineNumber":182,"author":{"gitId":"Kureans"},"content":"                + \"Patient ID: [PATIENT_ID_1] IC: [PATIENT_IC]\"","lastModifiedDate":"2021-10-12"},{"lineNumber":183,"author":{"gitId":"justinfidelis"},"content":"                + \"Name: [PATIENT_NAME] H/P: [PHONE NUMBER] Email: [EMAIL]  Address: [ADDRESS]\" + ENDLINE","lastModifiedDate":"2021-10-18"},{"lineNumber":184,"author":{"gitId":"Kureans"},"content":"                + \"Patient ID: [PATIENT_ID_2] IC: [PATIENT_IC]\"","lastModifiedDate":"2021-10-12"},{"lineNumber":185,"author":{"gitId":"justinfidelis"},"content":"                + \"Name: [PATIENT_NAME] H/P: [PHONE NUMBER] Email: [EMAIL]  Address: [ADDRESS]\" + ENDLINE;","lastModifiedDate":"2021-10-18"},{"lineNumber":186,"author":{"gitId":"Kureans"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":187,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":188,"author":{"gitId":"EricBryann"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":189,"author":{"gitId":"EricBryann"},"content":"     * Prints information about help command.","lastModifiedDate":"2021-10-13"},{"lineNumber":190,"author":{"gitId":"EricBryann"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":191,"author":{"gitId":"EricBryann"},"content":"     * @return the information on help command.","lastModifiedDate":"2021-10-13"},{"lineNumber":192,"author":{"gitId":"EricBryann"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":193,"author":{"gitId":"Kureans"},"content":"    public String getViewHelpMessage() {","lastModifiedDate":"2021-10-07"},{"lineNumber":194,"author":{"gitId":"justinfidelis"},"content":"        return \"View a patient’s personal information.\" + ENDLINE","lastModifiedDate":"2021-10-18"},{"lineNumber":195,"author":{"gitId":"justinfidelis"},"content":"                + \"Format: view PATIENT_ID\" + ENDLINE","lastModifiedDate":"2021-10-18"},{"lineNumber":196,"author":{"gitId":"justinfidelis"},"content":"                + \"Expected Output:\" + ENDLINE","lastModifiedDate":"2021-10-18"},{"lineNumber":197,"author":{"gitId":"justinfidelis"},"content":"                + \"id: PATIENT_ID \" + \"name: NAME \" + \"phone number: PHONE_NUMBER \"","lastModifiedDate":"2021-10-18"},{"lineNumber":198,"author":{"gitId":"justinfidelis"},"content":"                + \"email: EMAIL \" + \"address: ADDRESS\" + ENDLINE;","lastModifiedDate":"2021-10-18"},{"lineNumber":199,"author":{"gitId":"Kureans"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":200,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":201,"author":{"gitId":"EricBryann"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":202,"author":{"gitId":"EricBryann"},"content":"     * Prints information about add command.","lastModifiedDate":"2021-10-13"},{"lineNumber":203,"author":{"gitId":"EricBryann"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":204,"author":{"gitId":"EricBryann"},"content":"     * @return the information on add command.","lastModifiedDate":"2021-10-13"},{"lineNumber":205,"author":{"gitId":"EricBryann"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":206,"author":{"gitId":"Kureans"},"content":"    public String getAddHelpMessage() {","lastModifiedDate":"2021-10-07"},{"lineNumber":207,"author":{"gitId":"justinfidelis"},"content":"        return \"Add a patient to the patient’s list.\" + ENDLINE","lastModifiedDate":"2021-10-18"},{"lineNumber":208,"author":{"gitId":"justinfidelis"},"content":"                + \"Format:\" + ENDLINE","lastModifiedDate":"2021-10-18"},{"lineNumber":209,"author":{"gitId":"justinfidelis"},"content":"                + \"add i/PATIENT_IC [n/NAME] [p/PHONE_NUMBER] [e/EMAIL] [a/ADDRESS]\" + ENDLINE","lastModifiedDate":"2021-10-18"},{"lineNumber":210,"author":{"gitId":"justinfidelis"},"content":"                + \"Expected output:\" + ENDLINE","lastModifiedDate":"2021-10-18"},{"lineNumber":211,"author":{"gitId":"EricBryann"},"content":"                + \"Added patient with patient ID: PATIENT_ID\" + ENDLINE;","lastModifiedDate":"2021-10-19"},{"lineNumber":212,"author":{"gitId":"Kureans"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":213,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":214,"author":{"gitId":"EricBryann"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":215,"author":{"gitId":"EricBryann"},"content":"     * Prints information about edit command.","lastModifiedDate":"2021-10-13"},{"lineNumber":216,"author":{"gitId":"EricBryann"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":217,"author":{"gitId":"EricBryann"},"content":"     * @return the information on edit command.","lastModifiedDate":"2021-10-13"},{"lineNumber":218,"author":{"gitId":"EricBryann"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":219,"author":{"gitId":"Kureans"},"content":"    public String getEditHelpMessage() {","lastModifiedDate":"2021-10-07"},{"lineNumber":220,"author":{"gitId":"justinfidelis"},"content":"        return \"Edit the personal and medical information of a patient in the list.\" + ENDLINE","lastModifiedDate":"2021-10-18"},{"lineNumber":221,"author":{"gitId":"justinfidelis"},"content":"                + \"Format:\" + ENDLINE","lastModifiedDate":"2021-10-18"},{"lineNumber":222,"author":{"gitId":"justinfidelis"},"content":"                + \"edit PATIENT ID [i/PATIENT_IC] [n/NAME] [p/PHONE_NUMBER] [e/EMAIL] [a/ADDRESS]\" + ENDLINE","lastModifiedDate":"2021-10-18"},{"lineNumber":223,"author":{"gitId":"justinfidelis"},"content":"                + \"Expected output: \" + ENDLINE","lastModifiedDate":"2021-10-18"},{"lineNumber":224,"author":{"gitId":"justinfidelis"},"content":"                + \"The information of patient with ID PATIENT_ID has been edited to:\" + ENDLINE","lastModifiedDate":"2021-10-18"},{"lineNumber":225,"author":{"gitId":"Kureans"},"content":"                + \"Patient ID: [PATIENT_ID] IC: [PATIENT_IC] Name: [NAME] H/P: [PHONE_NUMBER] \"","lastModifiedDate":"2021-10-12"},{"lineNumber":226,"author":{"gitId":"justinfidelis"},"content":"                + \"Email: [EMAIL] Address: [ADDRESS] \" + ENDLINE;","lastModifiedDate":"2021-10-18"},{"lineNumber":227,"author":{"gitId":"Kureans"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":228,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":229,"author":{"gitId":"EricBryann"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":230,"author":{"gitId":"EricBryann"},"content":"     * Prints information about delete command.","lastModifiedDate":"2021-10-13"},{"lineNumber":231,"author":{"gitId":"EricBryann"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":232,"author":{"gitId":"EricBryann"},"content":"     * @return the information on delete command.","lastModifiedDate":"2021-10-13"},{"lineNumber":233,"author":{"gitId":"EricBryann"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":234,"author":{"gitId":"Kureans"},"content":"    public String getDeleteHelpMessage() {","lastModifiedDate":"2021-10-07"},{"lineNumber":235,"author":{"gitId":"justinfidelis"},"content":"        return \"Delete a patient from the list.\" + ENDLINE","lastModifiedDate":"2021-10-18"},{"lineNumber":236,"author":{"gitId":"justinfidelis"},"content":"                + \"Format:\" + ENDLINE","lastModifiedDate":"2021-10-18"},{"lineNumber":237,"author":{"gitId":"justinfidelis"},"content":"                + \"delete PATIENT_ID\" + ENDLINE","lastModifiedDate":"2021-10-18"},{"lineNumber":238,"author":{"gitId":"justinfidelis"},"content":"                + \"Expected Output:\" + ENDLINE","lastModifiedDate":"2021-10-18"},{"lineNumber":239,"author":{"gitId":"justinfidelis"},"content":"                + \"Patient with id PATIENT_ID deleted from system.\" + ENDLINE;","lastModifiedDate":"2021-10-18"},{"lineNumber":240,"author":{"gitId":"Kureans"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":241,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":242,"author":{"gitId":"EricBryann"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":243,"author":{"gitId":"EricBryann"},"content":"     * Prints information about find command.","lastModifiedDate":"2021-10-19"},{"lineNumber":244,"author":{"gitId":"EricBryann"},"content":"     *","lastModifiedDate":"2021-10-19"},{"lineNumber":245,"author":{"gitId":"EricBryann"},"content":"     * @return the information on find command.","lastModifiedDate":"2021-10-19"},{"lineNumber":246,"author":{"gitId":"EricBryann"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":247,"author":{"gitId":"EricBryann"},"content":"    public String getFindHelpMessage() {","lastModifiedDate":"2021-10-19"},{"lineNumber":248,"author":{"gitId":"EricBryann"},"content":"        return \"Find patients from the list based on given attributes.\" + ENDLINE","lastModifiedDate":"2021-10-19"},{"lineNumber":249,"author":{"gitId":"EricBryann"},"content":"                + \"Format:\" + ENDLINE","lastModifiedDate":"2021-10-19"},{"lineNumber":250,"author":{"gitId":"EricBryann"},"content":"                + \"find [i/PATIENT_IC] [n/NAME] [p/PHONE_NUMBER] [e/EMAIL] [a/ADDRESS]\" + ENDLINE","lastModifiedDate":"2021-10-19"},{"lineNumber":251,"author":{"gitId":"EricBryann"},"content":"                + \"    * The attributes do not have to be in full.\" + ENDLINE","lastModifiedDate":"2021-10-19"},{"lineNumber":252,"author":{"gitId":"EricBryann"},"content":"                + \"    * At least one attribute must be present.\" + ENDLINE","lastModifiedDate":"2021-10-19"},{"lineNumber":253,"author":{"gitId":"EricBryann"},"content":"                + \"Expected Output:\" + ENDLINE","lastModifiedDate":"2021-10-19"},{"lineNumber":254,"author":{"gitId":"EricBryann"},"content":"                + \"Patient ID: PATIENT_ID IC: PATIENT_IC Name: NAME \"","lastModifiedDate":"2021-10-19"},{"lineNumber":255,"author":{"gitId":"EricBryann"},"content":"                + \"H/P: PHONE_NUMBER Email: EMAIL Address: ADDRESS\" + ENDLINE;","lastModifiedDate":"2021-10-19"},{"lineNumber":256,"author":{"gitId":"EricBryann"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":257,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":258,"author":{"gitId":"EricBryann"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":259,"author":{"gitId":"EricBryann"},"content":"     * Prints information about exit command.","lastModifiedDate":"2021-10-13"},{"lineNumber":260,"author":{"gitId":"EricBryann"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":261,"author":{"gitId":"EricBryann"},"content":"     * @return the information on exot command.","lastModifiedDate":"2021-10-13"},{"lineNumber":262,"author":{"gitId":"EricBryann"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":263,"author":{"gitId":"Kureans"},"content":"    public String getExitHelpMessage() {","lastModifiedDate":"2021-10-07"},{"lineNumber":264,"author":{"gitId":"justinfidelis"},"content":"        return \"Exits the program.\" + ENDLINE + \"Format: exit\" + ENDLINE;","lastModifiedDate":"2021-10-18"},{"lineNumber":265,"author":{"gitId":"Kureans"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":266,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":267,"author":{"gitId":"EricBryann"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":268,"author":{"gitId":"EricBryann"},"content":"     * Prints unrecognised command message.","lastModifiedDate":"2021-10-13"},{"lineNumber":269,"author":{"gitId":"EricBryann"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":270,"author":{"gitId":"EricBryann"},"content":"     * @return the error message on unrecognised command.","lastModifiedDate":"2021-10-13"},{"lineNumber":271,"author":{"gitId":"EricBryann"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":272,"author":{"gitId":"Kureans"},"content":"    public String getUnrecognisedCommandHelpMessage() {","lastModifiedDate":"2021-10-07"},{"lineNumber":273,"author":{"gitId":"justinfidelis"},"content":"        return \"Sorry, that\u0027s not a recognised command. To view a list of commands, type:\" + ENDLINE + \"help\" + ENDLINE;","lastModifiedDate":"2021-10-18"},{"lineNumber":274,"author":{"gitId":"Kureans"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":275,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":276,"author":{"gitId":"Kureans"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":277,"author":{"gitId":"Kureans"},"content":"     * Utility function that performs a pseudo-clear of the console. Use this for testing from within","lastModifiedDate":"2021-10-16"},{"lineNumber":278,"author":{"gitId":"Kureans"},"content":"     * the IDE.","lastModifiedDate":"2021-10-16"},{"lineNumber":279,"author":{"gitId":"Kureans"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":280,"author":{"gitId":"Kureans"},"content":"    public static void clearConsoleFromIde() {","lastModifiedDate":"2021-10-16"},{"lineNumber":281,"author":{"gitId":"justinfidelis"},"content":"        System.out.print(ENDLINE + ENDLINE + ENDLINE + ENDLINE + ENDLINE);","lastModifiedDate":"2021-10-18"},{"lineNumber":282,"author":{"gitId":"Kureans"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":283,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":284,"author":{"gitId":"Kureans"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":285,"author":{"gitId":"Kureans"},"content":"     * Utility function that clears the console. Does not work within the IDE console.","lastModifiedDate":"2021-10-16"},{"lineNumber":286,"author":{"gitId":"Kureans"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":287,"author":{"gitId":"Kureans"},"content":"    public static void clearConsole() {","lastModifiedDate":"2021-10-16"},{"lineNumber":288,"author":{"gitId":"Kureans"},"content":"        try {","lastModifiedDate":"2021-10-16"},{"lineNumber":289,"author":{"gitId":"Kureans"},"content":"            if (System.getProperty(\"os.name\").contains(\"Windows\")) {","lastModifiedDate":"2021-10-16"},{"lineNumber":290,"author":{"gitId":"Kureans"},"content":"                new ProcessBuilder(\"cmd\", \"/c\", \"cls\").inheritIO().start().waitFor();","lastModifiedDate":"2021-10-16"},{"lineNumber":291,"author":{"gitId":"Kureans"},"content":"            } else {","lastModifiedDate":"2021-10-16"},{"lineNumber":292,"author":{"gitId":"Kureans"},"content":"                Runtime.getRuntime().exec(\"clear\");","lastModifiedDate":"2021-10-16"},{"lineNumber":293,"author":{"gitId":"Kureans"},"content":"            }","lastModifiedDate":"2021-10-16"},{"lineNumber":294,"author":{"gitId":"Kureans"},"content":"        } catch (IOException | InterruptedException e) {","lastModifiedDate":"2021-10-16"},{"lineNumber":295,"author":{"gitId":"Kureans"},"content":"            System.out.println(\"Error clearing the console\");","lastModifiedDate":"2021-10-16"},{"lineNumber":296,"author":{"gitId":"Kureans"},"content":"        }","lastModifiedDate":"2021-10-16"},{"lineNumber":297,"author":{"gitId":"Kureans"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":298,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":299,"author":{"gitId":"Kureans"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":300,"author":{"gitId":"Kureans"},"content":"     * Prints switched view message.","lastModifiedDate":"2021-10-16"},{"lineNumber":301,"author":{"gitId":"Kureans"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":302,"author":{"gitId":"justinfidelis"},"content":"    public void printSwitchedViewMessage(ViewType viewType) {","lastModifiedDate":"2021-10-20"},{"lineNumber":303,"author":{"gitId":"justinfidelis"},"content":"        switch (viewType) {","lastModifiedDate":"2021-10-20"},{"lineNumber":304,"author":{"gitId":"justinfidelis"},"content":"        case PATIENT_INFO:","lastModifiedDate":"2021-10-20"},{"lineNumber":305,"author":{"gitId":"Kureans"},"content":"            System.out.println(\"  ___  _ _____ ___ ___ _  _ _____ \\n\"","lastModifiedDate":"2021-10-16"},{"lineNumber":306,"author":{"gitId":"Kureans"},"content":"                    + \" | _ \\\\/_\\\\_   _|_ _| __| \\\\| |_   _|\\n\"","lastModifiedDate":"2021-10-16"},{"lineNumber":307,"author":{"gitId":"Kureans"},"content":"                    + \" |  _/ _ \\\\| |  | || _|| .` | | |  \\n\"","lastModifiedDate":"2021-10-16"},{"lineNumber":308,"author":{"gitId":"Kureans"},"content":"                    + \" |_|/_/ \\\\_\\\\_|_|___|___|_|\\\\_| |_|  \\n\"","lastModifiedDate":"2021-10-16"},{"lineNumber":309,"author":{"gitId":"Kureans"},"content":"                    + \" |_ _| \\\\| | __/ _ \\\\               \\n\"","lastModifiedDate":"2021-10-16"},{"lineNumber":310,"author":{"gitId":"Kureans"},"content":"                    + \"  | || .` | _| (_) |              \\n\"","lastModifiedDate":"2021-10-16"},{"lineNumber":311,"author":{"gitId":"Kureans"},"content":"                    + \" |___|_|\\\\_|_|_\\\\___/    __         \\n\"","lastModifiedDate":"2021-10-16"},{"lineNumber":312,"author":{"gitId":"Kureans"},"content":"                    + \" \\\\ \\\\ / /_ _| __\\\\ \\\\    / /         \\n\"","lastModifiedDate":"2021-10-16"},{"lineNumber":313,"author":{"gitId":"Kureans"},"content":"                    + \"  \\\\ V / | || _| \\\\ \\\\/\\\\/ /          \\n\"","lastModifiedDate":"2021-10-16"},{"lineNumber":314,"author":{"gitId":"Kureans"},"content":"                    + \"   \\\\_/ |___|___| \\\\_/\\\\_/           \\n\"","lastModifiedDate":"2021-10-16"},{"lineNumber":315,"author":{"gitId":"Kureans"},"content":"                    + \"                                  \");","lastModifiedDate":"2021-10-16"},{"lineNumber":316,"author":{"gitId":"justinfidelis"},"content":"            break;","lastModifiedDate":"2021-10-20"},{"lineNumber":317,"author":{"gitId":"justinfidelis"},"content":"        case SCHEDULER:","lastModifiedDate":"2021-10-20"},{"lineNumber":318,"author":{"gitId":"Kureans"},"content":"            System.out.println(\"  ___  ___ _  _ ___ ___  _   _ _    ___ ___ \\n\"","lastModifiedDate":"2021-10-16"},{"lineNumber":319,"author":{"gitId":"Kureans"},"content":"                    + \" / __|/ __| || | __|   \\\\| | | | |  | __| _ \\\\\\n\"","lastModifiedDate":"2021-10-16"},{"lineNumber":320,"author":{"gitId":"Kureans"},"content":"                    + \" \\\\__ \\\\ (__| __ | _|| |) | |_| | |__| _||   /\\n\"","lastModifiedDate":"2021-10-16"},{"lineNumber":321,"author":{"gitId":"Kureans"},"content":"                    + \" |___/\\\\___|_||_|___|___/_\\\\___/|____|___|_|_\\\\\\n\"","lastModifiedDate":"2021-10-16"},{"lineNumber":322,"author":{"gitId":"Kureans"},"content":"                    + \" \\\\ \\\\ / /_ _| __\\\\ \\\\    / /                   \\n\"","lastModifiedDate":"2021-10-16"},{"lineNumber":323,"author":{"gitId":"Kureans"},"content":"                    + \"  \\\\ V / | || _| \\\\ \\\\/\\\\/ /                    \\n\"","lastModifiedDate":"2021-10-16"},{"lineNumber":324,"author":{"gitId":"Kureans"},"content":"                    + \"   \\\\_/ |___|___| \\\\_/\\\\_/                     \\n\"","lastModifiedDate":"2021-10-16"},{"lineNumber":325,"author":{"gitId":"Kureans"},"content":"                    + \"                                            \");","lastModifiedDate":"2021-10-16"},{"lineNumber":326,"author":{"gitId":"justinfidelis"},"content":"            break;","lastModifiedDate":"2021-10-20"},{"lineNumber":327,"author":{"gitId":"justinfidelis"},"content":"        case MEDICAL_STAFF_INFO:","lastModifiedDate":"2021-10-20"},{"lineNumber":328,"author":{"gitId":"justinfidelis"},"content":"            break;","lastModifiedDate":"2021-10-20"},{"lineNumber":329,"author":{"gitId":"justinfidelis"},"content":"        default:","lastModifiedDate":"2021-10-20"},{"lineNumber":330,"author":{"gitId":"justinfidelis"},"content":"            break;","lastModifiedDate":"2021-10-20"},{"lineNumber":331,"author":{"gitId":"Kureans"},"content":"        }","lastModifiedDate":"2021-10-16"},{"lineNumber":332,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":333,"author":{"gitId":"Kureans"},"content":"        System.out.println(\"View has been switched to \" + viewType);","lastModifiedDate":"2021-10-16"},{"lineNumber":334,"author":{"gitId":"Kureans"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":335,"author":{"gitId":"justinfidelis"},"content":"}","lastModifiedDate":"2021-09-30"}],"authorContributionMap":{"justinfidelis":66,"CrimsonTitan79":9,"jushg":3,"Kureans":83,"EricBryann":174}},{"path":"src/main/java/medbot/command/AddPersonCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jushg"},"content":"package medbot.command;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"jushg"},"content":"import medbot.person.Person;","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"justinfidelis"},"content":"public abstract class AddPersonCommand extends Command {","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"jushg"},"content":"    protected Person person;","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"justinfidelis"},"content":"    public AddPersonCommand(Person person) {","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"jushg"},"content":"        this.person \u003d person;","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"jushg"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"jushg"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"justinfidelis":2,"jushg":9}},{"path":"src/main/java/medbot/command/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"justinfidelis"},"content":"package medbot.command;","lastModifiedDate":"2021-09-30"},{"lineNumber":2,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":3,"author":{"gitId":"justinfidelis"},"content":"import medbot.Scheduler;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"justinfidelis"},"content":"import medbot.exceptions.MedBotException;","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"justinfidelis"},"content":"import medbot.Ui;","lastModifiedDate":"2021-09-30"},{"lineNumber":6,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":7,"author":{"gitId":"justinfidelis"},"content":"public abstract class Command {","lastModifiedDate":"2021-09-30"},{"lineNumber":8,"author":{"gitId":"justinfidelis"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":9,"author":{"gitId":"EricBryann"},"content":"     * Returns if the command type is the exitCommand.","lastModifiedDate":"2021-10-04"},{"lineNumber":10,"author":{"gitId":"justinfidelis"},"content":"     *","lastModifiedDate":"2021-09-30"},{"lineNumber":11,"author":{"gitId":"justinfidelis"},"content":"     * @return boolean value of whether the command is the exitCommand","lastModifiedDate":"2021-09-30"},{"lineNumber":12,"author":{"gitId":"justinfidelis"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":13,"author":{"gitId":"justinfidelis"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-09-30"},{"lineNumber":14,"author":{"gitId":"justinfidelis"},"content":"        return false;","lastModifiedDate":"2021-09-30"},{"lineNumber":15,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":16,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":17,"author":{"gitId":"justinfidelis"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":18,"author":{"gitId":"EricBryann"},"content":"     * Abstract method that executes the command.","lastModifiedDate":"2021-10-04"},{"lineNumber":19,"author":{"gitId":"justinfidelis"},"content":"     *","lastModifiedDate":"2021-09-30"},{"lineNumber":20,"author":{"gitId":"justinfidelis"},"content":"     * @param scheduler the scheduler that will be read or modified","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"justinfidelis"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":22,"author":{"gitId":"justinfidelis"},"content":"    public abstract void execute(Scheduler scheduler, Ui ui) throws MedBotException;","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"justinfidelis"},"content":"}","lastModifiedDate":"2021-09-30"}],"authorContributionMap":{"justinfidelis":21,"EricBryann":2}},{"path":"src/main/java/medbot/command/CommandType.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"justinfidelis"},"content":"package medbot.command;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"justinfidelis"},"content":"public enum CommandType {","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"EricBryann"},"content":"    HELP, EXIT, SWITCH, ADD_PATIENT, DELETE_PATIENT, EDIT_PATIENT, VIEW_PATIENT, LIST_PATIENT, FIND_PATIENT","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"justinfidelis"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"justinfidelis":4,"EricBryann":1}},{"path":"src/main/java/medbot/command/DeletePersonCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jushg"},"content":"package medbot.command;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"justinfidelis"},"content":"public abstract class DeletePersonCommand extends Command {","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"jushg"},"content":"    protected int personId;","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"justinfidelis"},"content":"    public DeletePersonCommand(int personId) {","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"jushg"},"content":"        this.personId \u003d personId;","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"jushg"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"jushg"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"justinfidelis":2,"jushg":8}},{"path":"src/main/java/medbot/command/EditPersonCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jushg"},"content":"package medbot.command;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"jushg"},"content":"import medbot.person.Person;","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"justinfidelis"},"content":"public abstract class EditPersonCommand extends Command {","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"jushg"},"content":"    protected int personId;","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"jushg"},"content":"    protected Person person;","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"justinfidelis"},"content":"    public EditPersonCommand(int personId, Person person) {","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"jushg"},"content":"        this.personId \u003d personId;","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"jushg"},"content":"        this.person \u003d person;","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"jushg"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"jushg"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"justinfidelis":2,"jushg":11}},{"path":"src/main/java/medbot/command/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"justinfidelis"},"content":"package medbot.command;","lastModifiedDate":"2021-09-30"},{"lineNumber":2,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":3,"author":{"gitId":"justinfidelis"},"content":"import medbot.Scheduler;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"justinfidelis"},"content":"import medbot.Ui;","lastModifiedDate":"2021-09-30"},{"lineNumber":5,"author":{"gitId":"jushg"},"content":"import medbot.list.PersonList;","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":7,"author":{"gitId":"justinfidelis"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2021-09-30"},{"lineNumber":8,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":9,"author":{"gitId":"justinfidelis"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-09-30"},{"lineNumber":10,"author":{"gitId":"justinfidelis"},"content":"        return true;","lastModifiedDate":"2021-09-30"},{"lineNumber":11,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":12,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":13,"author":{"gitId":"EricBryann"},"content":"    @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"justinfidelis"},"content":"    public void execute(Scheduler scheduler, Ui ui) {","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"EricBryann"},"content":"        String exitMessage \u003d ui.getExitMessage();","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"EricBryann"},"content":"        ui.printOutput(exitMessage);","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":18,"author":{"gitId":"justinfidelis"},"content":"}","lastModifiedDate":"2021-09-30"}],"authorContributionMap":{"justinfidelis":14,"jushg":1,"EricBryann":3}},{"path":"src/main/java/medbot/command/FindPersonCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"EricBryann"},"content":"package medbot.command;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"justinfidelis"},"content":"public abstract class FindPersonCommand extends Command {","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"EricBryann"},"content":"    protected String[] parameters;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"justinfidelis"},"content":"    public FindPersonCommand(String[] parameters) {","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"EricBryann"},"content":"        this.parameters \u003d parameters;","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"EricBryann"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"EricBryann"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"justinfidelis":2,"EricBryann":8}},{"path":"src/main/java/medbot/command/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Kureans"},"content":"package medbot.command;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"justinfidelis"},"content":"import medbot.Scheduler;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"Kureans"},"content":"import medbot.Ui;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"jushg"},"content":"import medbot.list.PersonList;","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"Kureans"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"justinfidelis"},"content":"    private CommandType commandType \u003d null;","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"justinfidelis"},"content":"    public HelpCommand() {","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"justinfidelis"},"content":"    public HelpCommand(CommandType commandType) {","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"justinfidelis"},"content":"        this.commandType \u003d commandType;","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"Kureans"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"Kureans"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"justinfidelis"},"content":"    public void execute(Scheduler scheduler, Ui ui) {","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"Kureans"},"content":"        String output;","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"justinfidelis"},"content":"        if (commandType \u003d\u003d null) {","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"Kureans"},"content":"            output \u003d ui.getCommandList();","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"justinfidelis"},"content":"            ui.printOutput(output);","lastModifiedDate":"2021-10-18"},{"lineNumber":24,"author":{"gitId":"justinfidelis"},"content":"            return;","lastModifiedDate":"2021-10-18"},{"lineNumber":25,"author":{"gitId":"justinfidelis"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":26,"author":{"gitId":"justinfidelis"},"content":"        switch (commandType) {","lastModifiedDate":"2021-10-18"},{"lineNumber":27,"author":{"gitId":"justinfidelis"},"content":"        case ADD_PATIENT:","lastModifiedDate":"2021-10-18"},{"lineNumber":28,"author":{"gitId":"Kureans"},"content":"            output \u003d ui.getAddHelpMessage();","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"justinfidelis"},"content":"            break;","lastModifiedDate":"2021-10-18"},{"lineNumber":30,"author":{"gitId":"justinfidelis"},"content":"        case DELETE_PATIENT:","lastModifiedDate":"2021-10-18"},{"lineNumber":31,"author":{"gitId":"Kureans"},"content":"            output \u003d ui.getDeleteHelpMessage();","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"justinfidelis"},"content":"            break;","lastModifiedDate":"2021-10-18"},{"lineNumber":33,"author":{"gitId":"justinfidelis"},"content":"        case EDIT_PATIENT:","lastModifiedDate":"2021-10-18"},{"lineNumber":34,"author":{"gitId":"justinfidelis"},"content":"            output \u003d ui.getEditHelpMessage();","lastModifiedDate":"2021-10-18"},{"lineNumber":35,"author":{"gitId":"justinfidelis"},"content":"            break;","lastModifiedDate":"2021-10-18"},{"lineNumber":36,"author":{"gitId":"justinfidelis"},"content":"        case EXIT:","lastModifiedDate":"2021-10-18"},{"lineNumber":37,"author":{"gitId":"Kureans"},"content":"            output \u003d ui.getExitHelpMessage();","lastModifiedDate":"2021-10-07"},{"lineNumber":38,"author":{"gitId":"justinfidelis"},"content":"            break;","lastModifiedDate":"2021-10-18"},{"lineNumber":39,"author":{"gitId":"justinfidelis"},"content":"        case LIST_PATIENT:","lastModifiedDate":"2021-10-18"},{"lineNumber":40,"author":{"gitId":"justinfidelis"},"content":"            output \u003d ui.getListHelpMessage();","lastModifiedDate":"2021-10-18"},{"lineNumber":41,"author":{"gitId":"justinfidelis"},"content":"            break;","lastModifiedDate":"2021-10-18"},{"lineNumber":42,"author":{"gitId":"justinfidelis"},"content":"        case SWITCH:","lastModifiedDate":"2021-10-18"},{"lineNumber":43,"author":{"gitId":"justinfidelis"},"content":"            output \u003d \"\"; //todo","lastModifiedDate":"2021-10-18"},{"lineNumber":44,"author":{"gitId":"justinfidelis"},"content":"            break;","lastModifiedDate":"2021-10-18"},{"lineNumber":45,"author":{"gitId":"EricBryann"},"content":"        case FIND_PATIENT:","lastModifiedDate":"2021-10-19"},{"lineNumber":46,"author":{"gitId":"EricBryann"},"content":"            output \u003d ui.getFindHelpMessage();","lastModifiedDate":"2021-10-19"},{"lineNumber":47,"author":{"gitId":"EricBryann"},"content":"            break;","lastModifiedDate":"2021-10-19"},{"lineNumber":48,"author":{"gitId":"justinfidelis"},"content":"        case VIEW_PATIENT:","lastModifiedDate":"2021-10-18"},{"lineNumber":49,"author":{"gitId":"justinfidelis"},"content":"            output \u003d ui.getViewHelpMessage();","lastModifiedDate":"2021-10-18"},{"lineNumber":50,"author":{"gitId":"justinfidelis"},"content":"            break;","lastModifiedDate":"2021-10-18"},{"lineNumber":51,"author":{"gitId":"justinfidelis"},"content":"        default:","lastModifiedDate":"2021-10-18"},{"lineNumber":52,"author":{"gitId":"justinfidelis"},"content":"            output \u003d ui.getCommandList();","lastModifiedDate":"2021-10-18"},{"lineNumber":53,"author":{"gitId":"justinfidelis"},"content":"            break;","lastModifiedDate":"2021-10-18"},{"lineNumber":54,"author":{"gitId":"Kureans"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":55,"author":{"gitId":"Kureans"},"content":"        ui.printOutput(output);","lastModifiedDate":"2021-10-07"},{"lineNumber":56,"author":{"gitId":"Kureans"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":57,"author":{"gitId":"Kureans"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"justinfidelis":34,"jushg":1,"Kureans":19,"EricBryann":3}},{"path":"src/main/java/medbot/command/ListPersonCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jushg"},"content":"package medbot.command;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"justinfidelis"},"content":"public abstract class ListPersonCommand extends Command {","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"jushg"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"justinfidelis":1,"jushg":4}},{"path":"src/main/java/medbot/command/SwitchCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Kureans"},"content":"package medbot.command;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":3,"author":{"gitId":"jushg"},"content":"import medbot.CommandManager;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"justinfidelis"},"content":"import medbot.Parser;","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"justinfidelis"},"content":"import medbot.Scheduler;","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"Kureans"},"content":"import medbot.Ui;","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"jushg"},"content":"import medbot.list.PersonList;","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"justinfidelis"},"content":"import medbot.utilities.ViewType;","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"Kureans"},"content":"public class SwitchCommand extends Command {","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"justinfidelis"},"content":"    private ViewType newViewType \u003d null;","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"justinfidelis"},"content":"    public SwitchCommand(ViewType viewType) {","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"justinfidelis"},"content":"        newViewType \u003d viewType;","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":17,"author":{"gitId":"Kureans"},"content":"    @Override","lastModifiedDate":"2021-10-16"},{"lineNumber":18,"author":{"gitId":"justinfidelis"},"content":"    public void execute(Scheduler scheduler, Ui ui) {","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"justinfidelis"},"content":"        Parser.setViewType(newViewType);","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"Kureans"},"content":"        ui.clearConsoleFromIde();","lastModifiedDate":"2021-10-16"},{"lineNumber":22,"author":{"gitId":"justinfidelis"},"content":"        ui.printSwitchedViewMessage(newViewType);","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"Kureans"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":24,"author":{"gitId":"Kureans"},"content":"}","lastModifiedDate":"2021-10-16"}],"authorContributionMap":{"justinfidelis":12,"jushg":2,"Kureans":10}},{"path":"src/main/java/medbot/command/ViewPersonCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jushg"},"content":"package medbot.command;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"justinfidelis"},"content":"public abstract class ViewPersonCommand extends Command {","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"jushg"},"content":"    protected int personId \u003d 0;","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"justinfidelis"},"content":"    public ViewPersonCommand(int personId) {","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"jushg"},"content":"        this.personId \u003d personId;","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"jushg"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"jushg"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"justinfidelis":2,"jushg":8}},{"path":"src/main/java/medbot/command/patientcommand/AddPatientCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jushg"},"content":"package medbot.command.patientcommand;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"justinfidelis"},"content":"import medbot.Scheduler;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"justinfidelis"},"content":"import medbot.command.AddPersonCommand;","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"jushg"},"content":"import medbot.Ui;","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"justinfidelis"},"content":"import medbot.exceptions.MedBotException;","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"jushg"},"content":"import medbot.person.Patient;","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"justinfidelis"},"content":"public class AddPatientCommand extends AddPersonCommand {","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"jushg"},"content":"    public AddPatientCommand(Patient patient) {","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"jushg"},"content":"        super(patient);","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"jushg"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"jushg"},"content":"    @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"justinfidelis"},"content":"    public void execute(Scheduler scheduler, Ui ui) throws MedBotException {","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"justinfidelis"},"content":"        int patientId \u003d scheduler.getPatientList().addPerson(person);","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"justinfidelis"},"content":"        String addPatientMessage \u003d ui.getAddPatientMessage(patientId);","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"justinfidelis"},"content":"        ui.printOutput(addPatientMessage);","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"jushg"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"jushg"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"justinfidelis":8,"jushg":12}},{"path":"src/main/java/medbot/command/patientcommand/DeletePatientCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jushg"},"content":"package medbot.command.patientcommand;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"justinfidelis"},"content":"import medbot.Scheduler;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"justinfidelis"},"content":"import medbot.command.DeletePersonCommand;","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"jushg"},"content":"import medbot.exceptions.MedBotException;","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"jushg"},"content":"import medbot.Ui;","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"justinfidelis"},"content":"public class DeletePatientCommand extends DeletePersonCommand {","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"jushg"},"content":"    public DeletePatientCommand(int patientId) {","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"jushg"},"content":"        super(patientId);","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"jushg"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"jushg"},"content":"    @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"justinfidelis"},"content":"    public void execute(Scheduler scheduler, Ui ui) throws MedBotException {","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"justinfidelis"},"content":"        scheduler.getPatientList().deletePerson(personId);","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"jushg"},"content":"        String deletePatientMessage \u003d ui.getDeletePatientMessage(personId);","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"jushg"},"content":"        ui.printOutput(deletePatientMessage);","lastModifiedDate":"2021-10-18"},{"lineNumber":19,"author":{"gitId":"jushg"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"jushg"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"justinfidelis":5,"jushg":15}},{"path":"src/main/java/medbot/command/patientcommand/EditPatientCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jushg"},"content":"package medbot.command.patientcommand;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"justinfidelis"},"content":"import medbot.Scheduler;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"justinfidelis"},"content":"import medbot.command.EditPersonCommand;","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"jushg"},"content":"import medbot.exceptions.MedBotException;","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"jushg"},"content":"import medbot.Ui;","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"jushg"},"content":"import medbot.person.Patient;","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"justinfidelis"},"content":"public class EditPatientCommand extends EditPersonCommand {","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"jushg"},"content":"    public EditPatientCommand(int patientId, Patient patient) {","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"jushg"},"content":"        super(patientId, patient);","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"jushg"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"jushg"},"content":"    @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"justinfidelis"},"content":"    public void execute(Scheduler scheduler, Ui ui) throws MedBotException {","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"justinfidelis"},"content":"        scheduler.getPatientList().editPerson(personId, person);","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"justinfidelis"},"content":"        String patientInfo \u003d scheduler.getPatientList().getPersonInfo(personId);","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"jushg"},"content":"        String editPatientMessage \u003d ui.getEditPatientMessage(personId, patientInfo);","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"jushg"},"content":"        ui.printOutput(editPatientMessage);","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"jushg"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"jushg"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"justinfidelis":6,"jushg":16}},{"path":"src/main/java/medbot/command/patientcommand/FindPatientCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"EricBryann"},"content":"package medbot.command.patientcommand;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"justinfidelis"},"content":"import medbot.Scheduler;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"EricBryann"},"content":"import medbot.Ui;","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"justinfidelis"},"content":"import medbot.command.FindPersonCommand;","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"EricBryann"},"content":"import medbot.exceptions.MedBotException;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"EricBryann"},"content":"import java.util.List;","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"justinfidelis"},"content":"public class FindPatientCommand extends FindPersonCommand {","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"EricBryann"},"content":"    public FindPatientCommand(String[] parameters) {","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"EricBryann"},"content":"        super(parameters);","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"EricBryann"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"EricBryann"},"content":"    @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"justinfidelis"},"content":"    public void execute(Scheduler scheduler, Ui ui) throws MedBotException {","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"justinfidelis"},"content":"        List\u003cString\u003e patients \u003d scheduler.getPatientList().findPersons(parameters);","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"EricBryann"},"content":"        String findPatientsMessage \u003d ui.getFindPatientsMessage(patients);","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"EricBryann"},"content":"        ui.printOutput(findPatientsMessage);","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"EricBryann"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"EricBryann"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"justinfidelis":5,"EricBryann":16}},{"path":"src/main/java/medbot/command/patientcommand/ListPatientCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jushg"},"content":"package medbot.command.patientcommand;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"justinfidelis"},"content":"import medbot.Scheduler;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"jushg"},"content":"import medbot.Ui;","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"justinfidelis"},"content":"import medbot.command.ListPersonCommand;","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"justinfidelis"},"content":"public class ListPatientCommand extends ListPersonCommand {","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"jushg"},"content":"    @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"justinfidelis"},"content":"    public void execute(Scheduler scheduler, Ui ui) {","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"justinfidelis"},"content":"        String allPatientsString \u003d ui.getAllPatientsString(scheduler.getPatientList());","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"jushg"},"content":"        ui.printOutput(allPatientsString);","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"jushg"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"jushg"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"justinfidelis":6,"jushg":9}},{"path":"src/main/java/medbot/command/patientcommand/ViewPatientCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jushg"},"content":"package medbot.command.patientcommand;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"justinfidelis"},"content":"import medbot.Scheduler;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"justinfidelis"},"content":"import medbot.command.ViewPersonCommand;","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"jushg"},"content":"import medbot.exceptions.MedBotException;","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"jushg"},"content":"import medbot.Ui;","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"justinfidelis"},"content":"public class ViewPatientCommand extends ViewPersonCommand {","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"jushg"},"content":"    public ViewPatientCommand(int patientId) {","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"jushg"},"content":"        super(patientId);","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"jushg"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"jushg"},"content":"    @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"justinfidelis"},"content":"    public void execute(Scheduler scheduler, Ui ui) throws MedBotException {","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"justinfidelis"},"content":"        String patientInfo \u003d scheduler.getPatientList().getPersonInfo(personId);","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"justinfidelis"},"content":"        String viewPatientMessage \u003d ui.getPatientInfo(patientInfo);","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"justinfidelis"},"content":"        ui.printOutput(viewPatientMessage);","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"jushg"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"jushg"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"justinfidelis":7,"jushg":13}},{"path":"src/main/java/medbot/command/staffcommand/AddStaffCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jushg"},"content":"package medbot.command.staffcommand;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"justinfidelis"},"content":"import medbot.Scheduler;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"jushg"},"content":"import medbot.Ui;","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"justinfidelis"},"content":"import medbot.command.AddPersonCommand;","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"justinfidelis"},"content":"import medbot.exceptions.MedBotException;","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"jushg"},"content":"import medbot.person.Staff;","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"justinfidelis"},"content":"public class AddStaffCommand extends AddPersonCommand {","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"jushg"},"content":"    public AddStaffCommand(Staff staff) {","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"jushg"},"content":"        super(staff);","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"jushg"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"jushg"},"content":"    @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"justinfidelis"},"content":"    public void execute(Scheduler scheduler, Ui ui) throws MedBotException {","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"justinfidelis"},"content":"        int staffId \u003d scheduler.getMedicalStaffList().addPerson(person);","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"justinfidelis"},"content":"        //todo change to getAddStaffMessage","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"justinfidelis"},"content":"        String addStaffMessage \u003d ui.getAddPatientMessage(staffId);","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"justinfidelis"},"content":"        ui.printOutput(addStaffMessage);","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"jushg"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"jushg"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"justinfidelis":9,"jushg":12}},{"path":"src/main/java/medbot/command/staffcommand/DeleteStaffCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jushg"},"content":"package medbot.command.staffcommand;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"justinfidelis"},"content":"import medbot.Scheduler;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"jushg"},"content":"import medbot.Ui;","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"justinfidelis"},"content":"import medbot.command.DeletePersonCommand;","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"jushg"},"content":"import medbot.exceptions.MedBotException;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"justinfidelis"},"content":"public class DeleteStaffCommand extends DeletePersonCommand {","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"jushg"},"content":"    public DeleteStaffCommand(int staffId) {","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"jushg"},"content":"        super(staffId);","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"jushg"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"jushg"},"content":"    @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"justinfidelis"},"content":"    public void execute(Scheduler scheduler, Ui ui) throws MedBotException {","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"justinfidelis"},"content":"        scheduler.getMedicalStaffList().deletePerson(personId);","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"justinfidelis"},"content":"        //todo change to getDeleteStaffMessage","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"justinfidelis"},"content":"        String deleteStaffMessage \u003d ui.getDeletePatientMessage(personId);","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"justinfidelis"},"content":"        ui.printOutput(deleteStaffMessage);","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"jushg"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"jushg"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"justinfidelis":8,"jushg":12}},{"path":"src/main/java/medbot/command/staffcommand/EditStaffCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jushg"},"content":"package medbot.command.staffcommand;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"justinfidelis"},"content":"import medbot.Scheduler;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"jushg"},"content":"import medbot.Ui;","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"justinfidelis"},"content":"import medbot.command.EditPersonCommand;","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"jushg"},"content":"import medbot.exceptions.MedBotException;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"jushg"},"content":"import medbot.person.Staff;","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"justinfidelis"},"content":"public class EditStaffCommand extends EditPersonCommand {","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"jushg"},"content":"    public EditStaffCommand(int staffId, Staff staff) {","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"jushg"},"content":"        super(staffId, staff);","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"jushg"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"jushg"},"content":"    @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"justinfidelis"},"content":"    public void execute(Scheduler scheduler, Ui ui) throws MedBotException {","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"justinfidelis"},"content":"        scheduler.getMedicalStaffList().editPerson(personId, person);","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"justinfidelis"},"content":"        String staffInfo \u003d scheduler.getMedicalStaffList().getPersonInfo(personId);","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"justinfidelis"},"content":"        //todo change to getEditStaffMessage()","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"justinfidelis"},"content":"        String editStaffMessage \u003d ui.getEditPatientMessage(personId, staffInfo);","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"justinfidelis"},"content":"        ui.printOutput(editStaffMessage);","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"jushg"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"jushg"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"justinfidelis":9,"jushg":13}},{"path":"src/main/java/medbot/command/staffcommand/FindStaffCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"EricBryann"},"content":"package medbot.command.staffcommand;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"justinfidelis"},"content":"import medbot.Scheduler;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"jushg"},"content":"import medbot.Ui;","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"justinfidelis"},"content":"import medbot.command.FindPersonCommand;","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"jushg"},"content":"import medbot.exceptions.MedBotException;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"jushg"},"content":"import java.util.List;","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"justinfidelis"},"content":"public class FindStaffCommand extends FindPersonCommand {","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"EricBryann"},"content":"    public FindStaffCommand(String[] parameters) {","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"EricBryann"},"content":"        super(parameters);","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"EricBryann"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"jushg"},"content":"    @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"justinfidelis"},"content":"    public void execute(Scheduler scheduler, Ui ui) throws MedBotException {","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"justinfidelis"},"content":"        List\u003cString\u003e patients \u003d scheduler.getMedicalStaffList().findPersons(parameters);","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"justinfidelis"},"content":"        //todo change to getFindStaffMessage()","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"justinfidelis"},"content":"        String findStaffMessage \u003d ui.getFindPatientsMessage(patients);","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"justinfidelis"},"content":"        ui.printOutput(findStaffMessage);","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"jushg"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"EricBryann"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"justinfidelis":8,"jushg":7,"EricBryann":7}},{"path":"src/main/java/medbot/command/staffcommand/ListStaffCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jushg"},"content":"package medbot.command.staffcommand;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"justinfidelis"},"content":"import medbot.Scheduler;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"jushg"},"content":"import medbot.Ui;","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"justinfidelis"},"content":"import medbot.command.ListPersonCommand;","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"justinfidelis"},"content":"public class ListStaffCommand extends ListPersonCommand {","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"jushg"},"content":"    @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"justinfidelis"},"content":"    public void execute(Scheduler scheduler, Ui ui) {","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"justinfidelis"},"content":"        //todo change to getAllStaffString","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"justinfidelis"},"content":"        String allStaffString \u003d ui.getAllPatientsString(scheduler.getMedicalStaffList());","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"justinfidelis"},"content":"        ui.printOutput(allStaffString);","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"jushg"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"jushg"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"justinfidelis":7,"jushg":8}},{"path":"src/main/java/medbot/command/staffcommand/ViewStaffCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jushg"},"content":"package medbot.command.staffcommand;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"justinfidelis"},"content":"import medbot.Scheduler;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"jushg"},"content":"import medbot.Ui;","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"justinfidelis"},"content":"import medbot.command.ViewPersonCommand;","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"jushg"},"content":"import medbot.exceptions.MedBotException;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"justinfidelis"},"content":"public class ViewStaffCommand extends ViewPersonCommand {","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"jushg"},"content":"    public ViewStaffCommand(int staffId) {","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"jushg"},"content":"        super(staffId);","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"jushg"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"jushg"},"content":"    @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"justinfidelis"},"content":"    public void execute(Scheduler scheduler, Ui ui) throws MedBotException {","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"justinfidelis"},"content":"        String staffInfo \u003d scheduler.getMedicalStaffList().getPersonInfo(personId);","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"justinfidelis"},"content":"        //todo change ot getStaffInfo()","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"justinfidelis"},"content":"        String viewStaffMessage \u003d ui.getPatientInfo(staffInfo);","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"justinfidelis"},"content":"        ui.printOutput(viewStaffMessage);","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"jushg"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"jushg"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"justinfidelis":8,"jushg":12}},{"path":"src/main/java/medbot/exceptions/MedBotException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"justinfidelis"},"content":"package medbot.exceptions;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":3,"author":{"gitId":"justinfidelis"},"content":"public class MedBotException extends Exception {","lastModifiedDate":"2021-09-30"},{"lineNumber":4,"author":{"gitId":"justinfidelis"},"content":"    public MedBotException(String message) {","lastModifiedDate":"2021-09-30"},{"lineNumber":5,"author":{"gitId":"justinfidelis"},"content":"        super(message);","lastModifiedDate":"2021-09-30"},{"lineNumber":6,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":7,"author":{"gitId":"justinfidelis"},"content":"}","lastModifiedDate":"2021-09-30"}],"authorContributionMap":{"justinfidelis":7}},{"path":"src/main/java/medbot/exceptions/MedBotParserException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"justinfidelis"},"content":"package medbot.exceptions;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"justinfidelis"},"content":"public class MedBotParserException extends MedBotException {","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"justinfidelis"},"content":"    public MedBotParserException(String message) {","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"justinfidelis"},"content":"        super(message);","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"justinfidelis"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"justinfidelis":7}},{"path":"src/main/java/medbot/list/MedicalStaffList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jushg"},"content":"package medbot.list;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"jushg"},"content":"import medbot.exceptions.MedBotException;","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"jushg"},"content":"import medbot.person.Staff;","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"jushg"},"content":"public class MedicalStaffList extends PersonList {","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"jushg"},"content":"    public int addPerson(Staff staff) {","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"jushg"},"content":"        return super.addPerson(staff);","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"jushg"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"jushg"},"content":"    public String getPersonInfo(int staffId) throws MedBotException {","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"jushg"},"content":"        return super.getPersonInfo(staffId);","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"jushg"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"jushg"},"content":"    public void editPerson(int staffId, Staff newStaffData) throws MedBotException {","lastModifiedDate":"2021-10-18"},{"lineNumber":17,"author":{"gitId":"jushg"},"content":"        super.editPerson(staffId, newStaffData);","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"jushg"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":19,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"jushg"},"content":"    public void deletePerson(int staffId) throws MedBotException {","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"jushg"},"content":"        super.deletePerson(staffId);","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"jushg"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":23,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":24,"author":{"gitId":"jushg"},"content":"    public String listMedicalStaff() {","lastModifiedDate":"2021-10-18"},{"lineNumber":25,"author":{"gitId":"jushg"},"content":"        return super.listPersons();","lastModifiedDate":"2021-10-18"},{"lineNumber":26,"author":{"gitId":"jushg"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":27,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":28,"author":{"gitId":"jushg"},"content":"    public void addPersonFromStorage(Staff staff) {","lastModifiedDate":"2021-10-18"},{"lineNumber":29,"author":{"gitId":"jushg"},"content":"        super.addPersonFromStorage(staff);","lastModifiedDate":"2021-10-18"},{"lineNumber":30,"author":{"gitId":"jushg"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":31,"author":{"gitId":"jushg"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"jushg":31}},{"path":"src/main/java/medbot/list/PatientList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jushg"},"content":"package medbot.list;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":3,"author":{"gitId":"justinfidelis"},"content":"import medbot.exceptions.MedBotException;","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"justinfidelis"},"content":"import medbot.person.Patient;","lastModifiedDate":"2021-09-30"},{"lineNumber":5,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":6,"author":{"gitId":"EricBryann"},"content":"import java.util.List;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"Kureans"},"content":"public class PatientList extends PersonList {","lastModifiedDate":"2021-10-16"},{"lineNumber":9,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":10,"author":{"gitId":"jushg"},"content":"    public int addPerson(Patient patient) {","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"Kureans"},"content":"        return super.addPerson(patient);","lastModifiedDate":"2021-10-16"},{"lineNumber":12,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":13,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":14,"author":{"gitId":"jushg"},"content":"    public String getPersonInfo(int patientId) throws MedBotException {","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"Kureans"},"content":"        return super.getPersonInfo(patientId);","lastModifiedDate":"2021-10-16"},{"lineNumber":16,"author":{"gitId":"jushg"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"jushg"},"content":"    public void editPerson(int patientId, Patient newPatientData) throws MedBotException {","lastModifiedDate":"2021-10-18"},{"lineNumber":19,"author":{"gitId":"Kureans"},"content":"        super.editPerson(patientId, newPatientData);","lastModifiedDate":"2021-10-16"},{"lineNumber":20,"author":{"gitId":"jushg"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"jushg"},"content":"    public void deletePerson(int patientId) throws MedBotException {","lastModifiedDate":"2021-10-18"},{"lineNumber":23,"author":{"gitId":"Kureans"},"content":"        super.deletePerson(patientId);","lastModifiedDate":"2021-10-16"},{"lineNumber":24,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":25,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":26,"author":{"gitId":"EricBryann"},"content":"    public List\u003cString\u003e findPatients(String[] parameters) {","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"EricBryann"},"content":"        return super.findPersons(parameters);","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"EricBryann"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"jushg"},"content":"    public String listPersons() {","lastModifiedDate":"2021-10-18"},{"lineNumber":31,"author":{"gitId":"Kureans"},"content":"        return super.listPersons();","lastModifiedDate":"2021-10-16"},{"lineNumber":32,"author":{"gitId":"CrimsonTitan79"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"Kureans"},"content":"    private String getNoPatientIdErrorMessage(int patientId) {","lastModifiedDate":"2021-10-16"},{"lineNumber":35,"author":{"gitId":"Kureans"},"content":"        return \"No Patient with ID \" + super.getNoPersonIdErrorMessage(patientId);","lastModifiedDate":"2021-10-16"},{"lineNumber":36,"author":{"gitId":"Kureans"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":37,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":38,"author":{"gitId":"jushg"},"content":"    public void addPersonFromStorage(Patient patient) {","lastModifiedDate":"2021-10-18"},{"lineNumber":39,"author":{"gitId":"Kureans"},"content":"        super.addPersonFromStorage(patient);","lastModifiedDate":"2021-10-16"},{"lineNumber":40,"author":{"gitId":"CrimsonTitan79"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":41,"author":{"gitId":"justinfidelis"},"content":"}","lastModifiedDate":"2021-09-30"}],"authorContributionMap":{"justinfidelis":10,"CrimsonTitan79":3,"jushg":11,"EricBryann":6,"Kureans":11}},{"path":"src/main/java/medbot/list/PersonList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jushg"},"content":"package medbot.list;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":3,"author":{"gitId":"jushg"},"content":"import medbot.CommandManager;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"jushg"},"content":"import medbot.Parser;","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"justinfidelis"},"content":"import medbot.exceptions.MedBotException;","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"Kureans"},"content":"import medbot.person.Person;","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"Kureans"},"content":"import medbot.utilities.ViewType;","lastModifiedDate":"2021-10-16"},{"lineNumber":8,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":9,"author":{"gitId":"EricBryann"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"Kureans"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"EricBryann"},"content":"import java.util.List;","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"EricBryann"},"content":"import static medbot.Ui.ENDLINE;","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"Kureans"},"content":"public class PersonList {","lastModifiedDate":"2021-10-16"},{"lineNumber":16,"author":{"gitId":"Kureans"},"content":"    private HashMap\u003cInteger, Person\u003e persons \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-10-16"},{"lineNumber":17,"author":{"gitId":"Kureans"},"content":"    private int lastId \u003d 1;","lastModifiedDate":"2021-10-16"},{"lineNumber":18,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":19,"author":{"gitId":"Kureans"},"content":"    public int size() {","lastModifiedDate":"2021-10-16"},{"lineNumber":20,"author":{"gitId":"Kureans"},"content":"        return persons.size();","lastModifiedDate":"2021-10-16"},{"lineNumber":21,"author":{"gitId":"Kureans"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":22,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":23,"author":{"gitId":"Kureans"},"content":"    public int addPerson(Person person) {","lastModifiedDate":"2021-10-16"},{"lineNumber":24,"author":{"gitId":"Kureans"},"content":"        int personId \u003d generatePersonId();","lastModifiedDate":"2021-10-16"},{"lineNumber":25,"author":{"gitId":"Kureans"},"content":"        person.setPersonId(personId);","lastModifiedDate":"2021-10-16"},{"lineNumber":26,"author":{"gitId":"Kureans"},"content":"        persons.put(personId, person);","lastModifiedDate":"2021-10-16"},{"lineNumber":27,"author":{"gitId":"Kureans"},"content":"        return personId;","lastModifiedDate":"2021-10-16"},{"lineNumber":28,"author":{"gitId":"Kureans"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":29,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":30,"author":{"gitId":"Kureans"},"content":"    public String getPersonInfo(int personId) throws MedBotException {","lastModifiedDate":"2021-10-16"},{"lineNumber":31,"author":{"gitId":"Kureans"},"content":"        if (!persons.containsKey(personId)) {","lastModifiedDate":"2021-10-16"},{"lineNumber":32,"author":{"gitId":"Kureans"},"content":"            throw new MedBotException(getNoPersonIdErrorMessage(personId));","lastModifiedDate":"2021-10-16"},{"lineNumber":33,"author":{"gitId":"Kureans"},"content":"        }","lastModifiedDate":"2021-10-16"},{"lineNumber":34,"author":{"gitId":"Kureans"},"content":"        return persons.get(personId).toString();","lastModifiedDate":"2021-10-16"},{"lineNumber":35,"author":{"gitId":"Kureans"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":36,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":37,"author":{"gitId":"Kureans"},"content":"    private int generatePersonId() {","lastModifiedDate":"2021-10-16"},{"lineNumber":38,"author":{"gitId":"Kureans"},"content":"        while (persons.containsKey(lastId)) {","lastModifiedDate":"2021-10-16"},{"lineNumber":39,"author":{"gitId":"Kureans"},"content":"            lastId++;","lastModifiedDate":"2021-10-16"},{"lineNumber":40,"author":{"gitId":"Kureans"},"content":"        }","lastModifiedDate":"2021-10-16"},{"lineNumber":41,"author":{"gitId":"Kureans"},"content":"        return lastId;","lastModifiedDate":"2021-10-16"},{"lineNumber":42,"author":{"gitId":"Kureans"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":43,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":44,"author":{"gitId":"Kureans"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":45,"author":{"gitId":"Kureans"},"content":"     * Replaces all values of the Person data that is non-null in the new inputted data.","lastModifiedDate":"2021-10-16"},{"lineNumber":46,"author":{"gitId":"Kureans"},"content":"     *","lastModifiedDate":"2021-10-16"},{"lineNumber":47,"author":{"gitId":"Kureans"},"content":"     * @param oldPersonData the old Person data in the system","lastModifiedDate":"2021-10-16"},{"lineNumber":48,"author":{"gitId":"Kureans"},"content":"     * @param newPersonData the new Person data inputted by the user","lastModifiedDate":"2021-10-16"},{"lineNumber":49,"author":{"gitId":"Kureans"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":50,"author":{"gitId":"Kureans"},"content":"    private void mergeEditPersonData(Person oldPersonData, Person newPersonData) {","lastModifiedDate":"2021-10-16"},{"lineNumber":51,"author":{"gitId":"Kureans"},"content":"        if (newPersonData.getName() !\u003d null) {","lastModifiedDate":"2021-10-16"},{"lineNumber":52,"author":{"gitId":"Kureans"},"content":"            oldPersonData.setName(newPersonData.getName());","lastModifiedDate":"2021-10-16"},{"lineNumber":53,"author":{"gitId":"Kureans"},"content":"        }","lastModifiedDate":"2021-10-16"},{"lineNumber":54,"author":{"gitId":"Kureans"},"content":"        if (newPersonData.getIcNumber() !\u003d null) {","lastModifiedDate":"2021-10-16"},{"lineNumber":55,"author":{"gitId":"Kureans"},"content":"            oldPersonData.setIcNumber(newPersonData.getIcNumber());","lastModifiedDate":"2021-10-16"},{"lineNumber":56,"author":{"gitId":"Kureans"},"content":"        }","lastModifiedDate":"2021-10-16"},{"lineNumber":57,"author":{"gitId":"Kureans"},"content":"        if (newPersonData.getEmailAddress() !\u003d null) {","lastModifiedDate":"2021-10-16"},{"lineNumber":58,"author":{"gitId":"Kureans"},"content":"            oldPersonData.setEmailAddress(newPersonData.getEmailAddress());","lastModifiedDate":"2021-10-16"},{"lineNumber":59,"author":{"gitId":"Kureans"},"content":"        }","lastModifiedDate":"2021-10-16"},{"lineNumber":60,"author":{"gitId":"Kureans"},"content":"        if (newPersonData.getPhoneNumber() !\u003d null) {","lastModifiedDate":"2021-10-16"},{"lineNumber":61,"author":{"gitId":"Kureans"},"content":"            oldPersonData.setPhoneNumber(newPersonData.getPhoneNumber());","lastModifiedDate":"2021-10-16"},{"lineNumber":62,"author":{"gitId":"Kureans"},"content":"        }","lastModifiedDate":"2021-10-16"},{"lineNumber":63,"author":{"gitId":"Kureans"},"content":"        if (newPersonData.getResidentialAddress() !\u003d null) {","lastModifiedDate":"2021-10-16"},{"lineNumber":64,"author":{"gitId":"Kureans"},"content":"            oldPersonData.setResidentialAddress(newPersonData.getResidentialAddress());","lastModifiedDate":"2021-10-16"},{"lineNumber":65,"author":{"gitId":"Kureans"},"content":"        }","lastModifiedDate":"2021-10-16"},{"lineNumber":66,"author":{"gitId":"Kureans"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":67,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":68,"author":{"gitId":"Kureans"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":69,"author":{"gitId":"Kureans"},"content":"     * Edits the specified fields on Person information with new values from the user.","lastModifiedDate":"2021-10-16"},{"lineNumber":70,"author":{"gitId":"Kureans"},"content":"     *","lastModifiedDate":"2021-10-16"},{"lineNumber":71,"author":{"gitId":"Kureans"},"content":"     * @param personId      The Person with information to change","lastModifiedDate":"2021-10-16"},{"lineNumber":72,"author":{"gitId":"Kureans"},"content":"     * @param newPersonData the new Person data to change to (except the null fields)","lastModifiedDate":"2021-10-16"},{"lineNumber":73,"author":{"gitId":"Kureans"},"content":"     * @throws MedBotException when the Person ID cannot be found","lastModifiedDate":"2021-10-16"},{"lineNumber":74,"author":{"gitId":"Kureans"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":75,"author":{"gitId":"Kureans"},"content":"    public void editPerson(int personId, Person newPersonData) throws MedBotException {","lastModifiedDate":"2021-10-16"},{"lineNumber":76,"author":{"gitId":"EricBryann"},"content":"        assert (personId \u003e 0);","lastModifiedDate":"2021-10-19"},{"lineNumber":77,"author":{"gitId":"Kureans"},"content":"        mergeEditPersonData(persons.get(personId), newPersonData);","lastModifiedDate":"2021-10-16"},{"lineNumber":78,"author":{"gitId":"Kureans"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":79,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":80,"author":{"gitId":"Kureans"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":81,"author":{"gitId":"Kureans"},"content":"     * Deletes the specified Person.","lastModifiedDate":"2021-10-16"},{"lineNumber":82,"author":{"gitId":"Kureans"},"content":"     *","lastModifiedDate":"2021-10-16"},{"lineNumber":83,"author":{"gitId":"Kureans"},"content":"     * @param personId The Person to delete.","lastModifiedDate":"2021-10-16"},{"lineNumber":84,"author":{"gitId":"Kureans"},"content":"     * @throws MedBotException when the Person ID cannot be found.","lastModifiedDate":"2021-10-16"},{"lineNumber":85,"author":{"gitId":"Kureans"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":86,"author":{"gitId":"Kureans"},"content":"    public void deletePerson(int personId) throws MedBotException {","lastModifiedDate":"2021-10-16"},{"lineNumber":87,"author":{"gitId":"Kureans"},"content":"        if (!persons.containsKey(personId)) {","lastModifiedDate":"2021-10-16"},{"lineNumber":88,"author":{"gitId":"Kureans"},"content":"            throw new MedBotException(getNoPersonIdErrorMessage(personId));","lastModifiedDate":"2021-10-16"},{"lineNumber":89,"author":{"gitId":"Kureans"},"content":"        }","lastModifiedDate":"2021-10-16"},{"lineNumber":90,"author":{"gitId":"EricBryann"},"content":"        assert (personId \u003e 0);","lastModifiedDate":"2021-10-19"},{"lineNumber":91,"author":{"gitId":"Kureans"},"content":"        persons.remove(personId);","lastModifiedDate":"2021-10-16"},{"lineNumber":92,"author":{"gitId":"Kureans"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":93,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":94,"author":{"gitId":"EricBryann"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":95,"author":{"gitId":"EricBryann"},"content":"     * Filters persons in the list based on specified attributes.","lastModifiedDate":"2021-10-19"},{"lineNumber":96,"author":{"gitId":"EricBryann"},"content":"     *","lastModifiedDate":"2021-10-19"},{"lineNumber":97,"author":{"gitId":"EricBryann"},"content":"     * @param parameters The attributes to filter persons.","lastModifiedDate":"2021-10-19"},{"lineNumber":98,"author":{"gitId":"EricBryann"},"content":"     * @return The filtered persons.","lastModifiedDate":"2021-10-19"},{"lineNumber":99,"author":{"gitId":"EricBryann"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":100,"author":{"gitId":"EricBryann"},"content":"    public List\u003cString\u003e findPersons(String[] parameters) {","lastModifiedDate":"2021-10-19"},{"lineNumber":101,"author":{"gitId":"EricBryann"},"content":"        List\u003cString\u003e filteredPersons \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-19"},{"lineNumber":102,"author":{"gitId":"EricBryann"},"content":"        for (int key : persons.keySet()) {","lastModifiedDate":"2021-10-19"},{"lineNumber":103,"author":{"gitId":"EricBryann"},"content":"            Person currentPerson \u003d persons.get(key);","lastModifiedDate":"2021-10-19"},{"lineNumber":104,"author":{"gitId":"EricBryann"},"content":"            if (currentPerson.containsAllParameters(parameters)) {","lastModifiedDate":"2021-10-19"},{"lineNumber":105,"author":{"gitId":"EricBryann"},"content":"                filteredPersons.add(currentPerson.getInfoInTableFormat());","lastModifiedDate":"2021-10-19"},{"lineNumber":106,"author":{"gitId":"EricBryann"},"content":"            }","lastModifiedDate":"2021-10-19"},{"lineNumber":107,"author":{"gitId":"EricBryann"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":108,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":109,"author":{"gitId":"EricBryann"},"content":"        return filteredPersons;","lastModifiedDate":"2021-10-19"},{"lineNumber":110,"author":{"gitId":"EricBryann"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":111,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":112,"author":{"gitId":"Kureans"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":113,"author":{"gitId":"Kureans"},"content":"     * Lists all current persons.","lastModifiedDate":"2021-10-16"},{"lineNumber":114,"author":{"gitId":"Kureans"},"content":"     *","lastModifiedDate":"2021-10-16"},{"lineNumber":115,"author":{"gitId":"Kureans"},"content":"     * @return String displays the list of all current persons","lastModifiedDate":"2021-10-16"},{"lineNumber":116,"author":{"gitId":"Kureans"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":117,"author":{"gitId":"Kureans"},"content":"    public String listPersons() {","lastModifiedDate":"2021-10-16"},{"lineNumber":118,"author":{"gitId":"Kureans"},"content":"        String output \u003d \"\";","lastModifiedDate":"2021-10-16"},{"lineNumber":119,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":120,"author":{"gitId":"Kureans"},"content":"        for (int key : persons.keySet()) {","lastModifiedDate":"2021-10-16"},{"lineNumber":121,"author":{"gitId":"EricBryann"},"content":"            output +\u003d persons.get(key).getInfoInTableFormat() + ENDLINE;","lastModifiedDate":"2021-10-19"},{"lineNumber":122,"author":{"gitId":"Kureans"},"content":"        }","lastModifiedDate":"2021-10-16"},{"lineNumber":123,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":124,"author":{"gitId":"Kureans"},"content":"        return output;","lastModifiedDate":"2021-10-16"},{"lineNumber":125,"author":{"gitId":"Kureans"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":126,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":127,"author":{"gitId":"Kureans"},"content":"    public String getNoPersonIdErrorMessage(int personId) {","lastModifiedDate":"2021-10-16"},{"lineNumber":128,"author":{"gitId":"EricBryann"},"content":"        return \"No person with ID \" + personId + \" found.\" + ENDLINE;","lastModifiedDate":"2021-10-19"},{"lineNumber":129,"author":{"gitId":"Kureans"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":130,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":131,"author":{"gitId":"Kureans"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":132,"author":{"gitId":"Kureans"},"content":"     * Get storageString for all persons.","lastModifiedDate":"2021-10-16"},{"lineNumber":133,"author":{"gitId":"Kureans"},"content":"     *","lastModifiedDate":"2021-10-16"},{"lineNumber":134,"author":{"gitId":"Kureans"},"content":"     * @return storageString of all persons","lastModifiedDate":"2021-10-16"},{"lineNumber":135,"author":{"gitId":"Kureans"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":136,"author":{"gitId":"Kureans"},"content":"    public String getStorageString() {","lastModifiedDate":"2021-10-16"},{"lineNumber":137,"author":{"gitId":"Kureans"},"content":"        String output \u003d \"\";","lastModifiedDate":"2021-10-16"},{"lineNumber":138,"author":{"gitId":"Kureans"},"content":"        for (int key : persons.keySet()) {","lastModifiedDate":"2021-10-16"},{"lineNumber":139,"author":{"gitId":"Kureans"},"content":"            Person person \u003d persons.get(key);","lastModifiedDate":"2021-10-16"},{"lineNumber":140,"author":{"gitId":"Kureans"},"content":"            String personStorageString \u003d person.getStorageString();","lastModifiedDate":"2021-10-16"},{"lineNumber":141,"author":{"gitId":"EricBryann"},"content":"            output +\u003d personStorageString + ENDLINE;","lastModifiedDate":"2021-10-19"},{"lineNumber":142,"author":{"gitId":"Kureans"},"content":"        }","lastModifiedDate":"2021-10-16"},{"lineNumber":143,"author":{"gitId":"Kureans"},"content":"        return output;","lastModifiedDate":"2021-10-16"},{"lineNumber":144,"author":{"gitId":"Kureans"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":145,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":146,"author":{"gitId":"Kureans"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":147,"author":{"gitId":"Kureans"},"content":"     * Adds a person to persons hashmap.","lastModifiedDate":"2021-10-16"},{"lineNumber":148,"author":{"gitId":"Kureans"},"content":"     *","lastModifiedDate":"2021-10-16"},{"lineNumber":149,"author":{"gitId":"Kureans"},"content":"     * @param person an instance of Person","lastModifiedDate":"2021-10-16"},{"lineNumber":150,"author":{"gitId":"Kureans"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":151,"author":{"gitId":"Kureans"},"content":"    public void addPersonFromStorage(Person person) {","lastModifiedDate":"2021-10-16"},{"lineNumber":152,"author":{"gitId":"Kureans"},"content":"        int personId \u003d person.getPersonId();","lastModifiedDate":"2021-10-16"},{"lineNumber":153,"author":{"gitId":"Kureans"},"content":"        persons.put(personId, person);","lastModifiedDate":"2021-10-16"},{"lineNumber":154,"author":{"gitId":"Kureans"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":155,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":156,"author":{"gitId":"Kureans"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":157,"author":{"gitId":"Kureans"},"content":"     * Set lastId to a new number.","lastModifiedDate":"2021-10-16"},{"lineNumber":158,"author":{"gitId":"Kureans"},"content":"     *","lastModifiedDate":"2021-10-16"},{"lineNumber":159,"author":{"gitId":"Kureans"},"content":"     * @param newLastId lastId to be set to this","lastModifiedDate":"2021-10-16"},{"lineNumber":160,"author":{"gitId":"Kureans"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":161,"author":{"gitId":"Kureans"},"content":"    public void setLastId(int newLastId) {","lastModifiedDate":"2021-10-16"},{"lineNumber":162,"author":{"gitId":"Kureans"},"content":"        lastId \u003d newLastId;","lastModifiedDate":"2021-10-16"},{"lineNumber":163,"author":{"gitId":"Kureans"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":164,"author":{"gitId":"Kureans"},"content":"}","lastModifiedDate":"2021-10-16"}],"authorContributionMap":{"justinfidelis":1,"jushg":3,"Kureans":131,"EricBryann":29}},{"path":"src/main/java/medbot/person/Patient.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"justinfidelis"},"content":"package medbot.person;","lastModifiedDate":"2021-09-30"},{"lineNumber":2,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":3,"author":{"gitId":"CrimsonTitan79"},"content":"import static medbot.Ui.VERTICAL_LINE_SPACED;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"justinfidelis"},"content":"public class Patient extends Person {","lastModifiedDate":"2021-09-30"},{"lineNumber":6,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"justinfidelis"},"content":"    public Patient() {","lastModifiedDate":"2021-09-30"},{"lineNumber":8,"author":{"gitId":"justinfidelis"},"content":"        super.personType \u003d PersonType.PATIENT;","lastModifiedDate":"2021-09-30"},{"lineNumber":9,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":10,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":11,"author":{"gitId":"justinfidelis"},"content":"    public String toString() {","lastModifiedDate":"2021-09-30"},{"lineNumber":12,"author":{"gitId":"jushg"},"content":"        return \"Patient ID: \" + getPersonId() + \" \" + super.toString();","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":14,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"CrimsonTitan79"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"CrimsonTitan79"},"content":"     * Text to be written to storage/data.txt of a patient","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"CrimsonTitan79"},"content":"     *","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"CrimsonTitan79"},"content":"     * @return storageString of a patient","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"CrimsonTitan79"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"CrimsonTitan79"},"content":"    @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"CrimsonTitan79"},"content":"    public String getStorageString() {","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"jushg"},"content":"        return getPersonId() + VERTICAL_LINE_SPACED","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"CrimsonTitan79"},"content":"                + super.getStorageString();","lastModifiedDate":"2021-10-09"},{"lineNumber":24,"author":{"gitId":"CrimsonTitan79"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"justinfidelis"},"content":"}","lastModifiedDate":"2021-09-30"}],"authorContributionMap":{"justinfidelis":10,"CrimsonTitan79":13,"jushg":2}},{"path":"src/main/java/medbot/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"justinfidelis"},"content":"package medbot.person;","lastModifiedDate":"2021-09-30"},{"lineNumber":2,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":3,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"CrimsonTitan79"},"content":"import static medbot.Ui.VERTICAL_LINE_SPACED;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"EricBryann"},"content":"import static medbot.Ui.ENDLINE;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"justinfidelis"},"content":"public abstract class Person {","lastModifiedDate":"2021-09-30"},{"lineNumber":9,"author":{"gitId":"EricBryann"},"content":"    private static final String PARAMETER_NAME \u003d \"n/\";","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"EricBryann"},"content":"    private static final String PARAMETER_PHONE \u003d \"p/\";","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"EricBryann"},"content":"    private static final String PARAMETER_EMAIL \u003d \"e/\";","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"EricBryann"},"content":"    private static final String PARAMETER_IC \u003d \"i/\";","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"EricBryann"},"content":"    private static final String PARAMETER_ADDRESS \u003d \"a/\";","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"EricBryann"},"content":"    private static final int PARAMETER_BUFFER \u003d 2;","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"EricBryann"},"content":"    private static final String SPACE \u003d \" \";","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"EricBryann"},"content":"    private static final int LENGTH_ID_COLUMN \u003d 4;","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"EricBryann"},"content":"    private static final int LENGTH_IC_COLUMN \u003d 9;","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"EricBryann"},"content":"    private static final int LENGTH_NAME_COLUMN \u003d 20;","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"EricBryann"},"content":"    private static final int LENGTH_PHONE_NUM_COLUMN \u003d 9;","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"EricBryann"},"content":"    private static final int LENGTH_EMAIL_COLUMN \u003d 20;","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"EricBryann"},"content":"    private static final int LENGTH_ADDRESS_COLUMN \u003d 20;","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"Kureans"},"content":"    private int personId \u003d 0;","lastModifiedDate":"2021-10-16"},{"lineNumber":27,"author":{"gitId":"justinfidelis"},"content":"    protected String icNumber \u003d \"\";","lastModifiedDate":"2021-09-30"},{"lineNumber":28,"author":{"gitId":"justinfidelis"},"content":"    protected String name \u003d \"\";","lastModifiedDate":"2021-09-30"},{"lineNumber":29,"author":{"gitId":"justinfidelis"},"content":"    protected String phoneNumber \u003d \"\";","lastModifiedDate":"2021-09-30"},{"lineNumber":30,"author":{"gitId":"justinfidelis"},"content":"    protected String emailAddress \u003d \"\";","lastModifiedDate":"2021-09-30"},{"lineNumber":31,"author":{"gitId":"justinfidelis"},"content":"    protected String residentialAddress \u003d \"\";","lastModifiedDate":"2021-09-30"},{"lineNumber":32,"author":{"gitId":"justinfidelis"},"content":"    protected PersonType personType;","lastModifiedDate":"2021-09-30"},{"lineNumber":33,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":34,"author":{"gitId":"justinfidelis"},"content":"    public String toString() {","lastModifiedDate":"2021-09-30"},{"lineNumber":35,"author":{"gitId":"EricBryann"},"content":"        return  ENDLINE","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"EricBryann"},"content":"                + \"IC: \" + icNumber + ENDLINE","lastModifiedDate":"2021-10-19"},{"lineNumber":37,"author":{"gitId":"EricBryann"},"content":"                + \"Name: \" + name + ENDLINE","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"EricBryann"},"content":"                + \"H/P: \" + phoneNumber + ENDLINE","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"EricBryann"},"content":"                + \"Email: \" + emailAddress + ENDLINE","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"EricBryann"},"content":"                + \"Address: \" + residentialAddress;","lastModifiedDate":"2021-10-19"},{"lineNumber":41,"author":{"gitId":"EricBryann"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":42,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":43,"author":{"gitId":"EricBryann"},"content":"    public String getInfoInTableFormat() {","lastModifiedDate":"2021-10-19"},{"lineNumber":44,"author":{"gitId":"EricBryann"},"content":"        return VERTICAL_LINE_SPACED + getFormattedPersonId()","lastModifiedDate":"2021-10-19"},{"lineNumber":45,"author":{"gitId":"EricBryann"},"content":"                + VERTICAL_LINE_SPACED + getFormattedIcNumber()","lastModifiedDate":"2021-10-19"},{"lineNumber":46,"author":{"gitId":"EricBryann"},"content":"                + VERTICAL_LINE_SPACED + getFormattedName()","lastModifiedDate":"2021-10-19"},{"lineNumber":47,"author":{"gitId":"EricBryann"},"content":"                + VERTICAL_LINE_SPACED + getFormattedPhoneNumber()","lastModifiedDate":"2021-10-19"},{"lineNumber":48,"author":{"gitId":"EricBryann"},"content":"                + VERTICAL_LINE_SPACED + getFormattedEmail()","lastModifiedDate":"2021-10-19"},{"lineNumber":49,"author":{"gitId":"EricBryann"},"content":"                + VERTICAL_LINE_SPACED + getFormattedAddress()","lastModifiedDate":"2021-10-19"},{"lineNumber":50,"author":{"gitId":"EricBryann"},"content":"                + VERTICAL_LINE_SPACED;","lastModifiedDate":"2021-10-19"},{"lineNumber":51,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":52,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":53,"author":{"gitId":"justinfidelis"},"content":"    public String getIcNumber() {","lastModifiedDate":"2021-09-30"},{"lineNumber":54,"author":{"gitId":"justinfidelis"},"content":"        return icNumber;","lastModifiedDate":"2021-09-30"},{"lineNumber":55,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":56,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":57,"author":{"gitId":"justinfidelis"},"content":"    public void setIcNumber(String icNumber) {","lastModifiedDate":"2021-09-30"},{"lineNumber":58,"author":{"gitId":"justinfidelis"},"content":"        this.icNumber \u003d icNumber;","lastModifiedDate":"2021-09-30"},{"lineNumber":59,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":60,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":61,"author":{"gitId":"justinfidelis"},"content":"    public String getName() {","lastModifiedDate":"2021-09-30"},{"lineNumber":62,"author":{"gitId":"justinfidelis"},"content":"        return name;","lastModifiedDate":"2021-09-30"},{"lineNumber":63,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":64,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":65,"author":{"gitId":"justinfidelis"},"content":"    public void setName(String name) {","lastModifiedDate":"2021-09-30"},{"lineNumber":66,"author":{"gitId":"justinfidelis"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-09-30"},{"lineNumber":67,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":68,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":69,"author":{"gitId":"justinfidelis"},"content":"    public String getPhoneNumber() {","lastModifiedDate":"2021-09-30"},{"lineNumber":70,"author":{"gitId":"justinfidelis"},"content":"        return phoneNumber;","lastModifiedDate":"2021-09-30"},{"lineNumber":71,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":72,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":73,"author":{"gitId":"justinfidelis"},"content":"    public void setPhoneNumber(String phoneNumber) {","lastModifiedDate":"2021-09-30"},{"lineNumber":74,"author":{"gitId":"justinfidelis"},"content":"        this.phoneNumber \u003d phoneNumber;","lastModifiedDate":"2021-09-30"},{"lineNumber":75,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":76,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":77,"author":{"gitId":"justinfidelis"},"content":"    public String getEmailAddress() {","lastModifiedDate":"2021-09-30"},{"lineNumber":78,"author":{"gitId":"justinfidelis"},"content":"        return emailAddress;","lastModifiedDate":"2021-09-30"},{"lineNumber":79,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":80,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":81,"author":{"gitId":"justinfidelis"},"content":"    public void setEmailAddress(String emailAddress) {","lastModifiedDate":"2021-09-30"},{"lineNumber":82,"author":{"gitId":"justinfidelis"},"content":"        this.emailAddress \u003d emailAddress;","lastModifiedDate":"2021-09-30"},{"lineNumber":83,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":84,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":85,"author":{"gitId":"justinfidelis"},"content":"    public String getResidentialAddress() {","lastModifiedDate":"2021-09-30"},{"lineNumber":86,"author":{"gitId":"justinfidelis"},"content":"        return residentialAddress;","lastModifiedDate":"2021-09-30"},{"lineNumber":87,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":88,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":89,"author":{"gitId":"justinfidelis"},"content":"    public void setResidentialAddress(String residentialAddress) {","lastModifiedDate":"2021-09-30"},{"lineNumber":90,"author":{"gitId":"justinfidelis"},"content":"        this.residentialAddress \u003d residentialAddress;","lastModifiedDate":"2021-09-30"},{"lineNumber":91,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":92,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":93,"author":{"gitId":"Kureans"},"content":"    public int getPersonId() {","lastModifiedDate":"2021-10-16"},{"lineNumber":94,"author":{"gitId":"Kureans"},"content":"        return personId;","lastModifiedDate":"2021-10-16"},{"lineNumber":95,"author":{"gitId":"Kureans"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":96,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":97,"author":{"gitId":"Kureans"},"content":"    public void setPersonId(int personId) {","lastModifiedDate":"2021-10-16"},{"lineNumber":98,"author":{"gitId":"Kureans"},"content":"        this.personId \u003d personId;","lastModifiedDate":"2021-10-16"},{"lineNumber":99,"author":{"gitId":"Kureans"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":100,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":101,"author":{"gitId":"justinfidelis"},"content":"    public void setNull() {","lastModifiedDate":"2021-10-06"},{"lineNumber":102,"author":{"gitId":"justinfidelis"},"content":"        icNumber \u003d null;","lastModifiedDate":"2021-10-06"},{"lineNumber":103,"author":{"gitId":"justinfidelis"},"content":"        name \u003d null;","lastModifiedDate":"2021-10-06"},{"lineNumber":104,"author":{"gitId":"justinfidelis"},"content":"        phoneNumber \u003d null;","lastModifiedDate":"2021-10-06"},{"lineNumber":105,"author":{"gitId":"justinfidelis"},"content":"        emailAddress \u003d null;","lastModifiedDate":"2021-10-06"},{"lineNumber":106,"author":{"gitId":"justinfidelis"},"content":"        residentialAddress \u003d null;","lastModifiedDate":"2021-10-06"},{"lineNumber":107,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":108,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":109,"author":{"gitId":"CrimsonTitan79"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":110,"author":{"gitId":"CrimsonTitan79"},"content":"     * Text to be written to storage/data.txt of a person","lastModifiedDate":"2021-10-08"},{"lineNumber":111,"author":{"gitId":"CrimsonTitan79"},"content":"     *","lastModifiedDate":"2021-10-08"},{"lineNumber":112,"author":{"gitId":"CrimsonTitan79"},"content":"     * @return storageString of a person","lastModifiedDate":"2021-10-08"},{"lineNumber":113,"author":{"gitId":"CrimsonTitan79"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":114,"author":{"gitId":"CrimsonTitan79"},"content":"    public String getStorageString() {","lastModifiedDate":"2021-10-08"},{"lineNumber":115,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":116,"author":{"gitId":"CrimsonTitan79"},"content":"        return setAsStorageParameterOrNull(icNumber) + VERTICAL_LINE_SPACED","lastModifiedDate":"2021-10-13"},{"lineNumber":117,"author":{"gitId":"CrimsonTitan79"},"content":"                + setAsStorageParameterOrNull(name) + VERTICAL_LINE_SPACED","lastModifiedDate":"2021-10-13"},{"lineNumber":118,"author":{"gitId":"CrimsonTitan79"},"content":"                + setAsStorageParameterOrNull(phoneNumber) + VERTICAL_LINE_SPACED","lastModifiedDate":"2021-10-13"},{"lineNumber":119,"author":{"gitId":"CrimsonTitan79"},"content":"                + setAsStorageParameterOrNull(emailAddress) + VERTICAL_LINE_SPACED","lastModifiedDate":"2021-10-13"},{"lineNumber":120,"author":{"gitId":"CrimsonTitan79"},"content":"                + setAsStorageParameterOrNull(residentialAddress);","lastModifiedDate":"2021-10-09"},{"lineNumber":121,"author":{"gitId":"CrimsonTitan79"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":122,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":123,"author":{"gitId":"EricBryann"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":124,"author":{"gitId":"EricBryann"},"content":"     * Checks whether this person contains all the parameters specified.","lastModifiedDate":"2021-10-19"},{"lineNumber":125,"author":{"gitId":"EricBryann"},"content":"     *","lastModifiedDate":"2021-10-19"},{"lineNumber":126,"author":{"gitId":"EricBryann"},"content":"     * @param parameters the attributes to check.","lastModifiedDate":"2021-10-19"},{"lineNumber":127,"author":{"gitId":"EricBryann"},"content":"     * @return true if all parameters are found, false otherwise.","lastModifiedDate":"2021-10-19"},{"lineNumber":128,"author":{"gitId":"EricBryann"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":129,"author":{"gitId":"EricBryann"},"content":"    public boolean containsAllParameters(String[] parameters) {","lastModifiedDate":"2021-10-19"},{"lineNumber":130,"author":{"gitId":"EricBryann"},"content":"        for (String parameter : parameters) {","lastModifiedDate":"2021-10-19"},{"lineNumber":131,"author":{"gitId":"EricBryann"},"content":"            if (!containsParameter(parameter)) {","lastModifiedDate":"2021-10-19"},{"lineNumber":132,"author":{"gitId":"EricBryann"},"content":"                return false;","lastModifiedDate":"2021-10-19"},{"lineNumber":133,"author":{"gitId":"EricBryann"},"content":"            }","lastModifiedDate":"2021-10-19"},{"lineNumber":134,"author":{"gitId":"EricBryann"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":135,"author":{"gitId":"EricBryann"},"content":"        return true;","lastModifiedDate":"2021-10-19"},{"lineNumber":136,"author":{"gitId":"EricBryann"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":137,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":138,"author":{"gitId":"EricBryann"},"content":"    private boolean containsParameter(String parameter) {","lastModifiedDate":"2021-10-19"},{"lineNumber":139,"author":{"gitId":"EricBryann"},"content":"        String trimmedParameter \u003d parameter.substring(PARAMETER_BUFFER).trim().toLowerCase();","lastModifiedDate":"2021-10-19"},{"lineNumber":140,"author":{"gitId":"EricBryann"},"content":"        if (parameter.startsWith(PARAMETER_NAME)) {","lastModifiedDate":"2021-10-19"},{"lineNumber":141,"author":{"gitId":"EricBryann"},"content":"            return getName().toLowerCase().contains(trimmedParameter);","lastModifiedDate":"2021-10-19"},{"lineNumber":142,"author":{"gitId":"EricBryann"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":143,"author":{"gitId":"EricBryann"},"content":"        if (parameter.startsWith(PARAMETER_IC)) {","lastModifiedDate":"2021-10-19"},{"lineNumber":144,"author":{"gitId":"EricBryann"},"content":"            return getIcNumber().toLowerCase().contains(trimmedParameter);","lastModifiedDate":"2021-10-19"},{"lineNumber":145,"author":{"gitId":"EricBryann"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":146,"author":{"gitId":"EricBryann"},"content":"        if (parameter.startsWith(PARAMETER_PHONE)) {","lastModifiedDate":"2021-10-19"},{"lineNumber":147,"author":{"gitId":"EricBryann"},"content":"            return getPhoneNumber().toLowerCase().contains(trimmedParameter);","lastModifiedDate":"2021-10-19"},{"lineNumber":148,"author":{"gitId":"EricBryann"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":149,"author":{"gitId":"EricBryann"},"content":"        if (parameter.startsWith(PARAMETER_EMAIL)) {","lastModifiedDate":"2021-10-19"},{"lineNumber":150,"author":{"gitId":"EricBryann"},"content":"            return getEmailAddress().toLowerCase().contains(trimmedParameter);","lastModifiedDate":"2021-10-19"},{"lineNumber":151,"author":{"gitId":"EricBryann"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":152,"author":{"gitId":"EricBryann"},"content":"        if (parameter.startsWith(PARAMETER_ADDRESS)) {","lastModifiedDate":"2021-10-19"},{"lineNumber":153,"author":{"gitId":"EricBryann"},"content":"            return getResidentialAddress().toLowerCase().contains(trimmedParameter);","lastModifiedDate":"2021-10-19"},{"lineNumber":154,"author":{"gitId":"EricBryann"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":155,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":156,"author":{"gitId":"EricBryann"},"content":"        return false;","lastModifiedDate":"2021-10-19"},{"lineNumber":157,"author":{"gitId":"EricBryann"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":158,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":159,"author":{"gitId":"CrimsonTitan79"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":160,"author":{"gitId":"CrimsonTitan79"},"content":"     * Return \"X\" if parameter \u003d\u003d null || parameter.isBlank(), otherwise return parameter itself","lastModifiedDate":"2021-10-08"},{"lineNumber":161,"author":{"gitId":"CrimsonTitan79"},"content":"     *","lastModifiedDate":"2021-10-08"},{"lineNumber":162,"author":{"gitId":"CrimsonTitan79"},"content":"     * @param parameter an attribute of a person","lastModifiedDate":"2021-10-08"},{"lineNumber":163,"author":{"gitId":"CrimsonTitan79"},"content":"     * @return \"X\" if parameter \u003d\u003d null || parameter.isBlank(), otherwise return parameter itself","lastModifiedDate":"2021-10-08"},{"lineNumber":164,"author":{"gitId":"CrimsonTitan79"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":165,"author":{"gitId":"CrimsonTitan79"},"content":"    protected String setAsStorageParameterOrNull(String parameter) {","lastModifiedDate":"2021-10-08"},{"lineNumber":166,"author":{"gitId":"CrimsonTitan79"},"content":"        return (parameter \u003d\u003d null || parameter.isBlank()) ? \"X\" : parameter;","lastModifiedDate":"2021-10-08"},{"lineNumber":167,"author":{"gitId":"CrimsonTitan79"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":168,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":169,"author":{"gitId":"EricBryann"},"content":"    private String formattedAttribute(String attribute, int outputLength) {","lastModifiedDate":"2021-10-19"},{"lineNumber":170,"author":{"gitId":"EricBryann"},"content":"        int attributeLength \u003d attribute.length();","lastModifiedDate":"2021-10-19"},{"lineNumber":171,"author":{"gitId":"EricBryann"},"content":"        String output \u003d attribute;","lastModifiedDate":"2021-10-19"},{"lineNumber":172,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":173,"author":{"gitId":"EricBryann"},"content":"        if (attributeLength \u003e outputLength) {","lastModifiedDate":"2021-10-19"},{"lineNumber":174,"author":{"gitId":"EricBryann"},"content":"            output \u003d output.substring(0, outputLength - 3) + \"...\";","lastModifiedDate":"2021-10-19"},{"lineNumber":175,"author":{"gitId":"EricBryann"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":176,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":177,"author":{"gitId":"EricBryann"},"content":"        int remainingLength \u003d outputLength - attributeLength;","lastModifiedDate":"2021-10-19"},{"lineNumber":178,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":179,"author":{"gitId":"EricBryann"},"content":"        for (int i \u003d 0; i \u003c remainingLength; i++) {","lastModifiedDate":"2021-10-19"},{"lineNumber":180,"author":{"gitId":"EricBryann"},"content":"            output +\u003d SPACE;","lastModifiedDate":"2021-10-19"},{"lineNumber":181,"author":{"gitId":"EricBryann"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":182,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":183,"author":{"gitId":"EricBryann"},"content":"        return output;","lastModifiedDate":"2021-10-19"},{"lineNumber":184,"author":{"gitId":"EricBryann"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":185,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":186,"author":{"gitId":"EricBryann"},"content":"    private String getFormattedPersonId() {","lastModifiedDate":"2021-10-19"},{"lineNumber":187,"author":{"gitId":"EricBryann"},"content":"        return formattedAttribute(Integer.toString(personId), LENGTH_ID_COLUMN);","lastModifiedDate":"2021-10-19"},{"lineNumber":188,"author":{"gitId":"EricBryann"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":189,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":190,"author":{"gitId":"EricBryann"},"content":"    private String getFormattedIcNumber() {","lastModifiedDate":"2021-10-19"},{"lineNumber":191,"author":{"gitId":"EricBryann"},"content":"        return formattedAttribute(icNumber, LENGTH_IC_COLUMN);","lastModifiedDate":"2021-10-19"},{"lineNumber":192,"author":{"gitId":"EricBryann"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":193,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":194,"author":{"gitId":"EricBryann"},"content":"    private String getFormattedName() {","lastModifiedDate":"2021-10-19"},{"lineNumber":195,"author":{"gitId":"EricBryann"},"content":"        return formattedAttribute(name, LENGTH_NAME_COLUMN);","lastModifiedDate":"2021-10-19"},{"lineNumber":196,"author":{"gitId":"EricBryann"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":197,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":198,"author":{"gitId":"EricBryann"},"content":"    private String getFormattedPhoneNumber() {","lastModifiedDate":"2021-10-19"},{"lineNumber":199,"author":{"gitId":"EricBryann"},"content":"        return formattedAttribute(phoneNumber, LENGTH_PHONE_NUM_COLUMN);","lastModifiedDate":"2021-10-19"},{"lineNumber":200,"author":{"gitId":"EricBryann"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":201,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":202,"author":{"gitId":"EricBryann"},"content":"    private String getFormattedEmail() {","lastModifiedDate":"2021-10-19"},{"lineNumber":203,"author":{"gitId":"EricBryann"},"content":"        return formattedAttribute(emailAddress, LENGTH_EMAIL_COLUMN);","lastModifiedDate":"2021-10-19"},{"lineNumber":204,"author":{"gitId":"EricBryann"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":205,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":206,"author":{"gitId":"EricBryann"},"content":"    private String getFormattedAddress() {","lastModifiedDate":"2021-10-19"},{"lineNumber":207,"author":{"gitId":"EricBryann"},"content":"        return formattedAttribute(residentialAddress, LENGTH_ADDRESS_COLUMN);","lastModifiedDate":"2021-10-19"},{"lineNumber":208,"author":{"gitId":"EricBryann"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":209,"author":{"gitId":"justinfidelis"},"content":"}","lastModifiedDate":"2021-09-30"}],"authorContributionMap":{"justinfidelis":61,"CrimsonTitan79":29,"EricBryann":110,"Kureans":9}},{"path":"src/main/java/medbot/person/PersonType.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"justinfidelis"},"content":"package medbot.person;","lastModifiedDate":"2021-09-30"},{"lineNumber":2,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":3,"author":{"gitId":"justinfidelis"},"content":"public enum PersonType {","lastModifiedDate":"2021-09-30"},{"lineNumber":4,"author":{"gitId":"Kureans"},"content":"    PATIENT, STAFF","lastModifiedDate":"2021-10-16"},{"lineNumber":5,"author":{"gitId":"justinfidelis"},"content":"}","lastModifiedDate":"2021-09-30"}],"authorContributionMap":{"justinfidelis":4,"Kureans":1}},{"path":"src/main/java/medbot/person/Staff.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Kureans"},"content":"package medbot.person;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":3,"author":{"gitId":"Kureans"},"content":"public class Staff extends Person {","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":5,"author":{"gitId":"Kureans"},"content":"    public Staff() {","lastModifiedDate":"2021-10-16"},{"lineNumber":6,"author":{"gitId":"Kureans"},"content":"        super.personType \u003d PersonType.STAFF;","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"Kureans"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":8,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":9,"author":{"gitId":"jushg"},"content":"    @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"Kureans"},"content":"    public String toString() {","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"jushg"},"content":"        return \"Staff ID: \" + getPersonId() + \" \" + super.toString();","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"Kureans"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"Kureans"},"content":"}","lastModifiedDate":"2021-10-16"}],"authorContributionMap":{"jushg":2,"Kureans":11}},{"path":"src/main/java/medbot/utilities/Pair.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"CrimsonTitan79"},"content":"package medbot.utilities;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"CrimsonTitan79"},"content":"public class Pair\u003cX, Y\u003e {","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"CrimsonTitan79"},"content":"    public final X first;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"CrimsonTitan79"},"content":"    public final Y second;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"CrimsonTitan79"},"content":"    public Pair(X x, Y y) {","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"CrimsonTitan79"},"content":"        this.first \u003d x;","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"CrimsonTitan79"},"content":"        this.second \u003d y;","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"CrimsonTitan79"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"CrimsonTitan79"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"CrimsonTitan79":11}},{"path":"src/main/java/medbot/utilities/ViewType.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Kureans"},"content":"package medbot.utilities;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":3,"author":{"gitId":"Kureans"},"content":"public enum ViewType {","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"justinfidelis"},"content":"    PATIENT_INFO, SCHEDULER, MEDICAL_STAFF_INFO;","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"justinfidelis"},"content":"    public static ViewType getNextView(ViewType viewType) {","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"justinfidelis"},"content":"        switch (viewType) {","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"justinfidelis"},"content":"        case PATIENT_INFO:","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"justinfidelis"},"content":"            return ViewType.MEDICAL_STAFF_INFO;","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"justinfidelis"},"content":"        case MEDICAL_STAFF_INFO:","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"justinfidelis"},"content":"            return ViewType.SCHEDULER;","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"justinfidelis"},"content":"        default:","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"justinfidelis"},"content":"            return ViewType.PATIENT_INFO;","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"justinfidelis"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"Kureans"},"content":"}","lastModifiedDate":"2021-10-16"}],"authorContributionMap":{"justinfidelis":12,"Kureans":4}},{"path":"src/test/java/medbot/MedBotTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"justinfidelis"},"content":"package medbot;","lastModifiedDate":"2021-09-30"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"EricBryann"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"justinfidelis"},"content":"class MedBotTest {","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2020-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public void sampleTest() {","lastModifiedDate":"2020-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"        assertTrue(true);","lastModifiedDate":"2020-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"justinfidelis":2,"-":8,"EricBryann":2}},{"path":"src/test/java/medbot/ParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"justinfidelis"},"content":"package medbot;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"EricBryann"},"content":"import medbot.person.Patient;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"EricBryann"},"content":"import medbot.person.Person;","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"justinfidelis"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"justinfidelis"},"content":"import java.lang.reflect.InvocationTargetException;","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"justinfidelis"},"content":"import java.lang.reflect.Method;","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"EricBryann"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"justinfidelis"},"content":"class ParserTest {","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"EricBryann"},"content":"    private static final String ENDLINE \u003d System.lineSeparator();","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"justinfidelis"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"justinfidelis"},"content":"    public void testParseEmailAddress() throws Exception {","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"justinfidelis"},"content":"        String[][] testEmails \u003d {","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"justinfidelis"},"content":"                {\"johntan@example.com\", \"johntan@example.com\"},","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"justinfidelis"},"content":"                {\"johntan@example.com.sg\", \"johntan@example.com.sg\"},","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"justinfidelis"},"content":"                {\"johntan2@example.com\", \"johntan2@example.com\"},","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"justinfidelis"},"content":"                {\"john_tan@example.com\", \"john_tan@example.com\"},","lastModifiedDate":"2021-10-06"},{"lineNumber":22,"author":{"gitId":"justinfidelis"},"content":"                {\"john.tan@example.com\", \"john.tan@example.com\"},","lastModifiedDate":"2021-10-06"},{"lineNumber":23,"author":{"gitId":"justinfidelis"},"content":"                {\" johntan@example.com \", \"johntan@example.com\"},","lastModifiedDate":"2021-10-06"},{"lineNumber":24,"author":{"gitId":"justinfidelis"},"content":"                {\"   \", \"Email address not specified.\" + ENDLINE},","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"justinfidelis"},"content":"                {\"johntan_@example.com\", \"Incorrect email address format.\" + ENDLINE},","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"justinfidelis"},"content":"                {\"_johntan@example.com\", \"Incorrect email address format.\" + ENDLINE},","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"justinfidelis"},"content":"                {\"johntan@example\", \"Incorrect email address format.\" + ENDLINE}","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"justinfidelis"},"content":"        };","lastModifiedDate":"2021-10-06"},{"lineNumber":29,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":30,"author":{"gitId":"justinfidelis"},"content":"        Method method \u003d Parser.class.getDeclaredMethod(\"parseEmailAddress\", String.class);","lastModifiedDate":"2021-10-06"},{"lineNumber":31,"author":{"gitId":"justinfidelis"},"content":"        method.setAccessible(true);","lastModifiedDate":"2021-10-06"},{"lineNumber":32,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":33,"author":{"gitId":"justinfidelis"},"content":"        for (String[] testEmail : testEmails) {","lastModifiedDate":"2021-10-06"},{"lineNumber":34,"author":{"gitId":"justinfidelis"},"content":"            try {","lastModifiedDate":"2021-10-06"},{"lineNumber":35,"author":{"gitId":"justinfidelis"},"content":"                assertEquals(testEmail[1], method.invoke(method, testEmail[0]));","lastModifiedDate":"2021-10-06"},{"lineNumber":36,"author":{"gitId":"justinfidelis"},"content":"            } catch (InvocationTargetException e) {","lastModifiedDate":"2021-10-06"},{"lineNumber":37,"author":{"gitId":"justinfidelis"},"content":"                assertEquals(testEmail[1], e.getTargetException().getMessage());","lastModifiedDate":"2021-10-06"},{"lineNumber":38,"author":{"gitId":"justinfidelis"},"content":"            }","lastModifiedDate":"2021-10-06"},{"lineNumber":39,"author":{"gitId":"justinfidelis"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":40,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":41,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":42,"author":{"gitId":"justinfidelis"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":43,"author":{"gitId":"justinfidelis"},"content":"    public void testParsePhoneNumber() throws Exception {","lastModifiedDate":"2021-10-06"},{"lineNumber":44,"author":{"gitId":"justinfidelis"},"content":"        String[][] testPhoneNumbers \u003d {","lastModifiedDate":"2021-10-06"},{"lineNumber":45,"author":{"gitId":"justinfidelis"},"content":"                {\"81234567\", \"81234567\"},","lastModifiedDate":"2021-10-06"},{"lineNumber":46,"author":{"gitId":"justinfidelis"},"content":"                {\"8123 4567\", \"81234567\"},","lastModifiedDate":"2021-10-06"},{"lineNumber":47,"author":{"gitId":"justinfidelis"},"content":"                {\"8123_4567\", \"81234567\"},","lastModifiedDate":"2021-10-06"},{"lineNumber":48,"author":{"gitId":"justinfidelis"},"content":"                {\"8123456\", \"Phone number has too few digits.\" + ENDLINE},","lastModifiedDate":"2021-10-20"},{"lineNumber":49,"author":{"gitId":"justinfidelis"},"content":"                {\"812345678\", \"Phone number has too many digits.\" + ENDLINE},","lastModifiedDate":"2021-10-20"},{"lineNumber":50,"author":{"gitId":"justinfidelis"},"content":"                {\"   \", \"Phone number not specified.\" + ENDLINE},","lastModifiedDate":"2021-10-20"},{"lineNumber":51,"author":{"gitId":"justinfidelis"},"content":"                {\"8123456A\", \"Phone number contains unexpected characters.\" + ENDLINE},","lastModifiedDate":"2021-10-20"},{"lineNumber":52,"author":{"gitId":"justinfidelis"},"content":"        };","lastModifiedDate":"2021-10-06"},{"lineNumber":53,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":54,"author":{"gitId":"justinfidelis"},"content":"        Method method \u003d Parser.class.getDeclaredMethod(\"parsePhoneNumber\", String.class);","lastModifiedDate":"2021-10-06"},{"lineNumber":55,"author":{"gitId":"justinfidelis"},"content":"        method.setAccessible(true);","lastModifiedDate":"2021-10-06"},{"lineNumber":56,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":57,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":58,"author":{"gitId":"justinfidelis"},"content":"        for (String[] testPhoneNumber : testPhoneNumbers) {","lastModifiedDate":"2021-10-06"},{"lineNumber":59,"author":{"gitId":"justinfidelis"},"content":"            try {","lastModifiedDate":"2021-10-06"},{"lineNumber":60,"author":{"gitId":"justinfidelis"},"content":"                assertEquals(testPhoneNumber[1], method.invoke(method, testPhoneNumber[0]));","lastModifiedDate":"2021-10-06"},{"lineNumber":61,"author":{"gitId":"justinfidelis"},"content":"            } catch (InvocationTargetException e) {","lastModifiedDate":"2021-10-06"},{"lineNumber":62,"author":{"gitId":"justinfidelis"},"content":"                assertEquals(testPhoneNumber[1], e.getTargetException().getMessage());","lastModifiedDate":"2021-10-06"},{"lineNumber":63,"author":{"gitId":"justinfidelis"},"content":"            }","lastModifiedDate":"2021-10-06"},{"lineNumber":64,"author":{"gitId":"justinfidelis"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":65,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":66,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":67,"author":{"gitId":"justinfidelis"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":68,"author":{"gitId":"justinfidelis"},"content":"    public void testParseName() throws Exception {","lastModifiedDate":"2021-10-06"},{"lineNumber":69,"author":{"gitId":"justinfidelis"},"content":"        Method method \u003d Parser.class.getDeclaredMethod(\"parseName\", String.class);","lastModifiedDate":"2021-10-06"},{"lineNumber":70,"author":{"gitId":"justinfidelis"},"content":"        method.setAccessible(true);","lastModifiedDate":"2021-10-06"},{"lineNumber":71,"author":{"gitId":"justinfidelis"},"content":"        String[][] testNames \u003d {","lastModifiedDate":"2021-10-06"},{"lineNumber":72,"author":{"gitId":"justinfidelis"},"content":"                {\"John Tan\", \"John Tan\"},","lastModifiedDate":"2021-10-06"},{"lineNumber":73,"author":{"gitId":"justinfidelis"},"content":"                {\"john tan\", \"John Tan\"},","lastModifiedDate":"2021-10-06"},{"lineNumber":74,"author":{"gitId":"justinfidelis"},"content":"                {\"john-tan\", \"John-Tan\"},","lastModifiedDate":"2021-10-06"},{"lineNumber":75,"author":{"gitId":"justinfidelis"},"content":"                {\"JOHN TAN\", \"John Tan\"},","lastModifiedDate":"2021-10-06"},{"lineNumber":76,"author":{"gitId":"justinfidelis"},"content":"                {\"   \", \"Name not specified.\" + ENDLINE}","lastModifiedDate":"2021-10-20"},{"lineNumber":77,"author":{"gitId":"justinfidelis"},"content":"        };","lastModifiedDate":"2021-10-06"},{"lineNumber":78,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":79,"author":{"gitId":"justinfidelis"},"content":"        for (String[] testName : testNames) {","lastModifiedDate":"2021-10-06"},{"lineNumber":80,"author":{"gitId":"justinfidelis"},"content":"            try {","lastModifiedDate":"2021-10-06"},{"lineNumber":81,"author":{"gitId":"justinfidelis"},"content":"                assertEquals(testName[1], method.invoke(method, testName[0]));","lastModifiedDate":"2021-10-06"},{"lineNumber":82,"author":{"gitId":"justinfidelis"},"content":"            } catch (InvocationTargetException e) {","lastModifiedDate":"2021-10-06"},{"lineNumber":83,"author":{"gitId":"justinfidelis"},"content":"                assertEquals(testName[1], e.getTargetException().getMessage());","lastModifiedDate":"2021-10-06"},{"lineNumber":84,"author":{"gitId":"justinfidelis"},"content":"            }","lastModifiedDate":"2021-10-06"},{"lineNumber":85,"author":{"gitId":"justinfidelis"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":86,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":87,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":88,"author":{"gitId":"jushg"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":89,"author":{"gitId":"jushg"},"content":"    public void testParseIcNumber() throws Exception {","lastModifiedDate":"2021-10-07"},{"lineNumber":90,"author":{"gitId":"jushg"},"content":"        Method method \u003d Parser.class.getDeclaredMethod(\"parseIcNumber\", String.class);","lastModifiedDate":"2021-10-07"},{"lineNumber":91,"author":{"gitId":"jushg"},"content":"        method.setAccessible(true);","lastModifiedDate":"2021-10-07"},{"lineNumber":92,"author":{"gitId":"jushg"},"content":"        String[][] testIcNumbers \u003d {","lastModifiedDate":"2021-10-07"},{"lineNumber":93,"author":{"gitId":"jushg"},"content":"                {\"S1234567A\", \"S1234567A\"},","lastModifiedDate":"2021-10-07"},{"lineNumber":94,"author":{"gitId":"jushg"},"content":"                {\"F1234567A\", \"F1234567A\"},","lastModifiedDate":"2021-10-07"},{"lineNumber":95,"author":{"gitId":"justinfidelis"},"content":"                {\"Z1234567A\", \"Incorrect IC number format.\" + ENDLINE},","lastModifiedDate":"2021-10-20"},{"lineNumber":96,"author":{"gitId":"justinfidelis"},"content":"                {\"F1234567\", \"Incorrect IC number format.\" + ENDLINE},","lastModifiedDate":"2021-10-20"},{"lineNumber":97,"author":{"gitId":"justinfidelis"},"content":"                {\"F1234A\", \"Incorrect IC number format.\" + ENDLINE},","lastModifiedDate":"2021-10-20"},{"lineNumber":98,"author":{"gitId":"justinfidelis"},"content":"                {\"   \", \"IC number not specified.\" + ENDLINE},","lastModifiedDate":"2021-10-20"},{"lineNumber":99,"author":{"gitId":"justinfidelis"},"content":"                {\"1234567A\", \"Incorrect IC number format.\" + ENDLINE}","lastModifiedDate":"2021-10-20"},{"lineNumber":100,"author":{"gitId":"jushg"},"content":"        };","lastModifiedDate":"2021-10-07"},{"lineNumber":101,"author":{"gitId":"jushg"},"content":"        for (String[] testIcNumber : testIcNumbers) {","lastModifiedDate":"2021-10-07"},{"lineNumber":102,"author":{"gitId":"jushg"},"content":"            try {","lastModifiedDate":"2021-10-07"},{"lineNumber":103,"author":{"gitId":"jushg"},"content":"                assertEquals(testIcNumber[1], method.invoke(method, testIcNumber[0]));","lastModifiedDate":"2021-10-07"},{"lineNumber":104,"author":{"gitId":"jushg"},"content":"            } catch (InvocationTargetException e) {","lastModifiedDate":"2021-10-07"},{"lineNumber":105,"author":{"gitId":"jushg"},"content":"                assertEquals(testIcNumber[1], e.getTargetException().getMessage());","lastModifiedDate":"2021-10-07"},{"lineNumber":106,"author":{"gitId":"jushg"},"content":"            }","lastModifiedDate":"2021-10-07"},{"lineNumber":107,"author":{"gitId":"jushg"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":108,"author":{"gitId":"jushg"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":109,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":110,"author":{"gitId":"jushg"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":111,"author":{"gitId":"jushg"},"content":"    void testParseResidentialAddress() throws Exception {","lastModifiedDate":"2021-10-07"},{"lineNumber":112,"author":{"gitId":"jushg"},"content":"        Method method \u003d Parser.class.getDeclaredMethod(\"parseResidentialAddress\", String.class);","lastModifiedDate":"2021-10-07"},{"lineNumber":113,"author":{"gitId":"jushg"},"content":"        method.setAccessible(true);","lastModifiedDate":"2021-10-07"},{"lineNumber":114,"author":{"gitId":"jushg"},"content":"        String[][] testResidentialAddresses \u003d {","lastModifiedDate":"2021-10-07"},{"lineNumber":115,"author":{"gitId":"jushg"},"content":"                {\"12 Lower Kent Ridge\", \"12 Lower Kent Ridge\"},","lastModifiedDate":"2021-10-07"},{"lineNumber":116,"author":{"gitId":"jushg"},"content":"                {\"12 lower kent ridge\", \"12 Lower Kent Ridge\"},","lastModifiedDate":"2021-10-07"},{"lineNumber":117,"author":{"gitId":"jushg"},"content":"                {\"12 LOWER KENT RIDGE\", \"12 Lower Kent Ridge\"},","lastModifiedDate":"2021-10-07"},{"lineNumber":118,"author":{"gitId":"justinfidelis"},"content":"                {\"   \", \"Address not specified.\" + ENDLINE}","lastModifiedDate":"2021-10-20"},{"lineNumber":119,"author":{"gitId":"jushg"},"content":"        };","lastModifiedDate":"2021-10-07"},{"lineNumber":120,"author":{"gitId":"jushg"},"content":"        for (String[] testResidentialAddress : testResidentialAddresses) {","lastModifiedDate":"2021-10-07"},{"lineNumber":121,"author":{"gitId":"jushg"},"content":"            try {","lastModifiedDate":"2021-10-07"},{"lineNumber":122,"author":{"gitId":"jushg"},"content":"                assertEquals(testResidentialAddress[1], method.invoke(method, testResidentialAddress[0]));","lastModifiedDate":"2021-10-07"},{"lineNumber":123,"author":{"gitId":"jushg"},"content":"            } catch (InvocationTargetException e) {","lastModifiedDate":"2021-10-07"},{"lineNumber":124,"author":{"gitId":"jushg"},"content":"                assertEquals(testResidentialAddress[1], e.getTargetException().getMessage());","lastModifiedDate":"2021-10-07"},{"lineNumber":125,"author":{"gitId":"jushg"},"content":"            }","lastModifiedDate":"2021-10-07"},{"lineNumber":126,"author":{"gitId":"jushg"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":127,"author":{"gitId":"jushg"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":128,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":129,"author":{"gitId":"justinfidelis"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":130,"author":{"gitId":"justinfidelis"},"content":"    void testPreprocessMultiAttributeInput() throws Exception {","lastModifiedDate":"2021-10-13"},{"lineNumber":131,"author":{"gitId":"justinfidelis"},"content":"        Method method \u003d Parser.class.getDeclaredMethod(\"preprocessMultiAttributeInput\", String.class);","lastModifiedDate":"2021-10-13"},{"lineNumber":132,"author":{"gitId":"justinfidelis"},"content":"        method.setAccessible(true);","lastModifiedDate":"2021-10-13"},{"lineNumber":133,"author":{"gitId":"justinfidelis"},"content":"        String[][] testInputStrings \u003d {","lastModifiedDate":"2021-10-13"},{"lineNumber":134,"author":{"gitId":"justinfidelis"},"content":"                {\"add n/John Tan i/S8712345G e/john@gmail.com p/8123 4567 a/123 bishan st 24 #05-19\",","lastModifiedDate":"2021-10-13"},{"lineNumber":135,"author":{"gitId":"justinfidelis"},"content":"                \"add |n/John Tan |i/S8712345G |e/john@gmail.com |p/8123 4567 |a/123 bishan st 24 #05-19\"},","lastModifiedDate":"2021-10-13"},{"lineNumber":136,"author":{"gitId":"justinfidelis"},"content":"                {\"add n/joe ong e/joe@gmail.com a/123 Bishan st 24 #05-19 \",","lastModifiedDate":"2021-10-13"},{"lineNumber":137,"author":{"gitId":"justinfidelis"},"content":"                \"add |n/joe ong |e/joe@gmail.com |a/123 Bishan st 24 #05-19 \"},","lastModifiedDate":"2021-10-13"},{"lineNumber":138,"author":{"gitId":"justinfidelis"},"content":"                {\"add   n/Tim lee   e/tim_lee@gmail.com.sg   a/123 queenstown ave 6 #05-19 \",","lastModifiedDate":"2021-10-13"},{"lineNumber":139,"author":{"gitId":"justinfidelis"},"content":"                \"add   |n/Tim lee   |e/tim_lee@gmail.com.sg   |a/123 queenstown ave 6 #05-19 \"},","lastModifiedDate":"2021-10-13"},{"lineNumber":140,"author":{"gitId":"justinfidelis"},"content":"                {\"add i/S8712345G \",","lastModifiedDate":"2021-10-13"},{"lineNumber":141,"author":{"gitId":"justinfidelis"},"content":"                \"add |i/S8712345G \"}","lastModifiedDate":"2021-10-13"},{"lineNumber":142,"author":{"gitId":"justinfidelis"},"content":"        };","lastModifiedDate":"2021-10-13"},{"lineNumber":143,"author":{"gitId":"justinfidelis"},"content":"        for (String[] testInputString : testInputStrings) {","lastModifiedDate":"2021-10-13"},{"lineNumber":144,"author":{"gitId":"justinfidelis"},"content":"            assertEquals(testInputString[1], method.invoke(method, testInputString[0]));","lastModifiedDate":"2021-10-13"},{"lineNumber":145,"author":{"gitId":"justinfidelis"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":146,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":147,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":148,"author":{"gitId":"justinfidelis"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":149,"author":{"gitId":"justinfidelis"},"content":"    void testUpdateMultiplePersonalInformation() throws Exception {","lastModifiedDate":"2021-10-13"},{"lineNumber":150,"author":{"gitId":"justinfidelis"},"content":"        Method method \u003d Parser.class.getDeclaredMethod(\"updateMultiplePersonalInformation\", Person.class,","lastModifiedDate":"2021-10-13"},{"lineNumber":151,"author":{"gitId":"justinfidelis"},"content":"                String[].class);","lastModifiedDate":"2021-10-13"},{"lineNumber":152,"author":{"gitId":"justinfidelis"},"content":"        method.setAccessible(true);","lastModifiedDate":"2021-10-13"},{"lineNumber":153,"author":{"gitId":"justinfidelis"},"content":"        Patient patient \u003d new Patient();","lastModifiedDate":"2021-10-13"},{"lineNumber":154,"author":{"gitId":"justinfidelis"},"content":"        String[] attributeStrings \u003d {\"n/John tan  \", \"i/S8712345G  \", \"e/john_tan@gmail.com \", \"p/8123 4567\",","lastModifiedDate":"2021-10-13"},{"lineNumber":155,"author":{"gitId":"justinfidelis"},"content":"                                     \"a/123 bishan st 24 #05-19  \"};","lastModifiedDate":"2021-10-13"},{"lineNumber":156,"author":{"gitId":"justinfidelis"},"content":"        method.invoke(method, patient, attributeStrings);","lastModifiedDate":"2021-10-13"},{"lineNumber":157,"author":{"gitId":"justinfidelis"},"content":"        assertEquals(patient.getName(), \"John Tan\");","lastModifiedDate":"2021-10-13"},{"lineNumber":158,"author":{"gitId":"justinfidelis"},"content":"        assertEquals(patient.getIcNumber(), \"S8712345G\");","lastModifiedDate":"2021-10-13"},{"lineNumber":159,"author":{"gitId":"justinfidelis"},"content":"        assertEquals(patient.getEmailAddress(), \"john_tan@gmail.com\");","lastModifiedDate":"2021-10-13"},{"lineNumber":160,"author":{"gitId":"justinfidelis"},"content":"        assertEquals(patient.getPhoneNumber(), \"81234567\");","lastModifiedDate":"2021-10-13"},{"lineNumber":161,"author":{"gitId":"justinfidelis"},"content":"        assertEquals(patient.getResidentialAddress(), \"123 Bishan St 24 #05-19\");","lastModifiedDate":"2021-10-13"},{"lineNumber":162,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":163,"author":{"gitId":"justinfidelis"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"justinfidelis":122,"jushg":35,"EricBryann":6}},{"path":"src/test/java/medbot/StorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"CrimsonTitan79"},"content":"package medbot;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"CrimsonTitan79"},"content":"import static medbot.Parser.updatePersonalInformation;","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"justinfidelis"},"content":"import medbot.exceptions.MedBotException;","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"jushg"},"content":"import medbot.list.PatientList;","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"CrimsonTitan79"},"content":"import medbot.person.Patient;","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"CrimsonTitan79"},"content":"import java.io.File;","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"CrimsonTitan79"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"CrimsonTitan79"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"CrimsonTitan79"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"CrimsonTitan79"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"CrimsonTitan79"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"CrimsonTitan79"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"CrimsonTitan79"},"content":"class StorageTest {","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"CrimsonTitan79"},"content":"    private static final String INVALID_TEST_DATA \u003d \"src/test/data/StorageTest/invalidData.txt\";","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"CrimsonTitan79"},"content":"    private static final String VALID_TEST_DATA \u003d \"src/test/data/StorageTest/validData.txt\";","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"CrimsonTitan79"},"content":"    private static final String SAVED_TEST_DATA \u003d \"src/test/data/StorageTest/savedData.txt\";","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"CrimsonTitan79"},"content":"    private static final String NON_EXISTENT_FILE_NAME \u003d \"NON_EXISTENT_FILE.txt\";","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"CrimsonTitan79"},"content":"    private static final String ERROR_INVALID_STORAGE_LINE_INSTRUCTION \u003d \"\\n\\n\"","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"CrimsonTitan79"},"content":"            + \"Please decide if you wish to:\" + \"\\n\"","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"CrimsonTitan79"},"content":"            + \"1. Enter \u0027exit\u0027 to exit Medbot to correct the storage file\" + \"\\n\"","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"CrimsonTitan79"},"content":"            + \"2. Enter other valid commands to OVERWRITE all invalid data!\" + \"\\n\";","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"CrimsonTitan79"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":31,"author":{"gitId":"CrimsonTitan79"},"content":"    public void testConstructor_nullFilePath_exceptionThrown() {","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"CrimsonTitan79"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Storage(null));","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"CrimsonTitan79"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":34,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":35,"author":{"gitId":"CrimsonTitan79"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":36,"author":{"gitId":"CrimsonTitan79"},"content":"    public void testConstructor_invalidFilePath_exceptionThrown() {","lastModifiedDate":"2021-10-13"},{"lineNumber":37,"author":{"gitId":"CrimsonTitan79"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Storage(NON_EXISTENT_FILE_NAME));","lastModifiedDate":"2021-10-10"},{"lineNumber":38,"author":{"gitId":"CrimsonTitan79"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":39,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":40,"author":{"gitId":"CrimsonTitan79"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":41,"author":{"gitId":"CrimsonTitan79"},"content":"    public void testLoadStorage_partialInvalidFormat_exceptionThrown() throws MedBotException, FileNotFoundException {","lastModifiedDate":"2021-10-13"},{"lineNumber":42,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":43,"author":{"gitId":"CrimsonTitan79"},"content":"        Storage storage \u003d new Storage(INVALID_TEST_DATA);","lastModifiedDate":"2021-10-10"},{"lineNumber":44,"author":{"gitId":"CrimsonTitan79"},"content":"        PatientList actualPl \u003d new PatientList();","lastModifiedDate":"2021-10-10"},{"lineNumber":45,"author":{"gitId":"CrimsonTitan79"},"content":"        PatientList expectedPl \u003d getTestPatientList();","lastModifiedDate":"2021-10-10"},{"lineNumber":46,"author":{"gitId":"CrimsonTitan79"},"content":"        String expectedLoadStorageErrorMessage \u003d","lastModifiedDate":"2021-10-10"},{"lineNumber":47,"author":{"gitId":"CrimsonTitan79"},"content":"                \"Error: Line 8 of storage/data.txt is invalid!\\n\"","lastModifiedDate":"2021-10-13"},{"lineNumber":48,"author":{"gitId":"CrimsonTitan79"},"content":"                        + \"Error: Line 9 of storage/data.txt is invalid!\\n\"","lastModifiedDate":"2021-10-13"},{"lineNumber":49,"author":{"gitId":"CrimsonTitan79"},"content":"                        + \"Error: Line 10 of storage/data.txt is invalid!\\n\"","lastModifiedDate":"2021-10-13"},{"lineNumber":50,"author":{"gitId":"CrimsonTitan79"},"content":"                        + \"Error: Line 11 of storage/data.txt is invalid!\\n\"","lastModifiedDate":"2021-10-13"},{"lineNumber":51,"author":{"gitId":"CrimsonTitan79"},"content":"                        + ERROR_INVALID_STORAGE_LINE_INSTRUCTION;","lastModifiedDate":"2021-10-13"},{"lineNumber":52,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":53,"author":{"gitId":"CrimsonTitan79"},"content":"        //Test for both correct error message and correct loading of storage","lastModifiedDate":"2021-10-10"},{"lineNumber":54,"author":{"gitId":"CrimsonTitan79"},"content":"        assertEquals(expectedLoadStorageErrorMessage, storage.loadStorage(actualPl));","lastModifiedDate":"2021-10-10"},{"lineNumber":55,"author":{"gitId":"CrimsonTitan79"},"content":"        assertEquals(expectedPl.getStorageString(), actualPl.getStorageString());","lastModifiedDate":"2021-10-10"},{"lineNumber":56,"author":{"gitId":"CrimsonTitan79"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":57,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":58,"author":{"gitId":"CrimsonTitan79"},"content":"    // expected: patients added through the program","lastModifiedDate":"2021-10-10"},{"lineNumber":59,"author":{"gitId":"CrimsonTitan79"},"content":"    // actual: patients added through loading storage","lastModifiedDate":"2021-10-10"},{"lineNumber":60,"author":{"gitId":"CrimsonTitan79"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":61,"author":{"gitId":"CrimsonTitan79"},"content":"    public void testLoadStorage_validFormat() throws FileNotFoundException, MedBotException {","lastModifiedDate":"2021-10-13"},{"lineNumber":62,"author":{"gitId":"CrimsonTitan79"},"content":"        Storage storage \u003d new Storage(VALID_TEST_DATA);","lastModifiedDate":"2021-10-10"},{"lineNumber":63,"author":{"gitId":"CrimsonTitan79"},"content":"        PatientList actualPl \u003d new PatientList();","lastModifiedDate":"2021-10-10"},{"lineNumber":64,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":65,"author":{"gitId":"CrimsonTitan79"},"content":"        storage.loadStorage(actualPl);","lastModifiedDate":"2021-10-10"},{"lineNumber":66,"author":{"gitId":"CrimsonTitan79"},"content":"        PatientList expectedPl \u003d getTestPatientList();","lastModifiedDate":"2021-10-10"},{"lineNumber":67,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":68,"author":{"gitId":"CrimsonTitan79"},"content":"        // ensure storage data is properly loaded into the program","lastModifiedDate":"2021-10-13"},{"lineNumber":69,"author":{"gitId":"CrimsonTitan79"},"content":"        assertEquals(expectedPl.getStorageString(), actualPl.getStorageString());","lastModifiedDate":"2021-10-10"},{"lineNumber":70,"author":{"gitId":"CrimsonTitan79"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":71,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":72,"author":{"gitId":"CrimsonTitan79"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":73,"author":{"gitId":"CrimsonTitan79"},"content":"    public void testSaveData() throws MedBotException {","lastModifiedDate":"2021-10-13"},{"lineNumber":74,"author":{"gitId":"CrimsonTitan79"},"content":"        PatientList patientList \u003d getTestPatientList();","lastModifiedDate":"2021-10-10"},{"lineNumber":75,"author":{"gitId":"CrimsonTitan79"},"content":"        Storage storage \u003d new Storage(SAVED_TEST_DATA);","lastModifiedDate":"2021-10-10"},{"lineNumber":76,"author":{"gitId":"CrimsonTitan79"},"content":"        storage.saveData(patientList);","lastModifiedDate":"2021-10-10"},{"lineNumber":77,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":78,"author":{"gitId":"CrimsonTitan79"},"content":"        try {","lastModifiedDate":"2021-10-10"},{"lineNumber":79,"author":{"gitId":"CrimsonTitan79"},"content":"            String actualFileString \u003d scanFileToString(SAVED_TEST_DATA);","lastModifiedDate":"2021-10-10"},{"lineNumber":80,"author":{"gitId":"CrimsonTitan79"},"content":"            String expectedFileString \u003d scanFileToString(VALID_TEST_DATA);","lastModifiedDate":"2021-10-10"},{"lineNumber":81,"author":{"gitId":"CrimsonTitan79"},"content":"            assertEquals(expectedFileString, actualFileString);","lastModifiedDate":"2021-10-10"},{"lineNumber":82,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":83,"author":{"gitId":"CrimsonTitan79"},"content":"            deleteSavedData();","lastModifiedDate":"2021-10-13"},{"lineNumber":84,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":85,"author":{"gitId":"CrimsonTitan79"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-10-10"},{"lineNumber":86,"author":{"gitId":"CrimsonTitan79"},"content":"            throw new MedBotException(\"FILE ERROR\");","lastModifiedDate":"2021-10-10"},{"lineNumber":87,"author":{"gitId":"CrimsonTitan79"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":88,"author":{"gitId":"CrimsonTitan79"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":89,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":90,"author":{"gitId":"CrimsonTitan79"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":91,"author":{"gitId":"CrimsonTitan79"},"content":"     * Create a test PatientList containing Patient objects.","lastModifiedDate":"2021-10-10"},{"lineNumber":92,"author":{"gitId":"CrimsonTitan79"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":93,"author":{"gitId":"CrimsonTitan79"},"content":"     * @return a test PatientList","lastModifiedDate":"2021-10-10"},{"lineNumber":94,"author":{"gitId":"CrimsonTitan79"},"content":"     * @throws MedBotException if any patient instantiation fails","lastModifiedDate":"2021-10-10"},{"lineNumber":95,"author":{"gitId":"CrimsonTitan79"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":96,"author":{"gitId":"CrimsonTitan79"},"content":"    private PatientList getTestPatientList() throws MedBotException {","lastModifiedDate":"2021-10-10"},{"lineNumber":97,"author":{"gitId":"CrimsonTitan79"},"content":"        PatientList testPatientList \u003d new PatientList();","lastModifiedDate":"2021-10-10"},{"lineNumber":98,"author":{"gitId":"CrimsonTitan79"},"content":"        Patient patient1 \u003d createPatient(1, \"S7912345A\", \"Doge\",","lastModifiedDate":"2021-10-10"},{"lineNumber":99,"author":{"gitId":"CrimsonTitan79"},"content":"                \"91234567\", \"doge@mail.com\",","lastModifiedDate":"2021-10-10"},{"lineNumber":100,"author":{"gitId":"CrimsonTitan79"},"content":"                \"Doge Town 2nd Street\");","lastModifiedDate":"2021-10-10"},{"lineNumber":101,"author":{"gitId":"CrimsonTitan79"},"content":"        Patient patient2 \u003d createPatient(2, \"\", \"Cheems\",","lastModifiedDate":"2021-10-10"},{"lineNumber":102,"author":{"gitId":"CrimsonTitan79"},"content":"                \"\", \"cheems@mail.com\",","lastModifiedDate":"2021-10-10"},{"lineNumber":103,"author":{"gitId":"CrimsonTitan79"},"content":"                \"Doge County\");","lastModifiedDate":"2021-10-10"},{"lineNumber":104,"author":{"gitId":"CrimsonTitan79"},"content":"        Patient patient3 \u003d createPatient(4, \"S2312345A\", \"\",","lastModifiedDate":"2021-10-10"},{"lineNumber":105,"author":{"gitId":"CrimsonTitan79"},"content":"                \"81234567\", \"cheems@mail.com\",","lastModifiedDate":"2021-10-10"},{"lineNumber":106,"author":{"gitId":"CrimsonTitan79"},"content":"                \"Arken Street\");","lastModifiedDate":"2021-10-10"},{"lineNumber":107,"author":{"gitId":"CrimsonTitan79"},"content":"        Patient patient4 \u003d createPatient(6, \"F9123456X\", \"Emma\",","lastModifiedDate":"2021-10-10"},{"lineNumber":108,"author":{"gitId":"CrimsonTitan79"},"content":"                \"\", \"emma@mail.com\",","lastModifiedDate":"2021-10-10"},{"lineNumber":109,"author":{"gitId":"CrimsonTitan79"},"content":"                \"Greensville County\");","lastModifiedDate":"2021-10-10"},{"lineNumber":110,"author":{"gitId":"CrimsonTitan79"},"content":"        Patient patient5 \u003d createPatient(7, \"F3232145B\", \"Norman\",","lastModifiedDate":"2021-10-10"},{"lineNumber":111,"author":{"gitId":"CrimsonTitan79"},"content":"                \"\", \"norman@mail.com\",","lastModifiedDate":"2021-10-10"},{"lineNumber":112,"author":{"gitId":"CrimsonTitan79"},"content":"                \"Petalburg City\");","lastModifiedDate":"2021-10-10"},{"lineNumber":113,"author":{"gitId":"CrimsonTitan79"},"content":"        Patient patient6 \u003d createPatient(9, \"S9145645C\", \"Arthur\",","lastModifiedDate":"2021-10-10"},{"lineNumber":114,"author":{"gitId":"CrimsonTitan79"},"content":"                \"67654321\", \"\",","lastModifiedDate":"2021-10-10"},{"lineNumber":115,"author":{"gitId":"CrimsonTitan79"},"content":"                \"Evergrande District\");","lastModifiedDate":"2021-10-10"},{"lineNumber":116,"author":{"gitId":"CrimsonTitan79"},"content":"        Patient patient7 \u003d createPatient(10, \"T0123463X\", \"William\",","lastModifiedDate":"2021-10-10"},{"lineNumber":117,"author":{"gitId":"CrimsonTitan79"},"content":"                \"\", \"will@mail.com\",","lastModifiedDate":"2021-10-10"},{"lineNumber":118,"author":{"gitId":"CrimsonTitan79"},"content":"                \"Doge County\");","lastModifiedDate":"2021-10-10"},{"lineNumber":119,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":120,"author":{"gitId":"CrimsonTitan79"},"content":"        Patient[] patients \u003d {patient1, patient2, patient3, patient4, patient5, patient6, patient7};","lastModifiedDate":"2021-10-10"},{"lineNumber":121,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":122,"author":{"gitId":"CrimsonTitan79"},"content":"        for (Patient p : patients) {","lastModifiedDate":"2021-10-10"},{"lineNumber":123,"author":{"gitId":"jushg"},"content":"            testPatientList.setLastId(p.getPersonId());","lastModifiedDate":"2021-10-19"},{"lineNumber":124,"author":{"gitId":"jushg"},"content":"            testPatientList.addPerson(p);","lastModifiedDate":"2021-10-18"},{"lineNumber":125,"author":{"gitId":"CrimsonTitan79"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":126,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":127,"author":{"gitId":"CrimsonTitan79"},"content":"        return testPatientList;","lastModifiedDate":"2021-10-10"},{"lineNumber":128,"author":{"gitId":"CrimsonTitan79"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":129,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":130,"author":{"gitId":"CrimsonTitan79"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":131,"author":{"gitId":"CrimsonTitan79"},"content":"     * Instantiate a patient object with the given parameters.","lastModifiedDate":"2021-10-10"},{"lineNumber":132,"author":{"gitId":"CrimsonTitan79"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":133,"author":{"gitId":"CrimsonTitan79"},"content":"     * @param id                 patientId","lastModifiedDate":"2021-10-10"},{"lineNumber":134,"author":{"gitId":"CrimsonTitan79"},"content":"     * @param icNumber           I/C number of patient","lastModifiedDate":"2021-10-10"},{"lineNumber":135,"author":{"gitId":"CrimsonTitan79"},"content":"     * @param name               name of patient","lastModifiedDate":"2021-10-10"},{"lineNumber":136,"author":{"gitId":"CrimsonTitan79"},"content":"     * @param phoneNumber        phone number of patient","lastModifiedDate":"2021-10-10"},{"lineNumber":137,"author":{"gitId":"CrimsonTitan79"},"content":"     * @param emailAddress       email address of patient","lastModifiedDate":"2021-10-10"},{"lineNumber":138,"author":{"gitId":"CrimsonTitan79"},"content":"     * @param residentialAddress residential address of patient","lastModifiedDate":"2021-10-10"},{"lineNumber":139,"author":{"gitId":"CrimsonTitan79"},"content":"     * @return a patient object","lastModifiedDate":"2021-10-10"},{"lineNumber":140,"author":{"gitId":"CrimsonTitan79"},"content":"     * @throws MedBotException if fail to update any patient parameters","lastModifiedDate":"2021-10-10"},{"lineNumber":141,"author":{"gitId":"CrimsonTitan79"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":142,"author":{"gitId":"CrimsonTitan79"},"content":"    private Patient createPatient(int id, String icNumber, String name,","lastModifiedDate":"2021-10-10"},{"lineNumber":143,"author":{"gitId":"CrimsonTitan79"},"content":"                                  String phoneNumber, String emailAddress,","lastModifiedDate":"2021-10-10"},{"lineNumber":144,"author":{"gitId":"CrimsonTitan79"},"content":"                                  String residentialAddress)","lastModifiedDate":"2021-10-10"},{"lineNumber":145,"author":{"gitId":"CrimsonTitan79"},"content":"            throws MedBotException {","lastModifiedDate":"2021-10-10"},{"lineNumber":146,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":147,"author":{"gitId":"CrimsonTitan79"},"content":"        Patient patient \u003d new Patient();","lastModifiedDate":"2021-10-10"},{"lineNumber":148,"author":{"gitId":"jushg"},"content":"        patient.setPersonId(id);","lastModifiedDate":"2021-10-19"},{"lineNumber":149,"author":{"gitId":"CrimsonTitan79"},"content":"        String[] parameterPrefixes \u003d {\"i/\", \"n/\", \"p/\", \"e/\", \"a/\"};","lastModifiedDate":"2021-10-10"},{"lineNumber":150,"author":{"gitId":"CrimsonTitan79"},"content":"        String[] parameters \u003d {icNumber, name, phoneNumber, emailAddress, residentialAddress};","lastModifiedDate":"2021-10-10"},{"lineNumber":151,"author":{"gitId":"CrimsonTitan79"},"content":"        ArrayList\u003cString\u003e prefixPlusPersonParameters \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-10"},{"lineNumber":152,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":153,"author":{"gitId":"CrimsonTitan79"},"content":"        for (int i \u003d 0; i \u003c parameterPrefixes.length; i++) {","lastModifiedDate":"2021-10-10"},{"lineNumber":154,"author":{"gitId":"CrimsonTitan79"},"content":"            if (parameters[i].isBlank()) {","lastModifiedDate":"2021-10-10"},{"lineNumber":155,"author":{"gitId":"CrimsonTitan79"},"content":"                continue;","lastModifiedDate":"2021-10-10"},{"lineNumber":156,"author":{"gitId":"CrimsonTitan79"},"content":"            }","lastModifiedDate":"2021-10-10"},{"lineNumber":157,"author":{"gitId":"CrimsonTitan79"},"content":"            String prefixPlusPersonParameter \u003d parameterPrefixes[i] + parameters[i];","lastModifiedDate":"2021-10-10"},{"lineNumber":158,"author":{"gitId":"CrimsonTitan79"},"content":"            prefixPlusPersonParameters.add(prefixPlusPersonParameter);","lastModifiedDate":"2021-10-10"},{"lineNumber":159,"author":{"gitId":"CrimsonTitan79"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":160,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":161,"author":{"gitId":"CrimsonTitan79"},"content":"        for (String prefixPlusPersonParameter : prefixPlusPersonParameters) {","lastModifiedDate":"2021-10-10"},{"lineNumber":162,"author":{"gitId":"CrimsonTitan79"},"content":"            updatePersonalInformation(patient, prefixPlusPersonParameter);","lastModifiedDate":"2021-10-10"},{"lineNumber":163,"author":{"gitId":"CrimsonTitan79"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":164,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":165,"author":{"gitId":"CrimsonTitan79"},"content":"        return patient;","lastModifiedDate":"2021-10-10"},{"lineNumber":166,"author":{"gitId":"CrimsonTitan79"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":167,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":168,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":169,"author":{"gitId":"CrimsonTitan79"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":170,"author":{"gitId":"CrimsonTitan79"},"content":"     * Scans a text file and converts it to a String.","lastModifiedDate":"2021-10-10"},{"lineNumber":171,"author":{"gitId":"CrimsonTitan79"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":172,"author":{"gitId":"CrimsonTitan79"},"content":"     * @param filePath path of the text file","lastModifiedDate":"2021-10-10"},{"lineNumber":173,"author":{"gitId":"CrimsonTitan79"},"content":"     * @return String of the contents of the text file","lastModifiedDate":"2021-10-10"},{"lineNumber":174,"author":{"gitId":"CrimsonTitan79"},"content":"     * @throws FileNotFoundException if text file does not exist of path invalid","lastModifiedDate":"2021-10-10"},{"lineNumber":175,"author":{"gitId":"CrimsonTitan79"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":176,"author":{"gitId":"CrimsonTitan79"},"content":"    private String scanFileToString(String filePath) throws FileNotFoundException {","lastModifiedDate":"2021-10-10"},{"lineNumber":177,"author":{"gitId":"CrimsonTitan79"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2021-10-10"},{"lineNumber":178,"author":{"gitId":"CrimsonTitan79"},"content":"        Scanner s \u003d new Scanner(file);","lastModifiedDate":"2021-10-10"},{"lineNumber":179,"author":{"gitId":"CrimsonTitan79"},"content":"        String output \u003d \"\";","lastModifiedDate":"2021-10-10"},{"lineNumber":180,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":181,"author":{"gitId":"CrimsonTitan79"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2021-10-10"},{"lineNumber":182,"author":{"gitId":"CrimsonTitan79"},"content":"            output +\u003d s.nextLine();","lastModifiedDate":"2021-10-10"},{"lineNumber":183,"author":{"gitId":"CrimsonTitan79"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":184,"author":{"gitId":"CrimsonTitan79"},"content":"        return output;","lastModifiedDate":"2021-10-10"},{"lineNumber":185,"author":{"gitId":"CrimsonTitan79"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":186,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":187,"author":{"gitId":"CrimsonTitan79"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":188,"author":{"gitId":"CrimsonTitan79"},"content":"     * Delete saved test data text file from the JUNIT testing.","lastModifiedDate":"2021-10-10"},{"lineNumber":189,"author":{"gitId":"CrimsonTitan79"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":190,"author":{"gitId":"CrimsonTitan79"},"content":"    private void deleteSavedData() {","lastModifiedDate":"2021-10-10"},{"lineNumber":191,"author":{"gitId":"CrimsonTitan79"},"content":"        File savedDataFile \u003d new File(SAVED_TEST_DATA);","lastModifiedDate":"2021-10-10"},{"lineNumber":192,"author":{"gitId":"CrimsonTitan79"},"content":"        savedDataFile.delete();","lastModifiedDate":"2021-10-10"},{"lineNumber":193,"author":{"gitId":"CrimsonTitan79"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":194,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":195,"author":{"gitId":"CrimsonTitan79"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"justinfidelis":1,"CrimsonTitan79":190,"jushg":4}},{"path":"src/test/java/medbot/UiTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"EricBryann"},"content":"package medbot;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"jushg"},"content":"import medbot.list.PatientList;","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"EricBryann"},"content":"import medbot.person.Patient;","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"EricBryann"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"EricBryann"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"EricBryann"},"content":"class UiTest {","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"justinfidelis"},"content":"    public static final String ENDLINE \u003d System.lineSeparator();","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"EricBryann"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"EricBryann"},"content":"    public void testPrintAddPatientMessage() {","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"EricBryann"},"content":"        int patientId \u003d 2;","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"EricBryann"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"EricBryann"},"content":"        String expectedOutput \u003d \"Added patient with patient ID: 2\" + ENDLINE;","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"EricBryann"},"content":"        assertEquals(ui.getAddPatientMessage(patientId), expectedOutput);","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"EricBryann"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":22,"author":{"gitId":"EricBryann"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":23,"author":{"gitId":"EricBryann"},"content":"    public void testPrintDeletePatientMessage() {","lastModifiedDate":"2021-10-06"},{"lineNumber":24,"author":{"gitId":"EricBryann"},"content":"        int patientId \u003d 2;","lastModifiedDate":"2021-10-06"},{"lineNumber":25,"author":{"gitId":"EricBryann"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2021-10-06"},{"lineNumber":26,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":27,"author":{"gitId":"EricBryann"},"content":"        String expectedOutput \u003d \"Patient with id 2 deleted from system.\" + ENDLINE;","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"EricBryann"},"content":"        assertEquals(ui.getDeletePatientMessage(patientId), expectedOutput);","lastModifiedDate":"2021-10-06"},{"lineNumber":29,"author":{"gitId":"EricBryann"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":30,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":31,"author":{"gitId":"EricBryann"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":32,"author":{"gitId":"EricBryann"},"content":"    public void testEditPatientMessage() {","lastModifiedDate":"2021-10-06"},{"lineNumber":33,"author":{"gitId":"EricBryann"},"content":"        PatientList patientList \u003d new PatientList();","lastModifiedDate":"2021-10-06"},{"lineNumber":34,"author":{"gitId":"EricBryann"},"content":"        Patient patient \u003d new Patient();","lastModifiedDate":"2021-10-06"},{"lineNumber":35,"author":{"gitId":"EricBryann"},"content":"        patient.setName(\"John Doe\");","lastModifiedDate":"2021-10-06"},{"lineNumber":36,"author":{"gitId":"EricBryann"},"content":"        patient.setEmailAddress(\"John@gmail.com\");","lastModifiedDate":"2021-10-06"},{"lineNumber":37,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":38,"author":{"gitId":"jushg"},"content":"        patientList.addPerson(patient);","lastModifiedDate":"2021-10-18"},{"lineNumber":39,"author":{"gitId":"EricBryann"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2021-10-06"},{"lineNumber":40,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":41,"author":{"gitId":"EricBryann"},"content":"        patient.setName(\"Bob\");","lastModifiedDate":"2021-10-06"},{"lineNumber":42,"author":{"gitId":"EricBryann"},"content":"        String patientInfo \u003d patient.toString();","lastModifiedDate":"2021-10-06"},{"lineNumber":43,"author":{"gitId":"EricBryann"},"content":"        String expectedOutput \u003d","lastModifiedDate":"2021-10-19"},{"lineNumber":44,"author":{"gitId":"EricBryann"},"content":"                \"The information of patient with ID 1 has been edited to:\" + ENDLINE + ENDLINE","lastModifiedDate":"2021-10-19"},{"lineNumber":45,"author":{"gitId":"EricBryann"},"content":"                + \"Patient ID: 1 \" + ENDLINE","lastModifiedDate":"2021-10-19"},{"lineNumber":46,"author":{"gitId":"EricBryann"},"content":"                + \"IC: \" + ENDLINE","lastModifiedDate":"2021-10-19"},{"lineNumber":47,"author":{"gitId":"EricBryann"},"content":"                + \"Name: Bob\" + ENDLINE","lastModifiedDate":"2021-10-19"},{"lineNumber":48,"author":{"gitId":"EricBryann"},"content":"                + \"H/P: \" + ENDLINE","lastModifiedDate":"2021-10-19"},{"lineNumber":49,"author":{"gitId":"EricBryann"},"content":"                + \"Email: John@gmail.com\" + ENDLINE","lastModifiedDate":"2021-10-19"},{"lineNumber":50,"author":{"gitId":"EricBryann"},"content":"                + \"Address: \" + ENDLINE;","lastModifiedDate":"2021-10-19"},{"lineNumber":51,"author":{"gitId":"EricBryann"},"content":"        int patientId \u003d 1;","lastModifiedDate":"2021-10-06"},{"lineNumber":52,"author":{"gitId":"EricBryann"},"content":"        assertEquals(ui.getEditPatientMessage(patientId, patientInfo), expectedOutput);","lastModifiedDate":"2021-10-06"},{"lineNumber":53,"author":{"gitId":"EricBryann"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":54,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":55,"author":{"gitId":"EricBryann"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":56,"author":{"gitId":"EricBryann"},"content":"    public void testGetPatientInfoMessage() {","lastModifiedDate":"2021-10-06"},{"lineNumber":57,"author":{"gitId":"EricBryann"},"content":"        PatientList patientList \u003d new PatientList();","lastModifiedDate":"2021-10-06"},{"lineNumber":58,"author":{"gitId":"EricBryann"},"content":"        Patient patient \u003d new Patient();","lastModifiedDate":"2021-10-06"},{"lineNumber":59,"author":{"gitId":"EricBryann"},"content":"        patient.setName(\"John Doe\");","lastModifiedDate":"2021-10-06"},{"lineNumber":60,"author":{"gitId":"EricBryann"},"content":"        patient.setEmailAddress(\"John@gmail.com\");","lastModifiedDate":"2021-10-06"},{"lineNumber":61,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":62,"author":{"gitId":"jushg"},"content":"        patientList.addPerson(patient);","lastModifiedDate":"2021-10-18"},{"lineNumber":63,"author":{"gitId":"EricBryann"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2021-10-06"},{"lineNumber":64,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":65,"author":{"gitId":"EricBryann"},"content":"        String patientInfo \u003d patient.toString();","lastModifiedDate":"2021-10-06"},{"lineNumber":66,"author":{"gitId":"EricBryann"},"content":"        String expectedOutput \u003d \"Here\u0027s the requested patient:\" + ENDLINE + ENDLINE","lastModifiedDate":"2021-10-19"},{"lineNumber":67,"author":{"gitId":"EricBryann"},"content":"                + \"Patient ID: 1 \" + ENDLINE","lastModifiedDate":"2021-10-19"},{"lineNumber":68,"author":{"gitId":"EricBryann"},"content":"                + \"IC: \" + ENDLINE","lastModifiedDate":"2021-10-19"},{"lineNumber":69,"author":{"gitId":"EricBryann"},"content":"                + \"Name: John Doe\" + ENDLINE","lastModifiedDate":"2021-10-19"},{"lineNumber":70,"author":{"gitId":"EricBryann"},"content":"                + \"H/P: \" + ENDLINE","lastModifiedDate":"2021-10-19"},{"lineNumber":71,"author":{"gitId":"EricBryann"},"content":"                + \"Email: John@gmail.com\" + ENDLINE","lastModifiedDate":"2021-10-19"},{"lineNumber":72,"author":{"gitId":"EricBryann"},"content":"                + \"Address: \" + ENDLINE;","lastModifiedDate":"2021-10-19"},{"lineNumber":73,"author":{"gitId":"Kureans"},"content":"        assertEquals(ui.getPatientInfo(patientInfo), expectedOutput);","lastModifiedDate":"2021-10-12"},{"lineNumber":74,"author":{"gitId":"EricBryann"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":75,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":76,"author":{"gitId":"EricBryann"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":77,"author":{"gitId":"EricBryann"},"content":"    public void testGetAllPatientsMessage() {","lastModifiedDate":"2021-10-06"},{"lineNumber":78,"author":{"gitId":"EricBryann"},"content":"        PatientList patientList \u003d new PatientList();","lastModifiedDate":"2021-10-06"},{"lineNumber":79,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":80,"author":{"gitId":"Kureans"},"content":"        Patient patient1 \u003d new Patient();","lastModifiedDate":"2021-10-07"},{"lineNumber":81,"author":{"gitId":"Kureans"},"content":"        patient1.setName(\"John Doe\");","lastModifiedDate":"2021-10-07"},{"lineNumber":82,"author":{"gitId":"Kureans"},"content":"        patient1.setEmailAddress(\"John@gmail.com\");","lastModifiedDate":"2021-10-07"},{"lineNumber":83,"author":{"gitId":"jushg"},"content":"        patientList.addPerson(patient1);","lastModifiedDate":"2021-10-18"},{"lineNumber":84,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":85,"author":{"gitId":"EricBryann"},"content":"        Patient patient2 \u003d new Patient();","lastModifiedDate":"2021-10-06"},{"lineNumber":86,"author":{"gitId":"Kureans"},"content":"        patient2.setName(\"Bob\");","lastModifiedDate":"2021-10-07"},{"lineNumber":87,"author":{"gitId":"Kureans"},"content":"        patient2.setPhoneNumber(\"88889999\");","lastModifiedDate":"2021-10-07"},{"lineNumber":88,"author":{"gitId":"jushg"},"content":"        patientList.addPerson(patient2);","lastModifiedDate":"2021-10-18"},{"lineNumber":89,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":90,"author":{"gitId":"EricBryann"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2021-10-06"},{"lineNumber":91,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":92,"author":{"gitId":"EricBryann"},"content":"        String expectedOutput \u003d","lastModifiedDate":"2021-10-19"},{"lineNumber":93,"author":{"gitId":"EricBryann"},"content":"            \"Here is a list of all patients:\" + ENDLINE","lastModifiedDate":"2021-10-19"},{"lineNumber":94,"author":{"gitId":"EricBryann"},"content":"            + \"For full details of each patient, please use the command \\\"view PATIENT_ID\\\"\" + ENDLINE","lastModifiedDate":"2021-10-19"},{"lineNumber":95,"author":{"gitId":"EricBryann"},"content":"            + \" ----------------------------------------------------------------------------------------------------- \"","lastModifiedDate":"2021-10-19"},{"lineNumber":96,"author":{"gitId":"EricBryann"},"content":"            + ENDLINE","lastModifiedDate":"2021-10-19"},{"lineNumber":97,"author":{"gitId":"EricBryann"},"content":"            + \" |  ID  | IC Number |         Name         | Phone No. |        Email         |       Address        | \"","lastModifiedDate":"2021-10-19"},{"lineNumber":98,"author":{"gitId":"EricBryann"},"content":"            + ENDLINE","lastModifiedDate":"2021-10-19"},{"lineNumber":99,"author":{"gitId":"EricBryann"},"content":"            + \" ----------------------------------------------------------------------------------------------------- \"","lastModifiedDate":"2021-10-19"},{"lineNumber":100,"author":{"gitId":"EricBryann"},"content":"            + ENDLINE","lastModifiedDate":"2021-10-19"},{"lineNumber":101,"author":{"gitId":"EricBryann"},"content":"            + \" | 1    |           | John Doe             |           | John@gmail.com       |                      | \"","lastModifiedDate":"2021-10-19"},{"lineNumber":102,"author":{"gitId":"EricBryann"},"content":"            + ENDLINE","lastModifiedDate":"2021-10-19"},{"lineNumber":103,"author":{"gitId":"EricBryann"},"content":"            + \" | 2    |           | Bob                  | 88889999  |                      |                      | \"","lastModifiedDate":"2021-10-19"},{"lineNumber":104,"author":{"gitId":"EricBryann"},"content":"            + ENDLINE","lastModifiedDate":"2021-10-19"},{"lineNumber":105,"author":{"gitId":"EricBryann"},"content":"            + \" ----------------------------------------------------------------------------------------------------- \"","lastModifiedDate":"2021-10-19"},{"lineNumber":106,"author":{"gitId":"EricBryann"},"content":"            + ENDLINE;","lastModifiedDate":"2021-10-19"},{"lineNumber":107,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":108,"author":{"gitId":"EricBryann"},"content":"        assertEquals(ui.getAllPatientsString(patientList), expectedOutput);","lastModifiedDate":"2021-10-06"},{"lineNumber":109,"author":{"gitId":"EricBryann"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":110,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":111,"author":{"gitId":"Kureans"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":112,"author":{"gitId":"Kureans"},"content":"    public void testGetCommandListMessage() {","lastModifiedDate":"2021-10-07"},{"lineNumber":113,"author":{"gitId":"Kureans"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2021-10-07"},{"lineNumber":114,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":115,"author":{"gitId":"justinfidelis"},"content":"        String expectedOutput \u003d \"Here are the list of commands:\" + ENDLINE + ENDLINE","lastModifiedDate":"2021-10-18"},{"lineNumber":116,"author":{"gitId":"justinfidelis"},"content":"                + \"help\" + ENDLINE + \"add\" + ENDLINE + \"list\" + ENDLINE + \"view\" + ENDLINE + \"edit\" + ENDLINE","lastModifiedDate":"2021-10-18"},{"lineNumber":117,"author":{"gitId":"EricBryann"},"content":"                + \"find\" + ENDLINE + \"delete\" + ENDLINE + \"exit\" + ENDLINE + ENDLINE","lastModifiedDate":"2021-10-19"},{"lineNumber":118,"author":{"gitId":"justinfidelis"},"content":"                + \"To obtain more information on each command and their respective required inputs, type:\" + ENDLINE","lastModifiedDate":"2021-10-18"},{"lineNumber":119,"author":{"gitId":"justinfidelis"},"content":"                + \"help [COMMAND]\" + ENDLINE + ENDLINE","lastModifiedDate":"2021-10-18"},{"lineNumber":120,"author":{"gitId":"EricBryann"},"content":"                + \"*Note that all commands will remove any \u0027|\u0027 inputs for format parsing purposes\" + ENDLINE;","lastModifiedDate":"2021-10-19"},{"lineNumber":121,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":122,"author":{"gitId":"Kureans"},"content":"        assertEquals(ui.getCommandList(), expectedOutput);","lastModifiedDate":"2021-10-07"},{"lineNumber":123,"author":{"gitId":"Kureans"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":124,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":125,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":126,"author":{"gitId":"EricBryann"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"justinfidelis":7,"jushg":5,"EricBryann":98,"Kureans":16}},{"path":"text-ui-test/runtest.sh","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# change to script directory","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"cd \"${0%/*}\"","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"cd ..","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"./gradlew clean shadowJar","lastModifiedDate":"2020-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"cd text-ui-test","lastModifiedDate":"2020-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"java  -jar $(find ../build/libs/ -mindepth 1 -print -quit) \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"CrimsonTitan79"},"content":"diff EXPECTED.TXT ACTUAL.TXT","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    echo \"Test passed!\"","lastModifiedDate":"2020-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    echo \"Test failed!\"","lastModifiedDate":"2020-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"CrimsonTitan79":1,"-":20}}]
