[{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"EricBryann"},"content":"    mainClassName \u003d \"medbot.MedBot\"","lastModifiedDate":"2021-10-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"EricBryann"},"content":"    archiveBaseName \u003d \"medBot\"","lastModifiedDate":"2021-10-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.23\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"Kureans"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2021-10-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":44,"EricBryann":2,"Kureans":1}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# About us","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"Display | Name | Github Profile | Portfolio ","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"--------|:----:|:--------------:|:---------:","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"Kureans"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Yi Shiong | [Github](https://github.com/Kureans) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2021-09-30"},{"lineNumber":6,"author":{"gitId":"CrimsonTitan79"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Atticus | [Github](https://github.com/CrimsonTitan79) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2021-09-30"},{"lineNumber":7,"author":{"gitId":"jushg"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Hoang Trong Tan | [Github](https://github.com/jushg) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2021-09-30"},{"lineNumber":8,"author":{"gitId":"EricBryann"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Eric Bryan | [Github](https://github.com/) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2021-09-30"},{"lineNumber":9,"author":{"gitId":"justinfidelis"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Justin Wong | [Github](https://github.com/justinfidelis) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2021-09-30"}],"authorContributionMap":{"justinfidelis":1,"CrimsonTitan79":1,"jushg":1,"-":4,"Kureans":1,"EricBryann":1}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Developer Guide","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Acknowledgements","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"Kureans"},"content":"Inspired by AB3\u0027s [Developer Guide](https://se-education.org/addressbook-level3/DeveloperGuide.html).","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"Kureans"},"content":"## Design","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":9,"author":{"gitId":"Kureans"},"content":"### Architecture","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":11,"author":{"gitId":"justinfidelis"},"content":"Given below is a quick overview of the main components of MedBot and how they interact with one another.","lastModifiedDate":"2021-10-22"},{"lineNumber":12,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"justinfidelis"},"content":"#### Main Components","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"jushg"},"content":"The main class of MedBot is the `MedBot` class. It is responsible for initialising the other core components of MedBot","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"jushg"},"content":"at application startup and for handling the interactions between these components.","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":18,"author":{"gitId":"justinfidelis"},"content":"The 4 core components of MedBot are:","lastModifiedDate":"2021-10-22"},{"lineNumber":19,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"justinfidelis"},"content":"* `Ui`: Handles the UI of MedBot.","lastModifiedDate":"2021-10-22"},{"lineNumber":21,"author":{"gitId":"justinfidelis"},"content":"* `Parser`: Parses user inputs and creates `Command` objects.","lastModifiedDate":"2021-10-22"},{"lineNumber":22,"author":{"gitId":"justinfidelis"},"content":"* `Scheduler`: Holds data in memory and contains the methods to read and write to it.","lastModifiedDate":"2021-10-22"},{"lineNumber":23,"author":{"gitId":"justinfidelis"},"content":"* `Storage`: Loads data from, and stores data to the hard disk.","lastModifiedDate":"2021-10-22"},{"lineNumber":24,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":25,"author":{"gitId":"justinfidelis"},"content":"In addition, the `Command` class facilitates the execution of user instructions.","lastModifiedDate":"2021-10-22"},{"lineNumber":26,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":27,"author":{"gitId":"justinfidelis"},"content":"#### Component Interaction","lastModifiedDate":"2021-10-22"},{"lineNumber":28,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"jushg"},"content":"Given below is a sequence diagram of how the core components of MedBot interact with each other when the user inputs the","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"jushg"},"content":"command `delete 1`.","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":32,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":33,"author":{"gitId":"justinfidelis"},"content":"![MedBot Architecture](diagrams/MedBot_architecture.png)","lastModifiedDate":"2021-10-26"},{"lineNumber":34,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":35,"author":{"gitId":"justinfidelis"},"content":"### Ui Component","lastModifiedDate":"2021-10-22"},{"lineNumber":36,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":37,"author":{"gitId":"jushg"},"content":"The Ui Component is handled by the `Ui` class. It is the main class that a user directly interacts with. This class is","lastModifiedDate":"2021-10-26"},{"lineNumber":38,"author":{"gitId":"jushg"},"content":"responsible for reading user inputs and printing outputs to users.","lastModifiedDate":"2021-10-26"},{"lineNumber":39,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":40,"author":{"gitId":"EricBryann"},"content":"The `Ui` class serves as an abstraction over these smaller classes:","lastModifiedDate":"2021-10-26"},{"lineNumber":41,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":42,"author":{"gitId":"EricBryann"},"content":"* `PersonUi`: Handles the Ui for persons","lastModifiedDate":"2021-10-26"},{"lineNumber":43,"author":{"gitId":"EricBryann"},"content":"    * `PatientUi`: Inherits `PersonUi` to handle patient-related Ui","lastModifiedDate":"2021-10-26"},{"lineNumber":44,"author":{"gitId":"EricBryann"},"content":"    * `StaffUi`: Inherits `PersonUi` to handle staff-related Ui","lastModifiedDate":"2021-10-26"},{"lineNumber":45,"author":{"gitId":"EricBryann"},"content":"* `SchedulerUi`: Handles the Ui for schedulers.","lastModifiedDate":"2021-10-26"},{"lineNumber":46,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":47,"author":{"gitId":"EricBryann"},"content":"Given below is a sequence diagram of how the `Ui` component works after the `Parser`","lastModifiedDate":"2021-10-26"},{"lineNumber":48,"author":{"gitId":"EricBryann"},"content":"parses `help delete` input given by a user.","lastModifiedDate":"2021-10-26"},{"lineNumber":49,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":50,"author":{"gitId":"jushg"},"content":"![Ui Sequence Diagram](diagrams/Ui_sequence_diagram.png)","lastModifiedDate":"2021-10-26"},{"lineNumber":51,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":52,"author":{"gitId":"justinfidelis"},"content":"### Parser Component","lastModifiedDate":"2021-10-22"},{"lineNumber":53,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":54,"author":{"gitId":"Kureans"},"content":"The Parser Component is responsible for parsing the user input","lastModifiedDate":"2021-10-26"},{"lineNumber":55,"author":{"gitId":"Kureans"},"content":"and returning the corresponding command class to be executed.","lastModifiedDate":"2021-10-26"},{"lineNumber":56,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":57,"author":{"gitId":"Kureans"},"content":"Here\u0027s a partial class diagram to better illustrate the Parser Component:","lastModifiedDate":"2021-10-26"},{"lineNumber":58,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":59,"author":{"gitId":"Kureans"},"content":"![ParserClassDiagram](diagrams/ParserClassDiagram.png)","lastModifiedDate":"2021-10-26"},{"lineNumber":60,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":61,"author":{"gitId":"Kureans"},"content":"How the `Parser` component works:","lastModifiedDate":"2021-10-26"},{"lineNumber":62,"author":{"gitId":"Kureans"},"content":"* When `Parser` is called by MedBot to parse the user input, it will call the view","lastModifiedDate":"2021-10-26"},{"lineNumber":63,"author":{"gitId":"Kureans"},"content":"specific parser `XYZCommandParser` depending on the current view type (`XYZ` is a placeholder","lastModifiedDate":"2021-10-26"},{"lineNumber":64,"author":{"gitId":"Kureans"},"content":"for the specific command name eg. `PatientCommandParser`).","lastModifiedDate":"2021-10-26"},{"lineNumber":65,"author":{"gitId":"Kureans"},"content":"* The `XYZCommandParser` will then create and return the corresponding","lastModifiedDate":"2021-10-26"},{"lineNumber":66,"author":{"gitId":"Kureans"},"content":"`XYZcommand` object by utilising the `ParserUtils` to help it process the user input.","lastModifiedDate":"2021-10-26"},{"lineNumber":67,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":68,"author":{"gitId":"Kureans"},"content":"The sequence diagram below better illustrates the working process described above:","lastModifiedDate":"2021-10-26"},{"lineNumber":69,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":70,"author":{"gitId":"Kureans"},"content":"![ParserSequenceDiagram](diagrams/ParserSequenceDiagram.png)","lastModifiedDate":"2021-10-26"},{"lineNumber":71,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":72,"author":{"gitId":"Kureans"},"content":"\u003cem\u003e(User is trying to add a patient\u0027s information in the PatientInfoView)\u003c/em\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":73,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":74,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":75,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":76,"author":{"gitId":"justinfidelis"},"content":"### Scheduler Component","lastModifiedDate":"2021-10-22"},{"lineNumber":77,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":78,"author":{"gitId":"justinfidelis"},"content":"### Storage Component","lastModifiedDate":"2021-10-22"},{"lineNumber":79,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":80,"author":{"gitId":"jushg"},"content":"### Individual Commands","lastModifiedDate":"2021-10-26"},{"lineNumber":81,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":82,"author":{"gitId":"jushg"},"content":"The Command class is responsible for handling the execution of user input.","lastModifiedDate":"2021-10-26"},{"lineNumber":83,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":84,"author":{"gitId":"jushg"},"content":"Each individual Command object includes:","lastModifiedDate":"2021-10-26"},{"lineNumber":85,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":86,"author":{"gitId":"jushg"},"content":"* `isExit()`: Return true only if it is an `ExitCommand` .","lastModifiedDate":"2021-10-26"},{"lineNumber":87,"author":{"gitId":"jushg"},"content":"* `execute(Scheduler, Ui)`: Using the `Ui` class and data from the `Scheduler` to execute and print out the result to","lastModifiedDate":"2021-10-26"},{"lineNumber":88,"author":{"gitId":"jushg"},"content":"  the user.","lastModifiedDate":"2021-10-26"},{"lineNumber":89,"author":{"gitId":"jushg"},"content":"* Various attributes specific to the command, some common ones:","lastModifiedDate":"2021-10-26"},{"lineNumber":90,"author":{"gitId":"jushg"},"content":"    * `id`: The id of `Person`/`Appointment` object to execute the command on.","lastModifiedDate":"2021-10-26"},{"lineNumber":91,"author":{"gitId":"jushg"},"content":"    * `viewType`: The current `ViewType` of the program.","lastModifiedDate":"2021-10-26"},{"lineNumber":92,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":93,"author":{"gitId":"jushg"},"content":"Three major types of Commands:","lastModifiedDate":"2021-10-26"},{"lineNumber":94,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":95,"author":{"gitId":"jushg"},"content":"1. `Person` commands: to interact with person objects.","lastModifiedDate":"2021-10-26"},{"lineNumber":96,"author":{"gitId":"jushg"},"content":"2. `Appointment` commands: to interact with the appointment between doctors/nurses and patients.","lastModifiedDate":"2021-10-26"},{"lineNumber":97,"author":{"gitId":"jushg"},"content":"3. General commands: included are `help`, `exit`, `switch`, `getCurrentView`.","lastModifiedDate":"2021-10-26"},{"lineNumber":98,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":99,"author":{"gitId":"jushg"},"content":"Given below are class diagrams of how the `Command` class and its subclasses are implemented.","lastModifiedDate":"2021-10-26"},{"lineNumber":100,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":101,"author":{"gitId":"jushg"},"content":"#### Command class and general commands","lastModifiedDate":"2021-10-26"},{"lineNumber":102,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":103,"author":{"gitId":"jushg"},"content":"![General Command Class Diagram](diagrams/general_command.png)","lastModifiedDate":"2021-10-26"},{"lineNumber":104,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":105,"author":{"gitId":"jushg"},"content":"#### Person-related commands","lastModifiedDate":"2021-10-26"},{"lineNumber":106,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":107,"author":{"gitId":"jushg"},"content":"![Person Command Class Diagram](diagrams/person_command.png)","lastModifiedDate":"2021-10-26"},{"lineNumber":108,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":109,"author":{"gitId":"jushg"},"content":"#### Appointment-related commands","lastModifiedDate":"2021-10-26"},{"lineNumber":110,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":111,"author":{"gitId":"jushg"},"content":"![Appointment Command Class Diagram](diagrams/appointment_command.png)","lastModifiedDate":"2021-10-26"},{"lineNumber":112,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":113,"author":{"gitId":"jushg"},"content":"## Implementation","lastModifiedDate":"2021-10-26"},{"lineNumber":114,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":115,"author":{"gitId":"jushg"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2021-10-26"},{"lineNumber":116,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":117,"author":{"gitId":"Kureans"},"content":"#### Design Considerations","lastModifiedDate":"2021-10-19"},{"lineNumber":118,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":119,"author":{"gitId":"Kureans"},"content":"**Aspect: How different views are identified**","lastModifiedDate":"2021-10-19"},{"lineNumber":120,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":121,"author":{"gitId":"jushg"},"content":"Currently, an enum property in the `Parser` class is used to differentiate between views.","lastModifiedDate":"2021-10-26"},{"lineNumber":122,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":123,"author":{"gitId":"Kureans"},"content":"Pros:","lastModifiedDate":"2021-10-19"},{"lineNumber":124,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":125,"author":{"gitId":"Kureans"},"content":"* Straightforward to implement","lastModifiedDate":"2021-10-19"},{"lineNumber":126,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":127,"author":{"gitId":"Kureans"},"content":"Cons:","lastModifiedDate":"2021-10-19"},{"lineNumber":128,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":129,"author":{"gitId":"Kureans"},"content":"* Maintainability concerns as complexity of Uis increase","lastModifiedDate":"2021-10-19"},{"lineNumber":130,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":131,"author":{"gitId":"Kureans"},"content":"#### Alternatives Considered","lastModifiedDate":"2021-10-19"},{"lineNumber":132,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":133,"author":{"gitId":"Kureans"},"content":"3 sub `Ui` classes \u0026 sub `Parser` classes that inherit from the main `Ui` and `Parser` class.","lastModifiedDate":"2021-10-19"},{"lineNumber":134,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":135,"author":{"gitId":"Kureans"},"content":"Pros:","lastModifiedDate":"2021-10-19"},{"lineNumber":136,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":137,"author":{"gitId":"Kureans"},"content":"* Potential for reduced coupling where only sub `Ui` or sub `Parser` classes affected by changes in other class","lastModifiedDate":"2021-10-19"},{"lineNumber":138,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":139,"author":{"gitId":"Kureans"},"content":"Cons:","lastModifiedDate":"2021-10-19"},{"lineNumber":140,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":141,"author":{"gitId":"Kureans"},"content":"* Less straightforward implementation","lastModifiedDate":"2021-10-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":143,"author":{"gitId":"EricBryann"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":144,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":145,"author":{"gitId":"jushg"},"content":"### Switch view feature","lastModifiedDate":"2021-10-26"},{"lineNumber":146,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":147,"author":{"gitId":"jushg"},"content":"#### Implementation","lastModifiedDate":"2021-10-26"},{"lineNumber":148,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":149,"author":{"gitId":"jushg"},"content":"The switch view mechanism is heavily linked to the `Parser` class. By having a","lastModifiedDate":"2021-10-26"},{"lineNumber":150,"author":{"gitId":"jushg"},"content":"`ViewType` enumeration property in `Parser`, the view of the console can be switched by executing the","lastModifiedDate":"2021-10-26"},{"lineNumber":151,"author":{"gitId":"jushg"},"content":"appropriate `SwitchCommand` class, which modifies the corresponding `ViewType`","lastModifiedDate":"2021-10-26"},{"lineNumber":152,"author":{"gitId":"jushg"},"content":"of the `Parser`. The 3 possible views and the corresponding user input commands are as follows:","lastModifiedDate":"2021-10-26"},{"lineNumber":153,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":154,"author":{"gitId":"jushg"},"content":"* `switch patientinfo` - switches to the patient info view.","lastModifiedDate":"2021-10-26"},{"lineNumber":155,"author":{"gitId":"jushg"},"content":"* `switch staffinfo` - switches to the medical staff info view.","lastModifiedDate":"2021-10-26"},{"lineNumber":156,"author":{"gitId":"jushg"},"content":"* `switch scheduler` - switches to the scheduler view.","lastModifiedDate":"2021-10-26"},{"lineNumber":157,"author":{"gitId":"jushg"},"content":"* `switch` - will switch to another view depending on the current view.","lastModifiedDate":"2021-10-26"},{"lineNumber":158,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":159,"author":{"gitId":"jushg"},"content":"Each command essentially evokes the `Parser#setViewType(ViewType)` method, which will set the corresponding","lastModifiedDate":"2021-10-26"},{"lineNumber":160,"author":{"gitId":"jushg"},"content":"`ViewType` property in the `Parser` class.","lastModifiedDate":"2021-10-26"},{"lineNumber":161,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":162,"author":{"gitId":"jushg"},"content":"By having different views, we can execute different commands given the same user input. This will be demonstrated in the","lastModifiedDate":"2021-10-26"},{"lineNumber":163,"author":{"gitId":"jushg"},"content":"example usage scenario below, and how the switch view mechanism works for different views.","lastModifiedDate":"2021-10-26"},{"lineNumber":164,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":165,"author":{"gitId":"jushg"},"content":"![Image of Sequence Diagram](diagrams/SwitchViewDiagram.png)","lastModifiedDate":"2021-10-26"},{"lineNumber":166,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":167,"author":{"gitId":"jushg"},"content":"\u003c!--","lastModifiedDate":"2021-10-26"},{"lineNumber":168,"author":{"gitId":"jushg"},"content":"Update with image + explanation","lastModifiedDate":"2021-10-26"},{"lineNumber":169,"author":{"gitId":"jushg"},"content":"--\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":170,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":171,"author":{"gitId":"EricBryann"},"content":"### Find feature","lastModifiedDate":"2021-10-20"},{"lineNumber":172,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":173,"author":{"gitId":"EricBryann"},"content":"#### Functionality","lastModifiedDate":"2021-10-20"},{"lineNumber":174,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":175,"author":{"gitId":"EricBryann"},"content":"This command will find a list of `Person` that match the given attributes in a table format.","lastModifiedDate":"2021-10-20"},{"lineNumber":176,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":177,"author":{"gitId":"EricBryann"},"content":"#### Implementation","lastModifiedDate":"2021-10-20"},{"lineNumber":178,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":179,"author":{"gitId":"jushg"},"content":"The `find` feature is facilitated by the `FindPersonCommand` class. It extends from `Command` class and overrides","lastModifiedDate":"2021-10-21"},{"lineNumber":180,"author":{"gitId":"EricBryann"},"content":"the `execute()` method to achieve the desired functionality.","lastModifiedDate":"2021-10-20"},{"lineNumber":181,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":182,"author":{"gitId":"EricBryann"},"content":"The example below gives a direction on how this command behaves.","lastModifiedDate":"2021-10-20"},{"lineNumber":183,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":184,"author":{"gitId":"EricBryann"},"content":"Step 1.","lastModifiedDate":"2021-10-20"},{"lineNumber":185,"author":{"gitId":"EricBryann"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":186,"author":{"gitId":"jushg"},"content":"A User execute the `find n/John` command. The `Parser#parseCommand()` method will parse this command and eventually","lastModifiedDate":"2021-10-26"},{"lineNumber":187,"author":{"gitId":"jushg"},"content":"returns a `new FindPatientCommand()` object.","lastModifiedDate":"2021-10-26"},{"lineNumber":188,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":189,"author":{"gitId":"EricBryann"},"content":"Step 2.","lastModifiedDate":"2021-10-20"},{"lineNumber":190,"author":{"gitId":"EricBryann"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":191,"author":{"gitId":"jushg"},"content":"The `MedBot#interactWithUser()` method will run the `execute()` method in the `new FindPatientCommand()` object.","lastModifiedDate":"2021-10-21"},{"lineNumber":192,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":193,"author":{"gitId":"EricBryann"},"content":"Step 3.","lastModifiedDate":"2021-10-20"},{"lineNumber":194,"author":{"gitId":"EricBryann"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":195,"author":{"gitId":"EricBryann"},"content":"The `execute()` method will call `PersonList#findPersons()` method with the parameter `n/John` passed in.","lastModifiedDate":"2021-10-20"},{"lineNumber":196,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":197,"author":{"gitId":"EricBryann"},"content":"Step 4.","lastModifiedDate":"2021-10-20"},{"lineNumber":198,"author":{"gitId":"EricBryann"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":199,"author":{"gitId":"EricBryann"},"content":"`PersonList#findPersons()` will check all the `persons` list and returns all `Person` in the list whose name contains","lastModifiedDate":"2021-10-20"},{"lineNumber":200,"author":{"gitId":"EricBryann"},"content":"the string `john`. The attribute match is case-insensitive.","lastModifiedDate":"2021-10-20"},{"lineNumber":201,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":202,"author":{"gitId":"EricBryann"},"content":"Step 5.","lastModifiedDate":"2021-10-20"},{"lineNumber":203,"author":{"gitId":"EricBryann"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":204,"author":{"gitId":"EricBryann"},"content":"The filtered `Person` list is then passed into the `Ui` class to be displayed into a table format through","lastModifiedDate":"2021-10-20"},{"lineNumber":205,"author":{"gitId":"EricBryann"},"content":"`Ui#getFindPatientsMessage()`.","lastModifiedDate":"2021-10-20"},{"lineNumber":206,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":207,"author":{"gitId":"jushg"},"content":"### Edit feature","lastModifiedDate":"2021-10-21"},{"lineNumber":208,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":209,"author":{"gitId":"jushg"},"content":"#### Functionality","lastModifiedDate":"2021-10-21"},{"lineNumber":210,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":211,"author":{"gitId":"jushg"},"content":"This command will edit a specified `Person` object with the attributes given in the command.","lastModifiedDate":"2021-10-21"},{"lineNumber":212,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":213,"author":{"gitId":"jushg"},"content":"#### Implementation","lastModifiedDate":"2021-10-21"},{"lineNumber":214,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":215,"author":{"gitId":"jushg"},"content":"The `edit` feature is facilitated by the `EditPersonCommand` class. It extends from `Command` class and overrides","lastModifiedDate":"2021-10-21"},{"lineNumber":216,"author":{"gitId":"jushg"},"content":"the `execute()` method to achieve the desired functionality.","lastModifiedDate":"2021-10-21"},{"lineNumber":217,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":218,"author":{"gitId":"jushg"},"content":"The example below gives a direction on how this command behaves.","lastModifiedDate":"2021-10-21"},{"lineNumber":219,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":220,"author":{"gitId":"jushg"},"content":"Step 1.","lastModifiedDate":"2021-10-21"},{"lineNumber":221,"author":{"gitId":"jushg"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":222,"author":{"gitId":"jushg"},"content":"A User execute the `edit n/John` command when the attribute `Parser#viewType` is `PATIENT_INFO`.","lastModifiedDate":"2021-10-21"},{"lineNumber":223,"author":{"gitId":"jushg"},"content":"The `Parser#parseCommand()` method will parse this command and eventually returns a `new EditPatientCommand()` object.","lastModifiedDate":"2021-10-21"},{"lineNumber":224,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":225,"author":{"gitId":"jushg"},"content":"Step 2.","lastModifiedDate":"2021-10-21"},{"lineNumber":226,"author":{"gitId":"jushg"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":227,"author":{"gitId":"jushg"},"content":"The `MedBot#interactWithUser()` method will run the `execute()` method in the `new EditPatientCommand()` object.","lastModifiedDate":"2021-10-21"},{"lineNumber":228,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":229,"author":{"gitId":"jushg"},"content":"Step 3.","lastModifiedDate":"2021-10-21"},{"lineNumber":230,"author":{"gitId":"jushg"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":231,"author":{"gitId":"jushg"},"content":"The `execute()` method will call `PersonList#editPerson()` method with the new `Person` object having the parameter","lastModifiedDate":"2021-10-21"},{"lineNumber":232,"author":{"gitId":"jushg"},"content":"`n/John` passed in. (All other attributes of the object are set to `null`)","lastModifiedDate":"2021-10-21"},{"lineNumber":233,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":234,"author":{"gitId":"jushg"},"content":"Step 4.","lastModifiedDate":"2021-10-21"},{"lineNumber":235,"author":{"gitId":"jushg"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":236,"author":{"gitId":"jushg"},"content":"`PersonList#editPerson()` will attempt to replace all attributes of the old `Person`","lastModifiedDate":"2021-10-21"},{"lineNumber":237,"author":{"gitId":"jushg"},"content":"object with the non-null attributes given in the new `Person`.","lastModifiedDate":"2021-10-21"},{"lineNumber":238,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":239,"author":{"gitId":"jushg"},"content":"Step 5.","lastModifiedDate":"2021-10-21"},{"lineNumber":240,"author":{"gitId":"jushg"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":241,"author":{"gitId":"jushg"},"content":"The edited `Person` is then passed into the `Ui` class to be displayed through`Ui#getEditPatientMessage()`.","lastModifiedDate":"2021-10-21"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":243,"author":{"gitId":"-"},"content":"## Product scope","lastModifiedDate":"2020-05-24"},{"lineNumber":244,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":245,"author":{"gitId":"-"},"content":"### Target user profile","lastModifiedDate":"2020-05-24"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":247,"author":{"gitId":"-"},"content":"{Describe the target user profile}","lastModifiedDate":"2020-05-24"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":249,"author":{"gitId":"-"},"content":"### Value proposition","lastModifiedDate":"2020-05-24"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":251,"author":{"gitId":"-"},"content":"{Describe the value proposition: what problem does it solve?}","lastModifiedDate":"2020-05-24"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":253,"author":{"gitId":"jushg"},"content":"1. Easily manage patient info, consultation requirements","lastModifiedDate":"2021-10-21"},{"lineNumber":254,"author":{"gitId":"jushg"},"content":"2. Easily manage nurse/doctor schedules","lastModifiedDate":"2021-10-21"},{"lineNumber":255,"author":{"gitId":"jushg"},"content":"3. Assign nurses/doctors to visit patients at specific times","lastModifiedDate":"2021-10-21"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":257,"author":{"gitId":"-"},"content":"## User Stories","lastModifiedDate":"2020-05-24"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":259,"author":{"gitId":"-"},"content":"|Version| As a ... | I want to ... | So that I can ...|","lastModifiedDate":"2020-05-24"},{"lineNumber":260,"author":{"gitId":"-"},"content":"|--------|----------|---------------|------------------|","lastModifiedDate":"2020-05-24"},{"lineNumber":261,"author":{"gitId":"-"},"content":"|v1.0|new user|see usage instructions|refer to them when I forget how to use the application|","lastModifiedDate":"2020-05-24"},{"lineNumber":262,"author":{"gitId":"-"},"content":"|v2.0|user|find a to-do item by name|locate a to-do without having to go through the entire list|","lastModifiedDate":"2020-05-24"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":264,"author":{"gitId":"-"},"content":"## Non-Functional Requirements","lastModifiedDate":"2020-05-24"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":266,"author":{"gitId":"-"},"content":"{Give non-functional requirements}","lastModifiedDate":"2020-05-24"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":268,"author":{"gitId":"-"},"content":"## Glossary","lastModifiedDate":"2020-05-24"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":270,"author":{"gitId":"-"},"content":"* *glossary item* - Definition","lastModifiedDate":"2020-05-24"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":272,"author":{"gitId":"-"},"content":"## Instructions for manual testing","lastModifiedDate":"2020-05-24"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":274,"author":{"gitId":"-"},"content":"{Give instructions on how to do a manual product testing e.g., how to load sample data to be used for testing}","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"justinfidelis":25,"jushg":114,"-":37,"Kureans":54,"EricBryann":44}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Introduction","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"Kureans"},"content":"MedBot is a Command Line Interface (CLI) application for head nurses to manage ","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"Kureans"},"content":"patients’ personal and medical information. By utilising text-based commands ","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"Kureans"},"content":"instead of traditional Graphical User Interface (GUI) based navigation, MedBot ","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"Kureans"},"content":"can allow head nurses to get their management tasks done quicker and more efficiently.","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":10,"author":{"gitId":"justinfidelis"},"content":"## Quick Start Guide","lastModifiedDate":"2021-10-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":12,"author":{"gitId":"justinfidelis"},"content":"### Installation","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Ensure that you have Java 11 or above installed.","lastModifiedDate":"2020-05-24"},{"lineNumber":15,"author":{"gitId":"justinfidelis"},"content":"2. Download the latest version of `medbot.jar` from [here](https://github.com/AY2122S1-CS2113-T13-1/tp/releases).","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"justinfidelis"},"content":"3. Move the file to the folder that you want to use as the MedBot\u0027s root folder.","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"justinfidelis"},"content":"4. Execute the `java -jar medbot.jar` command in the terminal in the same folder as the `medbot.jar` file to launch ","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"justinfidelis"},"content":"MedBot. The following output should be observed:","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"justinfidelis"},"content":"### Using MedBot","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"justinfidelis"},"content":"1. Type in commands into the terminal and press **Enter** to execute it.","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"justinfidelis"},"content":"2. Refer to the [Commands](#Commands) below for details on each command.","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2020-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":27,"author":{"gitId":"Kureans"},"content":"The main features of MedBot are:","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":29,"author":{"gitId":"Kureans"},"content":"  * Manage patient and medical staff information efficiently","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"Kureans"},"content":"  * Schedule medical appointments for patients seamlessly","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":32,"author":{"gitId":"Kureans"},"content":"Each feature is contained inside a different view/tab in MedBot, which can be","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"Kureans"},"content":"switched between using the `switch` command, which will be explained further","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"Kureans"},"content":"down below.","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":36,"author":{"gitId":"Kureans"},"content":"## Commands","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":38,"author":{"gitId":"Kureans"},"content":"### View Independent Commands","lastModifiedDate":"2021-10-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":40,"author":{"gitId":"Kureans"},"content":"These commands will work the same for any view that you are currently in.","lastModifiedDate":"2021-10-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":42,"author":{"gitId":"Kureans"},"content":"### Switching between views: `switch`","lastModifiedDate":"2021-10-24"},{"lineNumber":43,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":44,"author":{"gitId":"Kureans"},"content":"Switches between the different views of MedBot.","lastModifiedDate":"2021-10-24"},{"lineNumber":45,"author":{"gitId":"Kureans"},"content":"If the switch command is called without any parameters,","lastModifiedDate":"2021-10-24"},{"lineNumber":46,"author":{"gitId":"Kureans"},"content":"the view that is switched to will depend on the current view","lastModifiedDate":"2021-10-24"},{"lineNumber":47,"author":{"gitId":"Kureans"},"content":"in the order shown below.","lastModifiedDate":"2021-10-24"},{"lineNumber":48,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":49,"author":{"gitId":"Kureans"},"content":"(PATIENT_INFO --\u003e MEDICAL_STAFF_INFO --\u003e SCHEDULER --\u003e PATIENT_INFO)","lastModifiedDate":"2021-10-24"},{"lineNumber":50,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":51,"author":{"gitId":"Kureans"},"content":"Format: `switch [VIEW_TYPE]`","lastModifiedDate":"2021-10-24"},{"lineNumber":52,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":53,"author":{"gitId":"Kureans"},"content":"Expected Output:","lastModifiedDate":"2021-10-24"},{"lineNumber":54,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":55,"author":{"gitId":"Kureans"},"content":"Inputting `switch p`:","lastModifiedDate":"2021-10-24"},{"lineNumber":56,"author":{"gitId":"Kureans"},"content":"```","lastModifiedDate":"2021-10-24"},{"lineNumber":57,"author":{"gitId":"Kureans"},"content":"  ___  _ _____ ___ ___ _  _ _____ ","lastModifiedDate":"2021-10-24"},{"lineNumber":58,"author":{"gitId":"Kureans"},"content":" | _ \\/_\\_   _|_ _| __| \\| |_   _|","lastModifiedDate":"2021-10-24"},{"lineNumber":59,"author":{"gitId":"Kureans"},"content":" |  _/ _ \\| |  | || _|| .` | | |  ","lastModifiedDate":"2021-10-24"},{"lineNumber":60,"author":{"gitId":"Kureans"},"content":" |_|/_/ \\_\\_|_|___|___|_|\\_| |_|  ","lastModifiedDate":"2021-10-24"},{"lineNumber":61,"author":{"gitId":"Kureans"},"content":" |_ _| \\| | __/ _ \\               ","lastModifiedDate":"2021-10-24"},{"lineNumber":62,"author":{"gitId":"Kureans"},"content":"  | || .` | _| (_) |              ","lastModifiedDate":"2021-10-24"},{"lineNumber":63,"author":{"gitId":"Kureans"},"content":" |___|_|\\_|_|_\\___/    __         ","lastModifiedDate":"2021-10-24"},{"lineNumber":64,"author":{"gitId":"Kureans"},"content":" \\ \\ / /_ _| __\\ \\    / /         ","lastModifiedDate":"2021-10-24"},{"lineNumber":65,"author":{"gitId":"Kureans"},"content":"  \\ V / | || _| \\ \\/\\/ /          ","lastModifiedDate":"2021-10-24"},{"lineNumber":66,"author":{"gitId":"Kureans"},"content":"   \\_/ |___|___| \\_/\\_/           ","lastModifiedDate":"2021-10-24"},{"lineNumber":67,"author":{"gitId":"Kureans"},"content":"                                  ","lastModifiedDate":"2021-10-24"},{"lineNumber":68,"author":{"gitId":"Kureans"},"content":"View has been switched to PATIENT_INFO","lastModifiedDate":"2021-10-24"},{"lineNumber":69,"author":{"gitId":"Kureans"},"content":"```","lastModifiedDate":"2021-10-24"},{"lineNumber":70,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":71,"author":{"gitId":"justinfidelis"},"content":"Here is the list of views and their corresponding `[VIEW_TYPE]` specifiers:","lastModifiedDate":"2021-10-26"},{"lineNumber":72,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":73,"author":{"gitId":"justinfidelis"},"content":"| View               | Specifier | Alternate Specifier |","lastModifiedDate":"2021-10-26"},{"lineNumber":74,"author":{"gitId":"justinfidelis"},"content":"| :---               | :---      | :---                |","lastModifiedDate":"2021-10-26"},{"lineNumber":75,"author":{"gitId":"justinfidelis"},"content":"| Patient Info       | `p`       | `1`                 |","lastModifiedDate":"2021-10-26"},{"lineNumber":76,"author":{"gitId":"justinfidelis"},"content":"| Medical Staff Info | `m`       | `2`                 |","lastModifiedDate":"2021-10-26"},{"lineNumber":77,"author":{"gitId":"justinfidelis"},"content":"| Scheduler          | `s`       | `3`                 |","lastModifiedDate":"2021-10-26"},{"lineNumber":78,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":79,"author":{"gitId":"justinfidelis"},"content":"Using either specifier will switch to the corresponding view.","lastModifiedDate":"2021-10-26"},{"lineNumber":80,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":81,"author":{"gitId":"justinfidelis"},"content":"I.e., `switch m` and `switch 2` will both switch to the Medical Staff Info view","lastModifiedDate":"2021-10-26"},{"lineNumber":82,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":83,"author":{"gitId":"Kureans"},"content":"### Exit program: `exit`","lastModifiedDate":"2021-10-24"},{"lineNumber":84,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":85,"author":{"gitId":"Kureans"},"content":"Exits the program.","lastModifiedDate":"2021-10-24"},{"lineNumber":86,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":87,"author":{"gitId":"Kureans"},"content":"Format: `exit`","lastModifiedDate":"2021-10-24"},{"lineNumber":88,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":89,"author":{"gitId":"Kureans"},"content":"Expected Output:","lastModifiedDate":"2021-10-24"},{"lineNumber":90,"author":{"gitId":"Kureans"},"content":"```","lastModifiedDate":"2021-10-24"},{"lineNumber":91,"author":{"gitId":"Kureans"},"content":"Thank you for using MedBot!","lastModifiedDate":"2021-10-24"},{"lineNumber":92,"author":{"gitId":"Kureans"},"content":"See you again!","lastModifiedDate":"2021-10-24"},{"lineNumber":93,"author":{"gitId":"Kureans"},"content":"```","lastModifiedDate":"2021-10-24"},{"lineNumber":94,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":95,"author":{"gitId":"Kureans"},"content":"### Accessing user guide: `help`","lastModifiedDate":"2021-10-24"},{"lineNumber":96,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":97,"author":{"gitId":"Kureans"},"content":"Provides an internal user guide that is accessible via the command line.","lastModifiedDate":"2021-10-24"},{"lineNumber":98,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":99,"author":{"gitId":"Kureans"},"content":"Format: `help [COMMAND]`","lastModifiedDate":"2021-10-24"},{"lineNumber":100,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":101,"author":{"gitId":"Kureans"},"content":"Expected Output: ","lastModifiedDate":"2021-10-24"},{"lineNumber":102,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":103,"author":{"gitId":"Kureans"},"content":"Inputting `help` without parameters:","lastModifiedDate":"2021-10-24"},{"lineNumber":104,"author":{"gitId":"Kureans"},"content":"```","lastModifiedDate":"2021-10-24"},{"lineNumber":105,"author":{"gitId":"Kureans"},"content":"Here are the list of commands:","lastModifiedDate":"2021-10-24"},{"lineNumber":106,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":107,"author":{"gitId":"Kureans"},"content":"help","lastModifiedDate":"2021-10-24"},{"lineNumber":108,"author":{"gitId":"Kureans"},"content":"add","lastModifiedDate":"2021-10-24"},{"lineNumber":109,"author":{"gitId":"Kureans"},"content":"list","lastModifiedDate":"2021-10-24"},{"lineNumber":110,"author":{"gitId":"Kureans"},"content":"view","lastModifiedDate":"2021-10-24"},{"lineNumber":111,"author":{"gitId":"Kureans"},"content":"edit","lastModifiedDate":"2021-10-24"},{"lineNumber":112,"author":{"gitId":"Kureans"},"content":"find","lastModifiedDate":"2021-10-24"},{"lineNumber":113,"author":{"gitId":"Kureans"},"content":"delete","lastModifiedDate":"2021-10-24"},{"lineNumber":114,"author":{"gitId":"Kureans"},"content":"switch","lastModifiedDate":"2021-10-24"},{"lineNumber":115,"author":{"gitId":"Kureans"},"content":"exit","lastModifiedDate":"2021-10-24"},{"lineNumber":116,"author":{"gitId":"EricBryann"},"content":"archive","lastModifiedDate":"2021-10-26"},{"lineNumber":117,"author":{"gitId":"EricBryann"},"content":"unarchive","lastModifiedDate":"2021-10-26"},{"lineNumber":118,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":119,"author":{"gitId":"Kureans"},"content":"To obtain more information on each command and their respective required inputs, type:","lastModifiedDate":"2021-10-24"},{"lineNumber":120,"author":{"gitId":"Kureans"},"content":"help [COMMAND]","lastModifiedDate":"2021-10-24"},{"lineNumber":121,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":122,"author":{"gitId":"Kureans"},"content":"*Note that all commands will remove any \u0027|\u0027 inputs for format parsing purposes","lastModifiedDate":"2021-10-24"},{"lineNumber":123,"author":{"gitId":"Kureans"},"content":"```","lastModifiedDate":"2021-10-24"},{"lineNumber":124,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":125,"author":{"gitId":"justinfidelis"},"content":"### Patient / Medical Staff Information Commands","lastModifiedDate":"2021-10-26"},{"lineNumber":126,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":127,"author":{"gitId":"Kureans"},"content":"Functionally, the commands for the patient information view and","lastModifiedDate":"2021-10-24"},{"lineNumber":128,"author":{"gitId":"Kureans"},"content":"medical staff information view are the same. Here, we\u0027ll be using","lastModifiedDate":"2021-10-24"},{"lineNumber":129,"author":{"gitId":"Kureans"},"content":"`PATIENT_INFO_VIEW`-specific examples, but these commands would apply exactly","lastModifiedDate":"2021-10-24"},{"lineNumber":130,"author":{"gitId":"Kureans"},"content":"the same for the `STAFF_INFO_VIEW` as well.","lastModifiedDate":"2021-10-24"},{"lineNumber":131,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":132,"author":{"gitId":"Kureans"},"content":"### Adding a patient: `add`","lastModifiedDate":"2021-10-24"},{"lineNumber":133,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":134,"author":{"gitId":"Kureans"},"content":"Adds a patient to the patient list.","lastModifiedDate":"2021-10-24"},{"lineNumber":135,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":136,"author":{"gitId":"Kureans"},"content":"Format: `add i/PATIENT_ID [n/NAME] [p/PHONE_NUMBER] [e/EMAIL] [a/ADDRESS]`","lastModifiedDate":"2021-10-24"},{"lineNumber":137,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":138,"author":{"gitId":"Kureans"},"content":"Expected output:","lastModifiedDate":"2021-10-24"},{"lineNumber":139,"author":{"gitId":"Kureans"},"content":"```","lastModifiedDate":"2021-10-24"},{"lineNumber":140,"author":{"gitId":"Kureans"},"content":"Patient with the following information has been successfully added to the list:","lastModifiedDate":"2021-10-24"},{"lineNumber":141,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":142,"author":{"gitId":"Kureans"},"content":"IC: PATIENT_IC","lastModifiedDate":"2021-10-24"},{"lineNumber":143,"author":{"gitId":"Kureans"},"content":"Name: NAME","lastModifiedDate":"2021-10-24"},{"lineNumber":144,"author":{"gitId":"Kureans"},"content":"H/P: PHONE_NUMBER","lastModifiedDate":"2021-10-24"},{"lineNumber":145,"author":{"gitId":"Kureans"},"content":"Email: EMAIL","lastModifiedDate":"2021-10-24"},{"lineNumber":146,"author":{"gitId":"Kureans"},"content":"Address: ADDRESS","lastModifiedDate":"2021-10-24"},{"lineNumber":147,"author":{"gitId":"Kureans"},"content":"```","lastModifiedDate":"2021-10-24"},{"lineNumber":148,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":149,"author":{"gitId":"Kureans"},"content":"Examples:","lastModifiedDate":"2021-10-24"},{"lineNumber":150,"author":{"gitId":"Kureans"},"content":"`add i/1234 n/”John Doe” p/87654321 e/john.doe@gmail.com a/”John Street, block 1234, #01-01”`","lastModifiedDate":"2021-10-24"},{"lineNumber":151,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":152,"author":{"gitId":"justinfidelis"},"content":"Do note that the personal information of the patient does not have to be entered in any particular order.","lastModifiedDate":"2021-10-26"},{"lineNumber":153,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":154,"author":{"gitId":"Kureans"},"content":"### Delete a patient: `delete`","lastModifiedDate":"2021-10-24"},{"lineNumber":155,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":156,"author":{"gitId":"Kureans"},"content":"Deletes a patient from the list.","lastModifiedDate":"2021-10-24"},{"lineNumber":157,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":158,"author":{"gitId":"Kureans"},"content":"Format: `delete PATIENT_ID`","lastModifiedDate":"2021-10-24"},{"lineNumber":159,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":160,"author":{"gitId":"Kureans"},"content":"Expected Output:","lastModifiedDate":"2021-10-24"},{"lineNumber":161,"author":{"gitId":"Kureans"},"content":"```","lastModifiedDate":"2021-10-24"},{"lineNumber":162,"author":{"gitId":"Kureans"},"content":"Patient with the following information has been successfully deleted from the list:","lastModifiedDate":"2021-10-24"},{"lineNumber":163,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":164,"author":{"gitId":"Kureans"},"content":"Patient ID: PATIENT_ID","lastModifiedDate":"2021-10-24"},{"lineNumber":165,"author":{"gitId":"Kureans"},"content":"IC: PATIENT_IC","lastModifiedDate":"2021-10-24"},{"lineNumber":166,"author":{"gitId":"Kureans"},"content":"Name: NAME","lastModifiedDate":"2021-10-24"},{"lineNumber":167,"author":{"gitId":"Kureans"},"content":"H/P: PHONE_NUMBER","lastModifiedDate":"2021-10-24"},{"lineNumber":168,"author":{"gitId":"Kureans"},"content":"Email: EMAIL","lastModifiedDate":"2021-10-24"},{"lineNumber":169,"author":{"gitId":"Kureans"},"content":"Address: ADDRESS","lastModifiedDate":"2021-10-24"},{"lineNumber":170,"author":{"gitId":"Kureans"},"content":"```","lastModifiedDate":"2021-10-24"},{"lineNumber":171,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":172,"author":{"gitId":"Kureans"},"content":"Examples:","lastModifiedDate":"2021-10-24"},{"lineNumber":173,"author":{"gitId":"Kureans"},"content":"`delete 123` deletes the patient with PATIENT_ID 123 in the list.","lastModifiedDate":"2021-10-24"},{"lineNumber":174,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":175,"author":{"gitId":"Kureans"},"content":"### View a patient’s information: `view`","lastModifiedDate":"2021-10-24"},{"lineNumber":176,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":177,"author":{"gitId":"Kureans"},"content":"View a patient’s personal information.","lastModifiedDate":"2021-10-24"},{"lineNumber":178,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":179,"author":{"gitId":"Kureans"},"content":"Format: `view PATIENT_ID`","lastModifiedDate":"2021-10-24"},{"lineNumber":180,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":181,"author":{"gitId":"Kureans"},"content":"Expected Output:","lastModifiedDate":"2021-10-24"},{"lineNumber":182,"author":{"gitId":"Kureans"},"content":"```","lastModifiedDate":"2021-10-24"},{"lineNumber":183,"author":{"gitId":"Kureans"},"content":"Here\u0027s the requested patient:","lastModifiedDate":"2021-10-24"},{"lineNumber":184,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":185,"author":{"gitId":"Kureans"},"content":"Patient ID: PATIENT_ID","lastModifiedDate":"2021-10-24"},{"lineNumber":186,"author":{"gitId":"Kureans"},"content":"IC: PATIENT_IC","lastModifiedDate":"2021-10-24"},{"lineNumber":187,"author":{"gitId":"Kureans"},"content":"Name: NAME","lastModifiedDate":"2021-10-24"},{"lineNumber":188,"author":{"gitId":"Kureans"},"content":"H/P: PHONE_NUMBER","lastModifiedDate":"2021-10-24"},{"lineNumber":189,"author":{"gitId":"Kureans"},"content":"Email: EMAIL","lastModifiedDate":"2021-10-24"},{"lineNumber":190,"author":{"gitId":"Kureans"},"content":"Address: ADDRESS","lastModifiedDate":"2021-10-24"},{"lineNumber":191,"author":{"gitId":"Kureans"},"content":"```","lastModifiedDate":"2021-10-24"},{"lineNumber":192,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":193,"author":{"gitId":"Kureans"},"content":"### List information of all current patients: `list`","lastModifiedDate":"2021-10-24"},{"lineNumber":194,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":195,"author":{"gitId":"EricBryann"},"content":"`list` will show all unarchived patients.","lastModifiedDate":"2021-10-26"},{"lineNumber":196,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":197,"author":{"gitId":"EricBryann"},"content":"To show archived patients, use `list -ar`","lastModifiedDate":"2021-10-26"},{"lineNumber":198,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":199,"author":{"gitId":"Kureans"},"content":"Format: list","lastModifiedDate":"2021-10-24"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":201,"author":{"gitId":"Kureans"},"content":"Example Output:","lastModifiedDate":"2021-10-24"},{"lineNumber":202,"author":{"gitId":"Kureans"},"content":"```","lastModifiedDate":"2021-10-24"},{"lineNumber":203,"author":{"gitId":"Kureans"},"content":"Here is a list of all patients:","lastModifiedDate":"2021-10-24"},{"lineNumber":204,"author":{"gitId":"Kureans"},"content":"For full details of each patient, please use the command \"view PATIENT_ID\"","lastModifiedDate":"2021-10-24"},{"lineNumber":205,"author":{"gitId":"Kureans"},"content":" ----------------------------------------------------------------------------------------------------- ","lastModifiedDate":"2021-10-24"},{"lineNumber":206,"author":{"gitId":"Kureans"},"content":" |  ID  | IC Number |         Name         | Phone No. |        Email         |       Address        | ","lastModifiedDate":"2021-10-24"},{"lineNumber":207,"author":{"gitId":"Kureans"},"content":" ----------------------------------------------------------------------------------------------------- ","lastModifiedDate":"2021-10-24"},{"lineNumber":208,"author":{"gitId":"Kureans"},"content":" | 0    | S2121211A | Alice                |           |                      |                      | ","lastModifiedDate":"2021-10-24"},{"lineNumber":209,"author":{"gitId":"Kureans"},"content":" | 1    | S1212121B | Bob                  |           |                      |                      | ","lastModifiedDate":"2021-10-24"},{"lineNumber":210,"author":{"gitId":"Kureans"},"content":" | 2    | S1234561C | Charlie              |           |                      |                      | ","lastModifiedDate":"2021-10-24"},{"lineNumber":211,"author":{"gitId":"Kureans"},"content":" | 3    | S1231234A | John Smith           | 91234567  | johnsmit@eg.com      | Qweqwqwenoiqwenqw    | ","lastModifiedDate":"2021-10-24"},{"lineNumber":212,"author":{"gitId":"Kureans"},"content":" ----------------------------------------------------------------------------------------------------- ","lastModifiedDate":"2021-10-24"},{"lineNumber":213,"author":{"gitId":"Kureans"},"content":"```","lastModifiedDate":"2021-10-24"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":215,"author":{"gitId":"Kureans"},"content":"### Edit information of a patient: `edit`","lastModifiedDate":"2021-10-24"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":217,"author":{"gitId":"Kureans"},"content":"Edit the personal and medical information of a patient in the list.","lastModifiedDate":"2021-10-24"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":219,"author":{"gitId":"Kureans"},"content":"Format: `edit PATIENT ID [i/PATIENT_IC] [n/NAME] [p/PHONE_NUMBER] [e/EMAIL] [a/ADDRESS]`","lastModifiedDate":"2021-10-24"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":221,"author":{"gitId":"Kureans"},"content":"Expected output:","lastModifiedDate":"2021-10-24"},{"lineNumber":222,"author":{"gitId":"Kureans"},"content":"```","lastModifiedDate":"2021-10-24"},{"lineNumber":223,"author":{"gitId":"Kureans"},"content":"The information of patient with ID [PATIENT_ID] has been edited to:","lastModifiedDate":"2021-10-24"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":225,"author":{"gitId":"Kureans"},"content":"Patient ID: PATIENT_ID","lastModifiedDate":"2021-10-24"},{"lineNumber":226,"author":{"gitId":"Kureans"},"content":"IC: PATIENT_IC","lastModifiedDate":"2021-10-24"},{"lineNumber":227,"author":{"gitId":"Kureans"},"content":"Name: NAME","lastModifiedDate":"2021-10-24"},{"lineNumber":228,"author":{"gitId":"Kureans"},"content":"H/P: PHONE_NUMBER","lastModifiedDate":"2021-10-24"},{"lineNumber":229,"author":{"gitId":"Kureans"},"content":"Email: EMAIL","lastModifiedDate":"2021-10-24"},{"lineNumber":230,"author":{"gitId":"Kureans"},"content":"Address: ADDRESS","lastModifiedDate":"2021-10-24"},{"lineNumber":231,"author":{"gitId":"Kureans"},"content":"```","lastModifiedDate":"2021-10-24"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":233,"author":{"gitId":"EricBryann"},"content":"### Find patients based on attributes: `find`","lastModifiedDate":"2021-10-26"},{"lineNumber":234,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":235,"author":{"gitId":"EricBryann"},"content":"Find all patients that contains the given attributes.","lastModifiedDate":"2021-10-26"},{"lineNumber":236,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":237,"author":{"gitId":"EricBryann"},"content":"Format `find [i/PATIENT_IC] [n/NAME] [p/PHONE_NUMBER] [e/EMAIL] [a/ADDRESS]`","lastModifiedDate":"2021-10-26"},{"lineNumber":238,"author":{"gitId":"EricBryann"},"content":"* The attributes given do not have to be in full.","lastModifiedDate":"2021-10-26"},{"lineNumber":239,"author":{"gitId":"EricBryann"},"content":"* At least one attribute must be present.","lastModifiedDate":"2021-10-26"},{"lineNumber":240,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":241,"author":{"gitId":"EricBryann"},"content":"Example:","lastModifiedDate":"2021-10-26"},{"lineNumber":242,"author":{"gitId":"EricBryann"},"content":"`find n/Smith`","lastModifiedDate":"2021-10-26"},{"lineNumber":243,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":244,"author":{"gitId":"EricBryann"},"content":"Expected output:","lastModifiedDate":"2021-10-26"},{"lineNumber":245,"author":{"gitId":"EricBryann"},"content":"```","lastModifiedDate":"2021-10-26"},{"lineNumber":246,"author":{"gitId":"EricBryann"},"content":"Here is a list of all patients:","lastModifiedDate":"2021-10-26"},{"lineNumber":247,"author":{"gitId":"EricBryann"},"content":"For full details of each patient, please use the command \"view PATIENT_ID\"","lastModifiedDate":"2021-10-26"},{"lineNumber":248,"author":{"gitId":"EricBryann"},"content":" ----------------------------------------------------------------------------------------------------- ","lastModifiedDate":"2021-10-26"},{"lineNumber":249,"author":{"gitId":"EricBryann"},"content":" |  ID  | IC Number |         Name         | Phone No. |        Email         |       Address        | ","lastModifiedDate":"2021-10-26"},{"lineNumber":250,"author":{"gitId":"EricBryann"},"content":" ----------------------------------------------------------------------------------------------------- ","lastModifiedDate":"2021-10-26"},{"lineNumber":251,"author":{"gitId":"EricBryann"},"content":" | 3    | S1231234A | John Smith           | 91234567  | johnsmit@eg.com      | Qweqwqwenoiqwenqw    | ","lastModifiedDate":"2021-10-26"},{"lineNumber":252,"author":{"gitId":"EricBryann"},"content":" ----------------------------------------------------------------------------------------------------- ","lastModifiedDate":"2021-10-26"},{"lineNumber":253,"author":{"gitId":"EricBryann"},"content":"```","lastModifiedDate":"2021-10-26"},{"lineNumber":254,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":255,"author":{"gitId":"EricBryann"},"content":"### Archive a patient: `archive`","lastModifiedDate":"2021-10-26"},{"lineNumber":256,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":257,"author":{"gitId":"EricBryann"},"content":"Archive a patient in the list. Archived patients are not shown with `list` command.","lastModifiedDate":"2021-10-26"},{"lineNumber":258,"author":{"gitId":"EricBryann"},"content":"To show all archived patients, use `list -ar`.","lastModifiedDate":"2021-10-26"},{"lineNumber":259,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":260,"author":{"gitId":"EricBryann"},"content":"This command only works for currently unarchived patients.","lastModifiedDate":"2021-10-26"},{"lineNumber":261,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":262,"author":{"gitId":"EricBryann"},"content":"Format: `archive PATIENT_ID`","lastModifiedDate":"2021-10-26"},{"lineNumber":263,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":264,"author":{"gitId":"EricBryann"},"content":"Expected output:","lastModifiedDate":"2021-10-26"},{"lineNumber":265,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":266,"author":{"gitId":"EricBryann"},"content":"`The patient with ID: 1 is archived successfully.`","lastModifiedDate":"2021-10-26"},{"lineNumber":267,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":268,"author":{"gitId":"EricBryann"},"content":"### Unarchive a patient: `unarchive`","lastModifiedDate":"2021-10-26"},{"lineNumber":269,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":270,"author":{"gitId":"EricBryann"},"content":"Unarchive a patient in the list. Unarchived patients are shown on `list`","lastModifiedDate":"2021-10-26"},{"lineNumber":271,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":272,"author":{"gitId":"EricBryann"},"content":"This command only works for currently archived patients.","lastModifiedDate":"2021-10-26"},{"lineNumber":273,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":274,"author":{"gitId":"EricBryann"},"content":"Format: `unarchive PATIENT_ID`","lastModifiedDate":"2021-10-26"},{"lineNumber":275,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":276,"author":{"gitId":"EricBryann"},"content":"Expected output:","lastModifiedDate":"2021-10-26"},{"lineNumber":277,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":278,"author":{"gitId":"EricBryann"},"content":"`The patient with ID: 1 is unarchived successfully.`","lastModifiedDate":"2021-10-26"},{"lineNumber":279,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":280,"author":{"gitId":"justinfidelis"},"content":"### Scheduler Commands","lastModifiedDate":"2021-10-26"},{"lineNumber":281,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":282,"author":{"gitId":"justinfidelis"},"content":"### Adding an appointment: `add`","lastModifiedDate":"2021-10-26"},{"lineNumber":283,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":284,"author":{"gitId":"justinfidelis"},"content":"Adds an appointment to the list. MedBot will check if the appointment clashes with others and display an error message","lastModifiedDate":"2021-10-26"},{"lineNumber":285,"author":{"gitId":"justinfidelis"},"content":"if it does.","lastModifiedDate":"2021-10-26"},{"lineNumber":286,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":287,"author":{"gitId":"justinfidelis"},"content":"Format: `add p/PATIENT_ID s/STAFF_ID d/DATE_TIME`","lastModifiedDate":"2021-10-26"},{"lineNumber":288,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":289,"author":{"gitId":"justinfidelis"},"content":"The format for `DATE_TIME` is `DDMMYY hhmm`. I.e. 9 February 2021, 0800HRS should be written as `090221 0800`","lastModifiedDate":"2021-10-26"},{"lineNumber":290,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":291,"author":{"gitId":"justinfidelis"},"content":"Expected output:","lastModifiedDate":"2021-10-26"},{"lineNumber":292,"author":{"gitId":"justinfidelis"},"content":"```","lastModifiedDate":"2021-10-26"},{"lineNumber":293,"author":{"gitId":"justinfidelis"},"content":"Appointment added: Appointment Id: APPOINTMENT_ID Date/Time: DATE_TIME Patient ID: PATIENT_ID Staff ID: STAFF_ID","lastModifiedDate":"2021-10-26"},{"lineNumber":294,"author":{"gitId":"justinfidelis"},"content":"```","lastModifiedDate":"2021-10-26"},{"lineNumber":295,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":296,"author":{"gitId":"justinfidelis"},"content":"Do note that the appointments are managed at an hourly basis. For example, any appointments set to any time between","lastModifiedDate":"2021-10-26"},{"lineNumber":297,"author":{"gitId":"justinfidelis"},"content":"0800HRS and 0859HRS will be treated as an appointment from 0800HRS to 0859HRS. No subsequent appointment can then be","lastModifiedDate":"2021-10-26"},{"lineNumber":298,"author":{"gitId":"justinfidelis"},"content":"scheduled for either the patient and the medical staff during that window.","lastModifiedDate":"2021-10-26"},{"lineNumber":299,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":300,"author":{"gitId":"justinfidelis"},"content":"### Deleting an appointment: `delete`","lastModifiedDate":"2021-10-26"},{"lineNumber":301,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":302,"author":{"gitId":"justinfidelis"},"content":"Delete an appointment from the list.","lastModifiedDate":"2021-10-26"},{"lineNumber":303,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":304,"author":{"gitId":"justinfidelis"},"content":"Format: `delete APPOINTMENT_ID`","lastModifiedDate":"2021-10-26"},{"lineNumber":305,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":306,"author":{"gitId":"justinfidelis"},"content":"Expected output:","lastModifiedDate":"2021-10-26"},{"lineNumber":307,"author":{"gitId":"justinfidelis"},"content":"```","lastModifiedDate":"2021-10-26"},{"lineNumber":308,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":309,"author":{"gitId":"justinfidelis"},"content":"```","lastModifiedDate":"2021-10-26"},{"lineNumber":310,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":311,"author":{"gitId":"justinfidelis"},"content":"### Editing an appointment\u0027s information: `edit`","lastModifiedDate":"2021-10-26"},{"lineNumber":312,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":313,"author":{"gitId":"justinfidelis"},"content":"Edit an appointment\u0027s information. MedBot will check if the edited appointment clashes with others and display an error ","lastModifiedDate":"2021-10-26"},{"lineNumber":314,"author":{"gitId":"justinfidelis"},"content":"message if it does.","lastModifiedDate":"2021-10-26"},{"lineNumber":315,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":316,"author":{"gitId":"justinfidelis"},"content":"Format: `edit APPOINTMENT_ID [p/PAITENT_ID] [s/STAFF_ID] [d/DATE_TIME]`","lastModifiedDate":"2021-10-26"},{"lineNumber":317,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":318,"author":{"gitId":"justinfidelis"},"content":"Expected output:","lastModifiedDate":"2021-10-26"},{"lineNumber":319,"author":{"gitId":"justinfidelis"},"content":"```","lastModifiedDate":"2021-10-26"},{"lineNumber":320,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":321,"author":{"gitId":"justinfidelis"},"content":"```","lastModifiedDate":"2021-10-26"},{"lineNumber":322,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":323,"author":{"gitId":"justinfidelis"},"content":"### Viewing an appointment\u0027s information: `view`","lastModifiedDate":"2021-10-26"},{"lineNumber":324,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":325,"author":{"gitId":"justinfidelis"},"content":"View the information of an appointment.","lastModifiedDate":"2021-10-26"},{"lineNumber":326,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":327,"author":{"gitId":"justinfidelis"},"content":"Format: `view APPOINTMENT_ID`","lastModifiedDate":"2021-10-26"},{"lineNumber":328,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":329,"author":{"gitId":"justinfidelis"},"content":"Expected output:","lastModifiedDate":"2021-10-26"},{"lineNumber":330,"author":{"gitId":"justinfidelis"},"content":"```","lastModifiedDate":"2021-10-26"},{"lineNumber":331,"author":{"gitId":"justinfidelis"},"content":"Appointment Id: APPOINTMENT_ID Date/Time: DATE_TIME Patient ID: PATIENT_ID Staff ID: STAFF_ID","lastModifiedDate":"2021-10-26"},{"lineNumber":332,"author":{"gitId":"justinfidelis"},"content":"```","lastModifiedDate":"2021-10-26"},{"lineNumber":333,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":334,"author":{"gitId":"justinfidelis"},"content":"### Listing information of all appointments: `list`","lastModifiedDate":"2021-10-26"},{"lineNumber":335,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":336,"author":{"gitId":"justinfidelis"},"content":"List the information of all appointments, including those of archived patients.","lastModifiedDate":"2021-10-26"},{"lineNumber":337,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":338,"author":{"gitId":"justinfidelis"},"content":"Format: `list`","lastModifiedDate":"2021-10-26"},{"lineNumber":339,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":340,"author":{"gitId":"justinfidelis"},"content":"Example output:","lastModifiedDate":"2021-10-26"},{"lineNumber":341,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":342,"author":{"gitId":"justinfidelis"},"content":"```","lastModifiedDate":"2021-10-26"},{"lineNumber":343,"author":{"gitId":"justinfidelis"},"content":"Here is a list of all appointments:","lastModifiedDate":"2021-10-26"},{"lineNumber":344,"author":{"gitId":"justinfidelis"},"content":" -------------------------------------------------------------------------------------------------- ","lastModifiedDate":"2021-10-26"},{"lineNumber":345,"author":{"gitId":"justinfidelis"},"content":" |  ID  |     Date/Time     | Patient ID |     Patient Name     | Staff ID |      Staff Name      | ","lastModifiedDate":"2021-10-26"},{"lineNumber":346,"author":{"gitId":"justinfidelis"},"content":" -------------------------------------------------------------------------------------------------- ","lastModifiedDate":"2021-10-26"},{"lineNumber":347,"author":{"gitId":"justinfidelis"},"content":" | 1    | 12 Nov 21 0900HRS | 1          | James Tan            | 2        | Dr Tay               | ","lastModifiedDate":"2021-10-26"},{"lineNumber":348,"author":{"gitId":"justinfidelis"},"content":" | 2    | 10 Dec 21 1000HRS | 1          | James Tan            | 2        | Dr Tay               | ","lastModifiedDate":"2021-10-26"},{"lineNumber":349,"author":{"gitId":"justinfidelis"},"content":" | 3    | 19 Nov 21 1400HRS | 2          | Eliot Ong            | 2        | Dr Tay               | ","lastModifiedDate":"2021-10-26"},{"lineNumber":350,"author":{"gitId":"justinfidelis"},"content":" | 4    | 31 Oct 21 1200HRS | 3          | Daniel Chan          | 1        | Dr Lim               | ","lastModifiedDate":"2021-10-26"},{"lineNumber":351,"author":{"gitId":"justinfidelis"},"content":"```","lastModifiedDate":"2021-10-26"},{"lineNumber":352,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":353,"author":{"gitId":"justinfidelis"},"content":"### Finding an appointment","lastModifiedDate":"2021-10-26"},{"lineNumber":354,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":355,"author":{"gitId":"justinfidelis"},"content":"List the information of all appointments that match the given parameters.","lastModifiedDate":"2021-10-26"},{"lineNumber":356,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":357,"author":{"gitId":"justinfidelis"},"content":"Format: ","lastModifiedDate":"2021-10-26"},{"lineNumber":358,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":359,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-24"},{"lineNumber":360,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":361,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another computer? ","lastModifiedDate":"2020-05-24"},{"lineNumber":362,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":363,"author":{"gitId":"-"},"content":"**A**: {your answer here}","lastModifiedDate":"2020-05-24"},{"lineNumber":364,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":365,"author":{"gitId":"-"},"content":"## Command Summary","lastModifiedDate":"2020-05-24"},{"lineNumber":366,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":367,"author":{"gitId":"Kureans"},"content":"### View Independent Commands","lastModifiedDate":"2021-10-24"},{"lineNumber":368,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":369,"author":{"gitId":"Kureans"},"content":"| Action       | Format + Examples |","lastModifiedDate":"2021-10-24"},{"lineNumber":370,"author":{"gitId":"Kureans"},"content":"| :---         | :-----            |","lastModifiedDate":"2021-10-24"},{"lineNumber":371,"author":{"gitId":"Kureans"},"content":"| **switch**   | `switch [VIEW_TYPE]` \u003cbr/\u003eeg., `switch s`|","lastModifiedDate":"2021-10-24"},{"lineNumber":372,"author":{"gitId":"Kureans"},"content":"| **help**     | `help [COMMAND]` \u003cbr/\u003eeg., `help add`|","lastModifiedDate":"2021-10-24"},{"lineNumber":373,"author":{"gitId":"Kureans"},"content":"| **exit**     | `exit`|","lastModifiedDate":"2021-10-24"},{"lineNumber":374,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":375,"author":{"gitId":"Kureans"},"content":"### Patient/Medical Staff Information View","lastModifiedDate":"2021-10-24"},{"lineNumber":376,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":377,"author":{"gitId":"Kureans"},"content":"| Action       | Format + Examples        |","lastModifiedDate":"2021-10-24"},{"lineNumber":378,"author":{"gitId":"Kureans"},"content":"| :---         | :---                     |","lastModifiedDate":"2021-10-24"},{"lineNumber":379,"author":{"gitId":"Kureans"},"content":"| **add**      | `add i/PERSON_ID [n/NAME] [p/PHONE_NUMBER] [e/EMAIL] [a/ADDRESS]`\u003cbr/\u003eeg.,`add i/S1231234A n/John Smith p/91234567 e/johnsmit@eg.com a/ABC Street 123`|","lastModifiedDate":"2021-10-24"},{"lineNumber":380,"author":{"gitId":"Kureans"},"content":"| **list**     | `list`|","lastModifiedDate":"2021-10-24"},{"lineNumber":381,"author":{"gitId":"Kureans"},"content":"| **edit**     | `edit PERSON_ID [i/PATIENT_IC] [n/NAME] [p/PHONE_NUMBER] [e/EMAIL] [a/ADDRESS]` \u003cbr/\u003eeg., `edit 2 n/Bob Smith`|","lastModifiedDate":"2021-10-24"},{"lineNumber":382,"author":{"gitId":"Kureans"},"content":"| **view**     | `view [PERSON_ID]`\u003cbr/\u003eeg., `view 3`|","lastModifiedDate":"2021-10-24"},{"lineNumber":383,"author":{"gitId":"Kureans"},"content":"| **delete**   | `delete [PERSON_ID]`\u003cbr/\u003eeg., `delete 2`|","lastModifiedDate":"2021-10-24"},{"lineNumber":384,"author":{"gitId":"Kureans"},"content":"| **find**     | `find [i/PERSON_IC] [n/NAME] [p/PHONE_NUMBER] [e/EMAIL] [a/ADDRESS]`\u003cbr/\u003eeg.,`find i/s1231234A`|","lastModifiedDate":"2021-10-24"},{"lineNumber":385,"author":{"gitId":"EricBryann"},"content":"| **archive**  | `archive PATIENT_ID`\u003cbr/\u003eeg., `archive 1`|","lastModifiedDate":"2021-10-26"},{"lineNumber":386,"author":{"gitId":"EricBryann"},"content":"| **unarchive**| `unarchive PATIENT_ID`\u003cbr/\u003eeg., `unarchive 1`|","lastModifiedDate":"2021-10-26"},{"lineNumber":387,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":388,"author":{"gitId":"Kureans"},"content":"### Scheduler View","lastModifiedDate":"2021-10-24"},{"lineNumber":389,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":390,"author":{"gitId":"Kureans"},"content":"| Action       | Format + Examples        |","lastModifiedDate":"2021-10-24"},{"lineNumber":391,"author":{"gitId":"Kureans"},"content":"| :---         | :---                     |","lastModifiedDate":"2021-10-24"},{"lineNumber":392,"author":{"gitId":"justinfidelis"},"content":"| **add**      | `add p/PERSON_ID s/STAFF_ID d/DATE_TIME` \u003cbr/\u003e E.g., `add p/19 s/1 d/090222 0900`|","lastModifiedDate":"2021-10-26"},{"lineNumber":393,"author":{"gitId":"justinfidelis"},"content":"| **delete**   | `delete APPOINTMENT_ID`  |","lastModifiedDate":"2021-10-26"},{"lineNumber":394,"author":{"gitId":"justinfidelis"},"content":"| **edit**     | `edit APPOINTMENT_ID [p/PAITENT_ID] [s/STAFF_ID] [d/DATE_TIME]` \u003cbr/\u003e E.g., `edit 2 s/3 d/100322 0800`|","lastModifiedDate":"2021-10-26"},{"lineNumber":395,"author":{"gitId":"justinfidelis"},"content":"| **find**     |                          |","lastModifiedDate":"2021-10-26"},{"lineNumber":396,"author":{"gitId":"justinfidelis"},"content":"| **list**     | `list`                   |","lastModifiedDate":"2021-10-26"},{"lineNumber":397,"author":{"gitId":"justinfidelis"},"content":"| **view**     | `view APPOINTMENT_ID` \u003cbr/\u003e E.g., `view 3` |","lastModifiedDate":"2021-10-26"},{"lineNumber":398,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":399,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"justinfidelis":109,"-":34,"Kureans":201,"EricBryann":55}},{"path":"docs/diagrams/pumlfiles/AppointmentCommand.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jushg"},"content":"@startuml","lastModifiedDate":"2021-10-26"},{"lineNumber":2,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":3,"author":{"gitId":"jushg"},"content":"hide circle","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"jushg"},"content":"skinparam classAttributeIconSize 0","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"jushg"},"content":"skinparam groupInheritance 6","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"jushg"},"content":"class \"{abstract} \\n Command\"{","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"jushg"},"content":"    + exit() : boolean","lastModifiedDate":"2021-10-26"},{"lineNumber":11,"author":{"gitId":"jushg"},"content":"    + {abstract} execute(Scheduler, Ui)","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"jushg"},"content":"}","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"jushg"},"content":"package medbot.command.appointmentcommand {","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"jushg"},"content":"class AddAppointmentCommand{","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"jushg"},"content":"    # appointment : Appointment","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"jushg"},"content":"    + execute(Scheduler, Ui)","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"jushg"},"content":"}","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"jushg"},"content":"class EditAppointmentCommand{","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"jushg"},"content":"    # appointmentId : int","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"jushg"},"content":"    # appointment : Appointment","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"jushg"},"content":"    + execute(Scheduler, Ui)","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"jushg"},"content":"}","lastModifiedDate":"2021-10-26"},{"lineNumber":27,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"jushg"},"content":"class FindAppointmentCommand{","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"jushg"},"content":"    # appointmentId: int","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"jushg"},"content":"    # personType : PersonType","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"jushg"},"content":"    # filterType : FilterType","lastModifiedDate":"2021-10-26"},{"lineNumber":32,"author":{"gitId":"jushg"},"content":"    # dateTimeCode: int","lastModifiedDate":"2021-10-26"},{"lineNumber":33,"author":{"gitId":"jushg"},"content":"    + execute(Scheduler, Ui)","lastModifiedDate":"2021-10-26"},{"lineNumber":34,"author":{"gitId":"jushg"},"content":"}","lastModifiedDate":"2021-10-26"},{"lineNumber":35,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":36,"author":{"gitId":"jushg"},"content":"class ListAppointmentCommand{","lastModifiedDate":"2021-10-26"},{"lineNumber":37,"author":{"gitId":"jushg"},"content":"    + execute(Scheduler, Ui)","lastModifiedDate":"2021-10-26"},{"lineNumber":38,"author":{"gitId":"jushg"},"content":"}","lastModifiedDate":"2021-10-26"},{"lineNumber":39,"author":{"gitId":"jushg"},"content":"class DeleteAppointmentCommand{","lastModifiedDate":"2021-10-26"},{"lineNumber":40,"author":{"gitId":"jushg"},"content":"    # appointmentId: int","lastModifiedDate":"2021-10-26"},{"lineNumber":41,"author":{"gitId":"jushg"},"content":"    + execute(Scheduler, Ui)","lastModifiedDate":"2021-10-26"},{"lineNumber":42,"author":{"gitId":"jushg"},"content":"}","lastModifiedDate":"2021-10-26"},{"lineNumber":43,"author":{"gitId":"jushg"},"content":"class ViewAppointmentCommand{","lastModifiedDate":"2021-10-26"},{"lineNumber":44,"author":{"gitId":"jushg"},"content":"    appointmentId: int","lastModifiedDate":"2021-10-26"},{"lineNumber":45,"author":{"gitId":"jushg"},"content":"    + execute(Scheduler, Ui)","lastModifiedDate":"2021-10-26"},{"lineNumber":46,"author":{"gitId":"jushg"},"content":"}","lastModifiedDate":"2021-10-26"},{"lineNumber":47,"author":{"gitId":"jushg"},"content":"\"{abstract} \\n Command\" \u003c|-- AddAppointmentCommand","lastModifiedDate":"2021-10-26"},{"lineNumber":48,"author":{"gitId":"jushg"},"content":"\"{abstract} \\n Command\" \u003c|-- EditAppointmentCommand","lastModifiedDate":"2021-10-26"},{"lineNumber":49,"author":{"gitId":"jushg"},"content":"\"{abstract} \\n Command\" \u003c|-- DeleteAppointmentCommand","lastModifiedDate":"2021-10-26"},{"lineNumber":50,"author":{"gitId":"jushg"},"content":"\"{abstract} \\n Command\" \u003c|-- ListAppointmentCommand","lastModifiedDate":"2021-10-26"},{"lineNumber":51,"author":{"gitId":"jushg"},"content":"\"{abstract} \\n Command\" \u003c|-- FindAppointmentCommand","lastModifiedDate":"2021-10-26"},{"lineNumber":52,"author":{"gitId":"jushg"},"content":"\"{abstract} \\n Command\" \u003c|-- ViewAppointmentCommand","lastModifiedDate":"2021-10-26"},{"lineNumber":53,"author":{"gitId":"jushg"},"content":"}","lastModifiedDate":"2021-10-26"},{"lineNumber":54,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":55,"author":{"gitId":"jushg"},"content":"@enduml","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"jushg":55}},{"path":"docs/diagrams/pumlfiles/Command.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jushg"},"content":"@startuml","lastModifiedDate":"2021-10-26"},{"lineNumber":2,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":3,"author":{"gitId":"jushg"},"content":"hide circle","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"jushg"},"content":"skinparam classAttributeIconSize 0","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"jushg"},"content":"package medbot.command {","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"jushg"},"content":"class \"{abstract} \\n Command\"{","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"jushg"},"content":"    + exit() : boolean","lastModifiedDate":"2021-10-26"},{"lineNumber":11,"author":{"gitId":"jushg"},"content":"    + execute(Scheduler, Ui) {\u0027abstract\u0027}","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"jushg"},"content":"}","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"jushg"},"content":"together {","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"jushg"},"content":"class ExitCommand {","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"jushg"},"content":"+ exit() : boolean","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"jushg"},"content":"+ execute(Scheduler, Ui)","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"jushg"},"content":"}","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"jushg"},"content":"class GetCurrentViewCommand {","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"jushg"},"content":"- viewType: ViewType","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"jushg"},"content":"+ execute(Scheduler, Ui)","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"jushg"},"content":"}","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"jushg"},"content":"class HelpCommand {","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"jushg"},"content":"- viewType: ViewType","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"jushg"},"content":"- commandType: CommandType","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"jushg"},"content":"+ execute(Scheduler, Ui)","lastModifiedDate":"2021-10-26"},{"lineNumber":27,"author":{"gitId":"jushg"},"content":"}","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"jushg"},"content":"class SwitchCommand {","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"jushg"},"content":"- newViewType: ViewType","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"jushg"},"content":"+ execute(Scheduler, Ui)","lastModifiedDate":"2021-10-26"},{"lineNumber":32,"author":{"gitId":"jushg"},"content":"}","lastModifiedDate":"2021-10-26"},{"lineNumber":33,"author":{"gitId":"jushg"},"content":"}","lastModifiedDate":"2021-10-26"},{"lineNumber":34,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":35,"author":{"gitId":"jushg"},"content":"\"{abstract} \\n Command\" \u003c|-up- HelpCommand","lastModifiedDate":"2021-10-26"},{"lineNumber":36,"author":{"gitId":"jushg"},"content":"\"{abstract} \\n Command\" \u003c|-up- ExitCommand","lastModifiedDate":"2021-10-26"},{"lineNumber":37,"author":{"gitId":"jushg"},"content":"\"{abstract} \\n Command\" \u003c|-up- SwitchCommand","lastModifiedDate":"2021-10-26"},{"lineNumber":38,"author":{"gitId":"jushg"},"content":"\"{abstract} \\n Command\" \u003c|-up- GetCurrentViewCommand","lastModifiedDate":"2021-10-26"},{"lineNumber":39,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":40,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":41,"author":{"gitId":"jushg"},"content":"package medbot.command.personcommand {","lastModifiedDate":"2021-10-26"},{"lineNumber":42,"author":{"gitId":"jushg"},"content":"class \"{abstract} \\n AddPersonCommand\"{","lastModifiedDate":"2021-10-26"},{"lineNumber":43,"author":{"gitId":"jushg"},"content":"    # person : Person","lastModifiedDate":"2021-10-26"},{"lineNumber":44,"author":{"gitId":"jushg"},"content":"    + execute(Scheduler, Ui) {\u0027abstract\u0027}","lastModifiedDate":"2021-10-26"},{"lineNumber":45,"author":{"gitId":"jushg"},"content":"}","lastModifiedDate":"2021-10-26"},{"lineNumber":46,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":47,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":48,"author":{"gitId":"jushg"},"content":"class \"{abstract} \\n ArchivePersonCommand\"{","lastModifiedDate":"2021-10-26"},{"lineNumber":49,"author":{"gitId":"jushg"},"content":"    # personId : int","lastModifiedDate":"2021-10-26"},{"lineNumber":50,"author":{"gitId":"jushg"},"content":"    + execute(Scheduler, Ui) {\u0027abstract\u0027}","lastModifiedDate":"2021-10-26"},{"lineNumber":51,"author":{"gitId":"jushg"},"content":"}","lastModifiedDate":"2021-10-26"},{"lineNumber":52,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":53,"author":{"gitId":"jushg"},"content":"class \"{abstract} \\n DeletePersonCommand\"{","lastModifiedDate":"2021-10-26"},{"lineNumber":54,"author":{"gitId":"jushg"},"content":"    # personId : int","lastModifiedDate":"2021-10-26"},{"lineNumber":55,"author":{"gitId":"jushg"},"content":"    + execute(Scheduler, Ui) {\u0027abstract\u0027}","lastModifiedDate":"2021-10-26"},{"lineNumber":56,"author":{"gitId":"jushg"},"content":"}","lastModifiedDate":"2021-10-26"},{"lineNumber":57,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":58,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":59,"author":{"gitId":"jushg"},"content":"class \"{abstract} \\n EditPersonCommand\"{","lastModifiedDate":"2021-10-26"},{"lineNumber":60,"author":{"gitId":"jushg"},"content":"    # personId : int","lastModifiedDate":"2021-10-26"},{"lineNumber":61,"author":{"gitId":"jushg"},"content":"    # person : Person","lastModifiedDate":"2021-10-26"},{"lineNumber":62,"author":{"gitId":"jushg"},"content":"    + execute(Scheduler, Ui) {\u0027abstract\u0027}","lastModifiedDate":"2021-10-26"},{"lineNumber":63,"author":{"gitId":"jushg"},"content":"}","lastModifiedDate":"2021-10-26"},{"lineNumber":64,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":65,"author":{"gitId":"jushg"},"content":"class \"{abstract} \\n FindPersonCommand\"{","lastModifiedDate":"2021-10-26"},{"lineNumber":66,"author":{"gitId":"jushg"},"content":"    # parameters: String[]","lastModifiedDate":"2021-10-26"},{"lineNumber":67,"author":{"gitId":"jushg"},"content":"    + execute(Scheduler, Ui) {\u0027abstract\u0027}","lastModifiedDate":"2021-10-26"},{"lineNumber":68,"author":{"gitId":"jushg"},"content":"}","lastModifiedDate":"2021-10-26"},{"lineNumber":69,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":70,"author":{"gitId":"jushg"},"content":"class \"{abstract} \\n ListPersonCommand\"{","lastModifiedDate":"2021-10-26"},{"lineNumber":71,"author":{"gitId":"jushg"},"content":"    # getArchived: boolean","lastModifiedDate":"2021-10-26"},{"lineNumber":72,"author":{"gitId":"jushg"},"content":"    + execute(Scheduler, Ui) {\u0027abstract\u0027}","lastModifiedDate":"2021-10-26"},{"lineNumber":73,"author":{"gitId":"jushg"},"content":"}","lastModifiedDate":"2021-10-26"},{"lineNumber":74,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":75,"author":{"gitId":"jushg"},"content":"class \"{abstract} \\n UnarchivePersonCommand\"{","lastModifiedDate":"2021-10-26"},{"lineNumber":76,"author":{"gitId":"jushg"},"content":"    # personId : int","lastModifiedDate":"2021-10-26"},{"lineNumber":77,"author":{"gitId":"jushg"},"content":"    + execute(Scheduler, Ui) {\u0027abstract\u0027}","lastModifiedDate":"2021-10-26"},{"lineNumber":78,"author":{"gitId":"jushg"},"content":"}","lastModifiedDate":"2021-10-26"},{"lineNumber":79,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":80,"author":{"gitId":"jushg"},"content":"class \"{abstract} \\n ViewPersonCommand\"{","lastModifiedDate":"2021-10-26"},{"lineNumber":81,"author":{"gitId":"jushg"},"content":"    # personId : int","lastModifiedDate":"2021-10-26"},{"lineNumber":82,"author":{"gitId":"jushg"},"content":"    + execute(Scheduler, Ui) {\u0027abstract\u0027}","lastModifiedDate":"2021-10-26"},{"lineNumber":83,"author":{"gitId":"jushg"},"content":"}","lastModifiedDate":"2021-10-26"},{"lineNumber":84,"author":{"gitId":"jushg"},"content":"\"{abstract} \\n Command\" \u003c|-- \"{abstract} \\n AddPersonCommand\"","lastModifiedDate":"2021-10-26"},{"lineNumber":85,"author":{"gitId":"jushg"},"content":"\"{abstract} \\n Command\" \u003c|-- \"{abstract} \\n EditPersonCommand\"","lastModifiedDate":"2021-10-26"},{"lineNumber":86,"author":{"gitId":"jushg"},"content":"\"{abstract} \\n Command\" \u003c|-- \"{abstract} \\n ArchivePersonCommand\"","lastModifiedDate":"2021-10-26"},{"lineNumber":87,"author":{"gitId":"jushg"},"content":"\"{abstract} \\n Command\" \u003c|-- \"{abstract} \\n UnarchivePersonCommand\"","lastModifiedDate":"2021-10-26"},{"lineNumber":88,"author":{"gitId":"jushg"},"content":"\"{abstract} \\n Command\" \u003c|-- \"{abstract} \\n DeletePersonCommand\"","lastModifiedDate":"2021-10-26"},{"lineNumber":89,"author":{"gitId":"jushg"},"content":"\"{abstract} \\n Command\" \u003c|-- \"{abstract} \\n ListPersonCommand\"","lastModifiedDate":"2021-10-26"},{"lineNumber":90,"author":{"gitId":"jushg"},"content":"\"{abstract} \\n Command\" \u003c|-- \"{abstract} \\n FindPersonCommand\"","lastModifiedDate":"2021-10-26"},{"lineNumber":91,"author":{"gitId":"jushg"},"content":"\"{abstract} \\n Command\" \u003c|-- \"{abstract} \\n ViewPersonCommand\"","lastModifiedDate":"2021-10-26"},{"lineNumber":92,"author":{"gitId":"jushg"},"content":"}","lastModifiedDate":"2021-10-26"},{"lineNumber":93,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":94,"author":{"gitId":"jushg"},"content":"package medbot.command.appointmentcommand {","lastModifiedDate":"2021-10-26"},{"lineNumber":95,"author":{"gitId":"jushg"},"content":"class AddAppointmentCommand{","lastModifiedDate":"2021-10-26"},{"lineNumber":96,"author":{"gitId":"jushg"},"content":"    # appointment : Appointment","lastModifiedDate":"2021-10-26"},{"lineNumber":97,"author":{"gitId":"jushg"},"content":"    + execute(Scheduler, Ui)","lastModifiedDate":"2021-10-26"},{"lineNumber":98,"author":{"gitId":"jushg"},"content":"}","lastModifiedDate":"2021-10-26"},{"lineNumber":99,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":100,"author":{"gitId":"jushg"},"content":"class EditAppointmentCommand{","lastModifiedDate":"2021-10-26"},{"lineNumber":101,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":102,"author":{"gitId":"jushg"},"content":"    # appointmentId : int","lastModifiedDate":"2021-10-26"},{"lineNumber":103,"author":{"gitId":"jushg"},"content":"    # appointment : Appointment","lastModifiedDate":"2021-10-26"},{"lineNumber":104,"author":{"gitId":"jushg"},"content":"    + execute(Scheduler, Ui)","lastModifiedDate":"2021-10-26"},{"lineNumber":105,"author":{"gitId":"jushg"},"content":"}","lastModifiedDate":"2021-10-26"},{"lineNumber":106,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":107,"author":{"gitId":"jushg"},"content":"class FindAppointmentCommand{","lastModifiedDate":"2021-10-26"},{"lineNumber":108,"author":{"gitId":"jushg"},"content":"    # appointmentId: int","lastModifiedDate":"2021-10-26"},{"lineNumber":109,"author":{"gitId":"jushg"},"content":"    # personType : PersonType","lastModifiedDate":"2021-10-26"},{"lineNumber":110,"author":{"gitId":"jushg"},"content":"    # filterType : FilterType","lastModifiedDate":"2021-10-26"},{"lineNumber":111,"author":{"gitId":"jushg"},"content":"    # dateTimeCode: int","lastModifiedDate":"2021-10-26"},{"lineNumber":112,"author":{"gitId":"jushg"},"content":"    + execute(Scheduler, Ui)","lastModifiedDate":"2021-10-26"},{"lineNumber":113,"author":{"gitId":"jushg"},"content":"}","lastModifiedDate":"2021-10-26"},{"lineNumber":114,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":115,"author":{"gitId":"jushg"},"content":"class ListAppointmentCommand{","lastModifiedDate":"2021-10-26"},{"lineNumber":116,"author":{"gitId":"jushg"},"content":"    + execute(Scheduler, Ui)","lastModifiedDate":"2021-10-26"},{"lineNumber":117,"author":{"gitId":"jushg"},"content":"}","lastModifiedDate":"2021-10-26"},{"lineNumber":118,"author":{"gitId":"jushg"},"content":"class DeleteAppointmentCommand{","lastModifiedDate":"2021-10-26"},{"lineNumber":119,"author":{"gitId":"jushg"},"content":"    # appointmentId: int","lastModifiedDate":"2021-10-26"},{"lineNumber":120,"author":{"gitId":"jushg"},"content":"    + execute(Scheduler, Ui)","lastModifiedDate":"2021-10-26"},{"lineNumber":121,"author":{"gitId":"jushg"},"content":"}","lastModifiedDate":"2021-10-26"},{"lineNumber":122,"author":{"gitId":"jushg"},"content":"class ViewAppointmentCommand{","lastModifiedDate":"2021-10-26"},{"lineNumber":123,"author":{"gitId":"jushg"},"content":"    appointmentId: int","lastModifiedDate":"2021-10-26"},{"lineNumber":124,"author":{"gitId":"jushg"},"content":"    + execute(Scheduler, Ui)","lastModifiedDate":"2021-10-26"},{"lineNumber":125,"author":{"gitId":"jushg"},"content":"}","lastModifiedDate":"2021-10-26"},{"lineNumber":126,"author":{"gitId":"jushg"},"content":"\"{abstract} \\n Command\" \u003c|-up AddAppointmentCommand","lastModifiedDate":"2021-10-26"},{"lineNumber":127,"author":{"gitId":"jushg"},"content":"\"{abstract} \\n Command\" \u003c|-up EditAppointmentCommand","lastModifiedDate":"2021-10-26"},{"lineNumber":128,"author":{"gitId":"jushg"},"content":"\"{abstract} \\n Command\" \u003c|-up DeleteAppointmentCommand","lastModifiedDate":"2021-10-26"},{"lineNumber":129,"author":{"gitId":"jushg"},"content":"\"{abstract} \\n Command\" \u003c|-up ListAppointmentCommand","lastModifiedDate":"2021-10-26"},{"lineNumber":130,"author":{"gitId":"jushg"},"content":"\"{abstract} \\n Command\" \u003c|-up FindAppointmentCommand","lastModifiedDate":"2021-10-26"},{"lineNumber":131,"author":{"gitId":"jushg"},"content":"\"{abstract} \\n Command\" \u003c|-up ViewAppointmentCommand","lastModifiedDate":"2021-10-26"},{"lineNumber":132,"author":{"gitId":"jushg"},"content":"}","lastModifiedDate":"2021-10-26"},{"lineNumber":133,"author":{"gitId":"jushg"},"content":"enum \"\u003c\u003cEnumeration\u003e\u003e \\n CommandType\" {","lastModifiedDate":"2021-10-26"},{"lineNumber":134,"author":{"gitId":"jushg"},"content":"  HELP","lastModifiedDate":"2021-10-26"},{"lineNumber":135,"author":{"gitId":"jushg"},"content":"  EXIT","lastModifiedDate":"2021-10-26"},{"lineNumber":136,"author":{"gitId":"jushg"},"content":"  SWITCH","lastModifiedDate":"2021-10-26"},{"lineNumber":137,"author":{"gitId":"jushg"},"content":"  ADD","lastModifiedDate":"2021-10-26"},{"lineNumber":138,"author":{"gitId":"jushg"},"content":"  DELETE","lastModifiedDate":"2021-10-26"},{"lineNumber":139,"author":{"gitId":"jushg"},"content":"  EDIT","lastModifiedDate":"2021-10-26"},{"lineNumber":140,"author":{"gitId":"jushg"},"content":"  VIEW","lastModifiedDate":"2021-10-26"},{"lineNumber":141,"author":{"gitId":"jushg"},"content":"  LIST","lastModifiedDate":"2021-10-26"},{"lineNumber":142,"author":{"gitId":"jushg"},"content":"  FIND","lastModifiedDate":"2021-10-26"},{"lineNumber":143,"author":{"gitId":"jushg"},"content":"  ARCHIVE","lastModifiedDate":"2021-10-26"},{"lineNumber":144,"author":{"gitId":"jushg"},"content":"  UNARCHIVE","lastModifiedDate":"2021-10-26"},{"lineNumber":145,"author":{"gitId":"jushg"},"content":"}","lastModifiedDate":"2021-10-26"},{"lineNumber":146,"author":{"gitId":"jushg"},"content":"}","lastModifiedDate":"2021-10-26"},{"lineNumber":147,"author":{"gitId":"jushg"},"content":"@enduml","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"jushg":147}},{"path":"docs/diagrams/pumlfiles/GeneralCommand.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jushg"},"content":"@startuml","lastModifiedDate":"2021-10-26"},{"lineNumber":2,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":3,"author":{"gitId":"jushg"},"content":"hide circle","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"jushg"},"content":"skinparam classAttributeIconSize 0","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"jushg"},"content":"skinparam groupInheritance 3","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"jushg"},"content":"package medbot.command {","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"jushg"},"content":"enum \"\u003c\u003cEnumeration\u003e\u003e \\n CommandType\" {","lastModifiedDate":"2021-10-26"},{"lineNumber":11,"author":{"gitId":"jushg"},"content":"  HELP","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"jushg"},"content":"  EXIT","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"jushg"},"content":"  SWITCH","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"jushg"},"content":"  ADD","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"jushg"},"content":"  DELETE","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"jushg"},"content":"  EDIT","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"jushg"},"content":"  VIEW","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"jushg"},"content":"  LIST","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"jushg"},"content":"  FIND","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"jushg"},"content":"  ARCHIVE","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"jushg"},"content":"  UNARCHIVE","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"jushg"},"content":"}","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"jushg"},"content":"class \"{abstract} \\n Command\"{","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"jushg"},"content":"    + exit() : boolean","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"jushg"},"content":"    + {abstract} execute(Scheduler, Ui)","lastModifiedDate":"2021-10-26"},{"lineNumber":27,"author":{"gitId":"jushg"},"content":"}","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"jushg"},"content":"class ExitCommand {","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"jushg"},"content":"+ exit() : boolean","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"jushg"},"content":"+ execute(Scheduler, Ui)","lastModifiedDate":"2021-10-26"},{"lineNumber":32,"author":{"gitId":"jushg"},"content":"}","lastModifiedDate":"2021-10-26"},{"lineNumber":33,"author":{"gitId":"jushg"},"content":"class GetCurrentViewCommand {","lastModifiedDate":"2021-10-26"},{"lineNumber":34,"author":{"gitId":"jushg"},"content":"- viewType: ViewType","lastModifiedDate":"2021-10-26"},{"lineNumber":35,"author":{"gitId":"jushg"},"content":"+ execute(Scheduler, Ui)","lastModifiedDate":"2021-10-26"},{"lineNumber":36,"author":{"gitId":"jushg"},"content":"}","lastModifiedDate":"2021-10-26"},{"lineNumber":37,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":38,"author":{"gitId":"jushg"},"content":"class HelpCommand {","lastModifiedDate":"2021-10-26"},{"lineNumber":39,"author":{"gitId":"jushg"},"content":"- viewType: ViewType","lastModifiedDate":"2021-10-26"},{"lineNumber":40,"author":{"gitId":"jushg"},"content":"- commandType: CommandType","lastModifiedDate":"2021-10-26"},{"lineNumber":41,"author":{"gitId":"jushg"},"content":"+ execute(Scheduler, Ui)","lastModifiedDate":"2021-10-26"},{"lineNumber":42,"author":{"gitId":"jushg"},"content":"}","lastModifiedDate":"2021-10-26"},{"lineNumber":43,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":44,"author":{"gitId":"jushg"},"content":"class SwitchCommand {","lastModifiedDate":"2021-10-26"},{"lineNumber":45,"author":{"gitId":"jushg"},"content":"- newViewType: ViewType","lastModifiedDate":"2021-10-26"},{"lineNumber":46,"author":{"gitId":"jushg"},"content":"+ execute(Scheduler, Ui)","lastModifiedDate":"2021-10-26"},{"lineNumber":47,"author":{"gitId":"jushg"},"content":"}","lastModifiedDate":"2021-10-26"},{"lineNumber":48,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":49,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":50,"author":{"gitId":"jushg"},"content":"\"{abstract} \\n Command\" \u003c|-- HelpCommand","lastModifiedDate":"2021-10-26"},{"lineNumber":51,"author":{"gitId":"jushg"},"content":"\"{abstract} \\n Command\" \u003c|-- ExitCommand","lastModifiedDate":"2021-10-26"},{"lineNumber":52,"author":{"gitId":"jushg"},"content":"\"{abstract} \\n Command\" \u003c|-- SwitchCommand","lastModifiedDate":"2021-10-26"},{"lineNumber":53,"author":{"gitId":"jushg"},"content":"\"{abstract} \\n Command\" \u003c|-- GetCurrentViewCommand","lastModifiedDate":"2021-10-26"},{"lineNumber":54,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":55,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":56,"author":{"gitId":"jushg"},"content":"package medbot.command.personcommand {","lastModifiedDate":"2021-10-26"},{"lineNumber":57,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":58,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":59,"author":{"gitId":"jushg"},"content":"}","lastModifiedDate":"2021-10-26"},{"lineNumber":60,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":61,"author":{"gitId":"jushg"},"content":"package medbot.command.appointmentcommand {","lastModifiedDate":"2021-10-26"},{"lineNumber":62,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":63,"author":{"gitId":"jushg"},"content":"}","lastModifiedDate":"2021-10-26"},{"lineNumber":64,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":65,"author":{"gitId":"jushg"},"content":"}","lastModifiedDate":"2021-10-26"},{"lineNumber":66,"author":{"gitId":"jushg"},"content":"@enduml","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"jushg":66}},{"path":"docs/diagrams/pumlfiles/ParserClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Kureans"},"content":"@startuml","lastModifiedDate":"2021-10-26"},{"lineNumber":2,"author":{"gitId":"Kureans"},"content":"\u0027https://plantuml.com/class-diagram","lastModifiedDate":"2021-10-26"},{"lineNumber":3,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"Kureans"},"content":"hide circle","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"Kureans"},"content":"skinparam classAttributeIconSize 0","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"Kureans"},"content":"skinparam class {","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"Kureans"},"content":"BackgroundColor DarkOrchid","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"Kureans"},"content":"ArrowColor Purple","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"Kureans"},"content":"BorderColor Purple","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"Kureans"},"content":"}","lastModifiedDate":"2021-10-26"},{"lineNumber":11,"author":{"gitId":"Kureans"},"content":"package medbot.parser #DDDDDD {","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"Kureans"},"content":"class \"{abstract}\\n Parser\"","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"Kureans"},"content":"class \"{abstract}\\n XYZCommandParser\"","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"Kureans"},"content":"class \"{abstract}\\n ParserUtils\" {","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"Kureans"},"content":"    {static} preprocessInput(userInput: String): String","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"Kureans"},"content":"    {static} getParameters(userInput: String): String","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"Kureans"},"content":"    {static} updateMultipleAppointmentInformation(person: Person, attributeStrings: String[])","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"Kureans"},"content":"    {static} updateMultiplePersonalInformation(person: Person, attributeStrings: String[])","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"Kureans"},"content":"}","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"Kureans"},"content":"\"{abstract}\\n Parser\" ..\u003e \"{abstract}\\n XYZCommandParser\"","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"Kureans"},"content":"\"{abstract}\\n XYZCommandParser\" .\u003e \"{abstract}\\n ParserUtils\" : \u003e uses","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"Kureans"},"content":"note left of \"{abstract}\\n XYZCommandParser\" : XYZCommandParser \u003d\\nPatientCommandParser/\\nSchedulerCommandParser/\\nStaffCommandParser","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"Kureans"},"content":"note top of \"{abstract}\\n ParserUtils\" : Only some key methods are listed*","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"Kureans"},"content":"}","lastModifiedDate":"2021-10-26"},{"lineNumber":27,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"Kureans"},"content":"class \"{abstract}\\n Command\"","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"Kureans"},"content":"\"{abstract}\\n Parser\" \u003c.up.MedBot","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"Kureans"},"content":"\"{abstract}\\n Command\" \u003c|- XYZCommand","lastModifiedDate":"2021-10-26"},{"lineNumber":32,"author":{"gitId":"Kureans"},"content":"\"{abstract}\\n XYZCommandParser\" ..\u003e XYZCommand :  \u003e returns","lastModifiedDate":"2021-10-26"},{"lineNumber":33,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":34,"author":{"gitId":"Kureans"},"content":"note right of XYZCommand : XYZCommand \u003d PatientCommand/\\nSchedulerCommand/StaffCommand","lastModifiedDate":"2021-10-26"},{"lineNumber":35,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":36,"author":{"gitId":"Kureans"},"content":"@enduml","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"Kureans":36}},{"path":"docs/diagrams/pumlfiles/ParserSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Kureans"},"content":"@startuml","lastModifiedDate":"2021-10-26"},{"lineNumber":2,"author":{"gitId":"Kureans"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2021-10-26"},{"lineNumber":3,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"Kureans"},"content":"control Medbot as X #red","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"Kureans"},"content":"box #beige","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"Kureans"},"content":"participant \":Parser\" as A #DarkOrchid","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"Kureans"},"content":"participant \":PatientCommandParser\" as B #DarkOrchid","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"Kureans"},"content":"participant \":ParserUtils\" as C #DarkOrchid","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"Kureans"},"content":"participant \"patient:Patient\" as D #DarkOrchid","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"Kureans"},"content":"end box","lastModifiedDate":"2021-10-26"},{"lineNumber":11,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"Kureans"},"content":"note right of C: Minor utility functions\\nin ParserUtils have\\nbeen omitted for brevity.","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"Kureans"},"content":"X -\u003e A : parseCommand(userInput)","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"Kureans"},"content":"activate A","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"Kureans"},"content":"A -\u003e B : parsePatientCommand(userInput)","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"Kureans"},"content":"activate B","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"Kureans"},"content":"B -\u003e B : parseAddCommand(userInput)","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"Kureans"},"content":"activate B","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"Kureans"},"content":"B -\u003e C : getParameters(userInput)","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"Kureans"},"content":"activate C","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"Kureans"},"content":"return parameters","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"Kureans"},"content":"create D","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"Kureans"},"content":"B -\u003e D","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"Kureans"},"content":"activate D","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"Kureans"},"content":"return patient","lastModifiedDate":"2021-10-26"},{"lineNumber":27,"author":{"gitId":"Kureans"},"content":"B -\u003e C : updateMultiplePersonalInformation(patient, parameters)","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"Kureans"},"content":"activate C","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"Kureans"},"content":"return","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"Kureans"},"content":"return AddPatientCommand(patient)","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"Kureans"},"content":"return AddPatientCommand(patient)","lastModifiedDate":"2021-10-26"},{"lineNumber":32,"author":{"gitId":"Kureans"},"content":"return AddPatientCommand(patient)","lastModifiedDate":"2021-10-26"},{"lineNumber":33,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":34,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":35,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":36,"author":{"gitId":"Kureans"},"content":"@enduml","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"Kureans":36}},{"path":"docs/diagrams/pumlfiles/PersonCommand.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jushg"},"content":"@startuml","lastModifiedDate":"2021-10-26"},{"lineNumber":2,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":3,"author":{"gitId":"jushg"},"content":"hide circle","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"jushg"},"content":"skinparam classAttributeIconSize 0","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"jushg"},"content":"skinparam groupInheritance 6","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"jushg"},"content":"class \"{abstract} \\n Command\"{","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"jushg"},"content":"    + exit() : boolean","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"jushg"},"content":"    + {abstract} execute(Scheduler, Ui)","lastModifiedDate":"2021-10-26"},{"lineNumber":11,"author":{"gitId":"jushg"},"content":"}","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"jushg"},"content":"package medbot.command.personcommand {","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"jushg"},"content":"class \"{abstract} \\n AddPersonCommand\"{","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"jushg"},"content":"    # person : Person","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"jushg"},"content":"    + {abstract} execute(Scheduler, Ui)","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"jushg"},"content":"}","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"jushg"},"content":"class \"{abstract} \\n ArchivePersonCommand\"{","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"jushg"},"content":"    # personId : int","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"jushg"},"content":"    + {abstract} execute(Scheduler, Ui)","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"jushg"},"content":"}","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"jushg"},"content":"class \"{abstract} \\n DeletePersonCommand\"{","lastModifiedDate":"2021-10-26"},{"lineNumber":27,"author":{"gitId":"jushg"},"content":"    # personId : int","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"jushg"},"content":"    + {abstract} execute(Scheduler, Ui)","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"jushg"},"content":"}","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":32,"author":{"gitId":"jushg"},"content":"class \"{abstract} \\n EditPersonCommand\"{","lastModifiedDate":"2021-10-26"},{"lineNumber":33,"author":{"gitId":"jushg"},"content":"    # personId : int","lastModifiedDate":"2021-10-26"},{"lineNumber":34,"author":{"gitId":"jushg"},"content":"    # person : Person","lastModifiedDate":"2021-10-26"},{"lineNumber":35,"author":{"gitId":"jushg"},"content":"    + {abstract} execute(Scheduler, Ui)","lastModifiedDate":"2021-10-26"},{"lineNumber":36,"author":{"gitId":"jushg"},"content":"}","lastModifiedDate":"2021-10-26"},{"lineNumber":37,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":38,"author":{"gitId":"jushg"},"content":"class \"{abstract} \\n FindPersonCommand\"{","lastModifiedDate":"2021-10-26"},{"lineNumber":39,"author":{"gitId":"jushg"},"content":"    # parameters: String[]","lastModifiedDate":"2021-10-26"},{"lineNumber":40,"author":{"gitId":"jushg"},"content":"    + {abstract} execute(Scheduler, Ui)","lastModifiedDate":"2021-10-26"},{"lineNumber":41,"author":{"gitId":"jushg"},"content":"}","lastModifiedDate":"2021-10-26"},{"lineNumber":42,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":43,"author":{"gitId":"jushg"},"content":"class \"{abstract} \\n ListPersonCommand\"{","lastModifiedDate":"2021-10-26"},{"lineNumber":44,"author":{"gitId":"jushg"},"content":"    # getArchived: boolean","lastModifiedDate":"2021-10-26"},{"lineNumber":45,"author":{"gitId":"jushg"},"content":"    + {abstract} execute(Scheduler, Ui)","lastModifiedDate":"2021-10-26"},{"lineNumber":46,"author":{"gitId":"jushg"},"content":"}","lastModifiedDate":"2021-10-26"},{"lineNumber":47,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":48,"author":{"gitId":"jushg"},"content":"class \"{abstract} \\n UnarchivePersonCommand\"{","lastModifiedDate":"2021-10-26"},{"lineNumber":49,"author":{"gitId":"jushg"},"content":"    # personId : int","lastModifiedDate":"2021-10-26"},{"lineNumber":50,"author":{"gitId":"jushg"},"content":"    + {abstract} execute(Scheduler, Ui)","lastModifiedDate":"2021-10-26"},{"lineNumber":51,"author":{"gitId":"jushg"},"content":"}","lastModifiedDate":"2021-10-26"},{"lineNumber":52,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":53,"author":{"gitId":"jushg"},"content":"class \"{abstract} \\n ViewPersonCommand\"{","lastModifiedDate":"2021-10-26"},{"lineNumber":54,"author":{"gitId":"jushg"},"content":"    # personId : int","lastModifiedDate":"2021-10-26"},{"lineNumber":55,"author":{"gitId":"jushg"},"content":"    + {abstract} execute(Scheduler, Ui)","lastModifiedDate":"2021-10-26"},{"lineNumber":56,"author":{"gitId":"jushg"},"content":"}","lastModifiedDate":"2021-10-26"},{"lineNumber":57,"author":{"gitId":"jushg"},"content":"\"{abstract} \\n Command\" \u003c|--- \"{abstract} \\n AddPersonCommand\"","lastModifiedDate":"2021-10-26"},{"lineNumber":58,"author":{"gitId":"jushg"},"content":"\"{abstract} \\n Command\" \u003c|--- \"{abstract} \\n EditPersonCommand\"","lastModifiedDate":"2021-10-26"},{"lineNumber":59,"author":{"gitId":"jushg"},"content":"\"{abstract} \\n Command\" \u003c|--- \"{abstract} \\n ArchivePersonCommand\"","lastModifiedDate":"2021-10-26"},{"lineNumber":60,"author":{"gitId":"jushg"},"content":"\"{abstract} \\n Command\" \u003c|--- \"{abstract} \\n UnarchivePersonCommand\"","lastModifiedDate":"2021-10-26"},{"lineNumber":61,"author":{"gitId":"jushg"},"content":"\"{abstract} \\n Command\" \u003c|--- \"{abstract} \\n DeletePersonCommand\"","lastModifiedDate":"2021-10-26"},{"lineNumber":62,"author":{"gitId":"jushg"},"content":"\"{abstract} \\n Command\" \u003c|--- \"{abstract} \\n ListPersonCommand\"","lastModifiedDate":"2021-10-26"},{"lineNumber":63,"author":{"gitId":"jushg"},"content":"\"{abstract} \\n Command\" \u003c|--- \"{abstract} \\n FindPersonCommand\"","lastModifiedDate":"2021-10-26"},{"lineNumber":64,"author":{"gitId":"jushg"},"content":"\"{abstract} \\n Command\" \u003c|--- \"{abstract} \\n ViewPersonCommand\"","lastModifiedDate":"2021-10-26"},{"lineNumber":65,"author":{"gitId":"jushg"},"content":"}","lastModifiedDate":"2021-10-26"},{"lineNumber":66,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":67,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":68,"author":{"gitId":"jushg"},"content":"@enduml","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"jushg":68}},{"path":"docs/diagrams/pumlfiles/SwitchViewDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Kureans"},"content":"@startuml","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"Kureans"},"content":"Medbot -\u003e Ui","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"Kureans"},"content":"Ui -\u003e Parser","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"Kureans"},"content":"Parser -\u003e Command","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"Kureans"},"content":"Command --\u003e Ui","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"Kureans"},"content":"Command -\u003e PatientList","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"Kureans"},"content":"PatientList --\u003e Ui","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"Kureans"},"content":"@enduml","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"Kureans":8}},{"path":"src/Main.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"justinfidelis"},"content":"@startuml","lastModifiedDate":"2021-10-22"},{"lineNumber":2,"author":{"gitId":"justinfidelis"},"content":"!define ENTITY_COLOR_0 #FF4600","lastModifiedDate":"2021-10-22"},{"lineNumber":3,"author":{"gitId":"justinfidelis"},"content":"!define ENTITY_COLOR_1 #FF7100","lastModifiedDate":"2021-10-22"},{"lineNumber":4,"author":{"gitId":"justinfidelis"},"content":"!define ENTITY_COLOR_2 #FF9700","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"justinfidelis"},"content":"!define ENTITY_COLOR_3 #FFBE00","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"justinfidelis"},"content":"!define ENTITY_COLOR_4 #FFF400","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"justinfidelis"},"content":"!define ENTITY_COLOR_5 #B6F400","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"justinfidelis"},"content":"!define ENTITY_COLOR_6 #8CF400","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":10,"author":{"gitId":"justinfidelis"},"content":"!define ACTIVATION_COLOR_0 #FF8E66","lastModifiedDate":"2021-10-22"},{"lineNumber":11,"author":{"gitId":"justinfidelis"},"content":"!define ACTIVATION_COLOR_1 #FFAC6D","lastModifiedDate":"2021-10-22"},{"lineNumber":12,"author":{"gitId":"justinfidelis"},"content":"!define ACTIVATION_COLOR_2 #FFBF66","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"justinfidelis"},"content":"!define ACTIVATION_COLOR_3 #FFD366","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"justinfidelis"},"content":"!define ACTIVATION_COLOR_4 #FFF766","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"justinfidelis"},"content":"!define ACTIVATION_COLOR_5 #CDF260","lastModifiedDate":"2021-10-22"},{"lineNumber":16,"author":{"gitId":"justinfidelis"},"content":"!define ACTIVATION_COLOR_6 #B5F260","lastModifiedDate":"2021-10-22"},{"lineNumber":17,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":18,"author":{"gitId":"justinfidelis"},"content":"actor User as user ENTITY_COLOR_0","lastModifiedDate":"2021-10-22"},{"lineNumber":19,"author":{"gitId":"justinfidelis"},"content":"participant \":Ui\" as ui ENTITY_COLOR_1","lastModifiedDate":"2021-10-22"},{"lineNumber":20,"author":{"gitId":"justinfidelis"},"content":"participant \":MedBot\" as medbot ENTITY_COLOR_2","lastModifiedDate":"2021-10-22"},{"lineNumber":21,"author":{"gitId":"justinfidelis"},"content":"participant \"\u003c\u003cClass\u003e\u003e\\nParser\" as parser ENTITY_COLOR_3","lastModifiedDate":"2021-10-22"},{"lineNumber":22,"author":{"gitId":"justinfidelis"},"content":"participant \":DeleteCommand\" as command ENTITY_COLOR_4","lastModifiedDate":"2021-10-22"},{"lineNumber":23,"author":{"gitId":"justinfidelis"},"content":"participant \"scheduler:Scheduler\" as scheduler ENTITY_COLOR_5","lastModifiedDate":"2021-10-22"},{"lineNumber":24,"author":{"gitId":"justinfidelis"},"content":"participant \"storage:Storage\" as storage ENTITY_COLOR_6","lastModifiedDate":"2021-10-22"},{"lineNumber":25,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":26,"author":{"gitId":"justinfidelis"},"content":"autoactivate on","lastModifiedDate":"2021-10-22"},{"lineNumber":27,"author":{"gitId":"justinfidelis"},"content":"user -\u003e ui ACTIVATION_COLOR_1: \"delete 1\"","lastModifiedDate":"2021-10-22"},{"lineNumber":28,"author":{"gitId":"justinfidelis"},"content":"ui -\u003e medbot ACTIVATION_COLOR_2: \"delete 1\"","lastModifiedDate":"2021-10-22"},{"lineNumber":29,"author":{"gitId":"justinfidelis"},"content":"medbot -\u003e parser ACTIVATION_COLOR_3: parseCommand(\"delete 1\")","lastModifiedDate":"2021-10-22"},{"lineNumber":30,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":31,"author":{"gitId":"justinfidelis"},"content":"parser -\u003e command **: DeleteCommand(1)","lastModifiedDate":"2021-10-22"},{"lineNumber":32,"author":{"gitId":"justinfidelis"},"content":"activate command ACTIVATION_COLOR_4","lastModifiedDate":"2021-10-22"},{"lineNumber":33,"author":{"gitId":"justinfidelis"},"content":"command --\u003e parser","lastModifiedDate":"2021-10-22"},{"lineNumber":34,"author":{"gitId":"justinfidelis"},"content":"parser --\u003e medbot","lastModifiedDate":"2021-10-22"},{"lineNumber":35,"author":{"gitId":"justinfidelis"},"content":"medbot -\u003e command ACTIVATION_COLOR_4: execute()","lastModifiedDate":"2021-10-22"},{"lineNumber":36,"author":{"gitId":"justinfidelis"},"content":"command -\u003e scheduler ACTIVATION_COLOR_5: deletePatient(1)","lastModifiedDate":"2021-10-22"},{"lineNumber":37,"author":{"gitId":"justinfidelis"},"content":"scheduler --\u003e command","lastModifiedDate":"2021-10-22"},{"lineNumber":38,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":39,"author":{"gitId":"justinfidelis"},"content":"command --\u003e medbot ACTIVATION_COLOR_1:","lastModifiedDate":"2021-10-22"},{"lineNumber":40,"author":{"gitId":"justinfidelis"},"content":"destroy command","lastModifiedDate":"2021-10-22"},{"lineNumber":41,"author":{"gitId":"justinfidelis"},"content":"medbot -\u003e storage ACTIVATION_COLOR_6: saveData()","lastModifiedDate":"2021-10-22"},{"lineNumber":42,"author":{"gitId":"justinfidelis"},"content":"storage --\u003e medbot","lastModifiedDate":"2021-10-22"},{"lineNumber":43,"author":{"gitId":"justinfidelis"},"content":"medbot --\u003euser","lastModifiedDate":"2021-10-22"},{"lineNumber":44,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":45,"author":{"gitId":"justinfidelis"},"content":"@enduml","lastModifiedDate":"2021-10-22"}],"authorContributionMap":{"justinfidelis":45}},{"path":"src/main/java/medbot/Appointment.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"justinfidelis"},"content":"package medbot;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"CrimsonTitan79"},"content":"import medbot.list.ListItem;","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"justinfidelis"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"justinfidelis"},"content":"import java.time.ZoneOffset;","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"justinfidelis"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"CrimsonTitan79"},"content":"public class Appointment extends ListItem {","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"justinfidelis"},"content":"    private static final ZoneOffset ZONE_OFFSET \u003d ZoneOffset.ofHours(8);","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"justinfidelis"},"content":"    private static final DateTimeFormatter DATE_TIME_FORMATTER \u003d DateTimeFormatter.ofPattern(\"dd MMM yy HH00\");","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"CrimsonTitan79"},"content":"    private static final DateTimeFormatter DATE_TIME_FORMATTER_STORAGE \u003d DateTimeFormatter.ofPattern(\"ddMMyy HH00\");","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"justinfidelis"},"content":"    private static final int LENGTH_ID_COLUMN \u003d 4;","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"justinfidelis"},"content":"    private static final String SPACE \u003d \" \";","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"justinfidelis"},"content":"    private static final String VERTICAL_LINE_SPACED \u003d \" | \";","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"justinfidelis"},"content":"    private int appointmentId \u003d 0;","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"justinfidelis"},"content":"    private int patientId \u003d 0;","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"justinfidelis"},"content":"    private int medicalStaffId \u003d 0;","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"justinfidelis"},"content":"    private int dateTimeCode \u003d 0;","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"justinfidelis"},"content":"    public int getAppointmentId() {","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"justinfidelis"},"content":"        return appointmentId;","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"justinfidelis"},"content":"    public void setAppointmentId(int appointmentId) {","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"justinfidelis"},"content":"        this.appointmentId \u003d appointmentId;","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"justinfidelis"},"content":"    public int getPatientId() {","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"justinfidelis"},"content":"        return patientId;","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"justinfidelis"},"content":"    public void setPatientId(int patientId) {","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"justinfidelis"},"content":"        this.patientId \u003d patientId;","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"justinfidelis"},"content":"    public int getMedicalStaffId() {","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"justinfidelis"},"content":"        return medicalStaffId;","lastModifiedDate":"2021-10-21"},{"lineNumber":42,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":43,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":44,"author":{"gitId":"justinfidelis"},"content":"    public void setMedicalStaffId(int medicalStaffId) {","lastModifiedDate":"2021-10-21"},{"lineNumber":45,"author":{"gitId":"justinfidelis"},"content":"        this.medicalStaffId \u003d medicalStaffId;","lastModifiedDate":"2021-10-21"},{"lineNumber":46,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":47,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":48,"author":{"gitId":"justinfidelis"},"content":"    public int getDateTimeCode() {","lastModifiedDate":"2021-10-21"},{"lineNumber":49,"author":{"gitId":"justinfidelis"},"content":"        return dateTimeCode;","lastModifiedDate":"2021-10-21"},{"lineNumber":50,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":51,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":52,"author":{"gitId":"justinfidelis"},"content":"    public void setDateTimeCode(int dateTimeCode) {","lastModifiedDate":"2021-10-21"},{"lineNumber":53,"author":{"gitId":"justinfidelis"},"content":"        this.dateTimeCode \u003d dateTimeCode;","lastModifiedDate":"2021-10-21"},{"lineNumber":54,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":55,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":56,"author":{"gitId":"justinfidelis"},"content":"    public String getDateTimeString() {","lastModifiedDate":"2021-10-26"},{"lineNumber":57,"author":{"gitId":"justinfidelis"},"content":"        return formatDateTimeCode(dateTimeCode);","lastModifiedDate":"2021-10-26"},{"lineNumber":58,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":59,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":60,"author":{"gitId":"justinfidelis"},"content":"    public static String formatDateTimeCode(int dateTimeCode) {","lastModifiedDate":"2021-10-26"},{"lineNumber":61,"author":{"gitId":"justinfidelis"},"content":"        long epochSecond \u003d (long) dateTimeCode * 60;","lastModifiedDate":"2021-10-21"},{"lineNumber":62,"author":{"gitId":"justinfidelis"},"content":"        LocalDateTime localDateTime \u003d LocalDateTime.ofEpochSecond(epochSecond, 0, ZONE_OFFSET);","lastModifiedDate":"2021-10-25"},{"lineNumber":63,"author":{"gitId":"justinfidelis"},"content":"        return localDateTime.format(DATE_TIME_FORMATTER) + \"HRS\";","lastModifiedDate":"2021-10-25"},{"lineNumber":64,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":65,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":66,"author":{"gitId":"justinfidelis"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":67,"author":{"gitId":"justinfidelis"},"content":"     * Returns whether appointment is complete. I.e., contains a positive patientId, medicalStaffId and dateTimeCode.","lastModifiedDate":"2021-10-24"},{"lineNumber":68,"author":{"gitId":"justinfidelis"},"content":"     *","lastModifiedDate":"2021-10-24"},{"lineNumber":69,"author":{"gitId":"justinfidelis"},"content":"     * @return whether appointment is complete","lastModifiedDate":"2021-10-24"},{"lineNumber":70,"author":{"gitId":"justinfidelis"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":71,"author":{"gitId":"justinfidelis"},"content":"    public boolean isComplete() {","lastModifiedDate":"2021-10-21"},{"lineNumber":72,"author":{"gitId":"justinfidelis"},"content":"        return patientId \u003e 0 \u0026\u0026 medicalStaffId \u003e 0 \u0026\u0026 dateTimeCode \u003e 0;","lastModifiedDate":"2021-10-24"},{"lineNumber":73,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":74,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":75,"author":{"gitId":"justinfidelis"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":76,"author":{"gitId":"justinfidelis"},"content":"     * Updates parameters (patientId, medicalStaffId and dateTimeCode) with non-zero parameters of newAppointment.","lastModifiedDate":"2021-10-24"},{"lineNumber":77,"author":{"gitId":"justinfidelis"},"content":"     *","lastModifiedDate":"2021-10-24"},{"lineNumber":78,"author":{"gitId":"justinfidelis"},"content":"     * \u003cp\u003eDoes not update appointmentId.","lastModifiedDate":"2021-10-24"},{"lineNumber":79,"author":{"gitId":"justinfidelis"},"content":"     *","lastModifiedDate":"2021-10-24"},{"lineNumber":80,"author":{"gitId":"justinfidelis"},"content":"     * @param newAppointment Appointment object that contains the parameters to be updated","lastModifiedDate":"2021-10-24"},{"lineNumber":81,"author":{"gitId":"justinfidelis"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":82,"author":{"gitId":"justinfidelis"},"content":"    public void mergeAppointmentData(Appointment newAppointment) {","lastModifiedDate":"2021-10-21"},{"lineNumber":83,"author":{"gitId":"justinfidelis"},"content":"        if (newAppointment.getDateTimeCode() \u003e 0) {","lastModifiedDate":"2021-10-24"},{"lineNumber":84,"author":{"gitId":"justinfidelis"},"content":"            setDateTimeCode(newAppointment.getDateTimeCode());","lastModifiedDate":"2021-10-21"},{"lineNumber":85,"author":{"gitId":"justinfidelis"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":86,"author":{"gitId":"justinfidelis"},"content":"        if (newAppointment.getPatientId() \u003e 0) {","lastModifiedDate":"2021-10-24"},{"lineNumber":87,"author":{"gitId":"justinfidelis"},"content":"            setPatientId(newAppointment.getPatientId());","lastModifiedDate":"2021-10-21"},{"lineNumber":88,"author":{"gitId":"justinfidelis"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":89,"author":{"gitId":"justinfidelis"},"content":"        if (newAppointment.getMedicalStaffId() \u003e 0) {","lastModifiedDate":"2021-10-24"},{"lineNumber":90,"author":{"gitId":"justinfidelis"},"content":"            setMedicalStaffId(newAppointment.getMedicalStaffId());","lastModifiedDate":"2021-10-21"},{"lineNumber":91,"author":{"gitId":"justinfidelis"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":92,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":93,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":94,"author":{"gitId":"justinfidelis"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":95,"author":{"gitId":"justinfidelis"},"content":"     * Updates parameters (patientId, medicalStaffId and dateTimeCode) of a copy of oldAppointment","lastModifiedDate":"2021-10-24"},{"lineNumber":96,"author":{"gitId":"justinfidelis"},"content":"     * with non-zero parameters of newAppointment.","lastModifiedDate":"2021-10-24"},{"lineNumber":97,"author":{"gitId":"justinfidelis"},"content":"     *","lastModifiedDate":"2021-10-24"},{"lineNumber":98,"author":{"gitId":"justinfidelis"},"content":"     * \u003cp\u003eDoes not update appointmentId.","lastModifiedDate":"2021-10-24"},{"lineNumber":99,"author":{"gitId":"justinfidelis"},"content":"     *","lastModifiedDate":"2021-10-24"},{"lineNumber":100,"author":{"gitId":"justinfidelis"},"content":"     * @param oldAppointment Appointment to be updated.","lastModifiedDate":"2021-10-24"},{"lineNumber":101,"author":{"gitId":"justinfidelis"},"content":"     * @param newAppointment Appointment that contains the parameters to be updated","lastModifiedDate":"2021-10-24"},{"lineNumber":102,"author":{"gitId":"justinfidelis"},"content":"     * @return a copy of oldAppointment updated with the attributes in newAppointment","lastModifiedDate":"2021-10-24"},{"lineNumber":103,"author":{"gitId":"justinfidelis"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":104,"author":{"gitId":"justinfidelis"},"content":"    public static Appointment mergeAppointmentData(Appointment oldAppointment, Appointment newAppointment) {","lastModifiedDate":"2021-10-21"},{"lineNumber":105,"author":{"gitId":"justinfidelis"},"content":"        Appointment tempAppointment \u003d new Appointment();","lastModifiedDate":"2021-10-21"},{"lineNumber":106,"author":{"gitId":"justinfidelis"},"content":"        tempAppointment.mergeAppointmentData(oldAppointment);","lastModifiedDate":"2021-10-21"},{"lineNumber":107,"author":{"gitId":"justinfidelis"},"content":"        tempAppointment.mergeAppointmentData(newAppointment);","lastModifiedDate":"2021-10-21"},{"lineNumber":108,"author":{"gitId":"justinfidelis"},"content":"        return tempAppointment;","lastModifiedDate":"2021-10-21"},{"lineNumber":109,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":110,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":111,"author":{"gitId":"justinfidelis"},"content":"    public String toString() {","lastModifiedDate":"2021-10-21"},{"lineNumber":112,"author":{"gitId":"justinfidelis"},"content":"        return \"Appointment Id: \" + appointmentId + \" Date/Time: \" + getDateTimeString() + \" Patient ID: \"","lastModifiedDate":"2021-10-26"},{"lineNumber":113,"author":{"gitId":"justinfidelis"},"content":"                + patientId + \" Staff ID: \" + medicalStaffId + \"\\n\";","lastModifiedDate":"2021-10-25"},{"lineNumber":114,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":115,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":116,"author":{"gitId":"CrimsonTitan79"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":117,"author":{"gitId":"CrimsonTitan79"},"content":"     * Text to be written to storage file of a person.","lastModifiedDate":"2021-10-25"},{"lineNumber":118,"author":{"gitId":"CrimsonTitan79"},"content":"     *","lastModifiedDate":"2021-10-25"},{"lineNumber":119,"author":{"gitId":"CrimsonTitan79"},"content":"     * @return storageString of a person","lastModifiedDate":"2021-10-25"},{"lineNumber":120,"author":{"gitId":"CrimsonTitan79"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":121,"author":{"gitId":"CrimsonTitan79"},"content":"    public String getStorageString() {","lastModifiedDate":"2021-10-25"},{"lineNumber":122,"author":{"gitId":"CrimsonTitan79"},"content":"        return appointmentId + VERTICAL_LINE_SPACED","lastModifiedDate":"2021-10-25"},{"lineNumber":123,"author":{"gitId":"CrimsonTitan79"},"content":"                + getDateTimeStorageString(dateTimeCode) + VERTICAL_LINE_SPACED","lastModifiedDate":"2021-10-26"},{"lineNumber":124,"author":{"gitId":"CrimsonTitan79"},"content":"                + patientId + VERTICAL_LINE_SPACED","lastModifiedDate":"2021-10-25"},{"lineNumber":125,"author":{"gitId":"CrimsonTitan79"},"content":"                + medicalStaffId;","lastModifiedDate":"2021-10-25"},{"lineNumber":126,"author":{"gitId":"CrimsonTitan79"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":127,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":128,"author":{"gitId":"CrimsonTitan79"},"content":"    private String getDateTimeStorageString(int dateTimeCode) {","lastModifiedDate":"2021-10-26"},{"lineNumber":129,"author":{"gitId":"CrimsonTitan79"},"content":"        long epochSecond \u003d (long) dateTimeCode * 60;","lastModifiedDate":"2021-10-26"},{"lineNumber":130,"author":{"gitId":"CrimsonTitan79"},"content":"        LocalDateTime localDateTime \u003d LocalDateTime.ofEpochSecond(epochSecond, 0, ZONE_OFFSET);","lastModifiedDate":"2021-10-26"},{"lineNumber":131,"author":{"gitId":"CrimsonTitan79"},"content":"        return localDateTime.format(DATE_TIME_FORMATTER_STORAGE);","lastModifiedDate":"2021-10-26"},{"lineNumber":132,"author":{"gitId":"CrimsonTitan79"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":133,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":134,"author":{"gitId":"CrimsonTitan79"},"content":"    //TODO native methods","lastModifiedDate":"2021-10-26"},{"lineNumber":135,"author":{"gitId":"CrimsonTitan79"},"content":"    @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":136,"author":{"gitId":"CrimsonTitan79"},"content":"    public void setId(int appointmentId) {","lastModifiedDate":"2021-10-26"},{"lineNumber":137,"author":{"gitId":"CrimsonTitan79"},"content":"        setAppointmentId(appointmentId);","lastModifiedDate":"2021-10-26"},{"lineNumber":138,"author":{"gitId":"CrimsonTitan79"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":139,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":140,"author":{"gitId":"CrimsonTitan79"},"content":"    @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":141,"author":{"gitId":"CrimsonTitan79"},"content":"    public int getId() {","lastModifiedDate":"2021-10-26"},{"lineNumber":142,"author":{"gitId":"CrimsonTitan79"},"content":"        return getAppointmentId();","lastModifiedDate":"2021-10-26"},{"lineNumber":143,"author":{"gitId":"CrimsonTitan79"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":144,"author":{"gitId":"justinfidelis"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"justinfidelis":109,"CrimsonTitan79":35}},{"path":"src/main/java/medbot/MedBot.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"justinfidelis"},"content":"package medbot;","lastModifiedDate":"2021-09-30"},{"lineNumber":2,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":3,"author":{"gitId":"justinfidelis"},"content":"import medbot.command.Command;","lastModifiedDate":"2021-09-30"},{"lineNumber":4,"author":{"gitId":"justinfidelis"},"content":"import medbot.exceptions.MedBotException;","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"justinfidelis"},"content":"import medbot.parser.Parser;","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"CrimsonTitan79"},"content":"import medbot.storage.StorageManager;","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"jushg"},"content":"import medbot.ui.Ui;","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"CrimsonTitan79"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"justinfidelis"},"content":"public class MedBot {","lastModifiedDate":"2021-09-30"},{"lineNumber":12,"author":{"gitId":"justinfidelis"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-09-30"},{"lineNumber":13,"author":{"gitId":"justinfidelis"},"content":"        interactWithUser();","lastModifiedDate":"2021-09-30"},{"lineNumber":14,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":15,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":16,"author":{"gitId":"justinfidelis"},"content":"    public static void interactWithUser() {","lastModifiedDate":"2021-09-30"},{"lineNumber":17,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"justinfidelis"},"content":"        Scheduler scheduler \u003d new Scheduler();","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"justinfidelis"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2021-09-30"},{"lineNumber":20,"author":{"gitId":"CrimsonTitan79"},"content":"        StorageManager storageManager \u003d null;","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"CrimsonTitan79"},"content":"        boolean isInteracting \u003d true;","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"CrimsonTitan79"},"content":"        ui.printWelcomeMessageOne();","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"CrimsonTitan79"},"content":"        try {","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"CrimsonTitan79"},"content":"            storageManager \u003d new StorageManager(scheduler, ui);","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"CrimsonTitan79"},"content":"            ui.printWelcomeMessageTwo();","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"CrimsonTitan79"},"content":"        } catch (FileNotFoundException | MedBotException e) {","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"CrimsonTitan79"},"content":"            ui.printOutput(e.getMessage());","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"CrimsonTitan79"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":32,"author":{"gitId":"justinfidelis"},"content":"        while (isInteracting) {","lastModifiedDate":"2021-09-30"},{"lineNumber":33,"author":{"gitId":"justinfidelis"},"content":"            String userInput \u003d ui.readInput();","lastModifiedDate":"2021-09-30"},{"lineNumber":34,"author":{"gitId":"justinfidelis"},"content":"            try {","lastModifiedDate":"2021-09-30"},{"lineNumber":35,"author":{"gitId":"justinfidelis"},"content":"                Command command \u003d Parser.parseCommand(userInput);","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"justinfidelis"},"content":"                command.execute(scheduler, ui);","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":38,"author":{"gitId":"CrimsonTitan79"},"content":"                assert storageManager !\u003d null;","lastModifiedDate":"2021-10-26"},{"lineNumber":39,"author":{"gitId":"CrimsonTitan79"},"content":"                storageManager.saveToStorage(scheduler);","lastModifiedDate":"2021-10-26"},{"lineNumber":40,"author":{"gitId":"justinfidelis"},"content":"                isInteracting \u003d !command.isExit();","lastModifiedDate":"2021-09-30"},{"lineNumber":41,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":42,"author":{"gitId":"justinfidelis"},"content":"            } catch (MedBotException mbe) {","lastModifiedDate":"2021-09-30"},{"lineNumber":43,"author":{"gitId":"justinfidelis"},"content":"                ui.printOutput(mbe.getMessage() + System.lineSeparator());","lastModifiedDate":"2021-10-24"},{"lineNumber":44,"author":{"gitId":"justinfidelis"},"content":"            }","lastModifiedDate":"2021-09-30"},{"lineNumber":45,"author":{"gitId":"justinfidelis"},"content":"        }","lastModifiedDate":"2021-09-30"},{"lineNumber":46,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":47,"author":{"gitId":"justinfidelis"},"content":"}","lastModifiedDate":"2021-09-30"}],"authorContributionMap":{"justinfidelis":25,"CrimsonTitan79":20,"jushg":1,"EricBryann":1}},{"path":"src/main/java/medbot/Scheduler.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"justinfidelis"},"content":"package medbot;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"justinfidelis"},"content":"import java.util.LinkedList;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"justinfidelis"},"content":"import medbot.exceptions.MedBotException;","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"justinfidelis"},"content":"import medbot.list.MedicalStaffList;","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"justinfidelis"},"content":"import medbot.list.PatientList;","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"justinfidelis"},"content":"import medbot.list.SchedulerAppointmentList;","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"justinfidelis"},"content":"import medbot.person.Person;","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"Kureans"},"content":"import medbot.utilities.FilterType;","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"EricBryann"},"content":"import java.util.List;","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"justinfidelis"},"content":"public class Scheduler {","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"justinfidelis"},"content":"    private static final String EMPTY_STRING \u003d \"\";","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"justinfidelis"},"content":"    private static final String END_LINE \u003d System.lineSeparator();","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"justinfidelis"},"content":"    private static final String SPACE \u003d \" \";","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"justinfidelis"},"content":"    private static final String VERTICAL_LINE_SPACED \u003d \" | \";","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"justinfidelis"},"content":"    private static final int LENGTH_APPOINTMENT_ID_COLUMN \u003d 4;","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"justinfidelis"},"content":"    private static final int LENGTH_PATIENT_ID_COLUMN \u003d 10;","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"justinfidelis"},"content":"    private static final int LENGTH_STAFF_ID_COLUMN \u003d 8;","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"justinfidelis"},"content":"    private static final int LENGTH_NAME_COLUMN \u003d 20;","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"justinfidelis"},"content":"    private static final String ERROR_ADD_INCOMPLETE_APPOINTMENT \u003d \"Incomplete appointment.\";","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"justinfidelis"},"content":"    private static final String ERROR_PATIENT_APPOINTMENT_CLASH \u003d \"Patient unavailable, appointment %d at that time.\";","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"justinfidelis"},"content":"    private static final String ERROR_STAFF_APPOINTMENT_CLASH \u003d \"Staff unavailable, appointment %d at that time.\";","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"justinfidelis"},"content":"    private static final String ERROR_ADD_APPOINTMENT_ERROR \u003d \"Add appointment error.\";","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"justinfidelis"},"content":"    private static final String ERROR_DELETE_APPOINTMENT_ERROR \u003d \"Delete appointment error.\";","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"justinfidelis"},"content":"    private final PatientList patientList \u003d new PatientList();","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"justinfidelis"},"content":"    private final MedicalStaffList medicalStaffList \u003d new MedicalStaffList();","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"justinfidelis"},"content":"    private final SchedulerAppointmentList schedulerAppointmentList \u003d new SchedulerAppointmentList();","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"justinfidelis"},"content":"    public PatientList getPatientList() { //todo will eventually remove this method for encapsulation","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"justinfidelis"},"content":"        return patientList;","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"justinfidelis"},"content":"    public MedicalStaffList getMedicalStaffList() { //todo will eventually remove this method for encapsulation","lastModifiedDate":"2021-10-24"},{"lineNumber":40,"author":{"gitId":"justinfidelis"},"content":"        return medicalStaffList;","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":42,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":43,"author":{"gitId":"CrimsonTitan79"},"content":"    public SchedulerAppointmentList getSchedulerAppointmentList() {","lastModifiedDate":"2021-10-25"},{"lineNumber":44,"author":{"gitId":"CrimsonTitan79"},"content":"        return schedulerAppointmentList;","lastModifiedDate":"2021-10-25"},{"lineNumber":45,"author":{"gitId":"CrimsonTitan79"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":46,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":47,"author":{"gitId":"justinfidelis"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":48,"author":{"gitId":"justinfidelis"},"content":"     * Adds the given patient into the scheduler, allocates an id to the patient and returns the id value.","lastModifiedDate":"2021-10-24"},{"lineNumber":49,"author":{"gitId":"justinfidelis"},"content":"     *","lastModifiedDate":"2021-10-24"},{"lineNumber":50,"author":{"gitId":"justinfidelis"},"content":"     * @param patient Patient to be added into the scheduler","lastModifiedDate":"2021-10-24"},{"lineNumber":51,"author":{"gitId":"justinfidelis"},"content":"     * @return personId that was allocated to the patient","lastModifiedDate":"2021-10-24"},{"lineNumber":52,"author":{"gitId":"justinfidelis"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":53,"author":{"gitId":"justinfidelis"},"content":"    public int addPatient(Person patient) {","lastModifiedDate":"2021-10-24"},{"lineNumber":54,"author":{"gitId":"justinfidelis"},"content":"        return patientList.addPerson(patient);","lastModifiedDate":"2021-10-24"},{"lineNumber":55,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":56,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":57,"author":{"gitId":"justinfidelis"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":58,"author":{"gitId":"justinfidelis"},"content":"     * Adds the given staff into the scheduler, allocates an id to the staff and returns the id value.","lastModifiedDate":"2021-10-24"},{"lineNumber":59,"author":{"gitId":"justinfidelis"},"content":"     *","lastModifiedDate":"2021-10-24"},{"lineNumber":60,"author":{"gitId":"justinfidelis"},"content":"     * @param staff Staff to be added into the scheduler","lastModifiedDate":"2021-10-24"},{"lineNumber":61,"author":{"gitId":"justinfidelis"},"content":"     * @return personId that was allocated to the staff","lastModifiedDate":"2021-10-24"},{"lineNumber":62,"author":{"gitId":"justinfidelis"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":63,"author":{"gitId":"justinfidelis"},"content":"    public int addStaff(Person staff) {","lastModifiedDate":"2021-10-24"},{"lineNumber":64,"author":{"gitId":"justinfidelis"},"content":"        return medicalStaffList.addPerson(staff);","lastModifiedDate":"2021-10-24"},{"lineNumber":65,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":66,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":67,"author":{"gitId":"justinfidelis"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":68,"author":{"gitId":"justinfidelis"},"content":"     * Edits the specified fields on Patient information with new values from the user.","lastModifiedDate":"2021-10-24"},{"lineNumber":69,"author":{"gitId":"justinfidelis"},"content":"     *","lastModifiedDate":"2021-10-24"},{"lineNumber":70,"author":{"gitId":"justinfidelis"},"content":"     * @param patientId      the id of the Patient with information to change","lastModifiedDate":"2021-10-24"},{"lineNumber":71,"author":{"gitId":"justinfidelis"},"content":"     * @param newPatientData the new Patient data to change to (except the null fields)","lastModifiedDate":"2021-10-24"},{"lineNumber":72,"author":{"gitId":"justinfidelis"},"content":"     * @throws MedBotException if there is no patient with that id","lastModifiedDate":"2021-10-24"},{"lineNumber":73,"author":{"gitId":"justinfidelis"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":74,"author":{"gitId":"justinfidelis"},"content":"    public void editPatient(int patientId, Person newPatientData) throws MedBotException {","lastModifiedDate":"2021-10-24"},{"lineNumber":75,"author":{"gitId":"justinfidelis"},"content":"        patientList.editPerson(patientId, newPatientData);","lastModifiedDate":"2021-10-24"},{"lineNumber":76,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":77,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":78,"author":{"gitId":"justinfidelis"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":79,"author":{"gitId":"justinfidelis"},"content":"     * Edits the specified fields on Staff information with new values from the user.","lastModifiedDate":"2021-10-24"},{"lineNumber":80,"author":{"gitId":"justinfidelis"},"content":"     *","lastModifiedDate":"2021-10-24"},{"lineNumber":81,"author":{"gitId":"justinfidelis"},"content":"     * @param staffId      the id of the Staff with information to change","lastModifiedDate":"2021-10-24"},{"lineNumber":82,"author":{"gitId":"justinfidelis"},"content":"     * @param newStaffData the new Staff data to change to (except the null fields)","lastModifiedDate":"2021-10-24"},{"lineNumber":83,"author":{"gitId":"justinfidelis"},"content":"     * @throws MedBotException if there is no staff with that id","lastModifiedDate":"2021-10-24"},{"lineNumber":84,"author":{"gitId":"justinfidelis"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":85,"author":{"gitId":"justinfidelis"},"content":"    public void editStaff(int staffId, Person newStaffData) throws MedBotException {","lastModifiedDate":"2021-10-24"},{"lineNumber":86,"author":{"gitId":"Kureans"},"content":"        medicalStaffList.editPerson(staffId, newStaffData);","lastModifiedDate":"2021-10-25"},{"lineNumber":87,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":88,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":89,"author":{"gitId":"justinfidelis"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":90,"author":{"gitId":"justinfidelis"},"content":"     * Removes the patient with the specified id.","lastModifiedDate":"2021-10-24"},{"lineNumber":91,"author":{"gitId":"justinfidelis"},"content":"     *","lastModifiedDate":"2021-10-24"},{"lineNumber":92,"author":{"gitId":"justinfidelis"},"content":"     * @param patientId the id of the patient to remove.","lastModifiedDate":"2021-10-24"},{"lineNumber":93,"author":{"gitId":"justinfidelis"},"content":"     * @throws MedBotException if there is no patient with that id","lastModifiedDate":"2021-10-24"},{"lineNumber":94,"author":{"gitId":"justinfidelis"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":95,"author":{"gitId":"justinfidelis"},"content":"    public void deletePatient(int patientId) throws MedBotException {","lastModifiedDate":"2021-10-24"},{"lineNumber":96,"author":{"gitId":"justinfidelis"},"content":"        LinkedList\u003cInteger\u003e appointmentIds \u003d patientList.getAllAppointmentIds(patientId);","lastModifiedDate":"2021-10-25"},{"lineNumber":97,"author":{"gitId":"justinfidelis"},"content":"        deleteAppointments(appointmentIds);","lastModifiedDate":"2021-10-25"},{"lineNumber":98,"author":{"gitId":"justinfidelis"},"content":"        patientList.deletePerson(patientId);","lastModifiedDate":"2021-10-24"},{"lineNumber":99,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":100,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":101,"author":{"gitId":"justinfidelis"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":102,"author":{"gitId":"justinfidelis"},"content":"     * Removes the staff with the specified id.","lastModifiedDate":"2021-10-24"},{"lineNumber":103,"author":{"gitId":"justinfidelis"},"content":"     *","lastModifiedDate":"2021-10-24"},{"lineNumber":104,"author":{"gitId":"justinfidelis"},"content":"     * @param staffId the id of the staff to remove.","lastModifiedDate":"2021-10-24"},{"lineNumber":105,"author":{"gitId":"justinfidelis"},"content":"     * @throws MedBotException if there is no staff with that id","lastModifiedDate":"2021-10-24"},{"lineNumber":106,"author":{"gitId":"justinfidelis"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":107,"author":{"gitId":"justinfidelis"},"content":"    public void deleteStaff(int staffId) throws MedBotException {","lastModifiedDate":"2021-10-24"},{"lineNumber":108,"author":{"gitId":"justinfidelis"},"content":"        LinkedList\u003cInteger\u003e appointmentIds \u003d medicalStaffList.getAllAppointmentIds(staffId);","lastModifiedDate":"2021-10-25"},{"lineNumber":109,"author":{"gitId":"justinfidelis"},"content":"        deleteAppointments(appointmentIds);","lastModifiedDate":"2021-10-25"},{"lineNumber":110,"author":{"gitId":"Kureans"},"content":"        medicalStaffList.deletePerson(staffId);","lastModifiedDate":"2021-10-25"},{"lineNumber":111,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":112,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":113,"author":{"gitId":"justinfidelis"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":114,"author":{"gitId":"justinfidelis"},"content":"     * Delete all appointments whose id is in the given appointmentIds List.","lastModifiedDate":"2021-10-25"},{"lineNumber":115,"author":{"gitId":"justinfidelis"},"content":"     *","lastModifiedDate":"2021-10-25"},{"lineNumber":116,"author":{"gitId":"justinfidelis"},"content":"     * @param appointmentIds List of ids of appointments to be deleted","lastModifiedDate":"2021-10-25"},{"lineNumber":117,"author":{"gitId":"justinfidelis"},"content":"     * @throws MedBotException if there is an error when deleting the appointments","lastModifiedDate":"2021-10-25"},{"lineNumber":118,"author":{"gitId":"justinfidelis"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":119,"author":{"gitId":"justinfidelis"},"content":"    private void deleteAppointments(List\u003cInteger\u003e appointmentIds) throws MedBotException {","lastModifiedDate":"2021-10-25"},{"lineNumber":120,"author":{"gitId":"justinfidelis"},"content":"        for (int appointmentId : appointmentIds) {","lastModifiedDate":"2021-10-25"},{"lineNumber":121,"author":{"gitId":"justinfidelis"},"content":"            try {","lastModifiedDate":"2021-10-25"},{"lineNumber":122,"author":{"gitId":"justinfidelis"},"content":"                deleteAppointment(appointmentId);","lastModifiedDate":"2021-10-25"},{"lineNumber":123,"author":{"gitId":"justinfidelis"},"content":"            } catch (MedBotException mbe) {","lastModifiedDate":"2021-10-25"},{"lineNumber":124,"author":{"gitId":"justinfidelis"},"content":"                //This exception should not be thrown","lastModifiedDate":"2021-10-25"},{"lineNumber":125,"author":{"gitId":"justinfidelis"},"content":"                assert false;","lastModifiedDate":"2021-10-25"},{"lineNumber":126,"author":{"gitId":"justinfidelis"},"content":"                throw new MedBotException(ERROR_DELETE_APPOINTMENT_ERROR);","lastModifiedDate":"2021-10-25"},{"lineNumber":127,"author":{"gitId":"justinfidelis"},"content":"            }","lastModifiedDate":"2021-10-25"},{"lineNumber":128,"author":{"gitId":"justinfidelis"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":129,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":130,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":131,"author":{"gitId":"justinfidelis"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":132,"author":{"gitId":"justinfidelis"},"content":"     * Returns a String containing the information of the patient with the specified patientId.","lastModifiedDate":"2021-10-24"},{"lineNumber":133,"author":{"gitId":"justinfidelis"},"content":"     *","lastModifiedDate":"2021-10-24"},{"lineNumber":134,"author":{"gitId":"justinfidelis"},"content":"     * @param patientId the id of the patient to search for","lastModifiedDate":"2021-10-24"},{"lineNumber":135,"author":{"gitId":"justinfidelis"},"content":"     * @return a String containing the patient\u0027s information","lastModifiedDate":"2021-10-24"},{"lineNumber":136,"author":{"gitId":"justinfidelis"},"content":"     * @throws MedBotException if there is no patient with that id","lastModifiedDate":"2021-10-24"},{"lineNumber":137,"author":{"gitId":"justinfidelis"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":138,"author":{"gitId":"justinfidelis"},"content":"    public String getPatientInfo(int patientId) throws MedBotException {","lastModifiedDate":"2021-10-24"},{"lineNumber":139,"author":{"gitId":"justinfidelis"},"content":"        return patientList.getPersonInfo(patientId);","lastModifiedDate":"2021-10-24"},{"lineNumber":140,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":141,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":142,"author":{"gitId":"justinfidelis"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":143,"author":{"gitId":"justinfidelis"},"content":"     * Returns a String containing the information of the staff with the specified patientId.","lastModifiedDate":"2021-10-24"},{"lineNumber":144,"author":{"gitId":"justinfidelis"},"content":"     *","lastModifiedDate":"2021-10-24"},{"lineNumber":145,"author":{"gitId":"justinfidelis"},"content":"     * @param staffId the id of the staff to search for","lastModifiedDate":"2021-10-24"},{"lineNumber":146,"author":{"gitId":"justinfidelis"},"content":"     * @return a String containing the staff\u0027s information","lastModifiedDate":"2021-10-24"},{"lineNumber":147,"author":{"gitId":"justinfidelis"},"content":"     * @throws MedBotException if there is no staff with that id","lastModifiedDate":"2021-10-24"},{"lineNumber":148,"author":{"gitId":"justinfidelis"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":149,"author":{"gitId":"justinfidelis"},"content":"    public String getStaffInfo(int staffId) throws MedBotException {","lastModifiedDate":"2021-10-24"},{"lineNumber":150,"author":{"gitId":"justinfidelis"},"content":"        return medicalStaffList.getPersonInfo(staffId);","lastModifiedDate":"2021-10-24"},{"lineNumber":151,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":152,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":153,"author":{"gitId":"justinfidelis"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":154,"author":{"gitId":"justinfidelis"},"content":"     * Returns a list of patients that match the specified attributes.","lastModifiedDate":"2021-10-24"},{"lineNumber":155,"author":{"gitId":"justinfidelis"},"content":"     *","lastModifiedDate":"2021-10-24"},{"lineNumber":156,"author":{"gitId":"justinfidelis"},"content":"     * @param parameters The attributes to filter patients","lastModifiedDate":"2021-10-24"},{"lineNumber":157,"author":{"gitId":"justinfidelis"},"content":"     * @return list of patients that match the specified attributes","lastModifiedDate":"2021-10-24"},{"lineNumber":158,"author":{"gitId":"justinfidelis"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":159,"author":{"gitId":"justinfidelis"},"content":"    public List\u003cString\u003e findPatients(String[] parameters) {","lastModifiedDate":"2021-10-24"},{"lineNumber":160,"author":{"gitId":"justinfidelis"},"content":"        return patientList.findPersons(parameters);","lastModifiedDate":"2021-10-24"},{"lineNumber":161,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":162,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":163,"author":{"gitId":"justinfidelis"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":164,"author":{"gitId":"justinfidelis"},"content":"     * Returns a list of staff that match the specified attributes.","lastModifiedDate":"2021-10-24"},{"lineNumber":165,"author":{"gitId":"justinfidelis"},"content":"     *","lastModifiedDate":"2021-10-24"},{"lineNumber":166,"author":{"gitId":"justinfidelis"},"content":"     * @param parameters The attributes to filter patients","lastModifiedDate":"2021-10-24"},{"lineNumber":167,"author":{"gitId":"justinfidelis"},"content":"     * @return list of staff that match the specified attributes","lastModifiedDate":"2021-10-24"},{"lineNumber":168,"author":{"gitId":"justinfidelis"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":169,"author":{"gitId":"justinfidelis"},"content":"    public List\u003cString\u003e findStaff(String[] parameters) {","lastModifiedDate":"2021-10-24"},{"lineNumber":170,"author":{"gitId":"justinfidelis"},"content":"        return medicalStaffList.findPersons(parameters);","lastModifiedDate":"2021-10-24"},{"lineNumber":171,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":172,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":173,"author":{"gitId":"justinfidelis"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":174,"author":{"gitId":"justinfidelis"},"content":"     * Returns a String that containing information of all patients.","lastModifiedDate":"2021-10-24"},{"lineNumber":175,"author":{"gitId":"justinfidelis"},"content":"     *","lastModifiedDate":"2021-10-24"},{"lineNumber":176,"author":{"gitId":"justinfidelis"},"content":"     * @return String containing information of all patients.","lastModifiedDate":"2021-10-24"},{"lineNumber":177,"author":{"gitId":"justinfidelis"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":178,"author":{"gitId":"EricBryann"},"content":"    public String listPatients(boolean getArchivedPatients) {","lastModifiedDate":"2021-10-25"},{"lineNumber":179,"author":{"gitId":"EricBryann"},"content":"        return patientList.listPersons(getArchivedPatients);","lastModifiedDate":"2021-10-25"},{"lineNumber":180,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":181,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":182,"author":{"gitId":"justinfidelis"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":183,"author":{"gitId":"justinfidelis"},"content":"     * Returns a String that containing information of all staff.","lastModifiedDate":"2021-10-24"},{"lineNumber":184,"author":{"gitId":"justinfidelis"},"content":"     *","lastModifiedDate":"2021-10-24"},{"lineNumber":185,"author":{"gitId":"justinfidelis"},"content":"     * @return String containing information of all staff.","lastModifiedDate":"2021-10-24"},{"lineNumber":186,"author":{"gitId":"justinfidelis"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":187,"author":{"gitId":"EricBryann"},"content":"    public String listStaff(boolean getArchivedStaffs) {","lastModifiedDate":"2021-10-25"},{"lineNumber":188,"author":{"gitId":"EricBryann"},"content":"        return medicalStaffList.listPersons(getArchivedStaffs);","lastModifiedDate":"2021-10-25"},{"lineNumber":189,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":190,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":191,"author":{"gitId":"EricBryann"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":192,"author":{"gitId":"EricBryann"},"content":"     * Archives the patient with the specified id.","lastModifiedDate":"2021-10-25"},{"lineNumber":193,"author":{"gitId":"EricBryann"},"content":"     *","lastModifiedDate":"2021-10-25"},{"lineNumber":194,"author":{"gitId":"EricBryann"},"content":"     * @param patientId the id of the patient to archive.","lastModifiedDate":"2021-10-25"},{"lineNumber":195,"author":{"gitId":"EricBryann"},"content":"     * @throws MedBotException if there is no patient with that id","lastModifiedDate":"2021-10-25"},{"lineNumber":196,"author":{"gitId":"EricBryann"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":197,"author":{"gitId":"EricBryann"},"content":"    public void archivePatient(int patientId) throws MedBotException {","lastModifiedDate":"2021-10-25"},{"lineNumber":198,"author":{"gitId":"EricBryann"},"content":"        patientList.archivePerson(patientId);","lastModifiedDate":"2021-10-25"},{"lineNumber":199,"author":{"gitId":"EricBryann"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":200,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":201,"author":{"gitId":"EricBryann"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":202,"author":{"gitId":"EricBryann"},"content":"     * Archives the staff with the specified id.","lastModifiedDate":"2021-10-25"},{"lineNumber":203,"author":{"gitId":"EricBryann"},"content":"     *","lastModifiedDate":"2021-10-25"},{"lineNumber":204,"author":{"gitId":"EricBryann"},"content":"     * @param staffId the id of the staff to archive.","lastModifiedDate":"2021-10-25"},{"lineNumber":205,"author":{"gitId":"EricBryann"},"content":"     * @throws MedBotException if there is no staff with that id","lastModifiedDate":"2021-10-25"},{"lineNumber":206,"author":{"gitId":"EricBryann"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":207,"author":{"gitId":"EricBryann"},"content":"    public void archiveStaff(int staffId) throws MedBotException {","lastModifiedDate":"2021-10-25"},{"lineNumber":208,"author":{"gitId":"EricBryann"},"content":"        medicalStaffList.archivePerson(staffId);","lastModifiedDate":"2021-10-25"},{"lineNumber":209,"author":{"gitId":"EricBryann"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":210,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":211,"author":{"gitId":"EricBryann"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":212,"author":{"gitId":"EricBryann"},"content":"     * Unarchives the patient with the specified id.","lastModifiedDate":"2021-10-25"},{"lineNumber":213,"author":{"gitId":"EricBryann"},"content":"     *","lastModifiedDate":"2021-10-25"},{"lineNumber":214,"author":{"gitId":"EricBryann"},"content":"     * @param patientId the id of the patient to unarchive.","lastModifiedDate":"2021-10-25"},{"lineNumber":215,"author":{"gitId":"EricBryann"},"content":"     * @throws MedBotException if there is no patient with that id","lastModifiedDate":"2021-10-25"},{"lineNumber":216,"author":{"gitId":"EricBryann"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":217,"author":{"gitId":"EricBryann"},"content":"    public void unarchivePatient(int patientId) throws MedBotException {","lastModifiedDate":"2021-10-25"},{"lineNumber":218,"author":{"gitId":"EricBryann"},"content":"        patientList.unarchivePerson(patientId);","lastModifiedDate":"2021-10-25"},{"lineNumber":219,"author":{"gitId":"EricBryann"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":220,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":221,"author":{"gitId":"EricBryann"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":222,"author":{"gitId":"EricBryann"},"content":"     * Unarchives the staff with the specified id.","lastModifiedDate":"2021-10-25"},{"lineNumber":223,"author":{"gitId":"EricBryann"},"content":"     *","lastModifiedDate":"2021-10-25"},{"lineNumber":224,"author":{"gitId":"EricBryann"},"content":"     * @param staffId the id of the staff to unarchive.","lastModifiedDate":"2021-10-25"},{"lineNumber":225,"author":{"gitId":"EricBryann"},"content":"     * @throws MedBotException if there is no staff with that id","lastModifiedDate":"2021-10-25"},{"lineNumber":226,"author":{"gitId":"EricBryann"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":227,"author":{"gitId":"EricBryann"},"content":"    public void unarchiveStaff(int staffId) throws MedBotException {","lastModifiedDate":"2021-10-25"},{"lineNumber":228,"author":{"gitId":"EricBryann"},"content":"        medicalStaffList.unarchivePerson(staffId);","lastModifiedDate":"2021-10-25"},{"lineNumber":229,"author":{"gitId":"EricBryann"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":230,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":231,"author":{"gitId":"justinfidelis"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":232,"author":{"gitId":"justinfidelis"},"content":"     * Returns a copy of the appointment at the specified id.","lastModifiedDate":"2021-10-24"},{"lineNumber":233,"author":{"gitId":"justinfidelis"},"content":"     *","lastModifiedDate":"2021-10-24"},{"lineNumber":234,"author":{"gitId":"justinfidelis"},"content":"     * @param appointmentId the id of the Appointment to be returned","lastModifiedDate":"2021-10-24"},{"lineNumber":235,"author":{"gitId":"justinfidelis"},"content":"     * @return a copy of the appointment at the specified id","lastModifiedDate":"2021-10-24"},{"lineNumber":236,"author":{"gitId":"justinfidelis"},"content":"     * @throws MedBotException if there is no appointment with that id","lastModifiedDate":"2021-10-24"},{"lineNumber":237,"author":{"gitId":"justinfidelis"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":238,"author":{"gitId":"justinfidelis"},"content":"    public Appointment getAppointment(int appointmentId) throws MedBotException {","lastModifiedDate":"2021-10-24"},{"lineNumber":239,"author":{"gitId":"justinfidelis"},"content":"        return schedulerAppointmentList.getAppointment(appointmentId);","lastModifiedDate":"2021-10-24"},{"lineNumber":240,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":241,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":242,"author":{"gitId":"justinfidelis"},"content":"    public String listAllAppointments() throws MedBotException {","lastModifiedDate":"2021-10-26"},{"lineNumber":243,"author":{"gitId":"justinfidelis"},"content":"        List\u003cInteger\u003e appointmentIds \u003d schedulerAppointmentList.listAppointments();","lastModifiedDate":"2021-10-26"},{"lineNumber":244,"author":{"gitId":"justinfidelis"},"content":"        return generateAppointmentTable(appointmentIds);","lastModifiedDate":"2021-10-26"},{"lineNumber":245,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":246,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":247,"author":{"gitId":"justinfidelis"},"content":"    public String listMedicalStaffAppointments(int staffId, FilterType filterType, int dateTimeCode)","lastModifiedDate":"2021-10-26"},{"lineNumber":248,"author":{"gitId":"justinfidelis"},"content":"            throws MedBotException {","lastModifiedDate":"2021-10-26"},{"lineNumber":249,"author":{"gitId":"justinfidelis"},"content":"        List\u003cInteger\u003e appointmentIds \u003d medicalStaffList.listAppointments(staffId, filterType, dateTimeCode);","lastModifiedDate":"2021-10-26"},{"lineNumber":250,"author":{"gitId":"justinfidelis"},"content":"        return generateAppointmentTable(appointmentIds);","lastModifiedDate":"2021-10-26"},{"lineNumber":251,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":252,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":253,"author":{"gitId":"justinfidelis"},"content":"    public String listPatientAppointments(int patientId, FilterType filterType, int dateTimeCode)","lastModifiedDate":"2021-10-26"},{"lineNumber":254,"author":{"gitId":"justinfidelis"},"content":"            throws MedBotException {","lastModifiedDate":"2021-10-26"},{"lineNumber":255,"author":{"gitId":"justinfidelis"},"content":"        List\u003cInteger\u003e appointmentIds \u003d patientList.listAppointments(patientId, filterType, dateTimeCode);","lastModifiedDate":"2021-10-26"},{"lineNumber":256,"author":{"gitId":"justinfidelis"},"content":"        return generateAppointmentTable(appointmentIds);","lastModifiedDate":"2021-10-26"},{"lineNumber":257,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":258,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":259,"author":{"gitId":"justinfidelis"},"content":"    private String generateAppointmentTable(List\u003cInteger\u003e appointmentIds) throws MedBotException {","lastModifiedDate":"2021-10-26"},{"lineNumber":260,"author":{"gitId":"justinfidelis"},"content":"        String output \u003d EMPTY_STRING;","lastModifiedDate":"2021-10-26"},{"lineNumber":261,"author":{"gitId":"justinfidelis"},"content":"        for (int appointmentId : appointmentIds) {","lastModifiedDate":"2021-10-26"},{"lineNumber":262,"author":{"gitId":"justinfidelis"},"content":"            output +\u003d generateAppointmentTableRow(appointmentId) + END_LINE;","lastModifiedDate":"2021-10-26"},{"lineNumber":263,"author":{"gitId":"justinfidelis"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":264,"author":{"gitId":"justinfidelis"},"content":"        return output;","lastModifiedDate":"2021-10-26"},{"lineNumber":265,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":266,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":267,"author":{"gitId":"justinfidelis"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":268,"author":{"gitId":"justinfidelis"},"content":"     * Adds the specified appointment to the scheduler if it does not clash with existing appointments.","lastModifiedDate":"2021-10-24"},{"lineNumber":269,"author":{"gitId":"justinfidelis"},"content":"     *","lastModifiedDate":"2021-10-24"},{"lineNumber":270,"author":{"gitId":"justinfidelis"},"content":"     * \u003cp\u003eIf the appointment does not have an appointmentId, it will be assigned one.","lastModifiedDate":"2021-10-24"},{"lineNumber":271,"author":{"gitId":"justinfidelis"},"content":"     *","lastModifiedDate":"2021-10-24"},{"lineNumber":272,"author":{"gitId":"justinfidelis"},"content":"     * @param appointment Appointment to be added to the scheduler","lastModifiedDate":"2021-10-24"},{"lineNumber":273,"author":{"gitId":"justinfidelis"},"content":"     * @throws MedBotException if the appointment is missing information or clashes with another appointment","lastModifiedDate":"2021-10-24"},{"lineNumber":274,"author":{"gitId":"justinfidelis"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":275,"author":{"gitId":"justinfidelis"},"content":"    public int addAppointment(Appointment appointment) throws MedBotException {","lastModifiedDate":"2021-10-26"},{"lineNumber":276,"author":{"gitId":"justinfidelis"},"content":"        if (!appointment.isComplete()) {","lastModifiedDate":"2021-10-21"},{"lineNumber":277,"author":{"gitId":"justinfidelis"},"content":"            throw new MedBotException(ERROR_ADD_INCOMPLETE_APPOINTMENT);","lastModifiedDate":"2021-10-21"},{"lineNumber":278,"author":{"gitId":"justinfidelis"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":279,"author":{"gitId":"justinfidelis"},"content":"        checkAvailability(appointment);","lastModifiedDate":"2021-10-24"},{"lineNumber":280,"author":{"gitId":"justinfidelis"},"content":"        return insertAppointment(appointment);","lastModifiedDate":"2021-10-26"},{"lineNumber":281,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":282,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":283,"author":{"gitId":"justinfidelis"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":284,"author":{"gitId":"justinfidelis"},"content":"     * Removes the appointment with the specified appointmentId.","lastModifiedDate":"2021-10-24"},{"lineNumber":285,"author":{"gitId":"justinfidelis"},"content":"     *","lastModifiedDate":"2021-10-24"},{"lineNumber":286,"author":{"gitId":"justinfidelis"},"content":"     * @param appointmentId the appointmentId of the appointment to be removed","lastModifiedDate":"2021-10-24"},{"lineNumber":287,"author":{"gitId":"justinfidelis"},"content":"     * @throws MedBotException if there is no appointment with that appointmentId","lastModifiedDate":"2021-10-24"},{"lineNumber":288,"author":{"gitId":"justinfidelis"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":289,"author":{"gitId":"justinfidelis"},"content":"    public void deleteAppointment(int appointmentId) throws MedBotException {","lastModifiedDate":"2021-10-21"},{"lineNumber":290,"author":{"gitId":"justinfidelis"},"content":"        Appointment deletedAppointment \u003d schedulerAppointmentList.deleteAppointment(appointmentId);","lastModifiedDate":"2021-10-24"},{"lineNumber":291,"author":{"gitId":"justinfidelis"},"content":"        int patientId \u003d deletedAppointment.getPatientId();","lastModifiedDate":"2021-10-21"},{"lineNumber":292,"author":{"gitId":"justinfidelis"},"content":"        int medicalStaffId \u003d deletedAppointment.getMedicalStaffId();","lastModifiedDate":"2021-10-21"},{"lineNumber":293,"author":{"gitId":"justinfidelis"},"content":"        int dateTimeCode \u003d deletedAppointment.getDateTimeCode();","lastModifiedDate":"2021-10-21"},{"lineNumber":294,"author":{"gitId":"justinfidelis"},"content":"        try {","lastModifiedDate":"2021-10-21"},{"lineNumber":295,"author":{"gitId":"justinfidelis"},"content":"            patientList.deleteAppointment(patientId, dateTimeCode);","lastModifiedDate":"2021-10-24"},{"lineNumber":296,"author":{"gitId":"justinfidelis"},"content":"            medicalStaffList.deleteAppointment(medicalStaffId, dateTimeCode);","lastModifiedDate":"2021-10-24"},{"lineNumber":297,"author":{"gitId":"justinfidelis"},"content":"        } catch (MedBotException me) {","lastModifiedDate":"2021-10-21"},{"lineNumber":298,"author":{"gitId":"justinfidelis"},"content":"            //This exception should not be thrown as the patientId, medicalStaffId and dateTimeCode should correspond","lastModifiedDate":"2021-10-25"},{"lineNumber":299,"author":{"gitId":"justinfidelis"},"content":"            //to a valid appointment","lastModifiedDate":"2021-10-25"},{"lineNumber":300,"author":{"gitId":"justinfidelis"},"content":"            assert false;","lastModifiedDate":"2021-10-24"},{"lineNumber":301,"author":{"gitId":"justinfidelis"},"content":"            throw new MedBotException(ERROR_DELETE_APPOINTMENT_ERROR);","lastModifiedDate":"2021-10-21"},{"lineNumber":302,"author":{"gitId":"justinfidelis"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":303,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":304,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":305,"author":{"gitId":"justinfidelis"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":306,"author":{"gitId":"justinfidelis"},"content":"     * Edits the appointment at the specified appointmentId to have the parameters of newAppointment.","lastModifiedDate":"2021-10-24"},{"lineNumber":307,"author":{"gitId":"justinfidelis"},"content":"     *","lastModifiedDate":"2021-10-24"},{"lineNumber":308,"author":{"gitId":"justinfidelis"},"content":"     * @param appointmentId  the id of the appointment to be modified","lastModifiedDate":"2021-10-24"},{"lineNumber":309,"author":{"gitId":"justinfidelis"},"content":"     * @param newAppointment Appointment containing the new parameter values","lastModifiedDate":"2021-10-24"},{"lineNumber":310,"author":{"gitId":"justinfidelis"},"content":"     * @throws MedBotException if there is no appointment with the specified id or the changes will lead to a clash","lastModifiedDate":"2021-10-24"},{"lineNumber":311,"author":{"gitId":"justinfidelis"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":312,"author":{"gitId":"justinfidelis"},"content":"    public void editAppointment(int appointmentId, Appointment newAppointment) throws MedBotException {","lastModifiedDate":"2021-10-24"},{"lineNumber":313,"author":{"gitId":"justinfidelis"},"content":"        Appointment oldAppointment \u003d schedulerAppointmentList.getAppointment(appointmentId);","lastModifiedDate":"2021-10-21"},{"lineNumber":314,"author":{"gitId":"justinfidelis"},"content":"        newAppointment \u003d Appointment.mergeAppointmentData(oldAppointment, newAppointment);","lastModifiedDate":"2021-10-21"},{"lineNumber":315,"author":{"gitId":"justinfidelis"},"content":"        newAppointment.setAppointmentId(appointmentId);","lastModifiedDate":"2021-10-21"},{"lineNumber":316,"author":{"gitId":"justinfidelis"},"content":"        assert newAppointment.isComplete();","lastModifiedDate":"2021-10-24"},{"lineNumber":317,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":318,"author":{"gitId":"justinfidelis"},"content":"        checkAvailability(newAppointment);","lastModifiedDate":"2021-10-24"},{"lineNumber":319,"author":{"gitId":"justinfidelis"},"content":"        deleteAppointment(appointmentId);","lastModifiedDate":"2021-10-21"},{"lineNumber":320,"author":{"gitId":"justinfidelis"},"content":"        insertAppointment(newAppointment);","lastModifiedDate":"2021-10-24"},{"lineNumber":321,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":322,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":323,"author":{"gitId":"justinfidelis"},"content":"    private int insertAppointment(Appointment appointment) throws MedBotException {","lastModifiedDate":"2021-10-24"},{"lineNumber":324,"author":{"gitId":"justinfidelis"},"content":"        try {","lastModifiedDate":"2021-10-24"},{"lineNumber":325,"author":{"gitId":"justinfidelis"},"content":"            int appointmentId \u003d schedulerAppointmentList.addAppointment(appointment);","lastModifiedDate":"2021-10-24"},{"lineNumber":326,"author":{"gitId":"justinfidelis"},"content":"            patientList.addAppointment(appointment.getPatientId(), appointment);","lastModifiedDate":"2021-10-24"},{"lineNumber":327,"author":{"gitId":"justinfidelis"},"content":"            medicalStaffList.addAppointment(appointment.getMedicalStaffId(), appointment);","lastModifiedDate":"2021-10-24"},{"lineNumber":328,"author":{"gitId":"justinfidelis"},"content":"            return appointmentId;","lastModifiedDate":"2021-10-24"},{"lineNumber":329,"author":{"gitId":"justinfidelis"},"content":"        } catch (MedBotException me) {","lastModifiedDate":"2021-10-24"},{"lineNumber":330,"author":{"gitId":"justinfidelis"},"content":"            //This exception should not be thrown as it was already checked that there would be no clashes when","lastModifiedDate":"2021-10-25"},{"lineNumber":331,"author":{"gitId":"justinfidelis"},"content":"            //inserting the appointment","lastModifiedDate":"2021-10-25"},{"lineNumber":332,"author":{"gitId":"justinfidelis"},"content":"            assert false;","lastModifiedDate":"2021-10-24"},{"lineNumber":333,"author":{"gitId":"justinfidelis"},"content":"            throw new MedBotException(ERROR_ADD_APPOINTMENT_ERROR);","lastModifiedDate":"2021-10-24"},{"lineNumber":334,"author":{"gitId":"justinfidelis"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":335,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":336,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":337,"author":{"gitId":"justinfidelis"},"content":"    private void checkAvailability(Appointment appointment) throws MedBotException {","lastModifiedDate":"2021-10-24"},{"lineNumber":338,"author":{"gitId":"justinfidelis"},"content":"        int patientId \u003d appointment.getPatientId();","lastModifiedDate":"2021-10-24"},{"lineNumber":339,"author":{"gitId":"justinfidelis"},"content":"        int staffId \u003d appointment.getMedicalStaffId();","lastModifiedDate":"2021-10-24"},{"lineNumber":340,"author":{"gitId":"justinfidelis"},"content":"        int dateTimeCode \u003d appointment.getDateTimeCode();","lastModifiedDate":"2021-10-24"},{"lineNumber":341,"author":{"gitId":"justinfidelis"},"content":"        int appointmentId \u003d appointment.getAppointmentId();","lastModifiedDate":"2021-10-24"},{"lineNumber":342,"author":{"gitId":"justinfidelis"},"content":"        checkPatientAvailability(patientId, dateTimeCode, appointmentId);","lastModifiedDate":"2021-10-24"},{"lineNumber":343,"author":{"gitId":"justinfidelis"},"content":"        checkMedicalStaffAvailability(staffId, dateTimeCode, appointmentId);","lastModifiedDate":"2021-10-24"},{"lineNumber":344,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":345,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":346,"author":{"gitId":"justinfidelis"},"content":"    private void checkPatientAvailability(int patientId, int dateTimeCode, int appointmentId) throws MedBotException {","lastModifiedDate":"2021-10-24"},{"lineNumber":347,"author":{"gitId":"justinfidelis"},"content":"        int clashAppointmentId \u003d patientList.getAppointmentId(patientId, dateTimeCode);","lastModifiedDate":"2021-10-24"},{"lineNumber":348,"author":{"gitId":"justinfidelis"},"content":"        if (clashAppointmentId !\u003d -1 \u0026\u0026 clashAppointmentId !\u003d appointmentId) {","lastModifiedDate":"2021-10-24"},{"lineNumber":349,"author":{"gitId":"justinfidelis"},"content":"            throw new MedBotException(String.format(ERROR_PATIENT_APPOINTMENT_CLASH, clashAppointmentId));","lastModifiedDate":"2021-10-21"},{"lineNumber":350,"author":{"gitId":"justinfidelis"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":351,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":352,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":353,"author":{"gitId":"justinfidelis"},"content":"    private void checkMedicalStaffAvailability(int staffId, int dateTimeCode, int appointmentId)","lastModifiedDate":"2021-10-24"},{"lineNumber":354,"author":{"gitId":"justinfidelis"},"content":"            throws MedBotException {","lastModifiedDate":"2021-10-24"},{"lineNumber":355,"author":{"gitId":"justinfidelis"},"content":"        int clashAppointmentId \u003d medicalStaffList.getAppointmentId(staffId, dateTimeCode);","lastModifiedDate":"2021-10-24"},{"lineNumber":356,"author":{"gitId":"justinfidelis"},"content":"        if (clashAppointmentId !\u003d -1 \u0026\u0026 clashAppointmentId !\u003d appointmentId) {","lastModifiedDate":"2021-10-24"},{"lineNumber":357,"author":{"gitId":"justinfidelis"},"content":"            throw new MedBotException(String.format(ERROR_STAFF_APPOINTMENT_CLASH, clashAppointmentId));","lastModifiedDate":"2021-10-21"},{"lineNumber":358,"author":{"gitId":"justinfidelis"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":359,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":360,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":361,"author":{"gitId":"justinfidelis"},"content":"    private String generateAppointmentTableRow(int appointmentId) throws MedBotException {","lastModifiedDate":"2021-10-26"},{"lineNumber":362,"author":{"gitId":"justinfidelis"},"content":"        Appointment appointment \u003d schedulerAppointmentList.getAppointment(appointmentId);","lastModifiedDate":"2021-10-26"},{"lineNumber":363,"author":{"gitId":"justinfidelis"},"content":"        String patientName \u003d patientList.getPersonName(appointment.getPatientId());","lastModifiedDate":"2021-10-26"},{"lineNumber":364,"author":{"gitId":"justinfidelis"},"content":"        String staffName \u003d medicalStaffList.getPersonName(appointment.getMedicalStaffId());","lastModifiedDate":"2021-10-26"},{"lineNumber":365,"author":{"gitId":"justinfidelis"},"content":"        return VERTICAL_LINE_SPACED + formatAppointmentId(appointment.getAppointmentId())","lastModifiedDate":"2021-10-26"},{"lineNumber":366,"author":{"gitId":"justinfidelis"},"content":"                + VERTICAL_LINE_SPACED + appointment.getDateTimeString()","lastModifiedDate":"2021-10-26"},{"lineNumber":367,"author":{"gitId":"justinfidelis"},"content":"                + VERTICAL_LINE_SPACED + formatPatientId(appointment.getPatientId())","lastModifiedDate":"2021-10-26"},{"lineNumber":368,"author":{"gitId":"justinfidelis"},"content":"                + VERTICAL_LINE_SPACED + formatNameString(patientName)","lastModifiedDate":"2021-10-26"},{"lineNumber":369,"author":{"gitId":"justinfidelis"},"content":"                + VERTICAL_LINE_SPACED + formatStaffId(appointment.getMedicalStaffId())","lastModifiedDate":"2021-10-26"},{"lineNumber":370,"author":{"gitId":"justinfidelis"},"content":"                + VERTICAL_LINE_SPACED + formatNameString(staffName)","lastModifiedDate":"2021-10-26"},{"lineNumber":371,"author":{"gitId":"justinfidelis"},"content":"                + VERTICAL_LINE_SPACED;","lastModifiedDate":"2021-10-26"},{"lineNumber":372,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":373,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":374,"author":{"gitId":"justinfidelis"},"content":"    private String formatAppointmentId(int id) {","lastModifiedDate":"2021-10-26"},{"lineNumber":375,"author":{"gitId":"justinfidelis"},"content":"        String idString \u003d Integer.toString(id);","lastModifiedDate":"2021-10-26"},{"lineNumber":376,"author":{"gitId":"justinfidelis"},"content":"        return formatAttributeString(idString, LENGTH_APPOINTMENT_ID_COLUMN);","lastModifiedDate":"2021-10-26"},{"lineNumber":377,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":378,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":379,"author":{"gitId":"justinfidelis"},"content":"    private String formatPatientId(int id) {","lastModifiedDate":"2021-10-26"},{"lineNumber":380,"author":{"gitId":"justinfidelis"},"content":"        String idString \u003d Integer.toString(id);","lastModifiedDate":"2021-10-26"},{"lineNumber":381,"author":{"gitId":"justinfidelis"},"content":"        return formatAttributeString(idString, LENGTH_PATIENT_ID_COLUMN);","lastModifiedDate":"2021-10-26"},{"lineNumber":382,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":383,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":384,"author":{"gitId":"justinfidelis"},"content":"    private String formatStaffId(int id) {","lastModifiedDate":"2021-10-26"},{"lineNumber":385,"author":{"gitId":"justinfidelis"},"content":"        String idString \u003d Integer.toString(id);","lastModifiedDate":"2021-10-26"},{"lineNumber":386,"author":{"gitId":"justinfidelis"},"content":"        return formatAttributeString(idString, LENGTH_STAFF_ID_COLUMN);","lastModifiedDate":"2021-10-26"},{"lineNumber":387,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":388,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":389,"author":{"gitId":"justinfidelis"},"content":"    private String formatNameString(String nameString) {","lastModifiedDate":"2021-10-26"},{"lineNumber":390,"author":{"gitId":"justinfidelis"},"content":"        return formatAttributeString(nameString, LENGTH_NAME_COLUMN);","lastModifiedDate":"2021-10-26"},{"lineNumber":391,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":392,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":393,"author":{"gitId":"justinfidelis"},"content":"    private String formatAttributeString(String attribute, int outputLength) {","lastModifiedDate":"2021-10-26"},{"lineNumber":394,"author":{"gitId":"justinfidelis"},"content":"        int attributeLength \u003d attribute.length();","lastModifiedDate":"2021-10-26"},{"lineNumber":395,"author":{"gitId":"justinfidelis"},"content":"        String output \u003d attribute;","lastModifiedDate":"2021-10-26"},{"lineNumber":396,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":397,"author":{"gitId":"justinfidelis"},"content":"        if (attributeLength \u003e outputLength) {","lastModifiedDate":"2021-10-26"},{"lineNumber":398,"author":{"gitId":"justinfidelis"},"content":"            output \u003d output.substring(0, outputLength - 3) + \"...\";","lastModifiedDate":"2021-10-26"},{"lineNumber":399,"author":{"gitId":"justinfidelis"},"content":"            return output;","lastModifiedDate":"2021-10-26"},{"lineNumber":400,"author":{"gitId":"justinfidelis"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":401,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":402,"author":{"gitId":"justinfidelis"},"content":"        for (int i \u003d attributeLength; i \u003c outputLength; i++) {","lastModifiedDate":"2021-10-26"},{"lineNumber":403,"author":{"gitId":"justinfidelis"},"content":"            output +\u003d SPACE;","lastModifiedDate":"2021-10-26"},{"lineNumber":404,"author":{"gitId":"justinfidelis"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":405,"author":{"gitId":"justinfidelis"},"content":"        return output;","lastModifiedDate":"2021-10-26"},{"lineNumber":406,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":407,"author":{"gitId":"justinfidelis"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"justinfidelis":354,"CrimsonTitan79":4,"Kureans":3,"EricBryann":46}},{"path":"src/main/java/medbot/command/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"justinfidelis"},"content":"package medbot.command;","lastModifiedDate":"2021-09-30"},{"lineNumber":2,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":3,"author":{"gitId":"justinfidelis"},"content":"import medbot.Scheduler;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"justinfidelis"},"content":"import medbot.exceptions.MedBotException;","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"jushg"},"content":"import medbot.ui.Ui;","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":7,"author":{"gitId":"justinfidelis"},"content":"public abstract class Command {","lastModifiedDate":"2021-09-30"},{"lineNumber":8,"author":{"gitId":"justinfidelis"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":9,"author":{"gitId":"EricBryann"},"content":"     * Returns if the command type is the exitCommand.","lastModifiedDate":"2021-10-04"},{"lineNumber":10,"author":{"gitId":"justinfidelis"},"content":"     *","lastModifiedDate":"2021-09-30"},{"lineNumber":11,"author":{"gitId":"justinfidelis"},"content":"     * @return boolean value of whether the command is the exitCommand","lastModifiedDate":"2021-09-30"},{"lineNumber":12,"author":{"gitId":"justinfidelis"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":13,"author":{"gitId":"justinfidelis"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-09-30"},{"lineNumber":14,"author":{"gitId":"justinfidelis"},"content":"        return false;","lastModifiedDate":"2021-09-30"},{"lineNumber":15,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":16,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":17,"author":{"gitId":"justinfidelis"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":18,"author":{"gitId":"EricBryann"},"content":"     * Abstract method that executes the command.","lastModifiedDate":"2021-10-04"},{"lineNumber":19,"author":{"gitId":"justinfidelis"},"content":"     *","lastModifiedDate":"2021-09-30"},{"lineNumber":20,"author":{"gitId":"justinfidelis"},"content":"     * @param scheduler the scheduler that will be read or modified","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"justinfidelis"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":22,"author":{"gitId":"justinfidelis"},"content":"    public abstract void execute(Scheduler scheduler, Ui ui) throws MedBotException;","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"justinfidelis"},"content":"}","lastModifiedDate":"2021-09-30"}],"authorContributionMap":{"justinfidelis":20,"jushg":1,"EricBryann":2}},{"path":"src/main/java/medbot/command/CommandType.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"justinfidelis"},"content":"package medbot.command;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"justinfidelis"},"content":"public enum CommandType {","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"EricBryann"},"content":"    HELP, EXIT, SWITCH, ADD, DELETE, EDIT, VIEW, LIST, FIND, ARCHIVE, UNARCHIVE","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"justinfidelis"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"justinfidelis":4,"EricBryann":1}},{"path":"src/main/java/medbot/command/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"justinfidelis"},"content":"package medbot.command;","lastModifiedDate":"2021-09-30"},{"lineNumber":2,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":3,"author":{"gitId":"justinfidelis"},"content":"import medbot.Scheduler;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"jushg"},"content":"import medbot.ui.Ui;","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":6,"author":{"gitId":"justinfidelis"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2021-09-30"},{"lineNumber":7,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":8,"author":{"gitId":"justinfidelis"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-09-30"},{"lineNumber":9,"author":{"gitId":"justinfidelis"},"content":"        return true;","lastModifiedDate":"2021-09-30"},{"lineNumber":10,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":11,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":12,"author":{"gitId":"EricBryann"},"content":"    @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"justinfidelis"},"content":"    public void execute(Scheduler scheduler, Ui ui) {","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"jushg"},"content":"        String exitMessage \u003d Ui.getExitMessage();","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"EricBryann"},"content":"        ui.printOutput(exitMessage);","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":17,"author":{"gitId":"justinfidelis"},"content":"}","lastModifiedDate":"2021-09-30"}],"authorContributionMap":{"justinfidelis":13,"jushg":2,"EricBryann":2}},{"path":"src/main/java/medbot/command/GetCurrentViewCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jushg"},"content":"package medbot.command;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"jushg"},"content":"import medbot.Scheduler;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"jushg"},"content":"import medbot.exceptions.MedBotException;","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"jushg"},"content":"import medbot.ui.Ui;","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"jushg"},"content":"import medbot.utilities.ViewType;","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"jushg"},"content":"public class GetCurrentViewCommand extends Command {","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"jushg"},"content":"    private ViewType viewType;","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"jushg"},"content":"    public GetCurrentViewCommand(ViewType viewType) {","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"jushg"},"content":"        this.viewType \u003d viewType;","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"jushg"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"jushg"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"jushg"},"content":"    public void execute(Scheduler scheduler, Ui ui) throws MedBotException {","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"jushg"},"content":"        String viewMessage \u003d Ui.getCurrentViewMessage(viewType);","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"jushg"},"content":"        ui.printOutput(viewMessage);","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"jushg"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"jushg"},"content":"}","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"jushg":20}},{"path":"src/main/java/medbot/command/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Kureans"},"content":"package medbot.command;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"justinfidelis"},"content":"import medbot.Scheduler;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"jushg"},"content":"import medbot.ui.Ui;","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"jushg"},"content":"import medbot.exceptions.MedBotException;","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"jushg"},"content":"import medbot.utilities.ViewType;","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"Kureans"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"justinfidelis"},"content":"    private CommandType commandType \u003d null;","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"jushg"},"content":"    private ViewType viewType \u003d null;","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"jushg"},"content":"    public HelpCommand(ViewType viewType) {","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"jushg"},"content":"        this.viewType \u003d viewType;","lastModifiedDate":"2021-10-22"},{"lineNumber":16,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":17,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"justinfidelis"},"content":"    public HelpCommand(ViewType viewType, CommandType commandType) {","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"jushg"},"content":"        this.viewType \u003d viewType;","lastModifiedDate":"2021-10-22"},{"lineNumber":20,"author":{"gitId":"justinfidelis"},"content":"        this.commandType \u003d commandType;","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"Kureans"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":24,"author":{"gitId":"Kureans"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"jushg"},"content":"    public void execute(Scheduler scheduler, Ui ui) throws MedBotException {","lastModifiedDate":"2021-10-22"},{"lineNumber":26,"author":{"gitId":"Kureans"},"content":"        String output;","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"justinfidelis"},"content":"        if (commandType \u003d\u003d null) {","lastModifiedDate":"2021-10-18"},{"lineNumber":28,"author":{"gitId":"justinfidelis"},"content":"            output \u003d Ui.getCommandList(viewType);","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"justinfidelis"},"content":"            ui.printOutput(output);","lastModifiedDate":"2021-10-18"},{"lineNumber":30,"author":{"gitId":"justinfidelis"},"content":"            return;","lastModifiedDate":"2021-10-18"},{"lineNumber":31,"author":{"gitId":"justinfidelis"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":32,"author":{"gitId":"justinfidelis"},"content":"        switch (commandType) {","lastModifiedDate":"2021-10-18"},{"lineNumber":33,"author":{"gitId":"jushg"},"content":"        case ADD:","lastModifiedDate":"2021-10-22"},{"lineNumber":34,"author":{"gitId":"jushg"},"content":"            output \u003d ui.getAddHelpMessage(viewType);","lastModifiedDate":"2021-10-22"},{"lineNumber":35,"author":{"gitId":"justinfidelis"},"content":"            break;","lastModifiedDate":"2021-10-18"},{"lineNumber":36,"author":{"gitId":"jushg"},"content":"        case DELETE:","lastModifiedDate":"2021-10-22"},{"lineNumber":37,"author":{"gitId":"jushg"},"content":"            output \u003d ui.getDeleteHelpMessage(viewType);","lastModifiedDate":"2021-10-22"},{"lineNumber":38,"author":{"gitId":"justinfidelis"},"content":"            break;","lastModifiedDate":"2021-10-18"},{"lineNumber":39,"author":{"gitId":"jushg"},"content":"        case EDIT:","lastModifiedDate":"2021-10-22"},{"lineNumber":40,"author":{"gitId":"jushg"},"content":"            output \u003d ui.getEditHelpMessage(viewType);","lastModifiedDate":"2021-10-22"},{"lineNumber":41,"author":{"gitId":"justinfidelis"},"content":"            break;","lastModifiedDate":"2021-10-18"},{"lineNumber":42,"author":{"gitId":"jushg"},"content":"        case LIST:","lastModifiedDate":"2021-10-22"},{"lineNumber":43,"author":{"gitId":"jushg"},"content":"            output \u003d ui.getListHelpMessage(viewType);","lastModifiedDate":"2021-10-22"},{"lineNumber":44,"author":{"gitId":"justinfidelis"},"content":"            break;","lastModifiedDate":"2021-10-18"},{"lineNumber":45,"author":{"gitId":"jushg"},"content":"        case FIND:","lastModifiedDate":"2021-10-22"},{"lineNumber":46,"author":{"gitId":"jushg"},"content":"            output \u003d ui.getFindHelpMessage(viewType);","lastModifiedDate":"2021-10-22"},{"lineNumber":47,"author":{"gitId":"justinfidelis"},"content":"            break;","lastModifiedDate":"2021-10-18"},{"lineNumber":48,"author":{"gitId":"jushg"},"content":"        case VIEW:","lastModifiedDate":"2021-10-22"},{"lineNumber":49,"author":{"gitId":"jushg"},"content":"            output \u003d ui.getViewHelpMessage(viewType);","lastModifiedDate":"2021-10-22"},{"lineNumber":50,"author":{"gitId":"justinfidelis"},"content":"            break;","lastModifiedDate":"2021-10-18"},{"lineNumber":51,"author":{"gitId":"jushg"},"content":"        case SWITCH:","lastModifiedDate":"2021-10-22"},{"lineNumber":52,"author":{"gitId":"jushg"},"content":"            output \u003d ui.getSwitchHelpMessage();","lastModifiedDate":"2021-10-22"},{"lineNumber":53,"author":{"gitId":"EricBryann"},"content":"            break;","lastModifiedDate":"2021-10-19"},{"lineNumber":54,"author":{"gitId":"EricBryann"},"content":"        case ARCHIVE:","lastModifiedDate":"2021-10-25"},{"lineNumber":55,"author":{"gitId":"EricBryann"},"content":"            output \u003d ui.getArchiveHelpMessage(viewType);","lastModifiedDate":"2021-10-25"},{"lineNumber":56,"author":{"gitId":"EricBryann"},"content":"            break;","lastModifiedDate":"2021-10-25"},{"lineNumber":57,"author":{"gitId":"EricBryann"},"content":"        case UNARCHIVE:","lastModifiedDate":"2021-10-25"},{"lineNumber":58,"author":{"gitId":"EricBryann"},"content":"            output \u003d ui.getUnarchiveHelpMessage(viewType);","lastModifiedDate":"2021-10-25"},{"lineNumber":59,"author":{"gitId":"EricBryann"},"content":"            break;","lastModifiedDate":"2021-10-25"},{"lineNumber":60,"author":{"gitId":"jushg"},"content":"        case EXIT:","lastModifiedDate":"2021-10-22"},{"lineNumber":61,"author":{"gitId":"jushg"},"content":"            output \u003d ui.getExitHelpMessage();","lastModifiedDate":"2021-10-22"},{"lineNumber":62,"author":{"gitId":"justinfidelis"},"content":"            break;","lastModifiedDate":"2021-10-18"},{"lineNumber":63,"author":{"gitId":"justinfidelis"},"content":"        default:","lastModifiedDate":"2021-10-18"},{"lineNumber":64,"author":{"gitId":"justinfidelis"},"content":"            output \u003d Ui.getCommandList(viewType);","lastModifiedDate":"2021-10-25"},{"lineNumber":65,"author":{"gitId":"justinfidelis"},"content":"            break;","lastModifiedDate":"2021-10-18"},{"lineNumber":66,"author":{"gitId":"Kureans"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":67,"author":{"gitId":"Kureans"},"content":"        ui.printOutput(output);","lastModifiedDate":"2021-10-07"},{"lineNumber":68,"author":{"gitId":"Kureans"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":69,"author":{"gitId":"Kureans"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"justinfidelis":22,"jushg":26,"Kureans":14,"EricBryann":7}},{"path":"src/main/java/medbot/command/SwitchCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Kureans"},"content":"package medbot.command;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":3,"author":{"gitId":"justinfidelis"},"content":"import medbot.parser.Parser;","lastModifiedDate":"2021-10-22"},{"lineNumber":4,"author":{"gitId":"justinfidelis"},"content":"import medbot.Scheduler;","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"jushg"},"content":"import medbot.ui.Ui;","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"justinfidelis"},"content":"import medbot.utilities.ViewType;","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":8,"author":{"gitId":"Kureans"},"content":"public class SwitchCommand extends Command {","lastModifiedDate":"2021-10-16"},{"lineNumber":9,"author":{"gitId":"justinfidelis"},"content":"    private ViewType newViewType \u003d null;","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"justinfidelis"},"content":"    public SwitchCommand(ViewType viewType) {","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"justinfidelis"},"content":"        newViewType \u003d viewType;","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":15,"author":{"gitId":"Kureans"},"content":"    @Override","lastModifiedDate":"2021-10-16"},{"lineNumber":16,"author":{"gitId":"justinfidelis"},"content":"    public void execute(Scheduler scheduler, Ui ui) {","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"justinfidelis"},"content":"        Parser.setViewType(newViewType);","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":19,"author":{"gitId":"Kureans"},"content":"        ui.clearConsoleFromIde();","lastModifiedDate":"2021-10-16"},{"lineNumber":20,"author":{"gitId":"justinfidelis"},"content":"        ui.printSwitchedViewMessage(newViewType);","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"Kureans"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":22,"author":{"gitId":"Kureans"},"content":"}","lastModifiedDate":"2021-10-16"}],"authorContributionMap":{"justinfidelis":12,"jushg":1,"Kureans":9}},{"path":"src/main/java/medbot/command/appointmentcommand/AddAppointmentCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"justinfidelis"},"content":"package medbot.command.appointmentcommand;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"justinfidelis"},"content":"import medbot.Appointment;","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"justinfidelis"},"content":"import medbot.Scheduler;","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"jushg"},"content":"import medbot.ui.Ui;","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"justinfidelis"},"content":"import medbot.command.Command;","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"justinfidelis"},"content":"import medbot.exceptions.MedBotException;","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"justinfidelis"},"content":"public class AddAppointmentCommand extends Command {","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"justinfidelis"},"content":"    Appointment appointment \u003d null;","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"justinfidelis"},"content":"    public AddAppointmentCommand(Appointment appointment) {","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"justinfidelis"},"content":"        this.appointment \u003d appointment;","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"justinfidelis"},"content":"    @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"justinfidelis"},"content":"    public void execute(Scheduler scheduler, Ui ui) throws MedBotException {","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"justinfidelis"},"content":"        scheduler.addAppointment(appointment);","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"justinfidelis"},"content":"        ui.printOutput(\"Appointment added: \" + appointment);","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"justinfidelis"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"justinfidelis":21,"jushg":1}},{"path":"src/main/java/medbot/command/appointmentcommand/DeleteAppointmentCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"justinfidelis"},"content":"package medbot.command.appointmentcommand;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"justinfidelis"},"content":"import medbot.Scheduler;","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"jushg"},"content":"import medbot.ui.Ui;","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"justinfidelis"},"content":"import medbot.command.Command;","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"justinfidelis"},"content":"import medbot.exceptions.MedBotException;","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"justinfidelis"},"content":"public class DeleteAppointmentCommand extends Command {","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"justinfidelis"},"content":"    int appointmentId \u003d 0;","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"justinfidelis"},"content":"    public DeleteAppointmentCommand(int appointmentId) {","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"justinfidelis"},"content":"        this.appointmentId \u003d appointmentId;","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"justinfidelis"},"content":"    @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"justinfidelis"},"content":"    public void execute(Scheduler scheduler, Ui ui) throws MedBotException {","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"justinfidelis"},"content":"        scheduler.deleteAppointment(appointmentId);","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"justinfidelis"},"content":"        ui.printOutput(\"deleted appointment with Id: \" + appointmentId);","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"justinfidelis"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"justinfidelis":19,"jushg":1}},{"path":"src/main/java/medbot/command/appointmentcommand/EditAppointmentCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"justinfidelis"},"content":"package medbot.command.appointmentcommand;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"justinfidelis"},"content":"import medbot.Appointment;","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"justinfidelis"},"content":"import medbot.Scheduler;","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"jushg"},"content":"import medbot.ui.Ui;","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"justinfidelis"},"content":"import medbot.command.Command;","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"justinfidelis"},"content":"import medbot.exceptions.MedBotException;","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"justinfidelis"},"content":"public class EditAppointmentCommand extends Command {","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"justinfidelis"},"content":"    int appointmentId \u003d 0;","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"justinfidelis"},"content":"    Appointment appointment \u003d null;","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"justinfidelis"},"content":"    public EditAppointmentCommand(int appointmentId, Appointment appointment) {","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"justinfidelis"},"content":"        this.appointmentId \u003d appointmentId;","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"justinfidelis"},"content":"        this.appointment \u003d appointment;","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"justinfidelis"},"content":"    @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"justinfidelis"},"content":"    public void execute(Scheduler scheduler, Ui ui) throws MedBotException {","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"justinfidelis"},"content":"        scheduler.editAppointment(appointmentId, appointment);","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"justinfidelis"},"content":"        Appointment editedAppointment \u003d scheduler.getAppointment(appointmentId);","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"justinfidelis"},"content":"        ui.printOutput(\"Appointment \" + appointmentId + \" changed to \" + editedAppointment);","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"justinfidelis"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"justinfidelis":23,"jushg":1}},{"path":"src/main/java/medbot/command/appointmentcommand/FindAppointmentCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Kureans"},"content":"package medbot.command.appointmentcommand;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"Kureans"},"content":"import medbot.Scheduler;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"Kureans"},"content":"import medbot.command.Command;","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"Kureans"},"content":"import medbot.exceptions.MedBotException;","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"Kureans"},"content":"import medbot.person.PersonType;","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"justinfidelis"},"content":"import medbot.ui.SchedulerUi;","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"Kureans"},"content":"import medbot.ui.Ui;","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"Kureans"},"content":"import medbot.utilities.FilterType;","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"Kureans"},"content":"public class FindAppointmentCommand extends Command {","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"Kureans"},"content":"    protected int personId \u003d 0;","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"Kureans"},"content":"    protected PersonType personType;","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"Kureans"},"content":"    protected FilterType filterType;","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"Kureans"},"content":"    protected int dateTimeCode;","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"Kureans"},"content":"    public FindAppointmentCommand(int personId, PersonType personType, FilterType filterType, int dateTimeCode) {","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"Kureans"},"content":"        this.personId \u003d personId;","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"Kureans"},"content":"        this.personType \u003d personType;","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"Kureans"},"content":"        this.filterType \u003d filterType;","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"Kureans"},"content":"        this.dateTimeCode \u003d dateTimeCode;","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"Kureans"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":25,"author":{"gitId":"Kureans"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":26,"author":{"gitId":"Kureans"},"content":"    public void execute(Scheduler scheduler, Ui ui) throws MedBotException {","lastModifiedDate":"2021-10-25"},{"lineNumber":27,"author":{"gitId":"Kureans"},"content":"        String output \u003d \"\";","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"Kureans"},"content":"        switch (personType) {","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"Kureans"},"content":"        case PATIENT:","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"Kureans"},"content":"            output \u003d scheduler.listPatientAppointments(personId, filterType, dateTimeCode);","lastModifiedDate":"2021-10-25"},{"lineNumber":31,"author":{"gitId":"Kureans"},"content":"            break;","lastModifiedDate":"2021-10-25"},{"lineNumber":32,"author":{"gitId":"Kureans"},"content":"        case STAFF:","lastModifiedDate":"2021-10-25"},{"lineNumber":33,"author":{"gitId":"Kureans"},"content":"            output \u003d scheduler.listMedicalStaffAppointments(personId, filterType, dateTimeCode);","lastModifiedDate":"2021-10-25"},{"lineNumber":34,"author":{"gitId":"Kureans"},"content":"            break;","lastModifiedDate":"2021-10-25"},{"lineNumber":35,"author":{"gitId":"Kureans"},"content":"        default:","lastModifiedDate":"2021-10-25"},{"lineNumber":36,"author":{"gitId":"Kureans"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":37,"author":{"gitId":"Kureans"},"content":"        if (output.isEmpty()) {","lastModifiedDate":"2021-10-25"},{"lineNumber":38,"author":{"gitId":"justinfidelis"},"content":"            output \u003d SchedulerUi.getNoAppointmentsFoundMessage();","lastModifiedDate":"2021-10-26"},{"lineNumber":39,"author":{"gitId":"justinfidelis"},"content":"        } else {","lastModifiedDate":"2021-10-26"},{"lineNumber":40,"author":{"gitId":"justinfidelis"},"content":"            output \u003d SchedulerUi.getFindAppointmentListMessage(output);","lastModifiedDate":"2021-10-26"},{"lineNumber":41,"author":{"gitId":"Kureans"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":42,"author":{"gitId":"Kureans"},"content":"        ui.printOutput(output);","lastModifiedDate":"2021-10-25"},{"lineNumber":43,"author":{"gitId":"Kureans"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":44,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":45,"author":{"gitId":"Kureans"},"content":"}","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"justinfidelis":4,"Kureans":41}},{"path":"src/main/java/medbot/command/appointmentcommand/ListAppointmentCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"justinfidelis"},"content":"package medbot.command.appointmentcommand;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"justinfidelis"},"content":"import medbot.Scheduler;","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"justinfidelis"},"content":"import medbot.ui.SchedulerUi;","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"jushg"},"content":"import medbot.ui.Ui;","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"justinfidelis"},"content":"import medbot.command.Command;","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"justinfidelis"},"content":"import medbot.exceptions.MedBotException;","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"justinfidelis"},"content":"public class ListAppointmentCommand extends Command {","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"justinfidelis"},"content":"    @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"justinfidelis"},"content":"    public void execute(Scheduler scheduler, Ui ui) throws MedBotException {","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"justinfidelis"},"content":"        String output \u003d scheduler.listAllAppointments();","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"justinfidelis"},"content":"        if (output.isEmpty()) {","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"justinfidelis"},"content":"            output \u003d SchedulerUi.getNoAppointmentsMessage();","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"justinfidelis"},"content":"        } else {","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"justinfidelis"},"content":"            output \u003d SchedulerUi.getListAppointmentListMessage(output);","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"justinfidelis"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"justinfidelis"},"content":"        ui.printOutput(output);","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"justinfidelis"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"justinfidelis":20,"jushg":1}},{"path":"src/main/java/medbot/command/appointmentcommand/ViewAppointmentCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Kureans"},"content":"package medbot.command.appointmentcommand;","lastModifiedDate":"2021-10-22"},{"lineNumber":2,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":3,"author":{"gitId":"Kureans"},"content":"import medbot.Appointment;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"Kureans"},"content":"import medbot.Scheduler;","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"jushg"},"content":"import medbot.ui.Ui;","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"Kureans"},"content":"import medbot.command.Command;","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"Kureans"},"content":"import medbot.exceptions.MedBotException;","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"Kureans"},"content":"public class ViewAppointmentCommand extends Command {","lastModifiedDate":"2021-10-22"},{"lineNumber":10,"author":{"gitId":"Kureans"},"content":"    protected int appointmentId;","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"Kureans"},"content":"    public ViewAppointmentCommand(int appointmentId) {","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"Kureans"},"content":"        this.appointmentId \u003d appointmentId;","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"Kureans"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":16,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":17,"author":{"gitId":"Kureans"},"content":"    @Override","lastModifiedDate":"2021-10-22"},{"lineNumber":18,"author":{"gitId":"Kureans"},"content":"    public void execute(Scheduler scheduler, Ui ui) throws MedBotException {","lastModifiedDate":"2021-10-22"},{"lineNumber":19,"author":{"gitId":"Kureans"},"content":"        String output \u003d \"\";","lastModifiedDate":"2021-10-22"},{"lineNumber":20,"author":{"gitId":"Kureans"},"content":"        Appointment appointment \u003d scheduler.getAppointment(appointmentId);","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"Kureans"},"content":"        output +\u003d appointment;","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"Kureans"},"content":"        ui.printOutput(output);","lastModifiedDate":"2021-10-22"},{"lineNumber":23,"author":{"gitId":"Kureans"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":24,"author":{"gitId":"Kureans"},"content":"}","lastModifiedDate":"2021-10-22"}],"authorContributionMap":{"jushg":1,"Kureans":23}},{"path":"src/main/java/medbot/command/personcommand/AddPersonCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"justinfidelis"},"content":"package medbot.command.personcommand;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"justinfidelis"},"content":"import medbot.command.Command;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"jushg"},"content":"import medbot.person.Person;","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"justinfidelis"},"content":"public abstract class AddPersonCommand extends Command {","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"jushg"},"content":"    protected Person person;","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"justinfidelis"},"content":"    public AddPersonCommand(Person person) {","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"jushg"},"content":"        this.person \u003d person;","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"jushg"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"jushg"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"justinfidelis":4,"jushg":8}},{"path":"src/main/java/medbot/command/personcommand/ArchivePersonCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"EricBryann"},"content":"package medbot.command.personcommand;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"EricBryann"},"content":"import medbot.command.Command;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"EricBryann"},"content":"public abstract class ArchivePersonCommand extends Command {","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"EricBryann"},"content":"    protected int personId;","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"EricBryann"},"content":"    public ArchivePersonCommand(int personId) {","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"EricBryann"},"content":"        this.personId \u003d personId;","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"EricBryann"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"EricBryann"},"content":"}","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"EricBryann":11}},{"path":"src/main/java/medbot/command/personcommand/DeletePersonCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"justinfidelis"},"content":"package medbot.command.personcommand;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"justinfidelis"},"content":"import medbot.command.Command;","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"justinfidelis"},"content":"public abstract class DeletePersonCommand extends Command {","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"jushg"},"content":"    protected int personId;","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"justinfidelis"},"content":"    public DeletePersonCommand(int personId) {","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"jushg"},"content":"        this.personId \u003d personId;","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"jushg"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"jushg"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"justinfidelis":5,"jushg":7}},{"path":"src/main/java/medbot/command/personcommand/EditPersonCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"justinfidelis"},"content":"package medbot.command.personcommand;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"justinfidelis"},"content":"import medbot.command.Command;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"jushg"},"content":"import medbot.person.Person;","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"justinfidelis"},"content":"public abstract class EditPersonCommand extends Command {","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"jushg"},"content":"    protected int personId;","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"jushg"},"content":"    protected Person person;","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"justinfidelis"},"content":"    public EditPersonCommand(int personId, Person person) {","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"jushg"},"content":"        this.personId \u003d personId;","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"jushg"},"content":"        this.person \u003d person;","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"jushg"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"jushg"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"justinfidelis":4,"jushg":10}},{"path":"src/main/java/medbot/command/personcommand/FindPersonCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"justinfidelis"},"content":"package medbot.command.personcommand;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"justinfidelis"},"content":"import medbot.command.Command;","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"justinfidelis"},"content":"public abstract class FindPersonCommand extends Command {","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"EricBryann"},"content":"    protected String[] parameters;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"justinfidelis"},"content":"    public FindPersonCommand(String[] parameters) {","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"EricBryann"},"content":"        this.parameters \u003d parameters;","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"EricBryann"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"EricBryann"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"justinfidelis":5,"EricBryann":7}},{"path":"src/main/java/medbot/command/personcommand/ListPersonCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"justinfidelis"},"content":"package medbot.command.personcommand;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"justinfidelis"},"content":"import medbot.command.Command;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"justinfidelis"},"content":"public abstract class ListPersonCommand extends Command {","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"EricBryann"},"content":"    private boolean getArchived;","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"EricBryann"},"content":"    public ListPersonCommand(boolean getArchived) {","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"EricBryann"},"content":"        this.getArchived \u003d getArchived;","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"EricBryann"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"EricBryann"},"content":"    public boolean getArchived() {","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"EricBryann"},"content":"        return getArchived;","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"EricBryann"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"justinfidelis"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"justinfidelis":7,"EricBryann":8}},{"path":"src/main/java/medbot/command/personcommand/UnarchivePersonCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"EricBryann"},"content":"package medbot.command.personcommand;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"EricBryann"},"content":"import medbot.command.Command;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"EricBryann"},"content":"public abstract class UnarchivePersonCommand extends Command {","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"EricBryann"},"content":"    protected int personId;","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"EricBryann"},"content":"    public UnarchivePersonCommand(int personId) {","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"EricBryann"},"content":"        this.personId \u003d personId;","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"EricBryann"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"EricBryann"},"content":"}","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"EricBryann":11}},{"path":"src/main/java/medbot/command/personcommand/ViewPersonCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"justinfidelis"},"content":"package medbot.command.personcommand;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"justinfidelis"},"content":"import medbot.command.Command;","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"justinfidelis"},"content":"public abstract class ViewPersonCommand extends Command {","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"jushg"},"content":"    protected int personId \u003d 0;","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"justinfidelis"},"content":"    public ViewPersonCommand(int personId) {","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"jushg"},"content":"        this.personId \u003d personId;","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"jushg"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"jushg"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"justinfidelis":5,"jushg":7}},{"path":"src/main/java/medbot/command/personcommand/patientcommand/AddPatientCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"justinfidelis"},"content":"package medbot.command.personcommand.patientcommand;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"justinfidelis"},"content":"import medbot.Scheduler;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"justinfidelis"},"content":"import medbot.command.personcommand.AddPersonCommand;","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"jushg"},"content":"import medbot.ui.Ui;","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"justinfidelis"},"content":"import medbot.exceptions.MedBotException;","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"jushg"},"content":"import medbot.person.Patient;","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"jushg"},"content":"import medbot.utilities.ViewType;","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"justinfidelis"},"content":"public class AddPatientCommand extends AddPersonCommand {","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"jushg"},"content":"    public AddPatientCommand(Patient patient) {","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"jushg"},"content":"        super(patient);","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"jushg"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"jushg"},"content":"    @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"justinfidelis"},"content":"    public void execute(Scheduler scheduler, Ui ui) throws MedBotException {","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"justinfidelis"},"content":"        int patientId \u003d scheduler.addPatient(person);","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"jushg"},"content":"        String addPatientMessage \u003d Ui.getAddMessage(patientId, ViewType.PATIENT_INFO);","lastModifiedDate":"2021-10-22"},{"lineNumber":19,"author":{"gitId":"justinfidelis"},"content":"        ui.printOutput(addPatientMessage);","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"jushg"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"jushg"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"justinfidelis":8,"jushg":13}},{"path":"src/main/java/medbot/command/personcommand/patientcommand/ArchivePatientCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"EricBryann"},"content":"package medbot.command.personcommand.patientcommand;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"EricBryann"},"content":"import medbot.Scheduler;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"EricBryann"},"content":"import medbot.command.personcommand.ArchivePersonCommand;","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"EricBryann"},"content":"import medbot.exceptions.MedBotException;","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"EricBryann"},"content":"import medbot.ui.Ui;","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"EricBryann"},"content":"import medbot.utilities.ViewType;","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"EricBryann"},"content":"public class ArchivePatientCommand extends ArchivePersonCommand {","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"EricBryann"},"content":"    public ArchivePatientCommand(int patientId) {","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"EricBryann"},"content":"        super(patientId);","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"EricBryann"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"EricBryann"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"EricBryann"},"content":"    public void execute(Scheduler scheduler, Ui ui) throws MedBotException {","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"EricBryann"},"content":"        scheduler.archivePatient(personId);","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"EricBryann"},"content":"        String archivePatientMessage \u003d Ui.getArchivePersonMessage(personId, ViewType.PATIENT_INFO);","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"EricBryann"},"content":"        ui.printOutput(archivePatientMessage);","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"EricBryann"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"EricBryann"},"content":"}","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"EricBryann":20}},{"path":"src/main/java/medbot/command/personcommand/patientcommand/DeletePatientCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"justinfidelis"},"content":"package medbot.command.personcommand.patientcommand;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"justinfidelis"},"content":"import medbot.Scheduler;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"justinfidelis"},"content":"import medbot.command.personcommand.DeletePersonCommand;","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"jushg"},"content":"import medbot.exceptions.MedBotException;","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"jushg"},"content":"import medbot.ui.Ui;","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"jushg"},"content":"import medbot.utilities.ViewType;","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"justinfidelis"},"content":"public class DeletePatientCommand extends DeletePersonCommand {","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"jushg"},"content":"    public DeletePatientCommand(int patientId) {","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"jushg"},"content":"        super(patientId);","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"jushg"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"jushg"},"content":"    @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"justinfidelis"},"content":"    public void execute(Scheduler scheduler, Ui ui) throws MedBotException {","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"justinfidelis"},"content":"        scheduler.deletePatient(personId);","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"jushg"},"content":"        String deletePatientMessage \u003d Ui.getDeleteMessage(personId, ViewType.PATIENT_INFO);","lastModifiedDate":"2021-10-22"},{"lineNumber":19,"author":{"gitId":"jushg"},"content":"        ui.printOutput(deletePatientMessage);","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"jushg"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"jushg"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"justinfidelis":6,"jushg":15}},{"path":"src/main/java/medbot/command/personcommand/patientcommand/EditPatientCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"justinfidelis"},"content":"package medbot.command.personcommand.patientcommand;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"justinfidelis"},"content":"import medbot.Scheduler;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"justinfidelis"},"content":"import medbot.command.personcommand.EditPersonCommand;","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"jushg"},"content":"import medbot.exceptions.MedBotException;","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"jushg"},"content":"import medbot.ui.Ui;","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"jushg"},"content":"import medbot.person.Patient;","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"jushg"},"content":"import medbot.utilities.ViewType;","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"justinfidelis"},"content":"public class EditPatientCommand extends EditPersonCommand {","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"jushg"},"content":"    public EditPatientCommand(int patientId, Patient patient) {","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"jushg"},"content":"        super(patientId, patient);","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"jushg"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"jushg"},"content":"    @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":17,"author":{"gitId":"justinfidelis"},"content":"    public void execute(Scheduler scheduler, Ui ui) throws MedBotException {","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"justinfidelis"},"content":"        scheduler.editPatient(personId, person);","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"justinfidelis"},"content":"        String patientInfo \u003d scheduler.getPatientInfo(personId);","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"jushg"},"content":"        String editPatientMessage \u003d Ui.getEditMessage(personId, patientInfo, ViewType.PATIENT_INFO);","lastModifiedDate":"2021-10-22"},{"lineNumber":21,"author":{"gitId":"jushg"},"content":"        ui.printOutput(editPatientMessage);","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"jushg"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":23,"author":{"gitId":"jushg"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"justinfidelis":7,"jushg":16}},{"path":"src/main/java/medbot/command/personcommand/patientcommand/FindPatientCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"justinfidelis"},"content":"package medbot.command.personcommand.patientcommand;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"justinfidelis"},"content":"import medbot.Scheduler;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"jushg"},"content":"import medbot.ui.Ui;","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"justinfidelis"},"content":"import medbot.command.personcommand.FindPersonCommand;","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"EricBryann"},"content":"import medbot.exceptions.MedBotException;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"jushg"},"content":"import medbot.utilities.ViewType;","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"EricBryann"},"content":"import java.util.List;","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"justinfidelis"},"content":"public class FindPatientCommand extends FindPersonCommand {","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"EricBryann"},"content":"    public FindPatientCommand(String[] parameters) {","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"EricBryann"},"content":"        super(parameters);","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"EricBryann"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"EricBryann"},"content":"    @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"justinfidelis"},"content":"    public void execute(Scheduler scheduler, Ui ui) throws MedBotException {","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"justinfidelis"},"content":"        List\u003cString\u003e patients \u003d scheduler.findPatients(parameters);","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"jushg"},"content":"        String findPatientsMessage \u003d Ui.getFindPersonsMessage(patients, ViewType.PATIENT_INFO);","lastModifiedDate":"2021-10-22"},{"lineNumber":20,"author":{"gitId":"EricBryann"},"content":"        ui.printOutput(findPatientsMessage);","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"EricBryann"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"EricBryann"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"justinfidelis":6,"jushg":3,"EricBryann":13}},{"path":"src/main/java/medbot/command/personcommand/patientcommand/ListPatientCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"justinfidelis"},"content":"package medbot.command.personcommand.patientcommand;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"justinfidelis"},"content":"import medbot.Scheduler;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"jushg"},"content":"import medbot.ui.PatientUi;","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"jushg"},"content":"import medbot.ui.Ui;","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"justinfidelis"},"content":"import medbot.command.personcommand.ListPersonCommand;","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"justinfidelis"},"content":"public class ListPatientCommand extends ListPersonCommand {","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"EricBryann"},"content":"    public ListPatientCommand(boolean getArchivedPersons) {","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"EricBryann"},"content":"        super(getArchivedPersons);","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"EricBryann"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"jushg"},"content":"    @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"justinfidelis"},"content":"    public void execute(Scheduler scheduler, Ui ui) {","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"EricBryann"},"content":"        String allPatientsString \u003d PatientUi.getAllPatientsString(scheduler.listPatients(getArchived()));","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"jushg"},"content":"        ui.printOutput(allPatientsString);","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"jushg"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":19,"author":{"gitId":"jushg"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"justinfidelis":6,"jushg":9,"EricBryann":4}},{"path":"src/main/java/medbot/command/personcommand/patientcommand/UnarchivePatientCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"EricBryann"},"content":"package medbot.command.personcommand.patientcommand;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"EricBryann"},"content":"import medbot.Scheduler;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"EricBryann"},"content":"import medbot.command.personcommand.UnarchivePersonCommand;","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"EricBryann"},"content":"import medbot.exceptions.MedBotException;","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"EricBryann"},"content":"import medbot.ui.Ui;","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"EricBryann"},"content":"import medbot.utilities.ViewType;","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"EricBryann"},"content":"public class UnarchivePatientCommand extends UnarchivePersonCommand {","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"EricBryann"},"content":"    public UnarchivePatientCommand(int patientId) {","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"EricBryann"},"content":"        super(patientId);","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"EricBryann"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"EricBryann"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"EricBryann"},"content":"    public void execute(Scheduler scheduler, Ui ui) throws MedBotException {","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"EricBryann"},"content":"        scheduler.unarchivePatient(personId);","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"EricBryann"},"content":"        String unarchivePatientMessage \u003d Ui.getUnarchivePersonMessage(personId, ViewType.PATIENT_INFO);","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"EricBryann"},"content":"        ui.printOutput(unarchivePatientMessage);","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"EricBryann"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"EricBryann"},"content":"}","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"EricBryann":20}},{"path":"src/main/java/medbot/command/personcommand/patientcommand/ViewPatientCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"justinfidelis"},"content":"package medbot.command.personcommand.patientcommand;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"justinfidelis"},"content":"import medbot.Scheduler;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"justinfidelis"},"content":"import medbot.command.personcommand.ViewPersonCommand;","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"jushg"},"content":"import medbot.exceptions.MedBotException;","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"jushg"},"content":"import medbot.ui.PatientUi;","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"jushg"},"content":"import medbot.ui.Ui;","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"justinfidelis"},"content":"public class ViewPatientCommand extends ViewPersonCommand {","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"jushg"},"content":"    public ViewPatientCommand(int patientId) {","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"jushg"},"content":"        super(patientId);","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"jushg"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"jushg"},"content":"    @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"justinfidelis"},"content":"    public void execute(Scheduler scheduler, Ui ui) throws MedBotException {","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"justinfidelis"},"content":"        String patientInfo \u003d scheduler.getPatientInfo(personId);","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"jushg"},"content":"        String viewPatientMessage \u003d PatientUi.getPatientInfo(patientInfo);","lastModifiedDate":"2021-10-22"},{"lineNumber":19,"author":{"gitId":"justinfidelis"},"content":"        ui.printOutput(viewPatientMessage);","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"jushg"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"jushg"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"justinfidelis":7,"jushg":14}},{"path":"src/main/java/medbot/command/personcommand/staffcommand/AddStaffCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"justinfidelis"},"content":"package medbot.command.personcommand.staffcommand;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"justinfidelis"},"content":"import medbot.Scheduler;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"jushg"},"content":"import medbot.ui.Ui;","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"justinfidelis"},"content":"import medbot.command.personcommand.AddPersonCommand;","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"justinfidelis"},"content":"import medbot.exceptions.MedBotException;","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"jushg"},"content":"import medbot.person.Staff;","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"jushg"},"content":"import medbot.utilities.ViewType;","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"justinfidelis"},"content":"public class AddStaffCommand extends AddPersonCommand {","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"jushg"},"content":"    public AddStaffCommand(Staff staff) {","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"jushg"},"content":"        super(staff);","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"jushg"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"jushg"},"content":"    @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"justinfidelis"},"content":"    public void execute(Scheduler scheduler, Ui ui) throws MedBotException {","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"justinfidelis"},"content":"        int staffId \u003d scheduler.addStaff(person);","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"jushg"},"content":"        String addStaffMessage \u003d ui.getAddMessage(staffId, ViewType.MEDICAL_STAFF_INFO);","lastModifiedDate":"2021-10-22"},{"lineNumber":19,"author":{"gitId":"justinfidelis"},"content":"        ui.printOutput(addStaffMessage);","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"jushg"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"jushg"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"justinfidelis":8,"jushg":13}},{"path":"src/main/java/medbot/command/personcommand/staffcommand/ArchiveStaffCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"EricBryann"},"content":"package medbot.command.personcommand.staffcommand;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"EricBryann"},"content":"import medbot.Scheduler;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"EricBryann"},"content":"import medbot.command.personcommand.ArchivePersonCommand;","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"EricBryann"},"content":"import medbot.exceptions.MedBotException;","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"EricBryann"},"content":"import medbot.ui.Ui;","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"EricBryann"},"content":"import medbot.utilities.ViewType;","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"EricBryann"},"content":"public class ArchiveStaffCommand extends ArchivePersonCommand {","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"EricBryann"},"content":"    public ArchiveStaffCommand(int staffId) {","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"EricBryann"},"content":"        super(staffId);","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"EricBryann"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"EricBryann"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"EricBryann"},"content":"    public void execute(Scheduler scheduler, Ui ui) throws MedBotException {","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"EricBryann"},"content":"        scheduler.archiveStaff(personId);","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"EricBryann"},"content":"        String archiveStaffMessage \u003d Ui.getArchivePersonMessage(personId, ViewType.MEDICAL_STAFF_INFO);","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"EricBryann"},"content":"        ui.printOutput(archiveStaffMessage);","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"EricBryann"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"EricBryann"},"content":"}","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"EricBryann":20}},{"path":"src/main/java/medbot/command/personcommand/staffcommand/DeleteStaffCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"justinfidelis"},"content":"package medbot.command.personcommand.staffcommand;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"justinfidelis"},"content":"import medbot.Scheduler;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"jushg"},"content":"import medbot.ui.Ui;","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"justinfidelis"},"content":"import medbot.command.personcommand.DeletePersonCommand;","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"jushg"},"content":"import medbot.exceptions.MedBotException;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"jushg"},"content":"import medbot.utilities.ViewType;","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"justinfidelis"},"content":"public class DeleteStaffCommand extends DeletePersonCommand {","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"jushg"},"content":"    public DeleteStaffCommand(int staffId) {","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"jushg"},"content":"        super(staffId);","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"jushg"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"jushg"},"content":"    @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"justinfidelis"},"content":"    public void execute(Scheduler scheduler, Ui ui) throws MedBotException {","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"justinfidelis"},"content":"        scheduler.deleteStaff(personId);","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"jushg"},"content":"        String deleteStaffMessage \u003d Ui.getDeleteMessage(personId, ViewType.MEDICAL_STAFF_INFO);","lastModifiedDate":"2021-10-22"},{"lineNumber":18,"author":{"gitId":"justinfidelis"},"content":"        ui.printOutput(deleteStaffMessage);","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"jushg"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"jushg"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"justinfidelis":7,"jushg":13}},{"path":"src/main/java/medbot/command/personcommand/staffcommand/EditStaffCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"justinfidelis"},"content":"package medbot.command.personcommand.staffcommand;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"justinfidelis"},"content":"import medbot.Scheduler;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"jushg"},"content":"import medbot.ui.Ui;","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"justinfidelis"},"content":"import medbot.command.personcommand.EditPersonCommand;","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"jushg"},"content":"import medbot.exceptions.MedBotException;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"jushg"},"content":"import medbot.person.Staff;","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"jushg"},"content":"import medbot.utilities.ViewType;","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"justinfidelis"},"content":"public class EditStaffCommand extends EditPersonCommand {","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"jushg"},"content":"    public EditStaffCommand(int staffId, Staff staff) {","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"jushg"},"content":"        super(staffId, staff);","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"jushg"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"jushg"},"content":"    @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"justinfidelis"},"content":"    public void execute(Scheduler scheduler, Ui ui) throws MedBotException {","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"justinfidelis"},"content":"        scheduler.editStaff(personId, person);","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"justinfidelis"},"content":"        String staffInfo \u003d scheduler.getStaffInfo(personId);","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"jushg"},"content":"        String editStaffMessage \u003d Ui.getEditMessage(personId, staffInfo, ViewType.MEDICAL_STAFF_INFO);","lastModifiedDate":"2021-10-22"},{"lineNumber":20,"author":{"gitId":"justinfidelis"},"content":"        ui.printOutput(editStaffMessage);","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"jushg"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"jushg"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"justinfidelis":8,"jushg":14}},{"path":"src/main/java/medbot/command/personcommand/staffcommand/FindStaffCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"justinfidelis"},"content":"package medbot.command.personcommand.staffcommand;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"justinfidelis"},"content":"import medbot.Scheduler;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"jushg"},"content":"import medbot.ui.Ui;","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"justinfidelis"},"content":"import medbot.command.personcommand.FindPersonCommand;","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"jushg"},"content":"import medbot.exceptions.MedBotException;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"jushg"},"content":"import medbot.utilities.ViewType;","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"jushg"},"content":"import java.util.List;","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"justinfidelis"},"content":"public class FindStaffCommand extends FindPersonCommand {","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"EricBryann"},"content":"    public FindStaffCommand(String[] parameters) {","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"EricBryann"},"content":"        super(parameters);","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"EricBryann"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"jushg"},"content":"    @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"justinfidelis"},"content":"    public void execute(Scheduler scheduler, Ui ui) throws MedBotException {","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"justinfidelis"},"content":"        List\u003cString\u003e staffs \u003d scheduler.findStaff(parameters);","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"justinfidelis"},"content":"        String findStaffMessage \u003d Ui.getFindPersonsMessage(staffs, ViewType.MEDICAL_STAFF_INFO);","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"justinfidelis"},"content":"        ui.printOutput(findStaffMessage);","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"jushg"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"EricBryann"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"justinfidelis":8,"jushg":8,"EricBryann":6}},{"path":"src/main/java/medbot/command/personcommand/staffcommand/ListStaffCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"justinfidelis"},"content":"package medbot.command.personcommand.staffcommand;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"justinfidelis"},"content":"import medbot.Scheduler;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"jushg"},"content":"import medbot.ui.StaffUi;","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"jushg"},"content":"import medbot.ui.Ui;","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"justinfidelis"},"content":"import medbot.command.personcommand.ListPersonCommand;","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"justinfidelis"},"content":"public class ListStaffCommand extends ListPersonCommand {","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"EricBryann"},"content":"    public ListStaffCommand(boolean getArchived) {","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"EricBryann"},"content":"        super(getArchived);","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"EricBryann"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"jushg"},"content":"    @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"justinfidelis"},"content":"    public void execute(Scheduler scheduler, Ui ui) {","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"EricBryann"},"content":"        String allStaffString \u003d StaffUi.getAllStaffsString(scheduler.listStaff(getArchived()));","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"justinfidelis"},"content":"        ui.printOutput(allStaffString);","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"jushg"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"jushg"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"justinfidelis":6,"jushg":8,"EricBryann":4}},{"path":"src/main/java/medbot/command/personcommand/staffcommand/UnarchiveStaffCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"EricBryann"},"content":"package medbot.command.personcommand.staffcommand;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"EricBryann"},"content":"import medbot.Scheduler;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"EricBryann"},"content":"import medbot.command.personcommand.UnarchivePersonCommand;","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"EricBryann"},"content":"import medbot.exceptions.MedBotException;","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"EricBryann"},"content":"import medbot.ui.Ui;","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"EricBryann"},"content":"import medbot.utilities.ViewType;","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"EricBryann"},"content":"public class UnarchiveStaffCommand extends UnarchivePersonCommand {","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"EricBryann"},"content":"    public UnarchiveStaffCommand(int patientId) {","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"EricBryann"},"content":"        super(patientId);","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"EricBryann"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"EricBryann"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"EricBryann"},"content":"    public void execute(Scheduler scheduler, Ui ui) throws MedBotException {","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"EricBryann"},"content":"        scheduler.unarchiveStaff(personId);","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"EricBryann"},"content":"        String unarchiveStaffMessage \u003d Ui.getUnarchivePersonMessage(personId, ViewType.PATIENT_INFO);","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"EricBryann"},"content":"        ui.printOutput(unarchiveStaffMessage);","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"EricBryann"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"EricBryann"},"content":"}","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"EricBryann":20}},{"path":"src/main/java/medbot/command/personcommand/staffcommand/ViewStaffCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"justinfidelis"},"content":"package medbot.command.personcommand.staffcommand;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"justinfidelis"},"content":"import medbot.Scheduler;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"jushg"},"content":"import medbot.ui.StaffUi;","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"jushg"},"content":"import medbot.ui.Ui;","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"justinfidelis"},"content":"import medbot.command.personcommand.ViewPersonCommand;","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"jushg"},"content":"import medbot.exceptions.MedBotException;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"justinfidelis"},"content":"public class ViewStaffCommand extends ViewPersonCommand {","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"jushg"},"content":"    public ViewStaffCommand(int staffId) {","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"jushg"},"content":"        super(staffId);","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"jushg"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"jushg"},"content":"    @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"justinfidelis"},"content":"    public void execute(Scheduler scheduler, Ui ui) throws MedBotException {","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"justinfidelis"},"content":"        String staffInfo \u003d scheduler.getStaffInfo(personId);","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"jushg"},"content":"        String viewStaffMessage \u003d StaffUi.getStaffInfo(staffInfo);","lastModifiedDate":"2021-10-22"},{"lineNumber":18,"author":{"gitId":"justinfidelis"},"content":"        ui.printOutput(viewStaffMessage);","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"jushg"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"jushg"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"justinfidelis":7,"jushg":13}},{"path":"src/main/java/medbot/exceptions/MedBotException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"justinfidelis"},"content":"package medbot.exceptions;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":3,"author":{"gitId":"justinfidelis"},"content":"public class MedBotException extends Exception {","lastModifiedDate":"2021-09-30"},{"lineNumber":4,"author":{"gitId":"justinfidelis"},"content":"    public MedBotException(String message) {","lastModifiedDate":"2021-09-30"},{"lineNumber":5,"author":{"gitId":"justinfidelis"},"content":"        super(message);","lastModifiedDate":"2021-09-30"},{"lineNumber":6,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":7,"author":{"gitId":"justinfidelis"},"content":"}","lastModifiedDate":"2021-09-30"}],"authorContributionMap":{"justinfidelis":7}},{"path":"src/main/java/medbot/exceptions/MedBotParserException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"justinfidelis"},"content":"package medbot.exceptions;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"justinfidelis"},"content":"public class MedBotParserException extends MedBotException {","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"justinfidelis"},"content":"    public MedBotParserException(String message) {","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"justinfidelis"},"content":"        super(message);","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"justinfidelis"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"justinfidelis":7}},{"path":"src/main/java/medbot/list/ListItem.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"CrimsonTitan79"},"content":"package medbot.list;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"CrimsonTitan79"},"content":"public class ListItem {","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"CrimsonTitan79"},"content":"    public int getId() {","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"CrimsonTitan79"},"content":"        return 0;","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"CrimsonTitan79"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"CrimsonTitan79"},"content":"    public void setId(int id) {","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"CrimsonTitan79"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"CrimsonTitan79"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"CrimsonTitan79"},"content":"     * Return \"X\" if parameter \u003d\u003d null || parameter.isBlank(), otherwise return parameter itself","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"CrimsonTitan79"},"content":"     *","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"CrimsonTitan79"},"content":"     * @param parameter an attribute of a person","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"CrimsonTitan79"},"content":"     * @return \"X\" if parameter \u003d\u003d null || parameter.isBlank(), otherwise return parameter itself","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"CrimsonTitan79"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"CrimsonTitan79"},"content":"    protected String setAsStorageParameterOrNull(String parameter) {","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"CrimsonTitan79"},"content":"        return (parameter \u003d\u003d null || parameter.isBlank()) ? \"X\" : parameter;","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"CrimsonTitan79"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"CrimsonTitan79"},"content":"}","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"CrimsonTitan79":23}},{"path":"src/main/java/medbot/list/ListItemType.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"CrimsonTitan79"},"content":"package medbot.list;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"CrimsonTitan79"},"content":"public enum ListItemType {","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"CrimsonTitan79"},"content":"    STAFF, PATIENT, APPOINTMENT","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"CrimsonTitan79"},"content":"}","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"CrimsonTitan79":5}},{"path":"src/main/java/medbot/list/MedBotList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"CrimsonTitan79"},"content":"package medbot.list;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"CrimsonTitan79"},"content":"public abstract class MedBotList {","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"CrimsonTitan79"},"content":"    public String getStorageString() {","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"CrimsonTitan79"},"content":"        return \"\";","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"CrimsonTitan79"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"CrimsonTitan79"},"content":"    public void addListItemFromStorage(ListItem listItem) {","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"CrimsonTitan79"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"CrimsonTitan79"},"content":"    public void setLastId(int lastId) {","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"CrimsonTitan79"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"CrimsonTitan79"},"content":"    public int getLastId() {","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"CrimsonTitan79"},"content":"        return 0;","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"CrimsonTitan79"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"CrimsonTitan79"},"content":"}","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"CrimsonTitan79":23}},{"path":"src/main/java/medbot/list/MedicalStaffList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jushg"},"content":"package medbot.list;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"justinfidelis"},"content":"import static medbot.ui.Ui.END_LINE;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"jushg"},"content":"public class MedicalStaffList extends PersonList {","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"justinfidelis"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"EricBryann"},"content":"    protected String getPersonNotFoundErrorMessage(int staffId) {","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"EricBryann"},"content":"        return \"No Staff with ID \" + staffId + \" found.\" + END_LINE;","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"EricBryann"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"EricBryann"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"EricBryann"},"content":"    protected String getAlreadyArchivedErrorMessage(int staffId) {","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"EricBryann"},"content":"        return \"The staff with ID \" + staffId + \" is already archived.\" + END_LINE;","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"jushg"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":17,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"EricBryann"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"EricBryann"},"content":"    protected String getAlreadyUnarchivedErrorMessage(int staffId) {","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"EricBryann"},"content":"        return \"The staff with ID \" + staffId + \" is already unarchived.\" + END_LINE;","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"jushg"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"jushg"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"justinfidelis":2,"CrimsonTitan79":1,"jushg":8,"EricBryann":11}},{"path":"src/main/java/medbot/list/PatientList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jushg"},"content":"package medbot.list;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":3,"author":{"gitId":"justinfidelis"},"content":"import static medbot.ui.Ui.END_LINE;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"Kureans"},"content":"public class PatientList extends PersonList {","lastModifiedDate":"2021-10-16"},{"lineNumber":6,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":7,"author":{"gitId":"justinfidelis"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"justinfidelis"},"content":"    protected String getPersonNotFoundErrorMessage(int patientId) {","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"justinfidelis"},"content":"        return \"No Patient with ID \" + patientId + \" found.\" + END_LINE;","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"Kureans"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":12,"author":{"gitId":"EricBryann"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"EricBryann"},"content":"    protected String getAlreadyArchivedErrorMessage(int patientId) {","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"EricBryann"},"content":"        return \"The patient with ID \" + patientId + \" is already archived.\" + END_LINE;","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"EricBryann"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"EricBryann"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"EricBryann"},"content":"    protected String getAlreadyUnarchivedErrorMessage(int patientId) {","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"EricBryann"},"content":"        return \"The patient with ID \" + patientId + \" is already unarchived.\" + END_LINE;","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"EricBryann"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"justinfidelis"},"content":"}","lastModifiedDate":"2021-09-30"}],"authorContributionMap":{"justinfidelis":7,"jushg":1,"EricBryann":11,"Kureans":3}},{"path":"src/main/java/medbot/list/PersonList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jushg"},"content":"package medbot.list;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":3,"author":{"gitId":"justinfidelis"},"content":"import java.util.LinkedList;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"justinfidelis"},"content":"import medbot.Appointment;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"justinfidelis"},"content":"import medbot.exceptions.MedBotException;","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"Kureans"},"content":"import medbot.person.Person;","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"Kureans"},"content":"import medbot.utilities.FilterType;","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":9,"author":{"gitId":"EricBryann"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"Kureans"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"EricBryann"},"content":"import java.util.List;","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"jushg"},"content":"import static medbot.ui.Ui.END_LINE;","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"CrimsonTitan79"},"content":"public abstract class PersonList extends MedBotList {","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"CrimsonTitan79"},"content":"    private final HashMap\u003cInteger, Person\u003e persons \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"justinfidelis"},"content":"    private int lastId \u003d 0;","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":21,"author":{"gitId":"Kureans"},"content":"    public int size() {","lastModifiedDate":"2021-10-16"},{"lineNumber":22,"author":{"gitId":"Kureans"},"content":"        return persons.size();","lastModifiedDate":"2021-10-16"},{"lineNumber":23,"author":{"gitId":"Kureans"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":24,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":25,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"justinfidelis"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"justinfidelis"},"content":"     * Adds the given person into the person list, allocates an id to the person and returns the id value.","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"justinfidelis"},"content":"     *","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"justinfidelis"},"content":"     * @param person Person to be added into the list","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"justinfidelis"},"content":"     * @return personId that was allocated to the person","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"justinfidelis"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"Kureans"},"content":"    public int addPerson(Person person) {","lastModifiedDate":"2021-10-16"},{"lineNumber":33,"author":{"gitId":"Kureans"},"content":"        int personId \u003d generatePersonId();","lastModifiedDate":"2021-10-16"},{"lineNumber":34,"author":{"gitId":"Kureans"},"content":"        person.setPersonId(personId);","lastModifiedDate":"2021-10-16"},{"lineNumber":35,"author":{"gitId":"Kureans"},"content":"        persons.put(personId, person);","lastModifiedDate":"2021-10-16"},{"lineNumber":36,"author":{"gitId":"Kureans"},"content":"        return personId;","lastModifiedDate":"2021-10-16"},{"lineNumber":37,"author":{"gitId":"Kureans"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":38,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":39,"author":{"gitId":"justinfidelis"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":40,"author":{"gitId":"justinfidelis"},"content":"     * Generates a non-random but unique id to be allocated to a person.","lastModifiedDate":"2021-10-24"},{"lineNumber":41,"author":{"gitId":"justinfidelis"},"content":"     *","lastModifiedDate":"2021-10-24"},{"lineNumber":42,"author":{"gitId":"justinfidelis"},"content":"     * @return a unique id to be allocated to a person","lastModifiedDate":"2021-10-24"},{"lineNumber":43,"author":{"gitId":"justinfidelis"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":44,"author":{"gitId":"justinfidelis"},"content":"    private int generatePersonId() {","lastModifiedDate":"2021-10-24"},{"lineNumber":45,"author":{"gitId":"justinfidelis"},"content":"        do {","lastModifiedDate":"2021-10-25"},{"lineNumber":46,"author":{"gitId":"justinfidelis"},"content":"            lastId++;","lastModifiedDate":"2021-10-24"},{"lineNumber":47,"author":{"gitId":"justinfidelis"},"content":"        } while (persons.containsKey(lastId));","lastModifiedDate":"2021-10-25"},{"lineNumber":48,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":49,"author":{"gitId":"justinfidelis"},"content":"        return lastId;","lastModifiedDate":"2021-10-24"},{"lineNumber":50,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":51,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":52,"author":{"gitId":"justinfidelis"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":53,"author":{"gitId":"justinfidelis"},"content":"     * Returns a String containing the information of the person with the specified personId.","lastModifiedDate":"2021-10-26"},{"lineNumber":54,"author":{"gitId":"justinfidelis"},"content":"     *","lastModifiedDate":"2021-10-26"},{"lineNumber":55,"author":{"gitId":"justinfidelis"},"content":"     * @param personId the id of the person to search for","lastModifiedDate":"2021-10-26"},{"lineNumber":56,"author":{"gitId":"justinfidelis"},"content":"     * @return a String containing the person\u0027s information","lastModifiedDate":"2021-10-26"},{"lineNumber":57,"author":{"gitId":"justinfidelis"},"content":"     * @throws MedBotException if there is no person with that id","lastModifiedDate":"2021-10-26"},{"lineNumber":58,"author":{"gitId":"justinfidelis"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":59,"author":{"gitId":"justinfidelis"},"content":"    public String getPersonName(int personId) throws MedBotException {","lastModifiedDate":"2021-10-26"},{"lineNumber":60,"author":{"gitId":"justinfidelis"},"content":"        checkPersonExists(personId);","lastModifiedDate":"2021-10-26"},{"lineNumber":61,"author":{"gitId":"justinfidelis"},"content":"        return persons.get(personId).getName();","lastModifiedDate":"2021-10-26"},{"lineNumber":62,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":63,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":64,"author":{"gitId":"justinfidelis"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":65,"author":{"gitId":"justinfidelis"},"content":"     * Returns a String containing the information of the person with the specified personId.","lastModifiedDate":"2021-10-24"},{"lineNumber":66,"author":{"gitId":"justinfidelis"},"content":"     *","lastModifiedDate":"2021-10-24"},{"lineNumber":67,"author":{"gitId":"justinfidelis"},"content":"     * @param personId the id of the person to search for","lastModifiedDate":"2021-10-24"},{"lineNumber":68,"author":{"gitId":"justinfidelis"},"content":"     * @return a String containing the person\u0027s information","lastModifiedDate":"2021-10-24"},{"lineNumber":69,"author":{"gitId":"justinfidelis"},"content":"     * @throws MedBotException if there is no person with that id","lastModifiedDate":"2021-10-24"},{"lineNumber":70,"author":{"gitId":"justinfidelis"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":71,"author":{"gitId":"Kureans"},"content":"    public String getPersonInfo(int personId) throws MedBotException {","lastModifiedDate":"2021-10-16"},{"lineNumber":72,"author":{"gitId":"justinfidelis"},"content":"        checkPersonExists(personId);","lastModifiedDate":"2021-10-25"},{"lineNumber":73,"author":{"gitId":"Kureans"},"content":"        return persons.get(personId).toString();","lastModifiedDate":"2021-10-16"},{"lineNumber":74,"author":{"gitId":"Kureans"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":75,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":76,"author":{"gitId":"justinfidelis"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":77,"author":{"gitId":"justinfidelis"},"content":"     * Edits the specified fields on Person information with new values from the user.","lastModifiedDate":"2021-10-24"},{"lineNumber":78,"author":{"gitId":"justinfidelis"},"content":"     *","lastModifiedDate":"2021-10-24"},{"lineNumber":79,"author":{"gitId":"justinfidelis"},"content":"     * @param personId      The Person with information to change","lastModifiedDate":"2021-10-24"},{"lineNumber":80,"author":{"gitId":"justinfidelis"},"content":"     * @param newPersonData the new Person data to change to (except the null fields)","lastModifiedDate":"2021-10-24"},{"lineNumber":81,"author":{"gitId":"justinfidelis"},"content":"     * @throws MedBotException when the Person ID cannot be found","lastModifiedDate":"2021-10-24"},{"lineNumber":82,"author":{"gitId":"justinfidelis"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":83,"author":{"gitId":"justinfidelis"},"content":"    public void editPerson(int personId, Person newPersonData) throws MedBotException {","lastModifiedDate":"2021-10-24"},{"lineNumber":84,"author":{"gitId":"justinfidelis"},"content":"        checkPersonExists(personId);","lastModifiedDate":"2021-10-25"},{"lineNumber":85,"author":{"gitId":"justinfidelis"},"content":"        assert (personId \u003e 0);","lastModifiedDate":"2021-10-24"},{"lineNumber":86,"author":{"gitId":"justinfidelis"},"content":"        mergeEditPersonData(persons.get(personId), newPersonData);","lastModifiedDate":"2021-10-24"},{"lineNumber":87,"author":{"gitId":"Kureans"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":88,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":89,"author":{"gitId":"Kureans"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":90,"author":{"gitId":"Kureans"},"content":"     * Replaces all values of the Person data that is non-null in the new inputted data.","lastModifiedDate":"2021-10-16"},{"lineNumber":91,"author":{"gitId":"Kureans"},"content":"     *","lastModifiedDate":"2021-10-16"},{"lineNumber":92,"author":{"gitId":"Kureans"},"content":"     * @param oldPersonData the old Person data in the system","lastModifiedDate":"2021-10-16"},{"lineNumber":93,"author":{"gitId":"Kureans"},"content":"     * @param newPersonData the new Person data inputted by the user","lastModifiedDate":"2021-10-16"},{"lineNumber":94,"author":{"gitId":"Kureans"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":95,"author":{"gitId":"Kureans"},"content":"    private void mergeEditPersonData(Person oldPersonData, Person newPersonData) {","lastModifiedDate":"2021-10-16"},{"lineNumber":96,"author":{"gitId":"Kureans"},"content":"        if (newPersonData.getName() !\u003d null) {","lastModifiedDate":"2021-10-16"},{"lineNumber":97,"author":{"gitId":"Kureans"},"content":"            oldPersonData.setName(newPersonData.getName());","lastModifiedDate":"2021-10-16"},{"lineNumber":98,"author":{"gitId":"Kureans"},"content":"        }","lastModifiedDate":"2021-10-16"},{"lineNumber":99,"author":{"gitId":"Kureans"},"content":"        if (newPersonData.getIcNumber() !\u003d null) {","lastModifiedDate":"2021-10-16"},{"lineNumber":100,"author":{"gitId":"Kureans"},"content":"            oldPersonData.setIcNumber(newPersonData.getIcNumber());","lastModifiedDate":"2021-10-16"},{"lineNumber":101,"author":{"gitId":"Kureans"},"content":"        }","lastModifiedDate":"2021-10-16"},{"lineNumber":102,"author":{"gitId":"Kureans"},"content":"        if (newPersonData.getEmailAddress() !\u003d null) {","lastModifiedDate":"2021-10-16"},{"lineNumber":103,"author":{"gitId":"Kureans"},"content":"            oldPersonData.setEmailAddress(newPersonData.getEmailAddress());","lastModifiedDate":"2021-10-16"},{"lineNumber":104,"author":{"gitId":"Kureans"},"content":"        }","lastModifiedDate":"2021-10-16"},{"lineNumber":105,"author":{"gitId":"Kureans"},"content":"        if (newPersonData.getPhoneNumber() !\u003d null) {","lastModifiedDate":"2021-10-16"},{"lineNumber":106,"author":{"gitId":"Kureans"},"content":"            oldPersonData.setPhoneNumber(newPersonData.getPhoneNumber());","lastModifiedDate":"2021-10-16"},{"lineNumber":107,"author":{"gitId":"Kureans"},"content":"        }","lastModifiedDate":"2021-10-16"},{"lineNumber":108,"author":{"gitId":"Kureans"},"content":"        if (newPersonData.getResidentialAddress() !\u003d null) {","lastModifiedDate":"2021-10-16"},{"lineNumber":109,"author":{"gitId":"Kureans"},"content":"            oldPersonData.setResidentialAddress(newPersonData.getResidentialAddress());","lastModifiedDate":"2021-10-16"},{"lineNumber":110,"author":{"gitId":"Kureans"},"content":"        }","lastModifiedDate":"2021-10-16"},{"lineNumber":111,"author":{"gitId":"Kureans"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":112,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":113,"author":{"gitId":"Kureans"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":114,"author":{"gitId":"Kureans"},"content":"     * Deletes the specified Person.","lastModifiedDate":"2021-10-16"},{"lineNumber":115,"author":{"gitId":"Kureans"},"content":"     *","lastModifiedDate":"2021-10-16"},{"lineNumber":116,"author":{"gitId":"Kureans"},"content":"     * @param personId The Person to delete.","lastModifiedDate":"2021-10-16"},{"lineNumber":117,"author":{"gitId":"Kureans"},"content":"     * @throws MedBotException when the Person ID cannot be found.","lastModifiedDate":"2021-10-16"},{"lineNumber":118,"author":{"gitId":"Kureans"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":119,"author":{"gitId":"Kureans"},"content":"    public void deletePerson(int personId) throws MedBotException {","lastModifiedDate":"2021-10-16"},{"lineNumber":120,"author":{"gitId":"justinfidelis"},"content":"        checkPersonExists(personId);","lastModifiedDate":"2021-10-25"},{"lineNumber":121,"author":{"gitId":"EricBryann"},"content":"        assert (personId \u003e 0);","lastModifiedDate":"2021-10-19"},{"lineNumber":122,"author":{"gitId":"Kureans"},"content":"        persons.remove(personId);","lastModifiedDate":"2021-10-16"},{"lineNumber":123,"author":{"gitId":"Kureans"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":124,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":125,"author":{"gitId":"EricBryann"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":126,"author":{"gitId":"EricBryann"},"content":"     * Filters persons in the list based on specified attributes.","lastModifiedDate":"2021-10-19"},{"lineNumber":127,"author":{"gitId":"EricBryann"},"content":"     *","lastModifiedDate":"2021-10-19"},{"lineNumber":128,"author":{"gitId":"EricBryann"},"content":"     * @param parameters The attributes to filter persons.","lastModifiedDate":"2021-10-19"},{"lineNumber":129,"author":{"gitId":"EricBryann"},"content":"     * @return The filtered persons.","lastModifiedDate":"2021-10-19"},{"lineNumber":130,"author":{"gitId":"EricBryann"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":131,"author":{"gitId":"EricBryann"},"content":"    public List\u003cString\u003e findPersons(String[] parameters) {","lastModifiedDate":"2021-10-19"},{"lineNumber":132,"author":{"gitId":"EricBryann"},"content":"        List\u003cString\u003e filteredPersons \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-19"},{"lineNumber":133,"author":{"gitId":"EricBryann"},"content":"        for (int key : persons.keySet()) {","lastModifiedDate":"2021-10-19"},{"lineNumber":134,"author":{"gitId":"EricBryann"},"content":"            Person currentPerson \u003d persons.get(key);","lastModifiedDate":"2021-10-19"},{"lineNumber":135,"author":{"gitId":"EricBryann"},"content":"            if (currentPerson.containsAllParameters(parameters)) {","lastModifiedDate":"2021-10-19"},{"lineNumber":136,"author":{"gitId":"EricBryann"},"content":"                filteredPersons.add(currentPerson.getInfoInTableFormat());","lastModifiedDate":"2021-10-19"},{"lineNumber":137,"author":{"gitId":"EricBryann"},"content":"            }","lastModifiedDate":"2021-10-19"},{"lineNumber":138,"author":{"gitId":"EricBryann"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":139,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":140,"author":{"gitId":"EricBryann"},"content":"        return filteredPersons;","lastModifiedDate":"2021-10-19"},{"lineNumber":141,"author":{"gitId":"EricBryann"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":142,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":143,"author":{"gitId":"Kureans"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":144,"author":{"gitId":"EricBryann"},"content":"     * Returns a String that contains information of all archived or unarchived persons.","lastModifiedDate":"2021-10-25"},{"lineNumber":145,"author":{"gitId":"Kureans"},"content":"     *","lastModifiedDate":"2021-10-16"},{"lineNumber":146,"author":{"gitId":"EricBryann"},"content":"     * @param getArchivedPersons The boolean to indicate whether to get archived or unarchived persons.","lastModifiedDate":"2021-10-25"},{"lineNumber":147,"author":{"gitId":"EricBryann"},"content":"     * @return String that contains information of all archived or unarchived persons","lastModifiedDate":"2021-10-25"},{"lineNumber":148,"author":{"gitId":"Kureans"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":149,"author":{"gitId":"EricBryann"},"content":"    public String listPersons(boolean getArchivedPersons) {","lastModifiedDate":"2021-10-25"},{"lineNumber":150,"author":{"gitId":"Kureans"},"content":"        String output \u003d \"\";","lastModifiedDate":"2021-10-16"},{"lineNumber":151,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":152,"author":{"gitId":"Kureans"},"content":"        for (int key : persons.keySet()) {","lastModifiedDate":"2021-10-16"},{"lineNumber":153,"author":{"gitId":"EricBryann"},"content":"            if (persons.get(key).isArchived() \u003d\u003d getArchivedPersons) {","lastModifiedDate":"2021-10-25"},{"lineNumber":154,"author":{"gitId":"jushg"},"content":"                output +\u003d persons.get(key).getInfoInTableFormat() + END_LINE;","lastModifiedDate":"2021-10-22"},{"lineNumber":155,"author":{"gitId":"Kureans"},"content":"            }","lastModifiedDate":"2021-10-16"},{"lineNumber":156,"author":{"gitId":"EricBryann"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":157,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":158,"author":{"gitId":"Kureans"},"content":"        return output;","lastModifiedDate":"2021-10-16"},{"lineNumber":159,"author":{"gitId":"Kureans"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":160,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":161,"author":{"gitId":"EricBryann"},"content":"    public void archivePerson(int personId) throws MedBotException {","lastModifiedDate":"2021-10-25"},{"lineNumber":162,"author":{"gitId":"justinfidelis"},"content":"        checkPersonExists(personId);","lastModifiedDate":"2021-10-25"},{"lineNumber":163,"author":{"gitId":"EricBryann"},"content":"        if (persons.get(personId).isArchived()) {","lastModifiedDate":"2021-10-25"},{"lineNumber":164,"author":{"gitId":"EricBryann"},"content":"            throw new MedBotException(getAlreadyArchivedErrorMessage(personId));","lastModifiedDate":"2021-10-25"},{"lineNumber":165,"author":{"gitId":"justinfidelis"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":166,"author":{"gitId":"EricBryann"},"content":"        persons.get(personId).archive();","lastModifiedDate":"2021-10-25"},{"lineNumber":167,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":168,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":169,"author":{"gitId":"EricBryann"},"content":"    public void unarchivePerson(int personId) throws MedBotException {","lastModifiedDate":"2021-10-25"},{"lineNumber":170,"author":{"gitId":"justinfidelis"},"content":"        checkPersonExists(personId);","lastModifiedDate":"2021-10-25"},{"lineNumber":171,"author":{"gitId":"EricBryann"},"content":"        if (!persons.get(personId).isArchived()) {","lastModifiedDate":"2021-10-25"},{"lineNumber":172,"author":{"gitId":"EricBryann"},"content":"            throw new MedBotException(getAlreadyUnarchivedErrorMessage(personId));","lastModifiedDate":"2021-10-25"},{"lineNumber":173,"author":{"gitId":"EricBryann"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":174,"author":{"gitId":"EricBryann"},"content":"        persons.get(personId).unarchive();","lastModifiedDate":"2021-10-25"},{"lineNumber":175,"author":{"gitId":"EricBryann"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":176,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":177,"author":{"gitId":"justinfidelis"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":178,"author":{"gitId":"justinfidelis"},"content":"     * For the person with the specified personId, returns the appointmentId of the appointment at the specified","lastModifiedDate":"2021-10-24"},{"lineNumber":179,"author":{"gitId":"justinfidelis"},"content":"     * time code, or -1 if there is none.","lastModifiedDate":"2021-10-24"},{"lineNumber":180,"author":{"gitId":"justinfidelis"},"content":"     *","lastModifiedDate":"2021-10-24"},{"lineNumber":181,"author":{"gitId":"justinfidelis"},"content":"     * @param personId     the id of the person to search for","lastModifiedDate":"2021-10-24"},{"lineNumber":182,"author":{"gitId":"justinfidelis"},"content":"     * @param dateTimeCode the dateTimeCode to search for","lastModifiedDate":"2021-10-24"},{"lineNumber":183,"author":{"gitId":"justinfidelis"},"content":"     * @return the appointmentId of the appointment with that dateTimeCode, or -1 if there is none","lastModifiedDate":"2021-10-24"},{"lineNumber":184,"author":{"gitId":"justinfidelis"},"content":"     * @throws MedBotException if there is no person with the specified personId","lastModifiedDate":"2021-10-24"},{"lineNumber":185,"author":{"gitId":"justinfidelis"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":186,"author":{"gitId":"justinfidelis"},"content":"    public int getAppointmentId(int personId, int dateTimeCode) throws MedBotException {","lastModifiedDate":"2021-10-24"},{"lineNumber":187,"author":{"gitId":"justinfidelis"},"content":"        checkPersonExists(personId);","lastModifiedDate":"2021-10-25"},{"lineNumber":188,"author":{"gitId":"justinfidelis"},"content":"        return persons.get(personId).getAppointmentId(dateTimeCode);","lastModifiedDate":"2021-10-24"},{"lineNumber":189,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":190,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":191,"author":{"gitId":"justinfidelis"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":192,"author":{"gitId":"justinfidelis"},"content":"     * For the person with the specified personId, returns an LinkedList of the appointmentId of all appointments.","lastModifiedDate":"2021-10-25"},{"lineNumber":193,"author":{"gitId":"justinfidelis"},"content":"     *","lastModifiedDate":"2021-10-25"},{"lineNumber":194,"author":{"gitId":"justinfidelis"},"content":"     * @param personId the id of the person to search for","lastModifiedDate":"2021-10-25"},{"lineNumber":195,"author":{"gitId":"justinfidelis"},"content":"     * @return LinkedList of the appointmentId of all appointments for the specified person","lastModifiedDate":"2021-10-25"},{"lineNumber":196,"author":{"gitId":"justinfidelis"},"content":"     * @throws MedBotException if there is no person with the specified personId","lastModifiedDate":"2021-10-25"},{"lineNumber":197,"author":{"gitId":"justinfidelis"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":198,"author":{"gitId":"justinfidelis"},"content":"    public LinkedList\u003cInteger\u003e getAllAppointmentIds(int personId) throws MedBotException {","lastModifiedDate":"2021-10-25"},{"lineNumber":199,"author":{"gitId":"justinfidelis"},"content":"        checkPersonExists(personId);","lastModifiedDate":"2021-10-25"},{"lineNumber":200,"author":{"gitId":"justinfidelis"},"content":"        return persons.get(personId).getAllAppointmentIds();","lastModifiedDate":"2021-10-25"},{"lineNumber":201,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":202,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":203,"author":{"gitId":"justinfidelis"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":204,"author":{"gitId":"justinfidelis"},"content":"     * For the person with the specified personId, adds the appointment into their appointment list.","lastModifiedDate":"2021-10-24"},{"lineNumber":205,"author":{"gitId":"justinfidelis"},"content":"     *","lastModifiedDate":"2021-10-24"},{"lineNumber":206,"author":{"gitId":"justinfidelis"},"content":"     * @param personId    the id of the person to whom the appointment will be added","lastModifiedDate":"2021-10-24"},{"lineNumber":207,"author":{"gitId":"justinfidelis"},"content":"     * @param appointment the appointment to be added","lastModifiedDate":"2021-10-24"},{"lineNumber":208,"author":{"gitId":"justinfidelis"},"content":"     * @throws MedBotException if there is no person with the specified personId","lastModifiedDate":"2021-10-24"},{"lineNumber":209,"author":{"gitId":"justinfidelis"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":210,"author":{"gitId":"justinfidelis"},"content":"    public void addAppointment(int personId, Appointment appointment) throws MedBotException {","lastModifiedDate":"2021-10-24"},{"lineNumber":211,"author":{"gitId":"justinfidelis"},"content":"        checkPersonExists(personId);","lastModifiedDate":"2021-10-25"},{"lineNumber":212,"author":{"gitId":"justinfidelis"},"content":"        persons.get(personId).addAppointment(appointment);","lastModifiedDate":"2021-10-24"},{"lineNumber":213,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":214,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":215,"author":{"gitId":"justinfidelis"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":216,"author":{"gitId":"justinfidelis"},"content":"     * For the person with the specified personId, deletes the appointment with the specified dateTimeCode.","lastModifiedDate":"2021-10-24"},{"lineNumber":217,"author":{"gitId":"justinfidelis"},"content":"     *","lastModifiedDate":"2021-10-24"},{"lineNumber":218,"author":{"gitId":"justinfidelis"},"content":"     * @param personId     the id of the person whose appointment will be deleted","lastModifiedDate":"2021-10-24"},{"lineNumber":219,"author":{"gitId":"justinfidelis"},"content":"     * @param dateTimeCode the dateTimeCode of the appointment to be deleted","lastModifiedDate":"2021-10-24"},{"lineNumber":220,"author":{"gitId":"justinfidelis"},"content":"     * @throws MedBotException if there is no person with the specified personId, or if there is no appointment at","lastModifiedDate":"2021-10-24"},{"lineNumber":221,"author":{"gitId":"justinfidelis"},"content":"     *                         the specified dateTimeCode for that person","lastModifiedDate":"2021-10-24"},{"lineNumber":222,"author":{"gitId":"justinfidelis"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":223,"author":{"gitId":"justinfidelis"},"content":"    public void deleteAppointment(int personId, int dateTimeCode) throws MedBotException {","lastModifiedDate":"2021-10-24"},{"lineNumber":224,"author":{"gitId":"justinfidelis"},"content":"        checkPersonExists(personId);","lastModifiedDate":"2021-10-25"},{"lineNumber":225,"author":{"gitId":"justinfidelis"},"content":"        persons.get(personId).deleteAppointment(dateTimeCode);","lastModifiedDate":"2021-10-24"},{"lineNumber":226,"author":{"gitId":"Kureans"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":227,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":228,"author":{"gitId":"justinfidelis"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":229,"author":{"gitId":"justinfidelis"},"content":"     * Returns a List containing the appointmentIds of the appointments of the person with the specified personId.","lastModifiedDate":"2021-10-26"},{"lineNumber":230,"author":{"gitId":"justinfidelis"},"content":"     *","lastModifiedDate":"2021-10-24"},{"lineNumber":231,"author":{"gitId":"justinfidelis"},"content":"     * @param personId the id of the person whose appointments will be listed","lastModifiedDate":"2021-10-24"},{"lineNumber":232,"author":{"gitId":"justinfidelis"},"content":"     * @return a List of appointmentIds belonging to the specified person","lastModifiedDate":"2021-10-26"},{"lineNumber":233,"author":{"gitId":"justinfidelis"},"content":"     * @throws MedBotException if there is no person with the specified personId","lastModifiedDate":"2021-10-24"},{"lineNumber":234,"author":{"gitId":"justinfidelis"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":235,"author":{"gitId":"justinfidelis"},"content":"    public List\u003cInteger\u003e listAppointments(int personId, FilterType filterType, int dateTimeCode)","lastModifiedDate":"2021-10-26"},{"lineNumber":236,"author":{"gitId":"justinfidelis"},"content":"            throws MedBotException {","lastModifiedDate":"2021-10-26"},{"lineNumber":237,"author":{"gitId":"justinfidelis"},"content":"        checkPersonExists(personId);","lastModifiedDate":"2021-10-25"},{"lineNumber":238,"author":{"gitId":"justinfidelis"},"content":"        return persons.get(personId).listAppointments(filterType, dateTimeCode);","lastModifiedDate":"2021-10-25"},{"lineNumber":239,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":240,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":241,"author":{"gitId":"justinfidelis"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":242,"author":{"gitId":"justinfidelis"},"content":"     * Checks if a person with the specified id is present in the list.","lastModifiedDate":"2021-10-25"},{"lineNumber":243,"author":{"gitId":"justinfidelis"},"content":"     *","lastModifiedDate":"2021-10-25"},{"lineNumber":244,"author":{"gitId":"justinfidelis"},"content":"     * @param personId the id of the person to search for","lastModifiedDate":"2021-10-25"},{"lineNumber":245,"author":{"gitId":"justinfidelis"},"content":"     * @throws MedBotException if there is no person with the specified personId","lastModifiedDate":"2021-10-25"},{"lineNumber":246,"author":{"gitId":"justinfidelis"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":247,"author":{"gitId":"justinfidelis"},"content":"    private void checkPersonExists(int personId) throws MedBotException {","lastModifiedDate":"2021-10-25"},{"lineNumber":248,"author":{"gitId":"justinfidelis"},"content":"        if (!persons.containsKey(personId)) {","lastModifiedDate":"2021-10-24"},{"lineNumber":249,"author":{"gitId":"justinfidelis"},"content":"            throw new MedBotException(getPersonNotFoundErrorMessage(personId));","lastModifiedDate":"2021-10-24"},{"lineNumber":250,"author":{"gitId":"justinfidelis"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":251,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":252,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":253,"author":{"gitId":"justinfidelis"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":254,"author":{"gitId":"justinfidelis"},"content":"     * Generates the exception message for MedBotExceptions when no person with the specified id is found.","lastModifiedDate":"2021-10-24"},{"lineNumber":255,"author":{"gitId":"justinfidelis"},"content":"     *","lastModifiedDate":"2021-10-24"},{"lineNumber":256,"author":{"gitId":"justinfidelis"},"content":"     * \u003cp\u003eIs overrode by subclasses","lastModifiedDate":"2021-10-24"},{"lineNumber":257,"author":{"gitId":"justinfidelis"},"content":"     *","lastModifiedDate":"2021-10-24"},{"lineNumber":258,"author":{"gitId":"justinfidelis"},"content":"     * @param personId id of the person who was not found","lastModifiedDate":"2021-10-24"},{"lineNumber":259,"author":{"gitId":"justinfidelis"},"content":"     * @return exception message when no person with the specified id is found","lastModifiedDate":"2021-10-24"},{"lineNumber":260,"author":{"gitId":"justinfidelis"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":261,"author":{"gitId":"justinfidelis"},"content":"    protected abstract String getPersonNotFoundErrorMessage(int personId);","lastModifiedDate":"2021-10-24"},{"lineNumber":262,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":263,"author":{"gitId":"EricBryann"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":264,"author":{"gitId":"EricBryann"},"content":"     * Generates the exception message for MedBotExceptions when the person is already archived.","lastModifiedDate":"2021-10-25"},{"lineNumber":265,"author":{"gitId":"EricBryann"},"content":"     *","lastModifiedDate":"2021-10-25"},{"lineNumber":266,"author":{"gitId":"EricBryann"},"content":"     * \u003cp\u003eIs overrode by subclasses","lastModifiedDate":"2021-10-25"},{"lineNumber":267,"author":{"gitId":"EricBryann"},"content":"     *","lastModifiedDate":"2021-10-25"},{"lineNumber":268,"author":{"gitId":"EricBryann"},"content":"     * @param personId id of the person who is already archived","lastModifiedDate":"2021-10-25"},{"lineNumber":269,"author":{"gitId":"EricBryann"},"content":"     * @return exception message when the person is already archived","lastModifiedDate":"2021-10-25"},{"lineNumber":270,"author":{"gitId":"EricBryann"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":271,"author":{"gitId":"EricBryann"},"content":"    protected abstract String getAlreadyArchivedErrorMessage(int personId);","lastModifiedDate":"2021-10-25"},{"lineNumber":272,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":273,"author":{"gitId":"EricBryann"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":274,"author":{"gitId":"EricBryann"},"content":"     * Generates the exception message for MedBotExceptions when the person is already unarchived.","lastModifiedDate":"2021-10-25"},{"lineNumber":275,"author":{"gitId":"EricBryann"},"content":"     *","lastModifiedDate":"2021-10-25"},{"lineNumber":276,"author":{"gitId":"EricBryann"},"content":"     * \u003cp\u003eIs overrode by subclasses","lastModifiedDate":"2021-10-25"},{"lineNumber":277,"author":{"gitId":"EricBryann"},"content":"     *","lastModifiedDate":"2021-10-25"},{"lineNumber":278,"author":{"gitId":"EricBryann"},"content":"     * @param personId id of the person who is already unarchived","lastModifiedDate":"2021-10-25"},{"lineNumber":279,"author":{"gitId":"EricBryann"},"content":"     * @return exception message when the person is already unarchived","lastModifiedDate":"2021-10-25"},{"lineNumber":280,"author":{"gitId":"EricBryann"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":281,"author":{"gitId":"EricBryann"},"content":"    protected abstract String getAlreadyUnarchivedErrorMessage(int personId);","lastModifiedDate":"2021-10-25"},{"lineNumber":282,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":283,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":284,"author":{"gitId":"Kureans"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":285,"author":{"gitId":"Kureans"},"content":"     * Get storageString for all persons.","lastModifiedDate":"2021-10-16"},{"lineNumber":286,"author":{"gitId":"Kureans"},"content":"     *","lastModifiedDate":"2021-10-16"},{"lineNumber":287,"author":{"gitId":"Kureans"},"content":"     * @return storageString of all persons","lastModifiedDate":"2021-10-16"},{"lineNumber":288,"author":{"gitId":"Kureans"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":289,"author":{"gitId":"CrimsonTitan79"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":290,"author":{"gitId":"Kureans"},"content":"    public String getStorageString() {","lastModifiedDate":"2021-10-16"},{"lineNumber":291,"author":{"gitId":"Kureans"},"content":"        String output \u003d \"\";","lastModifiedDate":"2021-10-16"},{"lineNumber":292,"author":{"gitId":"Kureans"},"content":"        for (int key : persons.keySet()) {","lastModifiedDate":"2021-10-16"},{"lineNumber":293,"author":{"gitId":"Kureans"},"content":"            Person person \u003d persons.get(key);","lastModifiedDate":"2021-10-16"},{"lineNumber":294,"author":{"gitId":"Kureans"},"content":"            String personStorageString \u003d person.getStorageString();","lastModifiedDate":"2021-10-16"},{"lineNumber":295,"author":{"gitId":"jushg"},"content":"            output +\u003d personStorageString + END_LINE;","lastModifiedDate":"2021-10-22"},{"lineNumber":296,"author":{"gitId":"Kureans"},"content":"        }","lastModifiedDate":"2021-10-16"},{"lineNumber":297,"author":{"gitId":"Kureans"},"content":"        return output;","lastModifiedDate":"2021-10-16"},{"lineNumber":298,"author":{"gitId":"Kureans"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":299,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":300,"author":{"gitId":"CrimsonTitan79"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":301,"author":{"gitId":"CrimsonTitan79"},"content":"    public void addListItemFromStorage(ListItem personItem) {","lastModifiedDate":"2021-10-25"},{"lineNumber":302,"author":{"gitId":"CrimsonTitan79"},"content":"        Person person \u003d (Person) personItem;","lastModifiedDate":"2021-10-25"},{"lineNumber":303,"author":{"gitId":"CrimsonTitan79"},"content":"        int personId \u003d person.getId();","lastModifiedDate":"2021-10-25"},{"lineNumber":304,"author":{"gitId":"Kureans"},"content":"        persons.put(personId, person);","lastModifiedDate":"2021-10-16"},{"lineNumber":305,"author":{"gitId":"Kureans"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":306,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":307,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":308,"author":{"gitId":"Kureans"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":309,"author":{"gitId":"Kureans"},"content":"     * Set lastId to a new number.","lastModifiedDate":"2021-10-16"},{"lineNumber":310,"author":{"gitId":"Kureans"},"content":"     *","lastModifiedDate":"2021-10-16"},{"lineNumber":311,"author":{"gitId":"Kureans"},"content":"     * @param newLastId lastId to be set to this","lastModifiedDate":"2021-10-16"},{"lineNumber":312,"author":{"gitId":"Kureans"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":313,"author":{"gitId":"CrimsonTitan79"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":314,"author":{"gitId":"Kureans"},"content":"    public void setLastId(int newLastId) {","lastModifiedDate":"2021-10-16"},{"lineNumber":315,"author":{"gitId":"Kureans"},"content":"        lastId \u003d newLastId;","lastModifiedDate":"2021-10-16"},{"lineNumber":316,"author":{"gitId":"Kureans"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":317,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":318,"author":{"gitId":"CrimsonTitan79"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":319,"author":{"gitId":"CrimsonTitan79"},"content":"    public int getLastId() {","lastModifiedDate":"2021-10-25"},{"lineNumber":320,"author":{"gitId":"CrimsonTitan79"},"content":"        return lastId;","lastModifiedDate":"2021-10-25"},{"lineNumber":321,"author":{"gitId":"CrimsonTitan79"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":322,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":323,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":324,"author":{"gitId":"Kureans"},"content":"}","lastModifiedDate":"2021-10-16"}],"authorContributionMap":{"justinfidelis":144,"CrimsonTitan79":18,"jushg":4,"Kureans":96,"EricBryann":62}},{"path":"src/main/java/medbot/list/PersonalAppointmentList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"justinfidelis"},"content":"package medbot.list;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"justinfidelis"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"Kureans"},"content":"import java.util.Iterator;","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"justinfidelis"},"content":"import java.util.LinkedList;","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"justinfidelis"},"content":"import java.util.List;","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"Kureans"},"content":"import java.util.NavigableSet;","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"Kureans"},"content":"import java.util.TreeSet;","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":10,"author":{"gitId":"justinfidelis"},"content":"import medbot.Appointment;","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"justinfidelis"},"content":"import medbot.exceptions.MedBotException;","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"justinfidelis"},"content":"public class PersonalAppointmentList {","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"justinfidelis"},"content":"    private static final String ERROR_APPOINTMENT_ID_NOT_SET \u003d \"Appointment ID is not set.\";","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"justinfidelis"},"content":"    private static final String ERROR_ADD_APPOINTMENT_CLASH \u003d \"New appointment clashes with another appointment.\";","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"justinfidelis"},"content":"    private static final String END_LINE \u003d System.lineSeparator();","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"justinfidelis"},"content":"    private final NavigableSet\u003cAppointment\u003e appointments \u003d new TreeSet\u003c\u003e((o1, o2) -\u003e {","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"Kureans"},"content":"        if (o1.getDateTimeCode() \u003e o2.getDateTimeCode()) {","lastModifiedDate":"2021-10-22"},{"lineNumber":20,"author":{"gitId":"Kureans"},"content":"            return 1;","lastModifiedDate":"2021-10-22"},{"lineNumber":21,"author":{"gitId":"Kureans"},"content":"        } else if (o1.getDateTimeCode() \u003c o2.getDateTimeCode()) {","lastModifiedDate":"2021-10-22"},{"lineNumber":22,"author":{"gitId":"Kureans"},"content":"            return -1;","lastModifiedDate":"2021-10-22"},{"lineNumber":23,"author":{"gitId":"Kureans"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":24,"author":{"gitId":"Kureans"},"content":"        assert o1.getDateTimeCode() \u003d\u003d o2.getDateTimeCode();","lastModifiedDate":"2021-10-22"},{"lineNumber":25,"author":{"gitId":"Kureans"},"content":"        return 0;","lastModifiedDate":"2021-10-22"},{"lineNumber":26,"author":{"gitId":"Kureans"},"content":"    });","lastModifiedDate":"2021-10-22"},{"lineNumber":27,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"justinfidelis"},"content":"    public PersonalAppointmentList() {","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"justinfidelis"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"justinfidelis"},"content":"     * Adds the given appointment to the appointment list.","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"justinfidelis"},"content":"     *","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"justinfidelis"},"content":"     * @param appointment Appointment to be added to the appointment list","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"justinfidelis"},"content":"     * @throws MedBotException if there is another appointment at that time","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"justinfidelis"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":38,"author":{"gitId":"justinfidelis"},"content":"    public void addAppointment(Appointment appointment) throws MedBotException {","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"justinfidelis"},"content":"        int appointmentId \u003d appointment.getAppointmentId();","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"justinfidelis"},"content":"        if (appointmentId \u003d\u003d 0) {","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"justinfidelis"},"content":"            throw new MedBotException(ERROR_APPOINTMENT_ID_NOT_SET);","lastModifiedDate":"2021-10-21"},{"lineNumber":42,"author":{"gitId":"justinfidelis"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":43,"author":{"gitId":"Kureans"},"content":"        boolean isNotClash \u003d appointments.add(appointment);","lastModifiedDate":"2021-10-22"},{"lineNumber":44,"author":{"gitId":"Kureans"},"content":"        if (!isNotClash) {","lastModifiedDate":"2021-10-22"},{"lineNumber":45,"author":{"gitId":"justinfidelis"},"content":"            throw new MedBotException(ERROR_ADD_APPOINTMENT_CLASH);","lastModifiedDate":"2021-10-21"},{"lineNumber":46,"author":{"gitId":"justinfidelis"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":47,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":48,"author":{"gitId":"Kureans"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":49,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":50,"author":{"gitId":"justinfidelis"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":51,"author":{"gitId":"justinfidelis"},"content":"     * Returns the appointmentId of the appointment at the specified time code, or -1 if there is none.","lastModifiedDate":"2021-10-24"},{"lineNumber":52,"author":{"gitId":"justinfidelis"},"content":"     *","lastModifiedDate":"2021-10-24"},{"lineNumber":53,"author":{"gitId":"justinfidelis"},"content":"     * @param dateTimeCode the dateTimeCode to search for","lastModifiedDate":"2021-10-24"},{"lineNumber":54,"author":{"gitId":"justinfidelis"},"content":"     * @return the appointmentId of the appointment with that dateTimeCode","lastModifiedDate":"2021-10-24"},{"lineNumber":55,"author":{"gitId":"justinfidelis"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":56,"author":{"gitId":"justinfidelis"},"content":"    public int getAppointmentId(int dateTimeCode) {","lastModifiedDate":"2021-10-21"},{"lineNumber":57,"author":{"gitId":"justinfidelis"},"content":"        for (Appointment appointment : appointments) {","lastModifiedDate":"2021-10-24"},{"lineNumber":58,"author":{"gitId":"justinfidelis"},"content":"            if (appointment !\u003d null \u0026\u0026 appointment.getDateTimeCode() \u003d\u003d dateTimeCode) {","lastModifiedDate":"2021-10-24"},{"lineNumber":59,"author":{"gitId":"justinfidelis"},"content":"                return appointment.getAppointmentId();","lastModifiedDate":"2021-10-21"},{"lineNumber":60,"author":{"gitId":"justinfidelis"},"content":"            }","lastModifiedDate":"2021-10-21"},{"lineNumber":61,"author":{"gitId":"Kureans"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":62,"author":{"gitId":"justinfidelis"},"content":"        return -1;","lastModifiedDate":"2021-10-21"},{"lineNumber":63,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":64,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":65,"author":{"gitId":"justinfidelis"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":66,"author":{"gitId":"justinfidelis"},"content":"     * Returns a LinkedList of the appointmentId of all appointments.","lastModifiedDate":"2021-10-25"},{"lineNumber":67,"author":{"gitId":"justinfidelis"},"content":"     *","lastModifiedDate":"2021-10-25"},{"lineNumber":68,"author":{"gitId":"justinfidelis"},"content":"     * @return LinkedList of the appointmentId of all appointments","lastModifiedDate":"2021-10-25"},{"lineNumber":69,"author":{"gitId":"justinfidelis"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":70,"author":{"gitId":"justinfidelis"},"content":"    public LinkedList\u003cInteger\u003e getAllAppointmentIds() {","lastModifiedDate":"2021-10-25"},{"lineNumber":71,"author":{"gitId":"justinfidelis"},"content":"        LinkedList\u003cInteger\u003e appointmentIds \u003d new LinkedList\u003c\u003e();","lastModifiedDate":"2021-10-25"},{"lineNumber":72,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":73,"author":{"gitId":"justinfidelis"},"content":"        for (Appointment appointment : appointments) {","lastModifiedDate":"2021-10-25"},{"lineNumber":74,"author":{"gitId":"justinfidelis"},"content":"            if (appointment !\u003d null) {","lastModifiedDate":"2021-10-25"},{"lineNumber":75,"author":{"gitId":"justinfidelis"},"content":"                appointmentIds.add(appointment.getAppointmentId());","lastModifiedDate":"2021-10-25"},{"lineNumber":76,"author":{"gitId":"justinfidelis"},"content":"            }","lastModifiedDate":"2021-10-25"},{"lineNumber":77,"author":{"gitId":"justinfidelis"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":78,"author":{"gitId":"justinfidelis"},"content":"        return appointmentIds;","lastModifiedDate":"2021-10-25"},{"lineNumber":79,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":80,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":81,"author":{"gitId":"justinfidelis"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":82,"author":{"gitId":"justinfidelis"},"content":"     * Removes the appointment with the specified dateTimeCode.","lastModifiedDate":"2021-10-24"},{"lineNumber":83,"author":{"gitId":"justinfidelis"},"content":"     *","lastModifiedDate":"2021-10-24"},{"lineNumber":84,"author":{"gitId":"justinfidelis"},"content":"     * @param dateTimeCode the dateTimeCode of the appointment to be deleted","lastModifiedDate":"2021-10-24"},{"lineNumber":85,"author":{"gitId":"justinfidelis"},"content":"     * @throws MedBotException if there is no appointment with that dateTimeCode.","lastModifiedDate":"2021-10-24"},{"lineNumber":86,"author":{"gitId":"justinfidelis"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":87,"author":{"gitId":"justinfidelis"},"content":"    public void deleteAppointment(int dateTimeCode) throws MedBotException {","lastModifiedDate":"2021-10-24"},{"lineNumber":88,"author":{"gitId":"Kureans"},"content":"        Iterator\u003cAppointment\u003e it \u003d appointments.iterator();","lastModifiedDate":"2021-10-22"},{"lineNumber":89,"author":{"gitId":"Kureans"},"content":"        while (it.hasNext()) {","lastModifiedDate":"2021-10-22"},{"lineNumber":90,"author":{"gitId":"Kureans"},"content":"            Appointment appointment \u003d it.next();","lastModifiedDate":"2021-10-22"},{"lineNumber":91,"author":{"gitId":"Kureans"},"content":"            if (appointment.getDateTimeCode() \u003d\u003d dateTimeCode) {","lastModifiedDate":"2021-10-22"},{"lineNumber":92,"author":{"gitId":"Kureans"},"content":"                it.remove();","lastModifiedDate":"2021-10-22"},{"lineNumber":93,"author":{"gitId":"Kureans"},"content":"                return;","lastModifiedDate":"2021-10-22"},{"lineNumber":94,"author":{"gitId":"Kureans"},"content":"            }","lastModifiedDate":"2021-10-22"},{"lineNumber":95,"author":{"gitId":"justinfidelis"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":96,"author":{"gitId":"Kureans"},"content":"        throw new MedBotException(getAppointmentNotFoundErrorMessage(dateTimeCode));","lastModifiedDate":"2021-10-22"},{"lineNumber":97,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":98,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":99,"author":{"gitId":"justinfidelis"},"content":"    private String getAppointmentNotFoundErrorMessage(int dateTimeCode) {","lastModifiedDate":"2021-10-21"},{"lineNumber":100,"author":{"gitId":"justinfidelis"},"content":"        return \"No appointment at : \" + Appointment.formatDateTimeCode(dateTimeCode) + \"found.\";","lastModifiedDate":"2021-10-26"},{"lineNumber":101,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":102,"author":{"gitId":"justinfidelis"},"content":"    ","lastModifiedDate":"2021-10-21"},{"lineNumber":103,"author":{"gitId":"justinfidelis"},"content":"    public List\u003cInteger\u003e listAppointments() {","lastModifiedDate":"2021-10-26"},{"lineNumber":104,"author":{"gitId":"justinfidelis"},"content":"        List\u003cInteger\u003e appointmentIds \u003d new LinkedList\u003c\u003e();","lastModifiedDate":"2021-10-26"},{"lineNumber":105,"author":{"gitId":"justinfidelis"},"content":"        for (Appointment appointment : appointments) {","lastModifiedDate":"2021-10-24"},{"lineNumber":106,"author":{"gitId":"justinfidelis"},"content":"            appointmentIds.add(appointment.getAppointmentId());","lastModifiedDate":"2021-10-26"},{"lineNumber":107,"author":{"gitId":"justinfidelis"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":108,"author":{"gitId":"justinfidelis"},"content":"        return appointmentIds;","lastModifiedDate":"2021-10-26"},{"lineNumber":109,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":110,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":111,"author":{"gitId":"justinfidelis"},"content":"    public List\u003cInteger\u003e listAppointmentsAfter(int dateTimeCode) {","lastModifiedDate":"2021-10-26"},{"lineNumber":112,"author":{"gitId":"Kureans"},"content":"        Appointment referenceAppointment \u003d new Appointment();","lastModifiedDate":"2021-10-25"},{"lineNumber":113,"author":{"gitId":"Kureans"},"content":"        referenceAppointment.setDateTimeCode(dateTimeCode);","lastModifiedDate":"2021-10-25"},{"lineNumber":114,"author":{"gitId":"Kureans"},"content":"        NavigableSet\u003cAppointment\u003e appointmentsAfter \u003d appointments.tailSet(referenceAppointment, true);","lastModifiedDate":"2021-10-25"},{"lineNumber":115,"author":{"gitId":"justinfidelis"},"content":"        List\u003cInteger\u003e appointmentIds \u003d new LinkedList\u003c\u003e();","lastModifiedDate":"2021-10-26"},{"lineNumber":116,"author":{"gitId":"Kureans"},"content":"        for (Appointment appointment : appointmentsAfter) {","lastModifiedDate":"2021-10-25"},{"lineNumber":117,"author":{"gitId":"justinfidelis"},"content":"            appointmentIds.add(appointment.getAppointmentId());","lastModifiedDate":"2021-10-26"},{"lineNumber":118,"author":{"gitId":"Kureans"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":119,"author":{"gitId":"justinfidelis"},"content":"        return appointmentIds;","lastModifiedDate":"2021-10-26"},{"lineNumber":120,"author":{"gitId":"Kureans"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":121,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":122,"author":{"gitId":"justinfidelis"},"content":"    public List\u003cInteger\u003e listAppointmentsBefore(int dateTimeCode) {","lastModifiedDate":"2021-10-26"},{"lineNumber":123,"author":{"gitId":"Kureans"},"content":"        Appointment referenceAppointment \u003d new Appointment();","lastModifiedDate":"2021-10-25"},{"lineNumber":124,"author":{"gitId":"Kureans"},"content":"        referenceAppointment.setDateTimeCode(dateTimeCode);","lastModifiedDate":"2021-10-25"},{"lineNumber":125,"author":{"gitId":"Kureans"},"content":"        NavigableSet\u003cAppointment\u003e appointmentsBefore \u003d appointments.headSet(referenceAppointment, true);","lastModifiedDate":"2021-10-25"},{"lineNumber":126,"author":{"gitId":"justinfidelis"},"content":"        List\u003cInteger\u003e appointmentIds \u003d new LinkedList\u003c\u003e();","lastModifiedDate":"2021-10-26"},{"lineNumber":127,"author":{"gitId":"Kureans"},"content":"        for (Appointment appointment : appointmentsBefore) {","lastModifiedDate":"2021-10-25"},{"lineNumber":128,"author":{"gitId":"justinfidelis"},"content":"            appointmentIds.add(appointment.getAppointmentId());","lastModifiedDate":"2021-10-26"},{"lineNumber":129,"author":{"gitId":"Kureans"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":130,"author":{"gitId":"justinfidelis"},"content":"        return appointmentIds;","lastModifiedDate":"2021-10-26"},{"lineNumber":131,"author":{"gitId":"Kureans"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":132,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":133,"author":{"gitId":"justinfidelis"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"justinfidelis":93,"Kureans":40}},{"path":"src/main/java/medbot/list/SchedulerAppointmentList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"justinfidelis"},"content":"package medbot.list;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"justinfidelis"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"justinfidelis"},"content":"import java.util.LinkedList;","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"justinfidelis"},"content":"import java.util.List;","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"justinfidelis"},"content":"import medbot.Appointment;","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"justinfidelis"},"content":"import medbot.exceptions.MedBotException;","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"CrimsonTitan79"},"content":"import medbot.person.Person;","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"CrimsonTitan79"},"content":"import static medbot.ui.Ui.END_LINE;","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"CrimsonTitan79"},"content":"public class SchedulerAppointmentList extends MedBotList {","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"justinfidelis"},"content":"    private static final String END_LINE \u003d System.lineSeparator();","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"justinfidelis"},"content":"    protected HashMap\u003cInteger, Appointment\u003e appointments \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"justinfidelis"},"content":"    private int lastId \u003d 0;","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"justinfidelis"},"content":"    public SchedulerAppointmentList() {","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"justinfidelis"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"justinfidelis"},"content":"     * Returns a copy of the appointment with the specified appointmentId.","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"justinfidelis"},"content":"     *","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"justinfidelis"},"content":"     * @param appointmentId the appointmentId to search for","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"justinfidelis"},"content":"     * @return copy of appointment with the specified appointmentId","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"justinfidelis"},"content":"     * @throws MedBotException if no appointment with the specified appointmentId is found","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"justinfidelis"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"justinfidelis"},"content":"    public Appointment getAppointment(int appointmentId) throws MedBotException {","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"justinfidelis"},"content":"        if (!appointments.containsKey(appointmentId)) {","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"justinfidelis"},"content":"            throw new MedBotException(getAppointmentNotFoundErrorMessage(appointmentId));","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"justinfidelis"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"justinfidelis"},"content":"        Appointment appointment \u003d new Appointment();","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"justinfidelis"},"content":"        appointment.setAppointmentId(appointmentId);","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"justinfidelis"},"content":"        appointment.mergeAppointmentData(appointments.get(appointmentId));","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"justinfidelis"},"content":"        return appointment;","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"justinfidelis"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":41,"author":{"gitId":"justinfidelis"},"content":"     * Adds the given appointment into the appointment list, returns the appointmentId that was allocated to it.","lastModifiedDate":"2021-10-24"},{"lineNumber":42,"author":{"gitId":"justinfidelis"},"content":"     *","lastModifiedDate":"2021-10-24"},{"lineNumber":43,"author":{"gitId":"justinfidelis"},"content":"     * \u003cp\u003eIf the appointment has an appointmentId, the appointment will be added if there is no existing appointment","lastModifiedDate":"2021-10-24"},{"lineNumber":44,"author":{"gitId":"justinfidelis"},"content":"     * with that id, and throw a MedBotException if there is a clash. If not, i.e, appointmentId \u003d\u003d 0, an id will be","lastModifiedDate":"2021-10-24"},{"lineNumber":45,"author":{"gitId":"justinfidelis"},"content":"     * generated and the appointment\u0027s id will be set to that value.","lastModifiedDate":"2021-10-24"},{"lineNumber":46,"author":{"gitId":"justinfidelis"},"content":"     *","lastModifiedDate":"2021-10-24"},{"lineNumber":47,"author":{"gitId":"justinfidelis"},"content":"     * @param appointment Appointment to be added into the appointment list","lastModifiedDate":"2021-10-24"},{"lineNumber":48,"author":{"gitId":"justinfidelis"},"content":"     * @return id of the appointment that was added","lastModifiedDate":"2021-10-24"},{"lineNumber":49,"author":{"gitId":"justinfidelis"},"content":"     * @throws MedBotException if another appointment with that id already exists","lastModifiedDate":"2021-10-24"},{"lineNumber":50,"author":{"gitId":"justinfidelis"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":51,"author":{"gitId":"justinfidelis"},"content":"    public int addAppointment(Appointment appointment) throws MedBotException {","lastModifiedDate":"2021-10-21"},{"lineNumber":52,"author":{"gitId":"justinfidelis"},"content":"        assert appointment.isComplete();","lastModifiedDate":"2021-10-21"},{"lineNumber":53,"author":{"gitId":"justinfidelis"},"content":"        int appointmentId \u003d appointment.getAppointmentId();","lastModifiedDate":"2021-10-21"},{"lineNumber":54,"author":{"gitId":"justinfidelis"},"content":"        if (appointments.containsKey(appointmentId)) {","lastModifiedDate":"2021-10-21"},{"lineNumber":55,"author":{"gitId":"justinfidelis"},"content":"            throw new MedBotException(\"Appointment with id \" + appointmentId + \" already exits!\");","lastModifiedDate":"2021-10-21"},{"lineNumber":56,"author":{"gitId":"justinfidelis"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":57,"author":{"gitId":"justinfidelis"},"content":"        if (appointmentId \u003d\u003d 0) {","lastModifiedDate":"2021-10-21"},{"lineNumber":58,"author":{"gitId":"justinfidelis"},"content":"            appointmentId \u003d generateAppointmentId();","lastModifiedDate":"2021-10-21"},{"lineNumber":59,"author":{"gitId":"justinfidelis"},"content":"            appointment.setAppointmentId(appointmentId);","lastModifiedDate":"2021-10-21"},{"lineNumber":60,"author":{"gitId":"justinfidelis"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":61,"author":{"gitId":"justinfidelis"},"content":"        appointments.put(appointmentId, appointment);","lastModifiedDate":"2021-10-21"},{"lineNumber":62,"author":{"gitId":"justinfidelis"},"content":"        return appointmentId;","lastModifiedDate":"2021-10-21"},{"lineNumber":63,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":64,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":65,"author":{"gitId":"justinfidelis"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":66,"author":{"gitId":"justinfidelis"},"content":"     * Generates a non-random but unique id to be allocated to an appointment.","lastModifiedDate":"2021-10-25"},{"lineNumber":67,"author":{"gitId":"justinfidelis"},"content":"     *","lastModifiedDate":"2021-10-25"},{"lineNumber":68,"author":{"gitId":"justinfidelis"},"content":"     * @return a unique id to be allocated to an appointment","lastModifiedDate":"2021-10-25"},{"lineNumber":69,"author":{"gitId":"justinfidelis"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":70,"author":{"gitId":"justinfidelis"},"content":"    private int generateAppointmentId() {","lastModifiedDate":"2021-10-25"},{"lineNumber":71,"author":{"gitId":"justinfidelis"},"content":"        do {","lastModifiedDate":"2021-10-25"},{"lineNumber":72,"author":{"gitId":"justinfidelis"},"content":"            lastId++;","lastModifiedDate":"2021-10-25"},{"lineNumber":73,"author":{"gitId":"justinfidelis"},"content":"        } while (appointments.containsKey(lastId));","lastModifiedDate":"2021-10-25"},{"lineNumber":74,"author":{"gitId":"justinfidelis"},"content":"        return lastId;","lastModifiedDate":"2021-10-25"},{"lineNumber":75,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":76,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":77,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":78,"author":{"gitId":"justinfidelis"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":79,"author":{"gitId":"justinfidelis"},"content":"     * Returns if an appointment with the specified appointmentId exists.","lastModifiedDate":"2021-10-24"},{"lineNumber":80,"author":{"gitId":"justinfidelis"},"content":"     *","lastModifiedDate":"2021-10-24"},{"lineNumber":81,"author":{"gitId":"justinfidelis"},"content":"     * @param appointmentId the appointmentId to check for","lastModifiedDate":"2021-10-24"},{"lineNumber":82,"author":{"gitId":"justinfidelis"},"content":"     * @return Boolean of whether an appointment with that appointmentId exists.","lastModifiedDate":"2021-10-24"},{"lineNumber":83,"author":{"gitId":"justinfidelis"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":84,"author":{"gitId":"justinfidelis"},"content":"    public boolean doesAppointmentExist(int appointmentId) {","lastModifiedDate":"2021-10-24"},{"lineNumber":85,"author":{"gitId":"justinfidelis"},"content":"        return appointments.containsKey(appointmentId);","lastModifiedDate":"2021-10-21"},{"lineNumber":86,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":87,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":88,"author":{"gitId":"justinfidelis"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":89,"author":{"gitId":"justinfidelis"},"content":"     * Removes the appointment with the specified appointmentId.","lastModifiedDate":"2021-10-24"},{"lineNumber":90,"author":{"gitId":"justinfidelis"},"content":"     *","lastModifiedDate":"2021-10-24"},{"lineNumber":91,"author":{"gitId":"justinfidelis"},"content":"     * @param appointmentId the appointmentId of the appointment to be removed","lastModifiedDate":"2021-10-24"},{"lineNumber":92,"author":{"gitId":"justinfidelis"},"content":"     * @return the Appointment that was removed","lastModifiedDate":"2021-10-24"},{"lineNumber":93,"author":{"gitId":"justinfidelis"},"content":"     * @throws MedBotException if there is no appointment with that appointmentId","lastModifiedDate":"2021-10-24"},{"lineNumber":94,"author":{"gitId":"justinfidelis"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":95,"author":{"gitId":"justinfidelis"},"content":"    public Appointment deleteAppointment(int appointmentId) throws MedBotException {","lastModifiedDate":"2021-10-24"},{"lineNumber":96,"author":{"gitId":"justinfidelis"},"content":"        if (!appointments.containsKey(appointmentId)) {","lastModifiedDate":"2021-10-21"},{"lineNumber":97,"author":{"gitId":"justinfidelis"},"content":"            throw new MedBotException(getAppointmentNotFoundErrorMessage(appointmentId));","lastModifiedDate":"2021-10-21"},{"lineNumber":98,"author":{"gitId":"justinfidelis"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":99,"author":{"gitId":"justinfidelis"},"content":"        return appointments.remove(appointmentId);","lastModifiedDate":"2021-10-21"},{"lineNumber":100,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":101,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":102,"author":{"gitId":"justinfidelis"},"content":"    private String getAppointmentNotFoundErrorMessage(int appointmentId) {","lastModifiedDate":"2021-10-21"},{"lineNumber":103,"author":{"gitId":"justinfidelis"},"content":"        return \"No appointment with ID \" + appointmentId + \" found.\";","lastModifiedDate":"2021-10-24"},{"lineNumber":104,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":105,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":106,"author":{"gitId":"justinfidelis"},"content":"    public List\u003cInteger\u003e listAppointments() {","lastModifiedDate":"2021-10-26"},{"lineNumber":107,"author":{"gitId":"justinfidelis"},"content":"        return new LinkedList\u003c\u003e(appointments.keySet());","lastModifiedDate":"2021-10-26"},{"lineNumber":108,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":109,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":110,"author":{"gitId":"CrimsonTitan79"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":111,"author":{"gitId":"CrimsonTitan79"},"content":"     * Get storageString for all appointments.","lastModifiedDate":"2021-10-25"},{"lineNumber":112,"author":{"gitId":"CrimsonTitan79"},"content":"     *","lastModifiedDate":"2021-10-25"},{"lineNumber":113,"author":{"gitId":"CrimsonTitan79"},"content":"     * @return storageString of all appointments","lastModifiedDate":"2021-10-25"},{"lineNumber":114,"author":{"gitId":"CrimsonTitan79"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":115,"author":{"gitId":"CrimsonTitan79"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":116,"author":{"gitId":"CrimsonTitan79"},"content":"    public String getStorageString() {","lastModifiedDate":"2021-10-25"},{"lineNumber":117,"author":{"gitId":"CrimsonTitan79"},"content":"        String output \u003d \"\";","lastModifiedDate":"2021-10-25"},{"lineNumber":118,"author":{"gitId":"CrimsonTitan79"},"content":"        for (int key : appointments.keySet()) {","lastModifiedDate":"2021-10-25"},{"lineNumber":119,"author":{"gitId":"CrimsonTitan79"},"content":"            Appointment appointment \u003d appointments.get(key);","lastModifiedDate":"2021-10-25"},{"lineNumber":120,"author":{"gitId":"CrimsonTitan79"},"content":"            String appointmentStorageString \u003d appointment.getStorageString();","lastModifiedDate":"2021-10-25"},{"lineNumber":121,"author":{"gitId":"CrimsonTitan79"},"content":"            output +\u003d appointmentStorageString + END_LINE;","lastModifiedDate":"2021-10-25"},{"lineNumber":122,"author":{"gitId":"CrimsonTitan79"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":123,"author":{"gitId":"CrimsonTitan79"},"content":"        return output;","lastModifiedDate":"2021-10-25"},{"lineNumber":124,"author":{"gitId":"CrimsonTitan79"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":125,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":126,"author":{"gitId":"CrimsonTitan79"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":127,"author":{"gitId":"CrimsonTitan79"},"content":"    public void addListItemFromStorage(ListItem appointmentItem) {","lastModifiedDate":"2021-10-25"},{"lineNumber":128,"author":{"gitId":"CrimsonTitan79"},"content":"        Appointment appointment \u003d (Appointment) appointmentItem;","lastModifiedDate":"2021-10-25"},{"lineNumber":129,"author":{"gitId":"CrimsonTitan79"},"content":"        int appointmentId \u003d appointment.getId();","lastModifiedDate":"2021-10-25"},{"lineNumber":130,"author":{"gitId":"CrimsonTitan79"},"content":"        appointments.put(appointmentId, appointment);","lastModifiedDate":"2021-10-25"},{"lineNumber":131,"author":{"gitId":"CrimsonTitan79"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":132,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":133,"author":{"gitId":"CrimsonTitan79"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":134,"author":{"gitId":"justinfidelis"},"content":"    public void setLastId(int lastId) {","lastModifiedDate":"2021-10-21"},{"lineNumber":135,"author":{"gitId":"justinfidelis"},"content":"        this.lastId \u003d lastId;","lastModifiedDate":"2021-10-21"},{"lineNumber":136,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":137,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":138,"author":{"gitId":"CrimsonTitan79"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":139,"author":{"gitId":"CrimsonTitan79"},"content":"    public int getLastId() {","lastModifiedDate":"2021-10-25"},{"lineNumber":140,"author":{"gitId":"CrimsonTitan79"},"content":"        return lastId;","lastModifiedDate":"2021-10-25"},{"lineNumber":141,"author":{"gitId":"CrimsonTitan79"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":142,"author":{"gitId":"justinfidelis"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"justinfidelis":108,"CrimsonTitan79":34}},{"path":"src/main/java/medbot/parser/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"justinfidelis"},"content":"package medbot.parser;","lastModifiedDate":"2021-10-22"},{"lineNumber":2,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":3,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":4,"author":{"gitId":"jushg"},"content":"import medbot.command.Command;","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"jushg"},"content":"import medbot.command.CommandType;","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"jushg"},"content":"import medbot.command.ExitCommand;","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"jushg"},"content":"import medbot.command.GetCurrentViewCommand;","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"jushg"},"content":"import medbot.command.HelpCommand;","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"jushg"},"content":"import medbot.command.SwitchCommand;","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"justinfidelis"},"content":"import medbot.exceptions.MedBotParserException;","lastModifiedDate":"2021-10-22"},{"lineNumber":11,"author":{"gitId":"justinfidelis"},"content":"import medbot.utilities.ViewType;","lastModifiedDate":"2021-10-22"},{"lineNumber":12,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"justinfidelis"},"content":"public abstract class Parser {","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"justinfidelis"},"content":"    private static final String END_LINE \u003d System.lineSeparator();","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"justinfidelis"},"content":"    private static final String EMPTY_STRING \u003d \"\";","lastModifiedDate":"2021-10-22"},{"lineNumber":16,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":17,"author":{"gitId":"justinfidelis"},"content":"    private static final String COMMAND_ADD \u003d \"add\";","lastModifiedDate":"2021-10-22"},{"lineNumber":18,"author":{"gitId":"justinfidelis"},"content":"    private static final String COMMAND_DELETE \u003d \"delete\";","lastModifiedDate":"2021-10-22"},{"lineNumber":19,"author":{"gitId":"justinfidelis"},"content":"    private static final String COMMAND_EDIT \u003d \"edit\";","lastModifiedDate":"2021-10-22"},{"lineNumber":20,"author":{"gitId":"justinfidelis"},"content":"    private static final String COMMAND_VIEW \u003d \"view\";","lastModifiedDate":"2021-10-22"},{"lineNumber":21,"author":{"gitId":"justinfidelis"},"content":"    private static final String COMMAND_LIST \u003d \"list\";","lastModifiedDate":"2021-10-22"},{"lineNumber":22,"author":{"gitId":"justinfidelis"},"content":"    private static final String COMMAND_EXIT \u003d \"exit\";","lastModifiedDate":"2021-10-22"},{"lineNumber":23,"author":{"gitId":"justinfidelis"},"content":"    private static final String COMMAND_HELP \u003d \"help\";","lastModifiedDate":"2021-10-22"},{"lineNumber":24,"author":{"gitId":"justinfidelis"},"content":"    private static final String COMMAND_SWITCH \u003d \"switch\";","lastModifiedDate":"2021-10-22"},{"lineNumber":25,"author":{"gitId":"justinfidelis"},"content":"    private static final String COMMAND_FIND \u003d \"find\";","lastModifiedDate":"2021-10-22"},{"lineNumber":26,"author":{"gitId":"EricBryann"},"content":"    private static final String COMMAND_ARCHIVE \u003d \"archive\";","lastModifiedDate":"2021-10-25"},{"lineNumber":27,"author":{"gitId":"EricBryann"},"content":"    private static final String COMMAND_UNARCHIVE \u003d \"unarchive\";","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"jushg"},"content":"    private static final String COMMAND_GET_VIEW \u003d \"get view\";","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":30,"author":{"gitId":"justinfidelis"},"content":"    private static final String VIEW_TYPE_PATIENT_VIEW \u003d \"p\";","lastModifiedDate":"2021-10-22"},{"lineNumber":31,"author":{"gitId":"justinfidelis"},"content":"    private static final String VIEW_TYPE_PATIENT_VIEW_ALT \u003d \"1\";","lastModifiedDate":"2021-10-22"},{"lineNumber":32,"author":{"gitId":"justinfidelis"},"content":"    private static final String VIEW_TYPE_MEDICAL_STAFF_VIEW \u003d \"m\";","lastModifiedDate":"2021-10-22"},{"lineNumber":33,"author":{"gitId":"justinfidelis"},"content":"    private static final String VIEW_TYPE_MEDICAL_STAFF_VIEW_ALT \u003d \"2\";","lastModifiedDate":"2021-10-22"},{"lineNumber":34,"author":{"gitId":"justinfidelis"},"content":"    private static final String VIEW_TYPE_SCHEDULER_VIEW \u003d \"s\";","lastModifiedDate":"2021-10-22"},{"lineNumber":35,"author":{"gitId":"justinfidelis"},"content":"    private static final String VIEW_TYPE_SCHEDULER_VIEW_ALT \u003d \"3\";","lastModifiedDate":"2021-10-22"},{"lineNumber":36,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":37,"author":{"gitId":"justinfidelis"},"content":"    private static final String ERROR_WRONG_COMMAND \u003d \"Unable to parse command.\" + END_LINE;","lastModifiedDate":"2021-10-22"},{"lineNumber":38,"author":{"gitId":"justinfidelis"},"content":"    private static final String ERROR_NO_VIEW_FOUND \u003d \"Unidentified view.\" + END_LINE;","lastModifiedDate":"2021-10-22"},{"lineNumber":39,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":40,"author":{"gitId":"justinfidelis"},"content":"    private static final String ERROR_PATIENT_ID_NOT_SPECIFIED \u003d \"Patient ID not specified.\" + END_LINE;","lastModifiedDate":"2021-10-22"},{"lineNumber":41,"author":{"gitId":"justinfidelis"},"content":"    private static final String ERROR_STAFF_ID_NOT_SPECIFIED \u003d \"Staff ID not specified.\" + END_LINE;","lastModifiedDate":"2021-10-22"},{"lineNumber":42,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":43,"author":{"gitId":"justinfidelis"},"content":"    private static final String ERROR_INVALID_VIEW_TYPE \u003d \"Invalid view type code.\" + END_LINE;","lastModifiedDate":"2021-10-22"},{"lineNumber":44,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":45,"author":{"gitId":"justinfidelis"},"content":"    private static ViewType viewType \u003d ViewType.PATIENT_INFO;","lastModifiedDate":"2021-10-22"},{"lineNumber":46,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":47,"author":{"gitId":"justinfidelis"},"content":"    public static ViewType getViewType() {","lastModifiedDate":"2021-10-22"},{"lineNumber":48,"author":{"gitId":"justinfidelis"},"content":"        return viewType;","lastModifiedDate":"2021-10-22"},{"lineNumber":49,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":50,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":51,"author":{"gitId":"justinfidelis"},"content":"    public static void setViewType(ViewType viewType) {","lastModifiedDate":"2021-10-22"},{"lineNumber":52,"author":{"gitId":"justinfidelis"},"content":"        Parser.viewType \u003d viewType;","lastModifiedDate":"2021-10-22"},{"lineNumber":53,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":54,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":55,"author":{"gitId":"justinfidelis"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":56,"author":{"gitId":"justinfidelis"},"content":"     * Parses the user input and returns the corresponding command based on the parser\u0027s view type.","lastModifiedDate":"2021-10-22"},{"lineNumber":57,"author":{"gitId":"justinfidelis"},"content":"     *","lastModifiedDate":"2021-10-22"},{"lineNumber":58,"author":{"gitId":"justinfidelis"},"content":"     * @param userInput String containing the full user input.","lastModifiedDate":"2021-10-22"},{"lineNumber":59,"author":{"gitId":"justinfidelis"},"content":"     * @return the corresponding Command object.","lastModifiedDate":"2021-10-22"},{"lineNumber":60,"author":{"gitId":"justinfidelis"},"content":"     * @throws MedBotParserException if command is unrecognised.","lastModifiedDate":"2021-10-22"},{"lineNumber":61,"author":{"gitId":"justinfidelis"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":62,"author":{"gitId":"justinfidelis"},"content":"    public static Command parseCommand(String userInput) throws MedBotParserException {","lastModifiedDate":"2021-10-22"},{"lineNumber":63,"author":{"gitId":"justinfidelis"},"content":"        userInput \u003d ParserUtils.preprocessInput(userInput);","lastModifiedDate":"2021-10-22"},{"lineNumber":64,"author":{"gitId":"justinfidelis"},"content":"        //commands valid in all viewTypes","lastModifiedDate":"2021-10-22"},{"lineNumber":65,"author":{"gitId":"justinfidelis"},"content":"        if (userInput.startsWith(COMMAND_SWITCH)) {","lastModifiedDate":"2021-10-22"},{"lineNumber":66,"author":{"gitId":"justinfidelis"},"content":"            return parseSwitchCommand(userInput);","lastModifiedDate":"2021-10-22"},{"lineNumber":67,"author":{"gitId":"justinfidelis"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":68,"author":{"gitId":"justinfidelis"},"content":"        if (userInput.equals(COMMAND_EXIT)) {","lastModifiedDate":"2021-10-22"},{"lineNumber":69,"author":{"gitId":"justinfidelis"},"content":"            return new ExitCommand();","lastModifiedDate":"2021-10-22"},{"lineNumber":70,"author":{"gitId":"justinfidelis"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":71,"author":{"gitId":"EricBryann"},"content":"        if (userInput.startsWith(COMMAND_HELP)) {","lastModifiedDate":"2021-10-25"},{"lineNumber":72,"author":{"gitId":"justinfidelis"},"content":"            return parseHelpCommand(userInput);","lastModifiedDate":"2021-10-22"},{"lineNumber":73,"author":{"gitId":"justinfidelis"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":74,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":75,"author":{"gitId":"jushg"},"content":"        if (userInput.startsWith(COMMAND_GET_VIEW)) {","lastModifiedDate":"2021-10-25"},{"lineNumber":76,"author":{"gitId":"jushg"},"content":"            return new GetCurrentViewCommand(getViewType());","lastModifiedDate":"2021-10-25"},{"lineNumber":77,"author":{"gitId":"jushg"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":78,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":79,"author":{"gitId":"justinfidelis"},"content":"        //commands valid in only some viewTypes","lastModifiedDate":"2021-10-22"},{"lineNumber":80,"author":{"gitId":"justinfidelis"},"content":"        switch (viewType) {","lastModifiedDate":"2021-10-22"},{"lineNumber":81,"author":{"gitId":"justinfidelis"},"content":"        case PATIENT_INFO:","lastModifiedDate":"2021-10-22"},{"lineNumber":82,"author":{"gitId":"justinfidelis"},"content":"            return PatientCommandParser.parsePatientCommand(userInput);","lastModifiedDate":"2021-10-22"},{"lineNumber":83,"author":{"gitId":"justinfidelis"},"content":"        case MEDICAL_STAFF_INFO:","lastModifiedDate":"2021-10-22"},{"lineNumber":84,"author":{"gitId":"justinfidelis"},"content":"            return StaffCommandParser.parseStaffCommand(userInput);","lastModifiedDate":"2021-10-22"},{"lineNumber":85,"author":{"gitId":"justinfidelis"},"content":"        case SCHEDULER:","lastModifiedDate":"2021-10-22"},{"lineNumber":86,"author":{"gitId":"justinfidelis"},"content":"            return SchedulerCommandParser.parseSchedulingCommand(userInput);","lastModifiedDate":"2021-10-22"},{"lineNumber":87,"author":{"gitId":"justinfidelis"},"content":"        default:","lastModifiedDate":"2021-10-22"},{"lineNumber":88,"author":{"gitId":"justinfidelis"},"content":"            assert false;","lastModifiedDate":"2021-10-22"},{"lineNumber":89,"author":{"gitId":"justinfidelis"},"content":"            throw new MedBotParserException(ERROR_NO_VIEW_FOUND);","lastModifiedDate":"2021-10-22"},{"lineNumber":90,"author":{"gitId":"justinfidelis"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":91,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":92,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":93,"author":{"gitId":"justinfidelis"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":94,"author":{"gitId":"justinfidelis"},"content":"     * Parses user input to pass relevant parameters into the HelpCommand constructor.","lastModifiedDate":"2021-10-22"},{"lineNumber":95,"author":{"gitId":"justinfidelis"},"content":"     *","lastModifiedDate":"2021-10-22"},{"lineNumber":96,"author":{"gitId":"justinfidelis"},"content":"     * @param userInput String containing the full user input.","lastModifiedDate":"2021-10-22"},{"lineNumber":97,"author":{"gitId":"justinfidelis"},"content":"     * @return HelpCommand object.","lastModifiedDate":"2021-10-22"},{"lineNumber":98,"author":{"gitId":"justinfidelis"},"content":"     * @throws MedBotParserException if parameters.length \u003c 1 \u0026\u0026 \u003e 2","lastModifiedDate":"2021-10-22"},{"lineNumber":99,"author":{"gitId":"justinfidelis"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":100,"author":{"gitId":"justinfidelis"},"content":"    private static HelpCommand parseHelpCommand(String userInput) throws MedBotParserException {","lastModifiedDate":"2021-10-22"},{"lineNumber":101,"author":{"gitId":"justinfidelis"},"content":"        String commandTypeString \u003d EMPTY_STRING;","lastModifiedDate":"2021-10-22"},{"lineNumber":102,"author":{"gitId":"justinfidelis"},"content":"        try {","lastModifiedDate":"2021-10-22"},{"lineNumber":103,"author":{"gitId":"justinfidelis"},"content":"            commandTypeString \u003d userInput.substring(4).strip();","lastModifiedDate":"2021-10-22"},{"lineNumber":104,"author":{"gitId":"justinfidelis"},"content":"        } catch (IndexOutOfBoundsException ie) {","lastModifiedDate":"2021-10-22"},{"lineNumber":105,"author":{"gitId":"jushg"},"content":"            return new HelpCommand(getViewType());","lastModifiedDate":"2021-10-22"},{"lineNumber":106,"author":{"gitId":"justinfidelis"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":107,"author":{"gitId":"justinfidelis"},"content":"        if (commandTypeString.equals(EMPTY_STRING)) {","lastModifiedDate":"2021-10-22"},{"lineNumber":108,"author":{"gitId":"jushg"},"content":"            return new HelpCommand(getViewType());","lastModifiedDate":"2021-10-22"},{"lineNumber":109,"author":{"gitId":"justinfidelis"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":110,"author":{"gitId":"justinfidelis"},"content":"        CommandType commandType \u003d parseHelpCommandType(commandTypeString);","lastModifiedDate":"2021-10-22"},{"lineNumber":111,"author":{"gitId":"justinfidelis"},"content":"        return new HelpCommand(getViewType(),commandType);","lastModifiedDate":"2021-10-25"},{"lineNumber":112,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":113,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":114,"author":{"gitId":"justinfidelis"},"content":"    private static CommandType parseHelpCommandType(String commandTypeString) throws MedBotParserException {","lastModifiedDate":"2021-10-22"},{"lineNumber":115,"author":{"gitId":"justinfidelis"},"content":"        switch (commandTypeString) {","lastModifiedDate":"2021-10-22"},{"lineNumber":116,"author":{"gitId":"justinfidelis"},"content":"        case COMMAND_ADD:","lastModifiedDate":"2021-10-22"},{"lineNumber":117,"author":{"gitId":"jushg"},"content":"            return CommandType.ADD;","lastModifiedDate":"2021-10-22"},{"lineNumber":118,"author":{"gitId":"justinfidelis"},"content":"        case COMMAND_DELETE:","lastModifiedDate":"2021-10-22"},{"lineNumber":119,"author":{"gitId":"jushg"},"content":"            return CommandType.DELETE;","lastModifiedDate":"2021-10-22"},{"lineNumber":120,"author":{"gitId":"justinfidelis"},"content":"        case COMMAND_EDIT:","lastModifiedDate":"2021-10-22"},{"lineNumber":121,"author":{"gitId":"jushg"},"content":"            return CommandType.EDIT;","lastModifiedDate":"2021-10-22"},{"lineNumber":122,"author":{"gitId":"justinfidelis"},"content":"        case COMMAND_EXIT:","lastModifiedDate":"2021-10-22"},{"lineNumber":123,"author":{"gitId":"justinfidelis"},"content":"            return CommandType.EXIT;","lastModifiedDate":"2021-10-22"},{"lineNumber":124,"author":{"gitId":"justinfidelis"},"content":"        case COMMAND_HELP:","lastModifiedDate":"2021-10-22"},{"lineNumber":125,"author":{"gitId":"justinfidelis"},"content":"            return CommandType.HELP;","lastModifiedDate":"2021-10-22"},{"lineNumber":126,"author":{"gitId":"justinfidelis"},"content":"        case COMMAND_LIST:","lastModifiedDate":"2021-10-22"},{"lineNumber":127,"author":{"gitId":"jushg"},"content":"            return CommandType.LIST;","lastModifiedDate":"2021-10-22"},{"lineNumber":128,"author":{"gitId":"justinfidelis"},"content":"        case COMMAND_SWITCH:","lastModifiedDate":"2021-10-22"},{"lineNumber":129,"author":{"gitId":"justinfidelis"},"content":"            return CommandType.SWITCH;","lastModifiedDate":"2021-10-22"},{"lineNumber":130,"author":{"gitId":"justinfidelis"},"content":"        case COMMAND_VIEW:","lastModifiedDate":"2021-10-22"},{"lineNumber":131,"author":{"gitId":"jushg"},"content":"            return CommandType.VIEW;","lastModifiedDate":"2021-10-22"},{"lineNumber":132,"author":{"gitId":"justinfidelis"},"content":"        case COMMAND_FIND:","lastModifiedDate":"2021-10-22"},{"lineNumber":133,"author":{"gitId":"jushg"},"content":"            return CommandType.FIND;","lastModifiedDate":"2021-10-22"},{"lineNumber":134,"author":{"gitId":"EricBryann"},"content":"        case COMMAND_ARCHIVE:","lastModifiedDate":"2021-10-25"},{"lineNumber":135,"author":{"gitId":"EricBryann"},"content":"            return CommandType.ARCHIVE;","lastModifiedDate":"2021-10-25"},{"lineNumber":136,"author":{"gitId":"EricBryann"},"content":"        case COMMAND_UNARCHIVE:","lastModifiedDate":"2021-10-25"},{"lineNumber":137,"author":{"gitId":"EricBryann"},"content":"            return CommandType.UNARCHIVE;","lastModifiedDate":"2021-10-25"},{"lineNumber":138,"author":{"gitId":"justinfidelis"},"content":"        default:","lastModifiedDate":"2021-10-22"},{"lineNumber":139,"author":{"gitId":"justinfidelis"},"content":"            throw new MedBotParserException(ERROR_WRONG_COMMAND);","lastModifiedDate":"2021-10-22"},{"lineNumber":140,"author":{"gitId":"justinfidelis"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":141,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":142,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":143,"author":{"gitId":"justinfidelis"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":144,"author":{"gitId":"justinfidelis"},"content":"     * Processes user input and returns a SwitchCommand.","lastModifiedDate":"2021-10-22"},{"lineNumber":145,"author":{"gitId":"justinfidelis"},"content":"     *","lastModifiedDate":"2021-10-22"},{"lineNumber":146,"author":{"gitId":"justinfidelis"},"content":"     * \u003cp\u003eIf view type is specified, returns a switch command with that new view type. If not, returns","lastModifiedDate":"2021-10-22"},{"lineNumber":147,"author":{"gitId":"justinfidelis"},"content":"     * a switch command that iterates through the various views.","lastModifiedDate":"2021-10-22"},{"lineNumber":148,"author":{"gitId":"justinfidelis"},"content":"     *","lastModifiedDate":"2021-10-22"},{"lineNumber":149,"author":{"gitId":"justinfidelis"},"content":"     * @param userInput String containing the full user input.","lastModifiedDate":"2021-10-22"},{"lineNumber":150,"author":{"gitId":"justinfidelis"},"content":"     * @return SwitchCommand with the new view type if specified","lastModifiedDate":"2021-10-22"},{"lineNumber":151,"author":{"gitId":"justinfidelis"},"content":"     * @throws MedBotParserException if an invalid view type code is specified","lastModifiedDate":"2021-10-22"},{"lineNumber":152,"author":{"gitId":"justinfidelis"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":153,"author":{"gitId":"justinfidelis"},"content":"    private static SwitchCommand parseSwitchCommand(String userInput) throws MedBotParserException {","lastModifiedDate":"2021-10-22"},{"lineNumber":154,"author":{"gitId":"justinfidelis"},"content":"        String newType;","lastModifiedDate":"2021-10-22"},{"lineNumber":155,"author":{"gitId":"justinfidelis"},"content":"        try {","lastModifiedDate":"2021-10-22"},{"lineNumber":156,"author":{"gitId":"justinfidelis"},"content":"            newType \u003d userInput.substring(6).strip();","lastModifiedDate":"2021-10-22"},{"lineNumber":157,"author":{"gitId":"justinfidelis"},"content":"        } catch (IndexOutOfBoundsException ie) {","lastModifiedDate":"2021-10-22"},{"lineNumber":158,"author":{"gitId":"justinfidelis"},"content":"            newType \u003d EMPTY_STRING;","lastModifiedDate":"2021-10-22"},{"lineNumber":159,"author":{"gitId":"justinfidelis"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":160,"author":{"gitId":"justinfidelis"},"content":"        switch (newType) {","lastModifiedDate":"2021-10-22"},{"lineNumber":161,"author":{"gitId":"justinfidelis"},"content":"        case EMPTY_STRING:","lastModifiedDate":"2021-10-22"},{"lineNumber":162,"author":{"gitId":"justinfidelis"},"content":"            return new SwitchCommand(ViewType.getNextView(viewType));","lastModifiedDate":"2021-10-22"},{"lineNumber":163,"author":{"gitId":"justinfidelis"},"content":"        case VIEW_TYPE_PATIENT_VIEW:","lastModifiedDate":"2021-10-22"},{"lineNumber":164,"author":{"gitId":"justinfidelis"},"content":"        case VIEW_TYPE_PATIENT_VIEW_ALT:","lastModifiedDate":"2021-10-22"},{"lineNumber":165,"author":{"gitId":"justinfidelis"},"content":"            return new SwitchCommand(ViewType.PATIENT_INFO);","lastModifiedDate":"2021-10-22"},{"lineNumber":166,"author":{"gitId":"justinfidelis"},"content":"        case VIEW_TYPE_MEDICAL_STAFF_VIEW:","lastModifiedDate":"2021-10-22"},{"lineNumber":167,"author":{"gitId":"justinfidelis"},"content":"        case VIEW_TYPE_MEDICAL_STAFF_VIEW_ALT:","lastModifiedDate":"2021-10-22"},{"lineNumber":168,"author":{"gitId":"justinfidelis"},"content":"            return new SwitchCommand(ViewType.MEDICAL_STAFF_INFO);","lastModifiedDate":"2021-10-22"},{"lineNumber":169,"author":{"gitId":"justinfidelis"},"content":"        case VIEW_TYPE_SCHEDULER_VIEW:","lastModifiedDate":"2021-10-22"},{"lineNumber":170,"author":{"gitId":"justinfidelis"},"content":"        case VIEW_TYPE_SCHEDULER_VIEW_ALT:","lastModifiedDate":"2021-10-22"},{"lineNumber":171,"author":{"gitId":"justinfidelis"},"content":"            return new SwitchCommand(ViewType.SCHEDULER);","lastModifiedDate":"2021-10-22"},{"lineNumber":172,"author":{"gitId":"justinfidelis"},"content":"        default:","lastModifiedDate":"2021-10-22"},{"lineNumber":173,"author":{"gitId":"justinfidelis"},"content":"            throw new MedBotParserException(ERROR_INVALID_VIEW_TYPE);","lastModifiedDate":"2021-10-22"},{"lineNumber":174,"author":{"gitId":"justinfidelis"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":175,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":176,"author":{"gitId":"justinfidelis"},"content":"}","lastModifiedDate":"2021-10-22"}],"authorContributionMap":{"justinfidelis":149,"jushg":19,"EricBryann":7,"Kureans":1}},{"path":"src/main/java/medbot/parser/ParserUtils.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"justinfidelis"},"content":"package medbot.parser;","lastModifiedDate":"2021-10-22"},{"lineNumber":2,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":3,"author":{"gitId":"EricBryann"},"content":"import medbot.Appointment;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"EricBryann"},"content":"import medbot.exceptions.MedBotParserException;","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"EricBryann"},"content":"import medbot.person.Person;","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"EricBryann"},"content":"import medbot.person.PersonType;","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"EricBryann"},"content":"import medbot.utilities.FilterType;","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"justinfidelis"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-10-22"},{"lineNumber":10,"author":{"gitId":"justinfidelis"},"content":"import java.time.ZoneOffset;","lastModifiedDate":"2021-10-22"},{"lineNumber":11,"author":{"gitId":"justinfidelis"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-10-22"},{"lineNumber":12,"author":{"gitId":"justinfidelis"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"justinfidelis"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"Kureans"},"content":"import java.util.List;","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"justinfidelis"},"content":"import java.util.function.Function;","lastModifiedDate":"2021-10-22"},{"lineNumber":16,"author":{"gitId":"justinfidelis"},"content":"import java.util.regex.MatchResult;","lastModifiedDate":"2021-10-22"},{"lineNumber":17,"author":{"gitId":"justinfidelis"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2021-10-22"},{"lineNumber":18,"author":{"gitId":"justinfidelis"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2021-10-22"},{"lineNumber":19,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"justinfidelis"},"content":"import medbot.Appointment;","lastModifiedDate":"2021-10-22"},{"lineNumber":22,"author":{"gitId":"justinfidelis"},"content":"import medbot.exceptions.MedBotException;","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"justinfidelis"},"content":"import medbot.exceptions.MedBotParserException;","lastModifiedDate":"2021-10-22"},{"lineNumber":24,"author":{"gitId":"justinfidelis"},"content":"import medbot.person.Person;","lastModifiedDate":"2021-10-22"},{"lineNumber":25,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":26,"author":{"gitId":"Kureans"},"content":"import static java.util.stream.Collectors.toList;","lastModifiedDate":"2021-10-25"},{"lineNumber":27,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":28,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"justinfidelis"},"content":"public abstract class ParserUtils {","lastModifiedDate":"2021-10-22"},{"lineNumber":30,"author":{"gitId":"justinfidelis"},"content":"    private static final String END_LINE \u003d System.lineSeparator();","lastModifiedDate":"2021-10-22"},{"lineNumber":31,"author":{"gitId":"EricBryann"},"content":"    private static final String PARAMETER_ARCHIVE \u003d \"-ar\";","lastModifiedDate":"2021-10-25"},{"lineNumber":32,"author":{"gitId":"justinfidelis"},"content":"    private static final String PARAMETER_NAME \u003d \"n/\";","lastModifiedDate":"2021-10-22"},{"lineNumber":33,"author":{"gitId":"justinfidelis"},"content":"    private static final String PARAMETER_PHONE \u003d \"p/\";","lastModifiedDate":"2021-10-22"},{"lineNumber":34,"author":{"gitId":"Kureans"},"content":"    private static final String PARAMETER_PATIENT \u003d \"p/\";","lastModifiedDate":"2021-10-25"},{"lineNumber":35,"author":{"gitId":"Kureans"},"content":"    private static final String PARAMETER_STAFF \u003d \"s/\";","lastModifiedDate":"2021-10-25"},{"lineNumber":36,"author":{"gitId":"justinfidelis"},"content":"    private static final String PARAMETER_EMAIL \u003d \"e/\";","lastModifiedDate":"2021-10-22"},{"lineNumber":37,"author":{"gitId":"justinfidelis"},"content":"    private static final String PARAMETER_IC \u003d \"i/\";","lastModifiedDate":"2021-10-22"},{"lineNumber":38,"author":{"gitId":"justinfidelis"},"content":"    private static final String PARAMETER_ADDRESS \u003d \"a/\";","lastModifiedDate":"2021-10-22"},{"lineNumber":39,"author":{"gitId":"Kureans"},"content":"    private static final String PARAMETER_BEFORE \u003d \"b/\";","lastModifiedDate":"2021-10-25"},{"lineNumber":40,"author":{"gitId":"Kureans"},"content":"    private static final String PARAMETER_AFTER \u003d \"a/\";","lastModifiedDate":"2021-10-25"},{"lineNumber":41,"author":{"gitId":"justinfidelis"},"content":"    private static final int PARAMETER_BUFFER \u003d 2;","lastModifiedDate":"2021-10-22"},{"lineNumber":42,"author":{"gitId":"justinfidelis"},"content":"    private static final String PARAMETER_APPOINTMENT_PATIENT_ID \u003d \"p/\";","lastModifiedDate":"2021-10-22"},{"lineNumber":43,"author":{"gitId":"justinfidelis"},"content":"    private static final String PARAMETER_APPOINTMENT_MEDICAL_STAFF_ID \u003d \"s/\";","lastModifiedDate":"2021-10-25"},{"lineNumber":44,"author":{"gitId":"justinfidelis"},"content":"    private static final String PARAMETER_APPOINTMENT_DATE_TIME \u003d \"d/\";","lastModifiedDate":"2021-10-25"},{"lineNumber":45,"author":{"gitId":"justinfidelis"},"content":"    private static final String ERROR_INVALID_PARAM_SPECIFIER \u003d \"\\\"%s\\\" is not a valid attribute specifier\";","lastModifiedDate":"2021-10-24"},{"lineNumber":46,"author":{"gitId":"justinfidelis"},"content":"    private static final String ERROR_NO_PARAMETER \u003d \"No parameters given\";","lastModifiedDate":"2021-10-24"},{"lineNumber":47,"author":{"gitId":"justinfidelis"},"content":"    private static final String ERROR_ID_NOT_SPECIFIED \u003d \"ID not specified or not a number.\";","lastModifiedDate":"2021-10-24"},{"lineNumber":48,"author":{"gitId":"Kureans"},"content":"    private static final String ERROR_PERSON_TYPE_NOT_SPECIFIED \u003d \"Person type not specified.\";","lastModifiedDate":"2021-10-25"},{"lineNumber":49,"author":{"gitId":"Kureans"},"content":"    private static final String ERROR_PERSON_TYPE_INVALID \u003d \"Person type specified is not valid.\";","lastModifiedDate":"2021-10-25"},{"lineNumber":50,"author":{"gitId":"Kureans"},"content":"    private static final String ERROR_FILTER_TYPE_INVALID \u003d \"Filter type specified is not valid.\";","lastModifiedDate":"2021-10-25"},{"lineNumber":51,"author":{"gitId":"EricBryann"},"content":"    private static final String ERROR_PARAMETER_TYPE_INVALID \u003d \"Parameter type specified is not valid.\";","lastModifiedDate":"2021-10-25"},{"lineNumber":52,"author":{"gitId":"justinfidelis"},"content":"    private static final String ERROR_NAME_NOT_SPECIFIED \u003d \"Name not specified.\";","lastModifiedDate":"2021-10-24"},{"lineNumber":53,"author":{"gitId":"justinfidelis"},"content":"    private static final String ERROR_IC_NUMBER_NOT_SPECIFIED \u003d \"IC number not specified.\";","lastModifiedDate":"2021-10-24"},{"lineNumber":54,"author":{"gitId":"justinfidelis"},"content":"    private static final String ERROR_IC_NUMBER_INCORRECT_FORMAT \u003d \"Incorrect IC number format.\";","lastModifiedDate":"2021-10-24"},{"lineNumber":55,"author":{"gitId":"justinfidelis"},"content":"    private static final String ERROR_PHONE_NUMBER_NOT_SPECIFIED \u003d \"Phone number not specified.\";","lastModifiedDate":"2021-10-24"},{"lineNumber":56,"author":{"gitId":"justinfidelis"},"content":"    private static final String ERROR_PHONE_NUMBER_TOO_FEW_DIGITS \u003d \"Phone number has too few digits.\";","lastModifiedDate":"2021-10-24"},{"lineNumber":57,"author":{"gitId":"justinfidelis"},"content":"    private static final String ERROR_PHONE_NUMBER_TOO_MANY_DIGITS \u003d \"Phone number has too many digits.\";","lastModifiedDate":"2021-10-24"},{"lineNumber":58,"author":{"gitId":"justinfidelis"},"content":"    private static final String ERROR_PHONE_NUMBER_UNEXPECTED_CHARS \u003d \"Phone number contains unexpected characters.\";","lastModifiedDate":"2021-10-24"},{"lineNumber":59,"author":{"gitId":"justinfidelis"},"content":"    private static final String ERROR_EMAIL_ADDRESS_NOT_SPECIFIED \u003d \"Email address not specified.\";","lastModifiedDate":"2021-10-24"},{"lineNumber":60,"author":{"gitId":"justinfidelis"},"content":"    private static final String ERROR_EMAIL_ADDRESS_WRONG_FORMAT \u003d \"\" + \"Incorrect email address format.\";","lastModifiedDate":"2021-10-24"},{"lineNumber":61,"author":{"gitId":"justinfidelis"},"content":"    private static final String ERROR_ADDRESS_NOT_SPECIFIED \u003d \"Address not specified.\";","lastModifiedDate":"2021-10-24"},{"lineNumber":62,"author":{"gitId":"justinfidelis"},"content":"    private static final String ERROR_DATE_TIME_WRONG_FORMAT \u003d \"Incorrect Date/Time format.\";","lastModifiedDate":"2021-10-24"},{"lineNumber":63,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":64,"author":{"gitId":"justinfidelis"},"content":"    private static final String REGEX_VERTICAL_LINE \u003d \"\\\\|\";","lastModifiedDate":"2021-10-22"},{"lineNumber":65,"author":{"gitId":"justinfidelis"},"content":"    private static final String REGEX_INPUT_PARAMETER \u003d \"[a-zA-Z]/\";","lastModifiedDate":"2021-10-24"},{"lineNumber":66,"author":{"gitId":"justinfidelis"},"content":"    private static final String REGEX_EMAIL \u003d \"(([a-zA-Z0-9][\\\\w-.]*[a-zA-Z0-9])|[a-zA-Z0-9])@([\\\\w]+\\\\.)+[\\\\w]+\";","lastModifiedDate":"2021-10-22"},{"lineNumber":67,"author":{"gitId":"justinfidelis"},"content":"    private static final String REGEX_IC \u003d \"[STFGM][0-9]{7}[A-Z]\";","lastModifiedDate":"2021-10-22"},{"lineNumber":68,"author":{"gitId":"justinfidelis"},"content":"    private static final String REGEX_PHONE_NUMBER \u003d \"[\\\\d]{8}\";","lastModifiedDate":"2021-10-22"},{"lineNumber":69,"author":{"gitId":"justinfidelis"},"content":"    private static final String REGEX_PHONE_NUMBER_SEPARATOR \u003d \"[- _+()]\";","lastModifiedDate":"2021-10-22"},{"lineNumber":70,"author":{"gitId":"justinfidelis"},"content":"    private static final String REGEX_ID \u003d \"([0-9]+$)|([0-9]+ )\";","lastModifiedDate":"2021-10-24"},{"lineNumber":71,"author":{"gitId":"justinfidelis"},"content":"    private static final String REGEX_CAPITALISE_POSITION \u003d \"(\\\\A|[ _-])[a-z]\";","lastModifiedDate":"2021-10-22"},{"lineNumber":72,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":73,"author":{"gitId":"justinfidelis"},"content":"    private static final String VERTICAL_LINE \u003d \"|\";","lastModifiedDate":"2021-10-22"},{"lineNumber":74,"author":{"gitId":"justinfidelis"},"content":"    private static final String SEPARATOR_SPACE \u003d \" \";","lastModifiedDate":"2021-10-22"},{"lineNumber":75,"author":{"gitId":"justinfidelis"},"content":"    private static final String EMPTY_STRING \u003d \"\";","lastModifiedDate":"2021-10-22"},{"lineNumber":76,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":77,"author":{"gitId":"justinfidelis"},"content":"    private static final String DATE_TIME_FORMATTER_PATTERN \u003d \"ddMMyy HHmm\";","lastModifiedDate":"2021-10-25"},{"lineNumber":78,"author":{"gitId":"justinfidelis"},"content":"    private static final ZoneOffset ZONE_OFFSET \u003d ZoneOffset.ofHours(8);","lastModifiedDate":"2021-10-25"},{"lineNumber":79,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":80,"author":{"gitId":"justinfidelis"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":81,"author":{"gitId":"justinfidelis"},"content":"     * Parses attributeStrings array and modifies all the corresponding attribute in appointment.","lastModifiedDate":"2021-10-22"},{"lineNumber":82,"author":{"gitId":"justinfidelis"},"content":"     *","lastModifiedDate":"2021-10-22"},{"lineNumber":83,"author":{"gitId":"justinfidelis"},"content":"     * @param appointment      Appointment whose information will be updated","lastModifiedDate":"2021-10-22"},{"lineNumber":84,"author":{"gitId":"justinfidelis"},"content":"     * @param attributeStrings String Array containing Strings of an attribute specifier and the corresponding","lastModifiedDate":"2021-10-22"},{"lineNumber":85,"author":{"gitId":"justinfidelis"},"content":"     *                         appointment information","lastModifiedDate":"2021-10-22"},{"lineNumber":86,"author":{"gitId":"justinfidelis"},"content":"     * @throws MedBotParserException if the attributeString contains missing/invalid information","lastModifiedDate":"2021-10-22"},{"lineNumber":87,"author":{"gitId":"justinfidelis"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":88,"author":{"gitId":"justinfidelis"},"content":"    static void updateMultipleAppointmentInformation(Appointment appointment, String[] attributeStrings)","lastModifiedDate":"2021-10-22"},{"lineNumber":89,"author":{"gitId":"justinfidelis"},"content":"            throws MedBotParserException {","lastModifiedDate":"2021-10-22"},{"lineNumber":90,"author":{"gitId":"justinfidelis"},"content":"        for (String attributeString : attributeStrings) {","lastModifiedDate":"2021-10-22"},{"lineNumber":91,"author":{"gitId":"justinfidelis"},"content":"            updateAppointmentInformation(appointment, attributeString);","lastModifiedDate":"2021-10-22"},{"lineNumber":92,"author":{"gitId":"justinfidelis"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":93,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":94,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":95,"author":{"gitId":"justinfidelis"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":96,"author":{"gitId":"justinfidelis"},"content":"     * Parses attributeString and modifies the corresponding attribute in appointment.","lastModifiedDate":"2021-10-22"},{"lineNumber":97,"author":{"gitId":"justinfidelis"},"content":"     *","lastModifiedDate":"2021-10-22"},{"lineNumber":98,"author":{"gitId":"justinfidelis"},"content":"     * @param appointment     Appointment whose information will be updated","lastModifiedDate":"2021-10-22"},{"lineNumber":99,"author":{"gitId":"justinfidelis"},"content":"     * @param attributeString String containing an attribute specifier and the corresponding appointment information","lastModifiedDate":"2021-10-22"},{"lineNumber":100,"author":{"gitId":"justinfidelis"},"content":"     * @throws MedBotParserException if the attributeString contains missing/invalid information","lastModifiedDate":"2021-10-22"},{"lineNumber":101,"author":{"gitId":"justinfidelis"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":102,"author":{"gitId":"CrimsonTitan79"},"content":"    public static void updateAppointmentInformation(Appointment appointment, String attributeString)","lastModifiedDate":"2021-10-25"},{"lineNumber":103,"author":{"gitId":"justinfidelis"},"content":"            throws MedBotParserException {","lastModifiedDate":"2021-10-22"},{"lineNumber":104,"author":{"gitId":"justinfidelis"},"content":"        if (attributeString.startsWith(PARAMETER_APPOINTMENT_PATIENT_ID)) {","lastModifiedDate":"2021-10-22"},{"lineNumber":105,"author":{"gitId":"justinfidelis"},"content":"            int patientId \u003d parseId(attributeString.substring(PARAMETER_BUFFER));","lastModifiedDate":"2021-10-22"},{"lineNumber":106,"author":{"gitId":"justinfidelis"},"content":"            appointment.setPatientId(patientId);","lastModifiedDate":"2021-10-22"},{"lineNumber":107,"author":{"gitId":"justinfidelis"},"content":"            return;","lastModifiedDate":"2021-10-22"},{"lineNumber":108,"author":{"gitId":"justinfidelis"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":109,"author":{"gitId":"justinfidelis"},"content":"        if (attributeString.startsWith(PARAMETER_APPOINTMENT_MEDICAL_STAFF_ID)) {","lastModifiedDate":"2021-10-25"},{"lineNumber":110,"author":{"gitId":"justinfidelis"},"content":"            int medicalStaffId \u003d parseId(attributeString.substring(PARAMETER_BUFFER));","lastModifiedDate":"2021-10-22"},{"lineNumber":111,"author":{"gitId":"justinfidelis"},"content":"            appointment.setMedicalStaffId(medicalStaffId);","lastModifiedDate":"2021-10-22"},{"lineNumber":112,"author":{"gitId":"justinfidelis"},"content":"            return;","lastModifiedDate":"2021-10-22"},{"lineNumber":113,"author":{"gitId":"justinfidelis"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":114,"author":{"gitId":"justinfidelis"},"content":"        if (attributeString.startsWith(PARAMETER_APPOINTMENT_DATE_TIME)) {","lastModifiedDate":"2021-10-25"},{"lineNumber":115,"author":{"gitId":"justinfidelis"},"content":"            int dateTimeCode \u003d parseDateTime(attributeString.substring(PARAMETER_BUFFER).strip());","lastModifiedDate":"2021-10-22"},{"lineNumber":116,"author":{"gitId":"justinfidelis"},"content":"            appointment.setDateTimeCode(dateTimeCode);","lastModifiedDate":"2021-10-22"},{"lineNumber":117,"author":{"gitId":"justinfidelis"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":118,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":119,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":120,"author":{"gitId":"justinfidelis"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":121,"author":{"gitId":"justinfidelis"},"content":"     * Parses user input and separates it into a list of Strings containing the given parameters.","lastModifiedDate":"2021-10-22"},{"lineNumber":122,"author":{"gitId":"justinfidelis"},"content":"     *","lastModifiedDate":"2021-10-22"},{"lineNumber":123,"author":{"gitId":"justinfidelis"},"content":"     * @param userInput String containing the full user input.","lastModifiedDate":"2021-10-22"},{"lineNumber":124,"author":{"gitId":"justinfidelis"},"content":"     * @return list of parameters given by user.","lastModifiedDate":"2021-10-22"},{"lineNumber":125,"author":{"gitId":"justinfidelis"},"content":"     * @throws MedBotParserException when no parameters are specified.","lastModifiedDate":"2021-10-22"},{"lineNumber":126,"author":{"gitId":"justinfidelis"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":127,"author":{"gitId":"justinfidelis"},"content":"    static String[] getParameters(String userInput) throws MedBotParserException {","lastModifiedDate":"2021-10-22"},{"lineNumber":128,"author":{"gitId":"justinfidelis"},"content":"        String processedInput \u003d preprocessMultiAttributeInput(userInput);","lastModifiedDate":"2021-10-22"},{"lineNumber":129,"author":{"gitId":"justinfidelis"},"content":"        String[] words \u003d processedInput.split(REGEX_VERTICAL_LINE);","lastModifiedDate":"2021-10-22"},{"lineNumber":130,"author":{"gitId":"justinfidelis"},"content":"        if (words.length \u003d\u003d 1) {","lastModifiedDate":"2021-10-22"},{"lineNumber":131,"author":{"gitId":"justinfidelis"},"content":"            throw new MedBotParserException(ERROR_NO_PARAMETER);","lastModifiedDate":"2021-10-22"},{"lineNumber":132,"author":{"gitId":"justinfidelis"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":133,"author":{"gitId":"justinfidelis"},"content":"        assert words.length \u003e 1;","lastModifiedDate":"2021-10-22"},{"lineNumber":134,"author":{"gitId":"justinfidelis"},"content":"        String[] parameters \u003d Arrays.copyOfRange(words, 1, words.length);","lastModifiedDate":"2021-10-22"},{"lineNumber":135,"author":{"gitId":"justinfidelis"},"content":"        assert parameters.length \u003e\u003d 1;","lastModifiedDate":"2021-10-22"},{"lineNumber":136,"author":{"gitId":"justinfidelis"},"content":"        return parameters;","lastModifiedDate":"2021-10-22"},{"lineNumber":137,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":138,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":139,"author":{"gitId":"Kureans"},"content":"    static List\u003cString\u003e getParametersWithoutSpecifiers(String userInput) throws MedBotParserException {","lastModifiedDate":"2021-10-25"},{"lineNumber":140,"author":{"gitId":"Kureans"},"content":"        String processedInput \u003d preprocessMultiAttributeInput(userInput);","lastModifiedDate":"2021-10-25"},{"lineNumber":141,"author":{"gitId":"Kureans"},"content":"        String[] words \u003d processedInput.split(REGEX_VERTICAL_LINE);","lastModifiedDate":"2021-10-25"},{"lineNumber":142,"author":{"gitId":"Kureans"},"content":"        if (words.length \u003d\u003d 1) {","lastModifiedDate":"2021-10-25"},{"lineNumber":143,"author":{"gitId":"Kureans"},"content":"            throw new MedBotParserException(ERROR_NO_PARAMETER);","lastModifiedDate":"2021-10-25"},{"lineNumber":144,"author":{"gitId":"Kureans"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":145,"author":{"gitId":"Kureans"},"content":"        assert words.length \u003e 1;","lastModifiedDate":"2021-10-25"},{"lineNumber":146,"author":{"gitId":"Kureans"},"content":"        String[] parameters \u003d Arrays.copyOfRange(words, 1, words.length);","lastModifiedDate":"2021-10-25"},{"lineNumber":147,"author":{"gitId":"Kureans"},"content":"        List\u003cString\u003e p \u003d Arrays.asList(parameters);","lastModifiedDate":"2021-10-25"},{"lineNumber":148,"author":{"gitId":"Kureans"},"content":"        assert parameters.length \u003e\u003d 1;","lastModifiedDate":"2021-10-25"},{"lineNumber":149,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":150,"author":{"gitId":"justinfidelis"},"content":"        return p.stream()","lastModifiedDate":"2021-10-25"},{"lineNumber":151,"author":{"gitId":"Kureans"},"content":"                .map(s -\u003e s.substring(PARAMETER_BUFFER))","lastModifiedDate":"2021-10-25"},{"lineNumber":152,"author":{"gitId":"Kureans"},"content":"                .collect(toList());","lastModifiedDate":"2021-10-25"},{"lineNumber":153,"author":{"gitId":"Kureans"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":154,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":155,"author":{"gitId":"Kureans"},"content":"    static String[] getSpecifiers(String userInput) throws MedBotParserException {","lastModifiedDate":"2021-10-25"},{"lineNumber":156,"author":{"gitId":"Kureans"},"content":"        Pattern pattern \u003d Pattern.compile(REGEX_INPUT_PARAMETER);","lastModifiedDate":"2021-10-25"},{"lineNumber":157,"author":{"gitId":"Kureans"},"content":"        Matcher matcher \u003d pattern.matcher(userInput);","lastModifiedDate":"2021-10-25"},{"lineNumber":158,"author":{"gitId":"Kureans"},"content":"        String[] specifiers \u003d new String[2];","lastModifiedDate":"2021-10-25"},{"lineNumber":159,"author":{"gitId":"Kureans"},"content":"        int i \u003d 0;","lastModifiedDate":"2021-10-25"},{"lineNumber":160,"author":{"gitId":"Kureans"},"content":"        try {","lastModifiedDate":"2021-10-25"},{"lineNumber":161,"author":{"gitId":"Kureans"},"content":"            while (matcher.find()) {","lastModifiedDate":"2021-10-25"},{"lineNumber":162,"author":{"gitId":"Kureans"},"content":"                specifiers[i] \u003d matcher.group();","lastModifiedDate":"2021-10-25"},{"lineNumber":163,"author":{"gitId":"Kureans"},"content":"                i++;","lastModifiedDate":"2021-10-25"},{"lineNumber":164,"author":{"gitId":"Kureans"},"content":"            }","lastModifiedDate":"2021-10-25"},{"lineNumber":165,"author":{"gitId":"Kureans"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2021-10-25"},{"lineNumber":166,"author":{"gitId":"Kureans"},"content":"            throw new MedBotParserException(\"Too many attribute specifiers.\");","lastModifiedDate":"2021-10-26"},{"lineNumber":167,"author":{"gitId":"Kureans"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":168,"author":{"gitId":"Kureans"},"content":"        //update exception handling ltr","lastModifiedDate":"2021-10-25"},{"lineNumber":169,"author":{"gitId":"Kureans"},"content":"        return specifiers;","lastModifiedDate":"2021-10-25"},{"lineNumber":170,"author":{"gitId":"Kureans"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":171,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":172,"author":{"gitId":"justinfidelis"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":173,"author":{"gitId":"justinfidelis"},"content":"     * Preprocesses user input to remove invalid substring that can not be parsed.","lastModifiedDate":"2021-10-22"},{"lineNumber":174,"author":{"gitId":"justinfidelis"},"content":"     *","lastModifiedDate":"2021-10-22"},{"lineNumber":175,"author":{"gitId":"justinfidelis"},"content":"     * @param userInput The initial user input.","lastModifiedDate":"2021-10-22"},{"lineNumber":176,"author":{"gitId":"justinfidelis"},"content":"     * @return user input without leading white space and vertical lines present.","lastModifiedDate":"2021-10-22"},{"lineNumber":177,"author":{"gitId":"justinfidelis"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":178,"author":{"gitId":"justinfidelis"},"content":"    static String preprocessInput(String userInput) {","lastModifiedDate":"2021-10-22"},{"lineNumber":179,"author":{"gitId":"justinfidelis"},"content":"        return userInput.strip().replace(VERTICAL_LINE, EMPTY_STRING);","lastModifiedDate":"2021-10-22"},{"lineNumber":180,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":181,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":182,"author":{"gitId":"justinfidelis"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":183,"author":{"gitId":"justinfidelis"},"content":"     * Parses attributeStrings array and modifies all the corresponding attribute in person.","lastModifiedDate":"2021-10-22"},{"lineNumber":184,"author":{"gitId":"justinfidelis"},"content":"     *","lastModifiedDate":"2021-10-22"},{"lineNumber":185,"author":{"gitId":"justinfidelis"},"content":"     * @param person           Person whose personal information will be updated","lastModifiedDate":"2021-10-22"},{"lineNumber":186,"author":{"gitId":"justinfidelis"},"content":"     * @param attributeStrings String Array containing Strings of an attribute specifier and the corresponding","lastModifiedDate":"2021-10-22"},{"lineNumber":187,"author":{"gitId":"justinfidelis"},"content":"     *                         personal information","lastModifiedDate":"2021-10-22"},{"lineNumber":188,"author":{"gitId":"justinfidelis"},"content":"     * @throws MedBotParserException if the attributeString contains missing/invalid information","lastModifiedDate":"2021-10-22"},{"lineNumber":189,"author":{"gitId":"justinfidelis"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":190,"author":{"gitId":"justinfidelis"},"content":"    static void updateMultiplePersonalInformation(Person person, String[] attributeStrings)","lastModifiedDate":"2021-10-22"},{"lineNumber":191,"author":{"gitId":"justinfidelis"},"content":"            throws MedBotParserException {","lastModifiedDate":"2021-10-22"},{"lineNumber":192,"author":{"gitId":"justinfidelis"},"content":"        for (String attributeString : attributeStrings) {","lastModifiedDate":"2021-10-22"},{"lineNumber":193,"author":{"gitId":"justinfidelis"},"content":"            updatePersonalInformation(person, attributeString);","lastModifiedDate":"2021-10-22"},{"lineNumber":194,"author":{"gitId":"justinfidelis"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":195,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":196,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":197,"author":{"gitId":"justinfidelis"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":198,"author":{"gitId":"justinfidelis"},"content":"     * Parses attributeString and modifies the corresponding attribute in person.","lastModifiedDate":"2021-10-22"},{"lineNumber":199,"author":{"gitId":"justinfidelis"},"content":"     *","lastModifiedDate":"2021-10-22"},{"lineNumber":200,"author":{"gitId":"justinfidelis"},"content":"     * @param person          Person whose personal information will be updated","lastModifiedDate":"2021-10-22"},{"lineNumber":201,"author":{"gitId":"justinfidelis"},"content":"     * @param attributeString String containing an attribute specifier and the corresponding personal information","lastModifiedDate":"2021-10-22"},{"lineNumber":202,"author":{"gitId":"justinfidelis"},"content":"     * @throws MedBotParserException if the attributeString contains missing/invalid information","lastModifiedDate":"2021-10-22"},{"lineNumber":203,"author":{"gitId":"justinfidelis"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":204,"author":{"gitId":"justinfidelis"},"content":"    public static void updatePersonalInformation(Person person, String attributeString) throws MedBotParserException {","lastModifiedDate":"2021-10-22"},{"lineNumber":205,"author":{"gitId":"justinfidelis"},"content":"        if (attributeString.startsWith(PARAMETER_NAME)) {","lastModifiedDate":"2021-10-22"},{"lineNumber":206,"author":{"gitId":"justinfidelis"},"content":"            String name \u003d parseName(attributeString.substring(PARAMETER_BUFFER));","lastModifiedDate":"2021-10-22"},{"lineNumber":207,"author":{"gitId":"justinfidelis"},"content":"            person.setName(name);","lastModifiedDate":"2021-10-22"},{"lineNumber":208,"author":{"gitId":"justinfidelis"},"content":"            return;","lastModifiedDate":"2021-10-22"},{"lineNumber":209,"author":{"gitId":"justinfidelis"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":210,"author":{"gitId":"justinfidelis"},"content":"        if (attributeString.startsWith(PARAMETER_PHONE)) {","lastModifiedDate":"2021-10-22"},{"lineNumber":211,"author":{"gitId":"justinfidelis"},"content":"            String phoneNumber \u003d parsePhoneNumber(attributeString.substring(PARAMETER_BUFFER));","lastModifiedDate":"2021-10-22"},{"lineNumber":212,"author":{"gitId":"justinfidelis"},"content":"            person.setPhoneNumber(phoneNumber);","lastModifiedDate":"2021-10-22"},{"lineNumber":213,"author":{"gitId":"justinfidelis"},"content":"            return;","lastModifiedDate":"2021-10-22"},{"lineNumber":214,"author":{"gitId":"justinfidelis"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":215,"author":{"gitId":"justinfidelis"},"content":"        if (attributeString.startsWith(PARAMETER_EMAIL)) {","lastModifiedDate":"2021-10-22"},{"lineNumber":216,"author":{"gitId":"justinfidelis"},"content":"            String email \u003d parseEmailAddress(attributeString.substring(PARAMETER_BUFFER));","lastModifiedDate":"2021-10-22"},{"lineNumber":217,"author":{"gitId":"justinfidelis"},"content":"            person.setEmailAddress(email);","lastModifiedDate":"2021-10-22"},{"lineNumber":218,"author":{"gitId":"justinfidelis"},"content":"            return;","lastModifiedDate":"2021-10-22"},{"lineNumber":219,"author":{"gitId":"justinfidelis"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":220,"author":{"gitId":"justinfidelis"},"content":"        if (attributeString.startsWith(PARAMETER_IC)) {","lastModifiedDate":"2021-10-22"},{"lineNumber":221,"author":{"gitId":"justinfidelis"},"content":"            String icNumber \u003d parseIcNumber(attributeString.substring(PARAMETER_BUFFER));","lastModifiedDate":"2021-10-22"},{"lineNumber":222,"author":{"gitId":"justinfidelis"},"content":"            person.setIcNumber(icNumber);","lastModifiedDate":"2021-10-22"},{"lineNumber":223,"author":{"gitId":"justinfidelis"},"content":"            return;","lastModifiedDate":"2021-10-22"},{"lineNumber":224,"author":{"gitId":"justinfidelis"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":225,"author":{"gitId":"justinfidelis"},"content":"        if (attributeString.startsWith(PARAMETER_ADDRESS)) {","lastModifiedDate":"2021-10-22"},{"lineNumber":226,"author":{"gitId":"justinfidelis"},"content":"            String address \u003d parseResidentialAddress(attributeString.substring(PARAMETER_BUFFER));","lastModifiedDate":"2021-10-22"},{"lineNumber":227,"author":{"gitId":"justinfidelis"},"content":"            person.setResidentialAddress(address);","lastModifiedDate":"2021-10-22"},{"lineNumber":228,"author":{"gitId":"justinfidelis"},"content":"            return;","lastModifiedDate":"2021-10-24"},{"lineNumber":229,"author":{"gitId":"justinfidelis"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":230,"author":{"gitId":"justinfidelis"},"content":"        throw new MedBotParserException(String.format(ERROR_INVALID_PARAM_SPECIFIER, attributeString.substring(0, 2)));","lastModifiedDate":"2021-10-24"},{"lineNumber":231,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":232,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":233,"author":{"gitId":"justinfidelis"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":234,"author":{"gitId":"justinfidelis"},"content":"     * Returns a String containing the names specified in attributeString, with each name capitalised.","lastModifiedDate":"2021-10-22"},{"lineNumber":235,"author":{"gitId":"justinfidelis"},"content":"     *","lastModifiedDate":"2021-10-22"},{"lineNumber":236,"author":{"gitId":"justinfidelis"},"content":"     * @param attributeString String containing the name to be parsed","lastModifiedDate":"2021-10-22"},{"lineNumber":237,"author":{"gitId":"justinfidelis"},"content":"     * @return String containing the name specified in attributeString","lastModifiedDate":"2021-10-22"},{"lineNumber":238,"author":{"gitId":"justinfidelis"},"content":"     * @throws MedBotParserException if no name is given","lastModifiedDate":"2021-10-22"},{"lineNumber":239,"author":{"gitId":"justinfidelis"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":240,"author":{"gitId":"justinfidelis"},"content":"    public static String parseName(String attributeString) throws MedBotParserException {","lastModifiedDate":"2021-10-24"},{"lineNumber":241,"author":{"gitId":"justinfidelis"},"content":"        String name \u003d attributeString.strip();","lastModifiedDate":"2021-10-22"},{"lineNumber":242,"author":{"gitId":"justinfidelis"},"content":"        if (name.equals(EMPTY_STRING)) {","lastModifiedDate":"2021-10-22"},{"lineNumber":243,"author":{"gitId":"justinfidelis"},"content":"            throw new MedBotParserException(ERROR_NAME_NOT_SPECIFIED);","lastModifiedDate":"2021-10-22"},{"lineNumber":244,"author":{"gitId":"justinfidelis"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":245,"author":{"gitId":"justinfidelis"},"content":"        return capitaliseEachWord(name);","lastModifiedDate":"2021-10-22"},{"lineNumber":246,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":247,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":248,"author":{"gitId":"justinfidelis"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":249,"author":{"gitId":"justinfidelis"},"content":"     * Returns a String containing the IC number specified in attributeString.","lastModifiedDate":"2021-10-22"},{"lineNumber":250,"author":{"gitId":"justinfidelis"},"content":"     *","lastModifiedDate":"2021-10-22"},{"lineNumber":251,"author":{"gitId":"justinfidelis"},"content":"     * \u003cp\u003eChecks if the resultant String is of the right IC number format","lastModifiedDate":"2021-10-22"},{"lineNumber":252,"author":{"gitId":"justinfidelis"},"content":"     *","lastModifiedDate":"2021-10-22"},{"lineNumber":253,"author":{"gitId":"justinfidelis"},"content":"     * @param attributeString String containing the IC number to be parsed","lastModifiedDate":"2021-10-22"},{"lineNumber":254,"author":{"gitId":"justinfidelis"},"content":"     * @return String containing the IC number specified in attributeString","lastModifiedDate":"2021-10-22"},{"lineNumber":255,"author":{"gitId":"justinfidelis"},"content":"     * @throws MedBotParserException if IC number is not specified, or is in the wrong format","lastModifiedDate":"2021-10-22"},{"lineNumber":256,"author":{"gitId":"justinfidelis"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":257,"author":{"gitId":"justinfidelis"},"content":"    public static String parseIcNumber(String attributeString) throws MedBotParserException {","lastModifiedDate":"2021-10-24"},{"lineNumber":258,"author":{"gitId":"justinfidelis"},"content":"        String icString \u003d attributeString.toUpperCase().strip();","lastModifiedDate":"2021-10-22"},{"lineNumber":259,"author":{"gitId":"justinfidelis"},"content":"        if (icString.equals(EMPTY_STRING)) {","lastModifiedDate":"2021-10-22"},{"lineNumber":260,"author":{"gitId":"justinfidelis"},"content":"            throw new MedBotParserException(ERROR_IC_NUMBER_NOT_SPECIFIED);","lastModifiedDate":"2021-10-22"},{"lineNumber":261,"author":{"gitId":"justinfidelis"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":262,"author":{"gitId":"justinfidelis"},"content":"        if (!icString.matches(REGEX_IC)) {","lastModifiedDate":"2021-10-22"},{"lineNumber":263,"author":{"gitId":"justinfidelis"},"content":"            throw new MedBotParserException(ERROR_IC_NUMBER_INCORRECT_FORMAT);","lastModifiedDate":"2021-10-22"},{"lineNumber":264,"author":{"gitId":"justinfidelis"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":265,"author":{"gitId":"justinfidelis"},"content":"        assert icString.length() \u003d\u003d 9;","lastModifiedDate":"2021-10-22"},{"lineNumber":266,"author":{"gitId":"justinfidelis"},"content":"        return icString;","lastModifiedDate":"2021-10-22"},{"lineNumber":267,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":268,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":269,"author":{"gitId":"justinfidelis"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":270,"author":{"gitId":"justinfidelis"},"content":"     * Returns a String containing the phone number specified in attributeString.","lastModifiedDate":"2021-10-22"},{"lineNumber":271,"author":{"gitId":"justinfidelis"},"content":"     *","lastModifiedDate":"2021-10-22"},{"lineNumber":272,"author":{"gitId":"justinfidelis"},"content":"     * \u003cp\u003eRemoves special characters \"- _+()\" and checks if the length of the resultant String is 8","lastModifiedDate":"2021-10-22"},{"lineNumber":273,"author":{"gitId":"justinfidelis"},"content":"     *","lastModifiedDate":"2021-10-22"},{"lineNumber":274,"author":{"gitId":"justinfidelis"},"content":"     * @param attributeString String containing the phone number to be parsed","lastModifiedDate":"2021-10-22"},{"lineNumber":275,"author":{"gitId":"justinfidelis"},"content":"     * @return String containing the phone number specified in attributeString","lastModifiedDate":"2021-10-22"},{"lineNumber":276,"author":{"gitId":"justinfidelis"},"content":"     * @throws MedBotParserException if the phone number is not specified,","lastModifiedDate":"2021-10-22"},{"lineNumber":277,"author":{"gitId":"justinfidelis"},"content":"     *                               has too many/few digits or contains unexpected characters","lastModifiedDate":"2021-10-22"},{"lineNumber":278,"author":{"gitId":"justinfidelis"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":279,"author":{"gitId":"justinfidelis"},"content":"    public static String parsePhoneNumber(String attributeString) throws MedBotParserException {","lastModifiedDate":"2021-10-24"},{"lineNumber":280,"author":{"gitId":"justinfidelis"},"content":"        String numberString \u003d attributeString.replaceAll(REGEX_PHONE_NUMBER_SEPARATOR, EMPTY_STRING).strip();","lastModifiedDate":"2021-10-22"},{"lineNumber":281,"author":{"gitId":"justinfidelis"},"content":"        if (numberString.equals(EMPTY_STRING)) {","lastModifiedDate":"2021-10-22"},{"lineNumber":282,"author":{"gitId":"justinfidelis"},"content":"            throw new MedBotParserException(ERROR_PHONE_NUMBER_NOT_SPECIFIED);","lastModifiedDate":"2021-10-22"},{"lineNumber":283,"author":{"gitId":"justinfidelis"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":284,"author":{"gitId":"justinfidelis"},"content":"        if (numberString.length() \u003e 8) {","lastModifiedDate":"2021-10-22"},{"lineNumber":285,"author":{"gitId":"justinfidelis"},"content":"            throw new MedBotParserException(ERROR_PHONE_NUMBER_TOO_MANY_DIGITS);","lastModifiedDate":"2021-10-22"},{"lineNumber":286,"author":{"gitId":"justinfidelis"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":287,"author":{"gitId":"justinfidelis"},"content":"        if (numberString.length() \u003c 8) {","lastModifiedDate":"2021-10-22"},{"lineNumber":288,"author":{"gitId":"justinfidelis"},"content":"            throw new MedBotParserException(ERROR_PHONE_NUMBER_TOO_FEW_DIGITS);","lastModifiedDate":"2021-10-22"},{"lineNumber":289,"author":{"gitId":"justinfidelis"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":290,"author":{"gitId":"justinfidelis"},"content":"        if (!numberString.matches(REGEX_PHONE_NUMBER)) {","lastModifiedDate":"2021-10-22"},{"lineNumber":291,"author":{"gitId":"justinfidelis"},"content":"            throw new MedBotParserException(ERROR_PHONE_NUMBER_UNEXPECTED_CHARS);","lastModifiedDate":"2021-10-24"},{"lineNumber":292,"author":{"gitId":"justinfidelis"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":293,"author":{"gitId":"justinfidelis"},"content":"        return numberString;","lastModifiedDate":"2021-10-22"},{"lineNumber":294,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":295,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":296,"author":{"gitId":"justinfidelis"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":297,"author":{"gitId":"justinfidelis"},"content":"     * Returns a String containing the email address specified in attributeString.","lastModifiedDate":"2021-10-22"},{"lineNumber":298,"author":{"gitId":"justinfidelis"},"content":"     *","lastModifiedDate":"2021-10-22"},{"lineNumber":299,"author":{"gitId":"justinfidelis"},"content":"     * \u003cp\u003eChecks if the resultant String is of the right email format.","lastModifiedDate":"2021-10-24"},{"lineNumber":300,"author":{"gitId":"justinfidelis"},"content":"     *","lastModifiedDate":"2021-10-22"},{"lineNumber":301,"author":{"gitId":"justinfidelis"},"content":"     * @param attributeString String containing the email address to be parsed","lastModifiedDate":"2021-10-22"},{"lineNumber":302,"author":{"gitId":"justinfidelis"},"content":"     * @return String containing the email address specified in attributeString","lastModifiedDate":"2021-10-22"},{"lineNumber":303,"author":{"gitId":"justinfidelis"},"content":"     * @throws MedBotParserException if the email address is not specified or is in the wrong format","lastModifiedDate":"2021-10-22"},{"lineNumber":304,"author":{"gitId":"justinfidelis"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":305,"author":{"gitId":"justinfidelis"},"content":"    public static String parseEmailAddress(String attributeString) throws MedBotParserException {","lastModifiedDate":"2021-10-24"},{"lineNumber":306,"author":{"gitId":"justinfidelis"},"content":"        String emailString \u003d attributeString.strip();","lastModifiedDate":"2021-10-22"},{"lineNumber":307,"author":{"gitId":"justinfidelis"},"content":"        if (emailString.equals(EMPTY_STRING)) {","lastModifiedDate":"2021-10-22"},{"lineNumber":308,"author":{"gitId":"justinfidelis"},"content":"            throw new MedBotParserException(ERROR_EMAIL_ADDRESS_NOT_SPECIFIED);","lastModifiedDate":"2021-10-22"},{"lineNumber":309,"author":{"gitId":"justinfidelis"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":310,"author":{"gitId":"justinfidelis"},"content":"        if (!emailString.matches(REGEX_EMAIL)) {","lastModifiedDate":"2021-10-22"},{"lineNumber":311,"author":{"gitId":"justinfidelis"},"content":"            throw new MedBotParserException(ERROR_EMAIL_ADDRESS_WRONG_FORMAT);","lastModifiedDate":"2021-10-22"},{"lineNumber":312,"author":{"gitId":"justinfidelis"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":313,"author":{"gitId":"justinfidelis"},"content":"        return emailString;","lastModifiedDate":"2021-10-22"},{"lineNumber":314,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":315,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":316,"author":{"gitId":"justinfidelis"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":317,"author":{"gitId":"justinfidelis"},"content":"     * Returns the String containing the address specified in attributeString, with each word capitalised.","lastModifiedDate":"2021-10-22"},{"lineNumber":318,"author":{"gitId":"justinfidelis"},"content":"     *","lastModifiedDate":"2021-10-22"},{"lineNumber":319,"author":{"gitId":"justinfidelis"},"content":"     * \u003cp\u003eCapitalises each word in the address.","lastModifiedDate":"2021-10-24"},{"lineNumber":320,"author":{"gitId":"justinfidelis"},"content":"     *","lastModifiedDate":"2021-10-22"},{"lineNumber":321,"author":{"gitId":"justinfidelis"},"content":"     * @param attributeString String containing the address to be parsed","lastModifiedDate":"2021-10-22"},{"lineNumber":322,"author":{"gitId":"justinfidelis"},"content":"     * @return String containing the address specified in attributeString","lastModifiedDate":"2021-10-22"},{"lineNumber":323,"author":{"gitId":"justinfidelis"},"content":"     * @throws MedBotParserException if address is not specified","lastModifiedDate":"2021-10-22"},{"lineNumber":324,"author":{"gitId":"justinfidelis"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":325,"author":{"gitId":"justinfidelis"},"content":"    public static String parseResidentialAddress(String attributeString) throws MedBotParserException {","lastModifiedDate":"2021-10-24"},{"lineNumber":326,"author":{"gitId":"justinfidelis"},"content":"        String addressString \u003d attributeString.strip();","lastModifiedDate":"2021-10-22"},{"lineNumber":327,"author":{"gitId":"justinfidelis"},"content":"        if (addressString.equals(EMPTY_STRING)) {","lastModifiedDate":"2021-10-22"},{"lineNumber":328,"author":{"gitId":"justinfidelis"},"content":"            throw new MedBotParserException(ERROR_ADDRESS_NOT_SPECIFIED);","lastModifiedDate":"2021-10-22"},{"lineNumber":329,"author":{"gitId":"justinfidelis"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":330,"author":{"gitId":"justinfidelis"},"content":"        return capitaliseEachWord(addressString);","lastModifiedDate":"2021-10-22"},{"lineNumber":331,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":332,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":333,"author":{"gitId":"justinfidelis"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":334,"author":{"gitId":"justinfidelis"},"content":"     * Reads the String and returns the non-negative integer at the start of the String.","lastModifiedDate":"2021-10-24"},{"lineNumber":335,"author":{"gitId":"justinfidelis"},"content":"     *","lastModifiedDate":"2021-10-22"},{"lineNumber":336,"author":{"gitId":"justinfidelis"},"content":"     * \u003cp\u003eFinds an integer at the start of the String that is immediately followed by a space character or the","lastModifiedDate":"2021-10-22"},{"lineNumber":337,"author":{"gitId":"justinfidelis"},"content":"     * end of the String. Returns that integer.","lastModifiedDate":"2021-10-22"},{"lineNumber":338,"author":{"gitId":"justinfidelis"},"content":"     *","lastModifiedDate":"2021-10-22"},{"lineNumber":339,"author":{"gitId":"justinfidelis"},"content":"     * @param string String that starts with an integer","lastModifiedDate":"2021-10-22"},{"lineNumber":340,"author":{"gitId":"justinfidelis"},"content":"     * @return integer that was found","lastModifiedDate":"2021-10-22"},{"lineNumber":341,"author":{"gitId":"justinfidelis"},"content":"     * @throws MedBotParserException if no integer is found","lastModifiedDate":"2021-10-22"},{"lineNumber":342,"author":{"gitId":"justinfidelis"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":343,"author":{"gitId":"justinfidelis"},"content":"    public static int parseId(String string) throws MedBotParserException {","lastModifiedDate":"2021-10-24"},{"lineNumber":344,"author":{"gitId":"justinfidelis"},"content":"        string \u003d string.strip();","lastModifiedDate":"2021-10-22"},{"lineNumber":345,"author":{"gitId":"justinfidelis"},"content":"        if (string.equals(EMPTY_STRING)) {","lastModifiedDate":"2021-10-22"},{"lineNumber":346,"author":{"gitId":"justinfidelis"},"content":"            throw new MedBotParserException(ERROR_ID_NOT_SPECIFIED);","lastModifiedDate":"2021-10-22"},{"lineNumber":347,"author":{"gitId":"justinfidelis"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":348,"author":{"gitId":"justinfidelis"},"content":"        Pattern pattern \u003d Pattern.compile(REGEX_ID);","lastModifiedDate":"2021-10-24"},{"lineNumber":349,"author":{"gitId":"justinfidelis"},"content":"        Matcher matcher \u003d pattern.matcher(string);","lastModifiedDate":"2021-10-22"},{"lineNumber":350,"author":{"gitId":"justinfidelis"},"content":"        if (!matcher.lookingAt()) {","lastModifiedDate":"2021-10-24"},{"lineNumber":351,"author":{"gitId":"justinfidelis"},"content":"            throw new MedBotParserException(ERROR_ID_NOT_SPECIFIED);","lastModifiedDate":"2021-10-24"},{"lineNumber":352,"author":{"gitId":"justinfidelis"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":353,"author":{"gitId":"justinfidelis"},"content":"        try {","lastModifiedDate":"2021-10-22"},{"lineNumber":354,"author":{"gitId":"justinfidelis"},"content":"            return Integer.parseInt(matcher.group().stripTrailing());","lastModifiedDate":"2021-10-24"},{"lineNumber":355,"author":{"gitId":"justinfidelis"},"content":"        } catch (NumberFormatException ne) {","lastModifiedDate":"2021-10-22"},{"lineNumber":356,"author":{"gitId":"justinfidelis"},"content":"            //matched substring should only consist of [0-9], exception should not be thrown by parseInt method","lastModifiedDate":"2021-10-22"},{"lineNumber":357,"author":{"gitId":"justinfidelis"},"content":"            assert false;","lastModifiedDate":"2021-10-22"},{"lineNumber":358,"author":{"gitId":"justinfidelis"},"content":"            throw new MedBotParserException(ERROR_ID_NOT_SPECIFIED);","lastModifiedDate":"2021-10-22"},{"lineNumber":359,"author":{"gitId":"justinfidelis"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":360,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":361,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":362,"author":{"gitId":"Kureans"},"content":"    public static PersonType parsePersonType(String string) throws MedBotParserException {","lastModifiedDate":"2021-10-25"},{"lineNumber":363,"author":{"gitId":"Kureans"},"content":"        String attributeSpecifier \u003d string.substring(0, PARAMETER_BUFFER);","lastModifiedDate":"2021-10-25"},{"lineNumber":364,"author":{"gitId":"Kureans"},"content":"        if (attributeSpecifier.equals(PARAMETER_PATIENT)) {","lastModifiedDate":"2021-10-25"},{"lineNumber":365,"author":{"gitId":"Kureans"},"content":"            return PersonType.PATIENT;","lastModifiedDate":"2021-10-25"},{"lineNumber":366,"author":{"gitId":"Kureans"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":367,"author":{"gitId":"Kureans"},"content":"        if (attributeSpecifier.equals(PARAMETER_STAFF)) {","lastModifiedDate":"2021-10-25"},{"lineNumber":368,"author":{"gitId":"Kureans"},"content":"            return PersonType.STAFF;","lastModifiedDate":"2021-10-25"},{"lineNumber":369,"author":{"gitId":"Kureans"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":370,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":371,"author":{"gitId":"Kureans"},"content":"        throw new MedBotParserException(ERROR_PERSON_TYPE_INVALID);","lastModifiedDate":"2021-10-25"},{"lineNumber":372,"author":{"gitId":"Kureans"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":373,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":374,"author":{"gitId":"Kureans"},"content":"    public static FilterType parseFilterType(String attributeSpecifier) throws MedBotParserException {","lastModifiedDate":"2021-10-25"},{"lineNumber":375,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":376,"author":{"gitId":"Kureans"},"content":"        if (attributeSpecifier.equals(PARAMETER_BEFORE)) {","lastModifiedDate":"2021-10-25"},{"lineNumber":377,"author":{"gitId":"Kureans"},"content":"            return FilterType.BEFORE;","lastModifiedDate":"2021-10-25"},{"lineNumber":378,"author":{"gitId":"Kureans"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":379,"author":{"gitId":"Kureans"},"content":"        if (attributeSpecifier.equals(PARAMETER_AFTER)) {","lastModifiedDate":"2021-10-25"},{"lineNumber":380,"author":{"gitId":"Kureans"},"content":"            return FilterType.AFTER;","lastModifiedDate":"2021-10-25"},{"lineNumber":381,"author":{"gitId":"Kureans"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":382,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":383,"author":{"gitId":"Kureans"},"content":"        throw new MedBotParserException(ERROR_FILTER_TYPE_INVALID);","lastModifiedDate":"2021-10-25"},{"lineNumber":384,"author":{"gitId":"Kureans"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":385,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":386,"author":{"gitId":"EricBryann"},"content":"    public static boolean parseListParameter(String attributeString) throws MedBotParserException {","lastModifiedDate":"2021-10-25"},{"lineNumber":387,"author":{"gitId":"EricBryann"},"content":"        if (attributeString.trim().equals(PARAMETER_ARCHIVE)) {","lastModifiedDate":"2021-10-25"},{"lineNumber":388,"author":{"gitId":"EricBryann"},"content":"            return true;","lastModifiedDate":"2021-10-25"},{"lineNumber":389,"author":{"gitId":"EricBryann"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":390,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":391,"author":{"gitId":"EricBryann"},"content":"        if (attributeString.trim().equals(EMPTY_STRING)) {","lastModifiedDate":"2021-10-25"},{"lineNumber":392,"author":{"gitId":"EricBryann"},"content":"            return false;","lastModifiedDate":"2021-10-25"},{"lineNumber":393,"author":{"gitId":"EricBryann"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":394,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":395,"author":{"gitId":"EricBryann"},"content":"        throw new MedBotParserException(ERROR_PARAMETER_TYPE_INVALID);","lastModifiedDate":"2021-10-25"},{"lineNumber":396,"author":{"gitId":"EricBryann"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":397,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":398,"author":{"gitId":"justinfidelis"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":399,"author":{"gitId":"justinfidelis"},"content":"     * Sets the first letter of each word of each word to uppercase and sets all others to lowercase.","lastModifiedDate":"2021-10-22"},{"lineNumber":400,"author":{"gitId":"justinfidelis"},"content":"     *","lastModifiedDate":"2021-10-22"},{"lineNumber":401,"author":{"gitId":"justinfidelis"},"content":"     * \u003cp\u003eA letter is considered the first letter of a word if it is the first letter of the input String or","lastModifiedDate":"2021-10-22"},{"lineNumber":402,"author":{"gitId":"justinfidelis"},"content":"     * is immediately after any of the characters \" _-\".","lastModifiedDate":"2021-10-22"},{"lineNumber":403,"author":{"gitId":"justinfidelis"},"content":"     *","lastModifiedDate":"2021-10-22"},{"lineNumber":404,"author":{"gitId":"justinfidelis"},"content":"     * @param input String which will be capitalised","lastModifiedDate":"2021-10-22"},{"lineNumber":405,"author":{"gitId":"justinfidelis"},"content":"     * @return String with each word capitalised","lastModifiedDate":"2021-10-22"},{"lineNumber":406,"author":{"gitId":"justinfidelis"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":407,"author":{"gitId":"justinfidelis"},"content":"    private static String capitaliseEachWord(String input) {","lastModifiedDate":"2021-10-22"},{"lineNumber":408,"author":{"gitId":"justinfidelis"},"content":"        input \u003d input.toLowerCase();","lastModifiedDate":"2021-10-22"},{"lineNumber":409,"author":{"gitId":"justinfidelis"},"content":"        Function\u003cMatchResult, String\u003e multiAttributeReplacementFunction \u003d x -\u003e {","lastModifiedDate":"2021-10-22"},{"lineNumber":410,"author":{"gitId":"justinfidelis"},"content":"            String match \u003d x.group();","lastModifiedDate":"2021-10-22"},{"lineNumber":411,"author":{"gitId":"justinfidelis"},"content":"            if (match.length() \u003d\u003d 1) {","lastModifiedDate":"2021-10-22"},{"lineNumber":412,"author":{"gitId":"justinfidelis"},"content":"                //if substring is the first character of the string","lastModifiedDate":"2021-10-22"},{"lineNumber":413,"author":{"gitId":"justinfidelis"},"content":"                return match.toUpperCase();","lastModifiedDate":"2021-10-22"},{"lineNumber":414,"author":{"gitId":"justinfidelis"},"content":"            } else {","lastModifiedDate":"2021-10-22"},{"lineNumber":415,"author":{"gitId":"justinfidelis"},"content":"                //if substring consists of one of the characters \" _-\" followed by a letter","lastModifiedDate":"2021-10-22"},{"lineNumber":416,"author":{"gitId":"justinfidelis"},"content":"                return match.charAt(0) + match.substring(1).toUpperCase();","lastModifiedDate":"2021-10-22"},{"lineNumber":417,"author":{"gitId":"justinfidelis"},"content":"            }","lastModifiedDate":"2021-10-22"},{"lineNumber":418,"author":{"gitId":"justinfidelis"},"content":"        };","lastModifiedDate":"2021-10-22"},{"lineNumber":419,"author":{"gitId":"justinfidelis"},"content":"        Pattern pattern \u003d Pattern.compile(REGEX_CAPITALISE_POSITION);","lastModifiedDate":"2021-10-22"},{"lineNumber":420,"author":{"gitId":"justinfidelis"},"content":"        Matcher matcher \u003d pattern.matcher(input);","lastModifiedDate":"2021-10-22"},{"lineNumber":421,"author":{"gitId":"justinfidelis"},"content":"        return matcher.replaceAll(multiAttributeReplacementFunction);","lastModifiedDate":"2021-10-22"},{"lineNumber":422,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":423,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":424,"author":{"gitId":"justinfidelis"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":425,"author":{"gitId":"justinfidelis"},"content":"     * Places a \"|\" separator before each attribute specifier in input and returns the resultant string.","lastModifiedDate":"2021-10-22"},{"lineNumber":426,"author":{"gitId":"justinfidelis"},"content":"     *","lastModifiedDate":"2021-10-22"},{"lineNumber":427,"author":{"gitId":"justinfidelis"},"content":"     * \u003cp\u003eAttribute specifiers are in the following formats \"a/\" or \"ab/\" where a and b can be any uppercase","lastModifiedDate":"2021-10-22"},{"lineNumber":428,"author":{"gitId":"justinfidelis"},"content":"     * or lowercase alphabet.","lastModifiedDate":"2021-10-22"},{"lineNumber":429,"author":{"gitId":"justinfidelis"},"content":"     *","lastModifiedDate":"2021-10-22"},{"lineNumber":430,"author":{"gitId":"justinfidelis"},"content":"     * @param input userInput String containing attribute specifiers","lastModifiedDate":"2021-10-22"},{"lineNumber":431,"author":{"gitId":"justinfidelis"},"content":"     * @return String containing added separator characters","lastModifiedDate":"2021-10-22"},{"lineNumber":432,"author":{"gitId":"justinfidelis"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":433,"author":{"gitId":"justinfidelis"},"content":"    private static String preprocessMultiAttributeInput(String input) {","lastModifiedDate":"2021-10-22"},{"lineNumber":434,"author":{"gitId":"justinfidelis"},"content":"        //replacement function to add a \"|\" character before an attribute specifier","lastModifiedDate":"2021-10-22"},{"lineNumber":435,"author":{"gitId":"justinfidelis"},"content":"        Function\u003cMatchResult, String\u003e replacementFunction \u003d x -\u003e VERTICAL_LINE + x.group();","lastModifiedDate":"2021-10-24"},{"lineNumber":436,"author":{"gitId":"justinfidelis"},"content":"        Pattern pattern \u003d Pattern.compile(REGEX_INPUT_PARAMETER);","lastModifiedDate":"2021-10-22"},{"lineNumber":437,"author":{"gitId":"justinfidelis"},"content":"        Matcher matcher \u003d pattern.matcher(input);","lastModifiedDate":"2021-10-22"},{"lineNumber":438,"author":{"gitId":"justinfidelis"},"content":"        return matcher.replaceAll(replacementFunction);","lastModifiedDate":"2021-10-22"},{"lineNumber":439,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":440,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":441,"author":{"gitId":"justinfidelis"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":442,"author":{"gitId":"justinfidelis"},"content":"     * Parses a String that corresponds to a date and time and returns the number of hours since Unix epoch that","lastModifiedDate":"2021-10-22"},{"lineNumber":443,"author":{"gitId":"justinfidelis"},"content":"     * it corresponds to, rounded down.","lastModifiedDate":"2021-10-22"},{"lineNumber":444,"author":{"gitId":"justinfidelis"},"content":"     *","lastModifiedDate":"2021-10-22"},{"lineNumber":445,"author":{"gitId":"justinfidelis"},"content":"     * @param dateTimeString String corresponding to a date and time","lastModifiedDate":"2021-10-22"},{"lineNumber":446,"author":{"gitId":"justinfidelis"},"content":"     * @return the number of hours since Unix epoch, rounded down to the nearest hour","lastModifiedDate":"2021-10-22"},{"lineNumber":447,"author":{"gitId":"justinfidelis"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":448,"author":{"gitId":"Kureans"},"content":"    public static int parseDateTime(String dateTimeString) throws MedBotParserException {","lastModifiedDate":"2021-10-25"},{"lineNumber":449,"author":{"gitId":"justinfidelis"},"content":"        DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(DATE_TIME_FORMATTER_PATTERN);","lastModifiedDate":"2021-10-22"},{"lineNumber":450,"author":{"gitId":"justinfidelis"},"content":"        LocalDateTime parsedDate;","lastModifiedDate":"2021-10-24"},{"lineNumber":451,"author":{"gitId":"justinfidelis"},"content":"        try {","lastModifiedDate":"2021-10-24"},{"lineNumber":452,"author":{"gitId":"justinfidelis"},"content":"            parsedDate \u003d LocalDateTime.parse(dateTimeString, dateTimeFormatter);","lastModifiedDate":"2021-10-24"},{"lineNumber":453,"author":{"gitId":"justinfidelis"},"content":"            parsedDate \u003d parsedDate.withMinute(0);","lastModifiedDate":"2021-10-24"},{"lineNumber":454,"author":{"gitId":"justinfidelis"},"content":"        } catch (DateTimeParseException dte) {","lastModifiedDate":"2021-10-24"},{"lineNumber":455,"author":{"gitId":"justinfidelis"},"content":"            throw new MedBotParserException(ERROR_DATE_TIME_WRONG_FORMAT);","lastModifiedDate":"2021-10-24"},{"lineNumber":456,"author":{"gitId":"justinfidelis"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":457,"author":{"gitId":"justinfidelis"},"content":"        return (int) (parsedDate.toEpochSecond(ZONE_OFFSET) / 60);","lastModifiedDate":"2021-10-25"},{"lineNumber":458,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":459,"author":{"gitId":"justinfidelis"},"content":"}","lastModifiedDate":"2021-10-22"}],"authorContributionMap":{"justinfidelis":369,"CrimsonTitan79":4,"EricBryann":20,"Kureans":66}},{"path":"src/main/java/medbot/parser/PatientCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"justinfidelis"},"content":"package medbot.parser;","lastModifiedDate":"2021-10-22"},{"lineNumber":2,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":3,"author":{"gitId":"justinfidelis"},"content":"import medbot.command.Command;","lastModifiedDate":"2021-10-22"},{"lineNumber":4,"author":{"gitId":"justinfidelis"},"content":"import medbot.command.personcommand.patientcommand.AddPatientCommand;","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"EricBryann"},"content":"import medbot.command.personcommand.patientcommand.ArchivePatientCommand;","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"justinfidelis"},"content":"import medbot.command.personcommand.patientcommand.DeletePatientCommand;","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"justinfidelis"},"content":"import medbot.command.personcommand.patientcommand.EditPatientCommand;","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"justinfidelis"},"content":"import medbot.command.personcommand.patientcommand.FindPatientCommand;","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"justinfidelis"},"content":"import medbot.command.personcommand.patientcommand.ListPatientCommand;","lastModifiedDate":"2021-10-22"},{"lineNumber":10,"author":{"gitId":"EricBryann"},"content":"import medbot.command.personcommand.patientcommand.UnarchivePatientCommand;","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"justinfidelis"},"content":"import medbot.command.personcommand.patientcommand.ViewPatientCommand;","lastModifiedDate":"2021-10-22"},{"lineNumber":12,"author":{"gitId":"justinfidelis"},"content":"import medbot.exceptions.MedBotParserException;","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"justinfidelis"},"content":"import medbot.person.Patient;","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":16,"author":{"gitId":"justinfidelis"},"content":"public abstract class PatientCommandParser {","lastModifiedDate":"2021-10-22"},{"lineNumber":17,"author":{"gitId":"justinfidelis"},"content":"    private static final String END_LINE \u003d System.lineSeparator();","lastModifiedDate":"2021-10-22"},{"lineNumber":18,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":19,"author":{"gitId":"justinfidelis"},"content":"    private static final String COMMAND_ADD \u003d \"add\";","lastModifiedDate":"2021-10-22"},{"lineNumber":20,"author":{"gitId":"justinfidelis"},"content":"    private static final String COMMAND_DELETE \u003d \"delete\";","lastModifiedDate":"2021-10-22"},{"lineNumber":21,"author":{"gitId":"justinfidelis"},"content":"    private static final String COMMAND_EDIT \u003d \"edit\";","lastModifiedDate":"2021-10-22"},{"lineNumber":22,"author":{"gitId":"justinfidelis"},"content":"    private static final String COMMAND_VIEW \u003d \"view\";","lastModifiedDate":"2021-10-22"},{"lineNumber":23,"author":{"gitId":"justinfidelis"},"content":"    private static final String COMMAND_LIST \u003d \"list\";","lastModifiedDate":"2021-10-22"},{"lineNumber":24,"author":{"gitId":"justinfidelis"},"content":"    private static final String COMMAND_FIND \u003d \"find\";","lastModifiedDate":"2021-10-22"},{"lineNumber":25,"author":{"gitId":"Kureans"},"content":"    private static final String COMMAND_HELP \u003d \"help\";","lastModifiedDate":"2021-10-23"},{"lineNumber":26,"author":{"gitId":"EricBryann"},"content":"    private static final String COMMAND_ARCHIVE \u003d \"archive\";","lastModifiedDate":"2021-10-25"},{"lineNumber":27,"author":{"gitId":"EricBryann"},"content":"    private static final String COMMAND_UNARCHIVE \u003d \"unarchive\";","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":29,"author":{"gitId":"justinfidelis"},"content":"    private static final String ERROR_WRONG_COMMAND \u003d \"Unable to parse command.\" + END_LINE;","lastModifiedDate":"2021-10-22"},{"lineNumber":30,"author":{"gitId":"Kureans"},"content":"    private static final String EMPTY_STRING \u003d \"\";","lastModifiedDate":"2021-10-23"},{"lineNumber":31,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":32,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":33,"author":{"gitId":"justinfidelis"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":34,"author":{"gitId":"justinfidelis"},"content":"     * Parses the user input and returns the corresponding command when the view type is PATIENT_INFO.","lastModifiedDate":"2021-10-22"},{"lineNumber":35,"author":{"gitId":"justinfidelis"},"content":"     *","lastModifiedDate":"2021-10-22"},{"lineNumber":36,"author":{"gitId":"justinfidelis"},"content":"     * @param userInput String containing the full user input.","lastModifiedDate":"2021-10-22"},{"lineNumber":37,"author":{"gitId":"justinfidelis"},"content":"     * @return the corresponding Command object.","lastModifiedDate":"2021-10-22"},{"lineNumber":38,"author":{"gitId":"justinfidelis"},"content":"     * @throws MedBotParserException if user input is not a recognised command or contains invalid information.","lastModifiedDate":"2021-10-22"},{"lineNumber":39,"author":{"gitId":"justinfidelis"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":40,"author":{"gitId":"justinfidelis"},"content":"    public static Command parsePatientCommand(String userInput) throws MedBotParserException {","lastModifiedDate":"2021-10-22"},{"lineNumber":41,"author":{"gitId":"justinfidelis"},"content":"        if (userInput.startsWith(COMMAND_ADD)) {","lastModifiedDate":"2021-10-22"},{"lineNumber":42,"author":{"gitId":"justinfidelis"},"content":"            return parseAddPatientCommand(userInput);","lastModifiedDate":"2021-10-22"},{"lineNumber":43,"author":{"gitId":"justinfidelis"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":44,"author":{"gitId":"justinfidelis"},"content":"        if (userInput.startsWith(COMMAND_DELETE)) {","lastModifiedDate":"2021-10-22"},{"lineNumber":45,"author":{"gitId":"justinfidelis"},"content":"            return parseDeletePatientCommand(userInput);","lastModifiedDate":"2021-10-22"},{"lineNumber":46,"author":{"gitId":"justinfidelis"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":47,"author":{"gitId":"justinfidelis"},"content":"        if (userInput.startsWith(COMMAND_VIEW)) {","lastModifiedDate":"2021-10-22"},{"lineNumber":48,"author":{"gitId":"justinfidelis"},"content":"            return parseViewPatientCommand(userInput);","lastModifiedDate":"2021-10-22"},{"lineNumber":49,"author":{"gitId":"justinfidelis"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":50,"author":{"gitId":"EricBryann"},"content":"        if (userInput.startsWith(COMMAND_LIST)) {","lastModifiedDate":"2021-10-25"},{"lineNumber":51,"author":{"gitId":"EricBryann"},"content":"            return parseListPatientCommand(userInput);","lastModifiedDate":"2021-10-25"},{"lineNumber":52,"author":{"gitId":"justinfidelis"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":53,"author":{"gitId":"justinfidelis"},"content":"        if (userInput.startsWith(COMMAND_EDIT)) {","lastModifiedDate":"2021-10-22"},{"lineNumber":54,"author":{"gitId":"justinfidelis"},"content":"            return parseEditPatientCommand(userInput);","lastModifiedDate":"2021-10-22"},{"lineNumber":55,"author":{"gitId":"justinfidelis"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":56,"author":{"gitId":"justinfidelis"},"content":"        if (userInput.startsWith(COMMAND_FIND)) {","lastModifiedDate":"2021-10-22"},{"lineNumber":57,"author":{"gitId":"justinfidelis"},"content":"            return parseFindPatientCommand(userInput);","lastModifiedDate":"2021-10-22"},{"lineNumber":58,"author":{"gitId":"justinfidelis"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":59,"author":{"gitId":"EricBryann"},"content":"        if (userInput.startsWith(COMMAND_ARCHIVE)) {","lastModifiedDate":"2021-10-25"},{"lineNumber":60,"author":{"gitId":"EricBryann"},"content":"            return parseArchivePatientCommand(userInput);","lastModifiedDate":"2021-10-25"},{"lineNumber":61,"author":{"gitId":"EricBryann"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":62,"author":{"gitId":"EricBryann"},"content":"        if (userInput.startsWith(COMMAND_UNARCHIVE)) {","lastModifiedDate":"2021-10-25"},{"lineNumber":63,"author":{"gitId":"EricBryann"},"content":"            return parseUnarchivePatientCommand(userInput);","lastModifiedDate":"2021-10-25"},{"lineNumber":64,"author":{"gitId":"EricBryann"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":65,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":66,"author":{"gitId":"justinfidelis"},"content":"        throw new MedBotParserException(ERROR_WRONG_COMMAND);","lastModifiedDate":"2021-10-22"},{"lineNumber":67,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":68,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":69,"author":{"gitId":"justinfidelis"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":70,"author":{"gitId":"justinfidelis"},"content":"     * Parses user input and returns ViewPatientCommand with the specified patient ID.","lastModifiedDate":"2021-10-22"},{"lineNumber":71,"author":{"gitId":"justinfidelis"},"content":"     *","lastModifiedDate":"2021-10-22"},{"lineNumber":72,"author":{"gitId":"justinfidelis"},"content":"     * @param userInput String containing the full user input.","lastModifiedDate":"2021-10-22"},{"lineNumber":73,"author":{"gitId":"justinfidelis"},"content":"     * @return ViewPatientCommand object.","lastModifiedDate":"2021-10-22"},{"lineNumber":74,"author":{"gitId":"justinfidelis"},"content":"     * @throws MedBotParserException when patient id is not specified or not a number.","lastModifiedDate":"2021-10-22"},{"lineNumber":75,"author":{"gitId":"justinfidelis"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":76,"author":{"gitId":"justinfidelis"},"content":"    private static ViewPatientCommand parseViewPatientCommand(String userInput) throws MedBotParserException {","lastModifiedDate":"2021-10-22"},{"lineNumber":77,"author":{"gitId":"justinfidelis"},"content":"        int personId \u003d ParserUtils.parseId(userInput.substring(4));","lastModifiedDate":"2021-10-22"},{"lineNumber":78,"author":{"gitId":"justinfidelis"},"content":"        return new ViewPatientCommand(personId);","lastModifiedDate":"2021-10-22"},{"lineNumber":79,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":80,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":81,"author":{"gitId":"justinfidelis"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":82,"author":{"gitId":"justinfidelis"},"content":"     * Parses user input and returns DeletePatientCommand with the specified patient ID.","lastModifiedDate":"2021-10-22"},{"lineNumber":83,"author":{"gitId":"justinfidelis"},"content":"     *","lastModifiedDate":"2021-10-22"},{"lineNumber":84,"author":{"gitId":"justinfidelis"},"content":"     * @param userInput String containing the full user input.","lastModifiedDate":"2021-10-22"},{"lineNumber":85,"author":{"gitId":"justinfidelis"},"content":"     * @return DeletePatientCommand object.","lastModifiedDate":"2021-10-22"},{"lineNumber":86,"author":{"gitId":"justinfidelis"},"content":"     * @throws MedBotParserException when patient id given is not specified or not a number.","lastModifiedDate":"2021-10-22"},{"lineNumber":87,"author":{"gitId":"justinfidelis"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":88,"author":{"gitId":"justinfidelis"},"content":"    private static DeletePatientCommand parseDeletePatientCommand(String userInput) throws MedBotParserException {","lastModifiedDate":"2021-10-22"},{"lineNumber":89,"author":{"gitId":"justinfidelis"},"content":"        int personId \u003d ParserUtils.parseId(userInput.substring(6));","lastModifiedDate":"2021-10-22"},{"lineNumber":90,"author":{"gitId":"justinfidelis"},"content":"        return new DeletePatientCommand(personId);","lastModifiedDate":"2021-10-22"},{"lineNumber":91,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":92,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":93,"author":{"gitId":"justinfidelis"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":94,"author":{"gitId":"justinfidelis"},"content":"     * Parses user input and returns EditPatientCommand with the specified patient ID and parameters.","lastModifiedDate":"2021-10-22"},{"lineNumber":95,"author":{"gitId":"justinfidelis"},"content":"     *","lastModifiedDate":"2021-10-22"},{"lineNumber":96,"author":{"gitId":"justinfidelis"},"content":"     * @param userInput String containing the full user input.","lastModifiedDate":"2021-10-22"},{"lineNumber":97,"author":{"gitId":"justinfidelis"},"content":"     * @return EditPatientCommand object.","lastModifiedDate":"2021-10-22"},{"lineNumber":98,"author":{"gitId":"justinfidelis"},"content":"     * @throws MedBotParserException when patient id given is not specified or not a number, or when","lastModifiedDate":"2021-10-22"},{"lineNumber":99,"author":{"gitId":"justinfidelis"},"content":"     *                               the parameters given cannot be parsed.","lastModifiedDate":"2021-10-22"},{"lineNumber":100,"author":{"gitId":"justinfidelis"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":101,"author":{"gitId":"justinfidelis"},"content":"    private static EditPatientCommand parseEditPatientCommand(String userInput) throws MedBotParserException {","lastModifiedDate":"2021-10-22"},{"lineNumber":102,"author":{"gitId":"justinfidelis"},"content":"        int patientId \u003d ParserUtils.parseId(userInput.substring(4));","lastModifiedDate":"2021-10-22"},{"lineNumber":103,"author":{"gitId":"justinfidelis"},"content":"        String[] parameters \u003d ParserUtils.getParameters(userInput);","lastModifiedDate":"2021-10-22"},{"lineNumber":104,"author":{"gitId":"justinfidelis"},"content":"        Patient patient \u003d new Patient();","lastModifiedDate":"2021-10-22"},{"lineNumber":105,"author":{"gitId":"justinfidelis"},"content":"        patient.setNull();","lastModifiedDate":"2021-10-22"},{"lineNumber":106,"author":{"gitId":"justinfidelis"},"content":"        ParserUtils.updateMultiplePersonalInformation(patient, parameters);","lastModifiedDate":"2021-10-22"},{"lineNumber":107,"author":{"gitId":"justinfidelis"},"content":"        return new EditPatientCommand(patientId, patient);","lastModifiedDate":"2021-10-22"},{"lineNumber":108,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":109,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":110,"author":{"gitId":"EricBryann"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":111,"author":{"gitId":"EricBryann"},"content":"     * Parses user input and returns ListPatientCommand with the parameter to retrieve archived or unarchived patients.","lastModifiedDate":"2021-10-25"},{"lineNumber":112,"author":{"gitId":"EricBryann"},"content":"     *","lastModifiedDate":"2021-10-25"},{"lineNumber":113,"author":{"gitId":"EricBryann"},"content":"     * @param userInput String containing the full user input.","lastModifiedDate":"2021-10-25"},{"lineNumber":114,"author":{"gitId":"EricBryann"},"content":"     * @return ListPatientCommand object.","lastModifiedDate":"2021-10-25"},{"lineNumber":115,"author":{"gitId":"EricBryann"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":116,"author":{"gitId":"EricBryann"},"content":"    private static ListPatientCommand parseListPatientCommand(String userInput) throws MedBotParserException {","lastModifiedDate":"2021-10-25"},{"lineNumber":117,"author":{"gitId":"EricBryann"},"content":"        boolean getArchivedPersons \u003d ParserUtils.parseListParameter(userInput.substring(4));","lastModifiedDate":"2021-10-25"},{"lineNumber":118,"author":{"gitId":"EricBryann"},"content":"        return new ListPatientCommand(getArchivedPersons);","lastModifiedDate":"2021-10-25"},{"lineNumber":119,"author":{"gitId":"EricBryann"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":120,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":121,"author":{"gitId":"justinfidelis"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":122,"author":{"gitId":"justinfidelis"},"content":"     * Parses user input and returns AddPatientCommand with the specified parameters.","lastModifiedDate":"2021-10-22"},{"lineNumber":123,"author":{"gitId":"justinfidelis"},"content":"     *","lastModifiedDate":"2021-10-22"},{"lineNumber":124,"author":{"gitId":"justinfidelis"},"content":"     * @param userInput String containing the full user input.","lastModifiedDate":"2021-10-22"},{"lineNumber":125,"author":{"gitId":"justinfidelis"},"content":"     * @return AddPatientCommand object.","lastModifiedDate":"2021-10-22"},{"lineNumber":126,"author":{"gitId":"justinfidelis"},"content":"     * @throws MedBotParserException when no parameters are specified, or when the parameters given cannot be parsed.","lastModifiedDate":"2021-10-22"},{"lineNumber":127,"author":{"gitId":"justinfidelis"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":128,"author":{"gitId":"justinfidelis"},"content":"    private static AddPatientCommand parseAddPatientCommand(String userInput) throws MedBotParserException {","lastModifiedDate":"2021-10-22"},{"lineNumber":129,"author":{"gitId":"justinfidelis"},"content":"        String[] parameters \u003d ParserUtils.getParameters(userInput);","lastModifiedDate":"2021-10-22"},{"lineNumber":130,"author":{"gitId":"justinfidelis"},"content":"        Patient patient \u003d new Patient();","lastModifiedDate":"2021-10-22"},{"lineNumber":131,"author":{"gitId":"justinfidelis"},"content":"        ParserUtils.updateMultiplePersonalInformation(patient, parameters);","lastModifiedDate":"2021-10-22"},{"lineNumber":132,"author":{"gitId":"justinfidelis"},"content":"        return new AddPatientCommand(patient);","lastModifiedDate":"2021-10-22"},{"lineNumber":133,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":134,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":135,"author":{"gitId":"justinfidelis"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":136,"author":{"gitId":"justinfidelis"},"content":"     * Parses user input and returns FindUserCommand with the specified parameters.","lastModifiedDate":"2021-10-24"},{"lineNumber":137,"author":{"gitId":"justinfidelis"},"content":"     *","lastModifiedDate":"2021-10-24"},{"lineNumber":138,"author":{"gitId":"justinfidelis"},"content":"     * @param userInput String containing the full user input.","lastModifiedDate":"2021-10-24"},{"lineNumber":139,"author":{"gitId":"justinfidelis"},"content":"     * @return FindUserCommand object with the specified parameters","lastModifiedDate":"2021-10-24"},{"lineNumber":140,"author":{"gitId":"justinfidelis"},"content":"     * @throws MedBotParserException when no parameters are specified","lastModifiedDate":"2021-10-24"},{"lineNumber":141,"author":{"gitId":"justinfidelis"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":142,"author":{"gitId":"justinfidelis"},"content":"    private static FindPatientCommand parseFindPatientCommand(String userInput) throws MedBotParserException {","lastModifiedDate":"2021-10-22"},{"lineNumber":143,"author":{"gitId":"justinfidelis"},"content":"        String[] parameters \u003d ParserUtils.getParameters(userInput);","lastModifiedDate":"2021-10-22"},{"lineNumber":144,"author":{"gitId":"justinfidelis"},"content":"        return new FindPatientCommand(parameters);","lastModifiedDate":"2021-10-22"},{"lineNumber":145,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":146,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":147,"author":{"gitId":"EricBryann"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":148,"author":{"gitId":"EricBryann"},"content":"     * Parses user input and returns ArchiveUserCommand with the specified patient ID.","lastModifiedDate":"2021-10-25"},{"lineNumber":149,"author":{"gitId":"EricBryann"},"content":"     *","lastModifiedDate":"2021-10-25"},{"lineNumber":150,"author":{"gitId":"EricBryann"},"content":"     * @param userInput String containing the full user input.","lastModifiedDate":"2021-10-25"},{"lineNumber":151,"author":{"gitId":"EricBryann"},"content":"     * @return ArchiveUserCommand object with the specified parameters","lastModifiedDate":"2021-10-25"},{"lineNumber":152,"author":{"gitId":"EricBryann"},"content":"     * @throws MedBotParserException when patient id given is not specified or not a number.","lastModifiedDate":"2021-10-25"},{"lineNumber":153,"author":{"gitId":"EricBryann"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":154,"author":{"gitId":"EricBryann"},"content":"    private static ArchivePatientCommand parseArchivePatientCommand(String userInput) throws MedBotParserException {","lastModifiedDate":"2021-10-25"},{"lineNumber":155,"author":{"gitId":"EricBryann"},"content":"        int personId \u003d ParserUtils.parseId(userInput.substring(7));","lastModifiedDate":"2021-10-25"},{"lineNumber":156,"author":{"gitId":"EricBryann"},"content":"        return new ArchivePatientCommand(personId);","lastModifiedDate":"2021-10-25"},{"lineNumber":157,"author":{"gitId":"EricBryann"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":158,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":159,"author":{"gitId":"EricBryann"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":160,"author":{"gitId":"EricBryann"},"content":"     * Parses user input and returns UnarchivePatientCommand with the specified patient ID.","lastModifiedDate":"2021-10-25"},{"lineNumber":161,"author":{"gitId":"EricBryann"},"content":"     *","lastModifiedDate":"2021-10-25"},{"lineNumber":162,"author":{"gitId":"EricBryann"},"content":"     * @param userInput String containing the full user input.","lastModifiedDate":"2021-10-25"},{"lineNumber":163,"author":{"gitId":"EricBryann"},"content":"     * @return UnarchivePatientCommand object.","lastModifiedDate":"2021-10-25"},{"lineNumber":164,"author":{"gitId":"EricBryann"},"content":"     * @throws MedBotParserException when patient id given is not specified or not a number.","lastModifiedDate":"2021-10-25"},{"lineNumber":165,"author":{"gitId":"EricBryann"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":166,"author":{"gitId":"EricBryann"},"content":"    private static UnarchivePatientCommand parseUnarchivePatientCommand(String userInput) throws MedBotParserException {","lastModifiedDate":"2021-10-25"},{"lineNumber":167,"author":{"gitId":"EricBryann"},"content":"        int personId \u003d ParserUtils.parseId(userInput.substring(9));","lastModifiedDate":"2021-10-25"},{"lineNumber":168,"author":{"gitId":"EricBryann"},"content":"        return new UnarchivePatientCommand(personId);","lastModifiedDate":"2021-10-25"},{"lineNumber":169,"author":{"gitId":"EricBryann"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":170,"author":{"gitId":"justinfidelis"},"content":"}","lastModifiedDate":"2021-10-22"}],"authorContributionMap":{"justinfidelis":119,"EricBryann":46,"Kureans":5}},{"path":"src/main/java/medbot/parser/SchedulerCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"justinfidelis"},"content":"package medbot.parser;","lastModifiedDate":"2021-10-22"},{"lineNumber":2,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":3,"author":{"gitId":"justinfidelis"},"content":"import medbot.Appointment;","lastModifiedDate":"2021-10-22"},{"lineNumber":4,"author":{"gitId":"justinfidelis"},"content":"import medbot.command.Command;","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"justinfidelis"},"content":"import medbot.command.appointmentcommand.AddAppointmentCommand;","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"justinfidelis"},"content":"import medbot.command.appointmentcommand.DeleteAppointmentCommand;","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"justinfidelis"},"content":"import medbot.command.appointmentcommand.EditAppointmentCommand;","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"Kureans"},"content":"import medbot.command.appointmentcommand.FindAppointmentCommand;","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"justinfidelis"},"content":"import medbot.command.appointmentcommand.ListAppointmentCommand;","lastModifiedDate":"2021-10-22"},{"lineNumber":10,"author":{"gitId":"justinfidelis"},"content":"import medbot.command.appointmentcommand.ViewAppointmentCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"justinfidelis"},"content":"import medbot.exceptions.MedBotParserException;","lastModifiedDate":"2021-10-22"},{"lineNumber":12,"author":{"gitId":"Kureans"},"content":"import medbot.person.PersonType;","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"Kureans"},"content":"import medbot.utilities.FilterType;","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"justinfidelis"},"content":"public abstract class SchedulerCommandParser {","lastModifiedDate":"2021-10-22"},{"lineNumber":16,"author":{"gitId":"justinfidelis"},"content":"    private static final String END_LINE \u003d System.lineSeparator();","lastModifiedDate":"2021-10-22"},{"lineNumber":17,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":18,"author":{"gitId":"justinfidelis"},"content":"    private static final String COMMAND_ADD \u003d \"add\";","lastModifiedDate":"2021-10-22"},{"lineNumber":19,"author":{"gitId":"justinfidelis"},"content":"    private static final String COMMAND_DELETE \u003d \"delete\";","lastModifiedDate":"2021-10-22"},{"lineNumber":20,"author":{"gitId":"justinfidelis"},"content":"    private static final String COMMAND_EDIT \u003d \"edit\";","lastModifiedDate":"2021-10-22"},{"lineNumber":21,"author":{"gitId":"justinfidelis"},"content":"    private static final String COMMAND_VIEW \u003d \"view\";","lastModifiedDate":"2021-10-22"},{"lineNumber":22,"author":{"gitId":"justinfidelis"},"content":"    private static final String COMMAND_LIST \u003d \"list\";","lastModifiedDate":"2021-10-22"},{"lineNumber":23,"author":{"gitId":"Kureans"},"content":"    private static final String COMMAND_FIND \u003d \"find\";","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":25,"author":{"gitId":"justinfidelis"},"content":"    private static final String ERROR_WRONG_COMMAND \u003d \"Unable to parse command.\" + END_LINE;","lastModifiedDate":"2021-10-22"},{"lineNumber":26,"author":{"gitId":"Kureans"},"content":"    private static final int PARAMETER_BUFFER \u003d 2;","lastModifiedDate":"2021-10-25"},{"lineNumber":27,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":28,"author":{"gitId":"justinfidelis"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":29,"author":{"gitId":"justinfidelis"},"content":"     * Parses the user input and returns the corresponding command when the view type is SCHEDULER.","lastModifiedDate":"2021-10-22"},{"lineNumber":30,"author":{"gitId":"justinfidelis"},"content":"     *","lastModifiedDate":"2021-10-22"},{"lineNumber":31,"author":{"gitId":"justinfidelis"},"content":"     * @param userInput String containing the full user input.","lastModifiedDate":"2021-10-22"},{"lineNumber":32,"author":{"gitId":"justinfidelis"},"content":"     * @return the corresponding Command object.","lastModifiedDate":"2021-10-22"},{"lineNumber":33,"author":{"gitId":"justinfidelis"},"content":"     * @throws MedBotParserException if user input is not a recognised command or contains invalid information.","lastModifiedDate":"2021-10-22"},{"lineNumber":34,"author":{"gitId":"justinfidelis"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":35,"author":{"gitId":"justinfidelis"},"content":"    public static Command parseSchedulingCommand(String userInput) throws MedBotParserException {","lastModifiedDate":"2021-10-22"},{"lineNumber":36,"author":{"gitId":"justinfidelis"},"content":"        if (userInput.startsWith(COMMAND_ADD)) {","lastModifiedDate":"2021-10-22"},{"lineNumber":37,"author":{"gitId":"justinfidelis"},"content":"            return parseAddAppointmentCommand(userInput);","lastModifiedDate":"2021-10-22"},{"lineNumber":38,"author":{"gitId":"justinfidelis"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":39,"author":{"gitId":"justinfidelis"},"content":"        if (userInput.startsWith(COMMAND_DELETE)) {","lastModifiedDate":"2021-10-22"},{"lineNumber":40,"author":{"gitId":"justinfidelis"},"content":"            return parseDeleteAppointmentCommand(userInput);","lastModifiedDate":"2021-10-22"},{"lineNumber":41,"author":{"gitId":"justinfidelis"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":42,"author":{"gitId":"justinfidelis"},"content":"        if (userInput.startsWith(COMMAND_EDIT)) {","lastModifiedDate":"2021-10-22"},{"lineNumber":43,"author":{"gitId":"justinfidelis"},"content":"            return parseEditAppointmentCommand(userInput);","lastModifiedDate":"2021-10-22"},{"lineNumber":44,"author":{"gitId":"justinfidelis"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":45,"author":{"gitId":"justinfidelis"},"content":"        if (userInput.equals(COMMAND_LIST)) {","lastModifiedDate":"2021-10-22"},{"lineNumber":46,"author":{"gitId":"justinfidelis"},"content":"            return new ListAppointmentCommand();","lastModifiedDate":"2021-10-22"},{"lineNumber":47,"author":{"gitId":"justinfidelis"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":48,"author":{"gitId":"Kureans"},"content":"        if (userInput.startsWith(COMMAND_VIEW)) {","lastModifiedDate":"2021-10-25"},{"lineNumber":49,"author":{"gitId":"Kureans"},"content":"            return parseViewAppointmentCommand(userInput);","lastModifiedDate":"2021-10-25"},{"lineNumber":50,"author":{"gitId":"Kureans"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":51,"author":{"gitId":"Kureans"},"content":"        if (userInput.startsWith(COMMAND_FIND)) {","lastModifiedDate":"2021-10-25"},{"lineNumber":52,"author":{"gitId":"Kureans"},"content":"            return parseFindAppointmentCommand(userInput);","lastModifiedDate":"2021-10-25"},{"lineNumber":53,"author":{"gitId":"Kureans"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":54,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":55,"author":{"gitId":"justinfidelis"},"content":"        throw new MedBotParserException(ERROR_WRONG_COMMAND);","lastModifiedDate":"2021-10-22"},{"lineNumber":56,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":57,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":58,"author":{"gitId":"justinfidelis"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":59,"author":{"gitId":"justinfidelis"},"content":"     * Parses user input and returns an AddAppointmentCommand with the specified appointment information.","lastModifiedDate":"2021-10-22"},{"lineNumber":60,"author":{"gitId":"justinfidelis"},"content":"     *","lastModifiedDate":"2021-10-22"},{"lineNumber":61,"author":{"gitId":"justinfidelis"},"content":"     * @param userInput String containing the full user input.","lastModifiedDate":"2021-10-22"},{"lineNumber":62,"author":{"gitId":"justinfidelis"},"content":"     * @return AddAppointmentCommand with the specified appointment information.","lastModifiedDate":"2021-10-22"},{"lineNumber":63,"author":{"gitId":"justinfidelis"},"content":"     * @throws MedBotParserException when there is missing appointment information given or when the information is","lastModifiedDate":"2021-10-22"},{"lineNumber":64,"author":{"gitId":"justinfidelis"},"content":"     *                               invalid","lastModifiedDate":"2021-10-22"},{"lineNumber":65,"author":{"gitId":"justinfidelis"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":66,"author":{"gitId":"justinfidelis"},"content":"    private static AddAppointmentCommand parseAddAppointmentCommand(String userInput) throws MedBotParserException {","lastModifiedDate":"2021-10-22"},{"lineNumber":67,"author":{"gitId":"justinfidelis"},"content":"        String[] attributeStrings \u003d ParserUtils.getParameters(userInput);","lastModifiedDate":"2021-10-22"},{"lineNumber":68,"author":{"gitId":"justinfidelis"},"content":"        Appointment appointment \u003d new Appointment();","lastModifiedDate":"2021-10-22"},{"lineNumber":69,"author":{"gitId":"justinfidelis"},"content":"        ParserUtils.updateMultipleAppointmentInformation(appointment, attributeStrings);","lastModifiedDate":"2021-10-22"},{"lineNumber":70,"author":{"gitId":"justinfidelis"},"content":"        return new AddAppointmentCommand(appointment);","lastModifiedDate":"2021-10-22"},{"lineNumber":71,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":72,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":73,"author":{"gitId":"justinfidelis"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":74,"author":{"gitId":"justinfidelis"},"content":"     * Parses user input and returns a DeleteAppointmentCommand with the specified appointment ID.","lastModifiedDate":"2021-10-22"},{"lineNumber":75,"author":{"gitId":"justinfidelis"},"content":"     *","lastModifiedDate":"2021-10-22"},{"lineNumber":76,"author":{"gitId":"justinfidelis"},"content":"     * @param userInput String containing the full user input.","lastModifiedDate":"2021-10-22"},{"lineNumber":77,"author":{"gitId":"justinfidelis"},"content":"     * @return DeleteAppointmentCommand with the specified appointment ID.","lastModifiedDate":"2021-10-22"},{"lineNumber":78,"author":{"gitId":"justinfidelis"},"content":"     * @throws MedBotParserException if the appointment ID is not specified or not a number","lastModifiedDate":"2021-10-22"},{"lineNumber":79,"author":{"gitId":"justinfidelis"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":80,"author":{"gitId":"justinfidelis"},"content":"    private static DeleteAppointmentCommand parseDeleteAppointmentCommand(String userInput)","lastModifiedDate":"2021-10-22"},{"lineNumber":81,"author":{"gitId":"justinfidelis"},"content":"            throws MedBotParserException {","lastModifiedDate":"2021-10-22"},{"lineNumber":82,"author":{"gitId":"justinfidelis"},"content":"        int appointmentId \u003d ParserUtils.parseId(userInput.substring(6));","lastModifiedDate":"2021-10-22"},{"lineNumber":83,"author":{"gitId":"justinfidelis"},"content":"        return new DeleteAppointmentCommand(appointmentId);","lastModifiedDate":"2021-10-22"},{"lineNumber":84,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":85,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":86,"author":{"gitId":"justinfidelis"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":87,"author":{"gitId":"justinfidelis"},"content":"     * Parses user input and returns a EditAppointmentCommand with the specified appointment ID and appointment","lastModifiedDate":"2021-10-22"},{"lineNumber":88,"author":{"gitId":"justinfidelis"},"content":"     * information to be updated.","lastModifiedDate":"2021-10-22"},{"lineNumber":89,"author":{"gitId":"justinfidelis"},"content":"     *","lastModifiedDate":"2021-10-22"},{"lineNumber":90,"author":{"gitId":"justinfidelis"},"content":"     * @param userInput String containing the full user input.","lastModifiedDate":"2021-10-22"},{"lineNumber":91,"author":{"gitId":"justinfidelis"},"content":"     * @return EditAppointmentCommand with the specified appointment ID and appointment information.","lastModifiedDate":"2021-10-22"},{"lineNumber":92,"author":{"gitId":"justinfidelis"},"content":"     * @throws MedBotParserException if the appointment ID is not specified or not a number, or when the appointment","lastModifiedDate":"2021-10-22"},{"lineNumber":93,"author":{"gitId":"justinfidelis"},"content":"     *                               information given is invalid","lastModifiedDate":"2021-10-22"},{"lineNumber":94,"author":{"gitId":"justinfidelis"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":95,"author":{"gitId":"justinfidelis"},"content":"    private static EditAppointmentCommand parseEditAppointmentCommand(String userInput) throws MedBotParserException {","lastModifiedDate":"2021-10-22"},{"lineNumber":96,"author":{"gitId":"justinfidelis"},"content":"        int appointmentId \u003d ParserUtils.parseId(userInput.substring(4));","lastModifiedDate":"2021-10-22"},{"lineNumber":97,"author":{"gitId":"justinfidelis"},"content":"        String[] attributeStrings \u003d ParserUtils.getParameters(userInput);","lastModifiedDate":"2021-10-22"},{"lineNumber":98,"author":{"gitId":"justinfidelis"},"content":"        Appointment appointment \u003d new Appointment();","lastModifiedDate":"2021-10-22"},{"lineNumber":99,"author":{"gitId":"justinfidelis"},"content":"        ParserUtils.updateMultipleAppointmentInformation(appointment, attributeStrings);","lastModifiedDate":"2021-10-22"},{"lineNumber":100,"author":{"gitId":"justinfidelis"},"content":"        return new EditAppointmentCommand(appointmentId, appointment);","lastModifiedDate":"2021-10-22"},{"lineNumber":101,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":102,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":103,"author":{"gitId":"Kureans"},"content":"    private static Command parseViewAppointmentCommand(String userInput) throws MedBotParserException {","lastModifiedDate":"2021-10-25"},{"lineNumber":104,"author":{"gitId":"Kureans"},"content":"        int appointmentId \u003d ParserUtils.parseId(userInput.substring(4));","lastModifiedDate":"2021-10-25"},{"lineNumber":105,"author":{"gitId":"Kureans"},"content":"        return new ViewAppointmentCommand(appointmentId);","lastModifiedDate":"2021-10-25"},{"lineNumber":106,"author":{"gitId":"Kureans"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":107,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":108,"author":{"gitId":"Kureans"},"content":"    private static Command parseFindAppointmentCommand(String userInput) throws MedBotParserException {","lastModifiedDate":"2021-10-25"},{"lineNumber":109,"author":{"gitId":"Kureans"},"content":"        String[] attributeStrings \u003d ParserUtils.getParametersWithoutSpecifiers(userInput).toArray(new String[0]);","lastModifiedDate":"2021-10-25"},{"lineNumber":110,"author":{"gitId":"Kureans"},"content":"        String[] attributeSpecifiers \u003d ParserUtils.getSpecifiers(userInput);","lastModifiedDate":"2021-10-25"},{"lineNumber":111,"author":{"gitId":"Kureans"},"content":"        //Todo: print corresponding error message for certain types of incorrect inputs","lastModifiedDate":"2021-10-25"},{"lineNumber":112,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":113,"author":{"gitId":"Kureans"},"content":"        assert (attributeSpecifiers.length \u003d\u003d 1 || attributeSpecifiers.length \u003d\u003d 2);","lastModifiedDate":"2021-10-25"},{"lineNumber":114,"author":{"gitId":"Kureans"},"content":"        assert (attributeStrings.length \u003d\u003d 1 || attributeStrings.length \u003d\u003d 2);","lastModifiedDate":"2021-10-25"},{"lineNumber":115,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":116,"author":{"gitId":"Kureans"},"content":"        PersonType personType \u003d ParserUtils.parsePersonType(attributeSpecifiers[0]);","lastModifiedDate":"2021-10-25"},{"lineNumber":117,"author":{"gitId":"Kureans"},"content":"        int personId \u003d ParserUtils.parseId(attributeStrings[0]);","lastModifiedDate":"2021-10-25"},{"lineNumber":118,"author":{"gitId":"Kureans"},"content":"        FilterType filterType \u003d FilterType.NONE;","lastModifiedDate":"2021-10-25"},{"lineNumber":119,"author":{"gitId":"Kureans"},"content":"        int dateTimeCode \u003d -1;","lastModifiedDate":"2021-10-25"},{"lineNumber":120,"author":{"gitId":"Kureans"},"content":"        if (attributeSpecifiers.length \u003d\u003d 2) {","lastModifiedDate":"2021-10-25"},{"lineNumber":121,"author":{"gitId":"Kureans"},"content":"            filterType \u003d ParserUtils.parseFilterType(attributeSpecifiers[1]);","lastModifiedDate":"2021-10-25"},{"lineNumber":122,"author":{"gitId":"Kureans"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":123,"author":{"gitId":"Kureans"},"content":"        if (attributeStrings.length \u003d\u003d 2) {","lastModifiedDate":"2021-10-25"},{"lineNumber":124,"author":{"gitId":"Kureans"},"content":"            dateTimeCode \u003d ParserUtils.parseDateTime(attributeStrings[1]);","lastModifiedDate":"2021-10-25"},{"lineNumber":125,"author":{"gitId":"Kureans"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":126,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":127,"author":{"gitId":"Kureans"},"content":"        return new FindAppointmentCommand(personId, personType, filterType, dateTimeCode);","lastModifiedDate":"2021-10-25"},{"lineNumber":128,"author":{"gitId":"Kureans"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":129,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":130,"author":{"gitId":"justinfidelis"},"content":"}","lastModifiedDate":"2021-10-22"}],"authorContributionMap":{"justinfidelis":90,"Kureans":40}},{"path":"src/main/java/medbot/parser/StaffCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"justinfidelis"},"content":"package medbot.parser;","lastModifiedDate":"2021-10-22"},{"lineNumber":2,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":3,"author":{"gitId":"justinfidelis"},"content":"import medbot.command.Command;","lastModifiedDate":"2021-10-22"},{"lineNumber":4,"author":{"gitId":"justinfidelis"},"content":"import medbot.command.personcommand.staffcommand.AddStaffCommand;","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"EricBryann"},"content":"import medbot.command.personcommand.staffcommand.ArchiveStaffCommand;","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"justinfidelis"},"content":"import medbot.command.personcommand.staffcommand.DeleteStaffCommand;","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"justinfidelis"},"content":"import medbot.command.personcommand.staffcommand.EditStaffCommand;","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"justinfidelis"},"content":"import medbot.command.personcommand.staffcommand.FindStaffCommand;","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"justinfidelis"},"content":"import medbot.command.personcommand.staffcommand.ListStaffCommand;","lastModifiedDate":"2021-10-22"},{"lineNumber":10,"author":{"gitId":"EricBryann"},"content":"import medbot.command.personcommand.staffcommand.UnarchiveStaffCommand;","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"justinfidelis"},"content":"import medbot.command.personcommand.staffcommand.ViewStaffCommand;","lastModifiedDate":"2021-10-22"},{"lineNumber":12,"author":{"gitId":"justinfidelis"},"content":"import medbot.exceptions.MedBotParserException;","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"justinfidelis"},"content":"import medbot.person.Staff;","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"justinfidelis"},"content":"public abstract class StaffCommandParser {","lastModifiedDate":"2021-10-22"},{"lineNumber":16,"author":{"gitId":"justinfidelis"},"content":"    private static final String END_LINE \u003d System.lineSeparator();","lastModifiedDate":"2021-10-22"},{"lineNumber":17,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":18,"author":{"gitId":"justinfidelis"},"content":"    private static final String COMMAND_ADD \u003d \"add\";","lastModifiedDate":"2021-10-22"},{"lineNumber":19,"author":{"gitId":"justinfidelis"},"content":"    private static final String COMMAND_DELETE \u003d \"delete\";","lastModifiedDate":"2021-10-22"},{"lineNumber":20,"author":{"gitId":"justinfidelis"},"content":"    private static final String COMMAND_EDIT \u003d \"edit\";","lastModifiedDate":"2021-10-22"},{"lineNumber":21,"author":{"gitId":"justinfidelis"},"content":"    private static final String COMMAND_VIEW \u003d \"view\";","lastModifiedDate":"2021-10-22"},{"lineNumber":22,"author":{"gitId":"justinfidelis"},"content":"    private static final String COMMAND_LIST \u003d \"list\";","lastModifiedDate":"2021-10-22"},{"lineNumber":23,"author":{"gitId":"justinfidelis"},"content":"    private static final String COMMAND_FIND \u003d \"find\";","lastModifiedDate":"2021-10-22"},{"lineNumber":24,"author":{"gitId":"Kureans"},"content":"    private static final String COMMAND_HELP \u003d \"help\";","lastModifiedDate":"2021-10-23"},{"lineNumber":25,"author":{"gitId":"Kureans"},"content":"    private static final String COMMAND_EXIT \u003d \"exit\";","lastModifiedDate":"2021-10-23"},{"lineNumber":26,"author":{"gitId":"Kureans"},"content":"    private static final String COMMAND_SWITCH \u003d \"switch\";","lastModifiedDate":"2021-10-23"},{"lineNumber":27,"author":{"gitId":"EricBryann"},"content":"    private static final String COMMAND_ARCHIVE \u003d \"archive\";","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"EricBryann"},"content":"    private static final String COMMAND_UNARCHIVE \u003d \"unarchive\";","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":30,"author":{"gitId":"justinfidelis"},"content":"    private static final String ERROR_WRONG_COMMAND \u003d \"Unable to parse command.\" + END_LINE;","lastModifiedDate":"2021-10-22"},{"lineNumber":31,"author":{"gitId":"Kureans"},"content":"    private static final String EMPTY_STRING \u003d \"\";","lastModifiedDate":"2021-10-23"},{"lineNumber":32,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":33,"author":{"gitId":"justinfidelis"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":34,"author":{"gitId":"justinfidelis"},"content":"     * Parses the user input and returns the corresponding command when the view type is MEDICAL_STAFF_INFO.","lastModifiedDate":"2021-10-22"},{"lineNumber":35,"author":{"gitId":"justinfidelis"},"content":"     *","lastModifiedDate":"2021-10-22"},{"lineNumber":36,"author":{"gitId":"justinfidelis"},"content":"     * @param userInput String containing the full user input.","lastModifiedDate":"2021-10-22"},{"lineNumber":37,"author":{"gitId":"justinfidelis"},"content":"     * @return the corresponding Command object.","lastModifiedDate":"2021-10-22"},{"lineNumber":38,"author":{"gitId":"justinfidelis"},"content":"     * @throws MedBotParserException if user input is not a recognised command or contains invalid information.","lastModifiedDate":"2021-10-22"},{"lineNumber":39,"author":{"gitId":"justinfidelis"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":40,"author":{"gitId":"justinfidelis"},"content":"    public static Command parseStaffCommand(String userInput) throws MedBotParserException {","lastModifiedDate":"2021-10-22"},{"lineNumber":41,"author":{"gitId":"justinfidelis"},"content":"        if (userInput.startsWith(COMMAND_ADD)) {","lastModifiedDate":"2021-10-22"},{"lineNumber":42,"author":{"gitId":"justinfidelis"},"content":"            return parseAddStaffCommand(userInput);","lastModifiedDate":"2021-10-22"},{"lineNumber":43,"author":{"gitId":"justinfidelis"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":44,"author":{"gitId":"justinfidelis"},"content":"        if (userInput.startsWith(COMMAND_DELETE)) {","lastModifiedDate":"2021-10-22"},{"lineNumber":45,"author":{"gitId":"justinfidelis"},"content":"            return parseDeleteStaffCommand(userInput);","lastModifiedDate":"2021-10-22"},{"lineNumber":46,"author":{"gitId":"justinfidelis"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":47,"author":{"gitId":"justinfidelis"},"content":"        if (userInput.startsWith(COMMAND_VIEW)) {","lastModifiedDate":"2021-10-22"},{"lineNumber":48,"author":{"gitId":"justinfidelis"},"content":"            return parseViewStaffCommand(userInput);","lastModifiedDate":"2021-10-22"},{"lineNumber":49,"author":{"gitId":"justinfidelis"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":50,"author":{"gitId":"EricBryann"},"content":"        if (userInput.startsWith(COMMAND_LIST)) {","lastModifiedDate":"2021-10-25"},{"lineNumber":51,"author":{"gitId":"EricBryann"},"content":"            return parseListStaffCommand(userInput);","lastModifiedDate":"2021-10-25"},{"lineNumber":52,"author":{"gitId":"justinfidelis"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":53,"author":{"gitId":"justinfidelis"},"content":"        if (userInput.startsWith(COMMAND_EDIT)) {","lastModifiedDate":"2021-10-22"},{"lineNumber":54,"author":{"gitId":"justinfidelis"},"content":"            return parseEditStaffCommand(userInput);","lastModifiedDate":"2021-10-22"},{"lineNumber":55,"author":{"gitId":"justinfidelis"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":56,"author":{"gitId":"justinfidelis"},"content":"        if (userInput.startsWith(COMMAND_FIND)) {","lastModifiedDate":"2021-10-22"},{"lineNumber":57,"author":{"gitId":"justinfidelis"},"content":"            return parseFindStaffCommand(userInput);","lastModifiedDate":"2021-10-22"},{"lineNumber":58,"author":{"gitId":"justinfidelis"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":59,"author":{"gitId":"EricBryann"},"content":"        if (userInput.startsWith(COMMAND_ARCHIVE)) {","lastModifiedDate":"2021-10-25"},{"lineNumber":60,"author":{"gitId":"EricBryann"},"content":"            return parseArchiveStaffCommand(userInput);","lastModifiedDate":"2021-10-25"},{"lineNumber":61,"author":{"gitId":"EricBryann"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":62,"author":{"gitId":"EricBryann"},"content":"        if (userInput.startsWith(COMMAND_UNARCHIVE)) {","lastModifiedDate":"2021-10-25"},{"lineNumber":63,"author":{"gitId":"EricBryann"},"content":"            return parseUnarchiveStaffCommand(userInput);","lastModifiedDate":"2021-10-25"},{"lineNumber":64,"author":{"gitId":"EricBryann"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":65,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":66,"author":{"gitId":"justinfidelis"},"content":"        throw new MedBotParserException(ERROR_WRONG_COMMAND);","lastModifiedDate":"2021-10-22"},{"lineNumber":67,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":68,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":69,"author":{"gitId":"justinfidelis"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":70,"author":{"gitId":"justinfidelis"},"content":"     * Parses user input and returns ViewStaffCommand with the specified staff ID.","lastModifiedDate":"2021-10-22"},{"lineNumber":71,"author":{"gitId":"justinfidelis"},"content":"     *","lastModifiedDate":"2021-10-22"},{"lineNumber":72,"author":{"gitId":"justinfidelis"},"content":"     * @param userInput String containing the full user input.","lastModifiedDate":"2021-10-22"},{"lineNumber":73,"author":{"gitId":"justinfidelis"},"content":"     * @return ViewStaffCommand object.","lastModifiedDate":"2021-10-22"},{"lineNumber":74,"author":{"gitId":"justinfidelis"},"content":"     * @throws MedBotParserException when staff id is not specified or not a number.","lastModifiedDate":"2021-10-22"},{"lineNumber":75,"author":{"gitId":"justinfidelis"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":76,"author":{"gitId":"justinfidelis"},"content":"    private static ViewStaffCommand parseViewStaffCommand(String userInput) throws MedBotParserException {","lastModifiedDate":"2021-10-22"},{"lineNumber":77,"author":{"gitId":"justinfidelis"},"content":"        int personId \u003d ParserUtils.parseId(userInput.substring(4));","lastModifiedDate":"2021-10-22"},{"lineNumber":78,"author":{"gitId":"justinfidelis"},"content":"        return new ViewStaffCommand(personId);","lastModifiedDate":"2021-10-22"},{"lineNumber":79,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":80,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":81,"author":{"gitId":"justinfidelis"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":82,"author":{"gitId":"justinfidelis"},"content":"     * Parses user input and returns DeleteStaffCommand with the specified staff ID.","lastModifiedDate":"2021-10-22"},{"lineNumber":83,"author":{"gitId":"justinfidelis"},"content":"     *","lastModifiedDate":"2021-10-22"},{"lineNumber":84,"author":{"gitId":"justinfidelis"},"content":"     * @param userInput String containing the full user input.","lastModifiedDate":"2021-10-22"},{"lineNumber":85,"author":{"gitId":"justinfidelis"},"content":"     * @return DeleteStaffCommand object.","lastModifiedDate":"2021-10-22"},{"lineNumber":86,"author":{"gitId":"justinfidelis"},"content":"     * @throws MedBotParserException when staff id given is not specified or not a number.","lastModifiedDate":"2021-10-22"},{"lineNumber":87,"author":{"gitId":"justinfidelis"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":88,"author":{"gitId":"justinfidelis"},"content":"    private static DeleteStaffCommand parseDeleteStaffCommand(String userInput) throws MedBotParserException {","lastModifiedDate":"2021-10-22"},{"lineNumber":89,"author":{"gitId":"justinfidelis"},"content":"        int personId \u003d ParserUtils.parseId(userInput.substring(6));","lastModifiedDate":"2021-10-22"},{"lineNumber":90,"author":{"gitId":"justinfidelis"},"content":"        return new DeleteStaffCommand(personId);","lastModifiedDate":"2021-10-22"},{"lineNumber":91,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":92,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":93,"author":{"gitId":"justinfidelis"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":94,"author":{"gitId":"justinfidelis"},"content":"     * Parses user input and returns EditStaffCommand with the specified patient ID and parameters.","lastModifiedDate":"2021-10-22"},{"lineNumber":95,"author":{"gitId":"justinfidelis"},"content":"     *","lastModifiedDate":"2021-10-22"},{"lineNumber":96,"author":{"gitId":"justinfidelis"},"content":"     * @param userInput String containing the full user input.","lastModifiedDate":"2021-10-22"},{"lineNumber":97,"author":{"gitId":"justinfidelis"},"content":"     * @return EditStaffCommand objects","lastModifiedDate":"2021-10-22"},{"lineNumber":98,"author":{"gitId":"justinfidelis"},"content":"     * @throws MedBotParserException when staff id given is not specified or not a number, or when","lastModifiedDate":"2021-10-22"},{"lineNumber":99,"author":{"gitId":"justinfidelis"},"content":"     *                               the parameters given cannot be parsed.","lastModifiedDate":"2021-10-22"},{"lineNumber":100,"author":{"gitId":"justinfidelis"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":101,"author":{"gitId":"justinfidelis"},"content":"    private static EditStaffCommand parseEditStaffCommand(String userInput) throws MedBotParserException {","lastModifiedDate":"2021-10-22"},{"lineNumber":102,"author":{"gitId":"justinfidelis"},"content":"        int staffId \u003d ParserUtils.parseId(userInput.substring(4));","lastModifiedDate":"2021-10-22"},{"lineNumber":103,"author":{"gitId":"justinfidelis"},"content":"        String[] parameters \u003d ParserUtils.getParameters(userInput);","lastModifiedDate":"2021-10-22"},{"lineNumber":104,"author":{"gitId":"justinfidelis"},"content":"        Staff staff \u003d new Staff();","lastModifiedDate":"2021-10-22"},{"lineNumber":105,"author":{"gitId":"justinfidelis"},"content":"        staff.setNull();","lastModifiedDate":"2021-10-22"},{"lineNumber":106,"author":{"gitId":"justinfidelis"},"content":"        ParserUtils.updateMultiplePersonalInformation(staff, parameters);","lastModifiedDate":"2021-10-22"},{"lineNumber":107,"author":{"gitId":"justinfidelis"},"content":"        return new EditStaffCommand(staffId, staff);","lastModifiedDate":"2021-10-22"},{"lineNumber":108,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":109,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":110,"author":{"gitId":"EricBryann"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":111,"author":{"gitId":"EricBryann"},"content":"     * Parses user input and returns ListPatientCommand with the parameter to retrieve archived or unarchived patients.","lastModifiedDate":"2021-10-25"},{"lineNumber":112,"author":{"gitId":"EricBryann"},"content":"     *","lastModifiedDate":"2021-10-25"},{"lineNumber":113,"author":{"gitId":"EricBryann"},"content":"     * @param userInput String containing the full user input.","lastModifiedDate":"2021-10-25"},{"lineNumber":114,"author":{"gitId":"EricBryann"},"content":"     * @return ListPatientCommand object.","lastModifiedDate":"2021-10-25"},{"lineNumber":115,"author":{"gitId":"EricBryann"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":116,"author":{"gitId":"EricBryann"},"content":"    private static ListStaffCommand parseListStaffCommand(String userInput) throws MedBotParserException {","lastModifiedDate":"2021-10-25"},{"lineNumber":117,"author":{"gitId":"EricBryann"},"content":"        boolean getArchivedPersons \u003d ParserUtils.parseListParameter(userInput.substring(4));","lastModifiedDate":"2021-10-25"},{"lineNumber":118,"author":{"gitId":"EricBryann"},"content":"        return new ListStaffCommand(getArchivedPersons);","lastModifiedDate":"2021-10-25"},{"lineNumber":119,"author":{"gitId":"EricBryann"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":120,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":121,"author":{"gitId":"justinfidelis"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":122,"author":{"gitId":"justinfidelis"},"content":"     * Parses user input and returns AddStaffCommand with the specified parameters.","lastModifiedDate":"2021-10-22"},{"lineNumber":123,"author":{"gitId":"justinfidelis"},"content":"     *","lastModifiedDate":"2021-10-22"},{"lineNumber":124,"author":{"gitId":"justinfidelis"},"content":"     * @param userInput String containing the full user input.","lastModifiedDate":"2021-10-22"},{"lineNumber":125,"author":{"gitId":"justinfidelis"},"content":"     * @return AddStaffCommand object.","lastModifiedDate":"2021-10-22"},{"lineNumber":126,"author":{"gitId":"justinfidelis"},"content":"     * @throws MedBotParserException when no parameters are specified, or when the parameters given cannot be parsed.","lastModifiedDate":"2021-10-22"},{"lineNumber":127,"author":{"gitId":"justinfidelis"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":128,"author":{"gitId":"justinfidelis"},"content":"    private static AddStaffCommand parseAddStaffCommand(String userInput) throws MedBotParserException {","lastModifiedDate":"2021-10-22"},{"lineNumber":129,"author":{"gitId":"justinfidelis"},"content":"        String[] parameters \u003d ParserUtils.getParameters(userInput);","lastModifiedDate":"2021-10-22"},{"lineNumber":130,"author":{"gitId":"justinfidelis"},"content":"        Staff staff \u003d new Staff();","lastModifiedDate":"2021-10-22"},{"lineNumber":131,"author":{"gitId":"justinfidelis"},"content":"        ParserUtils.updateMultiplePersonalInformation(staff, parameters);","lastModifiedDate":"2021-10-22"},{"lineNumber":132,"author":{"gitId":"justinfidelis"},"content":"        return new AddStaffCommand(staff);","lastModifiedDate":"2021-10-22"},{"lineNumber":133,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":134,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":135,"author":{"gitId":"justinfidelis"},"content":"    private static FindStaffCommand parseFindStaffCommand(String userInput) throws MedBotParserException {","lastModifiedDate":"2021-10-22"},{"lineNumber":136,"author":{"gitId":"justinfidelis"},"content":"        String[] parameters \u003d ParserUtils.getParameters(userInput);","lastModifiedDate":"2021-10-22"},{"lineNumber":137,"author":{"gitId":"justinfidelis"},"content":"        return new FindStaffCommand(parameters);","lastModifiedDate":"2021-10-22"},{"lineNumber":138,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":139,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":140,"author":{"gitId":"EricBryann"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":141,"author":{"gitId":"EricBryann"},"content":"     * Parses user input and returns ArchiveStaffCommand with the specified staff ID.","lastModifiedDate":"2021-10-25"},{"lineNumber":142,"author":{"gitId":"EricBryann"},"content":"     *","lastModifiedDate":"2021-10-25"},{"lineNumber":143,"author":{"gitId":"EricBryann"},"content":"     * @param userInput String containing the full user input.","lastModifiedDate":"2021-10-25"},{"lineNumber":144,"author":{"gitId":"EricBryann"},"content":"     * @return ArchiveStaffCommand object.","lastModifiedDate":"2021-10-25"},{"lineNumber":145,"author":{"gitId":"EricBryann"},"content":"     * @throws MedBotParserException when staff id given is not specified or not a number.","lastModifiedDate":"2021-10-25"},{"lineNumber":146,"author":{"gitId":"EricBryann"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":147,"author":{"gitId":"EricBryann"},"content":"    private static ArchiveStaffCommand parseArchiveStaffCommand(String userInput) throws MedBotParserException {","lastModifiedDate":"2021-10-25"},{"lineNumber":148,"author":{"gitId":"EricBryann"},"content":"        int personId \u003d ParserUtils.parseId(userInput.substring(7));","lastModifiedDate":"2021-10-25"},{"lineNumber":149,"author":{"gitId":"EricBryann"},"content":"        return new ArchiveStaffCommand(personId);","lastModifiedDate":"2021-10-25"},{"lineNumber":150,"author":{"gitId":"EricBryann"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":151,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":152,"author":{"gitId":"EricBryann"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":153,"author":{"gitId":"EricBryann"},"content":"     * Parses user input and returns UnarchiveStaffCommand with the specified staff ID.","lastModifiedDate":"2021-10-25"},{"lineNumber":154,"author":{"gitId":"EricBryann"},"content":"     *","lastModifiedDate":"2021-10-25"},{"lineNumber":155,"author":{"gitId":"EricBryann"},"content":"     * @param userInput String containing the full user input.","lastModifiedDate":"2021-10-25"},{"lineNumber":156,"author":{"gitId":"EricBryann"},"content":"     * @return UnarchiveStaffCommand object.","lastModifiedDate":"2021-10-25"},{"lineNumber":157,"author":{"gitId":"EricBryann"},"content":"     * @throws MedBotParserException when staff id given is not specified or not a number.","lastModifiedDate":"2021-10-25"},{"lineNumber":158,"author":{"gitId":"EricBryann"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":159,"author":{"gitId":"EricBryann"},"content":"    private static UnarchiveStaffCommand parseUnarchiveStaffCommand(String userInput) throws MedBotParserException {","lastModifiedDate":"2021-10-25"},{"lineNumber":160,"author":{"gitId":"EricBryann"},"content":"        int personId \u003d ParserUtils.parseId(userInput.substring(9));","lastModifiedDate":"2021-10-25"},{"lineNumber":161,"author":{"gitId":"EricBryann"},"content":"        return new UnarchiveStaffCommand(personId);","lastModifiedDate":"2021-10-25"},{"lineNumber":162,"author":{"gitId":"EricBryann"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":163,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":164,"author":{"gitId":"justinfidelis"},"content":"}","lastModifiedDate":"2021-10-22"}],"authorContributionMap":{"justinfidelis":111,"EricBryann":48,"Kureans":5}},{"path":"src/main/java/medbot/person/Patient.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"justinfidelis"},"content":"package medbot.person;","lastModifiedDate":"2021-09-30"},{"lineNumber":2,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":3,"author":{"gitId":"jushg"},"content":"import static medbot.ui.Ui.VERTICAL_LINE_SPACED;","lastModifiedDate":"2021-10-22"},{"lineNumber":4,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"justinfidelis"},"content":"public class Patient extends Person {","lastModifiedDate":"2021-09-30"},{"lineNumber":6,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"justinfidelis"},"content":"    public Patient() {","lastModifiedDate":"2021-09-30"},{"lineNumber":8,"author":{"gitId":"justinfidelis"},"content":"        super.personType \u003d PersonType.PATIENT;","lastModifiedDate":"2021-09-30"},{"lineNumber":9,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":10,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":11,"author":{"gitId":"justinfidelis"},"content":"    public String toString() {","lastModifiedDate":"2021-09-30"},{"lineNumber":12,"author":{"gitId":"jushg"},"content":"        return \"Patient ID: \" + getPersonId() + \" \" + super.toString();","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":14,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"CrimsonTitan79"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"CrimsonTitan79"},"content":"     * Text to be written to storage file of a patient.","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"CrimsonTitan79"},"content":"     *","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"CrimsonTitan79"},"content":"     * @return storageString of a patient","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"CrimsonTitan79"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"CrimsonTitan79"},"content":"    @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"CrimsonTitan79"},"content":"    public String getStorageString() {","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"jushg"},"content":"        return getPersonId() + VERTICAL_LINE_SPACED","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"CrimsonTitan79"},"content":"                + super.getStorageString();","lastModifiedDate":"2021-10-09"},{"lineNumber":24,"author":{"gitId":"CrimsonTitan79"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"justinfidelis"},"content":"}","lastModifiedDate":"2021-09-30"}],"authorContributionMap":{"justinfidelis":10,"CrimsonTitan79":12,"jushg":3}},{"path":"src/main/java/medbot/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"justinfidelis"},"content":"package medbot.person;","lastModifiedDate":"2021-09-30"},{"lineNumber":2,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":3,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"justinfidelis"},"content":"import java.util.LinkedList;","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"justinfidelis"},"content":"import java.util.List;","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"CrimsonTitan79"},"content":"import medbot.list.ListItem;","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"justinfidelis"},"content":"import medbot.Appointment;","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"justinfidelis"},"content":"import medbot.exceptions.MedBotException;","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"justinfidelis"},"content":"import medbot.list.PersonalAppointmentList;","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"Kureans"},"content":"import medbot.utilities.FilterType;","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"CrimsonTitan79"},"content":"public abstract class Person extends ListItem {","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"EricBryann"},"content":"    private static final String PARAMETER_NAME \u003d \"n/\";","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"EricBryann"},"content":"    private static final String PARAMETER_PHONE \u003d \"p/\";","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"EricBryann"},"content":"    private static final String PARAMETER_EMAIL \u003d \"e/\";","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"EricBryann"},"content":"    private static final String PARAMETER_IC \u003d \"i/\";","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"EricBryann"},"content":"    private static final String PARAMETER_ADDRESS \u003d \"a/\";","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"EricBryann"},"content":"    private static final int PARAMETER_BUFFER \u003d 2;","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"EricBryann"},"content":"    private static final String SPACE \u003d \" \";","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"justinfidelis"},"content":"    private static final String END_LINE \u003d System.lineSeparator();","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"justinfidelis"},"content":"    private static final String VERTICAL_LINE_SPACED \u003d \" | \";","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"EricBryann"},"content":"    private static final int LENGTH_ID_COLUMN \u003d 4;","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"EricBryann"},"content":"    private static final int LENGTH_IC_COLUMN \u003d 9;","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"EricBryann"},"content":"    private static final int LENGTH_NAME_COLUMN \u003d 20;","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"EricBryann"},"content":"    private static final int LENGTH_PHONE_NUM_COLUMN \u003d 9;","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"EricBryann"},"content":"    private static final int LENGTH_EMAIL_COLUMN \u003d 20;","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"EricBryann"},"content":"    private static final int LENGTH_ADDRESS_COLUMN \u003d 20;","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"Kureans"},"content":"    private int personId \u003d 0;","lastModifiedDate":"2021-10-16"},{"lineNumber":36,"author":{"gitId":"justinfidelis"},"content":"    protected String icNumber \u003d \"\";","lastModifiedDate":"2021-09-30"},{"lineNumber":37,"author":{"gitId":"justinfidelis"},"content":"    protected String name \u003d \"\";","lastModifiedDate":"2021-09-30"},{"lineNumber":38,"author":{"gitId":"justinfidelis"},"content":"    protected String phoneNumber \u003d \"\";","lastModifiedDate":"2021-09-30"},{"lineNumber":39,"author":{"gitId":"justinfidelis"},"content":"    protected String emailAddress \u003d \"\";","lastModifiedDate":"2021-09-30"},{"lineNumber":40,"author":{"gitId":"justinfidelis"},"content":"    protected String residentialAddress \u003d \"\";","lastModifiedDate":"2021-09-30"},{"lineNumber":41,"author":{"gitId":"justinfidelis"},"content":"    protected PersonType personType;","lastModifiedDate":"2021-09-30"},{"lineNumber":42,"author":{"gitId":"justinfidelis"},"content":"    protected PersonalAppointmentList personalAppointmentList \u003d new PersonalAppointmentList();","lastModifiedDate":"2021-10-21"},{"lineNumber":43,"author":{"gitId":"EricBryann"},"content":"    protected boolean isArchived \u003d false;","lastModifiedDate":"2021-10-25"},{"lineNumber":44,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":45,"author":{"gitId":"justinfidelis"},"content":"    public String toString() {","lastModifiedDate":"2021-09-30"},{"lineNumber":46,"author":{"gitId":"jushg"},"content":"        return END_LINE","lastModifiedDate":"2021-10-22"},{"lineNumber":47,"author":{"gitId":"jushg"},"content":"                + \"IC: \" + icNumber + END_LINE","lastModifiedDate":"2021-10-22"},{"lineNumber":48,"author":{"gitId":"jushg"},"content":"                + \"Name: \" + name + END_LINE","lastModifiedDate":"2021-10-22"},{"lineNumber":49,"author":{"gitId":"jushg"},"content":"                + \"H/P: \" + phoneNumber + END_LINE","lastModifiedDate":"2021-10-22"},{"lineNumber":50,"author":{"gitId":"jushg"},"content":"                + \"Email: \" + emailAddress + END_LINE","lastModifiedDate":"2021-10-22"},{"lineNumber":51,"author":{"gitId":"EricBryann"},"content":"                + \"Address: \" + residentialAddress;","lastModifiedDate":"2021-10-19"},{"lineNumber":52,"author":{"gitId":"EricBryann"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":53,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":54,"author":{"gitId":"EricBryann"},"content":"    public String getInfoInTableFormat() {","lastModifiedDate":"2021-10-19"},{"lineNumber":55,"author":{"gitId":"EricBryann"},"content":"        return VERTICAL_LINE_SPACED + getFormattedPersonId()","lastModifiedDate":"2021-10-19"},{"lineNumber":56,"author":{"gitId":"EricBryann"},"content":"                + VERTICAL_LINE_SPACED + getFormattedIcNumber()","lastModifiedDate":"2021-10-19"},{"lineNumber":57,"author":{"gitId":"EricBryann"},"content":"                + VERTICAL_LINE_SPACED + getFormattedName()","lastModifiedDate":"2021-10-19"},{"lineNumber":58,"author":{"gitId":"EricBryann"},"content":"                + VERTICAL_LINE_SPACED + getFormattedPhoneNumber()","lastModifiedDate":"2021-10-19"},{"lineNumber":59,"author":{"gitId":"EricBryann"},"content":"                + VERTICAL_LINE_SPACED + getFormattedEmail()","lastModifiedDate":"2021-10-19"},{"lineNumber":60,"author":{"gitId":"EricBryann"},"content":"                + VERTICAL_LINE_SPACED + getFormattedAddress()","lastModifiedDate":"2021-10-19"},{"lineNumber":61,"author":{"gitId":"EricBryann"},"content":"                + VERTICAL_LINE_SPACED;","lastModifiedDate":"2021-10-19"},{"lineNumber":62,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":63,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":64,"author":{"gitId":"justinfidelis"},"content":"    public String getIcNumber() {","lastModifiedDate":"2021-09-30"},{"lineNumber":65,"author":{"gitId":"justinfidelis"},"content":"        return icNumber;","lastModifiedDate":"2021-09-30"},{"lineNumber":66,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":67,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":68,"author":{"gitId":"justinfidelis"},"content":"    public void setIcNumber(String icNumber) {","lastModifiedDate":"2021-09-30"},{"lineNumber":69,"author":{"gitId":"justinfidelis"},"content":"        this.icNumber \u003d icNumber;","lastModifiedDate":"2021-09-30"},{"lineNumber":70,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":71,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":72,"author":{"gitId":"justinfidelis"},"content":"    public String getName() {","lastModifiedDate":"2021-09-30"},{"lineNumber":73,"author":{"gitId":"justinfidelis"},"content":"        return name;","lastModifiedDate":"2021-09-30"},{"lineNumber":74,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":75,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":76,"author":{"gitId":"justinfidelis"},"content":"    public void setName(String name) {","lastModifiedDate":"2021-09-30"},{"lineNumber":77,"author":{"gitId":"justinfidelis"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-09-30"},{"lineNumber":78,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":79,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":80,"author":{"gitId":"justinfidelis"},"content":"    public String getPhoneNumber() {","lastModifiedDate":"2021-09-30"},{"lineNumber":81,"author":{"gitId":"justinfidelis"},"content":"        return phoneNumber;","lastModifiedDate":"2021-09-30"},{"lineNumber":82,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":83,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":84,"author":{"gitId":"justinfidelis"},"content":"    public void setPhoneNumber(String phoneNumber) {","lastModifiedDate":"2021-09-30"},{"lineNumber":85,"author":{"gitId":"justinfidelis"},"content":"        this.phoneNumber \u003d phoneNumber;","lastModifiedDate":"2021-09-30"},{"lineNumber":86,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":87,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":88,"author":{"gitId":"justinfidelis"},"content":"    public String getEmailAddress() {","lastModifiedDate":"2021-09-30"},{"lineNumber":89,"author":{"gitId":"justinfidelis"},"content":"        return emailAddress;","lastModifiedDate":"2021-09-30"},{"lineNumber":90,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":91,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":92,"author":{"gitId":"justinfidelis"},"content":"    public void setEmailAddress(String emailAddress) {","lastModifiedDate":"2021-09-30"},{"lineNumber":93,"author":{"gitId":"justinfidelis"},"content":"        this.emailAddress \u003d emailAddress;","lastModifiedDate":"2021-09-30"},{"lineNumber":94,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":95,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":96,"author":{"gitId":"justinfidelis"},"content":"    public String getResidentialAddress() {","lastModifiedDate":"2021-09-30"},{"lineNumber":97,"author":{"gitId":"justinfidelis"},"content":"        return residentialAddress;","lastModifiedDate":"2021-09-30"},{"lineNumber":98,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":99,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":100,"author":{"gitId":"justinfidelis"},"content":"    public void setResidentialAddress(String residentialAddress) {","lastModifiedDate":"2021-09-30"},{"lineNumber":101,"author":{"gitId":"justinfidelis"},"content":"        this.residentialAddress \u003d residentialAddress;","lastModifiedDate":"2021-09-30"},{"lineNumber":102,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":103,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":104,"author":{"gitId":"Kureans"},"content":"    public int getPersonId() {","lastModifiedDate":"2021-10-16"},{"lineNumber":105,"author":{"gitId":"Kureans"},"content":"        return personId;","lastModifiedDate":"2021-10-16"},{"lineNumber":106,"author":{"gitId":"Kureans"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":107,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":108,"author":{"gitId":"Kureans"},"content":"    public void setPersonId(int personId) {","lastModifiedDate":"2021-10-16"},{"lineNumber":109,"author":{"gitId":"Kureans"},"content":"        this.personId \u003d personId;","lastModifiedDate":"2021-10-16"},{"lineNumber":110,"author":{"gitId":"Kureans"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":111,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":112,"author":{"gitId":"justinfidelis"},"content":"    public void setNull() {","lastModifiedDate":"2021-10-06"},{"lineNumber":113,"author":{"gitId":"justinfidelis"},"content":"        icNumber \u003d null;","lastModifiedDate":"2021-10-06"},{"lineNumber":114,"author":{"gitId":"justinfidelis"},"content":"        name \u003d null;","lastModifiedDate":"2021-10-06"},{"lineNumber":115,"author":{"gitId":"justinfidelis"},"content":"        phoneNumber \u003d null;","lastModifiedDate":"2021-10-06"},{"lineNumber":116,"author":{"gitId":"justinfidelis"},"content":"        emailAddress \u003d null;","lastModifiedDate":"2021-10-06"},{"lineNumber":117,"author":{"gitId":"justinfidelis"},"content":"        residentialAddress \u003d null;","lastModifiedDate":"2021-10-06"},{"lineNumber":118,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":119,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":120,"author":{"gitId":"EricBryann"},"content":"    public boolean isArchived() {","lastModifiedDate":"2021-10-25"},{"lineNumber":121,"author":{"gitId":"EricBryann"},"content":"        return isArchived;","lastModifiedDate":"2021-10-25"},{"lineNumber":122,"author":{"gitId":"EricBryann"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":123,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":124,"author":{"gitId":"EricBryann"},"content":"    public void archive() {","lastModifiedDate":"2021-10-25"},{"lineNumber":125,"author":{"gitId":"EricBryann"},"content":"        isArchived \u003d true;","lastModifiedDate":"2021-10-25"},{"lineNumber":126,"author":{"gitId":"EricBryann"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":127,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":128,"author":{"gitId":"EricBryann"},"content":"    public void unarchive() {","lastModifiedDate":"2021-10-25"},{"lineNumber":129,"author":{"gitId":"EricBryann"},"content":"        isArchived \u003d false;","lastModifiedDate":"2021-10-25"},{"lineNumber":130,"author":{"gitId":"EricBryann"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":131,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":132,"author":{"gitId":"justinfidelis"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":133,"author":{"gitId":"justinfidelis"},"content":"     * Returns the appointmentId of the appointment at the specified time code, or -1 if there is none.","lastModifiedDate":"2021-10-24"},{"lineNumber":134,"author":{"gitId":"justinfidelis"},"content":"     *","lastModifiedDate":"2021-10-24"},{"lineNumber":135,"author":{"gitId":"justinfidelis"},"content":"     * @param dateTimeCode the dateTimeCode to search for","lastModifiedDate":"2021-10-24"},{"lineNumber":136,"author":{"gitId":"justinfidelis"},"content":"     * @return the appointmentId of the appointment with that dateTimeCode, or -1 if there is none","lastModifiedDate":"2021-10-24"},{"lineNumber":137,"author":{"gitId":"justinfidelis"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":138,"author":{"gitId":"justinfidelis"},"content":"    public int getAppointmentId(int dateTimeCode) {","lastModifiedDate":"2021-10-24"},{"lineNumber":139,"author":{"gitId":"justinfidelis"},"content":"        return personalAppointmentList.getAppointmentId(dateTimeCode);","lastModifiedDate":"2021-10-24"},{"lineNumber":140,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":141,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":142,"author":{"gitId":"justinfidelis"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":143,"author":{"gitId":"justinfidelis"},"content":"     * Returns an LinkedList of the appointmentId of all appointments.","lastModifiedDate":"2021-10-25"},{"lineNumber":144,"author":{"gitId":"justinfidelis"},"content":"     *","lastModifiedDate":"2021-10-25"},{"lineNumber":145,"author":{"gitId":"justinfidelis"},"content":"     * @return LinkedList of the appointmentId of all appointments","lastModifiedDate":"2021-10-25"},{"lineNumber":146,"author":{"gitId":"justinfidelis"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":147,"author":{"gitId":"justinfidelis"},"content":"    public LinkedList\u003cInteger\u003e getAllAppointmentIds() {","lastModifiedDate":"2021-10-25"},{"lineNumber":148,"author":{"gitId":"justinfidelis"},"content":"        return personalAppointmentList.getAllAppointmentIds();","lastModifiedDate":"2021-10-25"},{"lineNumber":149,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":150,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":151,"author":{"gitId":"justinfidelis"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":152,"author":{"gitId":"justinfidelis"},"content":"     * Adds the given appointment to the appointment list.","lastModifiedDate":"2021-10-24"},{"lineNumber":153,"author":{"gitId":"justinfidelis"},"content":"     *","lastModifiedDate":"2021-10-24"},{"lineNumber":154,"author":{"gitId":"justinfidelis"},"content":"     * @param appointment Appointment to be added to the appointment list","lastModifiedDate":"2021-10-24"},{"lineNumber":155,"author":{"gitId":"justinfidelis"},"content":"     * @throws MedBotException if there is another appointment at that time","lastModifiedDate":"2021-10-24"},{"lineNumber":156,"author":{"gitId":"justinfidelis"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":157,"author":{"gitId":"justinfidelis"},"content":"    public void addAppointment(Appointment appointment) throws MedBotException {","lastModifiedDate":"2021-10-24"},{"lineNumber":158,"author":{"gitId":"justinfidelis"},"content":"        personalAppointmentList.addAppointment(appointment);","lastModifiedDate":"2021-10-24"},{"lineNumber":159,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":160,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":161,"author":{"gitId":"justinfidelis"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":162,"author":{"gitId":"justinfidelis"},"content":"     * Removes the appointment with the specified dateTimeCode.","lastModifiedDate":"2021-10-24"},{"lineNumber":163,"author":{"gitId":"justinfidelis"},"content":"     *","lastModifiedDate":"2021-10-24"},{"lineNumber":164,"author":{"gitId":"justinfidelis"},"content":"     * @param dateTimeCode the dateTimeCode of the appointment to be deleted","lastModifiedDate":"2021-10-24"},{"lineNumber":165,"author":{"gitId":"justinfidelis"},"content":"     * @throws MedBotException if there is no appointment with that dateTimeCode.","lastModifiedDate":"2021-10-24"},{"lineNumber":166,"author":{"gitId":"justinfidelis"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":167,"author":{"gitId":"justinfidelis"},"content":"    public void deleteAppointment(int dateTimeCode) throws MedBotException {","lastModifiedDate":"2021-10-24"},{"lineNumber":168,"author":{"gitId":"justinfidelis"},"content":"        personalAppointmentList.deleteAppointment(dateTimeCode);","lastModifiedDate":"2021-10-24"},{"lineNumber":169,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":170,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":171,"author":{"gitId":"justinfidelis"},"content":"    public List\u003cInteger\u003e listAppointments(FilterType filterType, int dateTimeCode) {","lastModifiedDate":"2021-10-26"},{"lineNumber":172,"author":{"gitId":"Kureans"},"content":"        switch (filterType) {","lastModifiedDate":"2021-10-25"},{"lineNumber":173,"author":{"gitId":"Kureans"},"content":"        case BEFORE:","lastModifiedDate":"2021-10-25"},{"lineNumber":174,"author":{"gitId":"Kureans"},"content":"            return personalAppointmentList.listAppointmentsBefore(dateTimeCode);","lastModifiedDate":"2021-10-25"},{"lineNumber":175,"author":{"gitId":"Kureans"},"content":"        case AFTER:","lastModifiedDate":"2021-10-25"},{"lineNumber":176,"author":{"gitId":"Kureans"},"content":"            return personalAppointmentList.listAppointmentsAfter(dateTimeCode);","lastModifiedDate":"2021-10-25"},{"lineNumber":177,"author":{"gitId":"Kureans"},"content":"        case NONE:","lastModifiedDate":"2021-10-25"},{"lineNumber":178,"author":{"gitId":"Kureans"},"content":"        default:","lastModifiedDate":"2021-10-25"},{"lineNumber":179,"author":{"gitId":"justinfidelis"},"content":"            return personalAppointmentList.listAppointments();","lastModifiedDate":"2021-10-24"},{"lineNumber":180,"author":{"gitId":"justinfidelis"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":181,"author":{"gitId":"Kureans"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":182,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":183,"author":{"gitId":"CrimsonTitan79"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":184,"author":{"gitId":"CrimsonTitan79"},"content":"     * Text to be written to storage file of a person.","lastModifiedDate":"2021-10-25"},{"lineNumber":185,"author":{"gitId":"CrimsonTitan79"},"content":"     *","lastModifiedDate":"2021-10-08"},{"lineNumber":186,"author":{"gitId":"CrimsonTitan79"},"content":"     * @return storageString of a person","lastModifiedDate":"2021-10-08"},{"lineNumber":187,"author":{"gitId":"CrimsonTitan79"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":188,"author":{"gitId":"CrimsonTitan79"},"content":"    public String getStorageString() {","lastModifiedDate":"2021-10-08"},{"lineNumber":189,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":190,"author":{"gitId":"CrimsonTitan79"},"content":"        return setAsStorageParameterOrNull(icNumber) + VERTICAL_LINE_SPACED","lastModifiedDate":"2021-10-13"},{"lineNumber":191,"author":{"gitId":"CrimsonTitan79"},"content":"                + setAsStorageParameterOrNull(name) + VERTICAL_LINE_SPACED","lastModifiedDate":"2021-10-13"},{"lineNumber":192,"author":{"gitId":"CrimsonTitan79"},"content":"                + setAsStorageParameterOrNull(phoneNumber) + VERTICAL_LINE_SPACED","lastModifiedDate":"2021-10-13"},{"lineNumber":193,"author":{"gitId":"CrimsonTitan79"},"content":"                + setAsStorageParameterOrNull(emailAddress) + VERTICAL_LINE_SPACED","lastModifiedDate":"2021-10-13"},{"lineNumber":194,"author":{"gitId":"CrimsonTitan79"},"content":"                + setAsStorageParameterOrNull(residentialAddress);","lastModifiedDate":"2021-10-09"},{"lineNumber":195,"author":{"gitId":"CrimsonTitan79"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":196,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":197,"author":{"gitId":"EricBryann"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":198,"author":{"gitId":"EricBryann"},"content":"     * Checks whether this person contains all the parameters specified.","lastModifiedDate":"2021-10-19"},{"lineNumber":199,"author":{"gitId":"EricBryann"},"content":"     *","lastModifiedDate":"2021-10-19"},{"lineNumber":200,"author":{"gitId":"EricBryann"},"content":"     * @param parameters the attributes to check.","lastModifiedDate":"2021-10-19"},{"lineNumber":201,"author":{"gitId":"EricBryann"},"content":"     * @return true if all parameters are found, false otherwise.","lastModifiedDate":"2021-10-19"},{"lineNumber":202,"author":{"gitId":"EricBryann"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":203,"author":{"gitId":"EricBryann"},"content":"    public boolean containsAllParameters(String[] parameters) {","lastModifiedDate":"2021-10-19"},{"lineNumber":204,"author":{"gitId":"EricBryann"},"content":"        for (String parameter : parameters) {","lastModifiedDate":"2021-10-19"},{"lineNumber":205,"author":{"gitId":"EricBryann"},"content":"            if (!containsParameter(parameter)) {","lastModifiedDate":"2021-10-19"},{"lineNumber":206,"author":{"gitId":"EricBryann"},"content":"                return false;","lastModifiedDate":"2021-10-19"},{"lineNumber":207,"author":{"gitId":"EricBryann"},"content":"            }","lastModifiedDate":"2021-10-19"},{"lineNumber":208,"author":{"gitId":"EricBryann"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":209,"author":{"gitId":"EricBryann"},"content":"        return true;","lastModifiedDate":"2021-10-19"},{"lineNumber":210,"author":{"gitId":"EricBryann"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":211,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":212,"author":{"gitId":"EricBryann"},"content":"    private boolean containsParameter(String parameter) {","lastModifiedDate":"2021-10-19"},{"lineNumber":213,"author":{"gitId":"EricBryann"},"content":"        String trimmedParameter \u003d parameter.substring(PARAMETER_BUFFER).trim().toLowerCase();","lastModifiedDate":"2021-10-19"},{"lineNumber":214,"author":{"gitId":"EricBryann"},"content":"        if (parameter.startsWith(PARAMETER_NAME)) {","lastModifiedDate":"2021-10-19"},{"lineNumber":215,"author":{"gitId":"EricBryann"},"content":"            return getName().toLowerCase().contains(trimmedParameter);","lastModifiedDate":"2021-10-19"},{"lineNumber":216,"author":{"gitId":"EricBryann"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":217,"author":{"gitId":"EricBryann"},"content":"        if (parameter.startsWith(PARAMETER_IC)) {","lastModifiedDate":"2021-10-19"},{"lineNumber":218,"author":{"gitId":"EricBryann"},"content":"            return getIcNumber().toLowerCase().contains(trimmedParameter);","lastModifiedDate":"2021-10-19"},{"lineNumber":219,"author":{"gitId":"EricBryann"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":220,"author":{"gitId":"EricBryann"},"content":"        if (parameter.startsWith(PARAMETER_PHONE)) {","lastModifiedDate":"2021-10-19"},{"lineNumber":221,"author":{"gitId":"EricBryann"},"content":"            return getPhoneNumber().toLowerCase().contains(trimmedParameter);","lastModifiedDate":"2021-10-19"},{"lineNumber":222,"author":{"gitId":"EricBryann"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":223,"author":{"gitId":"EricBryann"},"content":"        if (parameter.startsWith(PARAMETER_EMAIL)) {","lastModifiedDate":"2021-10-19"},{"lineNumber":224,"author":{"gitId":"EricBryann"},"content":"            return getEmailAddress().toLowerCase().contains(trimmedParameter);","lastModifiedDate":"2021-10-19"},{"lineNumber":225,"author":{"gitId":"EricBryann"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":226,"author":{"gitId":"EricBryann"},"content":"        if (parameter.startsWith(PARAMETER_ADDRESS)) {","lastModifiedDate":"2021-10-19"},{"lineNumber":227,"author":{"gitId":"EricBryann"},"content":"            return getResidentialAddress().toLowerCase().contains(trimmedParameter);","lastModifiedDate":"2021-10-19"},{"lineNumber":228,"author":{"gitId":"EricBryann"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":229,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":230,"author":{"gitId":"EricBryann"},"content":"        return false;","lastModifiedDate":"2021-10-19"},{"lineNumber":231,"author":{"gitId":"EricBryann"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":232,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":233,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":234,"author":{"gitId":"EricBryann"},"content":"    private String formattedAttribute(String attribute, int outputLength) {","lastModifiedDate":"2021-10-19"},{"lineNumber":235,"author":{"gitId":"EricBryann"},"content":"        int attributeLength \u003d attribute.length();","lastModifiedDate":"2021-10-19"},{"lineNumber":236,"author":{"gitId":"EricBryann"},"content":"        String output \u003d attribute;","lastModifiedDate":"2021-10-19"},{"lineNumber":237,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":238,"author":{"gitId":"EricBryann"},"content":"        if (attributeLength \u003e outputLength) {","lastModifiedDate":"2021-10-19"},{"lineNumber":239,"author":{"gitId":"EricBryann"},"content":"            output \u003d output.substring(0, outputLength - 3) + \"...\";","lastModifiedDate":"2021-10-19"},{"lineNumber":240,"author":{"gitId":"EricBryann"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":241,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":242,"author":{"gitId":"EricBryann"},"content":"        int remainingLength \u003d outputLength - attributeLength;","lastModifiedDate":"2021-10-19"},{"lineNumber":243,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":244,"author":{"gitId":"EricBryann"},"content":"        for (int i \u003d 0; i \u003c remainingLength; i++) {","lastModifiedDate":"2021-10-19"},{"lineNumber":245,"author":{"gitId":"EricBryann"},"content":"            output +\u003d SPACE;","lastModifiedDate":"2021-10-19"},{"lineNumber":246,"author":{"gitId":"EricBryann"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":247,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":248,"author":{"gitId":"EricBryann"},"content":"        return output;","lastModifiedDate":"2021-10-19"},{"lineNumber":249,"author":{"gitId":"EricBryann"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":250,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":251,"author":{"gitId":"EricBryann"},"content":"    private String getFormattedPersonId() {","lastModifiedDate":"2021-10-19"},{"lineNumber":252,"author":{"gitId":"EricBryann"},"content":"        return formattedAttribute(Integer.toString(personId), LENGTH_ID_COLUMN);","lastModifiedDate":"2021-10-19"},{"lineNumber":253,"author":{"gitId":"EricBryann"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":254,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":255,"author":{"gitId":"EricBryann"},"content":"    private String getFormattedIcNumber() {","lastModifiedDate":"2021-10-19"},{"lineNumber":256,"author":{"gitId":"EricBryann"},"content":"        return formattedAttribute(icNumber, LENGTH_IC_COLUMN);","lastModifiedDate":"2021-10-19"},{"lineNumber":257,"author":{"gitId":"EricBryann"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":258,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":259,"author":{"gitId":"EricBryann"},"content":"    private String getFormattedName() {","lastModifiedDate":"2021-10-19"},{"lineNumber":260,"author":{"gitId":"EricBryann"},"content":"        return formattedAttribute(name, LENGTH_NAME_COLUMN);","lastModifiedDate":"2021-10-19"},{"lineNumber":261,"author":{"gitId":"EricBryann"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":262,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":263,"author":{"gitId":"EricBryann"},"content":"    private String getFormattedPhoneNumber() {","lastModifiedDate":"2021-10-19"},{"lineNumber":264,"author":{"gitId":"EricBryann"},"content":"        return formattedAttribute(phoneNumber, LENGTH_PHONE_NUM_COLUMN);","lastModifiedDate":"2021-10-19"},{"lineNumber":265,"author":{"gitId":"EricBryann"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":266,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":267,"author":{"gitId":"EricBryann"},"content":"    private String getFormattedEmail() {","lastModifiedDate":"2021-10-19"},{"lineNumber":268,"author":{"gitId":"EricBryann"},"content":"        return formattedAttribute(emailAddress, LENGTH_EMAIL_COLUMN);","lastModifiedDate":"2021-10-19"},{"lineNumber":269,"author":{"gitId":"EricBryann"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":270,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":271,"author":{"gitId":"EricBryann"},"content":"    private String getFormattedAddress() {","lastModifiedDate":"2021-10-19"},{"lineNumber":272,"author":{"gitId":"EricBryann"},"content":"        return formattedAttribute(residentialAddress, LENGTH_ADDRESS_COLUMN);","lastModifiedDate":"2021-10-19"},{"lineNumber":273,"author":{"gitId":"EricBryann"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":274,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":275,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":276,"author":{"gitId":"CrimsonTitan79"},"content":"    //TODO: Change these to the native methods","lastModifiedDate":"2021-10-25"},{"lineNumber":277,"author":{"gitId":"CrimsonTitan79"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":278,"author":{"gitId":"CrimsonTitan79"},"content":"    public int getId() {","lastModifiedDate":"2021-10-25"},{"lineNumber":279,"author":{"gitId":"CrimsonTitan79"},"content":"        return getPersonId();","lastModifiedDate":"2021-10-25"},{"lineNumber":280,"author":{"gitId":"CrimsonTitan79"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":281,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":282,"author":{"gitId":"CrimsonTitan79"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":283,"author":{"gitId":"CrimsonTitan79"},"content":"    public void setId(int personId) {","lastModifiedDate":"2021-10-25"},{"lineNumber":284,"author":{"gitId":"CrimsonTitan79"},"content":"        setPersonId(personId);","lastModifiedDate":"2021-10-25"},{"lineNumber":285,"author":{"gitId":"CrimsonTitan79"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":286,"author":{"gitId":"justinfidelis"},"content":"}","lastModifiedDate":"2021-09-30"}],"authorContributionMap":{"justinfidelis":111,"CrimsonTitan79":35,"jushg":5,"Kureans":18,"EricBryann":117}},{"path":"src/main/java/medbot/person/PersonType.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"justinfidelis"},"content":"package medbot.person;","lastModifiedDate":"2021-09-30"},{"lineNumber":2,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":3,"author":{"gitId":"justinfidelis"},"content":"public enum PersonType {","lastModifiedDate":"2021-09-30"},{"lineNumber":4,"author":{"gitId":"Kureans"},"content":"    PATIENT, STAFF","lastModifiedDate":"2021-10-16"},{"lineNumber":5,"author":{"gitId":"justinfidelis"},"content":"}","lastModifiedDate":"2021-09-30"}],"authorContributionMap":{"justinfidelis":4,"Kureans":1}},{"path":"src/main/java/medbot/person/Staff.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Kureans"},"content":"package medbot.person;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":3,"author":{"gitId":"CrimsonTitan79"},"content":"import static medbot.ui.Ui.VERTICAL_LINE_SPACED;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"Kureans"},"content":"public class Staff extends Person {","lastModifiedDate":"2021-10-16"},{"lineNumber":6,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"Kureans"},"content":"    public Staff() {","lastModifiedDate":"2021-10-16"},{"lineNumber":8,"author":{"gitId":"Kureans"},"content":"        super.personType \u003d PersonType.STAFF;","lastModifiedDate":"2021-10-16"},{"lineNumber":9,"author":{"gitId":"Kureans"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"jushg"},"content":"    @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"Kureans"},"content":"    public String toString() {","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"jushg"},"content":"        return \"Staff ID: \" + getPersonId() + \" \" + super.toString();","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"Kureans"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":15,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"CrimsonTitan79"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"CrimsonTitan79"},"content":"     * Text to be written to storage/data.txt of a patient","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"CrimsonTitan79"},"content":"     *","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"CrimsonTitan79"},"content":"     * @return storageString of a patient","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"CrimsonTitan79"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"CrimsonTitan79"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"CrimsonTitan79"},"content":"    public String getStorageString() {","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"CrimsonTitan79"},"content":"        return getPersonId() + VERTICAL_LINE_SPACED","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"CrimsonTitan79"},"content":"                + super.getStorageString();","lastModifiedDate":"2021-10-25"},{"lineNumber":25,"author":{"gitId":"CrimsonTitan79"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":26,"author":{"gitId":"Kureans"},"content":"}","lastModifiedDate":"2021-10-16"}],"authorContributionMap":{"CrimsonTitan79":13,"jushg":2,"Kureans":11}},{"path":"src/main/java/medbot/storage/AppointmentStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"CrimsonTitan79"},"content":"package medbot.storage;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"CrimsonTitan79"},"content":"import medbot.Appointment;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"CrimsonTitan79"},"content":"import medbot.exceptions.MedBotException;","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"CrimsonTitan79"},"content":"import medbot.list.ListItem;","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"CrimsonTitan79"},"content":"import medbot.list.ListItemType;","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"CrimsonTitan79"},"content":"import medbot.utilities.Pair;","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"CrimsonTitan79"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"CrimsonTitan79"},"content":"import static medbot.parser.ParserUtils.updateAppointmentInformation;","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"CrimsonTitan79"},"content":"public class AppointmentStorage extends Storage {","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"CrimsonTitan79"},"content":"    private static final String APPOINTMENT_DATA_PATH \u003d \"MedbotData/appointment.txt\";","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"CrimsonTitan79"},"content":"    public AppointmentStorage() throws MedBotException {","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"CrimsonTitan79"},"content":"        super(APPOINTMENT_DATA_PATH);","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"CrimsonTitan79"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"CrimsonTitan79"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"CrimsonTitan79"},"content":"    protected ListItem createListItem(String storageLine, ListItemType listItemType) throws MedBotException {","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"CrimsonTitan79"},"content":"        Pair\u003cInteger, ArrayList\u003cString\u003e\u003e personDetails \u003d parseStorageLine(storageLine);","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"CrimsonTitan79"},"content":"        if (personDetails \u003d\u003d null) {","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"CrimsonTitan79"},"content":"            return null;","lastModifiedDate":"2021-10-25"},{"lineNumber":25,"author":{"gitId":"CrimsonTitan79"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":26,"author":{"gitId":"CrimsonTitan79"},"content":"        int personId \u003d personDetails.first;","lastModifiedDate":"2021-10-25"},{"lineNumber":27,"author":{"gitId":"CrimsonTitan79"},"content":"        ArrayList\u003cString\u003e prefixPlusAppointmentParameters \u003d personDetails.second;","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"CrimsonTitan79"},"content":"        Appointment appointment \u003d new Appointment();","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":31,"author":{"gitId":"CrimsonTitan79"},"content":"        appointment.setId(personId);","lastModifiedDate":"2021-10-25"},{"lineNumber":32,"author":{"gitId":"CrimsonTitan79"},"content":"        for (String prefixPlusAppointmentParameter : prefixPlusAppointmentParameters) {","lastModifiedDate":"2021-10-25"},{"lineNumber":33,"author":{"gitId":"CrimsonTitan79"},"content":"            //updatePersonalInformation does error-checking of person details and updates patient info","lastModifiedDate":"2021-10-25"},{"lineNumber":34,"author":{"gitId":"CrimsonTitan79"},"content":"            updateAppointmentInformation(appointment, prefixPlusAppointmentParameter);","lastModifiedDate":"2021-10-25"},{"lineNumber":35,"author":{"gitId":"CrimsonTitan79"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":36,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":37,"author":{"gitId":"CrimsonTitan79"},"content":"        return appointment;","lastModifiedDate":"2021-10-25"},{"lineNumber":38,"author":{"gitId":"CrimsonTitan79"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":39,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":40,"author":{"gitId":"CrimsonTitan79"},"content":"    protected Pair\u003cInteger, ArrayList\u003cString\u003e\u003e parseStorageLine(String storageLine) {","lastModifiedDate":"2021-10-25"},{"lineNumber":41,"author":{"gitId":"CrimsonTitan79"},"content":"        if (storageLine.isBlank()) {","lastModifiedDate":"2021-10-25"},{"lineNumber":42,"author":{"gitId":"CrimsonTitan79"},"content":"            return null;","lastModifiedDate":"2021-10-25"},{"lineNumber":43,"author":{"gitId":"CrimsonTitan79"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":44,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":45,"author":{"gitId":"CrimsonTitan79"},"content":"        String[] appointmentParameters \u003d splitStorageLine(storageLine);","lastModifiedDate":"2021-10-25"},{"lineNumber":46,"author":{"gitId":"CrimsonTitan79"},"content":"        String[] parameterPrefixes \u003d {\"d/\", \"p/\", \"s/\"};","lastModifiedDate":"2021-10-25"},{"lineNumber":47,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":48,"author":{"gitId":"CrimsonTitan79"},"content":"        ArrayList\u003cString\u003e prefixPlusAppointmentParameters \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-25"},{"lineNumber":49,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":50,"author":{"gitId":"CrimsonTitan79"},"content":"        Integer appointmentId \u003d Integer.parseInt(appointmentParameters[0]);","lastModifiedDate":"2021-10-25"},{"lineNumber":51,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":52,"author":{"gitId":"CrimsonTitan79"},"content":"        for (int i \u003d 0; i \u003c parameterPrefixes.length; i++) {","lastModifiedDate":"2021-10-25"},{"lineNumber":53,"author":{"gitId":"CrimsonTitan79"},"content":"            // i + 1, since appointmentParameters[0] is the appointmentId","lastModifiedDate":"2021-10-25"},{"lineNumber":54,"author":{"gitId":"CrimsonTitan79"},"content":"            if (isStorageParameterNull(appointmentParameters[i + 1])) {","lastModifiedDate":"2021-10-25"},{"lineNumber":55,"author":{"gitId":"CrimsonTitan79"},"content":"                continue;","lastModifiedDate":"2021-10-25"},{"lineNumber":56,"author":{"gitId":"CrimsonTitan79"},"content":"            }","lastModifiedDate":"2021-10-25"},{"lineNumber":57,"author":{"gitId":"CrimsonTitan79"},"content":"            // i + 1, since appointmentParameters[0] is the appointmentId","lastModifiedDate":"2021-10-25"},{"lineNumber":58,"author":{"gitId":"CrimsonTitan79"},"content":"            String prefixPlusAppointmentParameter \u003d parameterPrefixes[i] + appointmentParameters[i + 1];","lastModifiedDate":"2021-10-25"},{"lineNumber":59,"author":{"gitId":"CrimsonTitan79"},"content":"            prefixPlusAppointmentParameters.add(prefixPlusAppointmentParameter);","lastModifiedDate":"2021-10-25"},{"lineNumber":60,"author":{"gitId":"CrimsonTitan79"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":61,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":62,"author":{"gitId":"CrimsonTitan79"},"content":"        assert appointmentParameters.length \u003d\u003d parameterPrefixes.length + 1;","lastModifiedDate":"2021-10-25"},{"lineNumber":63,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":64,"author":{"gitId":"CrimsonTitan79"},"content":"        return new Pair\u003c\u003e(appointmentId, prefixPlusAppointmentParameters);","lastModifiedDate":"2021-10-25"},{"lineNumber":65,"author":{"gitId":"CrimsonTitan79"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":66,"author":{"gitId":"CrimsonTitan79"},"content":"}","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"CrimsonTitan79":66}},{"path":"src/main/java/medbot/storage/PatientStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"CrimsonTitan79"},"content":"package medbot.storage;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"CrimsonTitan79"},"content":"import medbot.exceptions.MedBotException;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"CrimsonTitan79"},"content":"public class PatientStorage extends PersonStorage {","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"CrimsonTitan79"},"content":"    private static final String PATIENT_DATA_PATH \u003d \"MedbotData/patient.txt\";","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"CrimsonTitan79"},"content":"    public PatientStorage() throws MedBotException {","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"CrimsonTitan79"},"content":"        super(PATIENT_DATA_PATH);","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"CrimsonTitan79"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"CrimsonTitan79"},"content":"}","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"CrimsonTitan79":15}},{"path":"src/main/java/medbot/storage/PersonStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"CrimsonTitan79"},"content":"package medbot.storage;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"CrimsonTitan79"},"content":"import medbot.exceptions.MedBotException;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"CrimsonTitan79"},"content":"import medbot.list.ListItem;","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"CrimsonTitan79"},"content":"import medbot.list.ListItemType;","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"CrimsonTitan79"},"content":"import medbot.person.Patient;","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"CrimsonTitan79"},"content":"import medbot.person.Person;","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"CrimsonTitan79"},"content":"import medbot.person.Staff;","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"CrimsonTitan79"},"content":"import medbot.utilities.Pair;","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"CrimsonTitan79"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"CrimsonTitan79"},"content":"import static medbot.parser.ParserUtils.updatePersonalInformation;","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"CrimsonTitan79"},"content":"public abstract class PersonStorage extends Storage {","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"CrimsonTitan79"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"CrimsonTitan79"},"content":"     * Generic constructor for PatientStorage and StaffStorage.","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"CrimsonTitan79"},"content":"     *","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"CrimsonTitan79"},"content":"     * @param dataPath is the path of the storage file","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"CrimsonTitan79"},"content":"     * @throws MedBotException if storage file cannot be created and does not exist","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"CrimsonTitan79"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"CrimsonTitan79"},"content":"    public PersonStorage(String dataPath) throws MedBotException {","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"CrimsonTitan79"},"content":"        super(dataPath);","lastModifiedDate":"2021-10-25"},{"lineNumber":25,"author":{"gitId":"CrimsonTitan79"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":26,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":27,"author":{"gitId":"CrimsonTitan79"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"CrimsonTitan79"},"content":"     * Create a ListItem object from the given parameters/details.","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"CrimsonTitan79"},"content":"     *","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"CrimsonTitan79"},"content":"     * @param storageLine  a line in storage file","lastModifiedDate":"2021-10-25"},{"lineNumber":31,"author":{"gitId":"CrimsonTitan79"},"content":"     * @param listItemType enum of ListItem type","lastModifiedDate":"2021-10-25"},{"lineNumber":32,"author":{"gitId":"CrimsonTitan79"},"content":"     * @return a ListItem object with the given parameters. return null if patientDetails \u003d\u003d null","lastModifiedDate":"2021-10-25"},{"lineNumber":33,"author":{"gitId":"CrimsonTitan79"},"content":"     * @throws MedBotException if fail to create the object","lastModifiedDate":"2021-10-25"},{"lineNumber":34,"author":{"gitId":"CrimsonTitan79"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":35,"author":{"gitId":"CrimsonTitan79"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":36,"author":{"gitId":"CrimsonTitan79"},"content":"    protected ListItem createListItem(String storageLine, ListItemType listItemType) throws MedBotException {","lastModifiedDate":"2021-10-25"},{"lineNumber":37,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":38,"author":{"gitId":"CrimsonTitan79"},"content":"        Pair\u003cInteger, ArrayList\u003cString\u003e\u003e personDetails \u003d parseStorageLine(storageLine);","lastModifiedDate":"2021-10-25"},{"lineNumber":39,"author":{"gitId":"CrimsonTitan79"},"content":"        if (personDetails \u003d\u003d null) {","lastModifiedDate":"2021-10-25"},{"lineNumber":40,"author":{"gitId":"CrimsonTitan79"},"content":"            return null;","lastModifiedDate":"2021-10-25"},{"lineNumber":41,"author":{"gitId":"CrimsonTitan79"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":42,"author":{"gitId":"CrimsonTitan79"},"content":"        int personId \u003d personDetails.first;","lastModifiedDate":"2021-10-25"},{"lineNumber":43,"author":{"gitId":"CrimsonTitan79"},"content":"        ArrayList\u003cString\u003e prefixPlusPersonParameters \u003d personDetails.second;","lastModifiedDate":"2021-10-25"},{"lineNumber":44,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":45,"author":{"gitId":"CrimsonTitan79"},"content":"        Person person;","lastModifiedDate":"2021-10-25"},{"lineNumber":46,"author":{"gitId":"CrimsonTitan79"},"content":"        if (listItemType \u003d\u003d ListItemType.PATIENT) {","lastModifiedDate":"2021-10-25"},{"lineNumber":47,"author":{"gitId":"CrimsonTitan79"},"content":"            person \u003d new Patient();","lastModifiedDate":"2021-10-25"},{"lineNumber":48,"author":{"gitId":"CrimsonTitan79"},"content":"        } else {","lastModifiedDate":"2021-10-25"},{"lineNumber":49,"author":{"gitId":"CrimsonTitan79"},"content":"            person \u003d new Staff();","lastModifiedDate":"2021-10-25"},{"lineNumber":50,"author":{"gitId":"CrimsonTitan79"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":51,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":52,"author":{"gitId":"CrimsonTitan79"},"content":"        person.setId(personId);","lastModifiedDate":"2021-10-25"},{"lineNumber":53,"author":{"gitId":"CrimsonTitan79"},"content":"        for (String prefixPlusPersonParameter : prefixPlusPersonParameters) {","lastModifiedDate":"2021-10-25"},{"lineNumber":54,"author":{"gitId":"CrimsonTitan79"},"content":"            //updatePersonalInformation does error-checking of person details and updates patient info","lastModifiedDate":"2021-10-25"},{"lineNumber":55,"author":{"gitId":"CrimsonTitan79"},"content":"            updatePersonalInformation(person, prefixPlusPersonParameter);","lastModifiedDate":"2021-10-25"},{"lineNumber":56,"author":{"gitId":"CrimsonTitan79"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":57,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":58,"author":{"gitId":"CrimsonTitan79"},"content":"        return person;","lastModifiedDate":"2021-10-25"},{"lineNumber":59,"author":{"gitId":"CrimsonTitan79"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":60,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":61,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":62,"author":{"gitId":"CrimsonTitan79"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":63,"author":{"gitId":"CrimsonTitan79"},"content":"     * Parse a line from the storage file by splitting its constituent parts.","lastModifiedDate":"2021-10-25"},{"lineNumber":64,"author":{"gitId":"CrimsonTitan79"},"content":"     *","lastModifiedDate":"2021-10-25"},{"lineNumber":65,"author":{"gitId":"CrimsonTitan79"},"content":"     * @param storageLine a line from the storage file","lastModifiedDate":"2021-10-25"},{"lineNumber":66,"author":{"gitId":"CrimsonTitan79"},"content":"     * @return person details, consisting of person ID and other parameters","lastModifiedDate":"2021-10-25"},{"lineNumber":67,"author":{"gitId":"CrimsonTitan79"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":68,"author":{"gitId":"CrimsonTitan79"},"content":"    protected Pair\u003cInteger, ArrayList\u003cString\u003e\u003e parseStorageLine(String storageLine) {","lastModifiedDate":"2021-10-25"},{"lineNumber":69,"author":{"gitId":"CrimsonTitan79"},"content":"        if (storageLine.isBlank()) {","lastModifiedDate":"2021-10-25"},{"lineNumber":70,"author":{"gitId":"CrimsonTitan79"},"content":"            return null;","lastModifiedDate":"2021-10-25"},{"lineNumber":71,"author":{"gitId":"CrimsonTitan79"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":72,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":73,"author":{"gitId":"CrimsonTitan79"},"content":"        String[] personParameters \u003d splitStorageLine(storageLine);","lastModifiedDate":"2021-10-25"},{"lineNumber":74,"author":{"gitId":"CrimsonTitan79"},"content":"        String[] parameterPrefixes \u003d {\"i/\", \"n/\", \"p/\", \"e/\", \"a/\"};","lastModifiedDate":"2021-10-25"},{"lineNumber":75,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":76,"author":{"gitId":"CrimsonTitan79"},"content":"        ArrayList\u003cString\u003e prefixPlusPersonParameters \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-25"},{"lineNumber":77,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":78,"author":{"gitId":"CrimsonTitan79"},"content":"        Integer patientId \u003d Integer.parseInt(personParameters[0]);","lastModifiedDate":"2021-10-25"},{"lineNumber":79,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":80,"author":{"gitId":"CrimsonTitan79"},"content":"        for (int i \u003d 0; i \u003c parameterPrefixes.length; i++) {","lastModifiedDate":"2021-10-25"},{"lineNumber":81,"author":{"gitId":"CrimsonTitan79"},"content":"            // i + 1, since personParameters[0] is the patientId","lastModifiedDate":"2021-10-25"},{"lineNumber":82,"author":{"gitId":"CrimsonTitan79"},"content":"            if (isStorageParameterNull(personParameters[i + 1])) {","lastModifiedDate":"2021-10-25"},{"lineNumber":83,"author":{"gitId":"CrimsonTitan79"},"content":"                continue;","lastModifiedDate":"2021-10-25"},{"lineNumber":84,"author":{"gitId":"CrimsonTitan79"},"content":"            }","lastModifiedDate":"2021-10-25"},{"lineNumber":85,"author":{"gitId":"CrimsonTitan79"},"content":"            // i + 1, since personParameters[0] is the patientId","lastModifiedDate":"2021-10-25"},{"lineNumber":86,"author":{"gitId":"CrimsonTitan79"},"content":"            String prefixPlusPersonParameter \u003d parameterPrefixes[i] + personParameters[i + 1];","lastModifiedDate":"2021-10-25"},{"lineNumber":87,"author":{"gitId":"CrimsonTitan79"},"content":"            prefixPlusPersonParameters.add(prefixPlusPersonParameter);","lastModifiedDate":"2021-10-25"},{"lineNumber":88,"author":{"gitId":"CrimsonTitan79"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":89,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":90,"author":{"gitId":"CrimsonTitan79"},"content":"        assert personParameters.length \u003d\u003d parameterPrefixes.length + 1;","lastModifiedDate":"2021-10-25"},{"lineNumber":91,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":92,"author":{"gitId":"CrimsonTitan79"},"content":"        return new Pair\u003c\u003e(patientId, prefixPlusPersonParameters);","lastModifiedDate":"2021-10-25"},{"lineNumber":93,"author":{"gitId":"CrimsonTitan79"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":94,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":95,"author":{"gitId":"CrimsonTitan79"},"content":"}","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"CrimsonTitan79":95}},{"path":"src/main/java/medbot/storage/StaffStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"CrimsonTitan79"},"content":"package medbot.storage;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"CrimsonTitan79"},"content":"import medbot.exceptions.MedBotException;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"CrimsonTitan79"},"content":"public class StaffStorage extends PersonStorage {","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"CrimsonTitan79"},"content":"    private static final String STAFF_DATA_PATH \u003d \"MedbotData/staff.txt\";","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"CrimsonTitan79"},"content":"    public StaffStorage() throws MedBotException {","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"CrimsonTitan79"},"content":"        super(STAFF_DATA_PATH);","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"CrimsonTitan79"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"CrimsonTitan79"},"content":"}","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"CrimsonTitan79":13}},{"path":"src/main/java/medbot/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"CrimsonTitan79"},"content":"package medbot.storage;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"CrimsonTitan79"},"content":"import medbot.exceptions.MedBotException;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"CrimsonTitan79"},"content":"import medbot.list.ListItem;","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"CrimsonTitan79"},"content":"import medbot.list.ListItemType;","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"CrimsonTitan79"},"content":"import medbot.list.MedBotList;","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"CrimsonTitan79"},"content":"import medbot.utilities.Pair;","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"CrimsonTitan79"},"content":"import java.io.File;","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"CrimsonTitan79"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"CrimsonTitan79"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"CrimsonTitan79"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"CrimsonTitan79"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"CrimsonTitan79"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"CrimsonTitan79"},"content":"import static medbot.ui.Ui.VERTICAL_LINE_SPACED_ESCAPED;","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"CrimsonTitan79"},"content":"public abstract class Storage {","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"CrimsonTitan79"},"content":"    protected static final String ERROR_LOAD_STORAGE \u003d \"Error: Unable to load data file.\";","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"CrimsonTitan79"},"content":"    protected static final String ERROR_SAVE_STORAGE \u003d \"Error: Unable to save data.\";","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"CrimsonTitan79"},"content":"    protected File dataFile;","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"CrimsonTitan79"},"content":"    protected String dataPath;","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":25,"author":{"gitId":"CrimsonTitan79"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":26,"author":{"gitId":"CrimsonTitan79"},"content":"     * Generic Constructor with creates a storage file if it doesn\u0027t already exist.","lastModifiedDate":"2021-10-25"},{"lineNumber":27,"author":{"gitId":"CrimsonTitan79"},"content":"     *","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"CrimsonTitan79"},"content":"     * @param dataPathString String that is the path of the storage file","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"CrimsonTitan79"},"content":"     * @throws MedBotException if storage file cannot be created and does not exist","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"CrimsonTitan79"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":31,"author":{"gitId":"CrimsonTitan79"},"content":"    public Storage(String dataPathString) throws MedBotException {","lastModifiedDate":"2021-10-25"},{"lineNumber":32,"author":{"gitId":"CrimsonTitan79"},"content":"        try {","lastModifiedDate":"2021-10-25"},{"lineNumber":33,"author":{"gitId":"CrimsonTitan79"},"content":"            dataPath \u003d dataPathString;","lastModifiedDate":"2021-10-25"},{"lineNumber":34,"author":{"gitId":"CrimsonTitan79"},"content":"            dataFile \u003d new File(dataPath);","lastModifiedDate":"2021-10-25"},{"lineNumber":35,"author":{"gitId":"CrimsonTitan79"},"content":"            dataFile.getParentFile().mkdirs();","lastModifiedDate":"2021-10-25"},{"lineNumber":36,"author":{"gitId":"CrimsonTitan79"},"content":"            dataFile.createNewFile();","lastModifiedDate":"2021-10-25"},{"lineNumber":37,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":38,"author":{"gitId":"CrimsonTitan79"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-10-25"},{"lineNumber":39,"author":{"gitId":"CrimsonTitan79"},"content":"            throw new MedBotException(ERROR_LOAD_STORAGE);","lastModifiedDate":"2021-10-25"},{"lineNumber":40,"author":{"gitId":"CrimsonTitan79"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":41,"author":{"gitId":"CrimsonTitan79"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":42,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":43,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":44,"author":{"gitId":"CrimsonTitan79"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":45,"author":{"gitId":"CrimsonTitan79"},"content":"     * Reads in storage/data.txt file, parses each line and adds the data into the program","lastModifiedDate":"2021-10-25"},{"lineNumber":46,"author":{"gitId":"CrimsonTitan79"},"content":"     * returns all line numbers of storage file that are invalid.","lastModifiedDate":"2021-10-25"},{"lineNumber":47,"author":{"gitId":"CrimsonTitan79"},"content":"     *","lastModifiedDate":"2021-10-25"},{"lineNumber":48,"author":{"gitId":"CrimsonTitan79"},"content":"     * @param listItemType enum of ListItem type","lastModifiedDate":"2021-10-25"},{"lineNumber":49,"author":{"gitId":"CrimsonTitan79"},"content":"     * @param medBotList   instance of a subclass of MedBotList","lastModifiedDate":"2021-10-25"},{"lineNumber":50,"author":{"gitId":"CrimsonTitan79"},"content":"     * @return Error message if there are formatting errors in storage/data.txt","lastModifiedDate":"2021-10-25"},{"lineNumber":51,"author":{"gitId":"CrimsonTitan79"},"content":"     * @throws FileNotFoundException if storage/data.txt cannot be found","lastModifiedDate":"2021-10-25"},{"lineNumber":52,"author":{"gitId":"CrimsonTitan79"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":53,"author":{"gitId":"CrimsonTitan79"},"content":"    public String loadStorage(ListItemType listItemType, MedBotList medBotList) throws FileNotFoundException {","lastModifiedDate":"2021-10-25"},{"lineNumber":54,"author":{"gitId":"CrimsonTitan79"},"content":"        int lineNumber \u003d 1;","lastModifiedDate":"2021-10-25"},{"lineNumber":55,"author":{"gitId":"CrimsonTitan79"},"content":"        Scanner s \u003d new Scanner(dataFile);","lastModifiedDate":"2021-10-25"},{"lineNumber":56,"author":{"gitId":"CrimsonTitan79"},"content":"        String loadStorageErrorMessage \u003d \"\";","lastModifiedDate":"2021-10-25"},{"lineNumber":57,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":58,"author":{"gitId":"CrimsonTitan79"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2021-10-25"},{"lineNumber":59,"author":{"gitId":"CrimsonTitan79"},"content":"            try {","lastModifiedDate":"2021-10-25"},{"lineNumber":60,"author":{"gitId":"CrimsonTitan79"},"content":"                String storageLine \u003d s.nextLine();","lastModifiedDate":"2021-10-25"},{"lineNumber":61,"author":{"gitId":"CrimsonTitan79"},"content":"                addListItemFromStorageLine(listItemType, storageLine, medBotList);","lastModifiedDate":"2021-10-25"},{"lineNumber":62,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":63,"author":{"gitId":"CrimsonTitan79"},"content":"            } catch (Exception e) {","lastModifiedDate":"2021-10-25"},{"lineNumber":64,"author":{"gitId":"CrimsonTitan79"},"content":"                loadStorageErrorMessage +\u003d loadStorageLineErrorMessage(lineNumber);","lastModifiedDate":"2021-10-25"},{"lineNumber":65,"author":{"gitId":"CrimsonTitan79"},"content":"            }","lastModifiedDate":"2021-10-25"},{"lineNumber":66,"author":{"gitId":"CrimsonTitan79"},"content":"            lineNumber++;","lastModifiedDate":"2021-10-25"},{"lineNumber":67,"author":{"gitId":"CrimsonTitan79"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":68,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":69,"author":{"gitId":"CrimsonTitan79"},"content":"        return loadStorageErrorMessage;","lastModifiedDate":"2021-10-25"},{"lineNumber":70,"author":{"gitId":"CrimsonTitan79"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":71,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":72,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":73,"author":{"gitId":"CrimsonTitan79"},"content":"    protected void addListItemFromStorageLine(ListItemType listItemType, String storageLine, MedBotList medBotList)","lastModifiedDate":"2021-10-25"},{"lineNumber":74,"author":{"gitId":"CrimsonTitan79"},"content":"            throws MedBotException {","lastModifiedDate":"2021-10-25"},{"lineNumber":75,"author":{"gitId":"CrimsonTitan79"},"content":"        ListItem listItem \u003d createListItem(storageLine, listItemType);","lastModifiedDate":"2021-10-25"},{"lineNumber":76,"author":{"gitId":"CrimsonTitan79"},"content":"        medBotList.addListItemFromStorage(listItem);","lastModifiedDate":"2021-10-25"},{"lineNumber":77,"author":{"gitId":"CrimsonTitan79"},"content":"        setListItemIdAsLastId(listItem, medBotList);","lastModifiedDate":"2021-10-25"},{"lineNumber":78,"author":{"gitId":"CrimsonTitan79"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":79,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":80,"author":{"gitId":"CrimsonTitan79"},"content":"    void setListItemIdAsLastId(ListItem listItem, MedBotList medBotList) {","lastModifiedDate":"2021-10-25"},{"lineNumber":81,"author":{"gitId":"CrimsonTitan79"},"content":"        int listItemId \u003d listItem.getId();","lastModifiedDate":"2021-10-25"},{"lineNumber":82,"author":{"gitId":"CrimsonTitan79"},"content":"        if (medBotList.getLastId() \u003c listItemId) {","lastModifiedDate":"2021-10-25"},{"lineNumber":83,"author":{"gitId":"CrimsonTitan79"},"content":"            medBotList.setLastId(listItemId);","lastModifiedDate":"2021-10-25"},{"lineNumber":84,"author":{"gitId":"CrimsonTitan79"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":85,"author":{"gitId":"CrimsonTitan79"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":86,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":87,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":88,"author":{"gitId":"CrimsonTitan79"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":89,"author":{"gitId":"CrimsonTitan79"},"content":"     * Write List\u0027s (PatientList etc.) storageString to storage file.","lastModifiedDate":"2021-10-25"},{"lineNumber":90,"author":{"gitId":"CrimsonTitan79"},"content":"     *","lastModifiedDate":"2021-10-25"},{"lineNumber":91,"author":{"gitId":"CrimsonTitan79"},"content":"     * @param medBotList instance of a subclass of MedBotList","lastModifiedDate":"2021-10-25"},{"lineNumber":92,"author":{"gitId":"CrimsonTitan79"},"content":"     * @throws MedBotException if unable to write to storage text file.","lastModifiedDate":"2021-10-25"},{"lineNumber":93,"author":{"gitId":"CrimsonTitan79"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":94,"author":{"gitId":"CrimsonTitan79"},"content":"    public void saveData(MedBotList medBotList) throws MedBotException {","lastModifiedDate":"2021-10-25"},{"lineNumber":95,"author":{"gitId":"CrimsonTitan79"},"content":"        try {","lastModifiedDate":"2021-10-25"},{"lineNumber":96,"author":{"gitId":"CrimsonTitan79"},"content":"            FileWriter fw \u003d new FileWriter(dataPath);","lastModifiedDate":"2021-10-25"},{"lineNumber":97,"author":{"gitId":"CrimsonTitan79"},"content":"            fw.write(medBotList.getStorageString());","lastModifiedDate":"2021-10-25"},{"lineNumber":98,"author":{"gitId":"CrimsonTitan79"},"content":"            fw.close();","lastModifiedDate":"2021-10-25"},{"lineNumber":99,"author":{"gitId":"CrimsonTitan79"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-10-25"},{"lineNumber":100,"author":{"gitId":"CrimsonTitan79"},"content":"            throw new MedBotException(ERROR_SAVE_STORAGE);","lastModifiedDate":"2021-10-25"},{"lineNumber":101,"author":{"gitId":"CrimsonTitan79"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":102,"author":{"gitId":"CrimsonTitan79"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":103,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":104,"author":{"gitId":"CrimsonTitan79"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":105,"author":{"gitId":"CrimsonTitan79"},"content":"     * String split a line with \" | \" as the delimiters.","lastModifiedDate":"2021-10-25"},{"lineNumber":106,"author":{"gitId":"CrimsonTitan79"},"content":"     *","lastModifiedDate":"2021-10-25"},{"lineNumber":107,"author":{"gitId":"CrimsonTitan79"},"content":"     * @param storageLine a line in storage file","lastModifiedDate":"2021-10-25"},{"lineNumber":108,"author":{"gitId":"CrimsonTitan79"},"content":"     * @return String[] with the parameters separated in different indexes in the array","lastModifiedDate":"2021-10-25"},{"lineNumber":109,"author":{"gitId":"CrimsonTitan79"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":110,"author":{"gitId":"CrimsonTitan79"},"content":"    protected static String[] splitStorageLine(String storageLine) {","lastModifiedDate":"2021-10-25"},{"lineNumber":111,"author":{"gitId":"CrimsonTitan79"},"content":"        return storageLine.split(VERTICAL_LINE_SPACED_ESCAPED);","lastModifiedDate":"2021-10-25"},{"lineNumber":112,"author":{"gitId":"CrimsonTitan79"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":113,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":114,"author":{"gitId":"CrimsonTitan79"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":115,"author":{"gitId":"CrimsonTitan79"},"content":"     * True if \"X\", which means the parameter is null, false otherwise.","lastModifiedDate":"2021-10-25"},{"lineNumber":116,"author":{"gitId":"CrimsonTitan79"},"content":"     *","lastModifiedDate":"2021-10-25"},{"lineNumber":117,"author":{"gitId":"CrimsonTitan79"},"content":"     * @param parameter a parameter in a line of storage/data.txt","lastModifiedDate":"2021-10-25"},{"lineNumber":118,"author":{"gitId":"CrimsonTitan79"},"content":"     * @return true if \"X\", which means the parameter is null, false otherwise","lastModifiedDate":"2021-10-25"},{"lineNumber":119,"author":{"gitId":"CrimsonTitan79"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":120,"author":{"gitId":"CrimsonTitan79"},"content":"    protected static boolean isStorageParameterNull(String parameter) {","lastModifiedDate":"2021-10-25"},{"lineNumber":121,"author":{"gitId":"CrimsonTitan79"},"content":"        return parameter.equals(\"X\");","lastModifiedDate":"2021-10-25"},{"lineNumber":122,"author":{"gitId":"CrimsonTitan79"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":123,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":124,"author":{"gitId":"CrimsonTitan79"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":125,"author":{"gitId":"CrimsonTitan79"},"content":"     * Error message that shows the line number of a line in storage/data.txt with improper formatting.","lastModifiedDate":"2021-10-25"},{"lineNumber":126,"author":{"gitId":"CrimsonTitan79"},"content":"     *","lastModifiedDate":"2021-10-25"},{"lineNumber":127,"author":{"gitId":"CrimsonTitan79"},"content":"     * @param lineNumber the line number with improper formatting in storage/data.txt","lastModifiedDate":"2021-10-25"},{"lineNumber":128,"author":{"gitId":"CrimsonTitan79"},"content":"     * @return Error message","lastModifiedDate":"2021-10-25"},{"lineNumber":129,"author":{"gitId":"CrimsonTitan79"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":130,"author":{"gitId":"CrimsonTitan79"},"content":"    protected String loadStorageLineErrorMessage(int lineNumber) {","lastModifiedDate":"2021-10-25"},{"lineNumber":131,"author":{"gitId":"CrimsonTitan79"},"content":"        return \"Error: Line \" + lineNumber + \" of \" + dataPath","lastModifiedDate":"2021-10-25"},{"lineNumber":132,"author":{"gitId":"CrimsonTitan79"},"content":"                + \" is invalid!\\n\";","lastModifiedDate":"2021-10-25"},{"lineNumber":133,"author":{"gitId":"CrimsonTitan79"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":134,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":135,"author":{"gitId":"CrimsonTitan79"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":136,"author":{"gitId":"CrimsonTitan79"},"content":"     * Template Method. Instantiates a ListItem object.","lastModifiedDate":"2021-10-25"},{"lineNumber":137,"author":{"gitId":"CrimsonTitan79"},"content":"     *","lastModifiedDate":"2021-10-25"},{"lineNumber":138,"author":{"gitId":"CrimsonTitan79"},"content":"     * @param storageLine  a line in storage file","lastModifiedDate":"2021-10-25"},{"lineNumber":139,"author":{"gitId":"CrimsonTitan79"},"content":"     * @param listItemType enum of ListItem type","lastModifiedDate":"2021-10-25"},{"lineNumber":140,"author":{"gitId":"CrimsonTitan79"},"content":"     * @return a ListItem object","lastModifiedDate":"2021-10-25"},{"lineNumber":141,"author":{"gitId":"CrimsonTitan79"},"content":"     * @throws MedBotException if a ListItem object fails to be created","lastModifiedDate":"2021-10-25"},{"lineNumber":142,"author":{"gitId":"CrimsonTitan79"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":143,"author":{"gitId":"CrimsonTitan79"},"content":"    protected ListItem createListItem(String storageLine, ListItemType listItemType) throws MedBotException {","lastModifiedDate":"2021-10-25"},{"lineNumber":144,"author":{"gitId":"CrimsonTitan79"},"content":"        return new ListItem();","lastModifiedDate":"2021-10-25"},{"lineNumber":145,"author":{"gitId":"CrimsonTitan79"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":146,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":147,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":148,"author":{"gitId":"CrimsonTitan79"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":149,"author":{"gitId":"CrimsonTitan79"},"content":"     * Template Method. Parses a line from storage file and organises the data.","lastModifiedDate":"2021-10-25"},{"lineNumber":150,"author":{"gitId":"CrimsonTitan79"},"content":"     *","lastModifiedDate":"2021-10-25"},{"lineNumber":151,"author":{"gitId":"CrimsonTitan79"},"content":"     * @param storageLine a line in the storage file","lastModifiedDate":"2021-10-25"},{"lineNumber":152,"author":{"gitId":"CrimsonTitan79"},"content":"     * @return a Pair containing the data required to create a ListItem type","lastModifiedDate":"2021-10-25"},{"lineNumber":153,"author":{"gitId":"CrimsonTitan79"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":154,"author":{"gitId":"CrimsonTitan79"},"content":"    protected Pair\u003cInteger, ArrayList\u003cString\u003e\u003e parseStorageLine(String storageLine) {","lastModifiedDate":"2021-10-25"},{"lineNumber":155,"author":{"gitId":"CrimsonTitan79"},"content":"        return new Pair\u003c\u003e(0, new ArrayList\u003c\u003e());","lastModifiedDate":"2021-10-25"},{"lineNumber":156,"author":{"gitId":"CrimsonTitan79"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":157,"author":{"gitId":"CrimsonTitan79"},"content":"}","lastModifiedDate":"2021-10-25"},{"lineNumber":158,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"CrimsonTitan79":158}},{"path":"src/main/java/medbot/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"CrimsonTitan79"},"content":"package medbot.storage;","lastModifiedDate":"2021-10-26"},{"lineNumber":2,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":3,"author":{"gitId":"CrimsonTitan79"},"content":"import medbot.Scheduler;","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"CrimsonTitan79"},"content":"import medbot.exceptions.MedBotException;","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"CrimsonTitan79"},"content":"import medbot.list.MedicalStaffList;","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"CrimsonTitan79"},"content":"import medbot.list.PatientList;","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"CrimsonTitan79"},"content":"import medbot.list.SchedulerAppointmentList;","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"CrimsonTitan79"},"content":"import medbot.ui.Ui;","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"CrimsonTitan79"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-10-26"},{"lineNumber":11,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"CrimsonTitan79"},"content":"import static medbot.list.ListItemType.APPOINTMENT;","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"CrimsonTitan79"},"content":"import static medbot.list.ListItemType.PATIENT;","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"CrimsonTitan79"},"content":"import static medbot.list.ListItemType.STAFF;","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"CrimsonTitan79"},"content":"public class StorageManager {","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"CrimsonTitan79"},"content":"    private static PatientStorage patientStorage;","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"CrimsonTitan79"},"content":"    private static StaffStorage staffStorage;","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"CrimsonTitan79"},"content":"    private static AppointmentStorage appointmentStorage;","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"CrimsonTitan79"},"content":"    protected static final String ERROR_INVALID_STORAGE_LINE_INSTRUCTION \u003d \"\\n\"","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"CrimsonTitan79"},"content":"            + \"Please decide if you wish to:\" + \"\\n\"","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"CrimsonTitan79"},"content":"            + \"1. Enter \u0027exit\u0027 to exit Medbot to correct the storage files\" + \"\\n\"","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"CrimsonTitan79"},"content":"            + \"2. Enter other valid commands to OVERWRITE all invalid data!\" + \"\\n\";","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"CrimsonTitan79"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"CrimsonTitan79"},"content":"     * Initializes all storage classes to be used for Medbot, and prints out any errors in storage files.","lastModifiedDate":"2021-10-26"},{"lineNumber":27,"author":{"gitId":"CrimsonTitan79"},"content":"     *","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"CrimsonTitan79"},"content":"     * @param scheduler instance of scheduler class","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"CrimsonTitan79"},"content":"     * @param ui        instance of ui class","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"CrimsonTitan79"},"content":"     * @throws FileNotFoundException if any storage file not found","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"CrimsonTitan79"},"content":"     * @throws MedBotException       If there are any errors in storage files","lastModifiedDate":"2021-10-26"},{"lineNumber":32,"author":{"gitId":"CrimsonTitan79"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":33,"author":{"gitId":"CrimsonTitan79"},"content":"    public StorageManager(Scheduler scheduler, Ui ui) throws FileNotFoundException, MedBotException {","lastModifiedDate":"2021-10-26"},{"lineNumber":34,"author":{"gitId":"CrimsonTitan79"},"content":"        patientStorage \u003d new PatientStorage();","lastModifiedDate":"2021-10-26"},{"lineNumber":35,"author":{"gitId":"CrimsonTitan79"},"content":"        staffStorage \u003d new StaffStorage();","lastModifiedDate":"2021-10-26"},{"lineNumber":36,"author":{"gitId":"CrimsonTitan79"},"content":"        appointmentStorage \u003d new AppointmentStorage();","lastModifiedDate":"2021-10-26"},{"lineNumber":37,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":38,"author":{"gitId":"CrimsonTitan79"},"content":"        String loadStorageErrorMessage \u003d loadStoragesAndGetErrorMessage(scheduler);","lastModifiedDate":"2021-10-26"},{"lineNumber":39,"author":{"gitId":"CrimsonTitan79"},"content":"        if (!loadStorageErrorMessage.isBlank()) {","lastModifiedDate":"2021-10-26"},{"lineNumber":40,"author":{"gitId":"CrimsonTitan79"},"content":"            loadStorageErrorMessage +\u003d ERROR_INVALID_STORAGE_LINE_INSTRUCTION;","lastModifiedDate":"2021-10-26"},{"lineNumber":41,"author":{"gitId":"CrimsonTitan79"},"content":"            ui.printOutput(\"\");","lastModifiedDate":"2021-10-26"},{"lineNumber":42,"author":{"gitId":"CrimsonTitan79"},"content":"            ui.printOutput(loadStorageErrorMessage);","lastModifiedDate":"2021-10-26"},{"lineNumber":43,"author":{"gitId":"CrimsonTitan79"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":44,"author":{"gitId":"CrimsonTitan79"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":45,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":46,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":47,"author":{"gitId":"CrimsonTitan79"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":48,"author":{"gitId":"CrimsonTitan79"},"content":"     * Save all relevant data from Medbot program to storage text files.","lastModifiedDate":"2021-10-26"},{"lineNumber":49,"author":{"gitId":"CrimsonTitan79"},"content":"     *","lastModifiedDate":"2021-10-26"},{"lineNumber":50,"author":{"gitId":"CrimsonTitan79"},"content":"     * @param scheduler instance of Scheduler class","lastModifiedDate":"2021-10-26"},{"lineNumber":51,"author":{"gitId":"CrimsonTitan79"},"content":"     * @throws MedBotException if unable to save data to any of the storage text files","lastModifiedDate":"2021-10-26"},{"lineNumber":52,"author":{"gitId":"CrimsonTitan79"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":53,"author":{"gitId":"CrimsonTitan79"},"content":"    public void saveToStorage(Scheduler scheduler) throws MedBotException {","lastModifiedDate":"2021-10-26"},{"lineNumber":54,"author":{"gitId":"CrimsonTitan79"},"content":"        patientStorage.saveData(scheduler.getPatientList());","lastModifiedDate":"2021-10-26"},{"lineNumber":55,"author":{"gitId":"CrimsonTitan79"},"content":"        staffStorage.saveData(scheduler.getMedicalStaffList());","lastModifiedDate":"2021-10-26"},{"lineNumber":56,"author":{"gitId":"CrimsonTitan79"},"content":"        appointmentStorage.saveData(scheduler.getSchedulerAppointmentList());","lastModifiedDate":"2021-10-26"},{"lineNumber":57,"author":{"gitId":"CrimsonTitan79"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":58,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":59,"author":{"gitId":"CrimsonTitan79"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":60,"author":{"gitId":"CrimsonTitan79"},"content":"     * Load storage text file data into Medbot program. Print any errors in the storage text file data.","lastModifiedDate":"2021-10-26"},{"lineNumber":61,"author":{"gitId":"CrimsonTitan79"},"content":"     *","lastModifiedDate":"2021-10-26"},{"lineNumber":62,"author":{"gitId":"CrimsonTitan79"},"content":"     * @param scheduler instance of Scheduler class","lastModifiedDate":"2021-10-26"},{"lineNumber":63,"author":{"gitId":"CrimsonTitan79"},"content":"     * @return error message of the relevant lines with errors in the storage text files","lastModifiedDate":"2021-10-26"},{"lineNumber":64,"author":{"gitId":"CrimsonTitan79"},"content":"     * @throws FileNotFoundException if storage text files cannot be found","lastModifiedDate":"2021-10-26"},{"lineNumber":65,"author":{"gitId":"CrimsonTitan79"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":66,"author":{"gitId":"CrimsonTitan79"},"content":"    private String loadStoragesAndGetErrorMessage(Scheduler scheduler) throws FileNotFoundException {","lastModifiedDate":"2021-10-26"},{"lineNumber":67,"author":{"gitId":"CrimsonTitan79"},"content":"        PatientList patientList \u003d scheduler.getPatientList();","lastModifiedDate":"2021-10-26"},{"lineNumber":68,"author":{"gitId":"CrimsonTitan79"},"content":"        MedicalStaffList medicalStaffList \u003d scheduler.getMedicalStaffList();","lastModifiedDate":"2021-10-26"},{"lineNumber":69,"author":{"gitId":"CrimsonTitan79"},"content":"        SchedulerAppointmentList schedulerAppointmentList \u003d scheduler.getSchedulerAppointmentList();","lastModifiedDate":"2021-10-26"},{"lineNumber":70,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":71,"author":{"gitId":"CrimsonTitan79"},"content":"        return patientStorage.loadStorage(PATIENT, patientList)","lastModifiedDate":"2021-10-26"},{"lineNumber":72,"author":{"gitId":"CrimsonTitan79"},"content":"                + staffStorage.loadStorage(STAFF, medicalStaffList)","lastModifiedDate":"2021-10-26"},{"lineNumber":73,"author":{"gitId":"CrimsonTitan79"},"content":"                + appointmentStorage.loadStorage(APPOINTMENT, schedulerAppointmentList);","lastModifiedDate":"2021-10-26"},{"lineNumber":74,"author":{"gitId":"CrimsonTitan79"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":75,"author":{"gitId":"CrimsonTitan79"},"content":"}","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"CrimsonTitan79":75}},{"path":"src/main/java/medbot/ui/PatientUi.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jushg"},"content":"package medbot.ui;","lastModifiedDate":"2021-10-22"},{"lineNumber":2,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":3,"author":{"gitId":"EricBryann"},"content":"public class PatientUi extends PersonUi {","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"EricBryann"},"content":"    private static final String PATIENT \u003d \"patient\";","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"justinfidelis"},"content":"    public static String getPatientCommandList() {","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"EricBryann"},"content":"        return getCommandList();","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"jushg"},"content":"    public static String getListPatientHelpMessage() {","lastModifiedDate":"2021-10-22"},{"lineNumber":11,"author":{"gitId":"EricBryann"},"content":"        return getListHelpMessage(PATIENT);","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"jushg"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"jushg"},"content":"    public static String getViewPatientHelpMessage() {","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"EricBryann"},"content":"        return getViewHelpMessage(PATIENT);","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"jushg"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":17,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"jushg"},"content":"    public static String getAddPatientHelpMessage() {","lastModifiedDate":"2021-10-22"},{"lineNumber":19,"author":{"gitId":"EricBryann"},"content":"        return getAddHelpMessage(PATIENT);","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"jushg"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":21,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":22,"author":{"gitId":"jushg"},"content":"    public static String getEditPatientHelpMessage() {","lastModifiedDate":"2021-10-22"},{"lineNumber":23,"author":{"gitId":"EricBryann"},"content":"        return getEditHelpMessage(PATIENT);","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"jushg"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":25,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":26,"author":{"gitId":"jushg"},"content":"    public static String getFindPatientHelpMessage() {","lastModifiedDate":"2021-10-22"},{"lineNumber":27,"author":{"gitId":"EricBryann"},"content":"        return getFindHelpMessage(PATIENT);","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"jushg"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":29,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":30,"author":{"gitId":"jushg"},"content":"    public static String getDeletePatientHelpMessage() {","lastModifiedDate":"2021-10-22"},{"lineNumber":31,"author":{"gitId":"EricBryann"},"content":"        return getDeleteHelpMessage(PATIENT);","lastModifiedDate":"2021-10-26"},{"lineNumber":32,"author":{"gitId":"jushg"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":33,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":34,"author":{"gitId":"EricBryann"},"content":"    public static String getArchivePatientHelpMessage() {","lastModifiedDate":"2021-10-25"},{"lineNumber":35,"author":{"gitId":"EricBryann"},"content":"        return getArchiveHelpMessage(PATIENT);","lastModifiedDate":"2021-10-26"},{"lineNumber":36,"author":{"gitId":"EricBryann"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":37,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":38,"author":{"gitId":"EricBryann"},"content":"    public static String getUnarchivePatientHelpMessage() {","lastModifiedDate":"2021-10-25"},{"lineNumber":39,"author":{"gitId":"EricBryann"},"content":"        return getUnarchiveHelpMessage(PATIENT);","lastModifiedDate":"2021-10-26"},{"lineNumber":40,"author":{"gitId":"EricBryann"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":41,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":42,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":43,"author":{"gitId":"jushg"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":44,"author":{"gitId":"jushg"},"content":"     * Returns the profile of a patient.","lastModifiedDate":"2021-10-25"},{"lineNumber":45,"author":{"gitId":"jushg"},"content":"     *","lastModifiedDate":"2021-10-22"},{"lineNumber":46,"author":{"gitId":"jushg"},"content":"     * @param patientInfo the Info of the patient to be printed.","lastModifiedDate":"2021-10-22"},{"lineNumber":47,"author":{"gitId":"jushg"},"content":"     * @return the Patient information","lastModifiedDate":"2021-10-22"},{"lineNumber":48,"author":{"gitId":"jushg"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":49,"author":{"gitId":"jushg"},"content":"    public static String getPatientInfo(String patientInfo) {","lastModifiedDate":"2021-10-22"},{"lineNumber":50,"author":{"gitId":"EricBryann"},"content":"        return getPersonInfo(PATIENT, patientInfo);","lastModifiedDate":"2021-10-26"},{"lineNumber":51,"author":{"gitId":"jushg"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":52,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":53,"author":{"gitId":"jushg"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":54,"author":{"gitId":"jushg"},"content":"     * Returns all patients\u0027 information in a list.","lastModifiedDate":"2021-10-25"},{"lineNumber":55,"author":{"gitId":"jushg"},"content":"     *","lastModifiedDate":"2021-10-22"},{"lineNumber":56,"author":{"gitId":"justinfidelis"},"content":"     * @param patientListString String containing information of all patients.","lastModifiedDate":"2021-10-24"},{"lineNumber":57,"author":{"gitId":"jushg"},"content":"     * @return all Patients\u0027 information.","lastModifiedDate":"2021-10-22"},{"lineNumber":58,"author":{"gitId":"jushg"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":59,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":60,"author":{"gitId":"justinfidelis"},"content":"    public static String getAllPatientsString(String patientListString) {","lastModifiedDate":"2021-10-24"},{"lineNumber":61,"author":{"gitId":"EricBryann"},"content":"        return getAllPersonsString(PATIENT, patientListString);","lastModifiedDate":"2021-10-26"},{"lineNumber":62,"author":{"gitId":"jushg"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":63,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":64,"author":{"gitId":"jushg"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":65,"author":{"gitId":"jushg"},"content":"     * Returns the header of the patient information table.","lastModifiedDate":"2021-10-25"},{"lineNumber":66,"author":{"gitId":"jushg"},"content":"     *","lastModifiedDate":"2021-10-25"},{"lineNumber":67,"author":{"gitId":"jushg"},"content":"     * @return the header of the patient information table.","lastModifiedDate":"2021-10-25"},{"lineNumber":68,"author":{"gitId":"jushg"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":69,"author":{"gitId":"jushg"},"content":"    public static String getPatientTableHeader() {","lastModifiedDate":"2021-10-22"},{"lineNumber":70,"author":{"gitId":"EricBryann"},"content":"        return getTableHeader(PATIENT);","lastModifiedDate":"2021-10-26"},{"lineNumber":71,"author":{"gitId":"jushg"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":72,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":73,"author":{"gitId":"jushg"},"content":"}","lastModifiedDate":"2021-10-22"}],"authorContributionMap":{"justinfidelis":4,"jushg":45,"EricBryann":24}},{"path":"src/main/java/medbot/ui/PersonUi.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"EricBryann"},"content":"package medbot.ui;","lastModifiedDate":"2021-10-26"},{"lineNumber":2,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":3,"author":{"gitId":"EricBryann"},"content":"public abstract class PersonUi {","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"EricBryann"},"content":"    protected static final String END_LINE \u003d System.lineSeparator();","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"EricBryann"},"content":"    protected static final String TABLE_ROW_SEPARATOR \u003d \" ------------------------------------------------\"","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"EricBryann"},"content":"            + \"----------------------------------------------------- \" + END_LINE;","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"EricBryann"},"content":"    protected static String getCommandList() {","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"EricBryann"},"content":"        return \"Here are the list of commands:\" + END_LINE + END_LINE","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"EricBryann"},"content":"                + \"help\" + END_LINE + \"add\" + END_LINE + \"list\" + END_LINE + \"view\" + END_LINE + \"edit\" + END_LINE","lastModifiedDate":"2021-10-26"},{"lineNumber":11,"author":{"gitId":"EricBryann"},"content":"                + \"find\" + END_LINE + \"delete\" + END_LINE + \"exit\" + END_LINE + \"archive\" + END_LINE + \"unarchive\"","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"EricBryann"},"content":"                + END_LINE + END_LINE","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"EricBryann"},"content":"                + \"To obtain more information on each command and their respective required inputs, type:\" + END_LINE","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"EricBryann"},"content":"                + \"help [COMMAND]\" + END_LINE + END_LINE","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"EricBryann"},"content":"                + \"*Note that all commands will remove any \u0027|\u0027 inputs for format parsing purposes\" + END_LINE;","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"EricBryann"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"EricBryann"},"content":"    protected static String getListHelpMessage(String person) {","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"EricBryann"},"content":"        String uppercasePerson \u003d capitalize(person);","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"EricBryann"},"content":"        String capFistLetterPerson \u003d capitalizeFirstLetter(person);","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"EricBryann"},"content":"        return \"View information of all current \" + person + \"s.\" + END_LINE","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"EricBryann"},"content":"                + \"Format: list\" + END_LINE","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"EricBryann"},"content":"                + \"Expected Output for 2 \" + person + \"s: \" + END_LINE","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"EricBryann"},"content":"                + capFistLetterPerson + \" ID: [\" + uppercasePerson + \"_ID_1] IC: [\" + uppercasePerson + \"_IC]\"","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"EricBryann"},"content":"                + \"Name: [\" + uppercasePerson + \"_NAME] H/P: \"","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"EricBryann"},"content":"                + \"[PHONE NUMBER] Email: [EMAIL]  Address: [ADDRESS]\" + END_LINE","lastModifiedDate":"2021-10-26"},{"lineNumber":27,"author":{"gitId":"EricBryann"},"content":"                + capFistLetterPerson + \" ID: [\" + uppercasePerson","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"EricBryann"},"content":"                + \"_ID_2] IC: [\" + uppercasePerson + \"_IC]\"","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"EricBryann"},"content":"                + \"Name: [\" + uppercasePerson + \"_NAME] H/P: \"","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"EricBryann"},"content":"                + \"[PHONE NUMBER] Email: [EMAIL]  Address: [ADDRESS]\" + END_LINE;","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"EricBryann"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":32,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":33,"author":{"gitId":"EricBryann"},"content":"    protected static String getViewHelpMessage(String person) {","lastModifiedDate":"2021-10-26"},{"lineNumber":34,"author":{"gitId":"EricBryann"},"content":"        String uppercasePerson \u003d capitalize(person);","lastModifiedDate":"2021-10-26"},{"lineNumber":35,"author":{"gitId":"EricBryann"},"content":"        return \"View a \" + person + \"’s personal information.\" + END_LINE","lastModifiedDate":"2021-10-26"},{"lineNumber":36,"author":{"gitId":"EricBryann"},"content":"                + \"Format: view \" + uppercasePerson + \"_ID\" + END_LINE","lastModifiedDate":"2021-10-26"},{"lineNumber":37,"author":{"gitId":"EricBryann"},"content":"                + \"Expected Output:\" + END_LINE","lastModifiedDate":"2021-10-26"},{"lineNumber":38,"author":{"gitId":"EricBryann"},"content":"                + \"id: \" + uppercasePerson + \"_ID \" + \"name: NAME \" + \"phone number: PHONE_NUMBER \"","lastModifiedDate":"2021-10-26"},{"lineNumber":39,"author":{"gitId":"EricBryann"},"content":"                + \"email: EMAIL \" + \"address: ADDRESS\" + END_LINE;","lastModifiedDate":"2021-10-26"},{"lineNumber":40,"author":{"gitId":"EricBryann"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":41,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":42,"author":{"gitId":"EricBryann"},"content":"    protected static String getAddHelpMessage(String person) {","lastModifiedDate":"2021-10-26"},{"lineNumber":43,"author":{"gitId":"EricBryann"},"content":"        String uppercasePerson \u003d capitalize(person);","lastModifiedDate":"2021-10-26"},{"lineNumber":44,"author":{"gitId":"EricBryann"},"content":"        return \"Add a \" + person +  \" to the \" + person + \"’s list.\" + END_LINE","lastModifiedDate":"2021-10-26"},{"lineNumber":45,"author":{"gitId":"EricBryann"},"content":"                + \"Format:\" + END_LINE","lastModifiedDate":"2021-10-26"},{"lineNumber":46,"author":{"gitId":"EricBryann"},"content":"                + \"add i/\" + uppercasePerson + \"_IC [n/NAME] [p/PHONE_NUMBER] [e/EMAIL] [a/ADDRESS]\" + END_LINE","lastModifiedDate":"2021-10-26"},{"lineNumber":47,"author":{"gitId":"EricBryann"},"content":"                + \"Expected output:\" + END_LINE","lastModifiedDate":"2021-10-26"},{"lineNumber":48,"author":{"gitId":"EricBryann"},"content":"                + \"Added \" + person + \" with \" + person + \" ID: \" + uppercasePerson +  \"_ID\" + END_LINE;","lastModifiedDate":"2021-10-26"},{"lineNumber":49,"author":{"gitId":"EricBryann"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":50,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":51,"author":{"gitId":"EricBryann"},"content":"    protected static String getEditHelpMessage(String person) {","lastModifiedDate":"2021-10-26"},{"lineNumber":52,"author":{"gitId":"EricBryann"},"content":"        String uppercasePerson \u003d capitalize(person);","lastModifiedDate":"2021-10-26"},{"lineNumber":53,"author":{"gitId":"EricBryann"},"content":"        String capFistLetterPerson \u003d capitalizeFirstLetter(person);","lastModifiedDate":"2021-10-26"},{"lineNumber":54,"author":{"gitId":"EricBryann"},"content":"        return \"Edit the personal and medical information of a \" + person + \" in the list.\" + END_LINE","lastModifiedDate":"2021-10-26"},{"lineNumber":55,"author":{"gitId":"EricBryann"},"content":"                + \"Format:\" + END_LINE","lastModifiedDate":"2021-10-26"},{"lineNumber":56,"author":{"gitId":"EricBryann"},"content":"                + \"edit \" + uppercasePerson + \" ID [i/\" + uppercasePerson + \"_IC] [n/NAME] [p/PHONE_NUMBER]\"","lastModifiedDate":"2021-10-26"},{"lineNumber":57,"author":{"gitId":"EricBryann"},"content":"                + \" [e/EMAIL] [a/ADDRESS]\" + END_LINE","lastModifiedDate":"2021-10-26"},{"lineNumber":58,"author":{"gitId":"EricBryann"},"content":"                + \"Expected output: \" + END_LINE","lastModifiedDate":"2021-10-26"},{"lineNumber":59,"author":{"gitId":"EricBryann"},"content":"                + \"The information of \" + person + \" with ID \" + uppercasePerson + \"_ID has been edited to:\" + END_LINE","lastModifiedDate":"2021-10-26"},{"lineNumber":60,"author":{"gitId":"EricBryann"},"content":"                + capFistLetterPerson + \" ID: [\" + uppercasePerson + \"_ID] IC: [\" + uppercasePerson","lastModifiedDate":"2021-10-26"},{"lineNumber":61,"author":{"gitId":"EricBryann"},"content":"                + \"_IC] Name: [NAME] H/P: [PHONE_NUMBER] \"","lastModifiedDate":"2021-10-26"},{"lineNumber":62,"author":{"gitId":"EricBryann"},"content":"                + \"Email: [EMAIL] Address: [ADDRESS] \" + END_LINE;","lastModifiedDate":"2021-10-26"},{"lineNumber":63,"author":{"gitId":"EricBryann"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":64,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":65,"author":{"gitId":"EricBryann"},"content":"    public static String getFindHelpMessage(String person) {","lastModifiedDate":"2021-10-26"},{"lineNumber":66,"author":{"gitId":"EricBryann"},"content":"        String uppercasePerson \u003d capitalize(person);","lastModifiedDate":"2021-10-26"},{"lineNumber":67,"author":{"gitId":"EricBryann"},"content":"        String capFistLetterPerson \u003d capitalizeFirstLetter(person);","lastModifiedDate":"2021-10-26"},{"lineNumber":68,"author":{"gitId":"EricBryann"},"content":"        return \"Find \" + person + \"s from the list based on given attributes.\" + END_LINE","lastModifiedDate":"2021-10-26"},{"lineNumber":69,"author":{"gitId":"EricBryann"},"content":"                + \"Format:\" + END_LINE","lastModifiedDate":"2021-10-26"},{"lineNumber":70,"author":{"gitId":"EricBryann"},"content":"                + \"find [i/\" + uppercasePerson + \"_IC] [n/NAME] [p/PHONE_NUMBER] [e/EMAIL] [a/ADDRESS]\" + END_LINE","lastModifiedDate":"2021-10-26"},{"lineNumber":71,"author":{"gitId":"EricBryann"},"content":"                + \"    * The attributes do not have to be in full.\" + END_LINE","lastModifiedDate":"2021-10-26"},{"lineNumber":72,"author":{"gitId":"EricBryann"},"content":"                + \"    * At least one attribute must be present.\" + END_LINE","lastModifiedDate":"2021-10-26"},{"lineNumber":73,"author":{"gitId":"EricBryann"},"content":"                + \"Expected Output:\" + END_LINE","lastModifiedDate":"2021-10-26"},{"lineNumber":74,"author":{"gitId":"EricBryann"},"content":"                + capFistLetterPerson + \" ID: \" + uppercasePerson + \"_ID IC: \" + uppercasePerson + \"_IC Name: NAME \"","lastModifiedDate":"2021-10-26"},{"lineNumber":75,"author":{"gitId":"EricBryann"},"content":"                + \"H/P: PHONE_NUMBER Email: EMAIL Address: ADDRESS\" + END_LINE;","lastModifiedDate":"2021-10-26"},{"lineNumber":76,"author":{"gitId":"EricBryann"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":77,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":78,"author":{"gitId":"EricBryann"},"content":"    public static String getDeleteHelpMessage(String person) {","lastModifiedDate":"2021-10-26"},{"lineNumber":79,"author":{"gitId":"EricBryann"},"content":"        String uppercasePerson \u003d capitalize(person);","lastModifiedDate":"2021-10-26"},{"lineNumber":80,"author":{"gitId":"EricBryann"},"content":"        String capFistLetterPerson \u003d capitalizeFirstLetter(person);","lastModifiedDate":"2021-10-26"},{"lineNumber":81,"author":{"gitId":"EricBryann"},"content":"        return \"Delete a \" + person + \" from the list.\" + END_LINE","lastModifiedDate":"2021-10-26"},{"lineNumber":82,"author":{"gitId":"EricBryann"},"content":"                + \"Format:\" + END_LINE","lastModifiedDate":"2021-10-26"},{"lineNumber":83,"author":{"gitId":"EricBryann"},"content":"                + \"delete \" + uppercasePerson + \"_ID\" + END_LINE","lastModifiedDate":"2021-10-26"},{"lineNumber":84,"author":{"gitId":"EricBryann"},"content":"                + \"Expected Output:\" + END_LINE","lastModifiedDate":"2021-10-26"},{"lineNumber":85,"author":{"gitId":"EricBryann"},"content":"                + capFistLetterPerson + \" with id \" + uppercasePerson + \"_ID deleted from system.\" + END_LINE;","lastModifiedDate":"2021-10-26"},{"lineNumber":86,"author":{"gitId":"EricBryann"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":87,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":88,"author":{"gitId":"EricBryann"},"content":"    public static String getArchiveHelpMessage(String person) {","lastModifiedDate":"2021-10-26"},{"lineNumber":89,"author":{"gitId":"EricBryann"},"content":"        String uppercasePerson \u003d capitalize(person);","lastModifiedDate":"2021-10-26"},{"lineNumber":90,"author":{"gitId":"EricBryann"},"content":"        String capFistLetterPerson \u003d capitalizeFirstLetter(person);","lastModifiedDate":"2021-10-26"},{"lineNumber":91,"author":{"gitId":"EricBryann"},"content":"        return \"Archive a \" + person + \" from the list.\" + END_LINE","lastModifiedDate":"2021-10-26"},{"lineNumber":92,"author":{"gitId":"EricBryann"},"content":"                + \"Format:\" + END_LINE","lastModifiedDate":"2021-10-26"},{"lineNumber":93,"author":{"gitId":"EricBryann"},"content":"                + \"archive \" + uppercasePerson + \"_ID\" + END_LINE","lastModifiedDate":"2021-10-26"},{"lineNumber":94,"author":{"gitId":"EricBryann"},"content":"                + \"Expected Output:\" + END_LINE","lastModifiedDate":"2021-10-26"},{"lineNumber":95,"author":{"gitId":"EricBryann"},"content":"                + capFistLetterPerson + \" with id \" + uppercasePerson + \"_ID is successfully archived.\" + END_LINE;","lastModifiedDate":"2021-10-26"},{"lineNumber":96,"author":{"gitId":"EricBryann"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":97,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":98,"author":{"gitId":"EricBryann"},"content":"    public static String getUnarchiveHelpMessage(String person) {","lastModifiedDate":"2021-10-26"},{"lineNumber":99,"author":{"gitId":"EricBryann"},"content":"        String uppercasePerson \u003d capitalize(person);","lastModifiedDate":"2021-10-26"},{"lineNumber":100,"author":{"gitId":"EricBryann"},"content":"        String capFistLetterPerson \u003d capitalizeFirstLetter(person);","lastModifiedDate":"2021-10-26"},{"lineNumber":101,"author":{"gitId":"EricBryann"},"content":"        return \"Unarchive a \" + person + \" from the list.\" + END_LINE","lastModifiedDate":"2021-10-26"},{"lineNumber":102,"author":{"gitId":"EricBryann"},"content":"                + \"Format:\" + END_LINE","lastModifiedDate":"2021-10-26"},{"lineNumber":103,"author":{"gitId":"EricBryann"},"content":"                + \"unarchive \" + uppercasePerson + \"_ID\" + END_LINE","lastModifiedDate":"2021-10-26"},{"lineNumber":104,"author":{"gitId":"EricBryann"},"content":"                + \"Expected Output:\" + END_LINE","lastModifiedDate":"2021-10-26"},{"lineNumber":105,"author":{"gitId":"EricBryann"},"content":"                + capFistLetterPerson + \" with id \" + uppercasePerson + \"_ID is successfully unarchived.\" + END_LINE;","lastModifiedDate":"2021-10-26"},{"lineNumber":106,"author":{"gitId":"EricBryann"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":107,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":108,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":109,"author":{"gitId":"EricBryann"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":110,"author":{"gitId":"EricBryann"},"content":"     * Returns the profile of a person.","lastModifiedDate":"2021-10-26"},{"lineNumber":111,"author":{"gitId":"EricBryann"},"content":"     *","lastModifiedDate":"2021-10-26"},{"lineNumber":112,"author":{"gitId":"EricBryann"},"content":"     * @param personInfo the Info of the person to be printed.","lastModifiedDate":"2021-10-26"},{"lineNumber":113,"author":{"gitId":"EricBryann"},"content":"     * @return the Person information","lastModifiedDate":"2021-10-26"},{"lineNumber":114,"author":{"gitId":"EricBryann"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":115,"author":{"gitId":"EricBryann"},"content":"    public static String getPersonInfo(String person, String personInfo) {","lastModifiedDate":"2021-10-26"},{"lineNumber":116,"author":{"gitId":"EricBryann"},"content":"        return \"Here\u0027s the requested \" + person + \":\" + END_LINE + END_LINE","lastModifiedDate":"2021-10-26"},{"lineNumber":117,"author":{"gitId":"EricBryann"},"content":"                + personInfo + END_LINE;","lastModifiedDate":"2021-10-26"},{"lineNumber":118,"author":{"gitId":"EricBryann"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":119,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":120,"author":{"gitId":"EricBryann"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":121,"author":{"gitId":"EricBryann"},"content":"     * Returns all persons\u0027 information in a list.","lastModifiedDate":"2021-10-26"},{"lineNumber":122,"author":{"gitId":"EricBryann"},"content":"     *","lastModifiedDate":"2021-10-26"},{"lineNumber":123,"author":{"gitId":"EricBryann"},"content":"     * @param personListString String containing information of all persons.","lastModifiedDate":"2021-10-26"},{"lineNumber":124,"author":{"gitId":"EricBryann"},"content":"     * @return all Persons\u0027 information.","lastModifiedDate":"2021-10-26"},{"lineNumber":125,"author":{"gitId":"EricBryann"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":126,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":127,"author":{"gitId":"EricBryann"},"content":"    public static String getAllPersonsString(String person, String personListString) {","lastModifiedDate":"2021-10-26"},{"lineNumber":128,"author":{"gitId":"EricBryann"},"content":"        String output \u003d getTableHeader(person);","lastModifiedDate":"2021-10-26"},{"lineNumber":129,"author":{"gitId":"EricBryann"},"content":"        output +\u003d personListString;","lastModifiedDate":"2021-10-26"},{"lineNumber":130,"author":{"gitId":"EricBryann"},"content":"        output +\u003d TABLE_ROW_SEPARATOR;","lastModifiedDate":"2021-10-26"},{"lineNumber":131,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":132,"author":{"gitId":"EricBryann"},"content":"        return output;","lastModifiedDate":"2021-10-26"},{"lineNumber":133,"author":{"gitId":"EricBryann"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":134,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":135,"author":{"gitId":"EricBryann"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":136,"author":{"gitId":"EricBryann"},"content":"     * Returns the header of the person information table.","lastModifiedDate":"2021-10-26"},{"lineNumber":137,"author":{"gitId":"EricBryann"},"content":"     *","lastModifiedDate":"2021-10-26"},{"lineNumber":138,"author":{"gitId":"EricBryann"},"content":"     * @return the header of the person information table.","lastModifiedDate":"2021-10-26"},{"lineNumber":139,"author":{"gitId":"EricBryann"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":140,"author":{"gitId":"EricBryann"},"content":"    public static String getTableHeader(String person) {","lastModifiedDate":"2021-10-26"},{"lineNumber":141,"author":{"gitId":"EricBryann"},"content":"        String uppercasePerson \u003d capitalize(person);","lastModifiedDate":"2021-10-26"},{"lineNumber":142,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":143,"author":{"gitId":"EricBryann"},"content":"        String output \u003d \"Here is a list of all \" + person + \"s:\" + END_LINE;","lastModifiedDate":"2021-10-26"},{"lineNumber":144,"author":{"gitId":"EricBryann"},"content":"        output +\u003d \"For full details of each \" + person + \", please use the command \\\"view \" + uppercasePerson","lastModifiedDate":"2021-10-26"},{"lineNumber":145,"author":{"gitId":"EricBryann"},"content":"                + \"_ID\\\"\" + END_LINE;","lastModifiedDate":"2021-10-26"},{"lineNumber":146,"author":{"gitId":"EricBryann"},"content":"        output +\u003d TABLE_ROW_SEPARATOR;","lastModifiedDate":"2021-10-26"},{"lineNumber":147,"author":{"gitId":"EricBryann"},"content":"        output +\u003d \" |  ID  | IC Number |         Name         |\"","lastModifiedDate":"2021-10-26"},{"lineNumber":148,"author":{"gitId":"EricBryann"},"content":"                + \" Phone No. |        Email         |       Address        | \" + END_LINE;","lastModifiedDate":"2021-10-26"},{"lineNumber":149,"author":{"gitId":"EricBryann"},"content":"        output +\u003d TABLE_ROW_SEPARATOR;","lastModifiedDate":"2021-10-26"},{"lineNumber":150,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":151,"author":{"gitId":"EricBryann"},"content":"        return output;","lastModifiedDate":"2021-10-26"},{"lineNumber":152,"author":{"gitId":"EricBryann"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":153,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":154,"author":{"gitId":"EricBryann"},"content":"    private static String capitalize(String word) {","lastModifiedDate":"2021-10-26"},{"lineNumber":155,"author":{"gitId":"EricBryann"},"content":"        return word.toUpperCase();","lastModifiedDate":"2021-10-26"},{"lineNumber":156,"author":{"gitId":"EricBryann"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":157,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":158,"author":{"gitId":"EricBryann"},"content":"    private static String capitalizeFirstLetter(String word) {","lastModifiedDate":"2021-10-26"},{"lineNumber":159,"author":{"gitId":"EricBryann"},"content":"        return word.substring(0, 1).toUpperCase() + word.substring(1);","lastModifiedDate":"2021-10-26"},{"lineNumber":160,"author":{"gitId":"EricBryann"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":161,"author":{"gitId":"EricBryann"},"content":"}","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"EricBryann":161}},{"path":"src/main/java/medbot/ui/SchedulerUi.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jushg"},"content":"package medbot.ui;","lastModifiedDate":"2021-10-22"},{"lineNumber":2,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":3,"author":{"gitId":"jushg"},"content":"import java.util.List;","lastModifiedDate":"2021-10-22"},{"lineNumber":4,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"jushg"},"content":"public class SchedulerUi {","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"justinfidelis"},"content":"    private static final String END_LINE \u003d System.lineSeparator();","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"justinfidelis"},"content":"    private static final String TABLE_ROW_SEPARATOR \u003d \" ------------------------------------------------\"","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"justinfidelis"},"content":"            + \"-------------------------------------------------- \" + END_LINE;","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"justinfidelis"},"content":"    private static final String APPOINTMENT_TABLE_HEADER \u003d \" |  ID  |     Date/Time     | Patient ID |\"","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"justinfidelis"},"content":"            + \"     Patient Name     | Staff ID |      Staff Name      | \" + END_LINE;","lastModifiedDate":"2021-10-26"},{"lineNumber":11,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":12,"author":{"gitId":"jushg"},"content":"    public static String getAddSchedulerHelpMessage() {","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"jushg"},"content":"        return \" \" + END_LINE;","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"jushg"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":16,"author":{"gitId":"jushg"},"content":"    public static String getEditSchedulerHelpMessage() {","lastModifiedDate":"2021-10-22"},{"lineNumber":17,"author":{"gitId":"jushg"},"content":"        return \" \" + END_LINE;","lastModifiedDate":"2021-10-22"},{"lineNumber":18,"author":{"gitId":"jushg"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":19,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":20,"author":{"gitId":"jushg"},"content":"    public static String getFindSchedulerHelpMessage() {","lastModifiedDate":"2021-10-22"},{"lineNumber":21,"author":{"gitId":"jushg"},"content":"        return \" \" + END_LINE;","lastModifiedDate":"2021-10-22"},{"lineNumber":22,"author":{"gitId":"jushg"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":23,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":24,"author":{"gitId":"jushg"},"content":"    public static String getViewSchedulerHelpMessage() {","lastModifiedDate":"2021-10-22"},{"lineNumber":25,"author":{"gitId":"jushg"},"content":"        return \" \" + END_LINE;","lastModifiedDate":"2021-10-22"},{"lineNumber":26,"author":{"gitId":"jushg"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":27,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":28,"author":{"gitId":"jushg"},"content":"    public static String getListSchedulerHelpMessage() {","lastModifiedDate":"2021-10-22"},{"lineNumber":29,"author":{"gitId":"jushg"},"content":"        return \" \" + END_LINE;","lastModifiedDate":"2021-10-22"},{"lineNumber":30,"author":{"gitId":"jushg"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":31,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":32,"author":{"gitId":"jushg"},"content":"    public static String getDeleteSchedulerHelpMessage() {","lastModifiedDate":"2021-10-22"},{"lineNumber":33,"author":{"gitId":"jushg"},"content":"        return \" \" + END_LINE;","lastModifiedDate":"2021-10-22"},{"lineNumber":34,"author":{"gitId":"jushg"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":35,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":36,"author":{"gitId":"justinfidelis"},"content":"    public static String getNoAppointmentsFoundMessage() {","lastModifiedDate":"2021-10-26"},{"lineNumber":37,"author":{"gitId":"justinfidelis"},"content":"        return \"Sorry, no appointments meeting that criteria were found!\";","lastModifiedDate":"2021-10-26"},{"lineNumber":38,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":39,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":40,"author":{"gitId":"justinfidelis"},"content":"    public static String getNoAppointmentsMessage() {","lastModifiedDate":"2021-10-26"},{"lineNumber":41,"author":{"gitId":"justinfidelis"},"content":"        return \"Sorry, there are no appointments found.\";","lastModifiedDate":"2021-10-26"},{"lineNumber":42,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":43,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":44,"author":{"gitId":"jushg"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":45,"author":{"gitId":"jushg"},"content":"     * Returns a schedule information.","lastModifiedDate":"2021-10-25"},{"lineNumber":46,"author":{"gitId":"jushg"},"content":"     *","lastModifiedDate":"2021-10-25"},{"lineNumber":47,"author":{"gitId":"jushg"},"content":"     * @param scheduleInfo the Info of the patient to be printed.","lastModifiedDate":"2021-10-25"},{"lineNumber":48,"author":{"gitId":"jushg"},"content":"     * @return the Schedule information","lastModifiedDate":"2021-10-25"},{"lineNumber":49,"author":{"gitId":"jushg"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":50,"author":{"gitId":"jushg"},"content":"    public static String getScheduleInfo(String scheduleInfo) {","lastModifiedDate":"2021-10-22"},{"lineNumber":51,"author":{"gitId":"jushg"},"content":"        return \"Here\u0027s the requested schedule:\" + END_LINE + END_LINE","lastModifiedDate":"2021-10-25"},{"lineNumber":52,"author":{"gitId":"jushg"},"content":"                + scheduleInfo + END_LINE;","lastModifiedDate":"2021-10-22"},{"lineNumber":53,"author":{"gitId":"jushg"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":54,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":55,"author":{"gitId":"justinfidelis"},"content":"    public static String getSchedulerCommandList() {","lastModifiedDate":"2021-10-25"},{"lineNumber":56,"author":{"gitId":"justinfidelis"},"content":"        return \"Here are the list of commands:\" + END_LINE + END_LINE","lastModifiedDate":"2021-10-25"},{"lineNumber":57,"author":{"gitId":"justinfidelis"},"content":"                + \"help\" + END_LINE + \"add\" + END_LINE + \"list\" + END_LINE + \"view\" + END_LINE + \"edit\" + END_LINE","lastModifiedDate":"2021-10-25"},{"lineNumber":58,"author":{"gitId":"justinfidelis"},"content":"                + \"find\" + END_LINE + \"delete\" + END_LINE + \"exit\" + END_LINE + END_LINE","lastModifiedDate":"2021-10-25"},{"lineNumber":59,"author":{"gitId":"justinfidelis"},"content":"                + \"To obtain more information on each command and their respective required inputs, type:\" + END_LINE","lastModifiedDate":"2021-10-25"},{"lineNumber":60,"author":{"gitId":"justinfidelis"},"content":"                + \"help [COMMAND]\" + END_LINE + END_LINE","lastModifiedDate":"2021-10-25"},{"lineNumber":61,"author":{"gitId":"justinfidelis"},"content":"                + \"*Note that all commands will remove any \u0027|\u0027 inputs for format parsing purposes\" + END_LINE;","lastModifiedDate":"2021-10-25"},{"lineNumber":62,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":63,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":64,"author":{"gitId":"jushg"},"content":"    public static String getAddSchedulerMessage(int schedulerId) {","lastModifiedDate":"2021-10-22"},{"lineNumber":65,"author":{"gitId":"jushg"},"content":"        assert schedulerId \u003e 0;","lastModifiedDate":"2021-10-22"},{"lineNumber":66,"author":{"gitId":"jushg"},"content":"        return \"Added schedule with schedule ID: \" + schedulerId + END_LINE;","lastModifiedDate":"2021-10-22"},{"lineNumber":67,"author":{"gitId":"jushg"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":68,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":69,"author":{"gitId":"jushg"},"content":"    public String getDeleteScheduleMessage(int scheduleId) {","lastModifiedDate":"2021-10-22"},{"lineNumber":70,"author":{"gitId":"jushg"},"content":"        assert scheduleId \u003e 0;","lastModifiedDate":"2021-10-22"},{"lineNumber":71,"author":{"gitId":"jushg"},"content":"        return \"Schedule with id \" + scheduleId + \" has been deleted from system.\" + END_LINE;","lastModifiedDate":"2021-10-22"},{"lineNumber":72,"author":{"gitId":"jushg"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":73,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":74,"author":{"gitId":"jushg"},"content":"    public String getEditScheduleMessage(int scheduleId, String scheduleInfo) {","lastModifiedDate":"2021-10-22"},{"lineNumber":75,"author":{"gitId":"jushg"},"content":"        assert scheduleId \u003e 0;","lastModifiedDate":"2021-10-22"},{"lineNumber":76,"author":{"gitId":"jushg"},"content":"        return \"The information of schedule with ID \" + scheduleId + \" has been edited to:\" + END_LINE + END_LINE","lastModifiedDate":"2021-10-25"},{"lineNumber":77,"author":{"gitId":"jushg"},"content":"                + scheduleInfo + END_LINE;","lastModifiedDate":"2021-10-22"},{"lineNumber":78,"author":{"gitId":"jushg"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":79,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":80,"author":{"gitId":"jushg"},"content":"    public String getFindSchedulesMessage(List\u003cString\u003e schedules) {","lastModifiedDate":"2021-10-22"},{"lineNumber":81,"author":{"gitId":"jushg"},"content":"        if (schedules.size() \u003d\u003d 0) {","lastModifiedDate":"2021-10-22"},{"lineNumber":82,"author":{"gitId":"jushg"},"content":"            return \"There is no schedule with such attributes.\" + END_LINE;","lastModifiedDate":"2021-10-25"},{"lineNumber":83,"author":{"gitId":"jushg"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":84,"author":{"gitId":"jushg"},"content":"        String output \u003d TABLE_ROW_SEPARATOR;","lastModifiedDate":"2021-10-22"},{"lineNumber":85,"author":{"gitId":"jushg"},"content":"        for (String patient : schedules) {","lastModifiedDate":"2021-10-22"},{"lineNumber":86,"author":{"gitId":"jushg"},"content":"            output +\u003d patient;","lastModifiedDate":"2021-10-22"},{"lineNumber":87,"author":{"gitId":"jushg"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":88,"author":{"gitId":"jushg"},"content":"        output +\u003d END_LINE;","lastModifiedDate":"2021-10-22"},{"lineNumber":89,"author":{"gitId":"jushg"},"content":"        output +\u003d TABLE_ROW_SEPARATOR;","lastModifiedDate":"2021-10-22"},{"lineNumber":90,"author":{"gitId":"jushg"},"content":"        return output;","lastModifiedDate":"2021-10-22"},{"lineNumber":91,"author":{"gitId":"jushg"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":92,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":93,"author":{"gitId":"justinfidelis"},"content":"    public static String getFindAppointmentListMessage(String appointmentString) {","lastModifiedDate":"2021-10-26"},{"lineNumber":94,"author":{"gitId":"justinfidelis"},"content":"        return \"Here is a list of matched appointments:\" + END_LINE","lastModifiedDate":"2021-10-26"},{"lineNumber":95,"author":{"gitId":"justinfidelis"},"content":"                + TABLE_ROW_SEPARATOR","lastModifiedDate":"2021-10-26"},{"lineNumber":96,"author":{"gitId":"justinfidelis"},"content":"                + APPOINTMENT_TABLE_HEADER","lastModifiedDate":"2021-10-26"},{"lineNumber":97,"author":{"gitId":"justinfidelis"},"content":"                + TABLE_ROW_SEPARATOR","lastModifiedDate":"2021-10-26"},{"lineNumber":98,"author":{"gitId":"justinfidelis"},"content":"                + appointmentString;","lastModifiedDate":"2021-10-26"},{"lineNumber":99,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":100,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":101,"author":{"gitId":"justinfidelis"},"content":"    public static String getListAppointmentListMessage(String appointmentString) {","lastModifiedDate":"2021-10-26"},{"lineNumber":102,"author":{"gitId":"justinfidelis"},"content":"        return \"Here is a list of all appointments:\" + END_LINE","lastModifiedDate":"2021-10-26"},{"lineNumber":103,"author":{"gitId":"justinfidelis"},"content":"                + TABLE_ROW_SEPARATOR","lastModifiedDate":"2021-10-26"},{"lineNumber":104,"author":{"gitId":"justinfidelis"},"content":"                + APPOINTMENT_TABLE_HEADER","lastModifiedDate":"2021-10-26"},{"lineNumber":105,"author":{"gitId":"justinfidelis"},"content":"                + TABLE_ROW_SEPARATOR","lastModifiedDate":"2021-10-26"},{"lineNumber":106,"author":{"gitId":"justinfidelis"},"content":"                + appointmentString;","lastModifiedDate":"2021-10-26"},{"lineNumber":107,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":108,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":109,"author":{"gitId":"jushg"},"content":"}","lastModifiedDate":"2021-10-22"}],"authorContributionMap":{"justinfidelis":36,"jushg":73}},{"path":"src/main/java/medbot/ui/StaffUi.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jushg"},"content":"package medbot.ui;","lastModifiedDate":"2021-10-22"},{"lineNumber":2,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":3,"author":{"gitId":"EricBryann"},"content":"public class StaffUi extends PersonUi {","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"EricBryann"},"content":"    private static final String STAFF \u003d \"staff\";","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"justinfidelis"},"content":"    public static String getStaffCommandList() {","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"EricBryann"},"content":"        return getCommandList();","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"jushg"},"content":"    public static String getAddStaffHelpMessage() {","lastModifiedDate":"2021-10-22"},{"lineNumber":11,"author":{"gitId":"EricBryann"},"content":"        return getAddHelpMessage(STAFF);","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"jushg"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"jushg"},"content":"    public static String getEditStaffHelpMessage() {","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"EricBryann"},"content":"        return getEditHelpMessage(STAFF);","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"jushg"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":17,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":18,"author":{"gitId":"jushg"},"content":"    public static String getFindStaffHelpMessage() {","lastModifiedDate":"2021-10-22"},{"lineNumber":19,"author":{"gitId":"EricBryann"},"content":"        return getFindHelpMessage(STAFF);","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"jushg"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":21,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":22,"author":{"gitId":"jushg"},"content":"    public static String getViewStaffHelpMessage() {","lastModifiedDate":"2021-10-22"},{"lineNumber":23,"author":{"gitId":"EricBryann"},"content":"        return getViewHelpMessage(STAFF);","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"jushg"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":25,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":26,"author":{"gitId":"jushg"},"content":"    public static String getListStaffHelpMessage() {","lastModifiedDate":"2021-10-22"},{"lineNumber":27,"author":{"gitId":"EricBryann"},"content":"        return getListHelpMessage(STAFF);","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"jushg"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":29,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":30,"author":{"gitId":"jushg"},"content":"    public static String getDeleteStaffHelpMessage() {","lastModifiedDate":"2021-10-22"},{"lineNumber":31,"author":{"gitId":"EricBryann"},"content":"        return getDeleteHelpMessage(STAFF);","lastModifiedDate":"2021-10-26"},{"lineNumber":32,"author":{"gitId":"jushg"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":33,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":34,"author":{"gitId":"EricBryann"},"content":"    public static String getArchiveStaffHelpMessage() {","lastModifiedDate":"2021-10-25"},{"lineNumber":35,"author":{"gitId":"EricBryann"},"content":"        return getArchiveHelpMessage(STAFF);","lastModifiedDate":"2021-10-26"},{"lineNumber":36,"author":{"gitId":"EricBryann"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":37,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":38,"author":{"gitId":"EricBryann"},"content":"    public static String getUnarchiveStaffHelpMessage() {","lastModifiedDate":"2021-10-25"},{"lineNumber":39,"author":{"gitId":"EricBryann"},"content":"        return getUnarchiveHelpMessage(STAFF);","lastModifiedDate":"2021-10-26"},{"lineNumber":40,"author":{"gitId":"EricBryann"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":41,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":42,"author":{"gitId":"jushg"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":43,"author":{"gitId":"jushg"},"content":"     * Returns the profile of a staff.","lastModifiedDate":"2021-10-25"},{"lineNumber":44,"author":{"gitId":"jushg"},"content":"     *","lastModifiedDate":"2021-10-22"},{"lineNumber":45,"author":{"gitId":"jushg"},"content":"     * @param staffInfo the Info of the patient to be printed.","lastModifiedDate":"2021-10-22"},{"lineNumber":46,"author":{"gitId":"jushg"},"content":"     * @return the staff information","lastModifiedDate":"2021-10-22"},{"lineNumber":47,"author":{"gitId":"jushg"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":48,"author":{"gitId":"jushg"},"content":"    public static String getStaffInfo(String staffInfo) {","lastModifiedDate":"2021-10-22"},{"lineNumber":49,"author":{"gitId":"EricBryann"},"content":"        return getPersonInfo(STAFF, staffInfo);","lastModifiedDate":"2021-10-26"},{"lineNumber":50,"author":{"gitId":"jushg"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":51,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":52,"author":{"gitId":"jushg"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":53,"author":{"gitId":"jushg"},"content":"     * Returns all staffs\u0027 information in a list.","lastModifiedDate":"2021-10-25"},{"lineNumber":54,"author":{"gitId":"jushg"},"content":"     *","lastModifiedDate":"2021-10-22"},{"lineNumber":55,"author":{"gitId":"justinfidelis"},"content":"     * @param staffListString String containing information of all staff.","lastModifiedDate":"2021-10-24"},{"lineNumber":56,"author":{"gitId":"jushg"},"content":"     * @return all Staffs\u0027 information.","lastModifiedDate":"2021-10-22"},{"lineNumber":57,"author":{"gitId":"jushg"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":58,"author":{"gitId":"justinfidelis"},"content":"    public static String getAllStaffsString(String staffListString) {","lastModifiedDate":"2021-10-24"},{"lineNumber":59,"author":{"gitId":"EricBryann"},"content":"        return getAllPersonsString(STAFF, staffListString);","lastModifiedDate":"2021-10-26"},{"lineNumber":60,"author":{"gitId":"jushg"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":61,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":62,"author":{"gitId":"jushg"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":63,"author":{"gitId":"jushg"},"content":"     * Returns the header of the staff information table.","lastModifiedDate":"2021-10-25"},{"lineNumber":64,"author":{"gitId":"jushg"},"content":"     *","lastModifiedDate":"2021-10-25"},{"lineNumber":65,"author":{"gitId":"jushg"},"content":"     * @return the header of the staff information table.","lastModifiedDate":"2021-10-25"},{"lineNumber":66,"author":{"gitId":"jushg"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":67,"author":{"gitId":"jushg"},"content":"    public static String getStaffTableHeader() {","lastModifiedDate":"2021-10-22"},{"lineNumber":68,"author":{"gitId":"EricBryann"},"content":"        return getTableHeader(STAFF);","lastModifiedDate":"2021-10-26"},{"lineNumber":69,"author":{"gitId":"jushg"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":70,"author":{"gitId":"jushg"},"content":"}","lastModifiedDate":"2021-10-22"}],"authorContributionMap":{"justinfidelis":5,"jushg":45,"EricBryann":20}},{"path":"src/main/java/medbot/ui/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jushg"},"content":"package medbot.ui;","lastModifiedDate":"2021-10-22"},{"lineNumber":2,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":3,"author":{"gitId":"jushg"},"content":"import medbot.exceptions.MedBotException;","lastModifiedDate":"2021-10-22"},{"lineNumber":4,"author":{"gitId":"jushg"},"content":"import medbot.utilities.ViewType;","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"jushg"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"jushg"},"content":"import java.util.List;","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"jushg"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":10,"author":{"gitId":"jushg"},"content":"/**","lastModifiedDate":"2021-10-22"},{"lineNumber":11,"author":{"gitId":"jushg"},"content":" * Represents a UI class that interacts with User","lastModifiedDate":"2021-10-22"},{"lineNumber":12,"author":{"gitId":"jushg"},"content":" * (Reading user input and printing message to users).","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"jushg"},"content":" */","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"jushg"},"content":"public class Ui {","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"jushg"},"content":"    public static final String VERTICAL_LINE_SPACED_ESCAPED \u003d \" \\\\| \";","lastModifiedDate":"2021-10-22"},{"lineNumber":16,"author":{"gitId":"jushg"},"content":"    public static final String VERTICAL_LINE_SPACED \u003d \" | \";","lastModifiedDate":"2021-10-22"},{"lineNumber":17,"author":{"gitId":"jushg"},"content":"    public static final String END_LINE \u003d System.lineSeparator();","lastModifiedDate":"2021-10-22"},{"lineNumber":18,"author":{"gitId":"jushg"},"content":"    private static final String ERROR_VIEW_CONTEXT_NOT_FOUND \u003d \"Cannot identify the current view type\" + END_LINE;","lastModifiedDate":"2021-10-22"},{"lineNumber":19,"author":{"gitId":"jushg"},"content":"    private static final String TABLE_ROW_SEPARATOR \u003d \" ------------------------------------------------\"","lastModifiedDate":"2021-10-22"},{"lineNumber":20,"author":{"gitId":"jushg"},"content":"            + \"----------------------------------------------------- \" + END_LINE;","lastModifiedDate":"2021-10-22"},{"lineNumber":21,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":22,"author":{"gitId":"jushg"},"content":"    private Scanner inputScanner \u003d new Scanner(System.in);","lastModifiedDate":"2021-10-22"},{"lineNumber":23,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":24,"author":{"gitId":"jushg"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":25,"author":{"gitId":"jushg"},"content":"     * Gets user input from terminal and returns it as a String.","lastModifiedDate":"2021-10-22"},{"lineNumber":26,"author":{"gitId":"jushg"},"content":"     *","lastModifiedDate":"2021-10-22"},{"lineNumber":27,"author":{"gitId":"jushg"},"content":"     * @return the String containing the user input.","lastModifiedDate":"2021-10-22"},{"lineNumber":28,"author":{"gitId":"jushg"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":29,"author":{"gitId":"jushg"},"content":"    public String readInput() {","lastModifiedDate":"2021-10-22"},{"lineNumber":30,"author":{"gitId":"jushg"},"content":"        String line;","lastModifiedDate":"2021-10-22"},{"lineNumber":31,"author":{"gitId":"jushg"},"content":"        line \u003d inputScanner.nextLine();","lastModifiedDate":"2021-10-22"},{"lineNumber":32,"author":{"gitId":"jushg"},"content":"        return line;","lastModifiedDate":"2021-10-22"},{"lineNumber":33,"author":{"gitId":"jushg"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":34,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":35,"author":{"gitId":"jushg"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":36,"author":{"gitId":"jushg"},"content":"     * Prints a message.","lastModifiedDate":"2021-10-22"},{"lineNumber":37,"author":{"gitId":"jushg"},"content":"     *","lastModifiedDate":"2021-10-22"},{"lineNumber":38,"author":{"gitId":"jushg"},"content":"     * @param outputMessage the message to be printed","lastModifiedDate":"2021-10-22"},{"lineNumber":39,"author":{"gitId":"jushg"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":40,"author":{"gitId":"jushg"},"content":"    public void printOutput(String outputMessage) {","lastModifiedDate":"2021-10-22"},{"lineNumber":41,"author":{"gitId":"jushg"},"content":"        System.out.println(outputMessage);","lastModifiedDate":"2021-10-22"},{"lineNumber":42,"author":{"gitId":"jushg"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":43,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":44,"author":{"gitId":"jushg"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":45,"author":{"gitId":"jushg"},"content":"     * Prints a welcome message when MedBot is first loaded.","lastModifiedDate":"2021-10-22"},{"lineNumber":46,"author":{"gitId":"jushg"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":47,"author":{"gitId":"jushg"},"content":"    public void printWelcomeMessageOne() {","lastModifiedDate":"2021-10-22"},{"lineNumber":48,"author":{"gitId":"jushg"},"content":"        printOutput(\"Hello, I\u0027m MedBot!\");","lastModifiedDate":"2021-10-22"},{"lineNumber":49,"author":{"gitId":"jushg"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":50,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":51,"author":{"gitId":"jushg"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":52,"author":{"gitId":"jushg"},"content":"     * Prints a welcome message when MedBot file storage is successfully loaded.","lastModifiedDate":"2021-10-22"},{"lineNumber":53,"author":{"gitId":"jushg"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":54,"author":{"gitId":"jushg"},"content":"    public void printWelcomeMessageTwo() {","lastModifiedDate":"2021-10-22"},{"lineNumber":55,"author":{"gitId":"jushg"},"content":"        printOutput(\"How can I help you today?\" + END_LINE);","lastModifiedDate":"2021-10-22"},{"lineNumber":56,"author":{"gitId":"jushg"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":57,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":58,"author":{"gitId":"jushg"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":59,"author":{"gitId":"jushg"},"content":"     * Returns a message when successfully add to a list.","lastModifiedDate":"2021-10-22"},{"lineNumber":60,"author":{"gitId":"jushg"},"content":"     *","lastModifiedDate":"2021-10-22"},{"lineNumber":61,"author":{"gitId":"jushg"},"content":"     * @param id       the ID of the patient to be added","lastModifiedDate":"2021-10-22"},{"lineNumber":62,"author":{"gitId":"jushg"},"content":"     * @param viewType the viewType context of the command","lastModifiedDate":"2021-10-22"},{"lineNumber":63,"author":{"gitId":"jushg"},"content":"     * @return the Successful Message","lastModifiedDate":"2021-10-22"},{"lineNumber":64,"author":{"gitId":"jushg"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":65,"author":{"gitId":"jushg"},"content":"    public static String getAddMessage(int id, ViewType viewType) throws MedBotException {","lastModifiedDate":"2021-10-22"},{"lineNumber":66,"author":{"gitId":"jushg"},"content":"        assert id \u003e 0;","lastModifiedDate":"2021-10-22"},{"lineNumber":67,"author":{"gitId":"jushg"},"content":"        switch (viewType) {","lastModifiedDate":"2021-10-22"},{"lineNumber":68,"author":{"gitId":"jushg"},"content":"        case PATIENT_INFO:","lastModifiedDate":"2021-10-22"},{"lineNumber":69,"author":{"gitId":"jushg"},"content":"            return \"Added patient with patient ID: \" + id + END_LINE;","lastModifiedDate":"2021-10-22"},{"lineNumber":70,"author":{"gitId":"jushg"},"content":"        case SCHEDULER:","lastModifiedDate":"2021-10-22"},{"lineNumber":71,"author":{"gitId":"jushg"},"content":"            return \"Added schedule with schedule ID: \" + id + END_LINE;","lastModifiedDate":"2021-10-22"},{"lineNumber":72,"author":{"gitId":"jushg"},"content":"        case MEDICAL_STAFF_INFO:","lastModifiedDate":"2021-10-22"},{"lineNumber":73,"author":{"gitId":"jushg"},"content":"            return \"Added staff with staff ID: \" + id + END_LINE;","lastModifiedDate":"2021-10-22"},{"lineNumber":74,"author":{"gitId":"jushg"},"content":"        default:","lastModifiedDate":"2021-10-22"},{"lineNumber":75,"author":{"gitId":"jushg"},"content":"            assert false;","lastModifiedDate":"2021-10-22"},{"lineNumber":76,"author":{"gitId":"jushg"},"content":"            throw new MedBotException(ERROR_VIEW_CONTEXT_NOT_FOUND);","lastModifiedDate":"2021-10-22"},{"lineNumber":77,"author":{"gitId":"jushg"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":78,"author":{"gitId":"jushg"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":79,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":80,"author":{"gitId":"jushg"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":81,"author":{"gitId":"jushg"},"content":"     * Returns a message when successfully delete an object from a list.","lastModifiedDate":"2021-10-22"},{"lineNumber":82,"author":{"gitId":"jushg"},"content":"     *","lastModifiedDate":"2021-10-22"},{"lineNumber":83,"author":{"gitId":"jushg"},"content":"     * @param id       the ID of the object to be deleted.","lastModifiedDate":"2021-10-22"},{"lineNumber":84,"author":{"gitId":"jushg"},"content":"     * @param viewType the viewType context of the command.","lastModifiedDate":"2021-10-22"},{"lineNumber":85,"author":{"gitId":"jushg"},"content":"     * @return the Successful Message","lastModifiedDate":"2021-10-22"},{"lineNumber":86,"author":{"gitId":"jushg"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":87,"author":{"gitId":"jushg"},"content":"    public static String getDeleteMessage(int id, ViewType viewType) throws MedBotException {","lastModifiedDate":"2021-10-22"},{"lineNumber":88,"author":{"gitId":"jushg"},"content":"        assert id \u003e 0;","lastModifiedDate":"2021-10-22"},{"lineNumber":89,"author":{"gitId":"jushg"},"content":"        switch (viewType) {","lastModifiedDate":"2021-10-22"},{"lineNumber":90,"author":{"gitId":"jushg"},"content":"        case PATIENT_INFO:","lastModifiedDate":"2021-10-22"},{"lineNumber":91,"author":{"gitId":"jushg"},"content":"            return \"Patient with id \" + id + \" deleted from system.\" + END_LINE;","lastModifiedDate":"2021-10-22"},{"lineNumber":92,"author":{"gitId":"jushg"},"content":"        case SCHEDULER:","lastModifiedDate":"2021-10-22"},{"lineNumber":93,"author":{"gitId":"jushg"},"content":"            return \"Schedule with id \" + id + \" deleted from system.\" + END_LINE;","lastModifiedDate":"2021-10-22"},{"lineNumber":94,"author":{"gitId":"jushg"},"content":"        case MEDICAL_STAFF_INFO:","lastModifiedDate":"2021-10-22"},{"lineNumber":95,"author":{"gitId":"jushg"},"content":"            return \"Staff with id \" + id + \" deleted from system.\" + END_LINE;","lastModifiedDate":"2021-10-22"},{"lineNumber":96,"author":{"gitId":"jushg"},"content":"        default:","lastModifiedDate":"2021-10-22"},{"lineNumber":97,"author":{"gitId":"jushg"},"content":"            assert false;","lastModifiedDate":"2021-10-22"},{"lineNumber":98,"author":{"gitId":"jushg"},"content":"            throw new MedBotException(ERROR_VIEW_CONTEXT_NOT_FOUND);","lastModifiedDate":"2021-10-22"},{"lineNumber":99,"author":{"gitId":"jushg"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":100,"author":{"gitId":"jushg"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":101,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":102,"author":{"gitId":"jushg"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":103,"author":{"gitId":"jushg"},"content":"     * Returns a message when successfully edit an object in a list.","lastModifiedDate":"2021-10-22"},{"lineNumber":104,"author":{"gitId":"jushg"},"content":"     *","lastModifiedDate":"2021-10-22"},{"lineNumber":105,"author":{"gitId":"jushg"},"content":"     * @param id       the ID of the object to be edited.","lastModifiedDate":"2021-10-22"},{"lineNumber":106,"author":{"gitId":"jushg"},"content":"     * @param info     the information of the new object","lastModifiedDate":"2021-10-22"},{"lineNumber":107,"author":{"gitId":"jushg"},"content":"     * @param viewType the viewType context of the command.","lastModifiedDate":"2021-10-22"},{"lineNumber":108,"author":{"gitId":"jushg"},"content":"     * @return the Successful Message","lastModifiedDate":"2021-10-22"},{"lineNumber":109,"author":{"gitId":"jushg"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":110,"author":{"gitId":"jushg"},"content":"    public static String getEditMessage(int id, String info, ViewType viewType) throws MedBotException {","lastModifiedDate":"2021-10-22"},{"lineNumber":111,"author":{"gitId":"jushg"},"content":"        assert id \u003e 0;","lastModifiedDate":"2021-10-22"},{"lineNumber":112,"author":{"gitId":"jushg"},"content":"        switch (viewType) {","lastModifiedDate":"2021-10-22"},{"lineNumber":113,"author":{"gitId":"jushg"},"content":"        case PATIENT_INFO:","lastModifiedDate":"2021-10-22"},{"lineNumber":114,"author":{"gitId":"jushg"},"content":"            return \"The information of patient with ID \" + id + \" has been edited to:\" + END_LINE + END_LINE","lastModifiedDate":"2021-10-22"},{"lineNumber":115,"author":{"gitId":"jushg"},"content":"                    + info + END_LINE;","lastModifiedDate":"2021-10-22"},{"lineNumber":116,"author":{"gitId":"jushg"},"content":"        case SCHEDULER:","lastModifiedDate":"2021-10-22"},{"lineNumber":117,"author":{"gitId":"jushg"},"content":"            return \"The information of schedule with ID \" + id + \" has been edited to:\" + END_LINE + END_LINE","lastModifiedDate":"2021-10-22"},{"lineNumber":118,"author":{"gitId":"jushg"},"content":"                    + info + END_LINE;","lastModifiedDate":"2021-10-22"},{"lineNumber":119,"author":{"gitId":"jushg"},"content":"        case MEDICAL_STAFF_INFO:","lastModifiedDate":"2021-10-22"},{"lineNumber":120,"author":{"gitId":"jushg"},"content":"            return \"The information of staff with ID \" + id + \" has been edited to:\" + END_LINE + END_LINE","lastModifiedDate":"2021-10-22"},{"lineNumber":121,"author":{"gitId":"jushg"},"content":"                    + info + END_LINE;","lastModifiedDate":"2021-10-22"},{"lineNumber":122,"author":{"gitId":"jushg"},"content":"        default:","lastModifiedDate":"2021-10-22"},{"lineNumber":123,"author":{"gitId":"jushg"},"content":"            assert false;","lastModifiedDate":"2021-10-22"},{"lineNumber":124,"author":{"gitId":"jushg"},"content":"            throw new MedBotException(ERROR_VIEW_CONTEXT_NOT_FOUND);","lastModifiedDate":"2021-10-22"},{"lineNumber":125,"author":{"gitId":"jushg"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":126,"author":{"gitId":"jushg"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":127,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":128,"author":{"gitId":"jushg"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":129,"author":{"gitId":"jushg"},"content":"     * Returns the information of the filtered patients.","lastModifiedDate":"2021-10-22"},{"lineNumber":130,"author":{"gitId":"jushg"},"content":"     *","lastModifiedDate":"2021-10-22"},{"lineNumber":131,"author":{"gitId":"jushg"},"content":"     * @param persons  the filtered patients to be printed.","lastModifiedDate":"2021-10-22"},{"lineNumber":132,"author":{"gitId":"jushg"},"content":"     * @param viewType the viewType context of the command.","lastModifiedDate":"2021-10-22"},{"lineNumber":133,"author":{"gitId":"jushg"},"content":"     * @return The information of the filtered patients","lastModifiedDate":"2021-10-22"},{"lineNumber":134,"author":{"gitId":"jushg"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":135,"author":{"gitId":"jushg"},"content":"    public static String getFindPersonsMessage(List\u003cString\u003e persons, ViewType viewType) throws MedBotException {","lastModifiedDate":"2021-10-22"},{"lineNumber":136,"author":{"gitId":"jushg"},"content":"        if (persons.size() \u003d\u003d 0) {","lastModifiedDate":"2021-10-22"},{"lineNumber":137,"author":{"gitId":"jushg"},"content":"            return \"There is no person with such attributes in this list.\" + END_LINE;","lastModifiedDate":"2021-10-22"},{"lineNumber":138,"author":{"gitId":"jushg"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":139,"author":{"gitId":"jushg"},"content":"        String output;","lastModifiedDate":"2021-10-22"},{"lineNumber":140,"author":{"gitId":"jushg"},"content":"        switch (viewType) {","lastModifiedDate":"2021-10-22"},{"lineNumber":141,"author":{"gitId":"jushg"},"content":"        case PATIENT_INFO:","lastModifiedDate":"2021-10-22"},{"lineNumber":142,"author":{"gitId":"jushg"},"content":"            output \u003d PatientUi.getPatientTableHeader();","lastModifiedDate":"2021-10-22"},{"lineNumber":143,"author":{"gitId":"jushg"},"content":"            break;","lastModifiedDate":"2021-10-22"},{"lineNumber":144,"author":{"gitId":"jushg"},"content":"        case MEDICAL_STAFF_INFO:","lastModifiedDate":"2021-10-22"},{"lineNumber":145,"author":{"gitId":"jushg"},"content":"            output \u003d StaffUi.getStaffTableHeader();","lastModifiedDate":"2021-10-22"},{"lineNumber":146,"author":{"gitId":"jushg"},"content":"            break;","lastModifiedDate":"2021-10-22"},{"lineNumber":147,"author":{"gitId":"jushg"},"content":"        default:","lastModifiedDate":"2021-10-22"},{"lineNumber":148,"author":{"gitId":"jushg"},"content":"            assert false;","lastModifiedDate":"2021-10-22"},{"lineNumber":149,"author":{"gitId":"jushg"},"content":"            throw new MedBotException(ERROR_VIEW_CONTEXT_NOT_FOUND);","lastModifiedDate":"2021-10-22"},{"lineNumber":150,"author":{"gitId":"jushg"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":151,"author":{"gitId":"jushg"},"content":"        for (String person : persons) {","lastModifiedDate":"2021-10-22"},{"lineNumber":152,"author":{"gitId":"jushg"},"content":"            output +\u003d person;","lastModifiedDate":"2021-10-22"},{"lineNumber":153,"author":{"gitId":"jushg"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":154,"author":{"gitId":"jushg"},"content":"        output +\u003d END_LINE;","lastModifiedDate":"2021-10-22"},{"lineNumber":155,"author":{"gitId":"jushg"},"content":"        output +\u003d TABLE_ROW_SEPARATOR;","lastModifiedDate":"2021-10-22"},{"lineNumber":156,"author":{"gitId":"jushg"},"content":"        return output;","lastModifiedDate":"2021-10-22"},{"lineNumber":157,"author":{"gitId":"jushg"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":158,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":159,"author":{"gitId":"EricBryann"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":160,"author":{"gitId":"EricBryann"},"content":"     * Returns the successful message of archiving a person.","lastModifiedDate":"2021-10-25"},{"lineNumber":161,"author":{"gitId":"EricBryann"},"content":"     *","lastModifiedDate":"2021-10-25"},{"lineNumber":162,"author":{"gitId":"EricBryann"},"content":"     * @param personId the ID of the person to be archived.","lastModifiedDate":"2021-10-25"},{"lineNumber":163,"author":{"gitId":"EricBryann"},"content":"     * @param viewType the viewType context of the command.","lastModifiedDate":"2021-10-25"},{"lineNumber":164,"author":{"gitId":"EricBryann"},"content":"     * @return The successful message of archiving the person","lastModifiedDate":"2021-10-25"},{"lineNumber":165,"author":{"gitId":"EricBryann"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":166,"author":{"gitId":"EricBryann"},"content":"    public static String getArchivePersonMessage(int personId, ViewType viewType) throws MedBotException {","lastModifiedDate":"2021-10-25"},{"lineNumber":167,"author":{"gitId":"EricBryann"},"content":"        String output;","lastModifiedDate":"2021-10-25"},{"lineNumber":168,"author":{"gitId":"EricBryann"},"content":"        switch (viewType) {","lastModifiedDate":"2021-10-25"},{"lineNumber":169,"author":{"gitId":"EricBryann"},"content":"        case PATIENT_INFO:","lastModifiedDate":"2021-10-25"},{"lineNumber":170,"author":{"gitId":"EricBryann"},"content":"            output \u003d \"The patient with ID: \" + personId + \" is archived successfully.\";","lastModifiedDate":"2021-10-25"},{"lineNumber":171,"author":{"gitId":"EricBryann"},"content":"            break;","lastModifiedDate":"2021-10-25"},{"lineNumber":172,"author":{"gitId":"EricBryann"},"content":"        case MEDICAL_STAFF_INFO:","lastModifiedDate":"2021-10-25"},{"lineNumber":173,"author":{"gitId":"EricBryann"},"content":"            output \u003d \"The staff with ID: \" + personId + \" is archived successfully.\";","lastModifiedDate":"2021-10-25"},{"lineNumber":174,"author":{"gitId":"EricBryann"},"content":"            break;","lastModifiedDate":"2021-10-25"},{"lineNumber":175,"author":{"gitId":"EricBryann"},"content":"        default:","lastModifiedDate":"2021-10-25"},{"lineNumber":176,"author":{"gitId":"EricBryann"},"content":"            assert false;","lastModifiedDate":"2021-10-25"},{"lineNumber":177,"author":{"gitId":"EricBryann"},"content":"            throw new MedBotException(ERROR_VIEW_CONTEXT_NOT_FOUND);","lastModifiedDate":"2021-10-25"},{"lineNumber":178,"author":{"gitId":"EricBryann"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":179,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":180,"author":{"gitId":"EricBryann"},"content":"        return output;","lastModifiedDate":"2021-10-25"},{"lineNumber":181,"author":{"gitId":"EricBryann"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":182,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":183,"author":{"gitId":"EricBryann"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":184,"author":{"gitId":"EricBryann"},"content":"     * Returns the successful message of un-archiving a person.","lastModifiedDate":"2021-10-25"},{"lineNumber":185,"author":{"gitId":"EricBryann"},"content":"     *","lastModifiedDate":"2021-10-25"},{"lineNumber":186,"author":{"gitId":"EricBryann"},"content":"     * @param personId the ID of the person to be un-archived.","lastModifiedDate":"2021-10-25"},{"lineNumber":187,"author":{"gitId":"EricBryann"},"content":"     * @param viewType the viewType context of the command.","lastModifiedDate":"2021-10-25"},{"lineNumber":188,"author":{"gitId":"EricBryann"},"content":"     * @return The successful message of un-archiving the person","lastModifiedDate":"2021-10-25"},{"lineNumber":189,"author":{"gitId":"EricBryann"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":190,"author":{"gitId":"EricBryann"},"content":"    public static String getUnarchivePersonMessage(int personId, ViewType viewType) throws MedBotException {","lastModifiedDate":"2021-10-25"},{"lineNumber":191,"author":{"gitId":"EricBryann"},"content":"        String output;","lastModifiedDate":"2021-10-25"},{"lineNumber":192,"author":{"gitId":"EricBryann"},"content":"        switch (viewType) {","lastModifiedDate":"2021-10-25"},{"lineNumber":193,"author":{"gitId":"EricBryann"},"content":"        case PATIENT_INFO:","lastModifiedDate":"2021-10-25"},{"lineNumber":194,"author":{"gitId":"EricBryann"},"content":"            output \u003d \"The patient with ID: \" + personId + \" is unarchived successfully.\";","lastModifiedDate":"2021-10-25"},{"lineNumber":195,"author":{"gitId":"EricBryann"},"content":"            break;","lastModifiedDate":"2021-10-25"},{"lineNumber":196,"author":{"gitId":"EricBryann"},"content":"        case MEDICAL_STAFF_INFO:","lastModifiedDate":"2021-10-25"},{"lineNumber":197,"author":{"gitId":"EricBryann"},"content":"            output \u003d \"The staff with ID: \" + personId + \" is unarchived successfully.\";","lastModifiedDate":"2021-10-25"},{"lineNumber":198,"author":{"gitId":"EricBryann"},"content":"            break;","lastModifiedDate":"2021-10-25"},{"lineNumber":199,"author":{"gitId":"EricBryann"},"content":"        default:","lastModifiedDate":"2021-10-25"},{"lineNumber":200,"author":{"gitId":"EricBryann"},"content":"            assert false;","lastModifiedDate":"2021-10-25"},{"lineNumber":201,"author":{"gitId":"EricBryann"},"content":"            throw new MedBotException(ERROR_VIEW_CONTEXT_NOT_FOUND);","lastModifiedDate":"2021-10-25"},{"lineNumber":202,"author":{"gitId":"EricBryann"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":203,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":204,"author":{"gitId":"EricBryann"},"content":"        return output;","lastModifiedDate":"2021-10-25"},{"lineNumber":205,"author":{"gitId":"EricBryann"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":206,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":207,"author":{"gitId":"jushg"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":208,"author":{"gitId":"jushg"},"content":"     * Returns the message indicate the current viewType.","lastModifiedDate":"2021-10-25"},{"lineNumber":209,"author":{"gitId":"jushg"},"content":"     *","lastModifiedDate":"2021-10-25"},{"lineNumber":210,"author":{"gitId":"jushg"},"content":"     * @param viewType the viewType context of the command.","lastModifiedDate":"2021-10-25"},{"lineNumber":211,"author":{"gitId":"jushg"},"content":"     * @return The current view message","lastModifiedDate":"2021-10-25"},{"lineNumber":212,"author":{"gitId":"jushg"},"content":"     * @throws MedBotException when the current view is unidentifiable","lastModifiedDate":"2021-10-25"},{"lineNumber":213,"author":{"gitId":"jushg"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":214,"author":{"gitId":"jushg"},"content":"    public static String getCurrentViewMessage(ViewType viewType) throws MedBotException {","lastModifiedDate":"2021-10-25"},{"lineNumber":215,"author":{"gitId":"jushg"},"content":"        String output;","lastModifiedDate":"2021-10-25"},{"lineNumber":216,"author":{"gitId":"jushg"},"content":"        switch (viewType) {","lastModifiedDate":"2021-10-25"},{"lineNumber":217,"author":{"gitId":"jushg"},"content":"        case PATIENT_INFO:","lastModifiedDate":"2021-10-25"},{"lineNumber":218,"author":{"gitId":"jushg"},"content":"            output \u003d \"You are currently in the Patient\u0027s View.\";","lastModifiedDate":"2021-10-25"},{"lineNumber":219,"author":{"gitId":"jushg"},"content":"            break;","lastModifiedDate":"2021-10-25"},{"lineNumber":220,"author":{"gitId":"jushg"},"content":"        case MEDICAL_STAFF_INFO:","lastModifiedDate":"2021-10-25"},{"lineNumber":221,"author":{"gitId":"jushg"},"content":"            output \u003d \"You are currently in the Staff\u0027s View.\";","lastModifiedDate":"2021-10-25"},{"lineNumber":222,"author":{"gitId":"jushg"},"content":"            break;","lastModifiedDate":"2021-10-25"},{"lineNumber":223,"author":{"gitId":"jushg"},"content":"        case SCHEDULER:","lastModifiedDate":"2021-10-25"},{"lineNumber":224,"author":{"gitId":"jushg"},"content":"            output \u003d \"You are currently in the Scheduler\u0027s View.\";","lastModifiedDate":"2021-10-25"},{"lineNumber":225,"author":{"gitId":"jushg"},"content":"            break;","lastModifiedDate":"2021-10-25"},{"lineNumber":226,"author":{"gitId":"jushg"},"content":"        default:","lastModifiedDate":"2021-10-25"},{"lineNumber":227,"author":{"gitId":"jushg"},"content":"            assert false;","lastModifiedDate":"2021-10-25"},{"lineNumber":228,"author":{"gitId":"jushg"},"content":"            throw new MedBotException(ERROR_VIEW_CONTEXT_NOT_FOUND);","lastModifiedDate":"2021-10-25"},{"lineNumber":229,"author":{"gitId":"jushg"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":230,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":231,"author":{"gitId":"jushg"},"content":"        return output;","lastModifiedDate":"2021-10-25"},{"lineNumber":232,"author":{"gitId":"jushg"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":233,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":234,"author":{"gitId":"jushg"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":235,"author":{"gitId":"jushg"},"content":"     * Prints an exit message when MedBot is exiting.","lastModifiedDate":"2021-10-22"},{"lineNumber":236,"author":{"gitId":"jushg"},"content":"     *","lastModifiedDate":"2021-10-22"},{"lineNumber":237,"author":{"gitId":"jushg"},"content":"     * @return the exit Message","lastModifiedDate":"2021-10-22"},{"lineNumber":238,"author":{"gitId":"jushg"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":239,"author":{"gitId":"jushg"},"content":"    public static String getExitMessage() {","lastModifiedDate":"2021-10-25"},{"lineNumber":240,"author":{"gitId":"jushg"},"content":"        return \"Thank you for using MedBot!\" + END_LINE + \"See you again!\";","lastModifiedDate":"2021-10-22"},{"lineNumber":241,"author":{"gitId":"jushg"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":242,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":243,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":244,"author":{"gitId":"jushg"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":245,"author":{"gitId":"jushg"},"content":"     * Prints a list of all available commands.","lastModifiedDate":"2021-10-22"},{"lineNumber":246,"author":{"gitId":"jushg"},"content":"     *","lastModifiedDate":"2021-10-22"},{"lineNumber":247,"author":{"gitId":"justinfidelis"},"content":"     * @param viewType the viewType context of the command.","lastModifiedDate":"2021-10-25"},{"lineNumber":248,"author":{"gitId":"jushg"},"content":"     * @return all supported commands.","lastModifiedDate":"2021-10-22"},{"lineNumber":249,"author":{"gitId":"jushg"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":250,"author":{"gitId":"justinfidelis"},"content":"    public static String getCommandList(ViewType viewType) throws MedBotException {","lastModifiedDate":"2021-10-25"},{"lineNumber":251,"author":{"gitId":"justinfidelis"},"content":"        switch (viewType) {","lastModifiedDate":"2021-10-25"},{"lineNumber":252,"author":{"gitId":"justinfidelis"},"content":"        case PATIENT_INFO:","lastModifiedDate":"2021-10-25"},{"lineNumber":253,"author":{"gitId":"justinfidelis"},"content":"            return PatientUi.getPatientCommandList();","lastModifiedDate":"2021-10-25"},{"lineNumber":254,"author":{"gitId":"justinfidelis"},"content":"        case MEDICAL_STAFF_INFO:","lastModifiedDate":"2021-10-25"},{"lineNumber":255,"author":{"gitId":"justinfidelis"},"content":"            return StaffUi.getStaffCommandList();","lastModifiedDate":"2021-10-25"},{"lineNumber":256,"author":{"gitId":"justinfidelis"},"content":"        case SCHEDULER:","lastModifiedDate":"2021-10-25"},{"lineNumber":257,"author":{"gitId":"justinfidelis"},"content":"            return SchedulerUi.getSchedulerCommandList();","lastModifiedDate":"2021-10-25"},{"lineNumber":258,"author":{"gitId":"justinfidelis"},"content":"        default:","lastModifiedDate":"2021-10-25"},{"lineNumber":259,"author":{"gitId":"justinfidelis"},"content":"            assert false;","lastModifiedDate":"2021-10-25"},{"lineNumber":260,"author":{"gitId":"justinfidelis"},"content":"            throw new MedBotException(ERROR_VIEW_CONTEXT_NOT_FOUND);","lastModifiedDate":"2021-10-25"},{"lineNumber":261,"author":{"gitId":"justinfidelis"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":262,"author":{"gitId":"jushg"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":263,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":264,"author":{"gitId":"jushg"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":265,"author":{"gitId":"jushg"},"content":"     * Prints information about list command.","lastModifiedDate":"2021-10-22"},{"lineNumber":266,"author":{"gitId":"jushg"},"content":"     *","lastModifiedDate":"2021-10-22"},{"lineNumber":267,"author":{"gitId":"jushg"},"content":"     * @param viewType the viewType context of the command.","lastModifiedDate":"2021-10-22"},{"lineNumber":268,"author":{"gitId":"jushg"},"content":"     * @return the information on list command.","lastModifiedDate":"2021-10-22"},{"lineNumber":269,"author":{"gitId":"jushg"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":270,"author":{"gitId":"jushg"},"content":"    public String getListHelpMessage(ViewType viewType) throws MedBotException {","lastModifiedDate":"2021-10-22"},{"lineNumber":271,"author":{"gitId":"jushg"},"content":"        switch (viewType) {","lastModifiedDate":"2021-10-22"},{"lineNumber":272,"author":{"gitId":"jushg"},"content":"        case PATIENT_INFO:","lastModifiedDate":"2021-10-22"},{"lineNumber":273,"author":{"gitId":"jushg"},"content":"            return PatientUi.getListPatientHelpMessage();","lastModifiedDate":"2021-10-22"},{"lineNumber":274,"author":{"gitId":"jushg"},"content":"        case MEDICAL_STAFF_INFO:","lastModifiedDate":"2021-10-22"},{"lineNumber":275,"author":{"gitId":"jushg"},"content":"            return StaffUi.getListStaffHelpMessage();","lastModifiedDate":"2021-10-22"},{"lineNumber":276,"author":{"gitId":"jushg"},"content":"        case SCHEDULER:","lastModifiedDate":"2021-10-22"},{"lineNumber":277,"author":{"gitId":"jushg"},"content":"            return SchedulerUi.getListSchedulerHelpMessage();","lastModifiedDate":"2021-10-22"},{"lineNumber":278,"author":{"gitId":"jushg"},"content":"        default:","lastModifiedDate":"2021-10-22"},{"lineNumber":279,"author":{"gitId":"jushg"},"content":"            assert false;","lastModifiedDate":"2021-10-22"},{"lineNumber":280,"author":{"gitId":"jushg"},"content":"            throw new MedBotException(ERROR_VIEW_CONTEXT_NOT_FOUND);","lastModifiedDate":"2021-10-22"},{"lineNumber":281,"author":{"gitId":"jushg"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":282,"author":{"gitId":"jushg"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":283,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":284,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":285,"author":{"gitId":"jushg"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":286,"author":{"gitId":"jushg"},"content":"     * Prints information about view command.","lastModifiedDate":"2021-10-22"},{"lineNumber":287,"author":{"gitId":"jushg"},"content":"     *","lastModifiedDate":"2021-10-22"},{"lineNumber":288,"author":{"gitId":"jushg"},"content":"     * @param viewType the viewType context of the command.","lastModifiedDate":"2021-10-22"},{"lineNumber":289,"author":{"gitId":"jushg"},"content":"     * @return the information on view command.","lastModifiedDate":"2021-10-22"},{"lineNumber":290,"author":{"gitId":"jushg"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":291,"author":{"gitId":"jushg"},"content":"    public String getViewHelpMessage(ViewType viewType) throws MedBotException {","lastModifiedDate":"2021-10-22"},{"lineNumber":292,"author":{"gitId":"jushg"},"content":"        switch (viewType) {","lastModifiedDate":"2021-10-22"},{"lineNumber":293,"author":{"gitId":"jushg"},"content":"        case PATIENT_INFO:","lastModifiedDate":"2021-10-22"},{"lineNumber":294,"author":{"gitId":"jushg"},"content":"            return PatientUi.getViewPatientHelpMessage();","lastModifiedDate":"2021-10-22"},{"lineNumber":295,"author":{"gitId":"jushg"},"content":"        case MEDICAL_STAFF_INFO:","lastModifiedDate":"2021-10-22"},{"lineNumber":296,"author":{"gitId":"jushg"},"content":"            return StaffUi.getViewStaffHelpMessage();","lastModifiedDate":"2021-10-22"},{"lineNumber":297,"author":{"gitId":"jushg"},"content":"        case SCHEDULER:","lastModifiedDate":"2021-10-22"},{"lineNumber":298,"author":{"gitId":"jushg"},"content":"            return SchedulerUi.getViewSchedulerHelpMessage();","lastModifiedDate":"2021-10-22"},{"lineNumber":299,"author":{"gitId":"jushg"},"content":"        default:","lastModifiedDate":"2021-10-22"},{"lineNumber":300,"author":{"gitId":"jushg"},"content":"            assert false;","lastModifiedDate":"2021-10-22"},{"lineNumber":301,"author":{"gitId":"jushg"},"content":"            throw new MedBotException(ERROR_VIEW_CONTEXT_NOT_FOUND);","lastModifiedDate":"2021-10-22"},{"lineNumber":302,"author":{"gitId":"jushg"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":303,"author":{"gitId":"jushg"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":304,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":305,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":306,"author":{"gitId":"jushg"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":307,"author":{"gitId":"jushg"},"content":"     * Prints information about add command.","lastModifiedDate":"2021-10-22"},{"lineNumber":308,"author":{"gitId":"jushg"},"content":"     *","lastModifiedDate":"2021-10-22"},{"lineNumber":309,"author":{"gitId":"jushg"},"content":"     * @param viewType the viewType context of the command.","lastModifiedDate":"2021-10-22"},{"lineNumber":310,"author":{"gitId":"jushg"},"content":"     * @return the information on add command.","lastModifiedDate":"2021-10-22"},{"lineNumber":311,"author":{"gitId":"jushg"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":312,"author":{"gitId":"jushg"},"content":"    public String getAddHelpMessage(ViewType viewType) throws MedBotException {","lastModifiedDate":"2021-10-22"},{"lineNumber":313,"author":{"gitId":"jushg"},"content":"        switch (viewType) {","lastModifiedDate":"2021-10-22"},{"lineNumber":314,"author":{"gitId":"jushg"},"content":"        case PATIENT_INFO:","lastModifiedDate":"2021-10-22"},{"lineNumber":315,"author":{"gitId":"jushg"},"content":"            return PatientUi.getAddPatientHelpMessage();","lastModifiedDate":"2021-10-22"},{"lineNumber":316,"author":{"gitId":"jushg"},"content":"        case MEDICAL_STAFF_INFO:","lastModifiedDate":"2021-10-22"},{"lineNumber":317,"author":{"gitId":"jushg"},"content":"            return StaffUi.getAddStaffHelpMessage();","lastModifiedDate":"2021-10-22"},{"lineNumber":318,"author":{"gitId":"jushg"},"content":"        case SCHEDULER:","lastModifiedDate":"2021-10-22"},{"lineNumber":319,"author":{"gitId":"jushg"},"content":"            return SchedulerUi.getAddSchedulerHelpMessage();","lastModifiedDate":"2021-10-22"},{"lineNumber":320,"author":{"gitId":"jushg"},"content":"        default:","lastModifiedDate":"2021-10-22"},{"lineNumber":321,"author":{"gitId":"jushg"},"content":"            assert false;","lastModifiedDate":"2021-10-22"},{"lineNumber":322,"author":{"gitId":"jushg"},"content":"            throw new MedBotException(ERROR_VIEW_CONTEXT_NOT_FOUND);","lastModifiedDate":"2021-10-22"},{"lineNumber":323,"author":{"gitId":"jushg"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":324,"author":{"gitId":"jushg"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":325,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":326,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":327,"author":{"gitId":"jushg"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":328,"author":{"gitId":"jushg"},"content":"     * Prints information about edit command.","lastModifiedDate":"2021-10-22"},{"lineNumber":329,"author":{"gitId":"jushg"},"content":"     *","lastModifiedDate":"2021-10-22"},{"lineNumber":330,"author":{"gitId":"jushg"},"content":"     * @param viewType the viewType context of the command.","lastModifiedDate":"2021-10-22"},{"lineNumber":331,"author":{"gitId":"jushg"},"content":"     * @return the information on edit command.","lastModifiedDate":"2021-10-22"},{"lineNumber":332,"author":{"gitId":"jushg"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":333,"author":{"gitId":"jushg"},"content":"    public String getEditHelpMessage(ViewType viewType) throws MedBotException {","lastModifiedDate":"2021-10-22"},{"lineNumber":334,"author":{"gitId":"jushg"},"content":"        switch (viewType) {","lastModifiedDate":"2021-10-22"},{"lineNumber":335,"author":{"gitId":"jushg"},"content":"        case PATIENT_INFO:","lastModifiedDate":"2021-10-22"},{"lineNumber":336,"author":{"gitId":"jushg"},"content":"            return PatientUi.getEditPatientHelpMessage();","lastModifiedDate":"2021-10-22"},{"lineNumber":337,"author":{"gitId":"jushg"},"content":"        case MEDICAL_STAFF_INFO:","lastModifiedDate":"2021-10-22"},{"lineNumber":338,"author":{"gitId":"jushg"},"content":"            return StaffUi.getEditStaffHelpMessage();","lastModifiedDate":"2021-10-22"},{"lineNumber":339,"author":{"gitId":"jushg"},"content":"        case SCHEDULER:","lastModifiedDate":"2021-10-22"},{"lineNumber":340,"author":{"gitId":"jushg"},"content":"            return SchedulerUi.getEditSchedulerHelpMessage();","lastModifiedDate":"2021-10-22"},{"lineNumber":341,"author":{"gitId":"jushg"},"content":"        default:","lastModifiedDate":"2021-10-22"},{"lineNumber":342,"author":{"gitId":"jushg"},"content":"            assert false;","lastModifiedDate":"2021-10-22"},{"lineNumber":343,"author":{"gitId":"jushg"},"content":"            throw new MedBotException(ERROR_VIEW_CONTEXT_NOT_FOUND);","lastModifiedDate":"2021-10-22"},{"lineNumber":344,"author":{"gitId":"jushg"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":345,"author":{"gitId":"jushg"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":346,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":347,"author":{"gitId":"jushg"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":348,"author":{"gitId":"jushg"},"content":"     * Prints information about delete command.","lastModifiedDate":"2021-10-22"},{"lineNumber":349,"author":{"gitId":"jushg"},"content":"     *","lastModifiedDate":"2021-10-22"},{"lineNumber":350,"author":{"gitId":"jushg"},"content":"     * @param viewType the viewType context of the command.","lastModifiedDate":"2021-10-22"},{"lineNumber":351,"author":{"gitId":"jushg"},"content":"     * @return the information on delete command.","lastModifiedDate":"2021-10-22"},{"lineNumber":352,"author":{"gitId":"jushg"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":353,"author":{"gitId":"jushg"},"content":"    public String getDeleteHelpMessage(ViewType viewType) throws MedBotException {","lastModifiedDate":"2021-10-22"},{"lineNumber":354,"author":{"gitId":"jushg"},"content":"        switch (viewType) {","lastModifiedDate":"2021-10-22"},{"lineNumber":355,"author":{"gitId":"jushg"},"content":"        case PATIENT_INFO:","lastModifiedDate":"2021-10-22"},{"lineNumber":356,"author":{"gitId":"jushg"},"content":"            return PatientUi.getDeletePatientHelpMessage();","lastModifiedDate":"2021-10-22"},{"lineNumber":357,"author":{"gitId":"jushg"},"content":"        case MEDICAL_STAFF_INFO:","lastModifiedDate":"2021-10-22"},{"lineNumber":358,"author":{"gitId":"jushg"},"content":"            return StaffUi.getDeleteStaffHelpMessage();","lastModifiedDate":"2021-10-22"},{"lineNumber":359,"author":{"gitId":"jushg"},"content":"        case SCHEDULER:","lastModifiedDate":"2021-10-22"},{"lineNumber":360,"author":{"gitId":"jushg"},"content":"            return SchedulerUi.getDeleteSchedulerHelpMessage();","lastModifiedDate":"2021-10-22"},{"lineNumber":361,"author":{"gitId":"jushg"},"content":"        default:","lastModifiedDate":"2021-10-22"},{"lineNumber":362,"author":{"gitId":"jushg"},"content":"            assert false;","lastModifiedDate":"2021-10-22"},{"lineNumber":363,"author":{"gitId":"jushg"},"content":"            throw new MedBotException(ERROR_VIEW_CONTEXT_NOT_FOUND);","lastModifiedDate":"2021-10-22"},{"lineNumber":364,"author":{"gitId":"jushg"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":365,"author":{"gitId":"jushg"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":366,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":367,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":368,"author":{"gitId":"jushg"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":369,"author":{"gitId":"jushg"},"content":"     * Prints information about find command.","lastModifiedDate":"2021-10-22"},{"lineNumber":370,"author":{"gitId":"jushg"},"content":"     *","lastModifiedDate":"2021-10-22"},{"lineNumber":371,"author":{"gitId":"jushg"},"content":"     * @param viewType the viewType context of the command.","lastModifiedDate":"2021-10-22"},{"lineNumber":372,"author":{"gitId":"jushg"},"content":"     * @return the information on find command.","lastModifiedDate":"2021-10-22"},{"lineNumber":373,"author":{"gitId":"jushg"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":374,"author":{"gitId":"jushg"},"content":"    public String getFindHelpMessage(ViewType viewType) throws MedBotException {","lastModifiedDate":"2021-10-22"},{"lineNumber":375,"author":{"gitId":"jushg"},"content":"        switch (viewType) {","lastModifiedDate":"2021-10-22"},{"lineNumber":376,"author":{"gitId":"jushg"},"content":"        case PATIENT_INFO:","lastModifiedDate":"2021-10-22"},{"lineNumber":377,"author":{"gitId":"jushg"},"content":"            return PatientUi.getFindPatientHelpMessage();","lastModifiedDate":"2021-10-22"},{"lineNumber":378,"author":{"gitId":"jushg"},"content":"        case MEDICAL_STAFF_INFO:","lastModifiedDate":"2021-10-22"},{"lineNumber":379,"author":{"gitId":"jushg"},"content":"            return StaffUi.getFindStaffHelpMessage();","lastModifiedDate":"2021-10-22"},{"lineNumber":380,"author":{"gitId":"jushg"},"content":"        case SCHEDULER:","lastModifiedDate":"2021-10-22"},{"lineNumber":381,"author":{"gitId":"jushg"},"content":"            return SchedulerUi.getFindSchedulerHelpMessage();","lastModifiedDate":"2021-10-22"},{"lineNumber":382,"author":{"gitId":"jushg"},"content":"        default:","lastModifiedDate":"2021-10-22"},{"lineNumber":383,"author":{"gitId":"jushg"},"content":"            assert false;","lastModifiedDate":"2021-10-22"},{"lineNumber":384,"author":{"gitId":"jushg"},"content":"            throw new MedBotException(ERROR_VIEW_CONTEXT_NOT_FOUND);","lastModifiedDate":"2021-10-22"},{"lineNumber":385,"author":{"gitId":"jushg"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":386,"author":{"gitId":"jushg"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":387,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":388,"author":{"gitId":"jushg"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":389,"author":{"gitId":"jushg"},"content":"     * Prints information about switch command.","lastModifiedDate":"2021-10-22"},{"lineNumber":390,"author":{"gitId":"jushg"},"content":"     *","lastModifiedDate":"2021-10-22"},{"lineNumber":391,"author":{"gitId":"jushg"},"content":"     * @return the information on switch command.","lastModifiedDate":"2021-10-22"},{"lineNumber":392,"author":{"gitId":"jushg"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":393,"author":{"gitId":"jushg"},"content":"    public String getSwitchHelpMessage() {","lastModifiedDate":"2021-10-22"},{"lineNumber":394,"author":{"gitId":"Kureans"},"content":"        return \"Switches between the different views of MedBot.\" + END_LINE","lastModifiedDate":"2021-10-24"},{"lineNumber":395,"author":{"gitId":"Kureans"},"content":"                + \"Format: switch [VIEW_TYPE]\" + END_LINE","lastModifiedDate":"2021-10-24"},{"lineNumber":396,"author":{"gitId":"Kureans"},"content":"                + \"If the switch command is called without any parameters,\" + END_LINE","lastModifiedDate":"2021-10-24"},{"lineNumber":397,"author":{"gitId":"Kureans"},"content":"                + \"the view that is switched to will depend on the current view.\" + END_LINE","lastModifiedDate":"2021-10-24"},{"lineNumber":398,"author":{"gitId":"Kureans"},"content":"                + \"(PATIENT_INFO --\u003e MEDICAL_STAFF_INFO --\u003e SCHEDULER --\u003e PATIENT_INFO)\" + END_LINE","lastModifiedDate":"2021-10-24"},{"lineNumber":399,"author":{"gitId":"Kureans"},"content":"                + \"Expected Output:\" + END_LINE","lastModifiedDate":"2021-10-24"},{"lineNumber":400,"author":{"gitId":"Kureans"},"content":"                + \"[VIEW_TYPE_ASCI_TEXT_BANNER]\" + END_LINE + END_LINE","lastModifiedDate":"2021-10-24"},{"lineNumber":401,"author":{"gitId":"Kureans"},"content":"                + \"View has been switched to [VIEW_TYPE]\" + END_LINE;","lastModifiedDate":"2021-10-24"},{"lineNumber":402,"author":{"gitId":"jushg"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":403,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":404,"author":{"gitId":"EricBryann"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":405,"author":{"gitId":"EricBryann"},"content":"     * Prints information about archive command.","lastModifiedDate":"2021-10-25"},{"lineNumber":406,"author":{"gitId":"EricBryann"},"content":"     *","lastModifiedDate":"2021-10-25"},{"lineNumber":407,"author":{"gitId":"EricBryann"},"content":"     * @return the information on archive command.","lastModifiedDate":"2021-10-25"},{"lineNumber":408,"author":{"gitId":"EricBryann"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":409,"author":{"gitId":"EricBryann"},"content":"    public String getArchiveHelpMessage(ViewType viewType) throws MedBotException {","lastModifiedDate":"2021-10-25"},{"lineNumber":410,"author":{"gitId":"EricBryann"},"content":"        switch (viewType) {","lastModifiedDate":"2021-10-25"},{"lineNumber":411,"author":{"gitId":"EricBryann"},"content":"        case PATIENT_INFO:","lastModifiedDate":"2021-10-25"},{"lineNumber":412,"author":{"gitId":"EricBryann"},"content":"            return PatientUi.getArchivePatientHelpMessage();","lastModifiedDate":"2021-10-25"},{"lineNumber":413,"author":{"gitId":"EricBryann"},"content":"        case MEDICAL_STAFF_INFO:","lastModifiedDate":"2021-10-25"},{"lineNumber":414,"author":{"gitId":"EricBryann"},"content":"            return StaffUi.getArchiveStaffHelpMessage();","lastModifiedDate":"2021-10-25"},{"lineNumber":415,"author":{"gitId":"EricBryann"},"content":"        default:","lastModifiedDate":"2021-10-25"},{"lineNumber":416,"author":{"gitId":"EricBryann"},"content":"            assert false;","lastModifiedDate":"2021-10-25"},{"lineNumber":417,"author":{"gitId":"EricBryann"},"content":"            throw new MedBotException(ERROR_VIEW_CONTEXT_NOT_FOUND);","lastModifiedDate":"2021-10-25"},{"lineNumber":418,"author":{"gitId":"EricBryann"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":419,"author":{"gitId":"EricBryann"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":420,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":421,"author":{"gitId":"EricBryann"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":422,"author":{"gitId":"EricBryann"},"content":"     * Prints information about archive command.","lastModifiedDate":"2021-10-25"},{"lineNumber":423,"author":{"gitId":"EricBryann"},"content":"     *","lastModifiedDate":"2021-10-25"},{"lineNumber":424,"author":{"gitId":"EricBryann"},"content":"     * @return the information on archive command.","lastModifiedDate":"2021-10-25"},{"lineNumber":425,"author":{"gitId":"EricBryann"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":426,"author":{"gitId":"EricBryann"},"content":"    public String getUnarchiveHelpMessage(ViewType viewType) throws MedBotException {","lastModifiedDate":"2021-10-25"},{"lineNumber":427,"author":{"gitId":"EricBryann"},"content":"        switch (viewType) {","lastModifiedDate":"2021-10-25"},{"lineNumber":428,"author":{"gitId":"EricBryann"},"content":"        case PATIENT_INFO:","lastModifiedDate":"2021-10-25"},{"lineNumber":429,"author":{"gitId":"EricBryann"},"content":"            return PatientUi.getUnarchivePatientHelpMessage();","lastModifiedDate":"2021-10-25"},{"lineNumber":430,"author":{"gitId":"EricBryann"},"content":"        case MEDICAL_STAFF_INFO:","lastModifiedDate":"2021-10-25"},{"lineNumber":431,"author":{"gitId":"EricBryann"},"content":"            return StaffUi.getUnarchiveStaffHelpMessage();","lastModifiedDate":"2021-10-25"},{"lineNumber":432,"author":{"gitId":"EricBryann"},"content":"        default:","lastModifiedDate":"2021-10-25"},{"lineNumber":433,"author":{"gitId":"EricBryann"},"content":"            assert false;","lastModifiedDate":"2021-10-25"},{"lineNumber":434,"author":{"gitId":"EricBryann"},"content":"            throw new MedBotException(ERROR_VIEW_CONTEXT_NOT_FOUND);","lastModifiedDate":"2021-10-25"},{"lineNumber":435,"author":{"gitId":"EricBryann"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":436,"author":{"gitId":"EricBryann"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":437,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":438,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":439,"author":{"gitId":"jushg"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":440,"author":{"gitId":"jushg"},"content":"     * Prints information about exit command.","lastModifiedDate":"2021-10-22"},{"lineNumber":441,"author":{"gitId":"jushg"},"content":"     *","lastModifiedDate":"2021-10-22"},{"lineNumber":442,"author":{"gitId":"jushg"},"content":"     * @return the information on exit command.","lastModifiedDate":"2021-10-22"},{"lineNumber":443,"author":{"gitId":"jushg"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":444,"author":{"gitId":"jushg"},"content":"    public String getExitHelpMessage() {","lastModifiedDate":"2021-10-22"},{"lineNumber":445,"author":{"gitId":"jushg"},"content":"        return \"Exits the program.\" + END_LINE + \"Format: exit\" + END_LINE;","lastModifiedDate":"2021-10-22"},{"lineNumber":446,"author":{"gitId":"jushg"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":447,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":448,"author":{"gitId":"jushg"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":449,"author":{"gitId":"jushg"},"content":"     * Prints unrecognised command message.","lastModifiedDate":"2021-10-22"},{"lineNumber":450,"author":{"gitId":"jushg"},"content":"     *","lastModifiedDate":"2021-10-22"},{"lineNumber":451,"author":{"gitId":"jushg"},"content":"     * @return the error message on unrecognised command.","lastModifiedDate":"2021-10-22"},{"lineNumber":452,"author":{"gitId":"jushg"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":453,"author":{"gitId":"jushg"},"content":"    public String getUnrecognisedCommandHelpMessage() {","lastModifiedDate":"2021-10-22"},{"lineNumber":454,"author":{"gitId":"jushg"},"content":"        return \"Sorry, that\u0027s not a recognised command. To view a list of commands, type:\"","lastModifiedDate":"2021-10-22"},{"lineNumber":455,"author":{"gitId":"jushg"},"content":"                + END_LINE + \"help\" + END_LINE;","lastModifiedDate":"2021-10-22"},{"lineNumber":456,"author":{"gitId":"jushg"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":457,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":458,"author":{"gitId":"jushg"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":459,"author":{"gitId":"jushg"},"content":"     * Utility function that performs a pseudo-clear of the console. Use this for testing from within","lastModifiedDate":"2021-10-22"},{"lineNumber":460,"author":{"gitId":"jushg"},"content":"     * the IDE.","lastModifiedDate":"2021-10-22"},{"lineNumber":461,"author":{"gitId":"jushg"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":462,"author":{"gitId":"jushg"},"content":"    public static void clearConsoleFromIde() {","lastModifiedDate":"2021-10-22"},{"lineNumber":463,"author":{"gitId":"jushg"},"content":"        System.out.print(END_LINE + END_LINE + END_LINE + END_LINE + END_LINE);","lastModifiedDate":"2021-10-22"},{"lineNumber":464,"author":{"gitId":"jushg"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":465,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":466,"author":{"gitId":"jushg"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":467,"author":{"gitId":"jushg"},"content":"     * Utility function that clears the console. Does not work within the IDE console.","lastModifiedDate":"2021-10-22"},{"lineNumber":468,"author":{"gitId":"jushg"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":469,"author":{"gitId":"jushg"},"content":"    public static void clearConsole() {","lastModifiedDate":"2021-10-22"},{"lineNumber":470,"author":{"gitId":"jushg"},"content":"        try {","lastModifiedDate":"2021-10-22"},{"lineNumber":471,"author":{"gitId":"jushg"},"content":"            if (System.getProperty(\"os.name\").contains(\"Windows\")) {","lastModifiedDate":"2021-10-22"},{"lineNumber":472,"author":{"gitId":"jushg"},"content":"                new ProcessBuilder(\"cmd\", \"/c\", \"cls\").inheritIO().start().waitFor();","lastModifiedDate":"2021-10-22"},{"lineNumber":473,"author":{"gitId":"jushg"},"content":"            } else {","lastModifiedDate":"2021-10-22"},{"lineNumber":474,"author":{"gitId":"jushg"},"content":"                Runtime.getRuntime().exec(\"clear\");","lastModifiedDate":"2021-10-22"},{"lineNumber":475,"author":{"gitId":"jushg"},"content":"            }","lastModifiedDate":"2021-10-22"},{"lineNumber":476,"author":{"gitId":"jushg"},"content":"        } catch (IOException | InterruptedException e) {","lastModifiedDate":"2021-10-22"},{"lineNumber":477,"author":{"gitId":"jushg"},"content":"            System.out.println(\"Error clearing the console\");","lastModifiedDate":"2021-10-22"},{"lineNumber":478,"author":{"gitId":"jushg"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":479,"author":{"gitId":"jushg"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":480,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":481,"author":{"gitId":"jushg"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":482,"author":{"gitId":"jushg"},"content":"     * Prints switched view message.","lastModifiedDate":"2021-10-22"},{"lineNumber":483,"author":{"gitId":"jushg"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":484,"author":{"gitId":"jushg"},"content":"    public void printSwitchedViewMessage(ViewType viewType) {","lastModifiedDate":"2021-10-22"},{"lineNumber":485,"author":{"gitId":"jushg"},"content":"        switch (viewType) {","lastModifiedDate":"2021-10-22"},{"lineNumber":486,"author":{"gitId":"jushg"},"content":"        case PATIENT_INFO:","lastModifiedDate":"2021-10-22"},{"lineNumber":487,"author":{"gitId":"jushg"},"content":"            System.out.println(\"  ___  _ _____ ___ ___ _  _ _____ \\n\"","lastModifiedDate":"2021-10-22"},{"lineNumber":488,"author":{"gitId":"jushg"},"content":"                    + \" | _ \\\\/_\\\\_   _|_ _| __| \\\\| |_   _|\\n\"","lastModifiedDate":"2021-10-22"},{"lineNumber":489,"author":{"gitId":"jushg"},"content":"                    + \" |  _/ _ \\\\| |  | || _|| .` | | |  \\n\"","lastModifiedDate":"2021-10-22"},{"lineNumber":490,"author":{"gitId":"jushg"},"content":"                    + \" |_|/_/ \\\\_\\\\_|_|___|___|_|\\\\_| |_|  \\n\"","lastModifiedDate":"2021-10-22"},{"lineNumber":491,"author":{"gitId":"jushg"},"content":"                    + \" |_ _| \\\\| | __/ _ \\\\               \\n\"","lastModifiedDate":"2021-10-22"},{"lineNumber":492,"author":{"gitId":"jushg"},"content":"                    + \"  | || .` | _| (_) |              \\n\"","lastModifiedDate":"2021-10-22"},{"lineNumber":493,"author":{"gitId":"jushg"},"content":"                    + \" |___|_|\\\\_|_|_\\\\___/    __         \\n\"","lastModifiedDate":"2021-10-22"},{"lineNumber":494,"author":{"gitId":"jushg"},"content":"                    + \" \\\\ \\\\ / /_ _| __\\\\ \\\\    / /         \\n\"","lastModifiedDate":"2021-10-22"},{"lineNumber":495,"author":{"gitId":"jushg"},"content":"                    + \"  \\\\ V / | || _| \\\\ \\\\/\\\\/ /          \\n\"","lastModifiedDate":"2021-10-22"},{"lineNumber":496,"author":{"gitId":"jushg"},"content":"                    + \"   \\\\_/ |___|___| \\\\_/\\\\_/           \\n\"","lastModifiedDate":"2021-10-22"},{"lineNumber":497,"author":{"gitId":"jushg"},"content":"                    + \"                                  \");","lastModifiedDate":"2021-10-22"},{"lineNumber":498,"author":{"gitId":"jushg"},"content":"            break;","lastModifiedDate":"2021-10-22"},{"lineNumber":499,"author":{"gitId":"jushg"},"content":"        case SCHEDULER:","lastModifiedDate":"2021-10-22"},{"lineNumber":500,"author":{"gitId":"jushg"},"content":"            System.out.println(\"  ___  ___ _  _ ___ ___  _   _ _    ___ ___ \\n\"","lastModifiedDate":"2021-10-22"},{"lineNumber":501,"author":{"gitId":"jushg"},"content":"                    + \" / __|/ __| || | __|   \\\\| | | | |  | __| _ \\\\\\n\"","lastModifiedDate":"2021-10-22"},{"lineNumber":502,"author":{"gitId":"jushg"},"content":"                    + \" \\\\__ \\\\ (__| __ | _|| |) | |_| | |__| _||   /\\n\"","lastModifiedDate":"2021-10-22"},{"lineNumber":503,"author":{"gitId":"jushg"},"content":"                    + \" |___/\\\\___|_||_|___|___/_\\\\___/|____|___|_|_\\\\\\n\"","lastModifiedDate":"2021-10-22"},{"lineNumber":504,"author":{"gitId":"jushg"},"content":"                    + \" \\\\ \\\\ / /_ _| __\\\\ \\\\    / /                   \\n\"","lastModifiedDate":"2021-10-22"},{"lineNumber":505,"author":{"gitId":"jushg"},"content":"                    + \"  \\\\ V / | || _| \\\\ \\\\/\\\\/ /                    \\n\"","lastModifiedDate":"2021-10-22"},{"lineNumber":506,"author":{"gitId":"jushg"},"content":"                    + \"   \\\\_/ |___|___| \\\\_/\\\\_/                     \\n\"","lastModifiedDate":"2021-10-22"},{"lineNumber":507,"author":{"gitId":"jushg"},"content":"                    + \"                                            \");","lastModifiedDate":"2021-10-22"},{"lineNumber":508,"author":{"gitId":"jushg"},"content":"            break;","lastModifiedDate":"2021-10-22"},{"lineNumber":509,"author":{"gitId":"jushg"},"content":"        case MEDICAL_STAFF_INFO:","lastModifiedDate":"2021-10-22"},{"lineNumber":510,"author":{"gitId":"jushg"},"content":"            System.out.println(\"  ___ _____ _   ___ ___  \\n\"","lastModifiedDate":"2021-10-22"},{"lineNumber":511,"author":{"gitId":"jushg"},"content":"                    + \" / __|_   _/_\\\\ | __| __| \\n\"","lastModifiedDate":"2021-10-22"},{"lineNumber":512,"author":{"gitId":"jushg"},"content":"                    + \" \\\\__ \\\\ | |/ _ \\\\| _|| _|  \\n\"","lastModifiedDate":"2021-10-22"},{"lineNumber":513,"author":{"gitId":"jushg"},"content":"                    + \" |___/_|_/_/_\\\\_\\\\_| |_|   \\n\"","lastModifiedDate":"2021-10-22"},{"lineNumber":514,"author":{"gitId":"jushg"},"content":"                    + \" |_ _| \\\\| | __/ _ \\\\      \\n\"","lastModifiedDate":"2021-10-22"},{"lineNumber":515,"author":{"gitId":"jushg"},"content":"                    + \"  | || .` | _| (_) |     \\n\"","lastModifiedDate":"2021-10-22"},{"lineNumber":516,"author":{"gitId":"jushg"},"content":"                    + \" |___|_|\\\\_|_|_\\\\___/    __\\n\"","lastModifiedDate":"2021-10-22"},{"lineNumber":517,"author":{"gitId":"jushg"},"content":"                    + \" \\\\ \\\\ / /_ _| __\\\\ \\\\    / /\\n\"","lastModifiedDate":"2021-10-22"},{"lineNumber":518,"author":{"gitId":"jushg"},"content":"                    + \"  \\\\ V / | || _| \\\\ \\\\/\\\\/ / \\n\"","lastModifiedDate":"2021-10-22"},{"lineNumber":519,"author":{"gitId":"jushg"},"content":"                    + \"   \\\\_/ |___|___| \\\\_/\\\\_/  \\n\"","lastModifiedDate":"2021-10-22"},{"lineNumber":520,"author":{"gitId":"jushg"},"content":"                    + \"                         \");","lastModifiedDate":"2021-10-22"},{"lineNumber":521,"author":{"gitId":"jushg"},"content":"            break;","lastModifiedDate":"2021-10-22"},{"lineNumber":522,"author":{"gitId":"jushg"},"content":"        default:","lastModifiedDate":"2021-10-22"},{"lineNumber":523,"author":{"gitId":"jushg"},"content":"            break;","lastModifiedDate":"2021-10-22"},{"lineNumber":524,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":525,"author":{"gitId":"jushg"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":526,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":527,"author":{"gitId":"jushg"},"content":"        System.out.println(\"View has been switched to \" + viewType);","lastModifiedDate":"2021-10-22"},{"lineNumber":528,"author":{"gitId":"jushg"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":529,"author":{"gitId":"jushg"},"content":"}","lastModifiedDate":"2021-10-22"}],"authorContributionMap":{"justinfidelis":13,"jushg":426,"EricBryann":82,"Kureans":8}},{"path":"src/main/java/medbot/utilities/FilterType.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Kureans"},"content":"package medbot.utilities;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"Kureans"},"content":"public enum FilterType {","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"Kureans"},"content":"    NONE, BEFORE, AFTER","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"Kureans"},"content":"}","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"Kureans":5}},{"path":"src/main/java/medbot/utilities/Pair.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"CrimsonTitan79"},"content":"package medbot.utilities;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"CrimsonTitan79"},"content":"public class Pair\u003cX, Y\u003e {","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"CrimsonTitan79"},"content":"    public final X first;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"CrimsonTitan79"},"content":"    public final Y second;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"CrimsonTitan79"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"CrimsonTitan79"},"content":"    public Pair(X x, Y y) {","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"CrimsonTitan79"},"content":"        this.first \u003d x;","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"CrimsonTitan79"},"content":"        this.second \u003d y;","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"CrimsonTitan79"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"CrimsonTitan79"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"CrimsonTitan79":11}},{"path":"src/main/java/medbot/utilities/ViewType.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Kureans"},"content":"package medbot.utilities;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":3,"author":{"gitId":"Kureans"},"content":"public enum ViewType {","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"justinfidelis"},"content":"    PATIENT_INFO, SCHEDULER, MEDICAL_STAFF_INFO;","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"justinfidelis"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"justinfidelis"},"content":"     * Returns the next ViewType based on the given viewType.","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"justinfidelis"},"content":"     *","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"justinfidelis"},"content":"     * \u003cp\u003eOrder is fixed at PATIENT_INFO, SCHEDULER, MEDICAL_STAFF_INFO","lastModifiedDate":"2021-10-22"},{"lineNumber":10,"author":{"gitId":"justinfidelis"},"content":"     *","lastModifiedDate":"2021-10-22"},{"lineNumber":11,"author":{"gitId":"justinfidelis"},"content":"     * @param viewType a certain ViewType value","lastModifiedDate":"2021-10-22"},{"lineNumber":12,"author":{"gitId":"justinfidelis"},"content":"     * @return the next viewType","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"justinfidelis"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"justinfidelis"},"content":"    public static ViewType getNextView(ViewType viewType) {","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"justinfidelis"},"content":"        switch (viewType) {","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"justinfidelis"},"content":"        case PATIENT_INFO:","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"justinfidelis"},"content":"            return ViewType.MEDICAL_STAFF_INFO;","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"justinfidelis"},"content":"        case MEDICAL_STAFF_INFO:","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"justinfidelis"},"content":"            return ViewType.SCHEDULER;","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"justinfidelis"},"content":"        default:","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"justinfidelis"},"content":"            return ViewType.PATIENT_INFO;","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"justinfidelis"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"Kureans"},"content":"}","lastModifiedDate":"2021-10-16"}],"authorContributionMap":{"justinfidelis":20,"Kureans":4}},{"path":"src/test/java/medbot/MedBotTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"justinfidelis"},"content":"package medbot;","lastModifiedDate":"2021-09-30"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"EricBryann"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"justinfidelis"},"content":"class MedBotTest {","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2020-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public void sampleTest() {","lastModifiedDate":"2020-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"        assertTrue(true);","lastModifiedDate":"2020-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"justinfidelis":2,"-":8,"EricBryann":2}},{"path":"src/test/java/medbot/ParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"justinfidelis"},"content":"package medbot;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"jushg"},"content":"import medbot.command.Command;","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"jushg"},"content":"import medbot.command.ExitCommand;","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"jushg"},"content":"import medbot.command.HelpCommand;","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"jushg"},"content":"import medbot.command.SwitchCommand;","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"jushg"},"content":"import medbot.command.appointmentcommand.AddAppointmentCommand;","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"jushg"},"content":"import medbot.command.appointmentcommand.DeleteAppointmentCommand;","lastModifiedDate":"2021-10-22"},{"lineNumber":10,"author":{"gitId":"jushg"},"content":"import medbot.command.appointmentcommand.EditAppointmentCommand;","lastModifiedDate":"2021-10-22"},{"lineNumber":11,"author":{"gitId":"jushg"},"content":"import medbot.command.appointmentcommand.ListAppointmentCommand;","lastModifiedDate":"2021-10-22"},{"lineNumber":12,"author":{"gitId":"justinfidelis"},"content":"import medbot.command.personcommand.patientcommand.AddPatientCommand;","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"justinfidelis"},"content":"import medbot.command.personcommand.patientcommand.DeletePatientCommand;","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"justinfidelis"},"content":"import medbot.command.personcommand.patientcommand.EditPatientCommand;","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"justinfidelis"},"content":"import medbot.command.personcommand.patientcommand.FindPatientCommand;","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"justinfidelis"},"content":"import medbot.command.personcommand.patientcommand.ListPatientCommand;","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"justinfidelis"},"content":"import medbot.command.personcommand.patientcommand.ViewPatientCommand;","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"jushg"},"content":"import medbot.command.personcommand.staffcommand.AddStaffCommand;","lastModifiedDate":"2021-10-22"},{"lineNumber":19,"author":{"gitId":"jushg"},"content":"import medbot.command.personcommand.staffcommand.EditStaffCommand;","lastModifiedDate":"2021-10-22"},{"lineNumber":20,"author":{"gitId":"jushg"},"content":"import medbot.command.personcommand.staffcommand.DeleteStaffCommand;","lastModifiedDate":"2021-10-22"},{"lineNumber":21,"author":{"gitId":"jushg"},"content":"import medbot.command.personcommand.staffcommand.FindStaffCommand;","lastModifiedDate":"2021-10-22"},{"lineNumber":22,"author":{"gitId":"jushg"},"content":"import medbot.command.personcommand.staffcommand.ListStaffCommand;","lastModifiedDate":"2021-10-22"},{"lineNumber":23,"author":{"gitId":"jushg"},"content":"import medbot.command.personcommand.staffcommand.ViewStaffCommand;","lastModifiedDate":"2021-10-22"},{"lineNumber":24,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":25,"author":{"gitId":"jushg"},"content":"import medbot.exceptions.MedBotParserException;","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"justinfidelis"},"content":"import medbot.parser.Parser;","lastModifiedDate":"2021-10-22"},{"lineNumber":27,"author":{"gitId":"justinfidelis"},"content":"import medbot.parser.ParserUtils;","lastModifiedDate":"2021-10-22"},{"lineNumber":28,"author":{"gitId":"EricBryann"},"content":"import medbot.person.Patient;","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"EricBryann"},"content":"import medbot.person.Person;","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"jushg"},"content":"import medbot.utilities.ViewType;","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"justinfidelis"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-06"},{"lineNumber":33,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":34,"author":{"gitId":"justinfidelis"},"content":"import java.lang.reflect.InvocationTargetException;","lastModifiedDate":"2021-10-06"},{"lineNumber":35,"author":{"gitId":"justinfidelis"},"content":"import java.lang.reflect.Method;","lastModifiedDate":"2021-10-06"},{"lineNumber":36,"author":{"gitId":"jushg"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":38,"author":{"gitId":"justinfidelis"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-24"},{"lineNumber":39,"author":{"gitId":"jushg"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"EricBryann"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-06"},{"lineNumber":41,"author":{"gitId":"jushg"},"content":"import static org.junit.jupiter.api.Assertions.assertArrayEquals;","lastModifiedDate":"2021-10-21"},{"lineNumber":42,"author":{"gitId":"jushg"},"content":"import static org.junit.jupiter.api.Assertions.assertSame;","lastModifiedDate":"2021-10-21"},{"lineNumber":43,"author":{"gitId":"justinfidelis"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2021-10-24"},{"lineNumber":44,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":45,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":46,"author":{"gitId":"justinfidelis"},"content":"class ParserTest {","lastModifiedDate":"2021-10-06"},{"lineNumber":47,"author":{"gitId":"jushg"},"content":"    private static final String END_LINE \u003d System.lineSeparator();","lastModifiedDate":"2021-10-21"},{"lineNumber":48,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":49,"author":{"gitId":"justinfidelis"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":50,"author":{"gitId":"justinfidelis"},"content":"    public void testParseEmailAddress_correctFormat() {","lastModifiedDate":"2021-10-24"},{"lineNumber":51,"author":{"gitId":"justinfidelis"},"content":"        try {","lastModifiedDate":"2021-10-06"},{"lineNumber":52,"author":{"gitId":"justinfidelis"},"content":"            assertEquals(\"johntan@example.com\",","lastModifiedDate":"2021-10-24"},{"lineNumber":53,"author":{"gitId":"justinfidelis"},"content":"                    ParserUtils.parseEmailAddress(\"johntan@example.com\"));","lastModifiedDate":"2021-10-24"},{"lineNumber":54,"author":{"gitId":"justinfidelis"},"content":"            assertEquals(\"johntan@example.com.sg\",","lastModifiedDate":"2021-10-24"},{"lineNumber":55,"author":{"gitId":"justinfidelis"},"content":"                    ParserUtils.parseEmailAddress(\"johntan@example.com.sg\"));","lastModifiedDate":"2021-10-24"},{"lineNumber":56,"author":{"gitId":"justinfidelis"},"content":"            assertEquals(\"john.tan_2@example.com\",","lastModifiedDate":"2021-10-24"},{"lineNumber":57,"author":{"gitId":"justinfidelis"},"content":"                    ParserUtils.parseEmailAddress(\"john.tan_2@example.com\"));","lastModifiedDate":"2021-10-24"},{"lineNumber":58,"author":{"gitId":"justinfidelis"},"content":"            assertEquals(\"johntan@example.com\",","lastModifiedDate":"2021-10-24"},{"lineNumber":59,"author":{"gitId":"justinfidelis"},"content":"                    ParserUtils.parseEmailAddress(\" johntan@example.com \"));","lastModifiedDate":"2021-10-24"},{"lineNumber":60,"author":{"gitId":"justinfidelis"},"content":"        } catch (MedBotParserException me) {","lastModifiedDate":"2021-10-24"},{"lineNumber":61,"author":{"gitId":"justinfidelis"},"content":"            fail();","lastModifiedDate":"2021-10-24"},{"lineNumber":62,"author":{"gitId":"justinfidelis"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":63,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":64,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":65,"author":{"gitId":"justinfidelis"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":66,"author":{"gitId":"justinfidelis"},"content":"    public void testParseEmailAddress_exceptionThrown() {","lastModifiedDate":"2021-10-24"},{"lineNumber":67,"author":{"gitId":"justinfidelis"},"content":"        assertThrows(MedBotParserException.class, () -\u003e ParserUtils.parseEmailAddress(\"   \"),","lastModifiedDate":"2021-10-24"},{"lineNumber":68,"author":{"gitId":"justinfidelis"},"content":"                \"Email address not specified.\");","lastModifiedDate":"2021-10-24"},{"lineNumber":69,"author":{"gitId":"justinfidelis"},"content":"        assertThrows(MedBotParserException.class, () -\u003e ParserUtils.parseEmailAddress(\"johntan_@example.com\"),","lastModifiedDate":"2021-10-24"},{"lineNumber":70,"author":{"gitId":"justinfidelis"},"content":"                \"Incorrect email address format.\");","lastModifiedDate":"2021-10-24"},{"lineNumber":71,"author":{"gitId":"justinfidelis"},"content":"        assertThrows(MedBotParserException.class, () -\u003e ParserUtils.parseEmailAddress(\"_johntan@example.com\"),","lastModifiedDate":"2021-10-24"},{"lineNumber":72,"author":{"gitId":"justinfidelis"},"content":"                \"Incorrect email address format.\");","lastModifiedDate":"2021-10-24"},{"lineNumber":73,"author":{"gitId":"justinfidelis"},"content":"        assertThrows(MedBotParserException.class, () -\u003e ParserUtils.parseEmailAddress(\"johntan@example\"),","lastModifiedDate":"2021-10-24"},{"lineNumber":74,"author":{"gitId":"justinfidelis"},"content":"                \"Incorrect email address format.\");","lastModifiedDate":"2021-10-24"},{"lineNumber":75,"author":{"gitId":"justinfidelis"},"content":"        assertThrows(MedBotParserException.class, () -\u003e ParserUtils.parseEmailAddress(\"johntanexample,com\"),","lastModifiedDate":"2021-10-24"},{"lineNumber":76,"author":{"gitId":"justinfidelis"},"content":"                \"Incorrect email address format.\");","lastModifiedDate":"2021-10-24"},{"lineNumber":77,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":78,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":79,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":80,"author":{"gitId":"justinfidelis"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":81,"author":{"gitId":"justinfidelis"},"content":"    public void testParsePhoneNumber_correctFormat() {","lastModifiedDate":"2021-10-24"},{"lineNumber":82,"author":{"gitId":"justinfidelis"},"content":"        try {","lastModifiedDate":"2021-10-06"},{"lineNumber":83,"author":{"gitId":"justinfidelis"},"content":"            assertEquals(\"81234567\",","lastModifiedDate":"2021-10-24"},{"lineNumber":84,"author":{"gitId":"justinfidelis"},"content":"                    ParserUtils.parsePhoneNumber(\"81234567\"));","lastModifiedDate":"2021-10-24"},{"lineNumber":85,"author":{"gitId":"justinfidelis"},"content":"            assertEquals(\"81234567\",","lastModifiedDate":"2021-10-24"},{"lineNumber":86,"author":{"gitId":"justinfidelis"},"content":"                    ParserUtils.parsePhoneNumber(\"  81234567\"));","lastModifiedDate":"2021-10-24"},{"lineNumber":87,"author":{"gitId":"justinfidelis"},"content":"            assertEquals(\"81234567\",","lastModifiedDate":"2021-10-24"},{"lineNumber":88,"author":{"gitId":"justinfidelis"},"content":"                    ParserUtils.parsePhoneNumber(\"8123   4567\"));","lastModifiedDate":"2021-10-24"},{"lineNumber":89,"author":{"gitId":"justinfidelis"},"content":"            assertEquals(\"81234567\",","lastModifiedDate":"2021-10-24"},{"lineNumber":90,"author":{"gitId":"justinfidelis"},"content":"                    ParserUtils.parsePhoneNumber(\"8123_4567\"));","lastModifiedDate":"2021-10-24"},{"lineNumber":91,"author":{"gitId":"justinfidelis"},"content":"        } catch (MedBotParserException me) {","lastModifiedDate":"2021-10-24"},{"lineNumber":92,"author":{"gitId":"justinfidelis"},"content":"            fail();","lastModifiedDate":"2021-10-24"},{"lineNumber":93,"author":{"gitId":"justinfidelis"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":94,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":95,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":96,"author":{"gitId":"justinfidelis"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":97,"author":{"gitId":"justinfidelis"},"content":"    public void testParsePhoneNumber_exceptionThrown() {","lastModifiedDate":"2021-10-24"},{"lineNumber":98,"author":{"gitId":"justinfidelis"},"content":"        assertThrows(MedBotParserException.class, () -\u003e ParserUtils.parsePhoneNumber(\"8123456\"),","lastModifiedDate":"2021-10-24"},{"lineNumber":99,"author":{"gitId":"justinfidelis"},"content":"                \"Phone number has too few digits.\");","lastModifiedDate":"2021-10-24"},{"lineNumber":100,"author":{"gitId":"justinfidelis"},"content":"        assertThrows(MedBotParserException.class, () -\u003e ParserUtils.parsePhoneNumber(\"812345678\"),","lastModifiedDate":"2021-10-24"},{"lineNumber":101,"author":{"gitId":"justinfidelis"},"content":"                \"Phone number has too many digits.\");","lastModifiedDate":"2021-10-24"},{"lineNumber":102,"author":{"gitId":"justinfidelis"},"content":"        assertThrows(MedBotParserException.class, () -\u003e ParserUtils.parsePhoneNumber(\"   \"),","lastModifiedDate":"2021-10-24"},{"lineNumber":103,"author":{"gitId":"justinfidelis"},"content":"                \"Phone number not specified.\");","lastModifiedDate":"2021-10-24"},{"lineNumber":104,"author":{"gitId":"justinfidelis"},"content":"        assertThrows(MedBotParserException.class, () -\u003e ParserUtils.parsePhoneNumber(\"8123456A\"),","lastModifiedDate":"2021-10-24"},{"lineNumber":105,"author":{"gitId":"justinfidelis"},"content":"                \"Phone number contains unexpected characters.\");","lastModifiedDate":"2021-10-24"},{"lineNumber":106,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":107,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":108,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":109,"author":{"gitId":"justinfidelis"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":110,"author":{"gitId":"justinfidelis"},"content":"    public void testParseName_validFormat() {","lastModifiedDate":"2021-10-24"},{"lineNumber":111,"author":{"gitId":"justinfidelis"},"content":"        try {","lastModifiedDate":"2021-10-06"},{"lineNumber":112,"author":{"gitId":"justinfidelis"},"content":"            assertEquals(\"John Tan\", ParserUtils.parseName(\"John Tan\"));","lastModifiedDate":"2021-10-24"},{"lineNumber":113,"author":{"gitId":"justinfidelis"},"content":"            assertEquals(\"John Tan\", ParserUtils.parseName(\"john tan\"));","lastModifiedDate":"2021-10-24"},{"lineNumber":114,"author":{"gitId":"justinfidelis"},"content":"            assertEquals(\"John Tan\", ParserUtils.parseName(\"JOHN TAN\"));","lastModifiedDate":"2021-10-24"},{"lineNumber":115,"author":{"gitId":"justinfidelis"},"content":"            assertEquals(\"John-Tan\", ParserUtils.parseName(\"john-tan\"));","lastModifiedDate":"2021-10-24"},{"lineNumber":116,"author":{"gitId":"justinfidelis"},"content":"            assertEquals(\"John+tan\", ParserUtils.parseName(\"john+tan\"));","lastModifiedDate":"2021-10-24"},{"lineNumber":117,"author":{"gitId":"justinfidelis"},"content":"        } catch (MedBotParserException me) {","lastModifiedDate":"2021-10-24"},{"lineNumber":118,"author":{"gitId":"justinfidelis"},"content":"            fail();","lastModifiedDate":"2021-10-24"},{"lineNumber":119,"author":{"gitId":"justinfidelis"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":120,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":121,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":122,"author":{"gitId":"justinfidelis"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":123,"author":{"gitId":"justinfidelis"},"content":"    public void testParseName_exceptionThrown() {","lastModifiedDate":"2021-10-24"},{"lineNumber":124,"author":{"gitId":"justinfidelis"},"content":"        assertThrows(MedBotParserException.class, () -\u003e ParserUtils.parseName(\"  \"), \"Name not specified.\");","lastModifiedDate":"2021-10-24"},{"lineNumber":125,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":126,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":127,"author":{"gitId":"jushg"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":128,"author":{"gitId":"justinfidelis"},"content":"    public void testParseIcNumber_validFormat() {","lastModifiedDate":"2021-10-24"},{"lineNumber":129,"author":{"gitId":"jushg"},"content":"        try {","lastModifiedDate":"2021-10-07"},{"lineNumber":130,"author":{"gitId":"justinfidelis"},"content":"            assertEquals(\"S1234567A\", ParserUtils.parseIcNumber(\"S1234567A\"));","lastModifiedDate":"2021-10-24"},{"lineNumber":131,"author":{"gitId":"justinfidelis"},"content":"            assertEquals(\"F1234567A\", ParserUtils.parseIcNumber(\"f1234567a\"));","lastModifiedDate":"2021-10-24"},{"lineNumber":132,"author":{"gitId":"justinfidelis"},"content":"        } catch (MedBotParserException me) {","lastModifiedDate":"2021-10-24"},{"lineNumber":133,"author":{"gitId":"justinfidelis"},"content":"            fail();","lastModifiedDate":"2021-10-24"},{"lineNumber":134,"author":{"gitId":"jushg"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":135,"author":{"gitId":"jushg"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":136,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":137,"author":{"gitId":"justinfidelis"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":138,"author":{"gitId":"justinfidelis"},"content":"    public void testParseIcNumber_exceptionThrown() {","lastModifiedDate":"2021-10-24"},{"lineNumber":139,"author":{"gitId":"justinfidelis"},"content":"        assertThrows(MedBotParserException.class, () -\u003e ParserUtils.parseIcNumber(\"Z1234567A\"),","lastModifiedDate":"2021-10-24"},{"lineNumber":140,"author":{"gitId":"justinfidelis"},"content":"                \"Incorrect IC number format.\");","lastModifiedDate":"2021-10-24"},{"lineNumber":141,"author":{"gitId":"justinfidelis"},"content":"        assertThrows(MedBotParserException.class, () -\u003e ParserUtils.parseIcNumber(\"F1234567\"),","lastModifiedDate":"2021-10-24"},{"lineNumber":142,"author":{"gitId":"justinfidelis"},"content":"                \"Incorrect IC number format.\");","lastModifiedDate":"2021-10-24"},{"lineNumber":143,"author":{"gitId":"justinfidelis"},"content":"        assertThrows(MedBotParserException.class, () -\u003e ParserUtils.parseIcNumber(\"1234567A\"),","lastModifiedDate":"2021-10-24"},{"lineNumber":144,"author":{"gitId":"justinfidelis"},"content":"                \"Incorrect IC number format.\");","lastModifiedDate":"2021-10-24"},{"lineNumber":145,"author":{"gitId":"justinfidelis"},"content":"        assertThrows(MedBotParserException.class, () -\u003e ParserUtils.parseIcNumber(\"S1234 567A\"),","lastModifiedDate":"2021-10-24"},{"lineNumber":146,"author":{"gitId":"justinfidelis"},"content":"                \"Incorrect IC number format.\");","lastModifiedDate":"2021-10-24"},{"lineNumber":147,"author":{"gitId":"justinfidelis"},"content":"        assertThrows(MedBotParserException.class, () -\u003e ParserUtils.parseIcNumber(\"1234567A\"),","lastModifiedDate":"2021-10-24"},{"lineNumber":148,"author":{"gitId":"justinfidelis"},"content":"                \"Incorrect IC number format.\");","lastModifiedDate":"2021-10-24"},{"lineNumber":149,"author":{"gitId":"justinfidelis"},"content":"        assertThrows(MedBotParserException.class, () -\u003e ParserUtils.parseIcNumber(\"  \"),","lastModifiedDate":"2021-10-24"},{"lineNumber":150,"author":{"gitId":"justinfidelis"},"content":"                \"IC number not specified.\");","lastModifiedDate":"2021-10-24"},{"lineNumber":151,"author":{"gitId":"jushg"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":152,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":153,"author":{"gitId":"jushg"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":154,"author":{"gitId":"justinfidelis"},"content":"    void testParseResidentialAddress_correctFormat() {","lastModifiedDate":"2021-10-24"},{"lineNumber":155,"author":{"gitId":"jushg"},"content":"        try {","lastModifiedDate":"2021-10-07"},{"lineNumber":156,"author":{"gitId":"justinfidelis"},"content":"            assertEquals(\"12 Lower Kent Ridge\", ParserUtils.parseResidentialAddress(\"12 Lower Kent Ridge\"));","lastModifiedDate":"2021-10-24"},{"lineNumber":157,"author":{"gitId":"justinfidelis"},"content":"            assertEquals(\"12 Lower Kent Ridge\", ParserUtils.parseResidentialAddress(\"12 lower kent ridge\"));","lastModifiedDate":"2021-10-24"},{"lineNumber":158,"author":{"gitId":"justinfidelis"},"content":"            assertEquals(\"12 Lower Kent Ridge\", ParserUtils.parseResidentialAddress(\"12 LOWER KENT RIDGE\"));","lastModifiedDate":"2021-10-24"},{"lineNumber":159,"author":{"gitId":"justinfidelis"},"content":"        } catch (MedBotParserException me) {","lastModifiedDate":"2021-10-24"},{"lineNumber":160,"author":{"gitId":"justinfidelis"},"content":"            fail();","lastModifiedDate":"2021-10-24"},{"lineNumber":161,"author":{"gitId":"jushg"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":162,"author":{"gitId":"jushg"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":163,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":164,"author":{"gitId":"justinfidelis"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":165,"author":{"gitId":"justinfidelis"},"content":"    public void testParseResidentialAddress_exceptionThrown() {","lastModifiedDate":"2021-10-24"},{"lineNumber":166,"author":{"gitId":"justinfidelis"},"content":"        assertThrows(MedBotParserException.class, () -\u003e ParserUtils.parseName(\"  \"), \"Address not specified.\");","lastModifiedDate":"2021-10-24"},{"lineNumber":167,"author":{"gitId":"jushg"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":168,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":169,"author":{"gitId":"justinfidelis"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":170,"author":{"gitId":"justinfidelis"},"content":"    void testPreprocessMultiAttributeInput() throws Exception {","lastModifiedDate":"2021-10-13"},{"lineNumber":171,"author":{"gitId":"justinfidelis"},"content":"        Method method \u003d ParserUtils.class.getDeclaredMethod(\"preprocessMultiAttributeInput\", String.class);","lastModifiedDate":"2021-10-22"},{"lineNumber":172,"author":{"gitId":"justinfidelis"},"content":"        method.setAccessible(true);","lastModifiedDate":"2021-10-13"},{"lineNumber":173,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":174,"author":{"gitId":"justinfidelis"},"content":"        String testInput0 \u003d \"add n/John Tan i/S8712345G e/john@gmail.com p/8123 4567 a/123 bishan st 24 #05-19\";","lastModifiedDate":"2021-10-24"},{"lineNumber":175,"author":{"gitId":"justinfidelis"},"content":"        String testOutput0 \u003d \"add |n/John Tan |i/S8712345G |e/john@gmail.com |p/8123 4567 |a/123 bishan st 24 #05-19\";","lastModifiedDate":"2021-10-24"},{"lineNumber":176,"author":{"gitId":"justinfidelis"},"content":"        assertEquals(testOutput0, method.invoke(method, testInput0));","lastModifiedDate":"2021-10-24"},{"lineNumber":177,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":178,"author":{"gitId":"justinfidelis"},"content":"        String testInput1 \u003d \"add n/joe ong e/joe@gmail.com a/123 Bishan st 24 #05-19 \";","lastModifiedDate":"2021-10-24"},{"lineNumber":179,"author":{"gitId":"justinfidelis"},"content":"        String testOutput1 \u003d \"add |n/joe ong |e/joe@gmail.com |a/123 Bishan st 24 #05-19 \";","lastModifiedDate":"2021-10-24"},{"lineNumber":180,"author":{"gitId":"justinfidelis"},"content":"        assertEquals(testOutput1, method.invoke(method, testInput1));","lastModifiedDate":"2021-10-24"},{"lineNumber":181,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":182,"author":{"gitId":"justinfidelis"},"content":"        String testInput2 \u003d \"add   n/Tim lee   e/tim_lee@gmail.com.sg   a/123 queenstown ave 6 #05-19 \";","lastModifiedDate":"2021-10-24"},{"lineNumber":183,"author":{"gitId":"justinfidelis"},"content":"        String testOutput2 \u003d \"add   |n/Tim lee   |e/tim_lee@gmail.com.sg   |a/123 queenstown ave 6 #05-19 \";","lastModifiedDate":"2021-10-24"},{"lineNumber":184,"author":{"gitId":"justinfidelis"},"content":"        assertEquals(testOutput2, method.invoke(method, testInput2));","lastModifiedDate":"2021-10-24"},{"lineNumber":185,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":186,"author":{"gitId":"justinfidelis"},"content":"        String testInput3 \u003d \"addn/Tim leee/tim_lee@gmail.com.sga/123 queenstown ave 6 #05-19 \";","lastModifiedDate":"2021-10-24"},{"lineNumber":187,"author":{"gitId":"justinfidelis"},"content":"        String testOutput3 \u003d \"add|n/Tim lee|e/tim_lee@gmail.com.sg|a/123 queenstown ave 6 #05-19 \";","lastModifiedDate":"2021-10-24"},{"lineNumber":188,"author":{"gitId":"justinfidelis"},"content":"        assertEquals(testOutput3, method.invoke(method, testInput3));","lastModifiedDate":"2021-10-24"},{"lineNumber":189,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":190,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":191,"author":{"gitId":"justinfidelis"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":192,"author":{"gitId":"justinfidelis"},"content":"    void testUpdateMultiplePersonalInformation() throws Exception {","lastModifiedDate":"2021-10-13"},{"lineNumber":193,"author":{"gitId":"justinfidelis"},"content":"        Method method \u003d ParserUtils.class.getDeclaredMethod(\"updateMultiplePersonalInformation\", Person.class,","lastModifiedDate":"2021-10-22"},{"lineNumber":194,"author":{"gitId":"justinfidelis"},"content":"                String[].class);","lastModifiedDate":"2021-10-13"},{"lineNumber":195,"author":{"gitId":"justinfidelis"},"content":"        method.setAccessible(true);","lastModifiedDate":"2021-10-13"},{"lineNumber":196,"author":{"gitId":"justinfidelis"},"content":"        Patient patient \u003d new Patient();","lastModifiedDate":"2021-10-13"},{"lineNumber":197,"author":{"gitId":"justinfidelis"},"content":"        String[] attributeStrings \u003d {\"n/John tan  \", \"i/S8712345G  \", \"e/john_tan@gmail.com \", \"p/8123 4567\",","lastModifiedDate":"2021-10-13"},{"lineNumber":198,"author":{"gitId":"justinfidelis"},"content":"                                     \"a/123 bishan st 24 #05-19  \"};","lastModifiedDate":"2021-10-13"},{"lineNumber":199,"author":{"gitId":"justinfidelis"},"content":"        method.invoke(method, patient, attributeStrings);","lastModifiedDate":"2021-10-13"},{"lineNumber":200,"author":{"gitId":"justinfidelis"},"content":"        assertEquals(patient.getName(), \"John Tan\");","lastModifiedDate":"2021-10-13"},{"lineNumber":201,"author":{"gitId":"justinfidelis"},"content":"        assertEquals(patient.getIcNumber(), \"S8712345G\");","lastModifiedDate":"2021-10-13"},{"lineNumber":202,"author":{"gitId":"justinfidelis"},"content":"        assertEquals(patient.getEmailAddress(), \"john_tan@gmail.com\");","lastModifiedDate":"2021-10-13"},{"lineNumber":203,"author":{"gitId":"justinfidelis"},"content":"        assertEquals(patient.getPhoneNumber(), \"81234567\");","lastModifiedDate":"2021-10-13"},{"lineNumber":204,"author":{"gitId":"justinfidelis"},"content":"        assertEquals(patient.getResidentialAddress(), \"123 Bishan St 24 #05-19\");","lastModifiedDate":"2021-10-13"},{"lineNumber":205,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":206,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":207,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":208,"author":{"gitId":"jushg"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":209,"author":{"gitId":"jushg"},"content":"    void testPreprocessInput() throws Exception {","lastModifiedDate":"2021-10-21"},{"lineNumber":210,"author":{"gitId":"justinfidelis"},"content":"        Method method \u003d ParserUtils.class.getDeclaredMethod(\"preprocessInput\", String.class);","lastModifiedDate":"2021-10-22"},{"lineNumber":211,"author":{"gitId":"jushg"},"content":"        method.setAccessible(true);","lastModifiedDate":"2021-10-21"},{"lineNumber":212,"author":{"gitId":"justinfidelis"},"content":"        assertEquals(\"add n/John Tan\", method.invoke(method, \"  add n/John Tan   \"));","lastModifiedDate":"2021-10-24"},{"lineNumber":213,"author":{"gitId":"justinfidelis"},"content":"        assertEquals(\"add n/John Tan\", method.invoke(method, \"add n/John Tan\"));","lastModifiedDate":"2021-10-24"},{"lineNumber":214,"author":{"gitId":"justinfidelis"},"content":"        assertEquals(\"add n/Tim lee\", method.invoke(method, \"add n/Tim| lee \"));","lastModifiedDate":"2021-10-24"},{"lineNumber":215,"author":{"gitId":"justinfidelis"},"content":"        assertEquals(\"add i/S8712345G\", method.invoke(method, \"add i/S8712345G||\"));","lastModifiedDate":"2021-10-24"},{"lineNumber":216,"author":{"gitId":"jushg"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":217,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":218,"author":{"gitId":"jushg"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":219,"author":{"gitId":"justinfidelis"},"content":"    void testParseId() throws Exception {","lastModifiedDate":"2021-10-22"},{"lineNumber":220,"author":{"gitId":"justinfidelis"},"content":"        Method method \u003d ParserUtils.class.getDeclaredMethod(\"parseId\", String.class);","lastModifiedDate":"2021-10-22"},{"lineNumber":221,"author":{"gitId":"jushg"},"content":"        method.setAccessible(true);","lastModifiedDate":"2021-10-21"},{"lineNumber":222,"author":{"gitId":"jushg"},"content":"        HashMap\u003cString, Integer\u003e testCases \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-10-21"},{"lineNumber":223,"author":{"gitId":"jushg"},"content":"        testCases.put(\"5\", 5);","lastModifiedDate":"2021-10-21"},{"lineNumber":224,"author":{"gitId":"jushg"},"content":"        testCases.put(\"  5   \", 5);","lastModifiedDate":"2021-10-21"},{"lineNumber":225,"author":{"gitId":"jushg"},"content":"        testCases.put(\"35\", 35);","lastModifiedDate":"2021-10-21"},{"lineNumber":226,"author":{"gitId":"jushg"},"content":"        for (String key : testCases.keySet()) {","lastModifiedDate":"2021-10-21"},{"lineNumber":227,"author":{"gitId":"jushg"},"content":"            assertEquals(testCases.get(key), method.invoke(method, key));","lastModifiedDate":"2021-10-21"},{"lineNumber":228,"author":{"gitId":"jushg"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":229,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":230,"author":{"gitId":"jushg"},"content":"        String[][] testInputExceptions \u003d {","lastModifiedDate":"2021-10-21"},{"lineNumber":231,"author":{"gitId":"justinfidelis"},"content":"                {\"     \", \"ID not specified or not a number.\"},","lastModifiedDate":"2021-10-24"},{"lineNumber":232,"author":{"gitId":"justinfidelis"},"content":"                {\"hi\", \"ID not specified or not a number.\"},","lastModifiedDate":"2021-10-24"},{"lineNumber":233,"author":{"gitId":"justinfidelis"},"content":"                {\"13hi \", \"ID not specified or not a number.\"},","lastModifiedDate":"2021-10-24"},{"lineNumber":234,"author":{"gitId":"justinfidelis"},"content":"                {\"hi13\", \"ID not specified or not a number.\"}","lastModifiedDate":"2021-10-24"},{"lineNumber":235,"author":{"gitId":"jushg"},"content":"        };","lastModifiedDate":"2021-10-21"},{"lineNumber":236,"author":{"gitId":"jushg"},"content":"        for (String[] testInputException : testInputExceptions) {","lastModifiedDate":"2021-10-21"},{"lineNumber":237,"author":{"gitId":"jushg"},"content":"            try {","lastModifiedDate":"2021-10-21"},{"lineNumber":238,"author":{"gitId":"jushg"},"content":"                assertEquals(testInputException[1], method.invoke(method, testInputException[0]));","lastModifiedDate":"2021-10-21"},{"lineNumber":239,"author":{"gitId":"jushg"},"content":"            } catch (InvocationTargetException e) {","lastModifiedDate":"2021-10-21"},{"lineNumber":240,"author":{"gitId":"jushg"},"content":"                assertEquals(testInputException[1], e.getTargetException().getMessage());","lastModifiedDate":"2021-10-21"},{"lineNumber":241,"author":{"gitId":"jushg"},"content":"            }","lastModifiedDate":"2021-10-21"},{"lineNumber":242,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":243,"author":{"gitId":"jushg"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":244,"author":{"gitId":"jushg"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":245,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":246,"author":{"gitId":"jushg"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":247,"author":{"gitId":"jushg"},"content":"    void testGetParameters() throws Exception {","lastModifiedDate":"2021-10-21"},{"lineNumber":248,"author":{"gitId":"justinfidelis"},"content":"        Method method \u003d ParserUtils.class.getDeclaredMethod(\"getParameters\", String.class);","lastModifiedDate":"2021-10-22"},{"lineNumber":249,"author":{"gitId":"jushg"},"content":"        method.setAccessible(true);","lastModifiedDate":"2021-10-21"},{"lineNumber":250,"author":{"gitId":"jushg"},"content":"        String[] resultParameters \u003d {\"n/John Tan \", \"i/S8712345G \", \"e/john_tan@gmail.com \", \"p/8123 4567\"};","lastModifiedDate":"2021-10-21"},{"lineNumber":251,"author":{"gitId":"justinfidelis"},"content":"        String[] inputCommands \u003d {\"add n/John Tan i/S8712345G e/john_tan@gmail.com p/8123 4567\",","lastModifiedDate":"2021-10-24"},{"lineNumber":252,"author":{"gitId":"jushg"},"content":"                                  \"edit n/John Tan i/S8712345G e/john_tan@gmail.com p/8123 4567\",","lastModifiedDate":"2021-10-21"},{"lineNumber":253,"author":{"gitId":"jushg"},"content":"                                  \"add         n/John Tan i/S8712345G e/john_tan@gmail.com p/8123 4567\",","lastModifiedDate":"2021-10-21"},{"lineNumber":254,"author":{"gitId":"justinfidelis"},"content":"                                  \"edit          n/John Tan i/S8712345G e/john_tan@gmail.com p/8123 4567\"};","lastModifiedDate":"2021-10-24"},{"lineNumber":255,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":256,"author":{"gitId":"jushg"},"content":"        for (String inputCommand : inputCommands) {","lastModifiedDate":"2021-10-21"},{"lineNumber":257,"author":{"gitId":"jushg"},"content":"            assertArrayEquals(resultParameters, (Object[]) method.invoke(method, inputCommand));","lastModifiedDate":"2021-10-21"},{"lineNumber":258,"author":{"gitId":"jushg"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":259,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":260,"author":{"gitId":"jushg"},"content":"        String[][] testInputExceptions \u003d {","lastModifiedDate":"2021-10-21"},{"lineNumber":261,"author":{"gitId":"justinfidelis"},"content":"                {\"add    \", \"No parameters given\"},","lastModifiedDate":"2021-10-24"},{"lineNumber":262,"author":{"gitId":"justinfidelis"},"content":"                {\"edit    \", \"No parameters given\"},","lastModifiedDate":"2021-10-24"},{"lineNumber":263,"author":{"gitId":"justinfidelis"},"content":"                {\"add John  john@email\", \"No parameters given\"},","lastModifiedDate":"2021-10-24"},{"lineNumber":264,"author":{"gitId":"justinfidelis"},"content":"                {\"edit John john@email\", \"No parameters given\"}","lastModifiedDate":"2021-10-24"},{"lineNumber":265,"author":{"gitId":"jushg"},"content":"        };","lastModifiedDate":"2021-10-21"},{"lineNumber":266,"author":{"gitId":"jushg"},"content":"        for (String[] testInputException : testInputExceptions) {","lastModifiedDate":"2021-10-21"},{"lineNumber":267,"author":{"gitId":"jushg"},"content":"            try {","lastModifiedDate":"2021-10-21"},{"lineNumber":268,"author":{"gitId":"jushg"},"content":"                assertEquals(testInputException[1], method.invoke(method, testInputException[0]));","lastModifiedDate":"2021-10-21"},{"lineNumber":269,"author":{"gitId":"jushg"},"content":"            } catch (InvocationTargetException e) {","lastModifiedDate":"2021-10-21"},{"lineNumber":270,"author":{"gitId":"jushg"},"content":"                assertEquals(testInputException[1], e.getTargetException().getMessage());","lastModifiedDate":"2021-10-21"},{"lineNumber":271,"author":{"gitId":"jushg"},"content":"            }","lastModifiedDate":"2021-10-21"},{"lineNumber":272,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":273,"author":{"gitId":"jushg"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":274,"author":{"gitId":"jushg"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":275,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":276,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":277,"author":{"gitId":"jushg"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":278,"author":{"gitId":"jushg"},"content":"    void testParseCommandForPatient() {","lastModifiedDate":"2021-10-22"},{"lineNumber":279,"author":{"gitId":"jushg"},"content":"        //This test only check the type, not the value of the command","lastModifiedDate":"2021-10-21"},{"lineNumber":280,"author":{"gitId":"jushg"},"content":"        Parser.setViewType(ViewType.PATIENT_INFO);","lastModifiedDate":"2021-10-21"},{"lineNumber":281,"author":{"gitId":"jushg"},"content":"        assertSame(Parser.getViewType(), ViewType.PATIENT_INFO);","lastModifiedDate":"2021-10-21"},{"lineNumber":282,"author":{"gitId":"jushg"},"content":"        HashMap\u003cString, Command\u003e testCases \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-10-21"},{"lineNumber":283,"author":{"gitId":"jushg"},"content":"        testCases.put(\"exit\", new ExitCommand());","lastModifiedDate":"2021-10-21"},{"lineNumber":284,"author":{"gitId":"jushg"},"content":"        testCases.put(\"help \", new HelpCommand(ViewType.PATIENT_INFO));","lastModifiedDate":"2021-10-22"},{"lineNumber":285,"author":{"gitId":"jushg"},"content":"        testCases.put(\"switch 2\", new SwitchCommand(null));","lastModifiedDate":"2021-10-22"},{"lineNumber":286,"author":{"gitId":"jushg"},"content":"        testCases.put(\"add n/John Tan \", new AddPatientCommand(null));","lastModifiedDate":"2021-10-21"},{"lineNumber":287,"author":{"gitId":"jushg"},"content":"        testCases.put(\"edit 1 n/John Tan \", new EditPatientCommand(1, null));","lastModifiedDate":"2021-10-21"},{"lineNumber":288,"author":{"gitId":"jushg"},"content":"        testCases.put(\"delete 1\", new DeletePatientCommand(1));","lastModifiedDate":"2021-10-21"},{"lineNumber":289,"author":{"gitId":"jushg"},"content":"        testCases.put(\"find n/name\", new FindPatientCommand(new String[]{\"name\"}));","lastModifiedDate":"2021-10-21"},{"lineNumber":290,"author":{"gitId":"jushg"},"content":"        testCases.put(\"view 1\", new ViewPatientCommand(1));","lastModifiedDate":"2021-10-21"},{"lineNumber":291,"author":{"gitId":"EricBryann"},"content":"        testCases.put(\"list\", new ListPatientCommand(false));","lastModifiedDate":"2021-10-25"},{"lineNumber":292,"author":{"gitId":"jushg"},"content":"        testCases.put(\" hello\", null);","lastModifiedDate":"2021-10-21"},{"lineNumber":293,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":294,"author":{"gitId":"jushg"},"content":"        for (String testCase : testCases.keySet()) {","lastModifiedDate":"2021-10-21"},{"lineNumber":295,"author":{"gitId":"jushg"},"content":"            try {","lastModifiedDate":"2021-10-21"},{"lineNumber":296,"author":{"gitId":"jushg"},"content":"                Command command \u003d Parser.parseCommand(testCase);","lastModifiedDate":"2021-10-21"},{"lineNumber":297,"author":{"gitId":"jushg"},"content":"                assertTrue(testCases.get(testCase).getClass().isAssignableFrom(command.getClass()));","lastModifiedDate":"2021-10-21"},{"lineNumber":298,"author":{"gitId":"jushg"},"content":"            } catch (MedBotParserException e) {","lastModifiedDate":"2021-10-21"},{"lineNumber":299,"author":{"gitId":"jushg"},"content":"                assertEquals(\"Unable to parse command.\" + END_LINE, e.getMessage());","lastModifiedDate":"2021-10-21"},{"lineNumber":300,"author":{"gitId":"jushg"},"content":"            }","lastModifiedDate":"2021-10-21"},{"lineNumber":301,"author":{"gitId":"jushg"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":302,"author":{"gitId":"jushg"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":303,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":304,"author":{"gitId":"jushg"},"content":"    @Test","lastModifiedDate":"2021-10-22"},{"lineNumber":305,"author":{"gitId":"jushg"},"content":"    void testParseCommandForStaff() {","lastModifiedDate":"2021-10-22"},{"lineNumber":306,"author":{"gitId":"jushg"},"content":"        //This test only check the type, not the value of the command","lastModifiedDate":"2021-10-22"},{"lineNumber":307,"author":{"gitId":"jushg"},"content":"        Parser.setViewType(ViewType.MEDICAL_STAFF_INFO);","lastModifiedDate":"2021-10-22"},{"lineNumber":308,"author":{"gitId":"jushg"},"content":"        assertSame(Parser.getViewType(), ViewType.MEDICAL_STAFF_INFO);","lastModifiedDate":"2021-10-22"},{"lineNumber":309,"author":{"gitId":"jushg"},"content":"        HashMap\u003cString, Command\u003e testCases \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-10-22"},{"lineNumber":310,"author":{"gitId":"jushg"},"content":"        testCases.put(\"exit\", new ExitCommand());","lastModifiedDate":"2021-10-22"},{"lineNumber":311,"author":{"gitId":"jushg"},"content":"        testCases.put(\"help \", new HelpCommand(ViewType.MEDICAL_STAFF_INFO));","lastModifiedDate":"2021-10-22"},{"lineNumber":312,"author":{"gitId":"jushg"},"content":"        testCases.put(\"switch 3\", new SwitchCommand(null));","lastModifiedDate":"2021-10-22"},{"lineNumber":313,"author":{"gitId":"jushg"},"content":"        testCases.put(\"add n/John Tan \", new AddStaffCommand(null));","lastModifiedDate":"2021-10-22"},{"lineNumber":314,"author":{"gitId":"jushg"},"content":"        testCases.put(\"edit 1 n/John Tan \", new EditStaffCommand(1, null));","lastModifiedDate":"2021-10-22"},{"lineNumber":315,"author":{"gitId":"jushg"},"content":"        testCases.put(\"delete 1\", new DeleteStaffCommand(1));","lastModifiedDate":"2021-10-22"},{"lineNumber":316,"author":{"gitId":"jushg"},"content":"        testCases.put(\"find n/name\", new FindStaffCommand(new String[]{\"name\"}));","lastModifiedDate":"2021-10-22"},{"lineNumber":317,"author":{"gitId":"jushg"},"content":"        testCases.put(\"view 1\", new ViewStaffCommand(1));","lastModifiedDate":"2021-10-22"},{"lineNumber":318,"author":{"gitId":"EricBryann"},"content":"        testCases.put(\"list\", new ListStaffCommand(false));","lastModifiedDate":"2021-10-25"},{"lineNumber":319,"author":{"gitId":"jushg"},"content":"        testCases.put(\" hello\", null);","lastModifiedDate":"2021-10-22"},{"lineNumber":320,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":321,"author":{"gitId":"jushg"},"content":"        for (String testCase : testCases.keySet()) {","lastModifiedDate":"2021-10-22"},{"lineNumber":322,"author":{"gitId":"jushg"},"content":"            try {","lastModifiedDate":"2021-10-22"},{"lineNumber":323,"author":{"gitId":"jushg"},"content":"                Command command \u003d Parser.parseCommand(testCase);","lastModifiedDate":"2021-10-22"},{"lineNumber":324,"author":{"gitId":"jushg"},"content":"                assertTrue(testCases.get(testCase).getClass().isAssignableFrom(command.getClass()));","lastModifiedDate":"2021-10-22"},{"lineNumber":325,"author":{"gitId":"jushg"},"content":"            } catch (MedBotParserException e) {","lastModifiedDate":"2021-10-22"},{"lineNumber":326,"author":{"gitId":"jushg"},"content":"                assertEquals(\"Unable to parse command.\" + END_LINE, e.getMessage());","lastModifiedDate":"2021-10-22"},{"lineNumber":327,"author":{"gitId":"jushg"},"content":"            }","lastModifiedDate":"2021-10-22"},{"lineNumber":328,"author":{"gitId":"jushg"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":329,"author":{"gitId":"jushg"},"content":"        //Change View type back to Patient","lastModifiedDate":"2021-10-22"},{"lineNumber":330,"author":{"gitId":"jushg"},"content":"        Parser.setViewType(ViewType.PATIENT_INFO);","lastModifiedDate":"2021-10-22"},{"lineNumber":331,"author":{"gitId":"jushg"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":332,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":333,"author":{"gitId":"jushg"},"content":"    @Test","lastModifiedDate":"2021-10-22"},{"lineNumber":334,"author":{"gitId":"jushg"},"content":"    void testParseCommandForAppointment() {","lastModifiedDate":"2021-10-22"},{"lineNumber":335,"author":{"gitId":"jushg"},"content":"        //This test only check the type, not the value of the command","lastModifiedDate":"2021-10-22"},{"lineNumber":336,"author":{"gitId":"jushg"},"content":"        Parser.setViewType(ViewType.SCHEDULER);","lastModifiedDate":"2021-10-22"},{"lineNumber":337,"author":{"gitId":"jushg"},"content":"        assertSame(Parser.getViewType(), ViewType.SCHEDULER);","lastModifiedDate":"2021-10-22"},{"lineNumber":338,"author":{"gitId":"jushg"},"content":"        HashMap\u003cString, Command\u003e testCases \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-10-22"},{"lineNumber":339,"author":{"gitId":"jushg"},"content":"        testCases.put(\"exit\", new ExitCommand());","lastModifiedDate":"2021-10-22"},{"lineNumber":340,"author":{"gitId":"jushg"},"content":"        testCases.put(\"help \", new HelpCommand(ViewType.SCHEDULER));","lastModifiedDate":"2021-10-22"},{"lineNumber":341,"author":{"gitId":"jushg"},"content":"        testCases.put(\"switch 1\", new SwitchCommand(null));","lastModifiedDate":"2021-10-22"},{"lineNumber":342,"author":{"gitId":"justinfidelis"},"content":"        testCases.put(\"add p/1 s/1 d/181021 1800 \", new AddAppointmentCommand(null));","lastModifiedDate":"2021-10-25"},{"lineNumber":343,"author":{"gitId":"justinfidelis"},"content":"        testCases.put(\"add 1 p/1 s/1 d/181021 1800 \", new AddAppointmentCommand(null));","lastModifiedDate":"2021-10-25"},{"lineNumber":344,"author":{"gitId":"justinfidelis"},"content":"        testCases.put(\"edit 1 p/1 s/1 d/181021 1800 \", new EditAppointmentCommand(1, null));","lastModifiedDate":"2021-10-25"},{"lineNumber":345,"author":{"gitId":"jushg"},"content":"        testCases.put(\"delete 1\", new DeleteAppointmentCommand(1));","lastModifiedDate":"2021-10-22"},{"lineNumber":346,"author":{"gitId":"jushg"},"content":"        testCases.put(\"list\", new ListAppointmentCommand());","lastModifiedDate":"2021-10-22"},{"lineNumber":347,"author":{"gitId":"jushg"},"content":"        testCases.put(\" hello\", null);","lastModifiedDate":"2021-10-22"},{"lineNumber":348,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":349,"author":{"gitId":"jushg"},"content":"        for (String testCase : testCases.keySet()) {","lastModifiedDate":"2021-10-22"},{"lineNumber":350,"author":{"gitId":"jushg"},"content":"            try {","lastModifiedDate":"2021-10-22"},{"lineNumber":351,"author":{"gitId":"jushg"},"content":"                Command command \u003d Parser.parseCommand(testCase);","lastModifiedDate":"2021-10-22"},{"lineNumber":352,"author":{"gitId":"jushg"},"content":"                assertTrue(testCases.get(testCase).getClass().isAssignableFrom(command.getClass()));","lastModifiedDate":"2021-10-22"},{"lineNumber":353,"author":{"gitId":"jushg"},"content":"            } catch (MedBotParserException e) {","lastModifiedDate":"2021-10-22"},{"lineNumber":354,"author":{"gitId":"jushg"},"content":"                assertEquals(\"Unable to parse command.\" + END_LINE, e.getMessage());","lastModifiedDate":"2021-10-22"},{"lineNumber":355,"author":{"gitId":"jushg"},"content":"            }","lastModifiedDate":"2021-10-22"},{"lineNumber":356,"author":{"gitId":"jushg"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":357,"author":{"gitId":"jushg"},"content":"        //Change View type back to Patient","lastModifiedDate":"2021-10-22"},{"lineNumber":358,"author":{"gitId":"jushg"},"content":"        Parser.setViewType(ViewType.PATIENT_INFO);","lastModifiedDate":"2021-10-22"},{"lineNumber":359,"author":{"gitId":"jushg"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":360,"author":{"gitId":"jushg"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":361,"author":{"gitId":"justinfidelis"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"justinfidelis":188,"jushg":166,"EricBryann":7}},{"path":"src/test/java/medbot/PersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"justinfidelis"},"content":"package medbot;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"justinfidelis"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"justinfidelis"},"content":"import medbot.person.Patient;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"justinfidelis"},"content":"import medbot.person.Person;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"justinfidelis"},"content":"import static org.junit.jupiter.api.Assertions.assertNull;","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"justinfidelis"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"justinfidelis"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"justinfidelis"},"content":"import static org.junit.jupiter.api.Assertions.assertArrayEquals;","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"justinfidelis"},"content":"import static org.junit.jupiter.api.Assertions.assertSame;","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"justinfidelis"},"content":"class PersonTest {","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"justinfidelis"},"content":"    private static final String END_LINE \u003d System.lineSeparator();","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"justinfidelis"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"justinfidelis"},"content":"    public void testStringConversion() {","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"justinfidelis"},"content":"        String correctString \u003d \"Patient ID: 0 \" + END_LINE","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"justinfidelis"},"content":"                + \"IC: \" + END_LINE","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"justinfidelis"},"content":"                + \"Name: \" + END_LINE","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"justinfidelis"},"content":"                + \"H/P: \" + END_LINE","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"justinfidelis"},"content":"                + \"Email: \" + END_LINE","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"justinfidelis"},"content":"                + \"Address: \";","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"justinfidelis"},"content":"        Patient patient \u003d new Patient();","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"justinfidelis"},"content":"        assertEquals(patient.toString(), correctString);","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"justinfidelis"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"justinfidelis"},"content":"    public void testStringConversionFilled() {","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"justinfidelis"},"content":"        Patient patient \u003d new Patient();","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"justinfidelis"},"content":"        patient.setIcNumber(\"S8712345G\");","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"justinfidelis"},"content":"        patient.setName(\"Alice Tan\");","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"justinfidelis"},"content":"        patient.setPhoneNumber(\"81234567\");","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"justinfidelis"},"content":"        patient.setEmailAddress(\"alicetan@example.com\");","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"justinfidelis"},"content":"        patient.setResidentialAddress(\"Blk 123 Bishan St 12 #05-39\");","lastModifiedDate":"2021-10-24"},{"lineNumber":38,"author":{"gitId":"justinfidelis"},"content":"        String correctString \u003d \"Patient ID: 0 \" + END_LINE","lastModifiedDate":"2021-10-24"},{"lineNumber":39,"author":{"gitId":"justinfidelis"},"content":"                + \"IC: \" + \"S8712345G\" + END_LINE","lastModifiedDate":"2021-10-24"},{"lineNumber":40,"author":{"gitId":"justinfidelis"},"content":"                + \"Name: \" + \"Alice Tan\" + END_LINE","lastModifiedDate":"2021-10-24"},{"lineNumber":41,"author":{"gitId":"justinfidelis"},"content":"                + \"H/P: \" + \"81234567\" + END_LINE","lastModifiedDate":"2021-10-24"},{"lineNumber":42,"author":{"gitId":"justinfidelis"},"content":"                + \"Email: \" + \"alicetan@example.com\" + END_LINE","lastModifiedDate":"2021-10-24"},{"lineNumber":43,"author":{"gitId":"justinfidelis"},"content":"                + \"Address: \" + \"Blk 123 Bishan St 12 #05-39\";","lastModifiedDate":"2021-10-24"},{"lineNumber":44,"author":{"gitId":"justinfidelis"},"content":"        assertEquals(correctString, patient.toString());","lastModifiedDate":"2021-10-24"},{"lineNumber":45,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":46,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":47,"author":{"gitId":"justinfidelis"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":48,"author":{"gitId":"justinfidelis"},"content":"    public void testSetNull() {","lastModifiedDate":"2021-10-24"},{"lineNumber":49,"author":{"gitId":"justinfidelis"},"content":"        Patient patient \u003d new Patient();","lastModifiedDate":"2021-10-24"},{"lineNumber":50,"author":{"gitId":"justinfidelis"},"content":"        patient.setPersonId(123);","lastModifiedDate":"2021-10-24"},{"lineNumber":51,"author":{"gitId":"justinfidelis"},"content":"        patient.setName(\"Ben\");","lastModifiedDate":"2021-10-24"},{"lineNumber":52,"author":{"gitId":"justinfidelis"},"content":"        patient.setNull();","lastModifiedDate":"2021-10-24"},{"lineNumber":53,"author":{"gitId":"justinfidelis"},"content":"        assertEquals(patient.getPersonId(), 123);","lastModifiedDate":"2021-10-24"},{"lineNumber":54,"author":{"gitId":"justinfidelis"},"content":"        assertNull(patient.getName());","lastModifiedDate":"2021-10-24"},{"lineNumber":55,"author":{"gitId":"justinfidelis"},"content":"        assertNull(patient.getEmailAddress());","lastModifiedDate":"2021-10-24"},{"lineNumber":56,"author":{"gitId":"justinfidelis"},"content":"        assertNull(patient.getResidentialAddress());","lastModifiedDate":"2021-10-24"},{"lineNumber":57,"author":{"gitId":"justinfidelis"},"content":"        assertNull(patient.getIcNumber());","lastModifiedDate":"2021-10-24"},{"lineNumber":58,"author":{"gitId":"justinfidelis"},"content":"        assertNull(patient.getPhoneNumber());","lastModifiedDate":"2021-10-24"},{"lineNumber":59,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":60,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":61,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":62,"author":{"gitId":"justinfidelis"},"content":"}","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"justinfidelis":62}},{"path":"src/test/java/medbot/SchedulerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"justinfidelis"},"content":"package medbot;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"justinfidelis"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"justinfidelis"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"justinfidelis"},"content":"import medbot.person.Patient;","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"justinfidelis"},"content":"import medbot.person.Staff;","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"justinfidelis"},"content":"class SchedulerTest {","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"justinfidelis"},"content":"    /*","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"justinfidelis"},"content":"        Scheduler scheduler1 \u003d new Scheduler();","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"justinfidelis"},"content":"        private void initialiseScheduler() {","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"justinfidelis"},"content":"            Patient patient1 \u003d new Patient();","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"justinfidelis"},"content":"            patient1.setName(\"Abby\");","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"justinfidelis"},"content":"            Patient patient2 \u003d new Patient();","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"justinfidelis"},"content":"            patient2.setName(\"Ben\");","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"justinfidelis"},"content":"            Patient patient3 \u003d new Patient();","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"justinfidelis"},"content":"            patient3.setName(\"Claire\");","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"justinfidelis"},"content":"            Staff staff1 \u003d new Staff();","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"justinfidelis"},"content":"            staff1.setName(\"Dr Tan\");","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"justinfidelis"},"content":"            Staff staff2 \u003d new Staff();","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"justinfidelis"},"content":"            staff2.setName(\"Dr Ong\");","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"justinfidelis"},"content":"            Staff staff3 \u003d new Staff();","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"justinfidelis"},"content":"            staff3.setName(\"Dr Lim\");","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"justinfidelis"},"content":"            scheduler.getPatientList().addPerson(patient1);","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"justinfidelis"},"content":"            scheduler.getPatientList().addPerson(patient2);","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"justinfidelis"},"content":"            scheduler.getPatientList().addPerson(patient3);","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"justinfidelis"},"content":"            scheduler.getMedicalStaffList().addPerson(patient1);","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"justinfidelis"},"content":"            scheduler.getMedicalStaffList().addPerson(patient2);","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"justinfidelis"},"content":"            scheduler.getMedicalStaffList().addPerson(patient3);","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"justinfidelis"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"justinfidelis"},"content":"    */","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"justinfidelis"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"justinfidelis"},"content":"    public void testAddPatient_success() {","lastModifiedDate":"2021-10-24"},{"lineNumber":38,"author":{"gitId":"justinfidelis"},"content":"        Scheduler scheduler \u003d new Scheduler();","lastModifiedDate":"2021-10-24"},{"lineNumber":39,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":40,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":41,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":42,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":43,"author":{"gitId":"justinfidelis"},"content":"}","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"justinfidelis":43}},{"path":"src/test/java/medbot/StorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"CrimsonTitan79"},"content":"//package medbot;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"CrimsonTitan79"},"content":"//","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"CrimsonTitan79"},"content":"//import static medbot.parser.ParserUtils.updatePersonalInformation;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"CrimsonTitan79"},"content":"//","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"CrimsonTitan79"},"content":"//import medbot.Storage.Storage;","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"CrimsonTitan79"},"content":"//import medbot.exceptions.MedBotException;","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"CrimsonTitan79"},"content":"//import medbot.list.PatientList;","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"CrimsonTitan79"},"content":"//import medbot.person.Patient;","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"CrimsonTitan79"},"content":"//","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"CrimsonTitan79"},"content":"//import java.io.File;","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"CrimsonTitan79"},"content":"//import java.io.FileNotFoundException;","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"CrimsonTitan79"},"content":"//import java.util.ArrayList;","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"CrimsonTitan79"},"content":"//import java.util.Scanner;","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"CrimsonTitan79"},"content":"//","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"CrimsonTitan79"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"CrimsonTitan79"},"content":"//","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"CrimsonTitan79"},"content":"//import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"CrimsonTitan79"},"content":"//import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"CrimsonTitan79"},"content":"//","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"CrimsonTitan79"},"content":"//class StorageTest {","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"CrimsonTitan79"},"content":"//","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"CrimsonTitan79"},"content":"//    private static final String INVALID_TEST_DATA \u003d \"src/test/data/StorageTest/invalidData.txt\";","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"CrimsonTitan79"},"content":"//    private static final String VALID_TEST_DATA \u003d \"src/test/data/StorageTest/validData.txt\";","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"CrimsonTitan79"},"content":"//    private static final String SAVED_TEST_DATA \u003d \"src/test/data/StorageTest/savedData.txt\";","lastModifiedDate":"2021-10-25"},{"lineNumber":25,"author":{"gitId":"CrimsonTitan79"},"content":"//    private static final String NON_EXISTENT_FILE_NAME \u003d \"NON_EXISTENT_FILE.txt\";","lastModifiedDate":"2021-10-25"},{"lineNumber":26,"author":{"gitId":"CrimsonTitan79"},"content":"//    private static final String ERROR_INVALID_STORAGE_LINE_INSTRUCTION \u003d \"\\n\\n\"","lastModifiedDate":"2021-10-25"},{"lineNumber":27,"author":{"gitId":"CrimsonTitan79"},"content":"//            + \"Please decide if you wish to:\" + \"\\n\"","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"CrimsonTitan79"},"content":"//            + \"1. Enter \u0027exit\u0027 to exit Medbot to correct the storage file\" + \"\\n\"","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"CrimsonTitan79"},"content":"//            + \"2. Enter other valid commands to OVERWRITE all invalid data!\" + \"\\n\";","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"CrimsonTitan79"},"content":"//","lastModifiedDate":"2021-10-25"},{"lineNumber":31,"author":{"gitId":"CrimsonTitan79"},"content":"//    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":32,"author":{"gitId":"CrimsonTitan79"},"content":"//    public void testConstructor_nullFilePath_exceptionThrown() {","lastModifiedDate":"2021-10-25"},{"lineNumber":33,"author":{"gitId":"CrimsonTitan79"},"content":"//        assertThrows(NullPointerException.class, () -\u003e new Storage(null));","lastModifiedDate":"2021-10-25"},{"lineNumber":34,"author":{"gitId":"CrimsonTitan79"},"content":"//    }","lastModifiedDate":"2021-10-25"},{"lineNumber":35,"author":{"gitId":"CrimsonTitan79"},"content":"//","lastModifiedDate":"2021-10-25"},{"lineNumber":36,"author":{"gitId":"CrimsonTitan79"},"content":"//    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":37,"author":{"gitId":"CrimsonTitan79"},"content":"//    public void testConstructor_invalidFilePath_exceptionThrown() {","lastModifiedDate":"2021-10-25"},{"lineNumber":38,"author":{"gitId":"CrimsonTitan79"},"content":"//        assertThrows(NullPointerException.class, () -\u003e new Storage(NON_EXISTENT_FILE_NAME));","lastModifiedDate":"2021-10-25"},{"lineNumber":39,"author":{"gitId":"CrimsonTitan79"},"content":"//    }","lastModifiedDate":"2021-10-25"},{"lineNumber":40,"author":{"gitId":"CrimsonTitan79"},"content":"//","lastModifiedDate":"2021-10-25"},{"lineNumber":41,"author":{"gitId":"CrimsonTitan79"},"content":"//    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":42,"author":{"gitId":"CrimsonTitan79"},"content":"//    public void testLoadStorage_partialInvalidFormat_exceptionThrown() throws MedBotException, FileNotFoundException {","lastModifiedDate":"2021-10-25"},{"lineNumber":43,"author":{"gitId":"CrimsonTitan79"},"content":"//","lastModifiedDate":"2021-10-25"},{"lineNumber":44,"author":{"gitId":"CrimsonTitan79"},"content":"//        Storage storage \u003d new Storage(INVALID_TEST_DATA);","lastModifiedDate":"2021-10-25"},{"lineNumber":45,"author":{"gitId":"CrimsonTitan79"},"content":"//        PatientList actualPl \u003d new PatientList();","lastModifiedDate":"2021-10-25"},{"lineNumber":46,"author":{"gitId":"CrimsonTitan79"},"content":"//        PatientList expectedPl \u003d getTestPatientList();","lastModifiedDate":"2021-10-25"},{"lineNumber":47,"author":{"gitId":"CrimsonTitan79"},"content":"//        String expectedLoadStorageErrorMessage \u003d","lastModifiedDate":"2021-10-25"},{"lineNumber":48,"author":{"gitId":"CrimsonTitan79"},"content":"//                \"Error: Line 8 of storage/data.txt is invalid!\\n\"","lastModifiedDate":"2021-10-25"},{"lineNumber":49,"author":{"gitId":"CrimsonTitan79"},"content":"//                        + \"Error: Line 9 of storage/data.txt is invalid!\\n\"","lastModifiedDate":"2021-10-25"},{"lineNumber":50,"author":{"gitId":"CrimsonTitan79"},"content":"//                        + \"Error: Line 10 of storage/data.txt is invalid!\\n\"","lastModifiedDate":"2021-10-25"},{"lineNumber":51,"author":{"gitId":"CrimsonTitan79"},"content":"//                        + \"Error: Line 11 of storage/data.txt is invalid!\\n\"","lastModifiedDate":"2021-10-25"},{"lineNumber":52,"author":{"gitId":"CrimsonTitan79"},"content":"//                        + ERROR_INVALID_STORAGE_LINE_INSTRUCTION;","lastModifiedDate":"2021-10-25"},{"lineNumber":53,"author":{"gitId":"CrimsonTitan79"},"content":"//","lastModifiedDate":"2021-10-25"},{"lineNumber":54,"author":{"gitId":"CrimsonTitan79"},"content":"//        //Test for both correct error message and correct loading of storage","lastModifiedDate":"2021-10-25"},{"lineNumber":55,"author":{"gitId":"CrimsonTitan79"},"content":"//        assertEquals(expectedLoadStorageErrorMessage, storage.loadStorage(actualPl));","lastModifiedDate":"2021-10-25"},{"lineNumber":56,"author":{"gitId":"CrimsonTitan79"},"content":"//        assertEquals(expectedPl.getStorageString(), actualPl.getStorageString());","lastModifiedDate":"2021-10-25"},{"lineNumber":57,"author":{"gitId":"CrimsonTitan79"},"content":"//    }","lastModifiedDate":"2021-10-25"},{"lineNumber":58,"author":{"gitId":"CrimsonTitan79"},"content":"//","lastModifiedDate":"2021-10-25"},{"lineNumber":59,"author":{"gitId":"CrimsonTitan79"},"content":"//    // expected: patients added through the program","lastModifiedDate":"2021-10-25"},{"lineNumber":60,"author":{"gitId":"CrimsonTitan79"},"content":"//    // actual: patients added through loading storage","lastModifiedDate":"2021-10-25"},{"lineNumber":61,"author":{"gitId":"CrimsonTitan79"},"content":"//    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":62,"author":{"gitId":"CrimsonTitan79"},"content":"//    public void testLoadStorage_validFormat() throws FileNotFoundException, MedBotException {","lastModifiedDate":"2021-10-25"},{"lineNumber":63,"author":{"gitId":"CrimsonTitan79"},"content":"//        Storage storage \u003d new Storage(VALID_TEST_DATA);","lastModifiedDate":"2021-10-25"},{"lineNumber":64,"author":{"gitId":"CrimsonTitan79"},"content":"//        PatientList actualPl \u003d new PatientList();","lastModifiedDate":"2021-10-25"},{"lineNumber":65,"author":{"gitId":"CrimsonTitan79"},"content":"//","lastModifiedDate":"2021-10-25"},{"lineNumber":66,"author":{"gitId":"CrimsonTitan79"},"content":"//        storage.loadStorage(actualPl);","lastModifiedDate":"2021-10-25"},{"lineNumber":67,"author":{"gitId":"CrimsonTitan79"},"content":"//        PatientList expectedPl \u003d getTestPatientList();","lastModifiedDate":"2021-10-25"},{"lineNumber":68,"author":{"gitId":"CrimsonTitan79"},"content":"//","lastModifiedDate":"2021-10-25"},{"lineNumber":69,"author":{"gitId":"CrimsonTitan79"},"content":"//        // ensure storage data is properly loaded into the program","lastModifiedDate":"2021-10-25"},{"lineNumber":70,"author":{"gitId":"CrimsonTitan79"},"content":"//        assertEquals(expectedPl.getStorageString(), actualPl.getStorageString());","lastModifiedDate":"2021-10-25"},{"lineNumber":71,"author":{"gitId":"CrimsonTitan79"},"content":"//    }","lastModifiedDate":"2021-10-25"},{"lineNumber":72,"author":{"gitId":"CrimsonTitan79"},"content":"//","lastModifiedDate":"2021-10-25"},{"lineNumber":73,"author":{"gitId":"CrimsonTitan79"},"content":"//    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":74,"author":{"gitId":"CrimsonTitan79"},"content":"//    public void testSaveData() throws MedBotException {","lastModifiedDate":"2021-10-25"},{"lineNumber":75,"author":{"gitId":"CrimsonTitan79"},"content":"//        PatientList patientList \u003d getTestPatientList();","lastModifiedDate":"2021-10-25"},{"lineNumber":76,"author":{"gitId":"CrimsonTitan79"},"content":"//        Storage storage \u003d new Storage(SAVED_TEST_DATA);","lastModifiedDate":"2021-10-25"},{"lineNumber":77,"author":{"gitId":"CrimsonTitan79"},"content":"//        storage.saveData(patientList);","lastModifiedDate":"2021-10-25"},{"lineNumber":78,"author":{"gitId":"CrimsonTitan79"},"content":"//","lastModifiedDate":"2021-10-25"},{"lineNumber":79,"author":{"gitId":"CrimsonTitan79"},"content":"//        try {","lastModifiedDate":"2021-10-25"},{"lineNumber":80,"author":{"gitId":"CrimsonTitan79"},"content":"//            String actualFileString \u003d scanFileToString(SAVED_TEST_DATA);","lastModifiedDate":"2021-10-25"},{"lineNumber":81,"author":{"gitId":"CrimsonTitan79"},"content":"//            String expectedFileString \u003d scanFileToString(VALID_TEST_DATA);","lastModifiedDate":"2021-10-25"},{"lineNumber":82,"author":{"gitId":"CrimsonTitan79"},"content":"//            assertEquals(expectedFileString, actualFileString);","lastModifiedDate":"2021-10-25"},{"lineNumber":83,"author":{"gitId":"CrimsonTitan79"},"content":"//","lastModifiedDate":"2021-10-25"},{"lineNumber":84,"author":{"gitId":"CrimsonTitan79"},"content":"//            deleteSavedData();","lastModifiedDate":"2021-10-25"},{"lineNumber":85,"author":{"gitId":"CrimsonTitan79"},"content":"//","lastModifiedDate":"2021-10-25"},{"lineNumber":86,"author":{"gitId":"CrimsonTitan79"},"content":"//        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-10-25"},{"lineNumber":87,"author":{"gitId":"CrimsonTitan79"},"content":"//            throw new MedBotException(\"FILE ERROR\");","lastModifiedDate":"2021-10-25"},{"lineNumber":88,"author":{"gitId":"CrimsonTitan79"},"content":"//        }","lastModifiedDate":"2021-10-25"},{"lineNumber":89,"author":{"gitId":"CrimsonTitan79"},"content":"//    }","lastModifiedDate":"2021-10-25"},{"lineNumber":90,"author":{"gitId":"CrimsonTitan79"},"content":"//","lastModifiedDate":"2021-10-25"},{"lineNumber":91,"author":{"gitId":"CrimsonTitan79"},"content":"//    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":92,"author":{"gitId":"CrimsonTitan79"},"content":"//     * Create a test PatientList containing Patient objects.","lastModifiedDate":"2021-10-25"},{"lineNumber":93,"author":{"gitId":"CrimsonTitan79"},"content":"//     *","lastModifiedDate":"2021-10-25"},{"lineNumber":94,"author":{"gitId":"CrimsonTitan79"},"content":"//     * @return a test PatientList","lastModifiedDate":"2021-10-25"},{"lineNumber":95,"author":{"gitId":"CrimsonTitan79"},"content":"//     * @throws MedBotException if any patient instantiation fails","lastModifiedDate":"2021-10-25"},{"lineNumber":96,"author":{"gitId":"CrimsonTitan79"},"content":"//     */","lastModifiedDate":"2021-10-25"},{"lineNumber":97,"author":{"gitId":"CrimsonTitan79"},"content":"//    private PatientList getTestPatientList() throws MedBotException {","lastModifiedDate":"2021-10-25"},{"lineNumber":98,"author":{"gitId":"CrimsonTitan79"},"content":"//        PatientList testPatientList \u003d new PatientList();","lastModifiedDate":"2021-10-25"},{"lineNumber":99,"author":{"gitId":"CrimsonTitan79"},"content":"//        Patient patient1 \u003d createPatient(1, \"S7912345A\", \"Doge\",","lastModifiedDate":"2021-10-25"},{"lineNumber":100,"author":{"gitId":"CrimsonTitan79"},"content":"//                \"91234567\", \"doge@mail.com\",","lastModifiedDate":"2021-10-25"},{"lineNumber":101,"author":{"gitId":"CrimsonTitan79"},"content":"//                \"Doge Town 2nd Street\");","lastModifiedDate":"2021-10-25"},{"lineNumber":102,"author":{"gitId":"CrimsonTitan79"},"content":"//        Patient patient2 \u003d createPatient(2, \"\", \"Cheems\",","lastModifiedDate":"2021-10-25"},{"lineNumber":103,"author":{"gitId":"CrimsonTitan79"},"content":"//                \"\", \"cheems@mail.com\",","lastModifiedDate":"2021-10-25"},{"lineNumber":104,"author":{"gitId":"CrimsonTitan79"},"content":"//                \"Doge County\");","lastModifiedDate":"2021-10-25"},{"lineNumber":105,"author":{"gitId":"CrimsonTitan79"},"content":"//        Patient patient3 \u003d createPatient(4, \"S2312345A\", \"\",","lastModifiedDate":"2021-10-25"},{"lineNumber":106,"author":{"gitId":"CrimsonTitan79"},"content":"//                \"81234567\", \"cheems@mail.com\",","lastModifiedDate":"2021-10-25"},{"lineNumber":107,"author":{"gitId":"CrimsonTitan79"},"content":"//                \"Arken Street\");","lastModifiedDate":"2021-10-25"},{"lineNumber":108,"author":{"gitId":"CrimsonTitan79"},"content":"//        Patient patient4 \u003d createPatient(6, \"F9123456X\", \"Emma\",","lastModifiedDate":"2021-10-25"},{"lineNumber":109,"author":{"gitId":"CrimsonTitan79"},"content":"//                \"\", \"emma@mail.com\",","lastModifiedDate":"2021-10-25"},{"lineNumber":110,"author":{"gitId":"CrimsonTitan79"},"content":"//                \"Greensville County\");","lastModifiedDate":"2021-10-25"},{"lineNumber":111,"author":{"gitId":"CrimsonTitan79"},"content":"//        Patient patient5 \u003d createPatient(7, \"F3232145B\", \"Norman\",","lastModifiedDate":"2021-10-25"},{"lineNumber":112,"author":{"gitId":"CrimsonTitan79"},"content":"//                \"\", \"norman@mail.com\",","lastModifiedDate":"2021-10-25"},{"lineNumber":113,"author":{"gitId":"CrimsonTitan79"},"content":"//                \"Petalburg City\");","lastModifiedDate":"2021-10-25"},{"lineNumber":114,"author":{"gitId":"CrimsonTitan79"},"content":"//        Patient patient6 \u003d createPatient(9, \"S9145645C\", \"Arthur\",","lastModifiedDate":"2021-10-25"},{"lineNumber":115,"author":{"gitId":"CrimsonTitan79"},"content":"//                \"67654321\", \"\",","lastModifiedDate":"2021-10-25"},{"lineNumber":116,"author":{"gitId":"CrimsonTitan79"},"content":"//                \"Evergrande District\");","lastModifiedDate":"2021-10-25"},{"lineNumber":117,"author":{"gitId":"CrimsonTitan79"},"content":"//        Patient patient7 \u003d createPatient(10, \"T0123463X\", \"William\",","lastModifiedDate":"2021-10-25"},{"lineNumber":118,"author":{"gitId":"CrimsonTitan79"},"content":"//                \"\", \"will@mail.com\",","lastModifiedDate":"2021-10-25"},{"lineNumber":119,"author":{"gitId":"CrimsonTitan79"},"content":"//                \"Doge County\");","lastModifiedDate":"2021-10-25"},{"lineNumber":120,"author":{"gitId":"CrimsonTitan79"},"content":"//","lastModifiedDate":"2021-10-25"},{"lineNumber":121,"author":{"gitId":"CrimsonTitan79"},"content":"//        Patient[] patients \u003d {patient1, patient2, patient3, patient4, patient5, patient6, patient7};","lastModifiedDate":"2021-10-25"},{"lineNumber":122,"author":{"gitId":"CrimsonTitan79"},"content":"//","lastModifiedDate":"2021-10-25"},{"lineNumber":123,"author":{"gitId":"CrimsonTitan79"},"content":"//        for (Patient p : patients) {","lastModifiedDate":"2021-10-25"},{"lineNumber":124,"author":{"gitId":"CrimsonTitan79"},"content":"//            testPatientList.setLastId(p.getPersonId());","lastModifiedDate":"2021-10-25"},{"lineNumber":125,"author":{"gitId":"CrimsonTitan79"},"content":"//            testPatientList.addPerson(p);","lastModifiedDate":"2021-10-25"},{"lineNumber":126,"author":{"gitId":"CrimsonTitan79"},"content":"//        }","lastModifiedDate":"2021-10-25"},{"lineNumber":127,"author":{"gitId":"CrimsonTitan79"},"content":"//","lastModifiedDate":"2021-10-25"},{"lineNumber":128,"author":{"gitId":"CrimsonTitan79"},"content":"//        return testPatientList;","lastModifiedDate":"2021-10-25"},{"lineNumber":129,"author":{"gitId":"CrimsonTitan79"},"content":"//    }","lastModifiedDate":"2021-10-25"},{"lineNumber":130,"author":{"gitId":"CrimsonTitan79"},"content":"//","lastModifiedDate":"2021-10-25"},{"lineNumber":131,"author":{"gitId":"CrimsonTitan79"},"content":"//    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":132,"author":{"gitId":"CrimsonTitan79"},"content":"//     * Instantiate a patient object with the given parameters.","lastModifiedDate":"2021-10-25"},{"lineNumber":133,"author":{"gitId":"CrimsonTitan79"},"content":"//     *","lastModifiedDate":"2021-10-25"},{"lineNumber":134,"author":{"gitId":"CrimsonTitan79"},"content":"//     * @param id                 patientId","lastModifiedDate":"2021-10-25"},{"lineNumber":135,"author":{"gitId":"CrimsonTitan79"},"content":"//     * @param icNumber           I/C number of patient","lastModifiedDate":"2021-10-25"},{"lineNumber":136,"author":{"gitId":"CrimsonTitan79"},"content":"//     * @param name               name of patient","lastModifiedDate":"2021-10-25"},{"lineNumber":137,"author":{"gitId":"CrimsonTitan79"},"content":"//     * @param phoneNumber        phone number of patient","lastModifiedDate":"2021-10-25"},{"lineNumber":138,"author":{"gitId":"CrimsonTitan79"},"content":"//     * @param emailAddress       email address of patient","lastModifiedDate":"2021-10-25"},{"lineNumber":139,"author":{"gitId":"CrimsonTitan79"},"content":"//     * @param residentialAddress residential address of patient","lastModifiedDate":"2021-10-25"},{"lineNumber":140,"author":{"gitId":"CrimsonTitan79"},"content":"//     * @return a patient object","lastModifiedDate":"2021-10-25"},{"lineNumber":141,"author":{"gitId":"CrimsonTitan79"},"content":"//     * @throws MedBotException if fail to update any patient parameters","lastModifiedDate":"2021-10-25"},{"lineNumber":142,"author":{"gitId":"CrimsonTitan79"},"content":"//     */","lastModifiedDate":"2021-10-25"},{"lineNumber":143,"author":{"gitId":"CrimsonTitan79"},"content":"//    private Patient createPatient(int id, String icNumber, String name,","lastModifiedDate":"2021-10-25"},{"lineNumber":144,"author":{"gitId":"CrimsonTitan79"},"content":"//                                  String phoneNumber, String emailAddress,","lastModifiedDate":"2021-10-25"},{"lineNumber":145,"author":{"gitId":"CrimsonTitan79"},"content":"//                                  String residentialAddress)","lastModifiedDate":"2021-10-25"},{"lineNumber":146,"author":{"gitId":"CrimsonTitan79"},"content":"//            throws MedBotException {","lastModifiedDate":"2021-10-25"},{"lineNumber":147,"author":{"gitId":"CrimsonTitan79"},"content":"//","lastModifiedDate":"2021-10-25"},{"lineNumber":148,"author":{"gitId":"CrimsonTitan79"},"content":"//        Patient patient \u003d new Patient();","lastModifiedDate":"2021-10-25"},{"lineNumber":149,"author":{"gitId":"CrimsonTitan79"},"content":"//        patient.setPersonId(id);","lastModifiedDate":"2021-10-25"},{"lineNumber":150,"author":{"gitId":"CrimsonTitan79"},"content":"//        String[] parameterPrefixes \u003d {\"i/\", \"n/\", \"p/\", \"e/\", \"a/\"};","lastModifiedDate":"2021-10-25"},{"lineNumber":151,"author":{"gitId":"CrimsonTitan79"},"content":"//        String[] parameters \u003d {icNumber, name, phoneNumber, emailAddress, residentialAddress};","lastModifiedDate":"2021-10-25"},{"lineNumber":152,"author":{"gitId":"CrimsonTitan79"},"content":"//        ArrayList\u003cString\u003e prefixPlusPersonParameters \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-25"},{"lineNumber":153,"author":{"gitId":"CrimsonTitan79"},"content":"//","lastModifiedDate":"2021-10-25"},{"lineNumber":154,"author":{"gitId":"CrimsonTitan79"},"content":"//        for (int i \u003d 0; i \u003c parameterPrefixes.length; i++) {","lastModifiedDate":"2021-10-25"},{"lineNumber":155,"author":{"gitId":"CrimsonTitan79"},"content":"//            if (parameters[i].isBlank()) {","lastModifiedDate":"2021-10-25"},{"lineNumber":156,"author":{"gitId":"CrimsonTitan79"},"content":"//                continue;","lastModifiedDate":"2021-10-25"},{"lineNumber":157,"author":{"gitId":"CrimsonTitan79"},"content":"//            }","lastModifiedDate":"2021-10-25"},{"lineNumber":158,"author":{"gitId":"CrimsonTitan79"},"content":"//            String prefixPlusPersonParameter \u003d parameterPrefixes[i] + parameters[i];","lastModifiedDate":"2021-10-25"},{"lineNumber":159,"author":{"gitId":"CrimsonTitan79"},"content":"//            prefixPlusPersonParameters.add(prefixPlusPersonParameter);","lastModifiedDate":"2021-10-25"},{"lineNumber":160,"author":{"gitId":"CrimsonTitan79"},"content":"//        }","lastModifiedDate":"2021-10-25"},{"lineNumber":161,"author":{"gitId":"CrimsonTitan79"},"content":"//","lastModifiedDate":"2021-10-25"},{"lineNumber":162,"author":{"gitId":"CrimsonTitan79"},"content":"//        for (String prefixPlusPersonParameter : prefixPlusPersonParameters) {","lastModifiedDate":"2021-10-25"},{"lineNumber":163,"author":{"gitId":"CrimsonTitan79"},"content":"//            updatePersonalInformation(patient, prefixPlusPersonParameter);","lastModifiedDate":"2021-10-25"},{"lineNumber":164,"author":{"gitId":"CrimsonTitan79"},"content":"//        }","lastModifiedDate":"2021-10-25"},{"lineNumber":165,"author":{"gitId":"CrimsonTitan79"},"content":"//","lastModifiedDate":"2021-10-25"},{"lineNumber":166,"author":{"gitId":"CrimsonTitan79"},"content":"//        return patient;","lastModifiedDate":"2021-10-25"},{"lineNumber":167,"author":{"gitId":"CrimsonTitan79"},"content":"//    }","lastModifiedDate":"2021-10-25"},{"lineNumber":168,"author":{"gitId":"CrimsonTitan79"},"content":"//","lastModifiedDate":"2021-10-25"},{"lineNumber":169,"author":{"gitId":"CrimsonTitan79"},"content":"//","lastModifiedDate":"2021-10-25"},{"lineNumber":170,"author":{"gitId":"CrimsonTitan79"},"content":"//    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":171,"author":{"gitId":"CrimsonTitan79"},"content":"//     * Scans a text file and converts it to a String.","lastModifiedDate":"2021-10-25"},{"lineNumber":172,"author":{"gitId":"CrimsonTitan79"},"content":"//     *","lastModifiedDate":"2021-10-25"},{"lineNumber":173,"author":{"gitId":"CrimsonTitan79"},"content":"//     * @param filePath path of the text file","lastModifiedDate":"2021-10-25"},{"lineNumber":174,"author":{"gitId":"CrimsonTitan79"},"content":"//     * @return String of the contents of the text file","lastModifiedDate":"2021-10-25"},{"lineNumber":175,"author":{"gitId":"CrimsonTitan79"},"content":"//     * @throws FileNotFoundException if text file does not exist of path invalid","lastModifiedDate":"2021-10-25"},{"lineNumber":176,"author":{"gitId":"CrimsonTitan79"},"content":"//     */","lastModifiedDate":"2021-10-25"},{"lineNumber":177,"author":{"gitId":"CrimsonTitan79"},"content":"//    private String scanFileToString(String filePath) throws FileNotFoundException {","lastModifiedDate":"2021-10-25"},{"lineNumber":178,"author":{"gitId":"CrimsonTitan79"},"content":"//        File file \u003d new File(filePath);","lastModifiedDate":"2021-10-25"},{"lineNumber":179,"author":{"gitId":"CrimsonTitan79"},"content":"//        Scanner s \u003d new Scanner(file);","lastModifiedDate":"2021-10-25"},{"lineNumber":180,"author":{"gitId":"CrimsonTitan79"},"content":"//        String output \u003d \"\";","lastModifiedDate":"2021-10-25"},{"lineNumber":181,"author":{"gitId":"CrimsonTitan79"},"content":"//","lastModifiedDate":"2021-10-25"},{"lineNumber":182,"author":{"gitId":"CrimsonTitan79"},"content":"//        while (s.hasNext()) {","lastModifiedDate":"2021-10-25"},{"lineNumber":183,"author":{"gitId":"CrimsonTitan79"},"content":"//            output +\u003d s.nextLine();","lastModifiedDate":"2021-10-25"},{"lineNumber":184,"author":{"gitId":"CrimsonTitan79"},"content":"//        }","lastModifiedDate":"2021-10-25"},{"lineNumber":185,"author":{"gitId":"CrimsonTitan79"},"content":"//        return output;","lastModifiedDate":"2021-10-25"},{"lineNumber":186,"author":{"gitId":"CrimsonTitan79"},"content":"//    }","lastModifiedDate":"2021-10-25"},{"lineNumber":187,"author":{"gitId":"CrimsonTitan79"},"content":"//","lastModifiedDate":"2021-10-25"},{"lineNumber":188,"author":{"gitId":"CrimsonTitan79"},"content":"//    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":189,"author":{"gitId":"CrimsonTitan79"},"content":"//     * Delete saved test data text file from the JUNIT testing.","lastModifiedDate":"2021-10-25"},{"lineNumber":190,"author":{"gitId":"CrimsonTitan79"},"content":"//     */","lastModifiedDate":"2021-10-25"},{"lineNumber":191,"author":{"gitId":"CrimsonTitan79"},"content":"//    private void deleteSavedData() {","lastModifiedDate":"2021-10-25"},{"lineNumber":192,"author":{"gitId":"CrimsonTitan79"},"content":"//        File savedDataFile \u003d new File(SAVED_TEST_DATA);","lastModifiedDate":"2021-10-25"},{"lineNumber":193,"author":{"gitId":"CrimsonTitan79"},"content":"//        savedDataFile.delete();","lastModifiedDate":"2021-10-25"},{"lineNumber":194,"author":{"gitId":"CrimsonTitan79"},"content":"//    }","lastModifiedDate":"2021-10-25"},{"lineNumber":195,"author":{"gitId":"CrimsonTitan79"},"content":"//","lastModifiedDate":"2021-10-25"},{"lineNumber":196,"author":{"gitId":"CrimsonTitan79"},"content":"//}","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"CrimsonTitan79":196}},{"path":"src/test/java/medbot/UiTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"EricBryann"},"content":"package medbot;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"jushg"},"content":"import medbot.exceptions.MedBotException;","lastModifiedDate":"2021-10-22"},{"lineNumber":4,"author":{"gitId":"jushg"},"content":"import medbot.list.PatientList;","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"EricBryann"},"content":"import medbot.person.Patient;","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"jushg"},"content":"import medbot.ui.PatientUi;","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"jushg"},"content":"import medbot.ui.Ui;","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"jushg"},"content":"import medbot.utilities.ViewType;","lastModifiedDate":"2021-10-22"},{"lineNumber":10,"author":{"gitId":"EricBryann"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"EricBryann"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"justinfidelis"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"EricBryann"},"content":"class UiTest {","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"jushg"},"content":"    public static final String END_LINE \u003d System.lineSeparator();","lastModifiedDate":"2021-10-22"},{"lineNumber":17,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"EricBryann"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"EricBryann"},"content":"    public void testPrintAddPatientMessage() {","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"EricBryann"},"content":"        int patientId \u003d 2;","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"jushg"},"content":"        String expectedOutput \u003d \"Added patient with patient ID: 2\" + END_LINE;","lastModifiedDate":"2021-10-22"},{"lineNumber":22,"author":{"gitId":"jushg"},"content":"        try {","lastModifiedDate":"2021-10-22"},{"lineNumber":23,"author":{"gitId":"jushg"},"content":"            String actualOutput \u003d Ui.getAddMessage(patientId, ViewType.PATIENT_INFO);","lastModifiedDate":"2021-10-22"},{"lineNumber":24,"author":{"gitId":"jushg"},"content":"            assertEquals(actualOutput, expectedOutput);","lastModifiedDate":"2021-10-22"},{"lineNumber":25,"author":{"gitId":"jushg"},"content":"        } catch (MedBotException e) {","lastModifiedDate":"2021-10-22"},{"lineNumber":26,"author":{"gitId":"jushg"},"content":"            assertEquals(e.getMessage(),\"Cannot identify the current view type\" + END_LINE);","lastModifiedDate":"2021-10-22"},{"lineNumber":27,"author":{"gitId":"jushg"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":28,"author":{"gitId":"EricBryann"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":29,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":30,"author":{"gitId":"EricBryann"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":31,"author":{"gitId":"EricBryann"},"content":"    public void testPrintDeletePatientMessage() {","lastModifiedDate":"2021-10-06"},{"lineNumber":32,"author":{"gitId":"EricBryann"},"content":"        int patientId \u003d 2;","lastModifiedDate":"2021-10-06"},{"lineNumber":33,"author":{"gitId":"jushg"},"content":"        String expectedOutput \u003d \"Patient with id 2 deleted from system.\" + END_LINE;","lastModifiedDate":"2021-10-22"},{"lineNumber":34,"author":{"gitId":"jushg"},"content":"        try {","lastModifiedDate":"2021-10-22"},{"lineNumber":35,"author":{"gitId":"jushg"},"content":"            String actualOutput \u003d Ui.getDeleteMessage(patientId, ViewType.PATIENT_INFO);","lastModifiedDate":"2021-10-22"},{"lineNumber":36,"author":{"gitId":"jushg"},"content":"            assertEquals(actualOutput, expectedOutput);","lastModifiedDate":"2021-10-22"},{"lineNumber":37,"author":{"gitId":"jushg"},"content":"        } catch (MedBotException e) {","lastModifiedDate":"2021-10-22"},{"lineNumber":38,"author":{"gitId":"jushg"},"content":"            assertEquals(e.getMessage(),\"Cannot identify the current view type\" + END_LINE);","lastModifiedDate":"2021-10-22"},{"lineNumber":39,"author":{"gitId":"jushg"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":40,"author":{"gitId":"EricBryann"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":41,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":42,"author":{"gitId":"EricBryann"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":43,"author":{"gitId":"EricBryann"},"content":"    public void testEditPatientMessage() {","lastModifiedDate":"2021-10-06"},{"lineNumber":44,"author":{"gitId":"EricBryann"},"content":"        PatientList patientList \u003d new PatientList();","lastModifiedDate":"2021-10-06"},{"lineNumber":45,"author":{"gitId":"EricBryann"},"content":"        Patient patient \u003d new Patient();","lastModifiedDate":"2021-10-06"},{"lineNumber":46,"author":{"gitId":"EricBryann"},"content":"        patient.setName(\"John Doe\");","lastModifiedDate":"2021-10-06"},{"lineNumber":47,"author":{"gitId":"EricBryann"},"content":"        patient.setEmailAddress(\"John@gmail.com\");","lastModifiedDate":"2021-10-06"},{"lineNumber":48,"author":{"gitId":"jushg"},"content":"        patientList.addPerson(patient);","lastModifiedDate":"2021-10-18"},{"lineNumber":49,"author":{"gitId":"EricBryann"},"content":"        patient.setName(\"Bob\");","lastModifiedDate":"2021-10-06"},{"lineNumber":50,"author":{"gitId":"EricBryann"},"content":"        String patientInfo \u003d patient.toString();","lastModifiedDate":"2021-10-06"},{"lineNumber":51,"author":{"gitId":"EricBryann"},"content":"        String expectedOutput \u003d","lastModifiedDate":"2021-10-19"},{"lineNumber":52,"author":{"gitId":"jushg"},"content":"                \"The information of patient with ID 1 has been edited to:\" + END_LINE + END_LINE","lastModifiedDate":"2021-10-22"},{"lineNumber":53,"author":{"gitId":"jushg"},"content":"                + \"Patient ID: 1 \" + END_LINE","lastModifiedDate":"2021-10-22"},{"lineNumber":54,"author":{"gitId":"jushg"},"content":"                + \"IC: \" + END_LINE","lastModifiedDate":"2021-10-22"},{"lineNumber":55,"author":{"gitId":"jushg"},"content":"                + \"Name: Bob\" + END_LINE","lastModifiedDate":"2021-10-22"},{"lineNumber":56,"author":{"gitId":"jushg"},"content":"                + \"H/P: \" + END_LINE","lastModifiedDate":"2021-10-22"},{"lineNumber":57,"author":{"gitId":"jushg"},"content":"                + \"Email: John@gmail.com\" + END_LINE","lastModifiedDate":"2021-10-22"},{"lineNumber":58,"author":{"gitId":"jushg"},"content":"                + \"Address: \" + END_LINE;","lastModifiedDate":"2021-10-22"},{"lineNumber":59,"author":{"gitId":"EricBryann"},"content":"        int patientId \u003d 1;","lastModifiedDate":"2021-10-06"},{"lineNumber":60,"author":{"gitId":"jushg"},"content":"        try {","lastModifiedDate":"2021-10-22"},{"lineNumber":61,"author":{"gitId":"jushg"},"content":"            String actualOutput \u003d Ui.getEditMessage(patientId,patientInfo, ViewType.PATIENT_INFO);","lastModifiedDate":"2021-10-22"},{"lineNumber":62,"author":{"gitId":"jushg"},"content":"            assertEquals(actualOutput, expectedOutput);","lastModifiedDate":"2021-10-22"},{"lineNumber":63,"author":{"gitId":"jushg"},"content":"        } catch (MedBotException e) {","lastModifiedDate":"2021-10-22"},{"lineNumber":64,"author":{"gitId":"jushg"},"content":"            assertEquals(e.getMessage(),\"Cannot identify the current view type\" + END_LINE);","lastModifiedDate":"2021-10-22"},{"lineNumber":65,"author":{"gitId":"jushg"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":66,"author":{"gitId":"EricBryann"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":67,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":68,"author":{"gitId":"EricBryann"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":69,"author":{"gitId":"EricBryann"},"content":"    public void testGetPatientInfoMessage() {","lastModifiedDate":"2021-10-06"},{"lineNumber":70,"author":{"gitId":"EricBryann"},"content":"        PatientList patientList \u003d new PatientList();","lastModifiedDate":"2021-10-06"},{"lineNumber":71,"author":{"gitId":"EricBryann"},"content":"        Patient patient \u003d new Patient();","lastModifiedDate":"2021-10-06"},{"lineNumber":72,"author":{"gitId":"EricBryann"},"content":"        patient.setName(\"John Doe\");","lastModifiedDate":"2021-10-06"},{"lineNumber":73,"author":{"gitId":"EricBryann"},"content":"        patient.setEmailAddress(\"John@gmail.com\");","lastModifiedDate":"2021-10-06"},{"lineNumber":74,"author":{"gitId":"jushg"},"content":"        patientList.addPerson(patient);","lastModifiedDate":"2021-10-18"},{"lineNumber":75,"author":{"gitId":"EricBryann"},"content":"        String patientInfo \u003d patient.toString();","lastModifiedDate":"2021-10-06"},{"lineNumber":76,"author":{"gitId":"jushg"},"content":"        String expectedOutput \u003d \"Here\u0027s the requested patient:\" + END_LINE + END_LINE","lastModifiedDate":"2021-10-22"},{"lineNumber":77,"author":{"gitId":"jushg"},"content":"                + \"Patient ID: 1 \" + END_LINE","lastModifiedDate":"2021-10-22"},{"lineNumber":78,"author":{"gitId":"jushg"},"content":"                + \"IC: \" + END_LINE","lastModifiedDate":"2021-10-22"},{"lineNumber":79,"author":{"gitId":"jushg"},"content":"                + \"Name: John Doe\" + END_LINE","lastModifiedDate":"2021-10-22"},{"lineNumber":80,"author":{"gitId":"jushg"},"content":"                + \"H/P: \" + END_LINE","lastModifiedDate":"2021-10-22"},{"lineNumber":81,"author":{"gitId":"jushg"},"content":"                + \"Email: John@gmail.com\" + END_LINE","lastModifiedDate":"2021-10-22"},{"lineNumber":82,"author":{"gitId":"jushg"},"content":"                + \"Address: \" + END_LINE;","lastModifiedDate":"2021-10-22"},{"lineNumber":83,"author":{"gitId":"jushg"},"content":"        assertEquals(PatientUi.getPatientInfo(patientInfo), expectedOutput);","lastModifiedDate":"2021-10-22"},{"lineNumber":84,"author":{"gitId":"EricBryann"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":85,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":86,"author":{"gitId":"EricBryann"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":87,"author":{"gitId":"EricBryann"},"content":"    public void testGetAllPatientsMessage() {","lastModifiedDate":"2021-10-06"},{"lineNumber":88,"author":{"gitId":"EricBryann"},"content":"        PatientList patientList \u003d new PatientList();","lastModifiedDate":"2021-10-06"},{"lineNumber":89,"author":{"gitId":"Kureans"},"content":"        Patient patient1 \u003d new Patient();","lastModifiedDate":"2021-10-07"},{"lineNumber":90,"author":{"gitId":"Kureans"},"content":"        patient1.setName(\"John Doe\");","lastModifiedDate":"2021-10-07"},{"lineNumber":91,"author":{"gitId":"Kureans"},"content":"        patient1.setEmailAddress(\"John@gmail.com\");","lastModifiedDate":"2021-10-07"},{"lineNumber":92,"author":{"gitId":"jushg"},"content":"        patientList.addPerson(patient1);","lastModifiedDate":"2021-10-18"},{"lineNumber":93,"author":{"gitId":"EricBryann"},"content":"        Patient patient2 \u003d new Patient();","lastModifiedDate":"2021-10-06"},{"lineNumber":94,"author":{"gitId":"Kureans"},"content":"        patient2.setName(\"Bob\");","lastModifiedDate":"2021-10-07"},{"lineNumber":95,"author":{"gitId":"Kureans"},"content":"        patient2.setPhoneNumber(\"88889999\");","lastModifiedDate":"2021-10-07"},{"lineNumber":96,"author":{"gitId":"jushg"},"content":"        patientList.addPerson(patient2);","lastModifiedDate":"2021-10-18"},{"lineNumber":97,"author":{"gitId":"EricBryann"},"content":"        String expectedOutput \u003d","lastModifiedDate":"2021-10-19"},{"lineNumber":98,"author":{"gitId":"jushg"},"content":"            \"Here is a list of all patients:\" + END_LINE","lastModifiedDate":"2021-10-22"},{"lineNumber":99,"author":{"gitId":"jushg"},"content":"            + \"For full details of each patient, please use the command \\\"view PATIENT_ID\\\"\" + END_LINE","lastModifiedDate":"2021-10-22"},{"lineNumber":100,"author":{"gitId":"EricBryann"},"content":"            + \" ----------------------------------------------------------------------------------------------------- \"","lastModifiedDate":"2021-10-19"},{"lineNumber":101,"author":{"gitId":"jushg"},"content":"            + END_LINE","lastModifiedDate":"2021-10-22"},{"lineNumber":102,"author":{"gitId":"EricBryann"},"content":"            + \" |  ID  | IC Number |         Name         | Phone No. |        Email         |       Address        | \"","lastModifiedDate":"2021-10-19"},{"lineNumber":103,"author":{"gitId":"jushg"},"content":"            + END_LINE","lastModifiedDate":"2021-10-22"},{"lineNumber":104,"author":{"gitId":"EricBryann"},"content":"            + \" ----------------------------------------------------------------------------------------------------- \"","lastModifiedDate":"2021-10-19"},{"lineNumber":105,"author":{"gitId":"jushg"},"content":"            + END_LINE","lastModifiedDate":"2021-10-22"},{"lineNumber":106,"author":{"gitId":"EricBryann"},"content":"            + \" | 1    |           | John Doe             |           | John@gmail.com       |                      | \"","lastModifiedDate":"2021-10-19"},{"lineNumber":107,"author":{"gitId":"jushg"},"content":"            + END_LINE","lastModifiedDate":"2021-10-22"},{"lineNumber":108,"author":{"gitId":"EricBryann"},"content":"            + \" | 2    |           | Bob                  | 88889999  |                      |                      | \"","lastModifiedDate":"2021-10-19"},{"lineNumber":109,"author":{"gitId":"jushg"},"content":"            + END_LINE","lastModifiedDate":"2021-10-22"},{"lineNumber":110,"author":{"gitId":"EricBryann"},"content":"            + \" ----------------------------------------------------------------------------------------------------- \"","lastModifiedDate":"2021-10-19"},{"lineNumber":111,"author":{"gitId":"jushg"},"content":"            + END_LINE;","lastModifiedDate":"2021-10-22"},{"lineNumber":112,"author":{"gitId":"EricBryann"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":113,"author":{"gitId":"EricBryann"},"content":"        assertEquals(PatientUi.getAllPatientsString(patientList.listPersons(false)), expectedOutput);","lastModifiedDate":"2021-10-25"},{"lineNumber":114,"author":{"gitId":"EricBryann"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":115,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":116,"author":{"gitId":"Kureans"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":117,"author":{"gitId":"justinfidelis"},"content":"    public void testGetPatientCommandListMessage() {","lastModifiedDate":"2021-10-25"},{"lineNumber":118,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":119,"author":{"gitId":"jushg"},"content":"        String expectedOutput \u003d \"Here are the list of commands:\" + END_LINE + END_LINE","lastModifiedDate":"2021-10-22"},{"lineNumber":120,"author":{"gitId":"jushg"},"content":"                + \"help\" + END_LINE + \"add\" + END_LINE + \"list\" + END_LINE + \"view\" + END_LINE + \"edit\" + END_LINE","lastModifiedDate":"2021-10-22"},{"lineNumber":121,"author":{"gitId":"EricBryann"},"content":"                + \"find\" + END_LINE + \"delete\" + END_LINE + \"exit\" + END_LINE + \"archive\" + END_LINE + \"unarchive\"","lastModifiedDate":"2021-10-25"},{"lineNumber":122,"author":{"gitId":"EricBryann"},"content":"                + END_LINE + END_LINE","lastModifiedDate":"2021-10-25"},{"lineNumber":123,"author":{"gitId":"jushg"},"content":"                + \"To obtain more information on each command and their respective required inputs, type:\" + END_LINE","lastModifiedDate":"2021-10-22"},{"lineNumber":124,"author":{"gitId":"jushg"},"content":"                + \"help [COMMAND]\" + END_LINE + END_LINE","lastModifiedDate":"2021-10-22"},{"lineNumber":125,"author":{"gitId":"jushg"},"content":"                + \"*Note that all commands will remove any \u0027|\u0027 inputs for format parsing purposes\" + END_LINE;","lastModifiedDate":"2021-10-22"},{"lineNumber":126,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":127,"author":{"gitId":"justinfidelis"},"content":"        try {","lastModifiedDate":"2021-10-25"},{"lineNumber":128,"author":{"gitId":"justinfidelis"},"content":"            assertEquals(Ui.getCommandList(ViewType.PATIENT_INFO), expectedOutput);","lastModifiedDate":"2021-10-25"},{"lineNumber":129,"author":{"gitId":"justinfidelis"},"content":"        } catch (MedBotException mbe) {","lastModifiedDate":"2021-10-25"},{"lineNumber":130,"author":{"gitId":"justinfidelis"},"content":"            fail();","lastModifiedDate":"2021-10-25"},{"lineNumber":131,"author":{"gitId":"justinfidelis"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":132,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":133,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":134,"author":{"gitId":"justinfidelis"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":135,"author":{"gitId":"justinfidelis"},"content":"    public void testGetStaffCommandListMessage() {","lastModifiedDate":"2021-10-25"},{"lineNumber":136,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":137,"author":{"gitId":"justinfidelis"},"content":"        String expectedOutput \u003d \"Here are the list of commands:\" + END_LINE + END_LINE","lastModifiedDate":"2021-10-25"},{"lineNumber":138,"author":{"gitId":"justinfidelis"},"content":"                + \"help\" + END_LINE + \"add\" + END_LINE + \"list\" + END_LINE + \"view\" + END_LINE + \"edit\" + END_LINE","lastModifiedDate":"2021-10-25"},{"lineNumber":139,"author":{"gitId":"justinfidelis"},"content":"                + \"find\" + END_LINE + \"delete\" + END_LINE + \"exit\" + END_LINE + \"archive\" + END_LINE + \"unarchive\"","lastModifiedDate":"2021-10-25"},{"lineNumber":140,"author":{"gitId":"justinfidelis"},"content":"                + END_LINE + END_LINE","lastModifiedDate":"2021-10-25"},{"lineNumber":141,"author":{"gitId":"justinfidelis"},"content":"                + \"To obtain more information on each command and their respective required inputs, type:\" + END_LINE","lastModifiedDate":"2021-10-25"},{"lineNumber":142,"author":{"gitId":"justinfidelis"},"content":"                + \"help [COMMAND]\" + END_LINE + END_LINE","lastModifiedDate":"2021-10-25"},{"lineNumber":143,"author":{"gitId":"justinfidelis"},"content":"                + \"*Note that all commands will remove any \u0027|\u0027 inputs for format parsing purposes\" + END_LINE;","lastModifiedDate":"2021-10-25"},{"lineNumber":144,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":145,"author":{"gitId":"justinfidelis"},"content":"        try {","lastModifiedDate":"2021-10-25"},{"lineNumber":146,"author":{"gitId":"justinfidelis"},"content":"            assertEquals(Ui.getCommandList(ViewType.MEDICAL_STAFF_INFO), expectedOutput);","lastModifiedDate":"2021-10-25"},{"lineNumber":147,"author":{"gitId":"justinfidelis"},"content":"        } catch (MedBotException mbe) {","lastModifiedDate":"2021-10-25"},{"lineNumber":148,"author":{"gitId":"justinfidelis"},"content":"            fail();","lastModifiedDate":"2021-10-25"},{"lineNumber":149,"author":{"gitId":"justinfidelis"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":150,"author":{"gitId":"justinfidelis"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":151,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":152,"author":{"gitId":"justinfidelis"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":153,"author":{"gitId":"justinfidelis"},"content":"    public void testGetSchedulerCommandListMessage() {","lastModifiedDate":"2021-10-25"},{"lineNumber":154,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":155,"author":{"gitId":"justinfidelis"},"content":"        String expectedOutput \u003d \"Here are the list of commands:\" + END_LINE + END_LINE","lastModifiedDate":"2021-10-25"},{"lineNumber":156,"author":{"gitId":"justinfidelis"},"content":"                + \"help\" + END_LINE + \"add\" + END_LINE + \"list\" + END_LINE + \"view\" + END_LINE + \"edit\" + END_LINE","lastModifiedDate":"2021-10-25"},{"lineNumber":157,"author":{"gitId":"justinfidelis"},"content":"                + \"find\" + END_LINE + \"delete\" + END_LINE + \"exit\" + END_LINE + END_LINE","lastModifiedDate":"2021-10-25"},{"lineNumber":158,"author":{"gitId":"justinfidelis"},"content":"                + \"To obtain more information on each command and their respective required inputs, type:\" + END_LINE","lastModifiedDate":"2021-10-25"},{"lineNumber":159,"author":{"gitId":"justinfidelis"},"content":"                + \"help [COMMAND]\" + END_LINE + END_LINE","lastModifiedDate":"2021-10-25"},{"lineNumber":160,"author":{"gitId":"justinfidelis"},"content":"                + \"*Note that all commands will remove any \u0027|\u0027 inputs for format parsing purposes\" + END_LINE;","lastModifiedDate":"2021-10-25"},{"lineNumber":161,"author":{"gitId":"justinfidelis"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":162,"author":{"gitId":"justinfidelis"},"content":"        try {","lastModifiedDate":"2021-10-25"},{"lineNumber":163,"author":{"gitId":"justinfidelis"},"content":"            assertEquals(Ui.getCommandList(ViewType.SCHEDULER), expectedOutput);","lastModifiedDate":"2021-10-25"},{"lineNumber":164,"author":{"gitId":"justinfidelis"},"content":"        } catch (MedBotException mbe) {","lastModifiedDate":"2021-10-25"},{"lineNumber":165,"author":{"gitId":"justinfidelis"},"content":"            fail();","lastModifiedDate":"2021-10-25"},{"lineNumber":166,"author":{"gitId":"justinfidelis"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":167,"author":{"gitId":"Kureans"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":168,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":169,"author":{"gitId":"Kureans"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":170,"author":{"gitId":"EricBryann"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"justinfidelis":44,"jushg":58,"EricBryann":56,"Kureans":12}},{"path":"text-ui-test/runtest.sh","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# change to script directory","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"cd \"${0%/*}\"","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"cd ..","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"./gradlew clean shadowJar","lastModifiedDate":"2020-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"cd text-ui-test","lastModifiedDate":"2020-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"java  -jar $(find ../build/libs/ -mindepth 1 -print -quit) \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"CrimsonTitan79"},"content":"diff EXPECTED.TXT ACTUAL.TXT","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    echo \"Test passed!\"","lastModifiedDate":"2020-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    echo \"Test failed!\"","lastModifiedDate":"2020-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"CrimsonTitan79":1,"-":20}}]
