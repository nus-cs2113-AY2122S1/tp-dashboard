[{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    mainClassName \u003d \"seedu.duke.Duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.23\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"crabnuggets"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2021-10-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"crabnuggets":1,"-":46}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# About us","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"Display | Name | Github Profile | Portfolio ","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"--------|:----:|:--------------:|:---------:","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"Alvinlj00"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Alvin Lim | [Github](https://github.com/Alvinlj00) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2021-09-29"},{"lineNumber":6,"author":{"gitId":"crabnuggets"},"content":"![](images/AlvinPangProfilePic.jpg) | Alvin Pang | [Github](https://github.com/crabnuggets) | [Portfolio](docs/team/crabnuggets.md)","lastModifiedDate":"2021-11-08"},{"lineNumber":7,"author":{"gitId":"alwinangys"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Alwin Ang | [Github](https://github.com/alwinangys) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2021-09-29"},{"lineNumber":8,"author":{"gitId":"antrikshv"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Antriksh Verma | [Github](https://github.com/antrikshv) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2021-09-29"}],"authorContributionMap":{"antrikshv":1,"Alvinlj00":1,"crabnuggets":1,"-":4,"alwinangys":1}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Developer Guide","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Acknowledgements","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"{list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2020-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"## Design \u0026 implementation","lastModifiedDate":"2020-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":9,"author":{"gitId":"crabnuggets"},"content":"{TO DELETE: Describe the design and implementation of the product. Use UML diagrams and short code snippets where applicable.}","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":11,"author":{"gitId":"crabnuggets"},"content":"This section describes some noteworthy details on how certain features are designed and implemented.","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"alwinangys"},"content":"### Logic component","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"alwinangys"},"content":"**API**: `Parser.java` {NOTE: this may change based on further implementations}","lastModifiedDate":"2021-10-22"},{"lineNumber":16,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":17,"author":{"gitId":"alwinangys"},"content":"(insert relevant information here about taking in user input and parsing it etc.)","lastModifiedDate":"2021-10-22"},{"lineNumber":18,"author":{"gitId":"antrikshv"},"content":"#### List Functionality","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"antrikshv"},"content":"![](images/ListDiagram.png)","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"antrikshv"},"content":"How List works:","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"antrikshv"},"content":"1. When the `parser` class parses `list` as the command from the user, a new `Command` object, `ListCommand` is created.","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"antrikshv"},"content":"2. The `ListCommand` constructor will parse through the user command to remove the empty space by calling `checkForEmptyCells`","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"antrikshv"},"content":"3. Then it would initialize the `listType` value depending on the `userCommand`","lastModifiedDate":"2021-10-27"},{"lineNumber":25,"author":{"gitId":"antrikshv"},"content":"4. This processed information would be passed back to `parser` then on to `Duke`.","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"antrikshv"},"content":"5. `Duke` then calls the `execute` method in `ListCommand` which will then return an object of type `CommandResult` and would print out the list corresponding to the `listType` in chronological order","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"antrikshv"},"content":"6. list can display 4 types of list depending on the `listType` ","lastModifiedDate":"2021-10-27"},{"lineNumber":28,"author":{"gitId":"antrikshv"},"content":"7. `list` : to list the Overall Schedule ","lastModifiedDate":"2021-10-27"},{"lineNumber":29,"author":{"gitId":"antrikshv"},"content":"8. `list -m` : to list all the members in the Overall Members List","lastModifiedDate":"2021-10-27"},{"lineNumber":30,"author":{"gitId":"antrikshv"},"content":"9. `list {Event_Num} -t` : to display all the tasks in a unique Event","lastModifiedDate":"2021-10-27"},{"lineNumber":31,"author":{"gitId":"antrikshv"},"content":"10. `list {Event_Num} t/{Task_Num}` : to display all the members involved in a specific task","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":33,"author":{"gitId":"antrikshv"},"content":"#### Next Functionality","lastModifiedDate":"2021-10-27"},{"lineNumber":34,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":35,"author":{"gitId":"antrikshv"},"content":"How Next works:","lastModifiedDate":"2021-10-27"},{"lineNumber":36,"author":{"gitId":"antrikshv"},"content":"1. When the `Parser` class parses `next` as the command from the user, a new `Command` object, `NextCommand` is created.","lastModifiedDate":"2021-10-27"},{"lineNumber":37,"author":{"gitId":"antrikshv"},"content":"2. Within the constructor `NextCommand` process the inputs from the user","lastModifiedDate":"2021-10-27"},{"lineNumber":38,"author":{"gitId":"antrikshv"},"content":"3. `Duke` then calls `execute` within the `NextCommand` where in it will display the most upcoming event or task depending on the user input","lastModifiedDate":"2021-10-27"},{"lineNumber":39,"author":{"gitId":"antrikshv"},"content":"4. `task` will display next upcoming task and `event` will display next upcoming event","lastModifiedDate":"2021-10-27"},{"lineNumber":40,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":41,"author":{"gitId":"antrikshv"},"content":"#### Update Functionality","lastModifiedDate":"2021-10-27"},{"lineNumber":42,"author":{"gitId":"antrikshv"},"content":"![](images/UpdateDiagram.png)","lastModifiedDate":"2021-10-27"},{"lineNumber":43,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":44,"author":{"gitId":"antrikshv"},"content":"How Updating works:","lastModifiedDate":"2021-10-27"},{"lineNumber":45,"author":{"gitId":"antrikshv"},"content":"1. When the `Parser` class parses `update` as the command from the user, a new `Command` object, `UpdateCommand` is created.","lastModifiedDate":"2021-10-27"},{"lineNumber":46,"author":{"gitId":"antrikshv"},"content":"2. The `UpdateCommand` constructor processes the entire input from the user by calling `prepareUpdates`.","lastModifiedDate":"2021-10-27"},{"lineNumber":47,"author":{"gitId":"antrikshv"},"content":"3. It will the display to the user the selected `Event`","lastModifiedDate":"2021-10-27"},{"lineNumber":48,"author":{"gitId":"antrikshv"},"content":"4. `Duke` then calls the `execute`  method in `UpdateCommand`","lastModifiedDate":"2021-10-27"},{"lineNumber":49,"author":{"gitId":"antrikshv"},"content":"5. `UpdateCommand` will interact with `Duke` and the Users Inputs to finish the updates the User requires within a loop","lastModifiedDate":"2021-10-27"},{"lineNumber":50,"author":{"gitId":"antrikshv"},"content":"6. Once all the updates are completed, and we exit the loop, `UpdateCommand` will return a `postUpdateMessage()` along with `CommandResult` object to show the User the result of the Updates","lastModifiedDate":"2021-10-27"},{"lineNumber":51,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":52,"author":{"gitId":"alwinangys"},"content":"#### Delete Functionality","lastModifiedDate":"2021-10-22"},{"lineNumber":53,"author":{"gitId":"alwinangys"},"content":"How deleting works:","lastModifiedDate":"2021-10-22"},{"lineNumber":54,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":55,"author":{"gitId":"alwinangys"},"content":"1. When the `Parser` class parses `delete` as the command from the user, a new `Command` object, `DeleteCommand` is created.","lastModifiedDate":"2021-10-22"},{"lineNumber":56,"author":{"gitId":"alwinangys"},"content":"2. The `DeleteCommand` constructor processes the entire input from the user by calling `prepareInputs`.","lastModifiedDate":"2021-10-22"},{"lineNumber":57,"author":{"gitId":"alwinangys"},"content":"3. `DeleteCommand` has 3 uses: deleting an `Event`, a `Task`, or to delete all `Event`s through the command `delete all`.","lastModifiedDate":"2021-10-22"},{"lineNumber":58,"author":{"gitId":"alwinangys"},"content":"4. The constructor processes the usage for `DeleteCommand` and executes the actual deletion through `execute` which returns a `CommandResult` object with the associated deletion message from the `Ui` class.","lastModifiedDate":"2021-10-22"},{"lineNumber":59,"author":{"gitId":"alwinangys"},"content":"5. `delete all` will not immediately invoke the `clear()` method on the global `eventCatalog` ArrayList and will instead prompt a confirmation from the user before deleting all `Event`s.","lastModifiedDate":"2021-10-22"},{"lineNumber":60,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":61,"author":{"gitId":"alwinangys"},"content":"#### Select Functionality","lastModifiedDate":"2021-10-26"},{"lineNumber":62,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":63,"author":{"gitId":"alwinangys"},"content":"![](images/SelectDiagram.png)","lastModifiedDate":"2021-10-26"},{"lineNumber":64,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":65,"author":{"gitId":"alwinangys"},"content":"How selecting an `Event` or an event\u0027s nested `Task` works:","lastModifiedDate":"2021-10-26"},{"lineNumber":66,"author":{"gitId":"alwinangys"},"content":"1. When the `Parser` class parses `select` as the command from the user, a new `Command` object, `SelectCommand` is created.","lastModifiedDate":"2021-10-26"},{"lineNumber":67,"author":{"gitId":"alwinangys"},"content":"2. If the command contains a valid flag (`-e` or `-t`), `SelectCommand` processes the input from the user by calling `prepareInputs`.","lastModifiedDate":"2021-10-26"},{"lineNumber":68,"author":{"gitId":"alwinangys"},"content":"3. If the user selects an `Event`, `SelectCommand` updates the index of this `Event` in `Parser`.","lastModifiedDate":"2021-10-26"},{"lineNumber":69,"author":{"gitId":"alwinangys"},"content":"4. `SelectCommand` then passes the processed inputs back to `Parser`, which passes it back to `Duke`.","lastModifiedDate":"2021-10-26"},{"lineNumber":70,"author":{"gitId":"alwinangys"},"content":"5. `Duke` then calls the `execute` method in `SelectCommand` which will return an object of type `CommandResult`, and the respective output will be printed.","lastModifiedDate":"2021-10-26"},{"lineNumber":71,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":72,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":73,"author":{"gitId":"crabnuggets"},"content":"### Storage component","lastModifiedDate":"2021-10-19"},{"lineNumber":74,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":75,"author":{"gitId":"crabnuggets"},"content":"#### Save Functionality","lastModifiedDate":"2021-10-19"},{"lineNumber":76,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":77,"author":{"gitId":"crabnuggets"},"content":"![](images/SaveDiagram.png)","lastModifiedDate":"2021-10-19"},{"lineNumber":78,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":79,"author":{"gitId":"crabnuggets"},"content":"How the `save` functionality works: ","lastModifiedDate":"2021-10-19"},{"lineNumber":80,"author":{"gitId":"crabnuggets"},"content":"1. When the `save` method is called, `StorageFile` constructs a new `File` object using the configured `DEFAULT_FILE_PATH`.","lastModifiedDate":"2021-11-07"},{"lineNumber":81,"author":{"gitId":"crabnuggets"},"content":"2. The presence of the `File` object on the local system is checked. The `data` directory and `slamData.txt` file wil be created if they are absent.","lastModifiedDate":"2021-11-07"},{"lineNumber":82,"author":{"gitId":"crabnuggets"},"content":"3. The `Member` objects in the provided `memberRoster` will be encoded into a list of `String` objects via the `encodeMemebersList` method.  ","lastModifiedDate":"2021-11-07"},{"lineNumber":83,"author":{"gitId":"crabnuggets"},"content":"4. The `Event` objects in the provided `eventCatalog` along with their respective lists of `Task` objects will be encoded into a list of `String` objects via `encodeEventsList`. ","lastModifiedDate":"2021-11-07"},{"lineNumber":84,"author":{"gitId":"crabnuggets"},"content":"5. The `writeToFile` method will be called to write the encoded lists of `String` data into the `.txt` save file locally for future uses of the program.","lastModifiedDate":"2021-11-07"},{"lineNumber":85,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":86,"author":{"gitId":"crabnuggets"},"content":"#### Load Functionality ","lastModifiedDate":"2021-10-27"},{"lineNumber":87,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":88,"author":{"gitId":"crabnuggets"},"content":"![](images/LoadDiagram.png)","lastModifiedDate":"2021-10-27"},{"lineNumber":89,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":90,"author":{"gitId":"crabnuggets"},"content":"How the `load` functionality works: ","lastModifiedDate":"2021-10-27"},{"lineNumber":91,"author":{"gitId":"crabnuggets"},"content":"1. When the `loadSaveFile` method is called, `StorageFile` constructs a new `File` object using the configured `DEFAULT_FILE_PATH`.","lastModifiedDate":"2021-11-07"},{"lineNumber":92,"author":{"gitId":"crabnuggets"},"content":"2. The returned `File` object will then be parsed into an `ArrayList\u003cString\u003e` of `encodedLines` through the `getStringsFromFile` method.","lastModifiedDate":"2021-11-07"},{"lineNumber":93,"author":{"gitId":"crabnuggets"},"content":"3. If the detected line contains data regarding a `Member` or `Event` object, the `StorageFile` instance will decode and construct the `Member` and `Event` objects, adding them to the global `MemberRoster` and `EventCatalog` respectively.","lastModifiedDate":"2021-11-07"},{"lineNumber":94,"author":{"gitId":"crabnuggets"},"content":"4. If the detected line contains data regarding a `Task` object:","lastModifiedDate":"2021-11-07"},{"lineNumber":95,"author":{"gitId":"crabnuggets"},"content":"   1. The `decodedTask` object will be decoded from the respective line and returned via `decodeTaskFromString`. ","lastModifiedDate":"2021-11-07"},{"lineNumber":96,"author":{"gitId":"crabnuggets"},"content":"   2. The `decodedTask` will be added to the `Event` object\u0027s list of tasks within the global `eventCatalog`.","lastModifiedDate":"2021-11-07"},{"lineNumber":97,"author":{"gitId":"crabnuggets"},"content":"   3. `Member` objects in the global `memberRoster` that this `decodedTask` contains will also have their list of tasks updated to contain this `decodedTask`. ","lastModifiedDate":"2021-11-07"},{"lineNumber":98,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":99,"author":{"gitId":"crabnuggets"},"content":"\u003e💡 When decoding an invalid line (possibly from unwanted edits to `slamData.txt` by the user), `loadSaveFile` will throw an appropriate exception and provide feedback regarding the invalid line to the user.","lastModifiedDate":"2021-11-07"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"## Product scope","lastModifiedDate":"2020-05-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"### Target user profile","lastModifiedDate":"2020-05-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"{Describe the target user profile}","lastModifiedDate":"2020-05-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"### Value proposition","lastModifiedDate":"2020-05-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"{Describe the value proposition: what problem does it solve?}","lastModifiedDate":"2020-05-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"## User Stories","lastModifiedDate":"2020-05-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"|Version| As a ... | I want to ... | So that I can ...|","lastModifiedDate":"2020-05-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"|--------|----------|---------------|------------------|","lastModifiedDate":"2020-05-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"|v1.0|new user|see usage instructions|refer to them when I forget how to use the application|","lastModifiedDate":"2020-05-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"|v2.0|user|find a to-do item by name|locate a to-do without having to go through the entire list|","lastModifiedDate":"2020-05-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"## Non-Functional Requirements","lastModifiedDate":"2020-05-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"{Give non-functional requirements}","lastModifiedDate":"2020-05-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"## Glossary","lastModifiedDate":"2020-05-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"* *glossary item* - Definition","lastModifiedDate":"2020-05-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"## Instructions for manual testing","lastModifiedDate":"2020-05-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"{Give instructions on how to do a manual product testing e.g., how to load sample data to be used for testing}","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"antrikshv":33,"crabnuggets":30,"-":37,"alwinangys":27}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"crabnuggets"},"content":"# SLAM User Guide","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"crabnuggets"},"content":"Welcome to **SLAM**! **SLAM** is a desktop application for student group leaders in NUS to manage their group events, tasks, members and various activities. This application allows you to effectively plan and manage the organisation of events by allowing users to create and add such events to their schedule. Leading up to the actual date and time of the event, committee heads can add tasks (e.g. meetings, purchase of logistics) to complete under each event to keep track of progress. Group members can also be added and assigned to these tasks. This application uses a Command Line Interface (CLI); that is, the application is operated by typing commands into a Command Box.","lastModifiedDate":"2021-10-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"crabnuggets"},"content":"---","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":6,"author":{"gitId":"crabnuggets"},"content":"# Table of Contents","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"crabnuggets"},"content":"1. [Quick Start](#1-quick-start)","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"crabnuggets"},"content":"2. [Navigating This Document](#2-navigating-this-document)","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"crabnuggets"},"content":"   1. [Events](#21-events)","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"crabnuggets"},"content":"   2. [Tasks](#22-tasks)","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"crabnuggets"},"content":"3. [General Commands](#3-general-commands)","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"crabnuggets"},"content":"   1. [Help](#31-help)","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"crabnuggets"},"content":"   3. [List all Events](#32-listing-events-tasks-or-members)","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"crabnuggets"},"content":"   2. [Exiting the program](#33-exiting-the-program)","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"crabnuggets"},"content":"4. [Event Commands](#4-event-commands)","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"crabnuggets"},"content":"   1. [Add an event](#41-add-an-event)","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"crabnuggets"},"content":"   2. [Select an event](#42-select-an-event)","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"crabnuggets"},"content":"   3. [Mark an event as done](#43-mark-an-event-as-done)","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"crabnuggets"},"content":"   4. [Mark an event as undone](#44-mark-an-event-as-undone)","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"crabnuggets"},"content":"   5. [Delete an event](#45-delete-an-event)","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"crabnuggets"},"content":"   10. [Delete all Events](#46-delete-all-events)","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"crabnuggets"},"content":"   6. [Find Event(s) based on keywords(s)](#47-find-events-based-on-keywords)","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"alwinangys"},"content":"   8. [Display next upcoming Event](#48-display-next-upcoming-event)","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"alwinangys"},"content":"   9. [Update an Event](#49-update-an-event)","lastModifiedDate":"2021-10-27"},{"lineNumber":25,"author":{"gitId":"crabnuggets"},"content":"5. [Task Commands](#5-task-commands)","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"crabnuggets"},"content":"   1. [Add a task](#51-add-a-task)","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"crabnuggets"},"content":"   2. [Mark a task as done](#52-mark-a-task-as-done)","lastModifiedDate":"2021-10-27"},{"lineNumber":28,"author":{"gitId":"crabnuggets"},"content":"   3. [Mark a task as undone](#53-mark-a-task-as-undone)","lastModifiedDate":"2021-10-27"},{"lineNumber":29,"author":{"gitId":"crabnuggets"},"content":"   4. [Delete a task](#54-delete-a-task)","lastModifiedDate":"2021-10-27"},{"lineNumber":30,"author":{"gitId":"crabnuggets"},"content":"6. [Member Commands](#6-member-commands)","lastModifiedDate":"2021-10-27"},{"lineNumber":31,"author":{"gitId":"crabnuggets"},"content":"   1. [Add a member](#61-add-a-member)","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"crabnuggets"},"content":"   2. [Delete a member](#62-delete-a-member)","lastModifiedDate":"2021-10-27"},{"lineNumber":33,"author":{"gitId":"crabnuggets"},"content":"7. [Saving the data](#7-saving-the-data)","lastModifiedDate":"2021-10-27"},{"lineNumber":34,"author":{"gitId":"crabnuggets"},"content":"8. [FAQ](#8-faq)","lastModifiedDate":"2021-10-27"},{"lineNumber":35,"author":{"gitId":"crabnuggets"},"content":"9. [Command summary](#9-command-summary)","lastModifiedDate":"2021-10-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":37,"author":{"gitId":"crabnuggets"},"content":"---","lastModifiedDate":"2021-10-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":39,"author":{"gitId":"crabnuggets"},"content":"## 1. Quick Start","lastModifiedDate":"2021-10-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":41,"author":{"gitId":"crabnuggets"},"content":"1. Ensure that you have Java 11 or above installed on your computer.","lastModifiedDate":"2021-10-27"},{"lineNumber":42,"author":{"gitId":"crabnuggets"},"content":"2. Download the latest `.jar` file release of SLAM from [here](https://github.com/AY2122S1-CS2113T-W12-3/tp/).","lastModifiedDate":"2021-10-27"},{"lineNumber":43,"author":{"gitId":"crabnuggets"},"content":"3. Place the downloaded `.jar` file in the directory you intend to store **SLAM**’s data at.","lastModifiedDate":"2021-10-27"},{"lineNumber":44,"author":{"gitId":"crabnuggets"},"content":"4. Double-click the `.jar` file to launch the app. If double-clicking does not work, open the command prompt, navigate to the directory the file is located at, and enter the following command to launch the program:","lastModifiedDate":"2021-10-27"},{"lineNumber":45,"author":{"gitId":"crabnuggets"},"content":"```","lastModifiedDate":"2021-10-27"},{"lineNumber":46,"author":{"gitId":"crabnuggets"},"content":" java -jar SLAM.jar","lastModifiedDate":"2021-10-27"},{"lineNumber":47,"author":{"gitId":"crabnuggets"},"content":"```","lastModifiedDate":"2021-10-27"},{"lineNumber":48,"author":{"gitId":"crabnuggets"},"content":"5. Congratulations! You are good to go. ","lastModifiedDate":"2021-10-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":50,"author":{"gitId":"crabnuggets"},"content":"---","lastModifiedDate":"2021-10-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":52,"author":{"gitId":"crabnuggets"},"content":"## 2. Navigating this document ","lastModifiedDate":"2021-10-27"},{"lineNumber":53,"author":{"gitId":"crabnuggets"},"content":"This document shows you the available features in **SLAM**, and provides you with the relevant commands to use them.","lastModifiedDate":"2021-10-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":55,"author":{"gitId":"crabnuggets"},"content":"\u003e 💡 **Notes about reading this document:**","lastModifiedDate":"2021-10-27"},{"lineNumber":56,"author":{"gitId":"crabnuggets"},"content":"\u003e - Parameters that are supplied by the user are written in `UPPER_CASE`\u003cbr /\u003e E.g. in `add -e n/TITLE`, a possible parameter for `TITLE` can be `Concert`","lastModifiedDate":"2021-10-27"},{"lineNumber":57,"author":{"gitId":"crabnuggets"},"content":"\u003e - 🚨 **IMPORTANT** 🚨\u003cbr /\u003e When inputting date \u0026 time as commands, the format should always be DD-mm-YYYY hhMM\u003cbr /\u003e E.g. 31-12-2021 2359","lastModifiedDate":"2021-10-27"},{"lineNumber":58,"author":{"gitId":"crabnuggets"},"content":"    Since **SLAM** is an application revolving around the management of events, tasks and committee members, it is important to be aware of the respective details that **SLAM** can use in managing the overall catalog.","lastModifiedDate":"2021-10-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":60,"author":{"gitId":"crabnuggets"},"content":"### 2.1 Events","lastModifiedDate":"2021-10-27"},{"lineNumber":61,"author":{"gitId":"crabnuggets"},"content":"The following two tables show the fields which **SLAM** works with in managing events in the overall catalog.","lastModifiedDate":"2021-10-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":63,"author":{"gitId":"crabnuggets"},"content":"| **Required Fields** | **Description**                  |","lastModifiedDate":"2021-10-27"},{"lineNumber":64,"author":{"gitId":"crabnuggets"},"content":"| ------------------- | -------------------------------- |","lastModifiedDate":"2021-10-27"},{"lineNumber":65,"author":{"gitId":"crabnuggets"},"content":"| Title | The title of the event                         |","lastModifiedDate":"2021-10-27"},{"lineNumber":66,"author":{"gitId":"crabnuggets"},"content":"| Date \u0026 Time | The date and time the event is happening | ","lastModifiedDate":"2021-10-27"},{"lineNumber":67,"author":{"gitId":"crabnuggets"},"content":"| Venue | The venue at which the event is happening      |","lastModifiedDate":"2021-10-27"},{"lineNumber":68,"author":{"gitId":"crabnuggets"},"content":"| Budget | The amount of budget allocated to the event   |","lastModifiedDate":"2021-10-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":70,"author":{"gitId":"crabnuggets"},"content":"| **Optional Fields** | **Description**                  |","lastModifiedDate":"2021-10-29"},{"lineNumber":71,"author":{"gitId":"crabnuggets"},"content":"| ------------------- | -------------------------------- |","lastModifiedDate":"2021-10-27"},{"lineNumber":72,"author":{"gitId":"alwinangys"},"content":"| Description | A brief description of the event         |","lastModifiedDate":"2021-10-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":74,"author":{"gitId":"crabnuggets"},"content":"### 2.2 Tasks","lastModifiedDate":"2021-10-27"},{"lineNumber":75,"author":{"gitId":"crabnuggets"},"content":"The following two tables show the fields which **SLAM** works with in managing the tasks you can add and keep track of under each event created.","lastModifiedDate":"2021-10-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":77,"author":{"gitId":"crabnuggets"},"content":"| **Required Fields** | **Description**                   |","lastModifiedDate":"2021-10-27"},{"lineNumber":78,"author":{"gitId":"crabnuggets"},"content":"| ------------------- | --------------------------------- |","lastModifiedDate":"2021-10-27"},{"lineNumber":79,"author":{"gitId":"crabnuggets"},"content":"| Title | The title of the task                           |","lastModifiedDate":"2021-10-27"},{"lineNumber":80,"author":{"gitId":"crabnuggets"},"content":"| Deadline | The deadline the task has to be completed by |","lastModifiedDate":"2021-10-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":82,"author":{"gitId":"crabnuggets"},"content":"| **Optional Fields** | **Description**                 |","lastModifiedDate":"2021-10-27"},{"lineNumber":83,"author":{"gitId":"crabnuggets"},"content":"| ------------------- | ------------------------------- |","lastModifiedDate":"2021-10-27"},{"lineNumber":84,"author":{"gitId":"crabnuggets"},"content":"| Description         | A brief description of the task |","lastModifiedDate":"2021-10-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":87,"author":{"gitId":"crabnuggets"},"content":"[Back to table of contents](#table-of-contents)","lastModifiedDate":"2021-10-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":89,"author":{"gitId":"crabnuggets"},"content":"---","lastModifiedDate":"2021-10-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":91,"author":{"gitId":"crabnuggets"},"content":"## 3. General Commands","lastModifiedDate":"2021-10-27"},{"lineNumber":92,"author":{"gitId":"crabnuggets"},"content":"This section contains the general basic commands for **SLAM**.","lastModifiedDate":"2021-10-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":94,"author":{"gitId":"crabnuggets"},"content":"### 3.1 Help ","lastModifiedDate":"2021-10-27"},{"lineNumber":95,"author":{"gitId":"crabnuggets"},"content":"This allows you to quickly view all the available commands and how to use them, all in one place.","lastModifiedDate":"2021-10-27"},{"lineNumber":96,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":97,"author":{"gitId":"crabnuggets"},"content":"**Format:** `help`","lastModifiedDate":"2021-10-27"},{"lineNumber":98,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":99,"author":{"gitId":"crabnuggets"},"content":"### 3.2 Listing Events, Tasks or Members","lastModifiedDate":"2021-10-27"},{"lineNumber":100,"author":{"gitId":"crabnuggets"},"content":"You may use this feature of **SLAM** to view the desired selection of your **SLAM** database. ","lastModifiedDate":"2021-10-27"},{"lineNumber":101,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":102,"author":{"gitId":"crabnuggets"},"content":"You may choose to view all your scheduled `events` in SLAM. SLAM sorts this chronologically for you so you don\u0027t have to. ","lastModifiedDate":"2021-10-27"},{"lineNumber":103,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":104,"author":{"gitId":"crabnuggets"},"content":"**Format:** `list`","lastModifiedDate":"2021-10-27"},{"lineNumber":105,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":106,"author":{"gitId":"crabnuggets"},"content":"**Example:** ","lastModifiedDate":"2021-10-27"},{"lineNumber":107,"author":{"gitId":"crabnuggets"},"content":"```","lastModifiedDate":"2021-10-27"},{"lineNumber":108,"author":{"gitId":"crabnuggets"},"content":"\u003e list","lastModifiedDate":"2021-10-27"},{"lineNumber":109,"author":{"gitId":"crabnuggets"},"content":"```","lastModifiedDate":"2021-10-27"},{"lineNumber":110,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":111,"author":{"gitId":"crabnuggets"},"content":"```","lastModifiedDate":"2021-10-27"},{"lineNumber":112,"author":{"gitId":"crabnuggets"},"content":"OVERALL SCHEDULE","lastModifiedDate":"2021-10-27"},{"lineNumber":113,"author":{"gitId":"crabnuggets"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-27"},{"lineNumber":114,"author":{"gitId":"crabnuggets"},"content":"1. [E][ ] Tembusu Concert (at: 19 Feb 2022 - 20:00)","lastModifiedDate":"2021-10-27"},{"lineNumber":115,"author":{"gitId":"crabnuggets"},"content":"2. [E][ ] Faculty Funfair (at: 20 Mar 2022 - 16:00)","lastModifiedDate":"2021-10-27"},{"lineNumber":116,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":117,"author":{"gitId":"crabnuggets"},"content":"FURTHER COMMANDS","lastModifiedDate":"2021-10-27"},{"lineNumber":118,"author":{"gitId":"crabnuggets"},"content":"-----------------------","lastModifiedDate":"2021-10-27"},{"lineNumber":119,"author":{"gitId":"crabnuggets"},"content":"To list Task: list [Event Index] -t","lastModifiedDate":"2021-10-27"},{"lineNumber":120,"author":{"gitId":"crabnuggets"},"content":"To list Members of a Task: list [Event Index] t/[Task Index]","lastModifiedDate":"2021-10-27"},{"lineNumber":121,"author":{"gitId":"crabnuggets"},"content":"--------END OF LIST-----------","lastModifiedDate":"2021-10-27"},{"lineNumber":122,"author":{"gitId":"crabnuggets"},"content":"```","lastModifiedDate":"2021-10-27"},{"lineNumber":123,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":124,"author":{"gitId":"crabnuggets"},"content":"💡 `list` can also be used to display all members in your current roster. ","lastModifiedDate":"2021-10-27"},{"lineNumber":125,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":126,"author":{"gitId":"crabnuggets"},"content":"**Format:** `list -m`","lastModifiedDate":"2021-10-27"},{"lineNumber":127,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":128,"author":{"gitId":"crabnuggets"},"content":"**Example:** ","lastModifiedDate":"2021-10-27"},{"lineNumber":129,"author":{"gitId":"crabnuggets"},"content":"```","lastModifiedDate":"2021-10-27"},{"lineNumber":130,"author":{"gitId":"crabnuggets"},"content":"\u003e list -m","lastModifiedDate":"2021-10-27"},{"lineNumber":131,"author":{"gitId":"crabnuggets"},"content":"```","lastModifiedDate":"2021-10-27"},{"lineNumber":132,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":133,"author":{"gitId":"crabnuggets"},"content":"```","lastModifiedDate":"2021-10-27"},{"lineNumber":134,"author":{"gitId":"crabnuggets"},"content":"List of members in MemberRoster","lastModifiedDate":"2021-10-27"},{"lineNumber":135,"author":{"gitId":"crabnuggets"},"content":"1. JOHN DOE","lastModifiedDate":"2021-10-27"},{"lineNumber":136,"author":{"gitId":"crabnuggets"},"content":"2. JANE DOE","lastModifiedDate":"2021-10-27"},{"lineNumber":137,"author":{"gitId":"crabnuggets"},"content":"--------END OF LIST-----------","lastModifiedDate":"2021-10-27"},{"lineNumber":138,"author":{"gitId":"crabnuggets"},"content":"```","lastModifiedDate":"2021-10-27"},{"lineNumber":139,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":140,"author":{"gitId":"crabnuggets"},"content":"💡 You may also choose to view all the `tasks` you have assigned to any specified event.","lastModifiedDate":"2021-10-27"},{"lineNumber":141,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":142,"author":{"gitId":"crabnuggets"},"content":"**Format:** `list EVENT_INDEX -t`","lastModifiedDate":"2021-10-27"},{"lineNumber":143,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":144,"author":{"gitId":"crabnuggets"},"content":"**Example:** `list 1 -t`","lastModifiedDate":"2021-10-27"},{"lineNumber":145,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":146,"author":{"gitId":"crabnuggets"},"content":"**Expected Output:** ","lastModifiedDate":"2021-10-27"},{"lineNumber":147,"author":{"gitId":"crabnuggets"},"content":"```","lastModifiedDate":"2021-10-27"},{"lineNumber":148,"author":{"gitId":"crabnuggets"},"content":"\u003e list 1 -t","lastModifiedDate":"2021-10-27"},{"lineNumber":149,"author":{"gitId":"crabnuggets"},"content":"```","lastModifiedDate":"2021-10-27"},{"lineNumber":150,"author":{"gitId":"crabnuggets"},"content":"```","lastModifiedDate":"2021-10-27"},{"lineNumber":151,"author":{"gitId":"crabnuggets"},"content":"Event: Tembusu Concert","lastModifiedDate":"2021-10-27"},{"lineNumber":152,"author":{"gitId":"crabnuggets"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-27"},{"lineNumber":153,"author":{"gitId":"crabnuggets"},"content":"1. [T][X] Buy stage lights (by: 10 Feb 2022 - 22:00)","lastModifiedDate":"2021-10-27"},{"lineNumber":154,"author":{"gitId":"crabnuggets"},"content":"2. [T][ ] Stage layout meeting (by: 12 Feb 2022 - 20:00)","lastModifiedDate":"2021-10-27"},{"lineNumber":155,"author":{"gitId":"crabnuggets"},"content":"--------END OF LIST-----------","lastModifiedDate":"2021-10-27"},{"lineNumber":156,"author":{"gitId":"crabnuggets"},"content":"```","lastModifiedDate":"2021-10-27"},{"lineNumber":157,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":158,"author":{"gitId":"crabnuggets"},"content":"💡 **SLAM** also allows you to choose to **view all the assigned members for a particular task** too.","lastModifiedDate":"2021-10-27"},{"lineNumber":159,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":160,"author":{"gitId":"crabnuggets"},"content":"**Format:** `list EVENT_INDEX t/TASK_INDEX`","lastModifiedDate":"2021-10-27"},{"lineNumber":161,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":162,"author":{"gitId":"crabnuggets"},"content":"**Example:** `list 1 t/1`","lastModifiedDate":"2021-10-27"},{"lineNumber":163,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":164,"author":{"gitId":"crabnuggets"},"content":"**Expected Output:**","lastModifiedDate":"2021-10-27"},{"lineNumber":165,"author":{"gitId":"crabnuggets"},"content":"```","lastModifiedDate":"2021-10-27"},{"lineNumber":166,"author":{"gitId":"crabnuggets"},"content":"Event: Tembusu Concert","lastModifiedDate":"2021-10-27"},{"lineNumber":167,"author":{"gitId":"crabnuggets"},"content":"Task: Buy stage lights","lastModifiedDate":"2021-10-27"},{"lineNumber":168,"author":{"gitId":"crabnuggets"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-27"},{"lineNumber":169,"author":{"gitId":"crabnuggets"},"content":"1. JOHN DOE","lastModifiedDate":"2021-10-27"},{"lineNumber":170,"author":{"gitId":"crabnuggets"},"content":"2. JANE DOE","lastModifiedDate":"2021-10-27"},{"lineNumber":171,"author":{"gitId":"crabnuggets"},"content":"--------END OF LIST-----------","lastModifiedDate":"2021-10-27"},{"lineNumber":172,"author":{"gitId":"crabnuggets"},"content":"```","lastModifiedDate":"2021-10-27"},{"lineNumber":173,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":174,"author":{"gitId":"crabnuggets"},"content":"### 3.3 Exiting the program","lastModifiedDate":"2021-10-27"},{"lineNumber":175,"author":{"gitId":"crabnuggets"},"content":"This allows you to safely terminate the program.","lastModifiedDate":"2021-10-27"},{"lineNumber":176,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":177,"author":{"gitId":"crabnuggets"},"content":"**Format:** `bye` ","lastModifiedDate":"2021-10-27"},{"lineNumber":178,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":179,"author":{"gitId":"crabnuggets"},"content":"[Back to table of contents](#table-of-contents)","lastModifiedDate":"2021-10-27"},{"lineNumber":180,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":181,"author":{"gitId":"crabnuggets"},"content":"---","lastModifiedDate":"2021-10-27"},{"lineNumber":182,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":183,"author":{"gitId":"crabnuggets"},"content":"## 4. Event Commands","lastModifiedDate":"2021-10-27"},{"lineNumber":184,"author":{"gitId":"crabnuggets"},"content":"This section contains the available commands to manage events in **SLAM**.","lastModifiedDate":"2021-10-27"},{"lineNumber":185,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":186,"author":{"gitId":"crabnuggets"},"content":"### 4.1 Add an Event","lastModifiedDate":"2021-10-27"},{"lineNumber":187,"author":{"gitId":"Alvinlj00"},"content":"Adds an event to your current catalog of events.","lastModifiedDate":"2021-10-28"},{"lineNumber":188,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":189,"author":{"gitId":"Alvinlj00"},"content":"To add an event, first describe the event using the following command:","lastModifiedDate":"2021-10-28"},{"lineNumber":190,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":191,"author":{"gitId":"Alvinlj00"},"content":"**Format:** `add -e n/TITLE d/DATE_\u0026_TIME v/VENUE b/BUDGET`","lastModifiedDate":"2021-10-28"},{"lineNumber":192,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":193,"author":{"gitId":"Alvinlj00"},"content":"**Example:** `add -e n/Temasek Hall Concert d/30-11-2021 2300 v/MPH b/500`","lastModifiedDate":"2021-10-28"},{"lineNumber":194,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":195,"author":{"gitId":"Alvinlj00"},"content":"Following which, **SLAM** will prompt you for an optional description for your event which should look like this:","lastModifiedDate":"2021-10-28"},{"lineNumber":196,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":197,"author":{"gitId":"Alvinlj00"},"content":"```","lastModifiedDate":"2021-10-28"},{"lineNumber":198,"author":{"gitId":"Alvinlj00"},"content":"\u003e add -e n/Temasek Hall Concert d/30-11-2021 2300 v/MPH b/500","lastModifiedDate":"2021-10-28"},{"lineNumber":199,"author":{"gitId":"Alvinlj00"},"content":"```","lastModifiedDate":"2021-10-28"},{"lineNumber":200,"author":{"gitId":"Alvinlj00"},"content":"```","lastModifiedDate":"2021-10-28"},{"lineNumber":201,"author":{"gitId":"Alvinlj00"},"content":"Please add an optional description for your item and press enter.","lastModifiedDate":"2021-10-28"},{"lineNumber":202,"author":{"gitId":"Alvinlj00"},"content":"```","lastModifiedDate":"2021-10-28"},{"lineNumber":203,"author":{"gitId":"Alvinlj00"},"content":"```","lastModifiedDate":"2021-10-28"},{"lineNumber":204,"author":{"gitId":"Alvinlj00"},"content":"\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":205,"author":{"gitId":"Alvinlj00"},"content":"```","lastModifiedDate":"2021-10-28"},{"lineNumber":206,"author":{"gitId":"Alvinlj00"},"content":"Key in your description and press `enter`, or just press `enter` if you have none. You have successfully added an event into **SLAM**!","lastModifiedDate":"2021-10-28"},{"lineNumber":207,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":208,"author":{"gitId":"crabnuggets"},"content":"### 4.2 Select an Event","lastModifiedDate":"2021-10-27"},{"lineNumber":209,"author":{"gitId":"crabnuggets"},"content":"This allows you to select an event from your list using the event’s numerical position in the list (i.e. the event’s ID). Upon selection, more details about that event will be displayed, and you may perform additional commands with the selected event (e.g. adding tasks to complete).","lastModifiedDate":"2021-10-27"},{"lineNumber":210,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":211,"author":{"gitId":"crabnuggets"},"content":"**Format:** `select -e EVENT_ID`","lastModifiedDate":"2021-10-27"},{"lineNumber":212,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":213,"author":{"gitId":"crabnuggets"},"content":"**Example:** `select -e 1`","lastModifiedDate":"2021-10-27"},{"lineNumber":214,"author":{"gitId":"crabnuggets"},"content":"\u003e 💡 The `select` command is especially useful to keep in mind! An event needs to be selected before any changes to its tasks can be done.","lastModifiedDate":"2021-10-27"},{"lineNumber":215,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":216,"author":{"gitId":"crabnuggets"},"content":"**Expected Output:**","lastModifiedDate":"2021-10-27"},{"lineNumber":217,"author":{"gitId":"crabnuggets"},"content":"```","lastModifiedDate":"2021-10-27"},{"lineNumber":218,"author":{"gitId":"crabnuggets"},"content":"\u003e select -e 1","lastModifiedDate":"2021-10-27"},{"lineNumber":219,"author":{"gitId":"crabnuggets"},"content":"```","lastModifiedDate":"2021-10-27"},{"lineNumber":220,"author":{"gitId":"crabnuggets"},"content":"```","lastModifiedDate":"2021-10-27"},{"lineNumber":221,"author":{"gitId":"crabnuggets"},"content":"Here are the details of the event:","lastModifiedDate":"2021-10-27"},{"lineNumber":222,"author":{"gitId":"crabnuggets"},"content":"Title: Tembusu Concert","lastModifiedDate":"2021-10-27"},{"lineNumber":223,"author":{"gitId":"crabnuggets"},"content":"Date: 19 Feb 2022 - 20:00","lastModifiedDate":"2021-10-27"},{"lineNumber":224,"author":{"gitId":"crabnuggets"},"content":"Description: Semesterly Arts Week Fundraiser","lastModifiedDate":"2021-10-27"},{"lineNumber":225,"author":{"gitId":"crabnuggets"},"content":"Venue: MPH","lastModifiedDate":"2021-10-27"},{"lineNumber":226,"author":{"gitId":"crabnuggets"},"content":"Budget: $1000.0","lastModifiedDate":"2021-10-27"},{"lineNumber":227,"author":{"gitId":"crabnuggets"},"content":"Tasks:","lastModifiedDate":"2021-10-27"},{"lineNumber":228,"author":{"gitId":"crabnuggets"},"content":"1. Make props","lastModifiedDate":"2021-10-27"},{"lineNumber":229,"author":{"gitId":"crabnuggets"},"content":"```","lastModifiedDate":"2021-10-27"},{"lineNumber":230,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":231,"author":{"gitId":"crabnuggets"},"content":"### 4.3 Mark an Event as `done`","lastModifiedDate":"2021-10-27"},{"lineNumber":232,"author":{"gitId":"Alvinlj00"},"content":"This will allow you to mark an event as done after the event is over. ","lastModifiedDate":"2021-10-28"},{"lineNumber":233,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":234,"author":{"gitId":"Alvinlj00"},"content":"**Format:** `done -e EVENT_ID`","lastModifiedDate":"2021-10-28"},{"lineNumber":235,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":236,"author":{"gitId":"Alvinlj00"},"content":"**Example:** `done -e 1`","lastModifiedDate":"2021-10-28"},{"lineNumber":237,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":238,"author":{"gitId":"Alvinlj00"},"content":"**Expected Output:**","lastModifiedDate":"2021-10-28"},{"lineNumber":239,"author":{"gitId":"Alvinlj00"},"content":"```","lastModifiedDate":"2021-10-28"},{"lineNumber":240,"author":{"gitId":"Alvinlj00"},"content":"\u003e done -e 1","lastModifiedDate":"2021-10-28"},{"lineNumber":241,"author":{"gitId":"Alvinlj00"},"content":"```","lastModifiedDate":"2021-10-28"},{"lineNumber":242,"author":{"gitId":"Alvinlj00"},"content":"```","lastModifiedDate":"2021-10-28"},{"lineNumber":243,"author":{"gitId":"Alvinlj00"},"content":"Nice! I have marked these items as done!","lastModifiedDate":"2021-10-28"},{"lineNumber":244,"author":{"gitId":"Alvinlj00"},"content":"[E][X] Tembusu Concert (at: 19 Feb 2022 - 20:00)","lastModifiedDate":"2021-10-28"},{"lineNumber":245,"author":{"gitId":"Alvinlj00"},"content":"--------LIST UPDATED--------","lastModifiedDate":"2021-10-28"},{"lineNumber":246,"author":{"gitId":"Alvinlj00"},"content":"```","lastModifiedDate":"2021-10-28"},{"lineNumber":247,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":248,"author":{"gitId":"crabnuggets"},"content":"### 4.4 Mark an Event as `undone`","lastModifiedDate":"2021-10-27"},{"lineNumber":249,"author":{"gitId":"Alvinlj00"},"content":"This will allow you to undo an event that was marked done if the event is not over yet.","lastModifiedDate":"2021-10-28"},{"lineNumber":250,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":251,"author":{"gitId":"Alvinlj00"},"content":"**Format:** `undo -e EVENT_ID`","lastModifiedDate":"2021-10-28"},{"lineNumber":252,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":253,"author":{"gitId":"Alvinlj00"},"content":"**Example:** `undo -e 1`","lastModifiedDate":"2021-10-28"},{"lineNumber":254,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":255,"author":{"gitId":"Alvinlj00"},"content":"**Expected Output:**","lastModifiedDate":"2021-10-28"},{"lineNumber":256,"author":{"gitId":"Alvinlj00"},"content":"```","lastModifiedDate":"2021-10-28"},{"lineNumber":257,"author":{"gitId":"Alvinlj00"},"content":"Ok, I have unmarked these items:","lastModifiedDate":"2021-10-28"},{"lineNumber":258,"author":{"gitId":"Alvinlj00"},"content":"[E][ ] Tembusu Concert (at: 19 Feb 2022 - 20:00)","lastModifiedDate":"2021-10-28"},{"lineNumber":259,"author":{"gitId":"Alvinlj00"},"content":"--------LIST UPDATED--------","lastModifiedDate":"2021-10-28"},{"lineNumber":260,"author":{"gitId":"Alvinlj00"},"content":"```","lastModifiedDate":"2021-10-28"},{"lineNumber":261,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":262,"author":{"gitId":"crabnuggets"},"content":"### 4.5 Delete an Event","lastModifiedDate":"2021-10-27"},{"lineNumber":263,"author":{"gitId":"alwinangys"},"content":"Deletes an event from the list.","lastModifiedDate":"2021-10-27"},{"lineNumber":264,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":265,"author":{"gitId":"alwinangys"},"content":"**Format:** `delete -e EVENT_ID`","lastModifiedDate":"2021-10-27"},{"lineNumber":266,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":267,"author":{"gitId":"alwinangys"},"content":"**Example:** `delete -e 1`","lastModifiedDate":"2021-10-27"},{"lineNumber":268,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":269,"author":{"gitId":"alwinangys"},"content":"\u003e 🚨 If you choose to `delete` an event, all of its associated tasks will be deleted too.","lastModifiedDate":"2021-10-27"},{"lineNumber":270,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":271,"author":{"gitId":"alwinangys"},"content":"**Expected Output:**","lastModifiedDate":"2021-10-27"},{"lineNumber":272,"author":{"gitId":"alwinangys"},"content":"```","lastModifiedDate":"2021-10-27"},{"lineNumber":273,"author":{"gitId":"alwinangys"},"content":"\u003e delete -e 1","lastModifiedDate":"2021-10-27"},{"lineNumber":274,"author":{"gitId":"alwinangys"},"content":"```","lastModifiedDate":"2021-10-27"},{"lineNumber":275,"author":{"gitId":"alwinangys"},"content":"```","lastModifiedDate":"2021-10-27"},{"lineNumber":276,"author":{"gitId":"alwinangys"},"content":"This event has been removed: Tembusu Concert","lastModifiedDate":"2021-10-27"},{"lineNumber":277,"author":{"gitId":"alwinangys"},"content":"```","lastModifiedDate":"2021-10-27"},{"lineNumber":278,"author":{"gitId":"crabnuggets"},"content":"### 4.6 Delete all Events","lastModifiedDate":"2021-10-27"},{"lineNumber":279,"author":{"gitId":"alwinangys"},"content":"This allows you to delete all events.","lastModifiedDate":"2021-10-27"},{"lineNumber":280,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":281,"author":{"gitId":"alwinangys"},"content":"\u003e 🚨 As this can potentially affect a huge amount of your data, the program will confirm with you again if you want to delete all events.","lastModifiedDate":"2021-10-27"},{"lineNumber":282,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":283,"author":{"gitId":"alwinangys"},"content":"**Format:** `delete all`","lastModifiedDate":"2021-10-27"},{"lineNumber":284,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":285,"author":{"gitId":"alwinangys"},"content":"After entering `delete all`, this is what you will see:","lastModifiedDate":"2021-10-27"},{"lineNumber":286,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":287,"author":{"gitId":"alwinangys"},"content":"```","lastModifiedDate":"2021-10-27"},{"lineNumber":288,"author":{"gitId":"alwinangys"},"content":"\u003e delete all","lastModifiedDate":"2021-10-27"},{"lineNumber":289,"author":{"gitId":"alwinangys"},"content":"```","lastModifiedDate":"2021-10-27"},{"lineNumber":290,"author":{"gitId":"alwinangys"},"content":"```","lastModifiedDate":"2021-10-27"},{"lineNumber":291,"author":{"gitId":"alwinangys"},"content":"Are you sure you want to delete all events? (Y/N)","lastModifiedDate":"2021-10-27"},{"lineNumber":292,"author":{"gitId":"alwinangys"},"content":"\u003e Y","lastModifiedDate":"2021-10-27"},{"lineNumber":293,"author":{"gitId":"alwinangys"},"content":"I have deleted everything!","lastModifiedDate":"2021-10-27"},{"lineNumber":294,"author":{"gitId":"alwinangys"},"content":"```","lastModifiedDate":"2021-10-27"},{"lineNumber":295,"author":{"gitId":"alwinangys"},"content":"\u003e 🚨 Once you confirmed that you want to delete all events, the action is irreversible!","lastModifiedDate":"2021-10-27"},{"lineNumber":296,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":297,"author":{"gitId":"crabnuggets"},"content":"[Back to table of contents](#table-of-contents)","lastModifiedDate":"2021-10-27"},{"lineNumber":298,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":299,"author":{"gitId":"crabnuggets"},"content":"### 4.7 Find Event(s) based on keyword(s)","lastModifiedDate":"2021-10-27"},{"lineNumber":300,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":301,"author":{"gitId":"crabnuggets"},"content":"### 4.8 Display next upcoming Event","lastModifiedDate":"2021-10-27"},{"lineNumber":302,"author":{"gitId":"antrikshv"},"content":"The next command displays to you the next upcoming event or task of an event on the calendar","lastModifiedDate":"2021-10-29"},{"lineNumber":303,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":304,"author":{"gitId":"antrikshv"},"content":"To display the next upcoming event we key in `next event`","lastModifiedDate":"2021-10-29"},{"lineNumber":305,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":306,"author":{"gitId":"antrikshv"},"content":"**Format:** `next event`","lastModifiedDate":"2021-10-29"},{"lineNumber":307,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":308,"author":{"gitId":"antrikshv"},"content":"**Expected Output:**","lastModifiedDate":"2021-10-29"},{"lineNumber":309,"author":{"gitId":"antrikshv"},"content":"```","lastModifiedDate":"2021-10-29"},{"lineNumber":310,"author":{"gitId":"antrikshv"},"content":"\u003e next event","lastModifiedDate":"2021-10-29"},{"lineNumber":311,"author":{"gitId":"antrikshv"},"content":"```","lastModifiedDate":"2021-10-29"},{"lineNumber":312,"author":{"gitId":"antrikshv"},"content":"```","lastModifiedDate":"2021-10-29"},{"lineNumber":313,"author":{"gitId":"antrikshv"},"content":"Title: Tembusu Concert","lastModifiedDate":"2021-10-29"},{"lineNumber":314,"author":{"gitId":"antrikshv"},"content":"Date: 19 Feb 2022 - 20:00","lastModifiedDate":"2021-10-29"},{"lineNumber":315,"author":{"gitId":"antrikshv"},"content":"Description: Semesterly Arts Week Fundraiser","lastModifiedDate":"2021-10-29"},{"lineNumber":316,"author":{"gitId":"antrikshv"},"content":"Venue: MPH","lastModifiedDate":"2021-10-29"},{"lineNumber":317,"author":{"gitId":"antrikshv"},"content":"Budget: $1000.0","lastModifiedDate":"2021-10-29"},{"lineNumber":318,"author":{"gitId":"antrikshv"},"content":"Tasks:","lastModifiedDate":"2021-10-29"},{"lineNumber":319,"author":{"gitId":"antrikshv"},"content":"1. Make props","lastModifiedDate":"2021-10-29"},{"lineNumber":320,"author":{"gitId":"antrikshv"},"content":"```","lastModifiedDate":"2021-10-29"},{"lineNumber":321,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":322,"author":{"gitId":"antrikshv"},"content":"To display the next upcoming task we key in `next task`","lastModifiedDate":"2021-10-29"},{"lineNumber":323,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":324,"author":{"gitId":"antrikshv"},"content":"**Format:** `next task EVENT_ID`","lastModifiedDate":"2021-10-29"},{"lineNumber":325,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":326,"author":{"gitId":"antrikshv"},"content":"**Expected Output:**","lastModifiedDate":"2021-10-29"},{"lineNumber":327,"author":{"gitId":"antrikshv"},"content":"```","lastModifiedDate":"2021-10-29"},{"lineNumber":328,"author":{"gitId":"antrikshv"},"content":"\u003e next task 1","lastModifiedDate":"2021-10-29"},{"lineNumber":329,"author":{"gitId":"antrikshv"},"content":"```","lastModifiedDate":"2021-10-29"},{"lineNumber":330,"author":{"gitId":"antrikshv"},"content":"```","lastModifiedDate":"2021-10-29"},{"lineNumber":331,"author":{"gitId":"antrikshv"},"content":"Title: Make props","lastModifiedDate":"2021-10-29"},{"lineNumber":332,"author":{"gitId":"antrikshv"},"content":"Date: 18 Feb 2022 - 20:00","lastModifiedDate":"2021-10-29"},{"lineNumber":333,"author":{"gitId":"antrikshv"},"content":"Description: Semesterly Arts Week Fundraiser","lastModifiedDate":"2021-10-29"},{"lineNumber":334,"author":{"gitId":"antrikshv"},"content":"Members:","lastModifiedDate":"2021-10-29"},{"lineNumber":335,"author":{"gitId":"antrikshv"},"content":"1. John Doe","lastModifiedDate":"2021-10-29"},{"lineNumber":336,"author":{"gitId":"antrikshv"},"content":"```","lastModifiedDate":"2021-10-29"},{"lineNumber":337,"author":{"gitId":"crabnuggets"},"content":"### 4.9 Update an Event","lastModifiedDate":"2021-10-27"},{"lineNumber":338,"author":{"gitId":"antrikshv"},"content":"The Update command can be used to update details of events and tasks","lastModifiedDate":"2021-10-29"},{"lineNumber":339,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":340,"author":{"gitId":"antrikshv"},"content":"\u003e 🚨 Any updates made is irreversible! So make updates with caution.","lastModifiedDate":"2021-10-29"},{"lineNumber":341,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":342,"author":{"gitId":"antrikshv"},"content":"To begin the update process we first key in `update EVENT_ID`","lastModifiedDate":"2021-10-29"},{"lineNumber":343,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":344,"author":{"gitId":"antrikshv"},"content":"**Format:** `update EVENT_ID`","lastModifiedDate":"2021-10-29"},{"lineNumber":345,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":346,"author":{"gitId":"antrikshv"},"content":"**Expected Output:**","lastModifiedDate":"2021-10-29"},{"lineNumber":347,"author":{"gitId":"antrikshv"},"content":"```","lastModifiedDate":"2021-10-29"},{"lineNumber":348,"author":{"gitId":"antrikshv"},"content":"\u003e update 3","lastModifiedDate":"2021-10-29"},{"lineNumber":349,"author":{"gitId":"antrikshv"},"content":"```","lastModifiedDate":"2021-10-29"},{"lineNumber":350,"author":{"gitId":"antrikshv"},"content":"```","lastModifiedDate":"2021-10-29"},{"lineNumber":351,"author":{"gitId":"antrikshv"},"content":"Here are the details of the event:","lastModifiedDate":"2021-10-29"},{"lineNumber":352,"author":{"gitId":"antrikshv"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-29"},{"lineNumber":353,"author":{"gitId":"antrikshv"},"content":"Title: Peppa Pig\u0027s Concert","lastModifiedDate":"2021-10-29"},{"lineNumber":354,"author":{"gitId":"antrikshv"},"content":"Date: 19 Feb 2022 - 20:00","lastModifiedDate":"2021-10-29"},{"lineNumber":355,"author":{"gitId":"antrikshv"},"content":"Description: Asia world tour","lastModifiedDate":"2021-10-29"},{"lineNumber":356,"author":{"gitId":"antrikshv"},"content":"Venue: Indoor Stadium","lastModifiedDate":"2021-10-29"},{"lineNumber":357,"author":{"gitId":"antrikshv"},"content":"Budget: $1000.9","lastModifiedDate":"2021-10-29"},{"lineNumber":358,"author":{"gitId":"antrikshv"},"content":"Tasks: ","lastModifiedDate":"2021-10-29"},{"lineNumber":359,"author":{"gitId":"antrikshv"},"content":"1. [T][X] Hype myself up (by: 19 Feb 2022 - 19:50)","lastModifiedDate":"2021-10-29"},{"lineNumber":360,"author":{"gitId":"antrikshv"},"content":"2. [T][ ] Enter venue (by: 19 Feb 2022 - 19:55)","lastModifiedDate":"2021-10-29"},{"lineNumber":361,"author":{"gitId":"antrikshv"},"content":"_________________________________________________________________________________","lastModifiedDate":"2021-10-29"},{"lineNumber":362,"author":{"gitId":"antrikshv"},"content":"Please type the item you would like to update in the following manner ","lastModifiedDate":"2021-10-29"},{"lineNumber":363,"author":{"gitId":"antrikshv"},"content":"-----------------------------------------------------------------------   ","lastModifiedDate":"2021-10-29"},{"lineNumber":364,"author":{"gitId":"antrikshv"},"content":"title/[NEW NAME]   ","lastModifiedDate":"2021-10-29"},{"lineNumber":365,"author":{"gitId":"antrikshv"},"content":"date/[NEW DATE[d/dd-MM-yyyy HHmm]]","lastModifiedDate":"2021-10-29"},{"lineNumber":366,"author":{"gitId":"antrikshv"},"content":"description/[NEW DESCRIPTION]","lastModifiedDate":"2021-10-29"},{"lineNumber":367,"author":{"gitId":"antrikshv"},"content":"venue/[NEW VENUE]","lastModifiedDate":"2021-10-29"},{"lineNumber":368,"author":{"gitId":"antrikshv"},"content":"budget/[NEW BUDGET]","lastModifiedDate":"2021-10-29"},{"lineNumber":369,"author":{"gitId":"antrikshv"},"content":"task/[TASK NUM YOU WANT TO UPDATE]","lastModifiedDate":"2021-10-29"},{"lineNumber":370,"author":{"gitId":"antrikshv"},"content":"You may type more then one update at a given time but separate them with a [\u003e]","lastModifiedDate":"2021-10-29"},{"lineNumber":371,"author":{"gitId":"antrikshv"},"content":"_________________________________________________________________________________","lastModifiedDate":"2021-10-29"},{"lineNumber":372,"author":{"gitId":"antrikshv"},"content":"```","lastModifiedDate":"2021-10-29"},{"lineNumber":373,"author":{"gitId":"antrikshv"},"content":"We can then update the detail of the specifc event by following the list of commands below to update. We can update multiple in a single like by seperating each item by a `\u003e`.","lastModifiedDate":"2021-10-29"},{"lineNumber":374,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":375,"author":{"gitId":"antrikshv"},"content":"1. `title/NEW_NAME` to update the title of the event","lastModifiedDate":"2021-10-29"},{"lineNumber":376,"author":{"gitId":"antrikshv"},"content":"2. `date/[dd-MM-yyyy HHmm]` to update the date of the event","lastModifiedDate":"2021-10-29"},{"lineNumber":377,"author":{"gitId":"antrikshv"},"content":"3. `description/[NEW DESCRIPTION]` to update the description of the event","lastModifiedDate":"2021-10-29"},{"lineNumber":378,"author":{"gitId":"antrikshv"},"content":"4. `venue/[NEW VENUE]` to update the venue of the event","lastModifiedDate":"2021-10-29"},{"lineNumber":379,"author":{"gitId":"antrikshv"},"content":"5. `budget/[NEW BUDGET]`to update the budget of the event","lastModifiedDate":"2021-10-29"},{"lineNumber":380,"author":{"gitId":"antrikshv"},"content":"6. `task/[TASK NUM YOU WANT TO UPDATE]` to update information on the taak attached to thes events","lastModifiedDate":"2021-10-29"},{"lineNumber":381,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":382,"author":{"gitId":"antrikshv"},"content":"We can then update the detail of the specifc task by keying in `task/[TASK NUM YOU WANT TO UPDATE]` in this segment.","lastModifiedDate":"2021-10-29"},{"lineNumber":383,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":384,"author":{"gitId":"antrikshv"},"content":"**Expected Output:**","lastModifiedDate":"2021-10-29"},{"lineNumber":385,"author":{"gitId":"antrikshv"},"content":"```","lastModifiedDate":"2021-10-29"},{"lineNumber":386,"author":{"gitId":"antrikshv"},"content":"\u003e task/1","lastModifiedDate":"2021-10-29"},{"lineNumber":387,"author":{"gitId":"antrikshv"},"content":"```","lastModifiedDate":"2021-10-29"},{"lineNumber":388,"author":{"gitId":"antrikshv"},"content":"```","lastModifiedDate":"2021-10-29"},{"lineNumber":389,"author":{"gitId":"antrikshv"},"content":"Title: Hype myself up","lastModifiedDate":"2021-10-29"},{"lineNumber":390,"author":{"gitId":"antrikshv"},"content":"Deadline: 19 Feb 2022 - 19:50","lastModifiedDate":"2021-10-29"},{"lineNumber":391,"author":{"gitId":"antrikshv"},"content":"Description: Drink lots of sugar","lastModifiedDate":"2021-10-29"},{"lineNumber":392,"author":{"gitId":"antrikshv"},"content":"Members: ","lastModifiedDate":"2021-10-29"},{"lineNumber":393,"author":{"gitId":"antrikshv"},"content":"1. John Doe","lastModifiedDate":"2021-10-29"},{"lineNumber":394,"author":{"gitId":"antrikshv"},"content":"2. Jane Doe","lastModifiedDate":"2021-10-29"},{"lineNumber":395,"author":{"gitId":"antrikshv"},"content":"____________________________________________________________________________________","lastModifiedDate":"2021-10-29"},{"lineNumber":396,"author":{"gitId":"antrikshv"},"content":"Please type the item for task you would like to update in the following manner ","lastModifiedDate":"2021-10-29"},{"lineNumber":397,"author":{"gitId":"antrikshv"},"content":"-----------------------------------------------------------------------","lastModifiedDate":"2021-10-29"},{"lineNumber":398,"author":{"gitId":"antrikshv"},"content":"title/[NEW NAME]   ","lastModifiedDate":"2021-10-29"},{"lineNumber":399,"author":{"gitId":"antrikshv"},"content":"deadline/[NEW DATE[d/dd-MM-yyyy HHmm]]","lastModifiedDate":"2021-10-29"},{"lineNumber":400,"author":{"gitId":"antrikshv"},"content":"description/[NEW DESCRIPTION]","lastModifiedDate":"2021-10-29"},{"lineNumber":401,"author":{"gitId":"antrikshv"},"content":"member/[MEMBER INDEX]","lastModifiedDate":"2021-10-29"},{"lineNumber":402,"author":{"gitId":"antrikshv"},"content":"remove/[MEMBER INDEX]","lastModifiedDate":"2021-10-29"},{"lineNumber":403,"author":{"gitId":"antrikshv"},"content":"You may type more then one update at a given time but separate them with a [\u003e]","lastModifiedDate":"2021-10-29"},{"lineNumber":404,"author":{"gitId":"antrikshv"},"content":"____________________________________________________________________________________","lastModifiedDate":"2021-10-29"},{"lineNumber":405,"author":{"gitId":"antrikshv"},"content":"```","lastModifiedDate":"2021-10-29"},{"lineNumber":406,"author":{"gitId":"antrikshv"},"content":"We can then update the details of the specifc task by following the list of commands below to update. We can update multiple in a single like by seperating each item by a `\u003e`.","lastModifiedDate":"2021-10-29"},{"lineNumber":407,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":408,"author":{"gitId":"antrikshv"},"content":"1. `title/NEW_NAME` to update the title of the event","lastModifiedDate":"2021-10-29"},{"lineNumber":409,"author":{"gitId":"antrikshv"},"content":"2. `date/[dd-MM-yyyy HHmm]` to update the date of the event","lastModifiedDate":"2021-10-29"},{"lineNumber":410,"author":{"gitId":"antrikshv"},"content":"3. `description/[NEW DESCRIPTION]` to update the description of the event","lastModifiedDate":"2021-10-29"},{"lineNumber":411,"author":{"gitId":"antrikshv"},"content":"4. `member/[MEMBER INDEX]` to change a member assigned to this task","lastModifiedDate":"2021-10-29"},{"lineNumber":412,"author":{"gitId":"antrikshv"},"content":"5. `remove/[MEMBER INDEX]` to remove a member assigned to this task","lastModifiedDate":"2021-10-29"},{"lineNumber":413,"author":{"gitId":"crabnuggets"},"content":"---","lastModifiedDate":"2021-10-27"},{"lineNumber":414,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":415,"author":{"gitId":"crabnuggets"},"content":"## 5. Task Commands","lastModifiedDate":"2021-10-27"},{"lineNumber":416,"author":{"gitId":"crabnuggets"},"content":"This section contains the available commands for managing tasks for events in **SLAM**. Because all tasks belong to a specific event in your catalog, an event must first be selected ([see Section 4.2 on Selecting Events](#42-select-an-event)) before any of the below commands can be used.","lastModifiedDate":"2021-10-29"},{"lineNumber":417,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":418,"author":{"gitId":"crabnuggets"},"content":"### 5.1 Add a task ","lastModifiedDate":"2021-10-27"},{"lineNumber":419,"author":{"gitId":"crabnuggets"},"content":"Note: For this current version of **SLAM**, pre-selecting an `Event` is not required for this command.","lastModifiedDate":"2021-10-27"},{"lineNumber":420,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":421,"author":{"gitId":"Alvinlj00"},"content":"**Prerequisite:** You must have added at least one event and one member before adding a task.","lastModifiedDate":"2021-10-28"},{"lineNumber":422,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":423,"author":{"gitId":"Alvinlj00"},"content":"Adds a task to an existing event in your current catalog of events.","lastModifiedDate":"2021-10-28"},{"lineNumber":424,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":425,"author":{"gitId":"Alvinlj00"},"content":"To add a task, first describe the task using the following command:","lastModifiedDate":"2021-10-28"},{"lineNumber":426,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":427,"author":{"gitId":"Alvinlj00"},"content":"**Format:** `add -t n/TITLE d/DATE_\u0026_TIME`","lastModifiedDate":"2021-10-28"},{"lineNumber":428,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":429,"author":{"gitId":"Alvinlj00"},"content":"**Example:** `add -t n/Buy stage lights d/10-11-2021 1600`","lastModifiedDate":"2021-10-28"},{"lineNumber":430,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":431,"author":{"gitId":"crabnuggets"},"content":"### 5.2 Mark a Task as `done`","lastModifiedDate":"2021-10-27"},{"lineNumber":432,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":433,"author":{"gitId":"crabnuggets"},"content":"### 5.3 Mark a Task as `undone`","lastModifiedDate":"2021-10-27"},{"lineNumber":434,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":435,"author":{"gitId":"crabnuggets"},"content":"### 5.4 Delete a Task","lastModifiedDate":"2021-10-27"},{"lineNumber":436,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":437,"author":{"gitId":"crabnuggets"},"content":"[Back to table of contents](#table-of-contents)","lastModifiedDate":"2021-10-27"},{"lineNumber":438,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":439,"author":{"gitId":"crabnuggets"},"content":"---","lastModifiedDate":"2021-10-27"},{"lineNumber":440,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":441,"author":{"gitId":"crabnuggets"},"content":"## 6. Member Commands","lastModifiedDate":"2021-10-27"},{"lineNumber":442,"author":{"gitId":"crabnuggets"},"content":"This section contains the available commands for managing members in `SLAM`.","lastModifiedDate":"2021-10-27"},{"lineNumber":443,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":444,"author":{"gitId":"crabnuggets"},"content":"### 6.1 Add a member ","lastModifiedDate":"2021-10-27"},{"lineNumber":445,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":446,"author":{"gitId":"crabnuggets"},"content":"### 6.2 Delete a member","lastModifiedDate":"2021-10-27"},{"lineNumber":447,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":448,"author":{"gitId":"crabnuggets"},"content":"[Back to table of contents](#table-of-contents)","lastModifiedDate":"2021-10-27"},{"lineNumber":449,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":450,"author":{"gitId":"crabnuggets"},"content":"---","lastModifiedDate":"2021-10-27"},{"lineNumber":451,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":452,"author":{"gitId":"crabnuggets"},"content":"## 7. Saving the Data","lastModifiedDate":"2021-10-27"},{"lineNumber":453,"author":{"gitId":"crabnuggets"},"content":"**SLAM** data is saved in the hard disk automatically after you exit the program. There is no need to save manually.","lastModifiedDate":"2021-10-27"},{"lineNumber":454,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":455,"author":{"gitId":"crabnuggets"},"content":"[Back to table of contents](#table-of-contents)","lastModifiedDate":"2021-10-27"},{"lineNumber":456,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":457,"author":{"gitId":"crabnuggets"},"content":"## 8. FAQ","lastModifiedDate":"2021-10-27"},{"lineNumber":458,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":459,"author":{"gitId":"crabnuggets"},"content":"\u003e**Q**: How do I transfer my data to another computer? ","lastModifiedDate":"2021-10-27"},{"lineNumber":460,"author":{"gitId":"crabnuggets"},"content":"\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":461,"author":{"gitId":"crabnuggets"},"content":"\u003e**A**: You can transfer your data to another computer by copying the `data` folder found in the directory where SLAM was used, and pasting it in the directory of the device where **SLAM** is intended to be run.","lastModifiedDate":"2021-10-27"},{"lineNumber":462,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":463,"author":{"gitId":"crabnuggets"},"content":"\u003e**Q**: Can I delete all members from my current roster using `delete all`? ","lastModifiedDate":"2021-10-27"},{"lineNumber":464,"author":{"gitId":"crabnuggets"},"content":"\u003e ","lastModifiedDate":"2021-10-27"},{"lineNumber":465,"author":{"gitId":"crabnuggets"},"content":"\u003e**A**: The current verson of **SLAM** (2.0) does not allow for this. We are working on this on a future update for v2.1.","lastModifiedDate":"2021-10-27"},{"lineNumber":466,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":467,"author":{"gitId":"crabnuggets"},"content":"\u003e**Q**: Will deleting a member from my roster remove that member from all tasks he/she is assigned to? ","lastModifiedDate":"2021-10-27"},{"lineNumber":468,"author":{"gitId":"crabnuggets"},"content":"\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":469,"author":{"gitId":"crabnuggets"},"content":"\u003e**A**: SLAM 2.0 does not support this functionality and we are working on a fix for this for our v2.1 update. Hang on tight in the meanwhile and ensure your members produce work for you before kicking them out! 😉","lastModifiedDate":"2021-10-27"},{"lineNumber":470,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":471,"author":{"gitId":"crabnuggets"},"content":"[Back to table of contents](#table-of-contents)","lastModifiedDate":"2021-10-27"},{"lineNumber":472,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":473,"author":{"gitId":"crabnuggets"},"content":"## 9. Command Summary","lastModifiedDate":"2021-10-27"},{"lineNumber":474,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":475,"author":{"gitId":"crabnuggets"},"content":"### General commands","lastModifiedDate":"2021-10-27"},{"lineNumber":476,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":477,"author":{"gitId":"crabnuggets"},"content":"| **Command**               | **Format**                                          |","lastModifiedDate":"2021-10-29"},{"lineNumber":478,"author":{"gitId":"crabnuggets"},"content":"|---------------------------|-----------------------------------------------------|","lastModifiedDate":"2021-10-27"},{"lineNumber":479,"author":{"gitId":"crabnuggets"},"content":"| Display user manual       | `help`                                              |","lastModifiedDate":"2021-10-27"},{"lineNumber":480,"author":{"gitId":"crabnuggets"},"content":"| List events/members/tasks | For events: `list`\u003cbr /\u003eFor tasks: `list EVENT_INDEX -t`\u003cbr /\u003eFor members: `list -m`\u003cbr /\u003eFor members assigned to a task: `list EVENT_INDEX t/TASK_INDEX`|","lastModifiedDate":"2021-10-27"},{"lineNumber":481,"author":{"gitId":"crabnuggets"},"content":"| Exit program              | `bye`                                               |","lastModifiedDate":"2021-10-27"},{"lineNumber":482,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":483,"author":{"gitId":"crabnuggets"},"content":"### Event commands","lastModifiedDate":"2021-10-27"},{"lineNumber":484,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":485,"author":{"gitId":"crabnuggets"},"content":"| **Command**           | **Format**                                          |","lastModifiedDate":"2021-10-29"},{"lineNumber":486,"author":{"gitId":"crabnuggets"},"content":"|-----------------------|-----------------------------------------------------|","lastModifiedDate":"2021-10-27"},{"lineNumber":487,"author":{"gitId":"crabnuggets"},"content":"| Add an event          | `add -e n/TITLE d/dd-MM-yyyy HHmm v/VENUE b/BUDGET` |","lastModifiedDate":"2021-10-27"},{"lineNumber":488,"author":{"gitId":"crabnuggets"},"content":"| Delete an event       | `delete -e INDEX`                                   |","lastModifiedDate":"2021-10-27"},{"lineNumber":489,"author":{"gitId":"crabnuggets"},"content":"| Delete all events     | `delete all`                                        |","lastModifiedDate":"2021-10-27"},{"lineNumber":490,"author":{"gitId":"crabnuggets"},"content":"| Select an event       | `select -e INDEX`                                   | ","lastModifiedDate":"2021-10-27"},{"lineNumber":491,"author":{"gitId":"crabnuggets"},"content":"| Find event(s)         | `find EVENT_KEYWORD(S)`                             |","lastModifiedDate":"2021-10-27"},{"lineNumber":492,"author":{"gitId":"crabnuggets"},"content":"| Mark event as done    | `done -e INDEX`                                     | ","lastModifiedDate":"2021-10-27"},{"lineNumber":493,"author":{"gitId":"crabnuggets"},"content":"| Un-mark event as done | `undo -e INDEX`                                     |","lastModifiedDate":"2021-10-27"},{"lineNumber":494,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":495,"author":{"gitId":"crabnuggets"},"content":"### Task commands","lastModifiedDate":"2021-10-27"},{"lineNumber":496,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":497,"author":{"gitId":"crabnuggets"},"content":"| **Command**           | **Format**                    |","lastModifiedDate":"2021-10-29"},{"lineNumber":498,"author":{"gitId":"crabnuggets"},"content":"|-----------------------|-------------------------------|","lastModifiedDate":"2021-10-27"},{"lineNumber":499,"author":{"gitId":"crabnuggets"},"content":"| Add a task            | `add -t n/TITLE d/dd-MM-yyyy` |","lastModifiedDate":"2021-10-27"},{"lineNumber":500,"author":{"gitId":"crabnuggets"},"content":"| Delete a task         | `delete -t INDEX`             | ","lastModifiedDate":"2021-10-27"},{"lineNumber":501,"author":{"gitId":"crabnuggets"},"content":"| Select a task         | `select -t INDEX`             |","lastModifiedDate":"2021-10-27"},{"lineNumber":502,"author":{"gitId":"crabnuggets"},"content":"| Mark a task as done   | `done -t INDEX`               |","lastModifiedDate":"2021-10-27"},{"lineNumber":503,"author":{"gitId":"crabnuggets"},"content":"| Un-mark a task as done| `undo -t INDEX`               |","lastModifiedDate":"2021-10-27"},{"lineNumber":504,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":505,"author":{"gitId":"crabnuggets"},"content":"### Member commands","lastModifiedDate":"2021-10-27"},{"lineNumber":506,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":507,"author":{"gitId":"crabnuggets"},"content":"| **Command**     | **Format**              |","lastModifiedDate":"2021-10-29"},{"lineNumber":508,"author":{"gitId":"crabnuggets"},"content":"|-----------------|-------------------------|","lastModifiedDate":"2021-10-27"},{"lineNumber":509,"author":{"gitId":"crabnuggets"},"content":"| Add a member    | `add -m MEMBER_NAME`    | ","lastModifiedDate":"2021-10-27"},{"lineNumber":510,"author":{"gitId":"crabnuggets"},"content":"| Delete a member | `delete -m MEMBER_NAME` |","lastModifiedDate":"2021-10-27"},{"lineNumber":511,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":512,"author":{"gitId":"crabnuggets"},"content":"[Back to table of contents](#table-of-contents)","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"antrikshv":107,"Alvinlj00":57,"crabnuggets":288,"-":24,"alwinangys":36}},{"path":"docs/diagrams/ListDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"antrikshv"},"content":"@startuml","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"antrikshv"},"content":"title ListCommand","lastModifiedDate":"2021-10-27"},{"lineNumber":3,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"antrikshv"},"content":"participant \":Duke\" as Duke","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"antrikshv"},"content":"activate Duke","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"antrikshv"},"content":"create \":Parser\" as Parser","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"antrikshv"},"content":"Duke -\u003e Parser","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"antrikshv"},"content":"activate Parser #yellow","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"antrikshv"},"content":"create \":ListCommand\" as ListCommand","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"antrikshv"},"content":"Parser -\u003e ListCommand: ListCommand(command)","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"antrikshv"},"content":"activate ListCommand #lightblue","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"antrikshv"},"content":"ListCommand -\u003e ListCommand: checkForEmptyCells(command)","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"antrikshv"},"content":"activate ListCommand #lightgreen","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"antrikshv"},"content":"return","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"antrikshv"},"content":"return","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"antrikshv"},"content":"return","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"antrikshv"},"content":"Duke -\u003e ListCommand","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"antrikshv"},"content":"activate ListCommand #lightblue","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"antrikshv"},"content":"ListCommand -\u003e ListCommand: execute()","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"antrikshv"},"content":"activate ListCommand #lightgreen","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"antrikshv"},"content":"return","lastModifiedDate":"2021-10-27"},{"lineNumber":25,"author":{"gitId":"antrikshv"},"content":"ListCommand --\u003e Duke : CommandResult","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"antrikshv"},"content":"deactivate","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":28,"author":{"gitId":"antrikshv"},"content":"@enduml","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"antrikshv":28}},{"path":"docs/diagrams/LoadDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"crabnuggets"},"content":"@startuml","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"crabnuggets"},"content":"title Load Functionality","lastModifiedDate":"2021-10-27"},{"lineNumber":3,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"crabnuggets"},"content":"-\u003e \":StorageFile\": loadSaveFile(memberRoster : MemberRoster\\n eventCatalog : EventCatalog)","lastModifiedDate":"2021-11-07"},{"lineNumber":5,"author":{"gitId":"crabnuggets"},"content":"activate \":StorageFile\" #yellow","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"crabnuggets"},"content":"|||","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"crabnuggets"},"content":"\":StorageFile\" -\u003e \":File\" : File(DEFAULT_FILE_PATH)","lastModifiedDate":"2021-11-07"},{"lineNumber":8,"author":{"gitId":"crabnuggets"},"content":"activate \":File\" #lightblue","lastModifiedDate":"2021-11-07"},{"lineNumber":9,"author":{"gitId":"crabnuggets"},"content":"return saveFile","lastModifiedDate":"2021-11-07"},{"lineNumber":10,"author":{"gitId":"crabnuggets"},"content":"|||","lastModifiedDate":"2021-11-07"},{"lineNumber":11,"author":{"gitId":"crabnuggets"},"content":"\":StorageFile\" -\u003e \":StorageFile\" : getStringsFromFile","lastModifiedDate":"2021-11-07"},{"lineNumber":12,"author":{"gitId":"crabnuggets"},"content":"activate \":StorageFile\"","lastModifiedDate":"2021-11-07"},{"lineNumber":13,"author":{"gitId":"crabnuggets"},"content":"return encodedLines","lastModifiedDate":"2021-11-07"},{"lineNumber":14,"author":{"gitId":"crabnuggets"},"content":"|||","lastModifiedDate":"2021-11-07"},{"lineNumber":15,"author":{"gitId":"crabnuggets"},"content":"loop encodedLines","lastModifiedDate":"2021-11-07"},{"lineNumber":16,"author":{"gitId":"crabnuggets"},"content":"|||","lastModifiedDate":"2021-11-07"},{"lineNumber":17,"author":{"gitId":"crabnuggets"},"content":"    alt classType \u003d\u003d \u0027m\u0027 ||\\n classType\u003d\u003d\u0027e\u0027","lastModifiedDate":"2021-11-07"},{"lineNumber":18,"author":{"gitId":"crabnuggets"},"content":"    |||","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"crabnuggets"},"content":"        \":StorageFile\" -\u003e \":StorageFile\": add","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"crabnuggets"},"content":"        note right: Adds member/event to the respective roster/catalog","lastModifiedDate":"2021-11-07"},{"lineNumber":21,"author":{"gitId":"crabnuggets"},"content":"        activate \":StorageFile\" #orange","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":23,"author":{"gitId":"crabnuggets"},"content":"        \":StorageFile\"-\u003e \":XYZDecoder\": decodeXYZFromString(line)","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"crabnuggets"},"content":"        activate \":XYZDecoder\" #lightblue","lastModifiedDate":"2021-10-27"},{"lineNumber":25,"author":{"gitId":"crabnuggets"},"content":"        note over \":XYZDecoder\": Decoders for Member,\\nTask and Event objects","lastModifiedDate":"2021-11-07"},{"lineNumber":26,"author":{"gitId":"crabnuggets"},"content":"        return decodedObject","lastModifiedDate":"2021-11-07"},{"lineNumber":27,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":28,"author":{"gitId":"crabnuggets"},"content":"        return","lastModifiedDate":"2021-10-27"},{"lineNumber":29,"author":{"gitId":"crabnuggets"},"content":"    |||","lastModifiedDate":"2021-10-27"},{"lineNumber":30,"author":{"gitId":"crabnuggets"},"content":"    else classType \u003d\u003d \u0027t\u0027","lastModifiedDate":"2021-10-27"},{"lineNumber":31,"author":{"gitId":"crabnuggets"},"content":"    |||","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"crabnuggets"},"content":"        \":StorageFile\" -\u003e \":TaskDecoder\": decodeTaskFromString","lastModifiedDate":"2021-11-07"},{"lineNumber":33,"author":{"gitId":"crabnuggets"},"content":"        activate \":TaskDecoder\" #lightblue","lastModifiedDate":"2021-11-07"},{"lineNumber":34,"author":{"gitId":"crabnuggets"},"content":"        return decodedTask","lastModifiedDate":"2021-11-07"},{"lineNumber":35,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":36,"author":{"gitId":"crabnuggets"},"content":"        \":StorageFile\" -\u003e \":EventUpdater\": updateEvent","lastModifiedDate":"2021-11-07"},{"lineNumber":37,"author":{"gitId":"crabnuggets"},"content":"        activate \":EventUpdater\" #lightblue","lastModifiedDate":"2021-11-07"},{"lineNumber":38,"author":{"gitId":"crabnuggets"},"content":"        note over \":EventUpdater\": Adds the decoded task to\\nits event\u0027s list of tasks","lastModifiedDate":"2021-11-07"},{"lineNumber":39,"author":{"gitId":"crabnuggets"},"content":"        return","lastModifiedDate":"2021-11-07"},{"lineNumber":40,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":41,"author":{"gitId":"crabnuggets"},"content":"        \":StorageFile\" -\u003e \":MemberUpdater\": updateMemberTasks","lastModifiedDate":"2021-11-07"},{"lineNumber":42,"author":{"gitId":"crabnuggets"},"content":"        activate \":MemberUpdater\" #lightblue","lastModifiedDate":"2021-11-07"},{"lineNumber":43,"author":{"gitId":"crabnuggets"},"content":"        note over \":MemberUpdater\": Within each member in the member\\nroster that contains this task, add\\nthis task to their task list","lastModifiedDate":"2021-11-07"},{"lineNumber":44,"author":{"gitId":"crabnuggets"},"content":"        return","lastModifiedDate":"2021-10-27"},{"lineNumber":45,"author":{"gitId":"crabnuggets"},"content":"    |||","lastModifiedDate":"2021-11-07"},{"lineNumber":46,"author":{"gitId":"crabnuggets"},"content":"    end","lastModifiedDate":"2021-11-07"},{"lineNumber":47,"author":{"gitId":"crabnuggets"},"content":"    |||","lastModifiedDate":"2021-11-07"},{"lineNumber":48,"author":{"gitId":"crabnuggets"},"content":"end","lastModifiedDate":"2021-10-27"},{"lineNumber":49,"author":{"gitId":"crabnuggets"},"content":"return","lastModifiedDate":"2021-10-27"},{"lineNumber":50,"author":{"gitId":"crabnuggets"},"content":"@enduml","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"crabnuggets":50}},{"path":"docs/diagrams/SaveDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"crabnuggets"},"content":"@startuml","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"crabnuggets"},"content":"title Save Functionality","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"crabnuggets"},"content":"-\u003e \":StorageFile\": save(eventsList : ArrayList\u003cEvent\u003e)","lastModifiedDate":"2021-11-07"},{"lineNumber":5,"author":{"gitId":"crabnuggets"},"content":"activate \":StorageFile\" #yellow","lastModifiedDate":"2021-11-07"},{"lineNumber":6,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"crabnuggets"},"content":"create \":File\"","lastModifiedDate":"2021-11-07"},{"lineNumber":8,"author":{"gitId":"crabnuggets"},"content":"\":StorageFile\" -\u003e \":File\": File(DEFAULT_FILE_PATH)","lastModifiedDate":"2021-11-07"},{"lineNumber":9,"author":{"gitId":"crabnuggets"},"content":"activate \":File\" #lightblue","lastModifiedDate":"2021-11-07"},{"lineNumber":10,"author":{"gitId":"crabnuggets"},"content":"return saveFile","lastModifiedDate":"2021-11-07"},{"lineNumber":11,"author":{"gitId":"crabnuggets"},"content":"|||","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"crabnuggets"},"content":"\":StorageFile\" -\u003e \":StorageFile\": checkFileIsValid","lastModifiedDate":"2021-11-07"},{"lineNumber":13,"author":{"gitId":"crabnuggets"},"content":"activate \":StorageFile\" #orange","lastModifiedDate":"2021-11-07"},{"lineNumber":14,"author":{"gitId":"crabnuggets"},"content":"return","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"crabnuggets"},"content":"|||","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"crabnuggets"},"content":"\":StorageFile\" -\u003e \":MemberEncoder\": encodeMembersList","lastModifiedDate":"2021-11-07"},{"lineNumber":17,"author":{"gitId":"crabnuggets"},"content":"activate \":MemberEncoder\" #lightblue","lastModifiedDate":"2021-11-07"},{"lineNumber":18,"author":{"gitId":"crabnuggets"},"content":"return encodedMembersList","lastModifiedDate":"2021-11-07"},{"lineNumber":19,"author":{"gitId":"crabnuggets"},"content":"|||","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"crabnuggets"},"content":"\":StorageFile\" -\u003e \":EventEncoder\": encodeEventsList","lastModifiedDate":"2021-11-07"},{"lineNumber":21,"author":{"gitId":"crabnuggets"},"content":"activate \":EventEncoder\" #lightblue","lastModifiedDate":"2021-11-07"},{"lineNumber":22,"author":{"gitId":"crabnuggets"},"content":"return encodedEventsList","lastModifiedDate":"2021-11-07"},{"lineNumber":23,"author":{"gitId":"crabnuggets"},"content":"|||","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"crabnuggets"},"content":"\":StorageFile\" -\u003e \":StorageFile\": writeToFile","lastModifiedDate":"2021-11-07"},{"lineNumber":25,"author":{"gitId":"crabnuggets"},"content":"activate \":StorageFile\" #orange","lastModifiedDate":"2021-11-07"},{"lineNumber":26,"author":{"gitId":"crabnuggets"},"content":"return","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"crabnuggets"},"content":"|||","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"crabnuggets"},"content":"return","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"crabnuggets"},"content":"@enduml","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"crabnuggets":30}},{"path":"docs/diagrams/SelectDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"alwinangys"},"content":"@startuml","lastModifiedDate":"2021-10-26"},{"lineNumber":2,"author":{"gitId":"alwinangys"},"content":"title SelectCommand","lastModifiedDate":"2021-10-26"},{"lineNumber":3,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"alwinangys"},"content":"participant \":Duke\" as Duke","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"alwinangys"},"content":"activate Duke","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"alwinangys"},"content":"create \":Parser\" as Parser","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"alwinangys"},"content":"Duke -\u003e Parser","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"alwinangys"},"content":"activate Parser #yellow","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":11,"author":{"gitId":"alwinangys"},"content":"create \":SelectCommand\" as SelectCommand","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"alwinangys"},"content":"Parser -\u003e SelectCommand","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"alwinangys"},"content":"activate SelectCommand #lightblue","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"alwinangys"},"content":"opt isValidFlag","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"alwinangys"},"content":"SelectCommand -\u003e SelectCommand: prepareInputs(command)","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"alwinangys"},"content":"activate SelectCommand #lightgreen","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"alwinangys"},"content":"opt isEventFlag","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"alwinangys"},"content":"Parser -\u003e SelectCommand: updateIndexOfLastSelectedEvent(index)","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"alwinangys"},"content":"end","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"alwinangys"},"content":"return","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"alwinangys"},"content":"|||","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"alwinangys"},"content":"end","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"alwinangys"},"content":"return","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"alwinangys"},"content":"|||","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"alwinangys"},"content":"return","lastModifiedDate":"2021-10-26"},{"lineNumber":27,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"alwinangys"},"content":"Duke -\u003e SelectCommand","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"alwinangys"},"content":"activate SelectCommand #lightblue","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"alwinangys"},"content":"SelectCommand -\u003e SelectCommand: execute()","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"alwinangys"},"content":"activate SelectCommand #lightgreen","lastModifiedDate":"2021-10-26"},{"lineNumber":32,"author":{"gitId":"alwinangys"},"content":"return","lastModifiedDate":"2021-10-26"},{"lineNumber":33,"author":{"gitId":"alwinangys"},"content":"SelectCommand -\u003e Duke: CommandResult","lastModifiedDate":"2021-10-26"},{"lineNumber":34,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":35,"author":{"gitId":"alwinangys"},"content":"@enduml","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"alwinangys":35}},{"path":"docs/diagrams/UpdateDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"antrikshv"},"content":"@startuml","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"antrikshv"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2021-10-27"},{"lineNumber":3,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"antrikshv"},"content":"autonumber","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"antrikshv"},"content":"title UpdateCommand","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"antrikshv"},"content":"participant \":Duke\" as Duke","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"antrikshv"},"content":"activate Duke","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"antrikshv"},"content":"create \":Parser\" as Parser","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"antrikshv"},"content":"Duke -\u003e Parser","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"antrikshv"},"content":"activate Parser #yellow","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"antrikshv"},"content":"create \":UpdateCommand\" as UpdateCommand","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"antrikshv"},"content":"Parser -\u003e UpdateCommand: UpdateCommand(command)","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"antrikshv"},"content":"return","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"antrikshv"},"content":"activate UpdateCommand #lightblue","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"antrikshv"},"content":"UpdateCommand -\u003e UpdateCommand: prepareUpdates()","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"antrikshv"},"content":"activate UpdateCommand #lightgreen","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"antrikshv"},"content":"return","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"antrikshv"},"content":"alt isError","lastModifiedDate":"2021-10-27"},{"lineNumber":25,"author":{"gitId":"antrikshv"},"content":"    UpdateCommand -\u003e Duke : errorMessages()","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"antrikshv"},"content":"else !isError","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"antrikshv"},"content":"    UpdateCommand -\u003e Duke : Ui.printEvent()","lastModifiedDate":"2021-10-27"},{"lineNumber":28,"author":{"gitId":"antrikshv"},"content":"    Duke -\u003e UpdateCommand: execute()","lastModifiedDate":"2021-10-27"},{"lineNumber":29,"author":{"gitId":"antrikshv"},"content":"    UpdateCommand -\u003e Duke: Ui.updateIntroMessage()","lastModifiedDate":"2021-10-27"},{"lineNumber":30,"author":{"gitId":"antrikshv"},"content":"    Duke -\u003e UpdateCommand: Ui.readInput()","lastModifiedDate":"2021-10-27"},{"lineNumber":31,"author":{"gitId":"antrikshv"},"content":"        loop Until User completes updates","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"antrikshv"},"content":"            UpdateCommand -\u003e UpdateCommand: implementUpdates()","lastModifiedDate":"2021-10-27"},{"lineNumber":33,"author":{"gitId":"antrikshv"},"content":"            activate UpdateCommand #lightgreen","lastModifiedDate":"2021-10-27"},{"lineNumber":34,"author":{"gitId":"antrikshv"},"content":"            return","lastModifiedDate":"2021-10-27"},{"lineNumber":35,"author":{"gitId":"antrikshv"},"content":"            UpdateCommand -\u003e Duke","lastModifiedDate":"2021-10-27"},{"lineNumber":36,"author":{"gitId":"antrikshv"},"content":"            Duke -\u003e UpdateCommand: Ui.readInput()","lastModifiedDate":"2021-10-27"},{"lineNumber":37,"author":{"gitId":"antrikshv"},"content":"        end","lastModifiedDate":"2021-10-27"},{"lineNumber":38,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":39,"author":{"gitId":"antrikshv"},"content":"    UpdateCommand -\u003e Duke: postUpdateMessage()","lastModifiedDate":"2021-10-27"},{"lineNumber":40,"author":{"gitId":"antrikshv"},"content":"    UpdateCommand -\u003e Duke: CommandResult(executeResult);","lastModifiedDate":"2021-10-27"},{"lineNumber":41,"author":{"gitId":"antrikshv"},"content":"    deactivate UpdateCommand","lastModifiedDate":"2021-10-27"},{"lineNumber":42,"author":{"gitId":"antrikshv"},"content":"end","lastModifiedDate":"2021-10-27"},{"lineNumber":43,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":44,"author":{"gitId":"antrikshv"},"content":"@enduml","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"antrikshv":44}},{"path":"docs/team/crabnuggets.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"crabnuggets"},"content":"### Project: Student Life Affairs Manager (SLAM)","lastModifiedDate":"2021-11-04"},{"lineNumber":2,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":3,"author":{"gitId":"crabnuggets"},"content":"SLAM is a desktop application for student group leaders in NUS to manage their group events, tasks and members. This application allows students to plan and manage the organisation of events by allowing users to add custom events to their schedule. Users can add tasks to complete under each event and keep track of the progress of such tasks and events. These tasks also have group members assigned to them from a user-generated roster of members. The user interacts with this application through a CLI. ","lastModifiedDate":"2021-11-04"},{"lineNumber":4,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"crabnuggets"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-11-04"},{"lineNumber":6,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"crabnuggets"},"content":"* **New Feature**: Added the ability for the user to save and load file data.","lastModifiedDate":"2021-11-04"},{"lineNumber":8,"author":{"gitId":"crabnuggets"},"content":"  * _What it does:_ allow the user to save the current schedule of events and tasks, and roster of members into a `.txt` file in a locally created directory. The user can also load this `.txt` file on program startup to  restore this schedule of events and tasks, and roster of members.","lastModifiedDate":"2021-11-08"},{"lineNumber":9,"author":{"gitId":"crabnuggets"},"content":"  * _Justification:_ This feature improves the product significantly because a user can resume the program where they have left off without having to retype all the commands to set up the schedule of events  and tasks, and roster of members. ","lastModifiedDate":"2021-11-08"},{"lineNumber":10,"author":{"gitId":"crabnuggets"},"content":"  * _Highlights:_ This feature had to go through some makeovers in v2.0 due to the restructuring of interactions between objects in the program (i.e. the nesting of tasks under events and the assignment of members to tasks). It required in-depth though in designing a systematic approach to saving and loading the save data such that the appropriate tasks for each event can be created and the appropriate members from the roster can be assigned to tasks (and vice versa). This, coupled with updating the functionality to be more defensive, was an engaging and stimulating challenge. ","lastModifiedDate":"2021-11-08"},{"lineNumber":11,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"crabnuggets"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2113-ay2122s1.github.io/tp-dashboard/?search\u003d\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2021-09-25\u0026tabOpen\u003dtrue\u0026zFR\u003dfalse\u0026tabAuthor\u003dcrabnuggets\u0026tabRepo\u003dAY2122S1-CS2113T-W12-3%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code~other\u0026authorshipIsBinaryFileTypeChecked\u003dfalse\u0026tabType\u003dauthorship)","lastModifiedDate":"2021-11-08"},{"lineNumber":13,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"crabnuggets"},"content":"* **Project management**:","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"crabnuggets"},"content":"  * Collaboratively managed releases `v1.0` - `v2.1` (3 releases) with project group members on GitHub.","lastModifiedDate":"2021-11-08"},{"lineNumber":16,"author":{"gitId":"crabnuggets"},"content":"  * Contributed base idea/framework of `Parser` class restructuring for `v2.1` release to allow for greater single responsibility principle of classes to be achieved. ","lastModifiedDate":"2021-11-08"},{"lineNumber":17,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":18,"author":{"gitId":"crabnuggets"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2021-11-04"},{"lineNumber":19,"author":{"gitId":"crabnuggets"},"content":"  * Ensured that tests written for applicable classes in `storage` package achieved 100% branch coverage (Pull request [#192](https://github.com/AY2122S1-CS2113T-W12-3/tp/pull/192). ","lastModifiedDate":"2021-11-08"},{"lineNumber":20,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":21,"author":{"gitId":"crabnuggets"},"content":"* **Documentation**: ","lastModifiedDate":"2021-11-04"},{"lineNumber":22,"author":{"gitId":"crabnuggets"},"content":"  * User Guide: ","lastModifiedDate":"2021-11-04"},{"lineNumber":23,"author":{"gitId":"crabnuggets"},"content":"    * Laid down the overall structure of the user guide in collaboration with [@alwinangys](https://github.com/alwinangys).","lastModifiedDate":"2021-11-08"},{"lineNumber":24,"author":{"gitId":"crabnuggets"},"content":"    * Added table of contents with hyperlinks and a \u0027back to top\u0027 button for each section of the UG for easy navigation.","lastModifiedDate":"2021-11-08"},{"lineNumber":25,"author":{"gitId":"crabnuggets"},"content":"    * Added a command summary of the various commands for SLAM for easy reference by the user.","lastModifiedDate":"2021-11-08"},{"lineNumber":26,"author":{"gitId":"crabnuggets"},"content":"    * Added documentation for the general command features such as `help` and `list`.","lastModifiedDate":"2021-11-08"},{"lineNumber":27,"author":{"gitId":"crabnuggets"},"content":"    * Added documentation for `select` command.","lastModifiedDate":"2021-11-08"},{"lineNumber":28,"author":{"gitId":"crabnuggets"},"content":"  * Developer Guide:","lastModifiedDate":"2021-11-04"},{"lineNumber":29,"author":{"gitId":"crabnuggets"},"content":"    * Added implementation details of the `save` and `load` functionalities.","lastModifiedDate":"2021-11-08"},{"lineNumber":30,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":31,"author":{"gitId":"crabnuggets"},"content":"* **Community**:","lastModifiedDate":"2021-11-04"},{"lineNumber":32,"author":{"gitId":"crabnuggets"},"content":"  * Reviewed DG for PR [#27](https://github.com/AY2122S1-CS2113T-T10-3/tp)","lastModifiedDate":"2021-11-08"},{"lineNumber":33,"author":{"gitId":"crabnuggets"},"content":"  * PRs reviewed (with non-trivial review comments): [#24](https://github.com/AY2122S1-CS2113T-W12-3/tp/pull/24), [#184](https://github.com/AY2122S1-CS2113T-W12-3/tp/pull/184)","lastModifiedDate":"2021-11-08"},{"lineNumber":34,"author":{"gitId":"crabnuggets"},"content":"  * Reported bugs for another team in the class ([Team W13-3](https://github.com/AY2122S1-CS2113T-W13-3/tp)","lastModifiedDate":"2021-11-08"},{"lineNumber":35,"author":{"gitId":"crabnuggets"},"content":"  ","lastModifiedDate":"2021-11-04"}],"authorContributionMap":{"crabnuggets":35}},{"path":"src/main/java/seedu/duke/Duke.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.duke;","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"antrikshv"},"content":"import seedu.duke.commands.ByeCommand;","lastModifiedDate":"2021-10-04"},{"lineNumber":4,"author":{"gitId":"antrikshv"},"content":"import seedu.duke.commands.Command;","lastModifiedDate":"2021-10-04"},{"lineNumber":5,"author":{"gitId":"antrikshv"},"content":"import seedu.duke.commands.CommandResult;","lastModifiedDate":"2021-10-04"},{"lineNumber":6,"author":{"gitId":"crabnuggets"},"content":"import seedu.duke.exceptions.DukeException;","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"antrikshv"},"content":"import seedu.duke.exceptions.parserexceptions.InvalidItemTypeException;","lastModifiedDate":"2021-11-02"},{"lineNumber":8,"author":{"gitId":"antrikshv"},"content":"import seedu.duke.exceptions.parserexceptions.NoCommandAttributesException;","lastModifiedDate":"2021-10-31"},{"lineNumber":9,"author":{"gitId":"Alvinlj00"},"content":"import seedu.duke.items.mainlists.EventCatalog;","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"crabnuggets"},"content":"import seedu.duke.items.Task;","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"crabnuggets"},"content":"import seedu.duke.items.mainlists.MemberRoster;","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"crabnuggets"},"content":"import seedu.duke.parser.Parser;","lastModifiedDate":"2021-10-23"},{"lineNumber":13,"author":{"gitId":"crabnuggets"},"content":"import seedu.duke.storage.StorageFile;","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":15,"author":{"gitId":"antrikshv"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":18,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":19,"author":{"gitId":"Alvinlj00"},"content":"    public static EventCatalog eventCatalog \u003d EventCatalog.getInstance();","lastModifiedDate":"2021-10-22"},{"lineNumber":20,"author":{"gitId":"crabnuggets"},"content":"    public static MemberRoster memberRoster \u003d MemberRoster.getInstance();","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"crabnuggets"},"content":"    /*TODO: Delete the ArrayList of tasks below once the project has been restructured to fully utilize the new","lastModifiedDate":"2021-10-17"},{"lineNumber":22,"author":{"gitId":"crabnuggets"},"content":"     *  ArrayList of Task objects within each Event*/","lastModifiedDate":"2021-10-17"},{"lineNumber":23,"author":{"gitId":"crabnuggets"},"content":"    public static ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"crabnuggets"},"content":"    private static final StorageFile storage \u003d new StorageFile();","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":27,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"crabnuggets"},"content":"        Ui.printGreetingMessage();","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"crabnuggets"},"content":"        storage.loadSaveFile(memberRoster, eventCatalog);","lastModifiedDate":"2021-11-07"},{"lineNumber":30,"author":{"gitId":"antrikshv"},"content":"        runSlam();","lastModifiedDate":"2021-10-04"},{"lineNumber":31,"author":{"gitId":"crabnuggets"},"content":"        storage.save(memberRoster, eventCatalog);","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":33,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":34,"author":{"gitId":"antrikshv"},"content":"    protected static void runSlam() {","lastModifiedDate":"2021-10-04"},{"lineNumber":35,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":36,"author":{"gitId":"antrikshv"},"content":"        String userInput;","lastModifiedDate":"2021-10-04"},{"lineNumber":37,"author":{"gitId":"antrikshv"},"content":"        Command command;","lastModifiedDate":"2021-10-04"},{"lineNumber":38,"author":{"gitId":"antrikshv"},"content":"        CommandResult feedback;","lastModifiedDate":"2021-10-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":40,"author":{"gitId":"antrikshv"},"content":"        do {","lastModifiedDate":"2021-10-04"},{"lineNumber":41,"author":{"gitId":"antrikshv"},"content":"            try {","lastModifiedDate":"2021-10-26"},{"lineNumber":42,"author":{"gitId":"antrikshv"},"content":"                userInput \u003d Ui.readInput();","lastModifiedDate":"2021-10-04"},{"lineNumber":43,"author":{"gitId":"crabnuggets"},"content":"                Ui.printLineBreak();","lastModifiedDate":"2021-10-11"},{"lineNumber":44,"author":{"gitId":"antrikshv"},"content":"                command \u003d Parser.parseCommand(userInput);","lastModifiedDate":"2021-10-04"},{"lineNumber":45,"author":{"gitId":"antrikshv"},"content":"                feedback \u003d command.execute();","lastModifiedDate":"2021-10-04"},{"lineNumber":46,"author":{"gitId":"antrikshv"},"content":"                System.out.println(feedback.feedbackToUser);","lastModifiedDate":"2021-10-04"},{"lineNumber":47,"author":{"gitId":"crabnuggets"},"content":"                Ui.printLineBreak();","lastModifiedDate":"2021-10-11"},{"lineNumber":48,"author":{"gitId":"antrikshv"},"content":"            } catch (NullPointerException | NumberFormatException | StringIndexOutOfBoundsException e) {","lastModifiedDate":"2021-10-26"},{"lineNumber":49,"author":{"gitId":"antrikshv"},"content":"                Ui.printLineBreak();","lastModifiedDate":"2021-11-01"},{"lineNumber":50,"author":{"gitId":"antrikshv"},"content":"                System.out.println(\"Returning to Main Page...\");","lastModifiedDate":"2021-11-01"},{"lineNumber":51,"author":{"gitId":"antrikshv"},"content":"                Ui.printLineBreak();","lastModifiedDate":"2021-10-26"},{"lineNumber":52,"author":{"gitId":"crabnuggets"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2021-10-26"},{"lineNumber":53,"author":{"gitId":"crabnuggets"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2021-10-26"},{"lineNumber":54,"author":{"gitId":"crabnuggets"},"content":"                Ui.printLineBreak();","lastModifiedDate":"2021-10-26"},{"lineNumber":55,"author":{"gitId":"antrikshv"},"content":"            } catch (NoCommandAttributesException | InvalidItemTypeException e) {","lastModifiedDate":"2021-11-03"},{"lineNumber":56,"author":{"gitId":"antrikshv"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2021-10-31"},{"lineNumber":57,"author":{"gitId":"antrikshv"},"content":"            }","lastModifiedDate":"2021-10-26"},{"lineNumber":58,"author":{"gitId":"antrikshv"},"content":"        } while (ByeCommand.isRunning);","lastModifiedDate":"2021-10-04"},{"lineNumber":59,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"antrikshv":31,"Alvinlj00":2,"crabnuggets":20,"-":8}},{"path":"src/main/java/seedu/duke/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"antrikshv"},"content":"package seedu.duke;","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"crabnuggets"},"content":"import seedu.duke.items.Event;","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"crabnuggets"},"content":"import seedu.duke.items.Task;","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"antrikshv"},"content":"import seedu.duke.items.characteristics.Member;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"crabnuggets"},"content":"import seedu.duke.parser.Parser;","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"antrikshv"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-11-08"},{"lineNumber":9,"author":{"gitId":"antrikshv"},"content":"import java.time.YearMonth;","lastModifiedDate":"2021-11-08"},{"lineNumber":10,"author":{"gitId":"crabnuggets"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"antrikshv"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-10-04"},{"lineNumber":12,"author":{"gitId":"antrikshv"},"content":"import java.util.concurrent.atomic.AtomicInteger;","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":14,"author":{"gitId":"antrikshv"},"content":"public class Ui {","lastModifiedDate":"2021-10-04"},{"lineNumber":15,"author":{"gitId":"crabnuggets"},"content":"    private static final String HELP_MESSAGE \u003d \"Here\u0027s some tips on how to use me!\\n\\n\"","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"crabnuggets"},"content":"            + \"help\\n\"","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"crabnuggets"},"content":"            + \"\\t - Show a summary of the commands and options that I can handle\\n\\n\"","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"crabnuggets"},"content":"            + \"list\\n\"","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"antrikshv"},"content":"            + \"\\t - Lists all the events in your schedule in chronological order: list -e\\n\"","lastModifiedDate":"2021-11-02"},{"lineNumber":20,"author":{"gitId":"antrikshv"},"content":"            + \"\\t - To list Tasks: list -t [Event Index]\\n\"","lastModifiedDate":"2021-11-02"},{"lineNumber":21,"author":{"gitId":"antrikshv"},"content":"            + \"\\t - To list Members of a Task: list -m e/[Event Index] t/[Task Index]\\n\\n\"","lastModifiedDate":"2021-11-02"},{"lineNumber":22,"author":{"gitId":"crabnuggets"},"content":"            + \"add -e n/TITLE d/dd-MM-yyyy HHmm v/VENUE b/BUDGET\\n\"","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"crabnuggets"},"content":"            + \"\\t - Add an event to the schedule\\n\\n\"","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"crabnuggets"},"content":"            + \"delete -e INDEX\\n\"","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"crabnuggets"},"content":"            + \"\\t - Delete an event given its index\\n\\n\"","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"crabnuggets"},"content":"            + \"delete all\\n\"","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"crabnuggets"},"content":"            + \"\\t - Delete all events in your schedule\\n\\n\"","lastModifiedDate":"2021-10-27"},{"lineNumber":28,"author":{"gitId":"crabnuggets"},"content":"            + \"select -e INDEX\\n\"","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"crabnuggets"},"content":"            + \"\\t - Select an event and display its details\\n\\n\"","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"crabnuggets"},"content":"            + \"find EVENT_KEYWORD(S)\\n\"","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"crabnuggets"},"content":"            + \"\\t - Find an event based on the given keyword/query\\n\\n\"","lastModifiedDate":"2021-10-26"},{"lineNumber":32,"author":{"gitId":"crabnuggets"},"content":"            + \"done -e INDEX\\n\"","lastModifiedDate":"2021-10-26"},{"lineNumber":33,"author":{"gitId":"crabnuggets"},"content":"            + \"\\t - Mark an event as done given its index\\n\\n\"","lastModifiedDate":"2021-10-26"},{"lineNumber":34,"author":{"gitId":"crabnuggets"},"content":"            + \"undo -e INDEX\\n\"","lastModifiedDate":"2021-10-26"},{"lineNumber":35,"author":{"gitId":"crabnuggets"},"content":"            + \"\\t - Un-mark an event as done given its index\\n\\n\"","lastModifiedDate":"2021-10-26"},{"lineNumber":36,"author":{"gitId":"crabnuggets"},"content":"            + \"add -t n/TITLE d/DATE\\n\"","lastModifiedDate":"2021-10-10"},{"lineNumber":37,"author":{"gitId":"crabnuggets"},"content":"            + \"\\t - Add a task to the schedule\\n\\n\"","lastModifiedDate":"2021-10-10"},{"lineNumber":38,"author":{"gitId":"crabnuggets"},"content":"            + \"delete -t INDEX\\n\"","lastModifiedDate":"2021-10-26"},{"lineNumber":39,"author":{"gitId":"crabnuggets"},"content":"            + \"\\t - Deletes a task given its index in the overall schedule\\n\\n\"","lastModifiedDate":"2021-10-10"},{"lineNumber":40,"author":{"gitId":"crabnuggets"},"content":"            + \"select -t INDEX\\n\"","lastModifiedDate":"2021-10-26"},{"lineNumber":41,"author":{"gitId":"crabnuggets"},"content":"            + \"\\t - Displays more details about the selected task. Requires an event to first be selected.\\n\\n\"","lastModifiedDate":"2021-10-26"},{"lineNumber":42,"author":{"gitId":"crabnuggets"},"content":"            + \"done -t INDEX\\n\"","lastModifiedDate":"2021-10-26"},{"lineNumber":43,"author":{"gitId":"crabnuggets"},"content":"            + \"\\t - Mark a task as done given its index. Requires an event to first be selected.\\n\\n\"","lastModifiedDate":"2021-10-26"},{"lineNumber":44,"author":{"gitId":"crabnuggets"},"content":"            + \"undo -t INDEX\\n\"","lastModifiedDate":"2021-10-26"},{"lineNumber":45,"author":{"gitId":"crabnuggets"},"content":"            + \"\\t - Un-mark a task as done given its index\\n\\n\"","lastModifiedDate":"2021-10-26"},{"lineNumber":46,"author":{"gitId":"crabnuggets"},"content":"            + \"add -m MEMBER_NAME\\n\"","lastModifiedDate":"2021-10-26"},{"lineNumber":47,"author":{"gitId":"crabnuggets"},"content":"            + \"\\t - Add a member to your current roster of members\\n\\n\"","lastModifiedDate":"2021-10-26"},{"lineNumber":48,"author":{"gitId":"crabnuggets"},"content":"            + \"delete -m MEMBER_NAME\\n\"","lastModifiedDate":"2021-10-26"},{"lineNumber":49,"author":{"gitId":"crabnuggets"},"content":"            + \"\\t - Delete a member from your roster given his/her name\\n\\n\"","lastModifiedDate":"2021-10-26"},{"lineNumber":50,"author":{"gitId":"crabnuggets"},"content":"            + \"update EVENT_INDEX\\n\"","lastModifiedDate":"2021-10-26"},{"lineNumber":51,"author":{"gitId":"crabnuggets"},"content":"            + \"\\t - Choose an event to update. You can update tasks/members under that event from there.\\n\\n\"","lastModifiedDate":"2021-10-26"},{"lineNumber":52,"author":{"gitId":"antrikshv"},"content":"            + \"next\\n\"","lastModifiedDate":"2021-11-02"},{"lineNumber":53,"author":{"gitId":"antrikshv"},"content":"            + \"\\t - To show the next upcoming Event: next -e\\n\"","lastModifiedDate":"2021-11-02"},{"lineNumber":54,"author":{"gitId":"antrikshv"},"content":"            + \"\\t - To show the next upcoming Task of a specific Event: next -t\\n\\n\"","lastModifiedDate":"2021-11-02"},{"lineNumber":55,"author":{"gitId":"crabnuggets"},"content":"            + \"bye\\n\"","lastModifiedDate":"2021-10-26"},{"lineNumber":56,"author":{"gitId":"crabnuggets"},"content":"            + \"\\t - Exit the program. Bye!\";","lastModifiedDate":"2021-10-26"},{"lineNumber":57,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":58,"author":{"gitId":"antrikshv"},"content":"    public static String readInput() {","lastModifiedDate":"2021-10-04"},{"lineNumber":59,"author":{"gitId":"antrikshv"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2021-10-04"},{"lineNumber":60,"author":{"gitId":"crabnuggets"},"content":"        String userInput \u003d \"\";","lastModifiedDate":"2021-10-11"},{"lineNumber":61,"author":{"gitId":"crabnuggets"},"content":"        if (in.hasNextLine()) {","lastModifiedDate":"2021-10-11"},{"lineNumber":62,"author":{"gitId":"crabnuggets"},"content":"            userInput \u003d in.nextLine();","lastModifiedDate":"2021-10-11"},{"lineNumber":63,"author":{"gitId":"crabnuggets"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":64,"author":{"gitId":"crabnuggets"},"content":"        return userInput;","lastModifiedDate":"2021-10-11"},{"lineNumber":65,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":66,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":67,"author":{"gitId":"crabnuggets"},"content":"    public static String getLineBreak() {","lastModifiedDate":"2021-10-10"},{"lineNumber":68,"author":{"gitId":"antrikshv"},"content":"        return \"_____________________________________________________________________________________________\"","lastModifiedDate":"2021-10-26"},{"lineNumber":69,"author":{"gitId":"antrikshv"},"content":"                + \"_______________\";","lastModifiedDate":"2021-10-26"},{"lineNumber":70,"author":{"gitId":"crabnuggets"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":71,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":72,"author":{"gitId":"crabnuggets"},"content":"    public static void printLineBreak() {","lastModifiedDate":"2021-10-10"},{"lineNumber":73,"author":{"gitId":"antrikshv"},"content":"        System.out.println(\"________________________________________________________________________________________\"","lastModifiedDate":"2021-10-26"},{"lineNumber":74,"author":{"gitId":"antrikshv"},"content":"                + \"____________________\");","lastModifiedDate":"2021-10-26"},{"lineNumber":75,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":76,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":77,"author":{"gitId":"crabnuggets"},"content":"    public static String getInvalidCommandMessage() {","lastModifiedDate":"2021-10-26"},{"lineNumber":78,"author":{"gitId":"crabnuggets"},"content":"        return \"I\u0027m sorry I did not catch that! Try entering \u003chelp\u003e for a list of commands.\";","lastModifiedDate":"2021-10-26"},{"lineNumber":79,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":80,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":81,"author":{"gitId":"Alvinlj00"},"content":"    public static void promptForDescription() {","lastModifiedDate":"2021-10-09"},{"lineNumber":82,"author":{"gitId":"Alvinlj00"},"content":"        System.out.println(\"Please add an optional description for your item and press enter.\");","lastModifiedDate":"2021-10-09"},{"lineNumber":83,"author":{"gitId":"crabnuggets"},"content":"        printLineBreak();","lastModifiedDate":"2021-10-10"},{"lineNumber":84,"author":{"gitId":"crabnuggets"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":85,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":86,"author":{"gitId":"Alvinlj00"},"content":"    public static void promptForEventIndex() {","lastModifiedDate":"2021-10-21"},{"lineNumber":87,"author":{"gitId":"Alvinlj00"},"content":"        System.out.println(\"Please choose which event you want to add your task to. \");","lastModifiedDate":"2021-10-21"},{"lineNumber":88,"author":{"gitId":"Alvinlj00"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":89,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":90,"author":{"gitId":"Alvinlj00"},"content":"    public static void promptForMemberIndex() {","lastModifiedDate":"2021-10-25"},{"lineNumber":91,"author":{"gitId":"Alvinlj00"},"content":"        System.out.println(\"Please choose which member(s) you want to assign your task to. \"","lastModifiedDate":"2021-11-04"},{"lineNumber":92,"author":{"gitId":"Alvinlj00"},"content":"                + \"If you\u0027re choosing more than 1 member, separate the indexes with \u0027, \u0027. \");","lastModifiedDate":"2021-11-04"},{"lineNumber":93,"author":{"gitId":"Alvinlj00"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":94,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":95,"author":{"gitId":"crabnuggets"},"content":"    public static String getTaskDeletionMessage(String taskTitle) {","lastModifiedDate":"2021-10-10"},{"lineNumber":96,"author":{"gitId":"crabnuggets"},"content":"        return String.format(\"This task has been removed: %s\\n\", taskTitle);","lastModifiedDate":"2021-10-10"},{"lineNumber":97,"author":{"gitId":"crabnuggets"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":98,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":99,"author":{"gitId":"Alvinlj00"},"content":"    public static String getEventDeletionMessage(String eventTitle) {","lastModifiedDate":"2021-10-22"},{"lineNumber":100,"author":{"gitId":"Alvinlj00"},"content":"        return String.format(\"This event has been removed: %s\\n\", eventTitle);","lastModifiedDate":"2021-10-22"},{"lineNumber":101,"author":{"gitId":"Alvinlj00"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":102,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":103,"author":{"gitId":"alwinangys"},"content":"    public static String getMemberDeletionMessage(String name) {","lastModifiedDate":"2021-10-26"},{"lineNumber":104,"author":{"gitId":"alwinangys"},"content":"        return String.format(\"This member has been removed: %s\\n\", name);","lastModifiedDate":"2021-10-26"},{"lineNumber":105,"author":{"gitId":"alwinangys"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":106,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":107,"author":{"gitId":"alwinangys"},"content":"    public static String getUnableToDeleteMemberMessage(String message) {","lastModifiedDate":"2021-11-08"},{"lineNumber":108,"author":{"gitId":"alwinangys"},"content":"        return \"Please assign more members to these tasks:\" + System.lineSeparator()","lastModifiedDate":"2021-11-08"},{"lineNumber":109,"author":{"gitId":"alwinangys"},"content":"                + message;","lastModifiedDate":"2021-11-08"},{"lineNumber":110,"author":{"gitId":"alwinangys"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":111,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":112,"author":{"gitId":"Alvinlj00"},"content":"    public static String getTaskAddedMessage(int eventIndex, Task task) {","lastModifiedDate":"2021-10-22"},{"lineNumber":113,"author":{"gitId":"Alvinlj00"},"content":"        assert eventIndex \u003c Duke.eventCatalog.size() : \"Number entered cannot be more than \"","lastModifiedDate":"2021-10-22"},{"lineNumber":114,"author":{"gitId":"Alvinlj00"},"content":"                + \"number of events\";","lastModifiedDate":"2021-10-22"},{"lineNumber":115,"author":{"gitId":"crabnuggets"},"content":"        return String.format(\"Task added: %s\\n\"","lastModifiedDate":"2021-10-10"},{"lineNumber":116,"author":{"gitId":"Alvinlj00"},"content":"                        + \"Total number of tasks in this event \u003d %s\",","lastModifiedDate":"2021-10-22"},{"lineNumber":117,"author":{"gitId":"Alvinlj00"},"content":"                task.getTitle(), Duke.eventCatalog.get(eventIndex).getTaskList().size());","lastModifiedDate":"2021-11-04"},{"lineNumber":118,"author":{"gitId":"crabnuggets"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":119,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":120,"author":{"gitId":"crabnuggets"},"content":"    public static String getEventAddedMessage(Event event) {","lastModifiedDate":"2021-10-10"},{"lineNumber":121,"author":{"gitId":"crabnuggets"},"content":"        return String.format(\"Event added: %s\\n\"","lastModifiedDate":"2021-10-10"},{"lineNumber":122,"author":{"gitId":"crabnuggets"},"content":"                        + \"Total number of events \u003d %s\",","lastModifiedDate":"2021-10-11"},{"lineNumber":123,"author":{"gitId":"crabnuggets"},"content":"                event.getTitle(), Duke.eventCatalog.size());","lastModifiedDate":"2021-10-17"},{"lineNumber":124,"author":{"gitId":"crabnuggets"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":125,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":126,"author":{"gitId":"Alvinlj00"},"content":"    public static String getMembersAddedMessage(String[] memberNames) {","lastModifiedDate":"2021-11-04"},{"lineNumber":127,"author":{"gitId":"Alvinlj00"},"content":"        StringBuilder message \u003d new StringBuilder();","lastModifiedDate":"2021-11-04"},{"lineNumber":128,"author":{"gitId":"Alvinlj00"},"content":"        message.append(\"Member\").append(memberNames.length \u003e 1 ? \"s\" : \"\").append(\" added: \");","lastModifiedDate":"2021-11-04"},{"lineNumber":129,"author":{"gitId":"Alvinlj00"},"content":"        for (int i \u003d 0; i \u003c memberNames.length; i++) {","lastModifiedDate":"2021-11-04"},{"lineNumber":130,"author":{"gitId":"Alvinlj00"},"content":"            message.append(memberNames[i]);","lastModifiedDate":"2021-11-04"},{"lineNumber":131,"author":{"gitId":"Alvinlj00"},"content":"            if (i \u003c memberNames.length - 1) {","lastModifiedDate":"2021-11-04"},{"lineNumber":132,"author":{"gitId":"Alvinlj00"},"content":"                message.append(\", \");","lastModifiedDate":"2021-11-04"},{"lineNumber":133,"author":{"gitId":"Alvinlj00"},"content":"            }","lastModifiedDate":"2021-11-04"},{"lineNumber":134,"author":{"gitId":"Alvinlj00"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":135,"author":{"gitId":"Alvinlj00"},"content":"        return message.toString();","lastModifiedDate":"2021-11-04"},{"lineNumber":136,"author":{"gitId":"Alvinlj00"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":137,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":138,"author":{"gitId":"Alvinlj00"},"content":"    public static String getItemsMarkedDoneMessage(String listOfItemsMarkedDone, String listOfAlreadyDoneItems) {","lastModifiedDate":"2021-11-07"},{"lineNumber":139,"author":{"gitId":"Alvinlj00"},"content":"        StringBuilder message \u003d new StringBuilder();","lastModifiedDate":"2021-11-07"},{"lineNumber":140,"author":{"gitId":"Alvinlj00"},"content":"        if (!listOfItemsMarkedDone.isBlank()) {","lastModifiedDate":"2021-11-07"},{"lineNumber":141,"author":{"gitId":"Alvinlj00"},"content":"            message.append(\"Nice! I have marked these items as done: \\n\").append(listOfItemsMarkedDone);","lastModifiedDate":"2021-11-07"},{"lineNumber":142,"author":{"gitId":"Alvinlj00"},"content":"            message.append(\"--------LIST UPDATED-----------\");","lastModifiedDate":"2021-11-07"},{"lineNumber":143,"author":{"gitId":"Alvinlj00"},"content":"        }","lastModifiedDate":"2021-11-07"},{"lineNumber":144,"author":{"gitId":"Alvinlj00"},"content":"        if (!listOfAlreadyDoneItems.isBlank()) {","lastModifiedDate":"2021-11-07"},{"lineNumber":145,"author":{"gitId":"Alvinlj00"},"content":"            if (!listOfItemsMarkedDone.isBlank()) {","lastModifiedDate":"2021-11-07"},{"lineNumber":146,"author":{"gitId":"Alvinlj00"},"content":"                message.append(\"\\n\");","lastModifiedDate":"2021-11-07"},{"lineNumber":147,"author":{"gitId":"Alvinlj00"},"content":"            }","lastModifiedDate":"2021-11-07"},{"lineNumber":148,"author":{"gitId":"Alvinlj00"},"content":"            message.append(\"These items are already done: \\n\").append(listOfAlreadyDoneItems);","lastModifiedDate":"2021-11-07"},{"lineNumber":149,"author":{"gitId":"Alvinlj00"},"content":"            message.append(\"There\u0027s no need for me to re-mark them. \");","lastModifiedDate":"2021-11-07"},{"lineNumber":150,"author":{"gitId":"Alvinlj00"},"content":"        }","lastModifiedDate":"2021-11-07"},{"lineNumber":151,"author":{"gitId":"Alvinlj00"},"content":"        return message.toString();","lastModifiedDate":"2021-11-07"},{"lineNumber":152,"author":{"gitId":"Alvinlj00"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":153,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":154,"author":{"gitId":"Alvinlj00"},"content":"    public static String getItemsUnmarkedMessage(String listOfItemsUnmarked, String listOfUndoneItems) {","lastModifiedDate":"2021-11-07"},{"lineNumber":155,"author":{"gitId":"Alvinlj00"},"content":"        StringBuilder message \u003d new StringBuilder();","lastModifiedDate":"2021-11-07"},{"lineNumber":156,"author":{"gitId":"Alvinlj00"},"content":"        if (!listOfItemsUnmarked.isBlank()) {","lastModifiedDate":"2021-11-07"},{"lineNumber":157,"author":{"gitId":"Alvinlj00"},"content":"            message.append(\"Okay, I have unmarked these items: \\n\").append(listOfItemsUnmarked);","lastModifiedDate":"2021-11-07"},{"lineNumber":158,"author":{"gitId":"Alvinlj00"},"content":"            message.append(\"--------LIST UPDATED-----------\");","lastModifiedDate":"2021-11-07"},{"lineNumber":159,"author":{"gitId":"Alvinlj00"},"content":"        }","lastModifiedDate":"2021-11-07"},{"lineNumber":160,"author":{"gitId":"Alvinlj00"},"content":"        if (!listOfUndoneItems.isBlank()) {","lastModifiedDate":"2021-11-07"},{"lineNumber":161,"author":{"gitId":"Alvinlj00"},"content":"            if (!listOfItemsUnmarked.isBlank()) {","lastModifiedDate":"2021-11-07"},{"lineNumber":162,"author":{"gitId":"Alvinlj00"},"content":"                message.append(\"\\n\");","lastModifiedDate":"2021-11-07"},{"lineNumber":163,"author":{"gitId":"Alvinlj00"},"content":"            }","lastModifiedDate":"2021-11-07"},{"lineNumber":164,"author":{"gitId":"Alvinlj00"},"content":"            message.append(\"These items are not done yet: \\n\").append(listOfUndoneItems);","lastModifiedDate":"2021-11-07"},{"lineNumber":165,"author":{"gitId":"Alvinlj00"},"content":"            message.append(\"They can\u0027t be unmarked. \");","lastModifiedDate":"2021-11-07"},{"lineNumber":166,"author":{"gitId":"Alvinlj00"},"content":"        }","lastModifiedDate":"2021-11-07"},{"lineNumber":167,"author":{"gitId":"Alvinlj00"},"content":"        return message.toString();","lastModifiedDate":"2021-11-07"},{"lineNumber":168,"author":{"gitId":"Alvinlj00"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":169,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":170,"author":{"gitId":"crabnuggets"},"content":"    public static void printGreetingMessage() {","lastModifiedDate":"2021-10-11"},{"lineNumber":171,"author":{"gitId":"crabnuggets"},"content":"        System.out.println(\"Greetings mortal. How may you be served today?\\n\"","lastModifiedDate":"2021-10-11"},{"lineNumber":172,"author":{"gitId":"crabnuggets"},"content":"                + \"TIP: enter \\\"help\\\" if you are weak and clueless!\\n\"","lastModifiedDate":"2021-10-11"},{"lineNumber":173,"author":{"gitId":"crabnuggets"},"content":"                + getLineBreak());","lastModifiedDate":"2021-10-11"},{"lineNumber":174,"author":{"gitId":"crabnuggets"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":175,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":176,"author":{"gitId":"crabnuggets"},"content":"    public static String getByeMessage() {","lastModifiedDate":"2021-10-10"},{"lineNumber":177,"author":{"gitId":"crabnuggets"},"content":"        return \"You will be missed!!\";","lastModifiedDate":"2021-10-10"},{"lineNumber":178,"author":{"gitId":"crabnuggets"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":179,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":180,"author":{"gitId":"crabnuggets"},"content":"    public static String getHelpMessage() {","lastModifiedDate":"2021-10-11"},{"lineNumber":181,"author":{"gitId":"crabnuggets"},"content":"        return HELP_MESSAGE;","lastModifiedDate":"2021-10-11"},{"lineNumber":182,"author":{"gitId":"Alvinlj00"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":183,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":184,"author":{"gitId":"alwinangys"},"content":"    public static String getSelectedTaskMessage(Task task) {","lastModifiedDate":"2021-10-12"},{"lineNumber":185,"author":{"gitId":"alwinangys"},"content":"        return \"Here are the details of the task:\\n\" + getTask(task);","lastModifiedDate":"2021-11-06"},{"lineNumber":186,"author":{"gitId":"alwinangys"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":187,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":188,"author":{"gitId":"alwinangys"},"content":"    public static String getSelectedEventMessage(Event event) {","lastModifiedDate":"2021-10-12"},{"lineNumber":189,"author":{"gitId":"alwinangys"},"content":"        return \"Here are the details of the event:\\n\" + getEvent(event);","lastModifiedDate":"2021-11-06"},{"lineNumber":190,"author":{"gitId":"alwinangys"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":191,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":192,"author":{"gitId":"alwinangys"},"content":"    public static String getSelectedMemberMessage(Member member) {","lastModifiedDate":"2021-11-06"},{"lineNumber":193,"author":{"gitId":"alwinangys"},"content":"        return \"Here are the details of the member:\\n\" + member.getName() + \"\\n\"","lastModifiedDate":"2021-11-06"},{"lineNumber":194,"author":{"gitId":"alwinangys"},"content":"                + member.getTasks();","lastModifiedDate":"2021-11-06"},{"lineNumber":195,"author":{"gitId":"alwinangys"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":196,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":197,"author":{"gitId":"Alvinlj00"},"content":"    public static \u003cT\u003e void printList(ArrayList\u003cT\u003e list) {","lastModifiedDate":"2021-10-25"},{"lineNumber":198,"author":{"gitId":"antrikshv"},"content":"        AtomicInteger i \u003d new AtomicInteger();","lastModifiedDate":"2021-10-10"},{"lineNumber":199,"author":{"gitId":"crabnuggets"},"content":"        list.forEach(item -\u003e System.out.println(i.getAndIncrement() + 1 + \". \" + item));","lastModifiedDate":"2021-10-11"},{"lineNumber":200,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":201,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":202,"author":{"gitId":"Alvinlj00"},"content":"    public static void printEventCatalog() {","lastModifiedDate":"2021-10-22"},{"lineNumber":203,"author":{"gitId":"Alvinlj00"},"content":"        printList(Duke.eventCatalog);","lastModifiedDate":"2021-10-22"},{"lineNumber":204,"author":{"gitId":"Alvinlj00"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":205,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":206,"author":{"gitId":"Alvinlj00"},"content":"    public static void printMemberRoster() {","lastModifiedDate":"2021-10-25"},{"lineNumber":207,"author":{"gitId":"Alvinlj00"},"content":"        printList(Duke.memberRoster);","lastModifiedDate":"2021-10-25"},{"lineNumber":208,"author":{"gitId":"Alvinlj00"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":209,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":210,"author":{"gitId":"alwinangys"},"content":"    public static String getTask(Task task) {","lastModifiedDate":"2021-10-12"},{"lineNumber":211,"author":{"gitId":"alwinangys"},"content":"        return \"Title: \" + task.getTitle() + System.lineSeparator()","lastModifiedDate":"2021-10-26"},{"lineNumber":212,"author":{"gitId":"alwinangys"},"content":"                + \"Deadline: \" + Parser.convertDateTime(task.getDateTime()) + System.lineSeparator()","lastModifiedDate":"2021-10-26"},{"lineNumber":213,"author":{"gitId":"alwinangys"},"content":"                + \"Description: \" + task.getDescription() + System.lineSeparator()","lastModifiedDate":"2021-10-26"},{"lineNumber":214,"author":{"gitId":"alwinangys"},"content":"                + \"Members: \" + System.lineSeparator() + task.getMemberListAsString();","lastModifiedDate":"2021-10-26"},{"lineNumber":215,"author":{"gitId":"alwinangys"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":216,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":217,"author":{"gitId":"alwinangys"},"content":"    public static String getEvent(Event event) {","lastModifiedDate":"2021-10-12"},{"lineNumber":218,"author":{"gitId":"alwinangys"},"content":"        return \"Title: \" + event.getTitle() + System.lineSeparator()","lastModifiedDate":"2021-10-26"},{"lineNumber":219,"author":{"gitId":"alwinangys"},"content":"                + \"Date: \" + Parser.convertDateTime(event.getDateTime()) + System.lineSeparator()","lastModifiedDate":"2021-10-26"},{"lineNumber":220,"author":{"gitId":"alwinangys"},"content":"                + \"Description: \" + event.getDescription() + System.lineSeparator()","lastModifiedDate":"2021-10-26"},{"lineNumber":221,"author":{"gitId":"alwinangys"},"content":"                + \"Venue: \" + event.getVenue() + System.lineSeparator()","lastModifiedDate":"2021-10-26"},{"lineNumber":222,"author":{"gitId":"alwinangys"},"content":"                + \"Budget: $\" + event.getBudget() + System.lineSeparator()","lastModifiedDate":"2021-10-26"},{"lineNumber":223,"author":{"gitId":"alwinangys"},"content":"                + \"Tasks: \" + System.lineSeparator() + event.getTaskListAsString();","lastModifiedDate":"2021-10-26"},{"lineNumber":224,"author":{"gitId":"alwinangys"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":225,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":226,"author":{"gitId":"alwinangys"},"content":"    public static void printTask(Task task) {","lastModifiedDate":"2021-10-12"},{"lineNumber":227,"author":{"gitId":"antrikshv"},"content":"        System.out.println(\"Title: \" + task.getTitle() + System.lineSeparator()","lastModifiedDate":"2021-10-24"},{"lineNumber":228,"author":{"gitId":"antrikshv"},"content":"                + \"Deadline: \" + Parser.convertDateTime(task.getDateTime()) + System.lineSeparator()","lastModifiedDate":"2021-10-24"},{"lineNumber":229,"author":{"gitId":"antrikshv"},"content":"                + \"Description: \" + task.getDescription() + System.lineSeparator()","lastModifiedDate":"2021-10-24"},{"lineNumber":230,"author":{"gitId":"antrikshv"},"content":"                + \"Members: \");","lastModifiedDate":"2021-10-24"},{"lineNumber":231,"author":{"gitId":"antrikshv"},"content":"        printMemberList(task.getMemberList());","lastModifiedDate":"2021-10-24"},{"lineNumber":232,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":233,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":234,"author":{"gitId":"alwinangys"},"content":"    public static void printEvent(Event event) {","lastModifiedDate":"2021-10-12"},{"lineNumber":235,"author":{"gitId":"antrikshv"},"content":"        System.out.println(\"Title: \" + event.getTitle() + System.lineSeparator()","lastModifiedDate":"2021-10-24"},{"lineNumber":236,"author":{"gitId":"antrikshv"},"content":"                + \"Date: \" + Parser.convertDateTime(event.getDateTime()) + System.lineSeparator()","lastModifiedDate":"2021-10-24"},{"lineNumber":237,"author":{"gitId":"antrikshv"},"content":"                + \"Description: \" + event.getDescription() + System.lineSeparator()","lastModifiedDate":"2021-10-24"},{"lineNumber":238,"author":{"gitId":"antrikshv"},"content":"                + \"Venue: \" + event.getVenue() + System.lineSeparator()","lastModifiedDate":"2021-10-24"},{"lineNumber":239,"author":{"gitId":"antrikshv"},"content":"                + \"Budget: $\" + event.getBudget() + System.lineSeparator()","lastModifiedDate":"2021-10-24"},{"lineNumber":240,"author":{"gitId":"antrikshv"},"content":"                + \"Tasks: \");","lastModifiedDate":"2021-10-24"},{"lineNumber":241,"author":{"gitId":"antrikshv"},"content":"        printList(event.getTaskList());","lastModifiedDate":"2021-10-24"},{"lineNumber":242,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":243,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":244,"author":{"gitId":"antrikshv"},"content":"    public static void printMemberList(ArrayList\u003cMember\u003e list) {","lastModifiedDate":"2021-10-24"},{"lineNumber":245,"author":{"gitId":"antrikshv"},"content":"        AtomicInteger i \u003d new AtomicInteger();","lastModifiedDate":"2021-10-24"},{"lineNumber":246,"author":{"gitId":"antrikshv"},"content":"        list.forEach(member -\u003e System.out.println(i.getAndIncrement() + 1 + \". \" + member));","lastModifiedDate":"2021-10-24"},{"lineNumber":247,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":248,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":249,"author":{"gitId":"antrikshv"},"content":"    public static void listUsageCommands() {","lastModifiedDate":"2021-10-25"},{"lineNumber":250,"author":{"gitId":"antrikshv"},"content":"        System.out.println(System.lineSeparator() + \"FURTHER COMMANDS\"","lastModifiedDate":"2021-10-25"},{"lineNumber":251,"author":{"gitId":"antrikshv"},"content":"                + System.lineSeparator()","lastModifiedDate":"2021-11-02"},{"lineNumber":252,"author":{"gitId":"antrikshv"},"content":"                + \"-----------------------\"","lastModifiedDate":"2021-11-02"},{"lineNumber":253,"author":{"gitId":"antrikshv"},"content":"                + System.lineSeparator()","lastModifiedDate":"2021-11-02"},{"lineNumber":254,"author":{"gitId":"antrikshv"},"content":"                + \"list -e: to see overall events\"","lastModifiedDate":"2021-11-02"},{"lineNumber":255,"author":{"gitId":"antrikshv"},"content":"                + System.lineSeparator()","lastModifiedDate":"2021-11-02"},{"lineNumber":256,"author":{"gitId":"antrikshv"},"content":"                + \"list -t [EVENT_NUM]: to see tasks in an Event\"","lastModifiedDate":"2021-11-02"},{"lineNumber":257,"author":{"gitId":"antrikshv"},"content":"                + System.lineSeparator()","lastModifiedDate":"2021-11-02"},{"lineNumber":258,"author":{"gitId":"antrikshv"},"content":"                + \"list -m e/[Event Index] t/[Task Index] : to see members in a Task\"","lastModifiedDate":"2021-11-02"},{"lineNumber":259,"author":{"gitId":"antrikshv"},"content":"                + System.lineSeparator()","lastModifiedDate":"2021-11-02"},{"lineNumber":260,"author":{"gitId":"antrikshv"},"content":"                + \"list -m: to see overall member roster\");","lastModifiedDate":"2021-11-02"},{"lineNumber":261,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":262,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":263,"author":{"gitId":"antrikshv"},"content":"    public static void updateIntroMessage() {","lastModifiedDate":"2021-10-25"},{"lineNumber":264,"author":{"gitId":"antrikshv"},"content":"        System.out.println(\"Please type the item you would like to update in the following manner \"","lastModifiedDate":"2021-10-25"},{"lineNumber":265,"author":{"gitId":"antrikshv"},"content":"                + System.lineSeparator() + \"-----------------------------------------------------------------------   \"","lastModifiedDate":"2021-10-25"},{"lineNumber":266,"author":{"gitId":"antrikshv"},"content":"                + System.lineSeparator() + \"n/[NEW NAME]   \"","lastModifiedDate":"2021-11-02"},{"lineNumber":267,"author":{"gitId":"antrikshv"},"content":"                + System.lineSeparator() + \"d/[NEW DATE[d/dd-MM-yyyy HHmm]]\"","lastModifiedDate":"2021-11-02"},{"lineNumber":268,"author":{"gitId":"antrikshv"},"content":"                + System.lineSeparator() + \"p/[NEW DESCRIPTION]\"","lastModifiedDate":"2021-11-02"},{"lineNumber":269,"author":{"gitId":"antrikshv"},"content":"                + System.lineSeparator() + \"v/[NEW VENUE]\"","lastModifiedDate":"2021-11-02"},{"lineNumber":270,"author":{"gitId":"antrikshv"},"content":"                + System.lineSeparator() + \"b/[NEW BUDGET]\"","lastModifiedDate":"2021-11-02"},{"lineNumber":271,"author":{"gitId":"antrikshv"},"content":"                + System.lineSeparator() + \"t/[TASK NUM YOU WANT TO UPDATE]\"","lastModifiedDate":"2021-11-02"},{"lineNumber":272,"author":{"gitId":"antrikshv"},"content":"                + System.lineSeparator()","lastModifiedDate":"2021-10-25"},{"lineNumber":273,"author":{"gitId":"antrikshv"},"content":"                + \"Only type a singular update at given time!\"","lastModifiedDate":"2021-11-02"},{"lineNumber":274,"author":{"gitId":"antrikshv"},"content":"                + \"\\n Only the first command will be updated if multiple updates are written\"","lastModifiedDate":"2021-11-02"},{"lineNumber":275,"author":{"gitId":"antrikshv"},"content":"                + System.lineSeparator() + Ui.getLineBreak());","lastModifiedDate":"2021-10-25"},{"lineNumber":276,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":277,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":278,"author":{"gitId":"antrikshv"},"content":"    public static void printUpdatedEvent(Event event) {","lastModifiedDate":"2021-10-26"},{"lineNumber":279,"author":{"gitId":"antrikshv"},"content":"        System.out.println(\"Title: \" + event.getTitle() + System.lineSeparator()","lastModifiedDate":"2021-10-26"},{"lineNumber":280,"author":{"gitId":"antrikshv"},"content":"                + \"Date: \" + Parser.convertDateTime(event.getDateTime()) + System.lineSeparator()","lastModifiedDate":"2021-10-26"},{"lineNumber":281,"author":{"gitId":"antrikshv"},"content":"                + \"Description: \" + event.getDescription() + System.lineSeparator()","lastModifiedDate":"2021-10-26"},{"lineNumber":282,"author":{"gitId":"antrikshv"},"content":"                + \"Venue: \" + event.getVenue() + System.lineSeparator()","lastModifiedDate":"2021-10-26"},{"lineNumber":283,"author":{"gitId":"antrikshv"},"content":"                + \"Budget: $\" + event.getBudget() + System.lineSeparator()","lastModifiedDate":"2021-10-26"},{"lineNumber":284,"author":{"gitId":"antrikshv"},"content":"                + \"Tasks: \");","lastModifiedDate":"2021-10-26"},{"lineNumber":285,"author":{"gitId":"antrikshv"},"content":"        for (Task t : event.getTaskList()) {","lastModifiedDate":"2021-10-26"},{"lineNumber":286,"author":{"gitId":"antrikshv"},"content":"            printTask(t);","lastModifiedDate":"2021-10-26"},{"lineNumber":287,"author":{"gitId":"antrikshv"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":288,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":289,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":290,"author":{"gitId":"antrikshv"},"content":"    public static void printUpdateEventDetails(Event eventToBeUpdated) {","lastModifiedDate":"2021-10-31"},{"lineNumber":291,"author":{"gitId":"antrikshv"},"content":"        System.out.println(\"Here are the details of the event:\" + System.lineSeparator()","lastModifiedDate":"2021-10-31"},{"lineNumber":292,"author":{"gitId":"antrikshv"},"content":"                + \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2021-10-31"},{"lineNumber":293,"author":{"gitId":"antrikshv"},"content":"        printEvent(eventToBeUpdated);","lastModifiedDate":"2021-10-31"},{"lineNumber":294,"author":{"gitId":"antrikshv"},"content":"        printLineBreak();","lastModifiedDate":"2021-10-31"},{"lineNumber":295,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":296,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":297,"author":{"gitId":"antrikshv"},"content":"    public static void postUpdateMessage(Event eventToBeUpdated) {","lastModifiedDate":"2021-10-31"},{"lineNumber":298,"author":{"gitId":"antrikshv"},"content":"        System.out.println(\"Here is the Event\"","lastModifiedDate":"2021-10-31"},{"lineNumber":299,"author":{"gitId":"antrikshv"},"content":"                + System.lineSeparator()","lastModifiedDate":"2021-10-31"},{"lineNumber":300,"author":{"gitId":"antrikshv"},"content":"                + \"---------------------------\");","lastModifiedDate":"2021-10-31"},{"lineNumber":301,"author":{"gitId":"antrikshv"},"content":"        printUpdatedEvent(eventToBeUpdated);","lastModifiedDate":"2021-10-31"},{"lineNumber":302,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":303,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":304,"author":{"gitId":"antrikshv"},"content":"    public static String updateExitMessage() {","lastModifiedDate":"2021-10-31"},{"lineNumber":305,"author":{"gitId":"antrikshv"},"content":"        return getLineBreak() + System.lineSeparator() + \"returning to main page...\";","lastModifiedDate":"2021-10-31"},{"lineNumber":306,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":307,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":308,"author":{"gitId":"antrikshv"},"content":"    public static void updateTaskIntroMessage() {","lastModifiedDate":"2021-10-31"},{"lineNumber":309,"author":{"gitId":"antrikshv"},"content":"        Ui.printLineBreak();","lastModifiedDate":"2021-10-31"},{"lineNumber":310,"author":{"gitId":"antrikshv"},"content":"        System.out.println(\"Please type the item for task you would like to update in the following manner \"","lastModifiedDate":"2021-10-31"},{"lineNumber":311,"author":{"gitId":"antrikshv"},"content":"                + System.lineSeparator() + \"-----------------------------------------------------------------------\"","lastModifiedDate":"2021-10-31"},{"lineNumber":312,"author":{"gitId":"antrikshv"},"content":"                + System.lineSeparator() + \"n/[NEW NAME]   \"","lastModifiedDate":"2021-11-02"},{"lineNumber":313,"author":{"gitId":"antrikshv"},"content":"                + System.lineSeparator() + \"d/[NEW DATE[d/dd-MM-yyyy HHmm]]\"","lastModifiedDate":"2021-11-02"},{"lineNumber":314,"author":{"gitId":"antrikshv"},"content":"                + System.lineSeparator() + \"p/[NEW DESCRIPTION]\"","lastModifiedDate":"2021-11-02"},{"lineNumber":315,"author":{"gitId":"antrikshv"},"content":"                + System.lineSeparator() + \"member/[MEMBER INDEX]\"","lastModifiedDate":"2021-10-31"},{"lineNumber":316,"author":{"gitId":"antrikshv"},"content":"                + System.lineSeparator() + \"remove/[MEMBER INDEX]\"","lastModifiedDate":"2021-10-31"},{"lineNumber":317,"author":{"gitId":"antrikshv"},"content":"                + System.lineSeparator() + \"add : to add a member to a task\"","lastModifiedDate":"2021-11-02"},{"lineNumber":318,"author":{"gitId":"antrikshv"},"content":"                + System.lineSeparator()","lastModifiedDate":"2021-10-31"},{"lineNumber":319,"author":{"gitId":"antrikshv"},"content":"                + \"\\nOnly type a singular update at given time!\"","lastModifiedDate":"2021-11-02"},{"lineNumber":320,"author":{"gitId":"antrikshv"},"content":"                + \"\\n Only the first command will be updated if multiple updates are written\"","lastModifiedDate":"2021-11-02"},{"lineNumber":321,"author":{"gitId":"antrikshv"},"content":"                + System.lineSeparator() + Ui.getLineBreak());","lastModifiedDate":"2021-10-31"},{"lineNumber":322,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":323,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":324,"author":{"gitId":"antrikshv"},"content":"    public static void printNextCommandErrorMessage() {","lastModifiedDate":"2021-11-02"},{"lineNumber":325,"author":{"gitId":"antrikshv"},"content":"        System.out.println(\"please follow the correct format\"","lastModifiedDate":"2021-11-02"},{"lineNumber":326,"author":{"gitId":"antrikshv"},"content":"                + System.lineSeparator()","lastModifiedDate":"2021-11-02"},{"lineNumber":327,"author":{"gitId":"antrikshv"},"content":"                + \"next event : View details of the upcoming events\"","lastModifiedDate":"2021-11-02"},{"lineNumber":328,"author":{"gitId":"antrikshv"},"content":"                + System.lineSeparator()","lastModifiedDate":"2021-11-02"},{"lineNumber":329,"author":{"gitId":"antrikshv"},"content":"                + \"next task [Event index]: View details of the task with the closest deadline in a particular \"","lastModifiedDate":"2021-11-02"},{"lineNumber":330,"author":{"gitId":"antrikshv"},"content":"                + \"event\"","lastModifiedDate":"2021-11-02"},{"lineNumber":331,"author":{"gitId":"antrikshv"},"content":"                + System.lineSeparator()","lastModifiedDate":"2021-11-02"},{"lineNumber":332,"author":{"gitId":"antrikshv"},"content":"                + Ui.getLineBreak());","lastModifiedDate":"2021-11-02"},{"lineNumber":333,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":334,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":335,"author":{"gitId":"antrikshv"},"content":"    public static void printMonth(LocalDateTime date) {","lastModifiedDate":"2021-11-08"},{"lineNumber":336,"author":{"gitId":"antrikshv"},"content":"        int year \u003d date.getYear();","lastModifiedDate":"2021-11-08"},{"lineNumber":337,"author":{"gitId":"antrikshv"},"content":"        int month \u003d date.getMonthValue();","lastModifiedDate":"2021-11-08"},{"lineNumber":338,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":339,"author":{"gitId":"antrikshv"},"content":"        System.out.print(date.getMonth() + \"  \");","lastModifiedDate":"2021-11-08"},{"lineNumber":340,"author":{"gitId":"antrikshv"},"content":"        System.out.println(year + \"\\n------------------------------\");","lastModifiedDate":"2021-11-08"},{"lineNumber":341,"author":{"gitId":"antrikshv"},"content":"        System.out.println(\"Sun Mon Tue Wed Thu Fri Sat\");","lastModifiedDate":"2021-11-08"},{"lineNumber":342,"author":{"gitId":"antrikshv"},"content":"        int counter \u003d 1;","lastModifiedDate":"2021-11-08"},{"lineNumber":343,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":344,"author":{"gitId":"antrikshv"},"content":"        int dayValue \u003d LocalDateTime.of(year, month, 1, 12, 30).getDayOfWeek().getValue();","lastModifiedDate":"2021-11-08"},{"lineNumber":345,"author":{"gitId":"antrikshv"},"content":"        YearMonth ym \u003d YearMonth.of(year, month);","lastModifiedDate":"2021-11-08"},{"lineNumber":346,"author":{"gitId":"antrikshv"},"content":"        if (dayValue !\u003d 7) {","lastModifiedDate":"2021-11-08"},{"lineNumber":347,"author":{"gitId":"antrikshv"},"content":"            for (int i \u003d 0; i \u003c dayValue; i++, counter++) {","lastModifiedDate":"2021-11-08"},{"lineNumber":348,"author":{"gitId":"antrikshv"},"content":"                System.out.printf(\"%-4s\", \"  \");","lastModifiedDate":"2021-11-08"},{"lineNumber":349,"author":{"gitId":"antrikshv"},"content":"            }","lastModifiedDate":"2021-11-08"},{"lineNumber":350,"author":{"gitId":"antrikshv"},"content":"        }","lastModifiedDate":"2021-11-08"},{"lineNumber":351,"author":{"gitId":"antrikshv"},"content":"        if (date.getDayOfMonth() \u003d\u003d 1) {","lastModifiedDate":"2021-11-08"},{"lineNumber":352,"author":{"gitId":"antrikshv"},"content":"            System.out.printf(\"%-4s\", \"*1\");","lastModifiedDate":"2021-11-08"},{"lineNumber":353,"author":{"gitId":"antrikshv"},"content":"            counter++;","lastModifiedDate":"2021-11-08"},{"lineNumber":354,"author":{"gitId":"antrikshv"},"content":"        }","lastModifiedDate":"2021-11-08"},{"lineNumber":355,"author":{"gitId":"antrikshv"},"content":"        for (int i \u003d 1; i \u003c\u003d ym.getMonth().length(ym.isLeapYear()); i++, counter++) {","lastModifiedDate":"2021-11-08"},{"lineNumber":356,"author":{"gitId":"antrikshv"},"content":"            if (date.getDayOfMonth() \u003d\u003d 1) {","lastModifiedDate":"2021-11-08"},{"lineNumber":357,"author":{"gitId":"antrikshv"},"content":"                System.out.printf(\"%-4s\", \"*1\");","lastModifiedDate":"2021-11-08"},{"lineNumber":358,"author":{"gitId":"antrikshv"},"content":"                counter++;","lastModifiedDate":"2021-11-08"},{"lineNumber":359,"author":{"gitId":"antrikshv"},"content":"            } else {","lastModifiedDate":"2021-11-08"},{"lineNumber":360,"author":{"gitId":"antrikshv"},"content":"                System.out.printf(\"%-4d\", i);","lastModifiedDate":"2021-11-08"},{"lineNumber":361,"author":{"gitId":"antrikshv"},"content":"                if (i \u003d\u003d date.getDayOfMonth() - 1) {","lastModifiedDate":"2021-11-08"},{"lineNumber":362,"author":{"gitId":"antrikshv"},"content":"                    System.out.print(\"*\");","lastModifiedDate":"2021-11-08"},{"lineNumber":363,"author":{"gitId":"antrikshv"},"content":"                }","lastModifiedDate":"2021-11-08"},{"lineNumber":364,"author":{"gitId":"antrikshv"},"content":"            }","lastModifiedDate":"2021-11-08"},{"lineNumber":365,"author":{"gitId":"antrikshv"},"content":"            if (counter % 7 \u003d\u003d 0) {","lastModifiedDate":"2021-11-08"},{"lineNumber":366,"author":{"gitId":"antrikshv"},"content":"                System.out.println();","lastModifiedDate":"2021-11-08"},{"lineNumber":367,"author":{"gitId":"antrikshv"},"content":"            }","lastModifiedDate":"2021-11-08"},{"lineNumber":368,"author":{"gitId":"antrikshv"},"content":"        }","lastModifiedDate":"2021-11-08"},{"lineNumber":369,"author":{"gitId":"antrikshv"},"content":"        System.out.println(\"\\n\" + Ui.getLineBreak());","lastModifiedDate":"2021-11-08"},{"lineNumber":370,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":371,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":372,"author":{"gitId":"crabnuggets"},"content":"    public static void printLoadingMessage() {","lastModifiedDate":"2021-11-07"},{"lineNumber":373,"author":{"gitId":"crabnuggets"},"content":"        System.out.println(\"Save file detected! Loading...\");","lastModifiedDate":"2021-11-07"},{"lineNumber":374,"author":{"gitId":"crabnuggets"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":375,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":376,"author":{"gitId":"crabnuggets"},"content":"    public static void printLoadSuccesfulMessage() {","lastModifiedDate":"2021-11-07"},{"lineNumber":377,"author":{"gitId":"crabnuggets"},"content":"        System.out.println(\"...File loading process complete!\\n\" + getLineBreak());","lastModifiedDate":"2021-11-07"},{"lineNumber":378,"author":{"gitId":"crabnuggets"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":379,"author":{"gitId":"antrikshv"},"content":"}","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"antrikshv":174,"Alvinlj00":75,"crabnuggets":89,"alwinangys":41}},{"path":"src/main/java/seedu/duke/commands/ByeCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"antrikshv"},"content":"package seedu.duke.commands;","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"crabnuggets"},"content":"import seedu.duke.Ui;","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"antrikshv"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2021-10-04"},{"lineNumber":6,"author":{"gitId":"antrikshv"},"content":"    public static boolean isRunning \u003d true;","lastModifiedDate":"2021-10-04"},{"lineNumber":7,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":8,"author":{"gitId":"antrikshv"},"content":"    public ByeCommand() {","lastModifiedDate":"2021-10-04"},{"lineNumber":9,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":10,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":11,"author":{"gitId":"antrikshv"},"content":"    public CommandResult execute() {","lastModifiedDate":"2021-10-04"},{"lineNumber":12,"author":{"gitId":"antrikshv"},"content":"        isRunning \u003d false;","lastModifiedDate":"2021-10-04"},{"lineNumber":13,"author":{"gitId":"crabnuggets"},"content":"        return new CommandResult(Ui.getByeMessage());","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":15,"author":{"gitId":"antrikshv"},"content":"}","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"antrikshv":12,"crabnuggets":3}},{"path":"src/main/java/seedu/duke/commands/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"antrikshv"},"content":"package seedu.duke.commands;","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"antrikshv"},"content":"public class Command {","lastModifiedDate":"2021-10-04"},{"lineNumber":4,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":5,"author":{"gitId":"antrikshv"},"content":"    public Command() {","lastModifiedDate":"2021-10-04"},{"lineNumber":6,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":7,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":8,"author":{"gitId":"antrikshv"},"content":"    public CommandResult execute() {","lastModifiedDate":"2021-10-04"},{"lineNumber":9,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":10,"author":{"gitId":"antrikshv"},"content":"        /*","lastModifiedDate":"2021-10-04"},{"lineNumber":11,"author":{"gitId":"antrikshv"},"content":"        This is thrown if ever an empty command is executed (pseudo error message)","lastModifiedDate":"2021-10-04"},{"lineNumber":12,"author":{"gitId":"antrikshv"},"content":"        Will get overridden by methods within the separate commands","lastModifiedDate":"2021-10-04"},{"lineNumber":13,"author":{"gitId":"antrikshv"},"content":"         */","lastModifiedDate":"2021-10-04"},{"lineNumber":14,"author":{"gitId":"antrikshv"},"content":"        return new CommandResult(\"Sorry I did not quite understand, \"","lastModifiedDate":"2021-10-04"},{"lineNumber":15,"author":{"gitId":"antrikshv"},"content":"                + System.lineSeparator()","lastModifiedDate":"2021-10-04"},{"lineNumber":16,"author":{"gitId":"antrikshv"},"content":"                + \"try typing in help for brief user manual\");","lastModifiedDate":"2021-10-04"},{"lineNumber":17,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":18,"author":{"gitId":"antrikshv"},"content":"}","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"antrikshv":18}},{"path":"src/main/java/seedu/duke/commands/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"antrikshv"},"content":"package seedu.duke.commands;","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"antrikshv"},"content":"public class CommandResult {","lastModifiedDate":"2021-10-04"},{"lineNumber":4,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":5,"author":{"gitId":"antrikshv"},"content":"    public String feedbackToUser;","lastModifiedDate":"2021-10-04"},{"lineNumber":6,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":7,"author":{"gitId":"antrikshv"},"content":"    public CommandResult(String s) {","lastModifiedDate":"2021-10-04"},{"lineNumber":8,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":9,"author":{"gitId":"antrikshv"},"content":"        feedbackToUser \u003d s;","lastModifiedDate":"2021-10-04"},{"lineNumber":10,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":11,"author":{"gitId":"antrikshv"},"content":"}","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"antrikshv":11}},{"path":"src/main/java/seedu/duke/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"antrikshv"},"content":"package seedu.duke.commands;","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"alwinangys"},"content":"import seedu.duke.Duke;","lastModifiedDate":"2021-11-07"},{"lineNumber":5,"author":{"gitId":"alwinangys"},"content":"import seedu.duke.Ui;","lastModifiedDate":"2021-11-07"},{"lineNumber":6,"author":{"gitId":"alwinangys"},"content":"import seedu.duke.items.Event;","lastModifiedDate":"2021-11-07"},{"lineNumber":7,"author":{"gitId":"alwinangys"},"content":"import seedu.duke.items.Task;","lastModifiedDate":"2021-11-07"},{"lineNumber":8,"author":{"gitId":"alwinangys"},"content":"import seedu.duke.items.characteristics.Member;","lastModifiedDate":"2021-11-07"},{"lineNumber":9,"author":{"gitId":"alwinangys"},"content":"import seedu.duke.parser.ItemType;","lastModifiedDate":"2021-11-07"},{"lineNumber":10,"author":{"gitId":"alwinangys"},"content":"import seedu.duke.parser.Parser;","lastModifiedDate":"2021-11-07"},{"lineNumber":11,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":12,"author":{"gitId":"alwinangys"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-11-07"},{"lineNumber":13,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":14,"author":{"gitId":"alwinangys"},"content":"import static seedu.duke.parser.ItemType.EVENT;","lastModifiedDate":"2021-11-07"},{"lineNumber":15,"author":{"gitId":"alwinangys"},"content":"import static seedu.duke.parser.ItemType.TASK;","lastModifiedDate":"2021-11-07"},{"lineNumber":16,"author":{"gitId":"alwinangys"},"content":"import static seedu.duke.parser.ItemType.MEMBER;","lastModifiedDate":"2021-11-07"},{"lineNumber":17,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"antrikshv"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2021-10-04"},{"lineNumber":19,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":20,"author":{"gitId":"alwinangys"},"content":"    protected ItemType itemType;","lastModifiedDate":"2021-11-07"},{"lineNumber":21,"author":{"gitId":"alwinangys"},"content":"    private int eventIndex;","lastModifiedDate":"2021-11-07"},{"lineNumber":22,"author":{"gitId":"alwinangys"},"content":"    private int taskIndex;","lastModifiedDate":"2021-11-07"},{"lineNumber":23,"author":{"gitId":"alwinangys"},"content":"    private int memberIndex;","lastModifiedDate":"2021-11-07"},{"lineNumber":24,"author":{"gitId":"alwinangys"},"content":"    private static boolean canDeleteMember \u003d false;","lastModifiedDate":"2021-11-08"},{"lineNumber":25,"author":{"gitId":"alwinangys"},"content":"    private static boolean isDeleteAll \u003d false;","lastModifiedDate":"2021-11-08"},{"lineNumber":26,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":27,"author":{"gitId":"alwinangys"},"content":"    public DeleteCommand() {","lastModifiedDate":"2021-11-08"},{"lineNumber":28,"author":{"gitId":"alwinangys"},"content":"        isDeleteAll \u003d true;","lastModifiedDate":"2021-11-08"},{"lineNumber":29,"author":{"gitId":"alwinangys"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":30,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"alwinangys"},"content":"    public DeleteCommand(ItemType itemType, int index) {","lastModifiedDate":"2021-11-07"},{"lineNumber":32,"author":{"gitId":"alwinangys"},"content":"        this.itemType \u003d itemType;","lastModifiedDate":"2021-11-07"},{"lineNumber":33,"author":{"gitId":"alwinangys"},"content":"        assert itemType \u003d\u003d EVENT | itemType \u003d\u003d TASK | itemType \u003d\u003d MEMBER;","lastModifiedDate":"2021-11-07"},{"lineNumber":34,"author":{"gitId":"alwinangys"},"content":"        if (itemType.equals(EVENT)) {","lastModifiedDate":"2021-11-07"},{"lineNumber":35,"author":{"gitId":"alwinangys"},"content":"            eventIndex \u003d index;","lastModifiedDate":"2021-11-07"},{"lineNumber":36,"author":{"gitId":"alwinangys"},"content":"        } else if (itemType.equals(TASK)) {","lastModifiedDate":"2021-11-07"},{"lineNumber":37,"author":{"gitId":"alwinangys"},"content":"            taskIndex \u003d index;","lastModifiedDate":"2021-11-07"},{"lineNumber":38,"author":{"gitId":"alwinangys"},"content":"        } else {","lastModifiedDate":"2021-11-07"},{"lineNumber":39,"author":{"gitId":"alwinangys"},"content":"            memberIndex \u003d index;","lastModifiedDate":"2021-11-07"},{"lineNumber":40,"author":{"gitId":"alwinangys"},"content":"        }","lastModifiedDate":"2021-11-07"},{"lineNumber":41,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":42,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":43,"author":{"gitId":"antrikshv"},"content":"    public CommandResult execute() {","lastModifiedDate":"2021-10-04"},{"lineNumber":44,"author":{"gitId":"alwinangys"},"content":"        if (isDeleteAll) {","lastModifiedDate":"2021-11-08"},{"lineNumber":45,"author":{"gitId":"alwinangys"},"content":"            deleteEverything();","lastModifiedDate":"2021-11-08"},{"lineNumber":46,"author":{"gitId":"alwinangys"},"content":"            return new CommandResult(\"I have deleted everything!\");","lastModifiedDate":"2021-11-08"},{"lineNumber":47,"author":{"gitId":"alwinangys"},"content":"        }","lastModifiedDate":"2021-11-08"},{"lineNumber":48,"author":{"gitId":"alwinangys"},"content":"        String deletedItem;","lastModifiedDate":"2021-11-07"},{"lineNumber":49,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":50,"author":{"gitId":"alwinangys"},"content":"        switch (itemType) {","lastModifiedDate":"2021-11-07"},{"lineNumber":51,"author":{"gitId":"alwinangys"},"content":"        case EVENT:","lastModifiedDate":"2021-11-07"},{"lineNumber":52,"author":{"gitId":"alwinangys"},"content":"            deletedItem \u003d deleteEvent(eventIndex);","lastModifiedDate":"2021-11-07"},{"lineNumber":53,"author":{"gitId":"alwinangys"},"content":"            return new CommandResult(Ui.getEventDeletionMessage(deletedItem));","lastModifiedDate":"2021-11-07"},{"lineNumber":54,"author":{"gitId":"alwinangys"},"content":"        case TASK:","lastModifiedDate":"2021-11-07"},{"lineNumber":55,"author":{"gitId":"alwinangys"},"content":"            deletedItem \u003d deleteTask(taskIndex);","lastModifiedDate":"2021-11-07"},{"lineNumber":56,"author":{"gitId":"alwinangys"},"content":"            return new CommandResult(Ui.getTaskDeletionMessage(deletedItem));","lastModifiedDate":"2021-11-07"},{"lineNumber":57,"author":{"gitId":"alwinangys"},"content":"        case MEMBER:","lastModifiedDate":"2021-11-07"},{"lineNumber":58,"author":{"gitId":"alwinangys"},"content":"            deletedItem \u003d deleteMember(memberIndex);","lastModifiedDate":"2021-11-07"},{"lineNumber":59,"author":{"gitId":"alwinangys"},"content":"            if (canDeleteMember) {","lastModifiedDate":"2021-11-08"},{"lineNumber":60,"author":{"gitId":"alwinangys"},"content":"                return new CommandResult(Ui.getMemberDeletionMessage(deletedItem));","lastModifiedDate":"2021-11-07"},{"lineNumber":61,"author":{"gitId":"alwinangys"},"content":"            }","lastModifiedDate":"2021-11-08"},{"lineNumber":62,"author":{"gitId":"alwinangys"},"content":"            return new CommandResult(Ui.getUnableToDeleteMemberMessage(deletedItem));","lastModifiedDate":"2021-11-08"},{"lineNumber":63,"author":{"gitId":"alwinangys"},"content":"        default:","lastModifiedDate":"2021-11-07"},{"lineNumber":64,"author":{"gitId":"alwinangys"},"content":"            return new CommandResult(\"Something went wrong.\");","lastModifiedDate":"2021-11-07"},{"lineNumber":65,"author":{"gitId":"alwinangys"},"content":"        }","lastModifiedDate":"2021-11-07"},{"lineNumber":66,"author":{"gitId":"alwinangys"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":67,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":68,"author":{"gitId":"alwinangys"},"content":"    private static String deleteEvent(int index) {","lastModifiedDate":"2021-11-07"},{"lineNumber":69,"author":{"gitId":"alwinangys"},"content":"        Event event \u003d Duke.eventCatalog.get(index);","lastModifiedDate":"2021-11-07"},{"lineNumber":70,"author":{"gitId":"alwinangys"},"content":"        Parser.updateIndexOfLastSelectedEvent(index);","lastModifiedDate":"2021-11-07"},{"lineNumber":71,"author":{"gitId":"alwinangys"},"content":"        for (int i \u003d 0; i \u003c event.getTaskList().size(); i++) {","lastModifiedDate":"2021-11-07"},{"lineNumber":72,"author":{"gitId":"alwinangys"},"content":"            deleteTask(i);","lastModifiedDate":"2021-11-07"},{"lineNumber":73,"author":{"gitId":"alwinangys"},"content":"        }","lastModifiedDate":"2021-11-07"},{"lineNumber":74,"author":{"gitId":"alwinangys"},"content":"        Duke.eventCatalog.remove(index);","lastModifiedDate":"2021-11-07"},{"lineNumber":75,"author":{"gitId":"alwinangys"},"content":"        Parser.updateIndexToNoEventSelected();","lastModifiedDate":"2021-11-07"},{"lineNumber":76,"author":{"gitId":"alwinangys"},"content":"        return event.getTitle();","lastModifiedDate":"2021-11-08"},{"lineNumber":77,"author":{"gitId":"alwinangys"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":78,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":79,"author":{"gitId":"alwinangys"},"content":"    private static String deleteTask(int index) {","lastModifiedDate":"2021-11-07"},{"lineNumber":80,"author":{"gitId":"alwinangys"},"content":"        int lastEventIndex \u003d Parser.getIndexOfLastSelectedEvent();","lastModifiedDate":"2021-11-07"},{"lineNumber":81,"author":{"gitId":"alwinangys"},"content":"        Event parentEvent \u003d Duke.eventCatalog.get(lastEventIndex);","lastModifiedDate":"2021-11-07"},{"lineNumber":82,"author":{"gitId":"alwinangys"},"content":"        String parentEventTitle \u003d parentEvent.getTitle();","lastModifiedDate":"2021-11-07"},{"lineNumber":83,"author":{"gitId":"alwinangys"},"content":"        Task taskToDelete \u003d Duke.eventCatalog.get(lastEventIndex).getFromTaskList(index);","lastModifiedDate":"2021-11-07"},{"lineNumber":84,"author":{"gitId":"alwinangys"},"content":"        String taskTitle \u003d taskToDelete.getTitle();","lastModifiedDate":"2021-11-07"},{"lineNumber":85,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":86,"author":{"gitId":"alwinangys"},"content":"        ArrayList\u003cMember\u003e memberList \u003d taskToDelete.getMemberList();","lastModifiedDate":"2021-11-07"},{"lineNumber":87,"author":{"gitId":"alwinangys"},"content":"        deleteTaskFromMemberTaskList(memberList, taskTitle, parentEventTitle);","lastModifiedDate":"2021-11-07"},{"lineNumber":88,"author":{"gitId":"alwinangys"},"content":"        Duke.eventCatalog.get(lastEventIndex).getTaskList().remove(index);","lastModifiedDate":"2021-11-07"},{"lineNumber":89,"author":{"gitId":"alwinangys"},"content":"        return taskTitle;","lastModifiedDate":"2021-11-07"},{"lineNumber":90,"author":{"gitId":"alwinangys"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":91,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":92,"author":{"gitId":"alwinangys"},"content":"    private static String deleteMember(int index) {","lastModifiedDate":"2021-11-07"},{"lineNumber":93,"author":{"gitId":"alwinangys"},"content":"        Member memberToDelete \u003d  Duke.memberRoster.get(index);","lastModifiedDate":"2021-11-07"},{"lineNumber":94,"author":{"gitId":"alwinangys"},"content":"        String memberName \u003d memberToDelete.getName();","lastModifiedDate":"2021-11-07"},{"lineNumber":95,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":96,"author":{"gitId":"alwinangys"},"content":"        ArrayList\u003cString\u003e tasksContainingOnlyMemberToDelete \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-11-07"},{"lineNumber":97,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":98,"author":{"gitId":"alwinangys"},"content":"        for (int i \u003d 0; i \u003c Duke.eventCatalog.size(); i++) {","lastModifiedDate":"2021-11-07"},{"lineNumber":99,"author":{"gitId":"alwinangys"},"content":"            for (Task task: Duke.eventCatalog.get(i).getTaskList()) {","lastModifiedDate":"2021-11-07"},{"lineNumber":100,"author":{"gitId":"alwinangys"},"content":"                int taskListSize \u003d task.memberList.size();","lastModifiedDate":"2021-11-08"},{"lineNumber":101,"author":{"gitId":"alwinangys"},"content":"                for (Member member: task.getMemberList()) {","lastModifiedDate":"2021-11-07"},{"lineNumber":102,"author":{"gitId":"alwinangys"},"content":"                    if (member.getName().equalsIgnoreCase(memberName) \u0026\u0026 taskListSize \u003d\u003d 1) {","lastModifiedDate":"2021-11-08"},{"lineNumber":103,"author":{"gitId":"alwinangys"},"content":"                        String details \u003d \"Event #\" + i + \": \" + task.getTitle();","lastModifiedDate":"2021-11-08"},{"lineNumber":104,"author":{"gitId":"alwinangys"},"content":"                        tasksContainingOnlyMemberToDelete.add(details);","lastModifiedDate":"2021-11-08"},{"lineNumber":105,"author":{"gitId":"alwinangys"},"content":"                    }","lastModifiedDate":"2021-11-07"},{"lineNumber":106,"author":{"gitId":"alwinangys"},"content":"                }","lastModifiedDate":"2021-11-07"},{"lineNumber":107,"author":{"gitId":"alwinangys"},"content":"            }","lastModifiedDate":"2021-11-07"},{"lineNumber":108,"author":{"gitId":"alwinangys"},"content":"        }","lastModifiedDate":"2021-11-07"},{"lineNumber":109,"author":{"gitId":"alwinangys"},"content":"        if (tasksContainingOnlyMemberToDelete.isEmpty()) {","lastModifiedDate":"2021-11-07"},{"lineNumber":110,"author":{"gitId":"alwinangys"},"content":"            for (int i \u003d 0; i \u003c Duke.eventCatalog.size(); i++) {","lastModifiedDate":"2021-11-07"},{"lineNumber":111,"author":{"gitId":"alwinangys"},"content":"                for (Task task: Duke.eventCatalog.get(i).getTaskList()) {","lastModifiedDate":"2021-11-07"},{"lineNumber":112,"author":{"gitId":"alwinangys"},"content":"                    int counter \u003d 0;","lastModifiedDate":"2021-11-07"},{"lineNumber":113,"author":{"gitId":"alwinangys"},"content":"                    for (Member member: task.getMemberList()) {","lastModifiedDate":"2021-11-07"},{"lineNumber":114,"author":{"gitId":"alwinangys"},"content":"                        if (member.getName().equalsIgnoreCase(memberName)) {","lastModifiedDate":"2021-11-07"},{"lineNumber":115,"author":{"gitId":"alwinangys"},"content":"                            task.memberList.remove(counter);","lastModifiedDate":"2021-11-07"},{"lineNumber":116,"author":{"gitId":"alwinangys"},"content":"                            break;","lastModifiedDate":"2021-11-08"},{"lineNumber":117,"author":{"gitId":"alwinangys"},"content":"                        }","lastModifiedDate":"2021-11-07"},{"lineNumber":118,"author":{"gitId":"alwinangys"},"content":"                        counter++;","lastModifiedDate":"2021-11-07"},{"lineNumber":119,"author":{"gitId":"alwinangys"},"content":"                    }","lastModifiedDate":"2021-11-07"},{"lineNumber":120,"author":{"gitId":"alwinangys"},"content":"                }","lastModifiedDate":"2021-11-07"},{"lineNumber":121,"author":{"gitId":"alwinangys"},"content":"            }","lastModifiedDate":"2021-11-07"},{"lineNumber":122,"author":{"gitId":"alwinangys"},"content":"            deleteMemberFromRoster(memberName);","lastModifiedDate":"2021-11-08"},{"lineNumber":123,"author":{"gitId":"alwinangys"},"content":"            canDeleteMember \u003d true;","lastModifiedDate":"2021-11-08"},{"lineNumber":124,"author":{"gitId":"alwinangys"},"content":"            return memberName;","lastModifiedDate":"2021-11-07"},{"lineNumber":125,"author":{"gitId":"alwinangys"},"content":"        }","lastModifiedDate":"2021-11-07"},{"lineNumber":126,"author":{"gitId":"alwinangys"},"content":"        return tasksContainingOnlyMemberToDelete.toString();","lastModifiedDate":"2021-11-08"},{"lineNumber":127,"author":{"gitId":"alwinangys"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":128,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":129,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":130,"author":{"gitId":"alwinangys"},"content":"    private static void deleteTaskFromMemberTaskList(ArrayList\u003cMember\u003e memberList, String taskTitle,","lastModifiedDate":"2021-11-08"},{"lineNumber":131,"author":{"gitId":"alwinangys"},"content":"                                                     String parentEventTitle) {","lastModifiedDate":"2021-11-08"},{"lineNumber":132,"author":{"gitId":"alwinangys"},"content":"        for (Member member: memberList) {","lastModifiedDate":"2021-11-07"},{"lineNumber":133,"author":{"gitId":"alwinangys"},"content":"            for (int i \u003d 0; i \u003c member.getAssignedTasks().size(); i++) {","lastModifiedDate":"2021-11-07"},{"lineNumber":134,"author":{"gitId":"alwinangys"},"content":"                Task task \u003d member.getAssignedTasks().get(i);","lastModifiedDate":"2021-11-07"},{"lineNumber":135,"author":{"gitId":"alwinangys"},"content":"                if (canDeleteTask(task, taskTitle, parentEventTitle)) {","lastModifiedDate":"2021-11-07"},{"lineNumber":136,"author":{"gitId":"alwinangys"},"content":"                    member.deleteTask(i);","lastModifiedDate":"2021-11-07"},{"lineNumber":137,"author":{"gitId":"alwinangys"},"content":"                }","lastModifiedDate":"2021-11-07"},{"lineNumber":138,"author":{"gitId":"alwinangys"},"content":"            }","lastModifiedDate":"2021-11-07"},{"lineNumber":139,"author":{"gitId":"alwinangys"},"content":"        }","lastModifiedDate":"2021-11-07"},{"lineNumber":140,"author":{"gitId":"alwinangys"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":141,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":142,"author":{"gitId":"alwinangys"},"content":"    private static boolean canDeleteTask(Task task, String taskTitle, String parentEventTitle) {","lastModifiedDate":"2021-11-07"},{"lineNumber":143,"author":{"gitId":"alwinangys"},"content":"        return task.getTitle().equals(taskTitle) \u0026\u0026 task.getEvent().getTitle().equals(parentEventTitle);","lastModifiedDate":"2021-11-07"},{"lineNumber":144,"author":{"gitId":"alwinangys"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":145,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":146,"author":{"gitId":"alwinangys"},"content":"    private static void deleteMemberFromRoster(String memberName) {","lastModifiedDate":"2021-11-08"},{"lineNumber":147,"author":{"gitId":"alwinangys"},"content":"        for (int i \u003d 0; i \u003c Duke.memberRoster.size(); i++) {","lastModifiedDate":"2021-11-08"},{"lineNumber":148,"author":{"gitId":"alwinangys"},"content":"            if (Duke.memberRoster.get(i).getName().equalsIgnoreCase(memberName)) {","lastModifiedDate":"2021-11-08"},{"lineNumber":149,"author":{"gitId":"alwinangys"},"content":"                Duke.memberRoster.remove(i);","lastModifiedDate":"2021-11-08"},{"lineNumber":150,"author":{"gitId":"alwinangys"},"content":"                return;","lastModifiedDate":"2021-11-08"},{"lineNumber":151,"author":{"gitId":"alwinangys"},"content":"            }","lastModifiedDate":"2021-11-08"},{"lineNumber":152,"author":{"gitId":"alwinangys"},"content":"        }","lastModifiedDate":"2021-11-08"},{"lineNumber":153,"author":{"gitId":"alwinangys"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":154,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":155,"author":{"gitId":"alwinangys"},"content":"    private static void deleteEverything() {","lastModifiedDate":"2021-11-08"},{"lineNumber":156,"author":{"gitId":"alwinangys"},"content":"        Duke.eventCatalog.clear();","lastModifiedDate":"2021-11-08"},{"lineNumber":157,"author":{"gitId":"alwinangys"},"content":"        Duke.memberRoster.clear();","lastModifiedDate":"2021-11-08"},{"lineNumber":158,"author":{"gitId":"alwinangys"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":159,"author":{"gitId":"antrikshv"},"content":"}","lastModifiedDate":"2021-10-04"},{"lineNumber":160,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"antrikshv":8,"alwinangys":152}},{"path":"src/main/java/seedu/duke/commands/DoneUndoCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Alvinlj00"},"content":"package seedu.duke.commands;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"Alvinlj00"},"content":"import seedu.duke.Duke;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"Alvinlj00"},"content":"import seedu.duke.Ui;","lastModifiedDate":"2021-11-07"},{"lineNumber":5,"author":{"gitId":"Alvinlj00"},"content":"import seedu.duke.items.Event;","lastModifiedDate":"2021-11-04"},{"lineNumber":6,"author":{"gitId":"Alvinlj00"},"content":"import seedu.duke.items.Task;","lastModifiedDate":"2021-11-07"},{"lineNumber":7,"author":{"gitId":"Alvinlj00"},"content":"import seedu.duke.parser.ItemType;","lastModifiedDate":"2021-11-07"},{"lineNumber":8,"author":{"gitId":"crabnuggets"},"content":"import seedu.duke.parser.Parser;","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"Alvinlj00"},"content":"public class DoneUndoCommand extends Command {","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"Alvinlj00"},"content":"    private final String action;","lastModifiedDate":"2021-11-07"},{"lineNumber":13,"author":{"gitId":"Alvinlj00"},"content":"    private final ItemType itemType;","lastModifiedDate":"2021-11-07"},{"lineNumber":14,"author":{"gitId":"Alvinlj00"},"content":"    private final int[] indexes;","lastModifiedDate":"2021-11-07"},{"lineNumber":15,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"Alvinlj00"},"content":"    private static final String DONE \u003d \"done\";","lastModifiedDate":"2021-11-07"},{"lineNumber":17,"author":{"gitId":"Alvinlj00"},"content":"    private static final String UNDO \u003d \"undo\";","lastModifiedDate":"2021-11-07"},{"lineNumber":18,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"Alvinlj00"},"content":"    public DoneUndoCommand(String action, ItemType itemType, int[] indexes) {","lastModifiedDate":"2021-11-07"},{"lineNumber":20,"author":{"gitId":"Alvinlj00"},"content":"        this.action \u003d action;","lastModifiedDate":"2021-11-07"},{"lineNumber":21,"author":{"gitId":"Alvinlj00"},"content":"        this.itemType \u003d itemType;","lastModifiedDate":"2021-11-07"},{"lineNumber":22,"author":{"gitId":"Alvinlj00"},"content":"        this.indexes \u003d indexes;","lastModifiedDate":"2021-11-07"},{"lineNumber":23,"author":{"gitId":"Alvinlj00"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"Alvinlj00"},"content":"    private String[] obtainAndMarkDoneItems() {","lastModifiedDate":"2021-11-07"},{"lineNumber":26,"author":{"gitId":"Alvinlj00"},"content":"        String[] listOfItems \u003d new String[2];","lastModifiedDate":"2021-11-07"},{"lineNumber":27,"author":{"gitId":"Alvinlj00"},"content":"        StringBuilder listOfItemsMarkedDone \u003d new StringBuilder();","lastModifiedDate":"2021-11-07"},{"lineNumber":28,"author":{"gitId":"Alvinlj00"},"content":"        StringBuilder listOfAlreadyDoneItems \u003d new StringBuilder();","lastModifiedDate":"2021-11-07"},{"lineNumber":29,"author":{"gitId":"Alvinlj00"},"content":"        switch (itemType) {","lastModifiedDate":"2021-11-07"},{"lineNumber":30,"author":{"gitId":"Alvinlj00"},"content":"        case EVENT:","lastModifiedDate":"2021-11-07"},{"lineNumber":31,"author":{"gitId":"Alvinlj00"},"content":"            for (int index : indexes) {","lastModifiedDate":"2021-10-26"},{"lineNumber":32,"author":{"gitId":"Alvinlj00"},"content":"                Event event \u003d Duke.eventCatalog.get(index);","lastModifiedDate":"2021-11-07"},{"lineNumber":33,"author":{"gitId":"Alvinlj00"},"content":"                if (!event.getIsDone()) {","lastModifiedDate":"2021-11-07"},{"lineNumber":34,"author":{"gitId":"Alvinlj00"},"content":"                    event.markAsDone();","lastModifiedDate":"2021-11-07"},{"lineNumber":35,"author":{"gitId":"Alvinlj00"},"content":"                    listOfItemsMarkedDone.append(event).append(\"\\n\");","lastModifiedDate":"2021-11-07"},{"lineNumber":36,"author":{"gitId":"Alvinlj00"},"content":"                } else {","lastModifiedDate":"2021-11-07"},{"lineNumber":37,"author":{"gitId":"Alvinlj00"},"content":"                    listOfAlreadyDoneItems.append(event).append(\"\\n\");","lastModifiedDate":"2021-11-07"},{"lineNumber":38,"author":{"gitId":"Alvinlj00"},"content":"                }","lastModifiedDate":"2021-10-26"},{"lineNumber":39,"author":{"gitId":"Alvinlj00"},"content":"            }","lastModifiedDate":"2021-10-26"},{"lineNumber":40,"author":{"gitId":"Alvinlj00"},"content":"            break;","lastModifiedDate":"2021-11-07"},{"lineNumber":41,"author":{"gitId":"Alvinlj00"},"content":"        case TASK:","lastModifiedDate":"2021-11-07"},{"lineNumber":42,"author":{"gitId":"Alvinlj00"},"content":"            Event selectedEvent \u003d Duke.eventCatalog.get(Parser.getIndexOfLastSelectedEvent());","lastModifiedDate":"2021-11-07"},{"lineNumber":43,"author":{"gitId":"Alvinlj00"},"content":"            for (int index : indexes) {","lastModifiedDate":"2021-10-26"},{"lineNumber":44,"author":{"gitId":"Alvinlj00"},"content":"                Task task \u003d selectedEvent.getFromTaskList(index);","lastModifiedDate":"2021-11-07"},{"lineNumber":45,"author":{"gitId":"Alvinlj00"},"content":"                if (!task.getIsDone()) {","lastModifiedDate":"2021-11-07"},{"lineNumber":46,"author":{"gitId":"Alvinlj00"},"content":"                    task.markAsDone();","lastModifiedDate":"2021-11-07"},{"lineNumber":47,"author":{"gitId":"Alvinlj00"},"content":"                    listOfItemsMarkedDone.append(task).append(\"\\n\");","lastModifiedDate":"2021-11-07"},{"lineNumber":48,"author":{"gitId":"Alvinlj00"},"content":"                } else {","lastModifiedDate":"2021-11-07"},{"lineNumber":49,"author":{"gitId":"Alvinlj00"},"content":"                    listOfAlreadyDoneItems.append(task).append(\"\\n\");","lastModifiedDate":"2021-11-07"},{"lineNumber":50,"author":{"gitId":"Alvinlj00"},"content":"                }","lastModifiedDate":"2021-10-26"},{"lineNumber":51,"author":{"gitId":"Alvinlj00"},"content":"            }","lastModifiedDate":"2021-10-11"},{"lineNumber":52,"author":{"gitId":"Alvinlj00"},"content":"            break;","lastModifiedDate":"2021-11-07"},{"lineNumber":53,"author":{"gitId":"Alvinlj00"},"content":"        default:","lastModifiedDate":"2021-11-07"},{"lineNumber":54,"author":{"gitId":"Alvinlj00"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":55,"author":{"gitId":"Alvinlj00"},"content":"        listOfItems[0] \u003d listOfItemsMarkedDone.toString();","lastModifiedDate":"2021-11-07"},{"lineNumber":56,"author":{"gitId":"Alvinlj00"},"content":"        listOfItems[1] \u003d listOfAlreadyDoneItems.toString();","lastModifiedDate":"2021-11-07"},{"lineNumber":57,"author":{"gitId":"Alvinlj00"},"content":"        return listOfItems;","lastModifiedDate":"2021-11-07"},{"lineNumber":58,"author":{"gitId":"Alvinlj00"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":59,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":60,"author":{"gitId":"Alvinlj00"},"content":"    private String[] obtainAndUndoItems() {","lastModifiedDate":"2021-11-07"},{"lineNumber":61,"author":{"gitId":"Alvinlj00"},"content":"        String[] listOfItems \u003d new String[2];","lastModifiedDate":"2021-11-07"},{"lineNumber":62,"author":{"gitId":"Alvinlj00"},"content":"        StringBuilder listOfItemsUnmarked \u003d new StringBuilder();","lastModifiedDate":"2021-11-07"},{"lineNumber":63,"author":{"gitId":"Alvinlj00"},"content":"        StringBuilder listOfUndoneItems \u003d new StringBuilder();","lastModifiedDate":"2021-11-07"},{"lineNumber":64,"author":{"gitId":"Alvinlj00"},"content":"        switch (itemType) {","lastModifiedDate":"2021-11-07"},{"lineNumber":65,"author":{"gitId":"Alvinlj00"},"content":"        case EVENT:","lastModifiedDate":"2021-11-07"},{"lineNumber":66,"author":{"gitId":"Alvinlj00"},"content":"            for (int index : indexes) {","lastModifiedDate":"2021-10-26"},{"lineNumber":67,"author":{"gitId":"Alvinlj00"},"content":"                Event event \u003d Duke.eventCatalog.get(index);","lastModifiedDate":"2021-11-07"},{"lineNumber":68,"author":{"gitId":"Alvinlj00"},"content":"                if (event.getIsDone()) {","lastModifiedDate":"2021-11-07"},{"lineNumber":69,"author":{"gitId":"Alvinlj00"},"content":"                    event.undo();","lastModifiedDate":"2021-11-07"},{"lineNumber":70,"author":{"gitId":"Alvinlj00"},"content":"                    listOfItemsUnmarked.append(event).append(\"\\n\");","lastModifiedDate":"2021-11-07"},{"lineNumber":71,"author":{"gitId":"Alvinlj00"},"content":"                } else {","lastModifiedDate":"2021-11-07"},{"lineNumber":72,"author":{"gitId":"Alvinlj00"},"content":"                    listOfUndoneItems.append(event).append(\"\\n\");","lastModifiedDate":"2021-11-07"},{"lineNumber":73,"author":{"gitId":"Alvinlj00"},"content":"                }","lastModifiedDate":"2021-10-26"},{"lineNumber":74,"author":{"gitId":"Alvinlj00"},"content":"            }","lastModifiedDate":"2021-10-26"},{"lineNumber":75,"author":{"gitId":"Alvinlj00"},"content":"            break;","lastModifiedDate":"2021-11-07"},{"lineNumber":76,"author":{"gitId":"Alvinlj00"},"content":"        case TASK:","lastModifiedDate":"2021-11-07"},{"lineNumber":77,"author":{"gitId":"Alvinlj00"},"content":"            Event selectedEvent \u003d Duke.eventCatalog.get(Parser.getIndexOfLastSelectedEvent());","lastModifiedDate":"2021-11-07"},{"lineNumber":78,"author":{"gitId":"Alvinlj00"},"content":"            for (int index : indexes) {","lastModifiedDate":"2021-10-26"},{"lineNumber":79,"author":{"gitId":"Alvinlj00"},"content":"                Task task \u003d selectedEvent.getFromTaskList(index);","lastModifiedDate":"2021-11-07"},{"lineNumber":80,"author":{"gitId":"Alvinlj00"},"content":"                if (task.getIsDone()) {","lastModifiedDate":"2021-11-07"},{"lineNumber":81,"author":{"gitId":"Alvinlj00"},"content":"                    task.undo();","lastModifiedDate":"2021-11-07"},{"lineNumber":82,"author":{"gitId":"Alvinlj00"},"content":"                    listOfItemsUnmarked.append(task).append(\"\\n\");","lastModifiedDate":"2021-11-07"},{"lineNumber":83,"author":{"gitId":"Alvinlj00"},"content":"                } else {","lastModifiedDate":"2021-11-07"},{"lineNumber":84,"author":{"gitId":"Alvinlj00"},"content":"                    listOfUndoneItems.append(task).append(\"\\n\");","lastModifiedDate":"2021-11-07"},{"lineNumber":85,"author":{"gitId":"Alvinlj00"},"content":"                }","lastModifiedDate":"2021-10-26"},{"lineNumber":86,"author":{"gitId":"Alvinlj00"},"content":"            }","lastModifiedDate":"2021-10-11"},{"lineNumber":87,"author":{"gitId":"Alvinlj00"},"content":"            break;","lastModifiedDate":"2021-11-07"},{"lineNumber":88,"author":{"gitId":"Alvinlj00"},"content":"        default:","lastModifiedDate":"2021-11-07"},{"lineNumber":89,"author":{"gitId":"Alvinlj00"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":90,"author":{"gitId":"Alvinlj00"},"content":"        listOfItems[0] \u003d listOfItemsUnmarked.toString();","lastModifiedDate":"2021-11-07"},{"lineNumber":91,"author":{"gitId":"Alvinlj00"},"content":"        listOfItems[1] \u003d listOfUndoneItems.toString();","lastModifiedDate":"2021-11-07"},{"lineNumber":92,"author":{"gitId":"Alvinlj00"},"content":"        return listOfItems;","lastModifiedDate":"2021-11-07"},{"lineNumber":93,"author":{"gitId":"Alvinlj00"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":94,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":95,"author":{"gitId":"Alvinlj00"},"content":"    public CommandResult execute() {","lastModifiedDate":"2021-10-11"},{"lineNumber":96,"author":{"gitId":"Alvinlj00"},"content":"        if (action.equals(DONE)) {","lastModifiedDate":"2021-11-07"},{"lineNumber":97,"author":{"gitId":"Alvinlj00"},"content":"            String[] listOfItems \u003d obtainAndMarkDoneItems();","lastModifiedDate":"2021-11-07"},{"lineNumber":98,"author":{"gitId":"Alvinlj00"},"content":"            return new CommandResult(Ui.getItemsMarkedDoneMessage(listOfItems[0], listOfItems[1]));","lastModifiedDate":"2021-11-07"},{"lineNumber":99,"author":{"gitId":"Alvinlj00"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":100,"author":{"gitId":"Alvinlj00"},"content":"        if (action.equals(UNDO)) {","lastModifiedDate":"2021-11-07"},{"lineNumber":101,"author":{"gitId":"Alvinlj00"},"content":"            String[] listOfItems \u003d obtainAndUndoItems();","lastModifiedDate":"2021-11-07"},{"lineNumber":102,"author":{"gitId":"Alvinlj00"},"content":"            return new CommandResult(Ui.getItemsUnmarkedMessage(listOfItems[0], listOfItems[1]));","lastModifiedDate":"2021-11-07"},{"lineNumber":103,"author":{"gitId":"Alvinlj00"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":104,"author":{"gitId":"Alvinlj00"},"content":"        return null;","lastModifiedDate":"2021-11-07"},{"lineNumber":105,"author":{"gitId":"Alvinlj00"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":106,"author":{"gitId":"Alvinlj00"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"Alvinlj00":105,"crabnuggets":1}},{"path":"src/main/java/seedu/duke/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"alwinangys"},"content":"package seedu.duke.commands;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"alwinangys"},"content":"import seedu.duke.Duke;","lastModifiedDate":"2021-11-07"},{"lineNumber":5,"author":{"gitId":"alwinangys"},"content":"import seedu.duke.items.Event;","lastModifiedDate":"2021-11-07"},{"lineNumber":6,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":7,"author":{"gitId":"alwinangys"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"alwinangys"},"content":"    private final String keywords;","lastModifiedDate":"2021-11-07"},{"lineNumber":10,"author":{"gitId":"alwinangys"},"content":"    private static int numberOfEventsFound;","lastModifiedDate":"2021-11-07"},{"lineNumber":11,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"alwinangys"},"content":"    public FindCommand(String keywords) {","lastModifiedDate":"2021-11-07"},{"lineNumber":14,"author":{"gitId":"alwinangys"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2021-11-07"},{"lineNumber":15,"author":{"gitId":"alwinangys"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"alwinangys"},"content":"    public CommandResult execute() {","lastModifiedDate":"2021-11-06"},{"lineNumber":18,"author":{"gitId":"alwinangys"},"content":"        String findResults \u003d filterEvents(keywords);","lastModifiedDate":"2021-11-07"},{"lineNumber":19,"author":{"gitId":"alwinangys"},"content":"        if (noEventsFound()) {","lastModifiedDate":"2021-11-07"},{"lineNumber":20,"author":{"gitId":"alwinangys"},"content":"            return new CommandResult(\"No matching events found!\");","lastModifiedDate":"2021-11-07"},{"lineNumber":21,"author":{"gitId":"alwinangys"},"content":"        }","lastModifiedDate":"2021-11-07"},{"lineNumber":22,"author":{"gitId":"alwinangys"},"content":"        return new CommandResult(findResults);","lastModifiedDate":"2021-11-07"},{"lineNumber":23,"author":{"gitId":"alwinangys"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":25,"author":{"gitId":"alwinangys"},"content":"    private static String filterEvents(String keyword) {","lastModifiedDate":"2021-11-07"},{"lineNumber":26,"author":{"gitId":"alwinangys"},"content":"        StringBuilder result \u003d new StringBuilder();","lastModifiedDate":"2021-11-07"},{"lineNumber":27,"author":{"gitId":"alwinangys"},"content":"        numberOfEventsFound \u003d 0;","lastModifiedDate":"2021-11-07"},{"lineNumber":28,"author":{"gitId":"alwinangys"},"content":"        for (int i \u003d 0; i \u003c Duke.eventCatalog.size(); i++) {","lastModifiedDate":"2021-11-07"},{"lineNumber":29,"author":{"gitId":"alwinangys"},"content":"            Event event \u003d Duke.eventCatalog.get(i);","lastModifiedDate":"2021-11-07"},{"lineNumber":30,"author":{"gitId":"alwinangys"},"content":"            if (event.getTitle().toLowerCase().contains(keyword.toLowerCase())) {","lastModifiedDate":"2021-11-07"},{"lineNumber":31,"author":{"gitId":"alwinangys"},"content":"                result.append(i + 1).append(\". \");","lastModifiedDate":"2021-11-07"},{"lineNumber":32,"author":{"gitId":"alwinangys"},"content":"                result.append(event.getTitle()).append(\"\\n\");","lastModifiedDate":"2021-11-07"},{"lineNumber":33,"author":{"gitId":"alwinangys"},"content":"                numberOfEventsFound++;","lastModifiedDate":"2021-11-07"},{"lineNumber":34,"author":{"gitId":"alwinangys"},"content":"            }","lastModifiedDate":"2021-11-07"},{"lineNumber":35,"author":{"gitId":"alwinangys"},"content":"        }","lastModifiedDate":"2021-11-07"},{"lineNumber":36,"author":{"gitId":"alwinangys"},"content":"        return result.toString();","lastModifiedDate":"2021-11-07"},{"lineNumber":37,"author":{"gitId":"alwinangys"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":38,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":39,"author":{"gitId":"alwinangys"},"content":"    private static boolean noEventsFound() {","lastModifiedDate":"2021-11-07"},{"lineNumber":40,"author":{"gitId":"alwinangys"},"content":"        return numberOfEventsFound \u003d\u003d 0;","lastModifiedDate":"2021-11-07"},{"lineNumber":41,"author":{"gitId":"alwinangys"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":42,"author":{"gitId":"alwinangys"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"alwinangys":42}},{"path":"src/main/java/seedu/duke/commands/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"antrikshv"},"content":"package seedu.duke.commands;","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"crabnuggets"},"content":"import seedu.duke.Ui;","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"antrikshv"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2021-10-04"},{"lineNumber":6,"author":{"gitId":"antrikshv"},"content":"    public HelpCommand() {","lastModifiedDate":"2021-10-04"},{"lineNumber":7,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":8,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":9,"author":{"gitId":"antrikshv"},"content":"    public CommandResult execute() {","lastModifiedDate":"2021-10-04"},{"lineNumber":10,"author":{"gitId":"crabnuggets"},"content":"        return new CommandResult(Ui.getHelpMessage());","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":12,"author":{"gitId":"antrikshv"},"content":"}","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"antrikshv":9,"crabnuggets":3}},{"path":"src/main/java/seedu/duke/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"antrikshv"},"content":"package seedu.duke.commands;","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"antrikshv"},"content":"import seedu.duke.Duke;","lastModifiedDate":"2021-10-04"},{"lineNumber":4,"author":{"gitId":"antrikshv"},"content":"import seedu.duke.Ui;","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"antrikshv"},"content":"import seedu.duke.items.Event;","lastModifiedDate":"2021-11-02"},{"lineNumber":6,"author":{"gitId":"antrikshv"},"content":"import seedu.duke.items.Task;","lastModifiedDate":"2021-11-02"},{"lineNumber":7,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":8,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"antrikshv"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2021-10-04"},{"lineNumber":10,"author":{"gitId":"antrikshv"},"content":"    protected String listType;","lastModifiedDate":"2021-10-04"},{"lineNumber":11,"author":{"gitId":"antrikshv"},"content":"    private final int eventIndex;","lastModifiedDate":"2021-11-02"},{"lineNumber":12,"author":{"gitId":"antrikshv"},"content":"    private final int taskIndex;","lastModifiedDate":"2021-11-02"},{"lineNumber":13,"author":{"gitId":"antrikshv"},"content":"    protected String feedback \u003d \"--------END OF LIST-----------\";","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"antrikshv"},"content":"    public ListCommand(String listType, int eventIndex, int taskIndex) {","lastModifiedDate":"2021-11-02"},{"lineNumber":16,"author":{"gitId":"antrikshv"},"content":"        this.listType \u003d listType;","lastModifiedDate":"2021-11-02"},{"lineNumber":17,"author":{"gitId":"antrikshv"},"content":"        this.eventIndex \u003d eventIndex;","lastModifiedDate":"2021-11-02"},{"lineNumber":18,"author":{"gitId":"antrikshv"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2021-11-02"},{"lineNumber":19,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":20,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":21,"author":{"gitId":"antrikshv"},"content":"    public CommandResult execute() {","lastModifiedDate":"2021-10-04"},{"lineNumber":22,"author":{"gitId":"antrikshv"},"content":"        switch (listType) {","lastModifiedDate":"2021-10-04"},{"lineNumber":23,"author":{"gitId":"antrikshv"},"content":"        case \"event\":","lastModifiedDate":"2021-11-02"},{"lineNumber":24,"author":{"gitId":"antrikshv"},"content":"            listingOverallSchedule();","lastModifiedDate":"2021-10-25"},{"lineNumber":25,"author":{"gitId":"antrikshv"},"content":"            break;","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"antrikshv"},"content":"        case \"task\":","lastModifiedDate":"2021-10-04"},{"lineNumber":27,"author":{"gitId":"antrikshv"},"content":"            listingTaskDetails();","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"antrikshv"},"content":"            break;","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"antrikshv"},"content":"        case \"member\":","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"antrikshv"},"content":"            listingMemberDetails();","lastModifiedDate":"2021-10-25"},{"lineNumber":31,"author":{"gitId":"antrikshv"},"content":"            break;","lastModifiedDate":"2021-10-04"},{"lineNumber":32,"author":{"gitId":"antrikshv"},"content":"        case \"memberRoster\":","lastModifiedDate":"2021-10-26"},{"lineNumber":33,"author":{"gitId":"antrikshv"},"content":"            listingMemberRoster();","lastModifiedDate":"2021-10-26"},{"lineNumber":34,"author":{"gitId":"antrikshv"},"content":"            break;","lastModifiedDate":"2021-10-26"},{"lineNumber":35,"author":{"gitId":"antrikshv"},"content":"        case \"EventError\":","lastModifiedDate":"2021-10-26"},{"lineNumber":36,"author":{"gitId":"antrikshv"},"content":"            return new CommandResult(\"Please specify which event to view!\");","lastModifiedDate":"2021-10-26"},{"lineNumber":37,"author":{"gitId":"antrikshv"},"content":"        default:","lastModifiedDate":"2021-10-04"},{"lineNumber":38,"author":{"gitId":"antrikshv"},"content":"            return new CommandResult(\"please specify type for list \"","lastModifiedDate":"2021-10-04"},{"lineNumber":39,"author":{"gitId":"antrikshv"},"content":"                    + System.lineSeparator()","lastModifiedDate":"2021-10-26"},{"lineNumber":40,"author":{"gitId":"antrikshv"},"content":"                    + \"list -e: to see overall events\"","lastModifiedDate":"2021-11-02"},{"lineNumber":41,"author":{"gitId":"antrikshv"},"content":"                    + System.lineSeparator()","lastModifiedDate":"2021-11-02"},{"lineNumber":42,"author":{"gitId":"antrikshv"},"content":"                    + \"list -t [EVENT_NUM]: to see tasks in an Event\"","lastModifiedDate":"2021-11-02"},{"lineNumber":43,"author":{"gitId":"antrikshv"},"content":"                    + System.lineSeparator()","lastModifiedDate":"2021-10-26"},{"lineNumber":44,"author":{"gitId":"antrikshv"},"content":"                    + \"list -m e/[Event Index] t/[Task Index] : to see members in a Task\"","lastModifiedDate":"2021-11-02"},{"lineNumber":45,"author":{"gitId":"antrikshv"},"content":"                    + System.lineSeparator()","lastModifiedDate":"2021-10-26"},{"lineNumber":46,"author":{"gitId":"antrikshv"},"content":"                    + \"list -m: to see overall member roster\");","lastModifiedDate":"2021-11-02"},{"lineNumber":47,"author":{"gitId":"antrikshv"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":48,"author":{"gitId":"antrikshv"},"content":"        return new CommandResult(feedback);","lastModifiedDate":"2021-10-26"},{"lineNumber":49,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":50,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":51,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":52,"author":{"gitId":"antrikshv"},"content":"    private void listingMemberRoster() {","lastModifiedDate":"2021-10-26"},{"lineNumber":53,"author":{"gitId":"antrikshv"},"content":"        System.out.println(\"List of members in MemberRoster\");","lastModifiedDate":"2021-10-26"},{"lineNumber":54,"author":{"gitId":"antrikshv"},"content":"        Ui.printMemberRoster();","lastModifiedDate":"2021-10-26"},{"lineNumber":55,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":56,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":57,"author":{"gitId":"antrikshv"},"content":"    private void listingOverallSchedule() {","lastModifiedDate":"2021-10-25"},{"lineNumber":58,"author":{"gitId":"antrikshv"},"content":"        System.out.println(\"OVERALL SCHEDULE\"","lastModifiedDate":"2021-10-25"},{"lineNumber":59,"author":{"gitId":"antrikshv"},"content":"                + System.lineSeparator() + \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2021-10-25"},{"lineNumber":60,"author":{"gitId":"antrikshv"},"content":"        Ui.printEventCatalog();","lastModifiedDate":"2021-10-25"},{"lineNumber":61,"author":{"gitId":"antrikshv"},"content":"        Ui.listUsageCommands();","lastModifiedDate":"2021-10-25"},{"lineNumber":62,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":63,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":64,"author":{"gitId":"antrikshv"},"content":"    private void listingTaskDetails() {","lastModifiedDate":"2021-11-02"},{"lineNumber":65,"author":{"gitId":"antrikshv"},"content":"        Event event1;","lastModifiedDate":"2021-10-25"},{"lineNumber":66,"author":{"gitId":"antrikshv"},"content":"        event1 \u003d Duke.eventCatalog.get(eventIndex);","lastModifiedDate":"2021-11-02"},{"lineNumber":67,"author":{"gitId":"antrikshv"},"content":"        System.out.println(\"Event: \" + event1.getTitle()","lastModifiedDate":"2021-10-25"},{"lineNumber":68,"author":{"gitId":"antrikshv"},"content":"                + System.lineSeparator() + \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2021-10-25"},{"lineNumber":69,"author":{"gitId":"antrikshv"},"content":"        Ui.printList(event1.getTaskList());","lastModifiedDate":"2021-10-25"},{"lineNumber":70,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":71,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":72,"author":{"gitId":"antrikshv"},"content":"    private void listingMemberDetails() {","lastModifiedDate":"2021-11-02"},{"lineNumber":73,"author":{"gitId":"antrikshv"},"content":"        Event event2 \u003d Duke.eventCatalog.get(eventIndex);","lastModifiedDate":"2021-11-02"},{"lineNumber":74,"author":{"gitId":"antrikshv"},"content":"        Task task \u003d event2.getFromTaskList(taskIndex);","lastModifiedDate":"2021-11-02"},{"lineNumber":75,"author":{"gitId":"antrikshv"},"content":"        System.out.println(\"Event: \" + event2.getTitle()","lastModifiedDate":"2021-10-25"},{"lineNumber":76,"author":{"gitId":"antrikshv"},"content":"                + System.lineSeparator() + \"Task: \" + task.getTitle()","lastModifiedDate":"2021-10-25"},{"lineNumber":77,"author":{"gitId":"antrikshv"},"content":"                + System.lineSeparator() + \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2021-10-25"},{"lineNumber":78,"author":{"gitId":"antrikshv"},"content":"        Ui.printMemberList(task.getMemberList());","lastModifiedDate":"2021-10-25"},{"lineNumber":79,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":80,"author":{"gitId":"antrikshv"},"content":"}","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"antrikshv":80}},{"path":"src/main/java/seedu/duke/commands/NextCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"antrikshv"},"content":"package seedu.duke.commands;","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"antrikshv"},"content":"import seedu.duke.Duke;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"antrikshv"},"content":"import seedu.duke.Ui;","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"antrikshv"},"content":"public class NextCommand extends Command {","lastModifiedDate":"2021-10-04"},{"lineNumber":8,"author":{"gitId":"antrikshv"},"content":"    protected static String nextItem;","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"antrikshv"},"content":"    protected static int eventIndex;","lastModifiedDate":"2021-11-02"},{"lineNumber":10,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"antrikshv"},"content":"    public NextCommand(String command, int index) {","lastModifiedDate":"2021-11-02"},{"lineNumber":12,"author":{"gitId":"antrikshv"},"content":"        nextItem \u003d command;","lastModifiedDate":"2021-11-02"},{"lineNumber":13,"author":{"gitId":"antrikshv"},"content":"        eventIndex \u003d index;","lastModifiedDate":"2021-11-02"},{"lineNumber":14,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"antrikshv"},"content":"    public CommandResult execute() {","lastModifiedDate":"2021-11-02"},{"lineNumber":17,"author":{"gitId":"antrikshv"},"content":"        switch (nextItem) {","lastModifiedDate":"2021-11-02"},{"lineNumber":18,"author":{"gitId":"antrikshv"},"content":"        case \"event\":","lastModifiedDate":"2021-11-02"},{"lineNumber":19,"author":{"gitId":"antrikshv"},"content":"            Ui.printMonth(Duke.eventCatalog.get(eventIndex).getDateTime());","lastModifiedDate":"2021-11-08"},{"lineNumber":20,"author":{"gitId":"antrikshv"},"content":"            Ui.printEvent(Duke.eventCatalog.get(eventIndex));","lastModifiedDate":"2021-11-02"},{"lineNumber":21,"author":{"gitId":"antrikshv"},"content":"            break;","lastModifiedDate":"2021-11-02"},{"lineNumber":22,"author":{"gitId":"antrikshv"},"content":"        case \"task\":","lastModifiedDate":"2021-11-02"},{"lineNumber":23,"author":{"gitId":"antrikshv"},"content":"            Ui.printTask(Duke.eventCatalog.get(eventIndex).getFromTaskList(0));","lastModifiedDate":"2021-11-02"},{"lineNumber":24,"author":{"gitId":"antrikshv"},"content":"            break;","lastModifiedDate":"2021-11-02"},{"lineNumber":25,"author":{"gitId":"antrikshv"},"content":"        case \"noTask\":","lastModifiedDate":"2021-11-02"},{"lineNumber":26,"author":{"gitId":"antrikshv"},"content":"            return new CommandResult(\"This Event has no Tasks!\");","lastModifiedDate":"2021-11-02"},{"lineNumber":27,"author":{"gitId":"antrikshv"},"content":"        default:","lastModifiedDate":"2021-11-02"},{"lineNumber":28,"author":{"gitId":"antrikshv"},"content":"            return new CommandResult(\"please specify type for list \"","lastModifiedDate":"2021-11-02"},{"lineNumber":29,"author":{"gitId":"antrikshv"},"content":"                    + System.lineSeparator()","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"antrikshv"},"content":"                    + \"[list: to see overall schedule\"","lastModifiedDate":"2021-11-02"},{"lineNumber":31,"author":{"gitId":"antrikshv"},"content":"                    + System.lineSeparator()","lastModifiedDate":"2021-10-25"},{"lineNumber":32,"author":{"gitId":"antrikshv"},"content":"                    + \"list [EVENT_NUM] -t : to see tasks in an Event\"","lastModifiedDate":"2021-11-02"},{"lineNumber":33,"author":{"gitId":"antrikshv"},"content":"                    + System.lineSeparator()","lastModifiedDate":"2021-10-25"},{"lineNumber":34,"author":{"gitId":"antrikshv"},"content":"                    + \"list [Event Index] t/[Task Index] : to see members in a Task\");","lastModifiedDate":"2021-11-02"},{"lineNumber":35,"author":{"gitId":"antrikshv"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":36,"author":{"gitId":"antrikshv"},"content":"        return new CommandResult(\"Hope you have prepared everything!\");","lastModifiedDate":"2021-10-10"},{"lineNumber":37,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":38,"author":{"gitId":"antrikshv"},"content":"}","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"antrikshv":38}},{"path":"src/main/java/seedu/duke/commands/SelectCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"antrikshv"},"content":"package seedu.duke.commands;","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"alwinangys"},"content":"import seedu.duke.Duke;","lastModifiedDate":"2021-11-04"},{"lineNumber":4,"author":{"gitId":"alwinangys"},"content":"import seedu.duke.Ui;","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"alwinangys"},"content":"import seedu.duke.items.Event;","lastModifiedDate":"2021-11-04"},{"lineNumber":6,"author":{"gitId":"alwinangys"},"content":"import seedu.duke.items.Item;","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"alwinangys"},"content":"import seedu.duke.items.Task;","lastModifiedDate":"2021-11-04"},{"lineNumber":8,"author":{"gitId":"alwinangys"},"content":"import seedu.duke.items.characteristics.Member;","lastModifiedDate":"2021-11-06"},{"lineNumber":9,"author":{"gitId":"alwinangys"},"content":"import seedu.duke.parser.ItemType;","lastModifiedDate":"2021-11-04"},{"lineNumber":10,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"alwinangys"},"content":"import static seedu.duke.parser.ItemType.EVENT;","lastModifiedDate":"2021-11-06"},{"lineNumber":12,"author":{"gitId":"alwinangys"},"content":"import static seedu.duke.parser.ItemType.MEMBER;","lastModifiedDate":"2021-11-06"},{"lineNumber":13,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":14,"author":{"gitId":"alwinangys"},"content":"public class SelectCommand extends Command {","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"alwinangys"},"content":"    protected ItemType itemType;","lastModifiedDate":"2021-11-04"},{"lineNumber":17,"author":{"gitId":"alwinangys"},"content":"    private int eventIndex;","lastModifiedDate":"2021-11-06"},{"lineNumber":18,"author":{"gitId":"alwinangys"},"content":"    private int taskIndex;","lastModifiedDate":"2021-11-04"},{"lineNumber":19,"author":{"gitId":"alwinangys"},"content":"    private int memberIndex;","lastModifiedDate":"2021-11-06"},{"lineNumber":20,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":21,"author":{"gitId":"alwinangys"},"content":"    public SelectCommand(ItemType itemType, int index) {","lastModifiedDate":"2021-11-06"},{"lineNumber":22,"author":{"gitId":"alwinangys"},"content":"        this.itemType \u003d itemType;","lastModifiedDate":"2021-11-04"},{"lineNumber":23,"author":{"gitId":"alwinangys"},"content":"        assert itemType.equals(EVENT) | itemType.equals(MEMBER);","lastModifiedDate":"2021-11-06"},{"lineNumber":24,"author":{"gitId":"alwinangys"},"content":"        if (itemType.equals(EVENT)) {","lastModifiedDate":"2021-11-06"},{"lineNumber":25,"author":{"gitId":"alwinangys"},"content":"            eventIndex \u003d index;","lastModifiedDate":"2021-11-06"},{"lineNumber":26,"author":{"gitId":"alwinangys"},"content":"        } else {","lastModifiedDate":"2021-11-07"},{"lineNumber":27,"author":{"gitId":"alwinangys"},"content":"            memberIndex \u003d index;","lastModifiedDate":"2021-11-06"},{"lineNumber":28,"author":{"gitId":"alwinangys"},"content":"        }","lastModifiedDate":"2021-11-06"},{"lineNumber":29,"author":{"gitId":"alwinangys"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":30,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"alwinangys"},"content":"    public SelectCommand(ItemType itemType, int eventIndex, int taskIndex) {","lastModifiedDate":"2021-11-04"},{"lineNumber":32,"author":{"gitId":"alwinangys"},"content":"        this.itemType \u003d itemType;","lastModifiedDate":"2021-11-04"},{"lineNumber":33,"author":{"gitId":"alwinangys"},"content":"        this.eventIndex \u003d eventIndex;","lastModifiedDate":"2021-11-04"},{"lineNumber":34,"author":{"gitId":"alwinangys"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2021-11-04"},{"lineNumber":35,"author":{"gitId":"alwinangys"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"alwinangys"},"content":"    public CommandResult execute() {","lastModifiedDate":"2021-11-03"},{"lineNumber":38,"author":{"gitId":"alwinangys"},"content":"        Item selectedItem;","lastModifiedDate":"2021-11-04"},{"lineNumber":39,"author":{"gitId":"alwinangys"},"content":"        Member selectedMember;","lastModifiedDate":"2021-11-06"},{"lineNumber":40,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":41,"author":{"gitId":"alwinangys"},"content":"        switch (itemType) {","lastModifiedDate":"2021-11-04"},{"lineNumber":42,"author":{"gitId":"alwinangys"},"content":"        case EVENT:","lastModifiedDate":"2021-11-04"},{"lineNumber":43,"author":{"gitId":"alwinangys"},"content":"            selectedItem \u003d getEventFromIndex(eventIndex);","lastModifiedDate":"2021-11-04"},{"lineNumber":44,"author":{"gitId":"alwinangys"},"content":"            return new CommandResult(Ui.getSelectedEventMessage((Event) selectedItem));","lastModifiedDate":"2021-11-04"},{"lineNumber":45,"author":{"gitId":"alwinangys"},"content":"        case TASK:","lastModifiedDate":"2021-11-04"},{"lineNumber":46,"author":{"gitId":"alwinangys"},"content":"            selectedItem \u003d getTaskFromEventIndex(eventIndex, taskIndex);","lastModifiedDate":"2021-11-04"},{"lineNumber":47,"author":{"gitId":"alwinangys"},"content":"            return new CommandResult(Ui.getSelectedTaskMessage((Task) selectedItem));","lastModifiedDate":"2021-11-04"},{"lineNumber":48,"author":{"gitId":"alwinangys"},"content":"        case MEMBER:","lastModifiedDate":"2021-11-04"},{"lineNumber":49,"author":{"gitId":"alwinangys"},"content":"            selectedMember \u003d getMemberFromIndex(memberIndex);","lastModifiedDate":"2021-11-06"},{"lineNumber":50,"author":{"gitId":"alwinangys"},"content":"            return new CommandResult(Ui.getSelectedMemberMessage(selectedMember));","lastModifiedDate":"2021-11-06"},{"lineNumber":51,"author":{"gitId":"alwinangys"},"content":"        default:","lastModifiedDate":"2021-11-04"},{"lineNumber":52,"author":{"gitId":"alwinangys"},"content":"            return new CommandResult(\"Something went wrong.\");","lastModifiedDate":"2021-11-06"},{"lineNumber":53,"author":{"gitId":"alwinangys"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":54,"author":{"gitId":"alwinangys"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":55,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":56,"author":{"gitId":"alwinangys"},"content":"    private Event getEventFromIndex(int eventIndex) {","lastModifiedDate":"2021-11-04"},{"lineNumber":57,"author":{"gitId":"alwinangys"},"content":"        return Duke.eventCatalog.get(eventIndex);","lastModifiedDate":"2021-11-04"},{"lineNumber":58,"author":{"gitId":"alwinangys"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":59,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":60,"author":{"gitId":"alwinangys"},"content":"    private Task getTaskFromEventIndex(int eventIndex, int taskIndex) {","lastModifiedDate":"2021-11-04"},{"lineNumber":61,"author":{"gitId":"alwinangys"},"content":"        return Duke.eventCatalog.get(eventIndex).getFromTaskList(taskIndex);","lastModifiedDate":"2021-11-04"},{"lineNumber":62,"author":{"gitId":"alwinangys"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":63,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":64,"author":{"gitId":"alwinangys"},"content":"    private Member getMemberFromIndex(int memberIndex) {","lastModifiedDate":"2021-11-06"},{"lineNumber":65,"author":{"gitId":"alwinangys"},"content":"        return Duke.memberRoster.get(memberIndex);","lastModifiedDate":"2021-11-06"},{"lineNumber":66,"author":{"gitId":"alwinangys"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":67,"author":{"gitId":"antrikshv"},"content":"}","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"antrikshv":3,"alwinangys":64}},{"path":"src/main/java/seedu/duke/commands/addcommands/AddEventCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Alvinlj00"},"content":"package seedu.duke.commands.addcommands;","lastModifiedDate":"2021-11-04"},{"lineNumber":2,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":3,"author":{"gitId":"Alvinlj00"},"content":"import seedu.duke.Duke;","lastModifiedDate":"2021-11-04"},{"lineNumber":4,"author":{"gitId":"Alvinlj00"},"content":"import seedu.duke.Ui;","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"Alvinlj00"},"content":"import seedu.duke.commands.Command;","lastModifiedDate":"2021-11-04"},{"lineNumber":6,"author":{"gitId":"Alvinlj00"},"content":"import seedu.duke.commands.CommandResult;","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"Alvinlj00"},"content":"import seedu.duke.items.Event;","lastModifiedDate":"2021-11-04"},{"lineNumber":8,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"Alvinlj00"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-11-04"},{"lineNumber":10,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"Alvinlj00"},"content":"public class AddEventCommand extends Command {","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"Alvinlj00"},"content":"    private final String title;","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"Alvinlj00"},"content":"    private final String description;","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"Alvinlj00"},"content":"    private final LocalDateTime dateTime;","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"Alvinlj00"},"content":"    private final String venue;","lastModifiedDate":"2021-11-04"},{"lineNumber":17,"author":{"gitId":"Alvinlj00"},"content":"    private final double budget;","lastModifiedDate":"2021-11-04"},{"lineNumber":18,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":19,"author":{"gitId":"Alvinlj00"},"content":"    public AddEventCommand(String title, String description, LocalDateTime dateTime, String venue, double budget) {","lastModifiedDate":"2021-11-04"},{"lineNumber":20,"author":{"gitId":"Alvinlj00"},"content":"        this.title \u003d title;","lastModifiedDate":"2021-11-04"},{"lineNumber":21,"author":{"gitId":"Alvinlj00"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-11-04"},{"lineNumber":22,"author":{"gitId":"Alvinlj00"},"content":"        this.dateTime \u003d dateTime;","lastModifiedDate":"2021-11-04"},{"lineNumber":23,"author":{"gitId":"Alvinlj00"},"content":"        this.venue \u003d venue;","lastModifiedDate":"2021-11-04"},{"lineNumber":24,"author":{"gitId":"Alvinlj00"},"content":"        this.budget \u003d budget;","lastModifiedDate":"2021-11-04"},{"lineNumber":25,"author":{"gitId":"Alvinlj00"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":26,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":27,"author":{"gitId":"Alvinlj00"},"content":"    private void addToEventCatalog(Event event) {","lastModifiedDate":"2021-11-04"},{"lineNumber":28,"author":{"gitId":"Alvinlj00"},"content":"        Duke.eventCatalog.add(event);","lastModifiedDate":"2021-11-04"},{"lineNumber":29,"author":{"gitId":"Alvinlj00"},"content":"        Duke.eventCatalog.sortCatalog();","lastModifiedDate":"2021-11-04"},{"lineNumber":30,"author":{"gitId":"Alvinlj00"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":31,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":32,"author":{"gitId":"Alvinlj00"},"content":"    public CommandResult execute() {","lastModifiedDate":"2021-11-04"},{"lineNumber":33,"author":{"gitId":"Alvinlj00"},"content":"        Event event \u003d new Event(title, description, dateTime, venue, budget);","lastModifiedDate":"2021-11-04"},{"lineNumber":34,"author":{"gitId":"Alvinlj00"},"content":"        addToEventCatalog(event);","lastModifiedDate":"2021-11-04"},{"lineNumber":35,"author":{"gitId":"Alvinlj00"},"content":"        return new CommandResult(Ui.getEventAddedMessage(event));","lastModifiedDate":"2021-11-04"},{"lineNumber":36,"author":{"gitId":"Alvinlj00"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":37,"author":{"gitId":"Alvinlj00"},"content":"}","lastModifiedDate":"2021-11-04"}],"authorContributionMap":{"Alvinlj00":37}},{"path":"src/main/java/seedu/duke/commands/addcommands/AddMemberCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Alvinlj00"},"content":"package seedu.duke.commands.addcommands;","lastModifiedDate":"2021-11-04"},{"lineNumber":2,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":3,"author":{"gitId":"Alvinlj00"},"content":"import seedu.duke.Duke;","lastModifiedDate":"2021-11-04"},{"lineNumber":4,"author":{"gitId":"Alvinlj00"},"content":"import seedu.duke.Ui;","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"Alvinlj00"},"content":"import seedu.duke.commands.Command;","lastModifiedDate":"2021-11-04"},{"lineNumber":6,"author":{"gitId":"Alvinlj00"},"content":"import seedu.duke.commands.CommandResult;","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"Alvinlj00"},"content":"import seedu.duke.items.characteristics.Member;","lastModifiedDate":"2021-11-04"},{"lineNumber":8,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"Alvinlj00"},"content":"public class AddMemberCommand extends Command {","lastModifiedDate":"2021-11-04"},{"lineNumber":10,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"Alvinlj00"},"content":"    private final String[] memberNames;","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"Alvinlj00"},"content":"    public AddMemberCommand(String[] memberNames) {","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"Alvinlj00"},"content":"        this.memberNames \u003d memberNames;","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"Alvinlj00"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":17,"author":{"gitId":"Alvinlj00"},"content":"    private void addToMemberRoster(Member member) {","lastModifiedDate":"2021-11-04"},{"lineNumber":18,"author":{"gitId":"Alvinlj00"},"content":"        Duke.memberRoster.add(member);","lastModifiedDate":"2021-11-04"},{"lineNumber":19,"author":{"gitId":"Alvinlj00"},"content":"        Duke.memberRoster.sortRoster();","lastModifiedDate":"2021-11-04"},{"lineNumber":20,"author":{"gitId":"Alvinlj00"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":21,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":22,"author":{"gitId":"Alvinlj00"},"content":"    public CommandResult execute() {","lastModifiedDate":"2021-11-04"},{"lineNumber":23,"author":{"gitId":"Alvinlj00"},"content":"        for (String memberName : memberNames) {","lastModifiedDate":"2021-11-04"},{"lineNumber":24,"author":{"gitId":"Alvinlj00"},"content":"            Member member \u003d new Member(memberName);","lastModifiedDate":"2021-11-04"},{"lineNumber":25,"author":{"gitId":"Alvinlj00"},"content":"            addToMemberRoster(member);","lastModifiedDate":"2021-11-04"},{"lineNumber":26,"author":{"gitId":"Alvinlj00"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":27,"author":{"gitId":"Alvinlj00"},"content":"        return new CommandResult(Ui.getMembersAddedMessage(memberNames));","lastModifiedDate":"2021-11-04"},{"lineNumber":28,"author":{"gitId":"Alvinlj00"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":29,"author":{"gitId":"Alvinlj00"},"content":"}","lastModifiedDate":"2021-11-04"}],"authorContributionMap":{"Alvinlj00":29}},{"path":"src/main/java/seedu/duke/commands/addcommands/AddTaskCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Alvinlj00"},"content":"package seedu.duke.commands.addcommands;","lastModifiedDate":"2021-11-04"},{"lineNumber":2,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":3,"author":{"gitId":"Alvinlj00"},"content":"import seedu.duke.Duke;","lastModifiedDate":"2021-11-04"},{"lineNumber":4,"author":{"gitId":"Alvinlj00"},"content":"import seedu.duke.Ui;","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"Alvinlj00"},"content":"import seedu.duke.commands.Command;","lastModifiedDate":"2021-11-04"},{"lineNumber":6,"author":{"gitId":"Alvinlj00"},"content":"import seedu.duke.commands.CommandResult;","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"Alvinlj00"},"content":"import seedu.duke.items.Event;","lastModifiedDate":"2021-11-04"},{"lineNumber":8,"author":{"gitId":"Alvinlj00"},"content":"import seedu.duke.items.Task;","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"Alvinlj00"},"content":"import seedu.duke.items.characteristics.Member;","lastModifiedDate":"2021-11-04"},{"lineNumber":10,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"Alvinlj00"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"Alvinlj00"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"Alvinlj00"},"content":"public class AddTaskCommand extends Command {","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"Alvinlj00"},"content":"    private final String title;","lastModifiedDate":"2021-11-04"},{"lineNumber":17,"author":{"gitId":"Alvinlj00"},"content":"    private final String description;","lastModifiedDate":"2021-11-04"},{"lineNumber":18,"author":{"gitId":"Alvinlj00"},"content":"    private final LocalDateTime dateTime;","lastModifiedDate":"2021-11-04"},{"lineNumber":19,"author":{"gitId":"Alvinlj00"},"content":"    private final int eventIndex;","lastModifiedDate":"2021-11-04"},{"lineNumber":20,"author":{"gitId":"Alvinlj00"},"content":"    private final int[] memberIndexes;","lastModifiedDate":"2021-11-04"},{"lineNumber":21,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":22,"author":{"gitId":"Alvinlj00"},"content":"    private final ArrayList\u003cMember\u003e memberList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-11-04"},{"lineNumber":23,"author":{"gitId":"Alvinlj00"},"content":"    private Event assignedEvent;","lastModifiedDate":"2021-11-04"},{"lineNumber":24,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":25,"author":{"gitId":"Alvinlj00"},"content":"    public AddTaskCommand(String title, String description, LocalDateTime dateTime,","lastModifiedDate":"2021-11-04"},{"lineNumber":26,"author":{"gitId":"Alvinlj00"},"content":"                          int eventIndex, int[] memberIndexes) {","lastModifiedDate":"2021-11-04"},{"lineNumber":27,"author":{"gitId":"Alvinlj00"},"content":"        this.title \u003d title;","lastModifiedDate":"2021-11-04"},{"lineNumber":28,"author":{"gitId":"Alvinlj00"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-11-04"},{"lineNumber":29,"author":{"gitId":"Alvinlj00"},"content":"        this.dateTime \u003d dateTime;","lastModifiedDate":"2021-11-04"},{"lineNumber":30,"author":{"gitId":"Alvinlj00"},"content":"        this.eventIndex \u003d eventIndex;","lastModifiedDate":"2021-11-04"},{"lineNumber":31,"author":{"gitId":"Alvinlj00"},"content":"        this.memberIndexes \u003d memberIndexes;","lastModifiedDate":"2021-11-04"},{"lineNumber":32,"author":{"gitId":"Alvinlj00"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":33,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":34,"author":{"gitId":"Alvinlj00"},"content":"    private void setMemberList() {","lastModifiedDate":"2021-11-04"},{"lineNumber":35,"author":{"gitId":"Alvinlj00"},"content":"        for (int index : memberIndexes) {","lastModifiedDate":"2021-11-04"},{"lineNumber":36,"author":{"gitId":"Alvinlj00"},"content":"            memberList.add(Duke.memberRoster.get(index));","lastModifiedDate":"2021-11-04"},{"lineNumber":37,"author":{"gitId":"Alvinlj00"},"content":"            memberList.sort(Member.NameComparator);","lastModifiedDate":"2021-11-04"},{"lineNumber":38,"author":{"gitId":"Alvinlj00"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":39,"author":{"gitId":"Alvinlj00"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":40,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":41,"author":{"gitId":"Alvinlj00"},"content":"    private void setAssignedEvent() {","lastModifiedDate":"2021-11-04"},{"lineNumber":42,"author":{"gitId":"Alvinlj00"},"content":"        assignedEvent \u003d Duke.eventCatalog.get(eventIndex);","lastModifiedDate":"2021-11-04"},{"lineNumber":43,"author":{"gitId":"Alvinlj00"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":44,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":45,"author":{"gitId":"Alvinlj00"},"content":"    private void addTaskToEvent(Task task) {","lastModifiedDate":"2021-11-04"},{"lineNumber":46,"author":{"gitId":"Alvinlj00"},"content":"        Duke.eventCatalog.get(eventIndex).addToTaskList(task);","lastModifiedDate":"2021-11-04"},{"lineNumber":47,"author":{"gitId":"Alvinlj00"},"content":"        Duke.eventCatalog.sortCatalog();","lastModifiedDate":"2021-11-04"},{"lineNumber":48,"author":{"gitId":"Alvinlj00"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":49,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":50,"author":{"gitId":"Alvinlj00"},"content":"    private void addTaskToMembers(Task task) {","lastModifiedDate":"2021-11-04"},{"lineNumber":51,"author":{"gitId":"Alvinlj00"},"content":"        for (int index : memberIndexes) {","lastModifiedDate":"2021-11-04"},{"lineNumber":52,"author":{"gitId":"Alvinlj00"},"content":"            Duke.memberRoster.get(index).addToAssignedTasks(task);","lastModifiedDate":"2021-11-04"},{"lineNumber":53,"author":{"gitId":"Alvinlj00"},"content":"            Duke.memberRoster.get(index).sortTasks();","lastModifiedDate":"2021-11-04"},{"lineNumber":54,"author":{"gitId":"Alvinlj00"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":55,"author":{"gitId":"Alvinlj00"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":56,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":57,"author":{"gitId":"Alvinlj00"},"content":"    public CommandResult execute() {","lastModifiedDate":"2021-11-04"},{"lineNumber":58,"author":{"gitId":"Alvinlj00"},"content":"        setMemberList();","lastModifiedDate":"2021-11-04"},{"lineNumber":59,"author":{"gitId":"Alvinlj00"},"content":"        setAssignedEvent();","lastModifiedDate":"2021-11-04"},{"lineNumber":60,"author":{"gitId":"Alvinlj00"},"content":"        Task task \u003d new Task(title, description, dateTime, memberList, assignedEvent);","lastModifiedDate":"2021-11-04"},{"lineNumber":61,"author":{"gitId":"Alvinlj00"},"content":"        addTaskToEvent(task);","lastModifiedDate":"2021-11-04"},{"lineNumber":62,"author":{"gitId":"Alvinlj00"},"content":"        addTaskToMembers(task);","lastModifiedDate":"2021-11-04"},{"lineNumber":63,"author":{"gitId":"Alvinlj00"},"content":"        return new CommandResult(Ui.getTaskAddedMessage(eventIndex, task));","lastModifiedDate":"2021-11-04"},{"lineNumber":64,"author":{"gitId":"Alvinlj00"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":65,"author":{"gitId":"Alvinlj00"},"content":"}","lastModifiedDate":"2021-11-04"}],"authorContributionMap":{"Alvinlj00":65}},{"path":"src/main/java/seedu/duke/commands/updates/UpdateEventCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"antrikshv"},"content":"package seedu.duke.commands.updates;","lastModifiedDate":"2021-11-01"},{"lineNumber":2,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":3,"author":{"gitId":"antrikshv"},"content":"import seedu.duke.Ui;","lastModifiedDate":"2021-10-31"},{"lineNumber":4,"author":{"gitId":"antrikshv"},"content":"import seedu.duke.commands.Command;","lastModifiedDate":"2021-11-01"},{"lineNumber":5,"author":{"gitId":"antrikshv"},"content":"import seedu.duke.commands.CommandResult;","lastModifiedDate":"2021-11-01"},{"lineNumber":6,"author":{"gitId":"antrikshv"},"content":"import seedu.duke.items.Event;","lastModifiedDate":"2021-10-31"},{"lineNumber":7,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":8,"author":{"gitId":"antrikshv"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-10-31"},{"lineNumber":9,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":10,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":11,"author":{"gitId":"antrikshv"},"content":"public class UpdateEventCommand extends Command {","lastModifiedDate":"2021-10-31"},{"lineNumber":12,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":13,"author":{"gitId":"antrikshv"},"content":"    private static final int INDEX_OF_TITLE \u003d 0;","lastModifiedDate":"2021-10-31"},{"lineNumber":14,"author":{"gitId":"antrikshv"},"content":"    private static final int INDEX_OF_VENUE \u003d 2;","lastModifiedDate":"2021-10-31"},{"lineNumber":15,"author":{"gitId":"antrikshv"},"content":"    private static final int INDEX_OF_DESCRIPTION \u003d 1;","lastModifiedDate":"2021-10-31"},{"lineNumber":16,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":17,"author":{"gitId":"antrikshv"},"content":"    private final String[] updates;","lastModifiedDate":"2021-10-31"},{"lineNumber":18,"author":{"gitId":"antrikshv"},"content":"    private final Event eventToBeUpdated;","lastModifiedDate":"2021-10-31"},{"lineNumber":19,"author":{"gitId":"antrikshv"},"content":"    private final LocalDateTime dateTime;","lastModifiedDate":"2021-10-31"},{"lineNumber":20,"author":{"gitId":"antrikshv"},"content":"    private final double budget;","lastModifiedDate":"2021-10-31"},{"lineNumber":21,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":22,"author":{"gitId":"antrikshv"},"content":"    public UpdateEventCommand(Event event, String[] parsedAttributes, LocalDateTime newDateTime, double newBudget) {","lastModifiedDate":"2021-10-31"},{"lineNumber":23,"author":{"gitId":"antrikshv"},"content":"        this.updates \u003d parsedAttributes;","lastModifiedDate":"2021-10-31"},{"lineNumber":24,"author":{"gitId":"antrikshv"},"content":"        this.eventToBeUpdated \u003d event;","lastModifiedDate":"2021-10-31"},{"lineNumber":25,"author":{"gitId":"antrikshv"},"content":"        this.dateTime \u003d newDateTime;","lastModifiedDate":"2021-10-31"},{"lineNumber":26,"author":{"gitId":"antrikshv"},"content":"        this.budget \u003d newBudget;","lastModifiedDate":"2021-10-31"},{"lineNumber":27,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":28,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":29,"author":{"gitId":"antrikshv"},"content":"    public CommandResult execute() {","lastModifiedDate":"2021-11-03"},{"lineNumber":30,"author":{"gitId":"antrikshv"},"content":"        if (updates[INDEX_OF_TITLE] !\u003d null) {","lastModifiedDate":"2021-11-03"},{"lineNumber":31,"author":{"gitId":"antrikshv"},"content":"            eventToBeUpdated.setTitle(updates[INDEX_OF_TITLE]);","lastModifiedDate":"2021-10-31"},{"lineNumber":32,"author":{"gitId":"antrikshv"},"content":"        } else if (dateTime !\u003d null) {","lastModifiedDate":"2021-10-31"},{"lineNumber":33,"author":{"gitId":"antrikshv"},"content":"            eventToBeUpdated.setDateTime(dateTime);","lastModifiedDate":"2021-10-31"},{"lineNumber":34,"author":{"gitId":"antrikshv"},"content":"        } else if (updates[INDEX_OF_VENUE] !\u003d null) {","lastModifiedDate":"2021-11-03"},{"lineNumber":35,"author":{"gitId":"antrikshv"},"content":"            eventToBeUpdated.setVenue(updates[INDEX_OF_VENUE]);","lastModifiedDate":"2021-10-31"},{"lineNumber":36,"author":{"gitId":"antrikshv"},"content":"        } else if (budget !\u003d 0) {","lastModifiedDate":"2021-10-31"},{"lineNumber":37,"author":{"gitId":"antrikshv"},"content":"            eventToBeUpdated.setBudget(budget);","lastModifiedDate":"2021-10-31"},{"lineNumber":38,"author":{"gitId":"antrikshv"},"content":"        } else if (updates[INDEX_OF_DESCRIPTION] !\u003d null) {","lastModifiedDate":"2021-11-03"},{"lineNumber":39,"author":{"gitId":"antrikshv"},"content":"            eventToBeUpdated.setDescription(updates[INDEX_OF_DESCRIPTION]);","lastModifiedDate":"2021-10-31"},{"lineNumber":40,"author":{"gitId":"antrikshv"},"content":"        }","lastModifiedDate":"2021-10-31"},{"lineNumber":41,"author":{"gitId":"antrikshv"},"content":"        Ui.postUpdateMessage(eventToBeUpdated);","lastModifiedDate":"2021-10-31"},{"lineNumber":42,"author":{"gitId":"antrikshv"},"content":"        return new CommandResult(Ui.updateExitMessage());","lastModifiedDate":"2021-10-31"},{"lineNumber":43,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":44,"author":{"gitId":"antrikshv"},"content":"}","lastModifiedDate":"2021-10-31"}],"authorContributionMap":{"antrikshv":44}},{"path":"src/main/java/seedu/duke/commands/updates/UpdateMemberCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"antrikshv"},"content":"package seedu.duke.commands.updates;","lastModifiedDate":"2021-11-01"},{"lineNumber":2,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":3,"author":{"gitId":"antrikshv"},"content":"import seedu.duke.Duke;","lastModifiedDate":"2021-10-31"},{"lineNumber":4,"author":{"gitId":"antrikshv"},"content":"import seedu.duke.Ui;","lastModifiedDate":"2021-10-31"},{"lineNumber":5,"author":{"gitId":"antrikshv"},"content":"import seedu.duke.commands.Command;","lastModifiedDate":"2021-11-01"},{"lineNumber":6,"author":{"gitId":"antrikshv"},"content":"import seedu.duke.commands.CommandResult;","lastModifiedDate":"2021-11-01"},{"lineNumber":7,"author":{"gitId":"antrikshv"},"content":"import seedu.duke.items.Task;","lastModifiedDate":"2021-10-31"},{"lineNumber":8,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":9,"author":{"gitId":"antrikshv"},"content":"public class UpdateMemberCommand extends Command {","lastModifiedDate":"2021-10-31"},{"lineNumber":10,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":11,"author":{"gitId":"antrikshv"},"content":"    private final int memberToBeAdded;","lastModifiedDate":"2021-10-31"},{"lineNumber":12,"author":{"gitId":"antrikshv"},"content":"    private final int memberToBeRemoved;","lastModifiedDate":"2021-10-31"},{"lineNumber":13,"author":{"gitId":"antrikshv"},"content":"    private final Task taskToBeUpdated;","lastModifiedDate":"2021-10-31"},{"lineNumber":14,"author":{"gitId":"antrikshv"},"content":"    private final String flag;","lastModifiedDate":"2021-10-31"},{"lineNumber":15,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":16,"author":{"gitId":"antrikshv"},"content":"    public UpdateMemberCommand(String flag, int memberToBeAdded, Task taskToBeUpdated, int memberToBeRemoved) {","lastModifiedDate":"2021-10-31"},{"lineNumber":17,"author":{"gitId":"antrikshv"},"content":"        this.memberToBeAdded \u003d memberToBeAdded;","lastModifiedDate":"2021-10-31"},{"lineNumber":18,"author":{"gitId":"antrikshv"},"content":"        this.memberToBeRemoved \u003d memberToBeRemoved;","lastModifiedDate":"2021-10-31"},{"lineNumber":19,"author":{"gitId":"antrikshv"},"content":"        this.taskToBeUpdated \u003d taskToBeUpdated;","lastModifiedDate":"2021-10-31"},{"lineNumber":20,"author":{"gitId":"antrikshv"},"content":"        this.flag \u003d flag;","lastModifiedDate":"2021-10-31"},{"lineNumber":21,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":22,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":23,"author":{"gitId":"antrikshv"},"content":"    public CommandResult execute() {","lastModifiedDate":"2021-11-03"},{"lineNumber":24,"author":{"gitId":"antrikshv"},"content":"        if (flag.equalsIgnoreCase(\"add\")) {","lastModifiedDate":"2021-10-31"},{"lineNumber":25,"author":{"gitId":"antrikshv"},"content":"            addMember(memberToBeAdded);","lastModifiedDate":"2021-10-31"},{"lineNumber":26,"author":{"gitId":"antrikshv"},"content":"        } else if (flag.equalsIgnoreCase(\"change\")) {","lastModifiedDate":"2021-10-31"},{"lineNumber":27,"author":{"gitId":"antrikshv"},"content":"            removeMember(memberToBeRemoved);","lastModifiedDate":"2021-10-31"},{"lineNumber":28,"author":{"gitId":"antrikshv"},"content":"            addMember(memberToBeAdded);","lastModifiedDate":"2021-10-31"},{"lineNumber":29,"author":{"gitId":"antrikshv"},"content":"        } else if (flag.equalsIgnoreCase(\"remove\")) {","lastModifiedDate":"2021-10-31"},{"lineNumber":30,"author":{"gitId":"antrikshv"},"content":"            removeMember(memberToBeRemoved);","lastModifiedDate":"2021-10-31"},{"lineNumber":31,"author":{"gitId":"antrikshv"},"content":"        }","lastModifiedDate":"2021-10-31"},{"lineNumber":32,"author":{"gitId":"antrikshv"},"content":"        Ui.postUpdateMessage(taskToBeUpdated.getEvent());","lastModifiedDate":"2021-10-31"},{"lineNumber":33,"author":{"gitId":"antrikshv"},"content":"        return new CommandResult(Ui.updateExitMessage());","lastModifiedDate":"2021-10-31"},{"lineNumber":34,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":35,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":36,"author":{"gitId":"antrikshv"},"content":"    private void addMember(int memberToBeAdded) {","lastModifiedDate":"2021-10-31"},{"lineNumber":37,"author":{"gitId":"antrikshv"},"content":"        Duke.memberRoster.get(memberToBeAdded).addToAssignedTasks(taskToBeUpdated);","lastModifiedDate":"2021-10-31"},{"lineNumber":38,"author":{"gitId":"antrikshv"},"content":"        Duke.memberRoster.get(memberToBeAdded).sortTasks();","lastModifiedDate":"2021-11-02"},{"lineNumber":39,"author":{"gitId":"antrikshv"},"content":"        taskToBeUpdated.addMember(Duke.memberRoster.get(memberToBeAdded));","lastModifiedDate":"2021-11-02"},{"lineNumber":40,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":41,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":42,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":43,"author":{"gitId":"antrikshv"},"content":"    private void removeMember(int memberToBeRemoved) {","lastModifiedDate":"2021-10-31"},{"lineNumber":44,"author":{"gitId":"antrikshv"},"content":"        taskToBeUpdated.memberList.remove(memberToBeRemoved);","lastModifiedDate":"2021-10-31"},{"lineNumber":45,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":46,"author":{"gitId":"antrikshv"},"content":"}","lastModifiedDate":"2021-10-31"}],"authorContributionMap":{"antrikshv":46}},{"path":"src/main/java/seedu/duke/commands/updates/UpdateTaskCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"antrikshv"},"content":"package seedu.duke.commands.updates;","lastModifiedDate":"2021-11-01"},{"lineNumber":2,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":3,"author":{"gitId":"antrikshv"},"content":"import seedu.duke.Ui;","lastModifiedDate":"2021-10-31"},{"lineNumber":4,"author":{"gitId":"antrikshv"},"content":"import seedu.duke.commands.Command;","lastModifiedDate":"2021-11-01"},{"lineNumber":5,"author":{"gitId":"antrikshv"},"content":"import seedu.duke.commands.CommandResult;","lastModifiedDate":"2021-11-01"},{"lineNumber":6,"author":{"gitId":"antrikshv"},"content":"import seedu.duke.items.Task;","lastModifiedDate":"2021-10-31"},{"lineNumber":7,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":8,"author":{"gitId":"antrikshv"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-10-31"},{"lineNumber":9,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":10,"author":{"gitId":"antrikshv"},"content":"public class UpdateTaskCommand extends Command {","lastModifiedDate":"2021-10-31"},{"lineNumber":11,"author":{"gitId":"antrikshv"},"content":"    private static final int INDEX_OF_TITLE \u003d 0;","lastModifiedDate":"2021-10-31"},{"lineNumber":12,"author":{"gitId":"antrikshv"},"content":"    private static final int INDEX_OF_DESCRIPTION \u003d 1;","lastModifiedDate":"2021-10-31"},{"lineNumber":13,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":14,"author":{"gitId":"antrikshv"},"content":"    private final String[] updates;","lastModifiedDate":"2021-10-31"},{"lineNumber":15,"author":{"gitId":"antrikshv"},"content":"    private final Task taskToBeUpdated;","lastModifiedDate":"2021-10-31"},{"lineNumber":16,"author":{"gitId":"antrikshv"},"content":"    private final LocalDateTime dateTime;","lastModifiedDate":"2021-10-31"},{"lineNumber":17,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":18,"author":{"gitId":"antrikshv"},"content":"    public UpdateTaskCommand(String[] updates, Task taskToBeUpdated, LocalDateTime dateTime) {","lastModifiedDate":"2021-10-31"},{"lineNumber":19,"author":{"gitId":"antrikshv"},"content":"        this.updates \u003d updates;","lastModifiedDate":"2021-10-31"},{"lineNumber":20,"author":{"gitId":"antrikshv"},"content":"        this.taskToBeUpdated \u003d taskToBeUpdated;","lastModifiedDate":"2021-10-31"},{"lineNumber":21,"author":{"gitId":"antrikshv"},"content":"        this.dateTime \u003d dateTime;","lastModifiedDate":"2021-10-31"},{"lineNumber":22,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":23,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":24,"author":{"gitId":"antrikshv"},"content":"    public CommandResult execute() {","lastModifiedDate":"2021-11-03"},{"lineNumber":25,"author":{"gitId":"antrikshv"},"content":"        if (updates[INDEX_OF_TITLE] !\u003d null) {","lastModifiedDate":"2021-11-03"},{"lineNumber":26,"author":{"gitId":"antrikshv"},"content":"            taskToBeUpdated.setTitle(updates[INDEX_OF_TITLE]);","lastModifiedDate":"2021-10-31"},{"lineNumber":27,"author":{"gitId":"antrikshv"},"content":"        } else if (dateTime !\u003d null) {","lastModifiedDate":"2021-10-31"},{"lineNumber":28,"author":{"gitId":"antrikshv"},"content":"            taskToBeUpdated.setDateTime(dateTime);","lastModifiedDate":"2021-10-31"},{"lineNumber":29,"author":{"gitId":"antrikshv"},"content":"        } else if (updates[INDEX_OF_DESCRIPTION] !\u003d null) {","lastModifiedDate":"2021-11-03"},{"lineNumber":30,"author":{"gitId":"antrikshv"},"content":"            taskToBeUpdated.setDescription(updates[INDEX_OF_DESCRIPTION]);","lastModifiedDate":"2021-10-31"},{"lineNumber":31,"author":{"gitId":"antrikshv"},"content":"        }","lastModifiedDate":"2021-10-31"},{"lineNumber":32,"author":{"gitId":"antrikshv"},"content":"        Ui.postUpdateMessage(taskToBeUpdated.getEvent());","lastModifiedDate":"2021-10-31"},{"lineNumber":33,"author":{"gitId":"antrikshv"},"content":"        return new CommandResult(Ui.updateExitMessage());","lastModifiedDate":"2021-10-31"},{"lineNumber":34,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":35,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":36,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":37,"author":{"gitId":"antrikshv"},"content":"}","lastModifiedDate":"2021-10-31"}],"authorContributionMap":{"antrikshv":37}},{"path":"src/main/java/seedu/duke/exceptions/DukeException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"alwinangys"},"content":"package seedu.duke.exceptions;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"alwinangys"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"alwinangys"},"content":"    public DukeException(String message) {","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"alwinangys"},"content":"        super(message);","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"alwinangys"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"alwinangys"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"alwinangys":8}},{"path":"src/main/java/seedu/duke/exceptions/parserexceptions/AttributeNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"crabnuggets"},"content":"package seedu.duke.exceptions.parserexceptions;","lastModifiedDate":"2021-10-31"},{"lineNumber":2,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":3,"author":{"gitId":"crabnuggets"},"content":"import seedu.duke.parser.ItemAttribute;","lastModifiedDate":"2021-10-31"},{"lineNumber":4,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":5,"author":{"gitId":"crabnuggets"},"content":"public class AttributeNotFoundException extends Exception {","lastModifiedDate":"2021-10-31"},{"lineNumber":6,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":7,"author":{"gitId":"crabnuggets"},"content":"    private final ItemAttribute itemAttribute;","lastModifiedDate":"2021-10-31"},{"lineNumber":8,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":9,"author":{"gitId":"crabnuggets"},"content":"    public AttributeNotFoundException(ItemAttribute itemAttribute) {","lastModifiedDate":"2021-10-31"},{"lineNumber":10,"author":{"gitId":"crabnuggets"},"content":"        super();","lastModifiedDate":"2021-10-31"},{"lineNumber":11,"author":{"gitId":"crabnuggets"},"content":"        this.itemAttribute \u003d itemAttribute;","lastModifiedDate":"2021-10-31"},{"lineNumber":12,"author":{"gitId":"crabnuggets"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":13,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":14,"author":{"gitId":"crabnuggets"},"content":"    public ItemAttribute getItemAttribute() {","lastModifiedDate":"2021-10-31"},{"lineNumber":15,"author":{"gitId":"crabnuggets"},"content":"        return itemAttribute;","lastModifiedDate":"2021-10-31"},{"lineNumber":16,"author":{"gitId":"crabnuggets"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":17,"author":{"gitId":"crabnuggets"},"content":"}","lastModifiedDate":"2021-10-31"}],"authorContributionMap":{"crabnuggets":17}},{"path":"src/main/java/seedu/duke/exceptions/parserexceptions/ExistingMemberException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"antrikshv"},"content":"package seedu.duke.exceptions.parserexceptions;","lastModifiedDate":"2021-11-02"},{"lineNumber":2,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":3,"author":{"gitId":"antrikshv"},"content":"public class ExistingMemberException extends Exception {","lastModifiedDate":"2021-11-02"},{"lineNumber":4,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":5,"author":{"gitId":"antrikshv"},"content":"    public ExistingMemberException(String message) {","lastModifiedDate":"2021-11-02"},{"lineNumber":6,"author":{"gitId":"antrikshv"},"content":"        super(message);","lastModifiedDate":"2021-11-02"},{"lineNumber":7,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":8,"author":{"gitId":"antrikshv"},"content":"}","lastModifiedDate":"2021-11-02"}],"authorContributionMap":{"antrikshv":8}},{"path":"src/main/java/seedu/duke/exceptions/parserexceptions/InvalidBudgetException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"crabnuggets"},"content":"package seedu.duke.exceptions.parserexceptions;","lastModifiedDate":"2021-10-31"},{"lineNumber":2,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":3,"author":{"gitId":"crabnuggets"},"content":"public class InvalidBudgetException extends Exception {","lastModifiedDate":"2021-10-31"},{"lineNumber":4,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":5,"author":{"gitId":"crabnuggets"},"content":"    public InvalidBudgetException(String message) {","lastModifiedDate":"2021-10-31"},{"lineNumber":6,"author":{"gitId":"crabnuggets"},"content":"        super(message);","lastModifiedDate":"2021-10-31"},{"lineNumber":7,"author":{"gitId":"crabnuggets"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":8,"author":{"gitId":"crabnuggets"},"content":"}","lastModifiedDate":"2021-10-31"}],"authorContributionMap":{"crabnuggets":8}},{"path":"src/main/java/seedu/duke/exceptions/parserexceptions/InvalidIndexException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"antrikshv"},"content":"package seedu.duke.exceptions.parserexceptions;","lastModifiedDate":"2021-10-31"},{"lineNumber":2,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":3,"author":{"gitId":"antrikshv"},"content":"public class InvalidIndexException extends Exception {","lastModifiedDate":"2021-10-31"},{"lineNumber":4,"author":{"gitId":"alwinangys"},"content":"    public InvalidIndexException(String message) {","lastModifiedDate":"2021-11-03"},{"lineNumber":5,"author":{"gitId":"alwinangys"},"content":"        super(message);","lastModifiedDate":"2021-11-03"},{"lineNumber":6,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":7,"author":{"gitId":"antrikshv"},"content":"}","lastModifiedDate":"2021-10-31"}],"authorContributionMap":{"antrikshv":5,"alwinangys":2}},{"path":"src/main/java/seedu/duke/exceptions/parserexceptions/InvalidItemTypeException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"crabnuggets"},"content":"package seedu.duke.exceptions.parserexceptions;","lastModifiedDate":"2021-10-31"},{"lineNumber":2,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":3,"author":{"gitId":"crabnuggets"},"content":"public class InvalidItemTypeException extends Exception {","lastModifiedDate":"2021-10-31"},{"lineNumber":4,"author":{"gitId":"crabnuggets"},"content":"    public InvalidItemTypeException() {","lastModifiedDate":"2021-10-31"},{"lineNumber":5,"author":{"gitId":"crabnuggets"},"content":"        super();","lastModifiedDate":"2021-10-31"},{"lineNumber":6,"author":{"gitId":"crabnuggets"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":7,"author":{"gitId":"crabnuggets"},"content":"}","lastModifiedDate":"2021-10-31"}],"authorContributionMap":{"crabnuggets":7}},{"path":"src/main/java/seedu/duke/exceptions/parserexceptions/NoCommandAttributesException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"crabnuggets"},"content":"package seedu.duke.exceptions.parserexceptions;","lastModifiedDate":"2021-10-31"},{"lineNumber":2,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":3,"author":{"gitId":"crabnuggets"},"content":"public class NoCommandAttributesException extends Exception {","lastModifiedDate":"2021-10-31"},{"lineNumber":4,"author":{"gitId":"crabnuggets"},"content":"    public NoCommandAttributesException() {","lastModifiedDate":"2021-10-31"},{"lineNumber":5,"author":{"gitId":"crabnuggets"},"content":"        super();","lastModifiedDate":"2021-10-31"},{"lineNumber":6,"author":{"gitId":"crabnuggets"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":7,"author":{"gitId":"crabnuggets"},"content":"}","lastModifiedDate":"2021-10-31"}],"authorContributionMap":{"crabnuggets":7}},{"path":"src/main/java/seedu/duke/items/Event.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"antrikshv"},"content":"package seedu.duke.items;","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"antrikshv"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-10-04"},{"lineNumber":4,"author":{"gitId":"crabnuggets"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-17"},{"lineNumber":5,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":6,"author":{"gitId":"antrikshv"},"content":"public class Event extends Item {","lastModifiedDate":"2021-10-04"},{"lineNumber":7,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"Alvinlj00"},"content":"    private final ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"alwinangys"},"content":"    private String venue;","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"alwinangys"},"content":"    private double budget;","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"alwinangys"},"content":"    public static final String EVENT_DATA_ARGS_DELIMITER \u003d \"\\\\s*\\\\|\\\\s*\";","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"Alvinlj00"},"content":"    public Event(String title, String description, LocalDateTime dateTime, String venue, double budget) {","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"Alvinlj00"},"content":"        super(\"event\", title, description, dateTime);","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"alwinangys"},"content":"        this.venue \u003d venue;","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"alwinangys"},"content":"        this.budget \u003d budget;","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"alwinangys"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"antrikshv"},"content":"    public void setVenue(String venue) {","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"antrikshv"},"content":"        this.venue \u003d venue;","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"crabnuggets"},"content":"    public void setBudget(Double budget) {","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"crabnuggets"},"content":"        this.budget \u003d budget;","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"crabnuggets"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"crabnuggets"},"content":"    public String getVenue() {","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"crabnuggets"},"content":"        return venue;","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":31,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":32,"author":{"gitId":"alwinangys"},"content":"    public double getBudget() {","lastModifiedDate":"2021-10-06"},{"lineNumber":33,"author":{"gitId":"alwinangys"},"content":"        return budget;","lastModifiedDate":"2021-10-06"},{"lineNumber":34,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":35,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":36,"author":{"gitId":"Alvinlj00"},"content":"    public void addToTaskList(Task task) {","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"Alvinlj00"},"content":"        taskList.add(task);","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"Alvinlj00"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"Alvinlj00"},"content":"    public Task getFromTaskList(int index) {","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"Alvinlj00"},"content":"        return taskList.get(index);","lastModifiedDate":"2021-10-21"},{"lineNumber":42,"author":{"gitId":"Alvinlj00"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":43,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":44,"author":{"gitId":"crabnuggets"},"content":"    public ArrayList\u003cTask\u003e getTaskList() {","lastModifiedDate":"2021-10-17"},{"lineNumber":45,"author":{"gitId":"crabnuggets"},"content":"        return taskList;","lastModifiedDate":"2021-10-17"},{"lineNumber":46,"author":{"gitId":"crabnuggets"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":47,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":48,"author":{"gitId":"alwinangys"},"content":"    public String getTaskListAsString() {","lastModifiedDate":"2021-10-26"},{"lineNumber":49,"author":{"gitId":"alwinangys"},"content":"        StringBuilder tasks \u003d new StringBuilder();","lastModifiedDate":"2021-10-26"},{"lineNumber":50,"author":{"gitId":"alwinangys"},"content":"        int counter \u003d 1;","lastModifiedDate":"2021-10-26"},{"lineNumber":51,"author":{"gitId":"alwinangys"},"content":"        for (Task task: taskList) {","lastModifiedDate":"2021-10-26"},{"lineNumber":52,"author":{"gitId":"alwinangys"},"content":"            tasks.append(counter).append(\". \");","lastModifiedDate":"2021-10-26"},{"lineNumber":53,"author":{"gitId":"alwinangys"},"content":"            tasks.append(task.getTitle()).append(\"\\n\");","lastModifiedDate":"2021-10-26"},{"lineNumber":54,"author":{"gitId":"alwinangys"},"content":"            counter++;","lastModifiedDate":"2021-10-28"},{"lineNumber":55,"author":{"gitId":"alwinangys"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":56,"author":{"gitId":"alwinangys"},"content":"        return tasks.toString();","lastModifiedDate":"2021-10-26"},{"lineNumber":57,"author":{"gitId":"alwinangys"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":58,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":59,"author":{"gitId":"crabnuggets"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":60,"author":{"gitId":"crabnuggets"},"content":"    public String toString() {","lastModifiedDate":"2021-10-10"},{"lineNumber":61,"author":{"gitId":"Alvinlj00"},"content":"        return String.format(\"[E][%s] %s (at: %s)\", this.getStatusIcon(), this.getTitle(), this.getStringDateTime());","lastModifiedDate":"2021-10-11"},{"lineNumber":62,"author":{"gitId":"crabnuggets"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":63,"author":{"gitId":"antrikshv"},"content":"}","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"antrikshv":13,"Alvinlj00":12,"crabnuggets":15,"alwinangys":23}},{"path":"src/main/java/seedu/duke/items/Item.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"antrikshv"},"content":"package seedu.duke.items;","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"antrikshv"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"Alvinlj00"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-11-06"},{"lineNumber":5,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"crabnuggets"},"content":"import seedu.duke.parser.Parser;","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"alwinangys"},"content":"public abstract class Item {","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"alwinangys"},"content":"    protected String type;","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"alwinangys"},"content":"    protected String title;","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"alwinangys"},"content":"    protected String description;","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"Alvinlj00"},"content":"    protected LocalDateTime dateTime;","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"Alvinlj00"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"Alvinlj00"},"content":"    public Item(String type, String title, String description, LocalDateTime dateTime) {","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"alwinangys"},"content":"        this.type \u003d type;","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"alwinangys"},"content":"        this.title \u003d title;","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"alwinangys"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"Alvinlj00"},"content":"        this.dateTime \u003d dateTime;","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"Alvinlj00"},"content":"        isDone \u003d false;","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"alwinangys"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"Alvinlj00"},"content":"    public static Comparator\u003cItem\u003e DateTimeComparator \u003d (item1, item2) -\u003e {","lastModifiedDate":"2021-11-06"},{"lineNumber":25,"author":{"gitId":"Alvinlj00"},"content":"        LocalDateTime dateTime1 \u003d item1.getDateTime();","lastModifiedDate":"2021-11-06"},{"lineNumber":26,"author":{"gitId":"Alvinlj00"},"content":"        LocalDateTime dateTime2 \u003d item2.getDateTime();","lastModifiedDate":"2021-11-06"},{"lineNumber":27,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":28,"author":{"gitId":"Alvinlj00"},"content":"        if (dateTime1.isBefore(dateTime2)) {","lastModifiedDate":"2021-11-06"},{"lineNumber":29,"author":{"gitId":"Alvinlj00"},"content":"            return -1;","lastModifiedDate":"2021-11-06"},{"lineNumber":30,"author":{"gitId":"Alvinlj00"},"content":"        }","lastModifiedDate":"2021-11-06"},{"lineNumber":31,"author":{"gitId":"Alvinlj00"},"content":"        if (dateTime1.isAfter(dateTime2)) {","lastModifiedDate":"2021-11-06"},{"lineNumber":32,"author":{"gitId":"Alvinlj00"},"content":"            return 1;","lastModifiedDate":"2021-11-06"},{"lineNumber":33,"author":{"gitId":"Alvinlj00"},"content":"        }","lastModifiedDate":"2021-11-06"},{"lineNumber":34,"author":{"gitId":"Alvinlj00"},"content":"        return 0;","lastModifiedDate":"2021-11-06"},{"lineNumber":35,"author":{"gitId":"Alvinlj00"},"content":"    };","lastModifiedDate":"2021-11-06"},{"lineNumber":36,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":37,"author":{"gitId":"antrikshv"},"content":"    public void setTitle(String title) {","lastModifiedDate":"2021-10-10"},{"lineNumber":38,"author":{"gitId":"antrikshv"},"content":"        this.title \u003d title;","lastModifiedDate":"2021-10-10"},{"lineNumber":39,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":40,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":41,"author":{"gitId":"antrikshv"},"content":"    public void setDescription(String description) {","lastModifiedDate":"2021-10-10"},{"lineNumber":42,"author":{"gitId":"antrikshv"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-10-10"},{"lineNumber":43,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":44,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":45,"author":{"gitId":"Alvinlj00"},"content":"    public void setDateTime(LocalDateTime dateTime) {","lastModifiedDate":"2021-10-11"},{"lineNumber":46,"author":{"gitId":"Alvinlj00"},"content":"        this.dateTime \u003d dateTime;","lastModifiedDate":"2021-10-11"},{"lineNumber":47,"author":{"gitId":"Alvinlj00"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":48,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":49,"author":{"gitId":"Alvinlj00"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-10-11"},{"lineNumber":50,"author":{"gitId":"Alvinlj00"},"content":"        isDone \u003d true;","lastModifiedDate":"2021-10-11"},{"lineNumber":51,"author":{"gitId":"Alvinlj00"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":52,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":53,"author":{"gitId":"Alvinlj00"},"content":"    public void undo() {","lastModifiedDate":"2021-10-11"},{"lineNumber":54,"author":{"gitId":"Alvinlj00"},"content":"        isDone \u003d false;","lastModifiedDate":"2021-10-11"},{"lineNumber":55,"author":{"gitId":"Alvinlj00"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":56,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":57,"author":{"gitId":"alwinangys"},"content":"    public String getItemType() {","lastModifiedDate":"2021-10-08"},{"lineNumber":58,"author":{"gitId":"alwinangys"},"content":"        return type;","lastModifiedDate":"2021-10-08"},{"lineNumber":59,"author":{"gitId":"alwinangys"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":60,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":61,"author":{"gitId":"alwinangys"},"content":"    public String getTitle() {","lastModifiedDate":"2021-10-06"},{"lineNumber":62,"author":{"gitId":"alwinangys"},"content":"        return title;","lastModifiedDate":"2021-10-06"},{"lineNumber":63,"author":{"gitId":"alwinangys"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":64,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":65,"author":{"gitId":"alwinangys"},"content":"    public String getDescription() {","lastModifiedDate":"2021-10-08"},{"lineNumber":66,"author":{"gitId":"alwinangys"},"content":"        return description;","lastModifiedDate":"2021-10-08"},{"lineNumber":67,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":68,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":69,"author":{"gitId":"Alvinlj00"},"content":"    public LocalDateTime getDateTime() {","lastModifiedDate":"2021-10-11"},{"lineNumber":70,"author":{"gitId":"Alvinlj00"},"content":"        return dateTime;","lastModifiedDate":"2021-10-11"},{"lineNumber":71,"author":{"gitId":"Alvinlj00"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":72,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":73,"author":{"gitId":"Alvinlj00"},"content":"    public String getStringDateTime() {","lastModifiedDate":"2021-10-11"},{"lineNumber":74,"author":{"gitId":"Alvinlj00"},"content":"        return Parser.convertDateTime(dateTime);","lastModifiedDate":"2021-10-11"},{"lineNumber":75,"author":{"gitId":"Alvinlj00"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":76,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":77,"author":{"gitId":"Alvinlj00"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-10-11"},{"lineNumber":78,"author":{"gitId":"Alvinlj00"},"content":"        return isDone ? \"X\" : \" \";","lastModifiedDate":"2021-10-11"},{"lineNumber":79,"author":{"gitId":"Alvinlj00"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":80,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":81,"author":{"gitId":"crabnuggets"},"content":"    public boolean getIsDone() {","lastModifiedDate":"2021-10-12"},{"lineNumber":82,"author":{"gitId":"crabnuggets"},"content":"        return isDone;","lastModifiedDate":"2021-10-12"},{"lineNumber":83,"author":{"gitId":"crabnuggets"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":84,"author":{"gitId":"antrikshv"},"content":"}","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"antrikshv":15,"Alvinlj00":43,"crabnuggets":5,"alwinangys":21}},{"path":"src/main/java/seedu/duke/items/Task.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"antrikshv"},"content":"package seedu.duke.items;","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"crabnuggets"},"content":"import seedu.duke.items.characteristics.Member;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"antrikshv"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-10-04"},{"lineNumber":6,"author":{"gitId":"crabnuggets"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":8,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"antrikshv"},"content":"public class Task extends Item {","lastModifiedDate":"2021-10-04"},{"lineNumber":10,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"alwinangys"},"content":"    public static final String TASK_DATA_ARGS_DELIMITER \u003d \"\\\\s*\\\\|\\\\s*\";","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"crabnuggets"},"content":"    public ArrayList\u003cMember\u003e memberList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"crabnuggets"},"content":"    private Event event;","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"Alvinlj00"},"content":"    public Task(String title, String description, LocalDateTime deadline) {","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"Alvinlj00"},"content":"        super(\"task\", title, description, deadline);","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"crabnuggets"},"content":"    public Task(String title, String description, LocalDateTime deadline, ArrayList\u003cMember\u003e memberList, Event event) {","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"crabnuggets"},"content":"        super(\"task\", title, description, deadline);","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"crabnuggets"},"content":"        this.memberList \u003d memberList;","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"crabnuggets"},"content":"        this.event \u003d event;","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"crabnuggets"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"crabnuggets"},"content":"    public Event getEvent() {","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"crabnuggets"},"content":"        return event;","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"crabnuggets"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"crabnuggets"},"content":"    public void setEvent(Event event) {","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"crabnuggets"},"content":"        this.event \u003d event;","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"crabnuggets"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"Alvinlj00"},"content":"    public void addMember(Member member) {","lastModifiedDate":"2021-10-25"},{"lineNumber":35,"author":{"gitId":"Alvinlj00"},"content":"        memberList.add(member);","lastModifiedDate":"2021-10-25"},{"lineNumber":36,"author":{"gitId":"Alvinlj00"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":37,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":38,"author":{"gitId":"crabnuggets"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":39,"author":{"gitId":"crabnuggets"},"content":"    public String toString() {","lastModifiedDate":"2021-10-10"},{"lineNumber":40,"author":{"gitId":"Alvinlj00"},"content":"        return String.format(\"[T][%s] %s (by: %s)\", this.getStatusIcon(), this.getTitle(), this.getStringDateTime());","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"crabnuggets"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":42,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":43,"author":{"gitId":"antrikshv"},"content":"    public ArrayList\u003cMember\u003e getMemberList() {","lastModifiedDate":"2021-10-24"},{"lineNumber":44,"author":{"gitId":"antrikshv"},"content":"        return memberList;","lastModifiedDate":"2021-10-24"},{"lineNumber":45,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":46,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":47,"author":{"gitId":"antrikshv"},"content":"    public Member getFromMemberList(int index) {","lastModifiedDate":"2021-10-24"},{"lineNumber":48,"author":{"gitId":"antrikshv"},"content":"        return memberList.get(index);","lastModifiedDate":"2021-10-24"},{"lineNumber":49,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":50,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":51,"author":{"gitId":"alwinangys"},"content":"    public String getMemberListAsString() {","lastModifiedDate":"2021-10-26"},{"lineNumber":52,"author":{"gitId":"alwinangys"},"content":"        StringBuilder members \u003d new StringBuilder();","lastModifiedDate":"2021-10-26"},{"lineNumber":53,"author":{"gitId":"alwinangys"},"content":"        int counter \u003d 1;","lastModifiedDate":"2021-10-26"},{"lineNumber":54,"author":{"gitId":"alwinangys"},"content":"        for (Member member : memberList) {","lastModifiedDate":"2021-10-26"},{"lineNumber":55,"author":{"gitId":"alwinangys"},"content":"            members.append(counter).append(\" \");","lastModifiedDate":"2021-10-26"},{"lineNumber":56,"author":{"gitId":"alwinangys"},"content":"            members.append(member).append(\"\\n\");","lastModifiedDate":"2021-10-26"},{"lineNumber":57,"author":{"gitId":"alwinangys"},"content":"            counter++;","lastModifiedDate":"2021-10-28"},{"lineNumber":58,"author":{"gitId":"alwinangys"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":59,"author":{"gitId":"alwinangys"},"content":"        return members.toString();","lastModifiedDate":"2021-10-26"},{"lineNumber":60,"author":{"gitId":"alwinangys"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":61,"author":{"gitId":"antrikshv"},"content":"}","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"antrikshv":15,"Alvinlj00":8,"crabnuggets":24,"alwinangys":14}},{"path":"src/main/java/seedu/duke/items/characteristics/Member.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Alvinlj00"},"content":"package seedu.duke.items.characteristics;","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":3,"author":{"gitId":"Alvinlj00"},"content":"import seedu.duke.items.Task;","lastModifiedDate":"2021-10-23"},{"lineNumber":4,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":5,"author":{"gitId":"Alvinlj00"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-23"},{"lineNumber":6,"author":{"gitId":"Alvinlj00"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"Alvinlj00"},"content":"public class Member {","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"Alvinlj00"},"content":"    private String name;","lastModifiedDate":"2021-10-23"},{"lineNumber":11,"author":{"gitId":"Alvinlj00"},"content":"    private final ArrayList\u003cTask\u003e assignedTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-11-06"},{"lineNumber":12,"author":{"gitId":"crabnuggets"},"content":"    public static final String MEMBER_DATA_ARGS_DELIMITER \u003d \"\\\\s*\\\\|\\\\s*\";","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":15,"author":{"gitId":"Alvinlj00"},"content":"    public Member(String name) {","lastModifiedDate":"2021-10-23"},{"lineNumber":16,"author":{"gitId":"Alvinlj00"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-10-23"},{"lineNumber":17,"author":{"gitId":"Alvinlj00"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":18,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":19,"author":{"gitId":"Alvinlj00"},"content":"    public static Comparator\u003cMember\u003e NameComparator \u003d (member1, member2) -\u003e {","lastModifiedDate":"2021-11-06"},{"lineNumber":20,"author":{"gitId":"Alvinlj00"},"content":"        String name1 \u003d member1.getName().toUpperCase();","lastModifiedDate":"2021-11-06"},{"lineNumber":21,"author":{"gitId":"Alvinlj00"},"content":"        String name2 \u003d member2.getName().toUpperCase();","lastModifiedDate":"2021-11-06"},{"lineNumber":22,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":23,"author":{"gitId":"Alvinlj00"},"content":"        return name1.compareTo(name2);","lastModifiedDate":"2021-11-06"},{"lineNumber":24,"author":{"gitId":"Alvinlj00"},"content":"    };","lastModifiedDate":"2021-11-06"},{"lineNumber":25,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":26,"author":{"gitId":"Alvinlj00"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2021-10-23"},{"lineNumber":27,"author":{"gitId":"Alvinlj00"},"content":"        assignedTasks.add(task);","lastModifiedDate":"2021-10-23"},{"lineNumber":28,"author":{"gitId":"Alvinlj00"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":29,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":30,"author":{"gitId":"Alvinlj00"},"content":"    public void deleteTask(int index) {","lastModifiedDate":"2021-10-23"},{"lineNumber":31,"author":{"gitId":"Alvinlj00"},"content":"        assignedTasks.remove(index);","lastModifiedDate":"2021-10-23"},{"lineNumber":32,"author":{"gitId":"Alvinlj00"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":33,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":34,"author":{"gitId":"Alvinlj00"},"content":"    public String getName() {","lastModifiedDate":"2021-10-23"},{"lineNumber":35,"author":{"gitId":"Alvinlj00"},"content":"        return name;","lastModifiedDate":"2021-10-23"},{"lineNumber":36,"author":{"gitId":"Alvinlj00"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":37,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":38,"author":{"gitId":"Alvinlj00"},"content":"    public String getTasks() {","lastModifiedDate":"2021-10-23"},{"lineNumber":39,"author":{"gitId":"Alvinlj00"},"content":"        StringBuilder tasks \u003d new StringBuilder();","lastModifiedDate":"2021-10-23"},{"lineNumber":40,"author":{"gitId":"Alvinlj00"},"content":"        for (Task assignedTask : assignedTasks) {","lastModifiedDate":"2021-10-23"},{"lineNumber":41,"author":{"gitId":"Alvinlj00"},"content":"            tasks.append(assignedTask).append(\"\\n\");","lastModifiedDate":"2021-10-23"},{"lineNumber":42,"author":{"gitId":"Alvinlj00"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":43,"author":{"gitId":"Alvinlj00"},"content":"        return tasks.toString();","lastModifiedDate":"2021-10-23"},{"lineNumber":44,"author":{"gitId":"Alvinlj00"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":45,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":46,"author":{"gitId":"alwinangys"},"content":"    public ArrayList\u003cTask\u003e getAssignedTasks() {","lastModifiedDate":"2021-11-07"},{"lineNumber":47,"author":{"gitId":"alwinangys"},"content":"        return assignedTasks;","lastModifiedDate":"2021-11-07"},{"lineNumber":48,"author":{"gitId":"alwinangys"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":49,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":50,"author":{"gitId":"Alvinlj00"},"content":"    public void addToAssignedTasks(Task task) {","lastModifiedDate":"2021-10-25"},{"lineNumber":51,"author":{"gitId":"Alvinlj00"},"content":"        assignedTasks.add(task);","lastModifiedDate":"2021-10-25"},{"lineNumber":52,"author":{"gitId":"Alvinlj00"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":53,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":54,"author":{"gitId":"Alvinlj00"},"content":"    public void sortTasks() {","lastModifiedDate":"2021-10-23"},{"lineNumber":55,"author":{"gitId":"Alvinlj00"},"content":"        assignedTasks.sort(Task.DateTimeComparator);","lastModifiedDate":"2021-11-06"},{"lineNumber":56,"author":{"gitId":"Alvinlj00"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":57,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":58,"author":{"gitId":"antrikshv"},"content":"    public void setName(String name) {","lastModifiedDate":"2021-10-24"},{"lineNumber":59,"author":{"gitId":"antrikshv"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-10-24"},{"lineNumber":60,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":61,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":62,"author":{"gitId":"Alvinlj00"},"content":"    @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":63,"author":{"gitId":"Alvinlj00"},"content":"    public String toString() {","lastModifiedDate":"2021-10-23"},{"lineNumber":64,"author":{"gitId":"Alvinlj00"},"content":"        return name;","lastModifiedDate":"2021-10-23"},{"lineNumber":65,"author":{"gitId":"Alvinlj00"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":66,"author":{"gitId":"Alvinlj00"},"content":"}","lastModifiedDate":"2021-10-23"}],"authorContributionMap":{"antrikshv":4,"Alvinlj00":56,"crabnuggets":2,"alwinangys":4}},{"path":"src/main/java/seedu/duke/items/mainlists/EventCatalog.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Alvinlj00"},"content":"package seedu.duke.items.mainlists;","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":3,"author":{"gitId":"Alvinlj00"},"content":"import seedu.duke.items.Event;","lastModifiedDate":"2021-10-23"},{"lineNumber":4,"author":{"gitId":"Alvinlj00"},"content":"import seedu.duke.items.Task;","lastModifiedDate":"2021-11-06"},{"lineNumber":5,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":6,"author":{"gitId":"Alvinlj00"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"Alvinlj00"},"content":"public class EventCatalog extends ArrayList\u003cEvent\u003e {","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"Alvinlj00"},"content":"    private static EventCatalog eventCatalog \u003d null;","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":12,"author":{"gitId":"Alvinlj00"},"content":"    private EventCatalog() {","lastModifiedDate":"2021-10-23"},{"lineNumber":13,"author":{"gitId":"Alvinlj00"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":14,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":15,"author":{"gitId":"Alvinlj00"},"content":"    public static EventCatalog getInstance() {","lastModifiedDate":"2021-10-23"},{"lineNumber":16,"author":{"gitId":"Alvinlj00"},"content":"        if (eventCatalog \u003d\u003d null) {","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"Alvinlj00"},"content":"            eventCatalog \u003d new EventCatalog();","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"Alvinlj00"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":19,"author":{"gitId":"Alvinlj00"},"content":"        return eventCatalog;","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"Alvinlj00"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":21,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":22,"author":{"gitId":"Alvinlj00"},"content":"    public void sortCatalog() {","lastModifiedDate":"2021-10-23"},{"lineNumber":23,"author":{"gitId":"Alvinlj00"},"content":"        eventCatalog.sort(Event.DateTimeComparator);","lastModifiedDate":"2021-11-06"},{"lineNumber":24,"author":{"gitId":"Alvinlj00"},"content":"        for (Event event : eventCatalog) {","lastModifiedDate":"2021-10-25"},{"lineNumber":25,"author":{"gitId":"Alvinlj00"},"content":"            event.getTaskList().sort(Task.DateTimeComparator);","lastModifiedDate":"2021-11-06"},{"lineNumber":26,"author":{"gitId":"Alvinlj00"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":27,"author":{"gitId":"Alvinlj00"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":28,"author":{"gitId":"Alvinlj00"},"content":"}","lastModifiedDate":"2021-10-23"}],"authorContributionMap":{"Alvinlj00":28}},{"path":"src/main/java/seedu/duke/items/mainlists/MemberRoster.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Alvinlj00"},"content":"package seedu.duke.items.mainlists;","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":3,"author":{"gitId":"Alvinlj00"},"content":"import seedu.duke.items.characteristics.Member;","lastModifiedDate":"2021-10-23"},{"lineNumber":4,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":5,"author":{"gitId":"Alvinlj00"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-23"},{"lineNumber":6,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"Alvinlj00"},"content":"public class MemberRoster extends ArrayList\u003cMember\u003e {","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"Alvinlj00"},"content":"    private static MemberRoster memberRoster \u003d null;","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":11,"author":{"gitId":"Alvinlj00"},"content":"    private MemberRoster() {","lastModifiedDate":"2021-10-23"},{"lineNumber":12,"author":{"gitId":"Alvinlj00"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":13,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":14,"author":{"gitId":"Alvinlj00"},"content":"    public static MemberRoster getInstance() {","lastModifiedDate":"2021-10-23"},{"lineNumber":15,"author":{"gitId":"Alvinlj00"},"content":"        if (memberRoster \u003d\u003d null) {","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"Alvinlj00"},"content":"            memberRoster \u003d new MemberRoster();","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"Alvinlj00"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":18,"author":{"gitId":"Alvinlj00"},"content":"        return memberRoster;","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"Alvinlj00"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"Alvinlj00"},"content":"    public void sortRoster() {","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"Alvinlj00"},"content":"        memberRoster.sort(Member.NameComparator);","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"Alvinlj00"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":24,"author":{"gitId":"Alvinlj00"},"content":"}","lastModifiedDate":"2021-10-23"}],"authorContributionMap":{"Alvinlj00":24}},{"path":"src/main/java/seedu/duke/parser/ItemAttribute.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"crabnuggets"},"content":"package seedu.duke.parser;","lastModifiedDate":"2021-10-31"},{"lineNumber":2,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":3,"author":{"gitId":"crabnuggets"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-10-31"},{"lineNumber":4,"author":{"gitId":"crabnuggets"},"content":"import java.util.Map;","lastModifiedDate":"2021-10-31"},{"lineNumber":5,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":6,"author":{"gitId":"crabnuggets"},"content":"public enum ItemAttribute {","lastModifiedDate":"2021-10-31"},{"lineNumber":7,"author":{"gitId":"crabnuggets"},"content":"    TITLE(\"title\", \"n/\"),","lastModifiedDate":"2021-10-31"},{"lineNumber":8,"author":{"gitId":"crabnuggets"},"content":"    DATE(\"date\", \"d/\"),","lastModifiedDate":"2021-10-31"},{"lineNumber":9,"author":{"gitId":"crabnuggets"},"content":"    VENUE(\"venue\", \"v/\"),","lastModifiedDate":"2021-10-31"},{"lineNumber":10,"author":{"gitId":"antrikshv"},"content":"    BUDGET(\"budget\", \"b/\"),","lastModifiedDate":"2021-11-02"},{"lineNumber":11,"author":{"gitId":"antrikshv"},"content":"    DESCRIPTION(\"description\", \"p/\"),","lastModifiedDate":"2021-11-02"},{"lineNumber":12,"author":{"gitId":"antrikshv"},"content":"    TASK(\"task\", \"t/\");","lastModifiedDate":"2021-11-02"},{"lineNumber":13,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":14,"author":{"gitId":"crabnuggets"},"content":"    private static final Map\u003cItemAttribute, String\u003e BY_ATTRIBUTE_NAME \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-10-31"},{"lineNumber":15,"author":{"gitId":"crabnuggets"},"content":"    private static final Map\u003cItemAttribute, String\u003e BY_ATTRIBUTE_FLAG \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-10-31"},{"lineNumber":16,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":17,"author":{"gitId":"crabnuggets"},"content":"    static {","lastModifiedDate":"2021-10-31"},{"lineNumber":18,"author":{"gitId":"crabnuggets"},"content":"        for (ItemAttribute itemAttribute : values()) {","lastModifiedDate":"2021-10-31"},{"lineNumber":19,"author":{"gitId":"crabnuggets"},"content":"            BY_ATTRIBUTE_NAME.put(itemAttribute, itemAttribute.attributeName);","lastModifiedDate":"2021-10-31"},{"lineNumber":20,"author":{"gitId":"crabnuggets"},"content":"            BY_ATTRIBUTE_FLAG.put(itemAttribute, itemAttribute.attributeFlag);","lastModifiedDate":"2021-10-31"},{"lineNumber":21,"author":{"gitId":"crabnuggets"},"content":"        }","lastModifiedDate":"2021-10-31"},{"lineNumber":22,"author":{"gitId":"crabnuggets"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":23,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":24,"author":{"gitId":"crabnuggets"},"content":"    private final String attributeName;","lastModifiedDate":"2021-10-31"},{"lineNumber":25,"author":{"gitId":"crabnuggets"},"content":"    private final String attributeFlag;","lastModifiedDate":"2021-10-31"},{"lineNumber":26,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":27,"author":{"gitId":"crabnuggets"},"content":"    ItemAttribute(String attributeName, String attributeFlag) {","lastModifiedDate":"2021-10-31"},{"lineNumber":28,"author":{"gitId":"crabnuggets"},"content":"        this.attributeName \u003d attributeName;","lastModifiedDate":"2021-10-31"},{"lineNumber":29,"author":{"gitId":"crabnuggets"},"content":"        this.attributeFlag \u003d attributeFlag;","lastModifiedDate":"2021-10-31"},{"lineNumber":30,"author":{"gitId":"crabnuggets"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":31,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":32,"author":{"gitId":"crabnuggets"},"content":"    public static String getAttributeName(ItemAttribute itemAttribute) {","lastModifiedDate":"2021-10-31"},{"lineNumber":33,"author":{"gitId":"crabnuggets"},"content":"        return BY_ATTRIBUTE_NAME.get(itemAttribute);","lastModifiedDate":"2021-10-31"},{"lineNumber":34,"author":{"gitId":"crabnuggets"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":35,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":36,"author":{"gitId":"crabnuggets"},"content":"    public static String getItemFlag(ItemAttribute itemAttribute) {","lastModifiedDate":"2021-10-31"},{"lineNumber":37,"author":{"gitId":"crabnuggets"},"content":"        return BY_ATTRIBUTE_FLAG.get(itemAttribute);","lastModifiedDate":"2021-10-31"},{"lineNumber":38,"author":{"gitId":"crabnuggets"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":39,"author":{"gitId":"crabnuggets"},"content":"}","lastModifiedDate":"2021-10-31"}],"authorContributionMap":{"antrikshv":3,"crabnuggets":36}},{"path":"src/main/java/seedu/duke/parser/ItemType.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"crabnuggets"},"content":"package seedu.duke.parser;","lastModifiedDate":"2021-10-31"},{"lineNumber":2,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":3,"author":{"gitId":"crabnuggets"},"content":"public enum ItemType {","lastModifiedDate":"2021-10-31"},{"lineNumber":4,"author":{"gitId":"crabnuggets"},"content":"    EVENT,","lastModifiedDate":"2021-10-31"},{"lineNumber":5,"author":{"gitId":"crabnuggets"},"content":"    TASK,","lastModifiedDate":"2021-10-31"},{"lineNumber":6,"author":{"gitId":"crabnuggets"},"content":"    MEMBER","lastModifiedDate":"2021-10-31"},{"lineNumber":7,"author":{"gitId":"crabnuggets"},"content":"}","lastModifiedDate":"2021-10-31"}],"authorContributionMap":{"crabnuggets":7}},{"path":"src/main/java/seedu/duke/parser/MemberParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"crabnuggets"},"content":"package seedu.duke.parser;","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":3,"author":{"gitId":"crabnuggets"},"content":"import seedu.duke.exceptions.DukeException;","lastModifiedDate":"2021-10-23"},{"lineNumber":4,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":5,"author":{"gitId":"crabnuggets"},"content":"public class MemberParser {","lastModifiedDate":"2021-10-23"},{"lineNumber":6,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"crabnuggets"},"content":"    private static final String INTER_MEMBER_DELIMITER \u003d \" +\";","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"crabnuggets"},"content":"    private static final String NAME_SPACER \u003d \"_\";","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"crabnuggets"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":11,"author":{"gitId":"crabnuggets"},"content":"     * Parses user input involving the description of member names. For example,","lastModifiedDate":"2021-10-23"},{"lineNumber":12,"author":{"gitId":"crabnuggets"},"content":"     * \"John_Doe Jane_Doe\" will return a String[] containing {\"John Doe\", \"Jane Doe\"}","lastModifiedDate":"2021-10-23"},{"lineNumber":13,"author":{"gitId":"crabnuggets"},"content":"     *","lastModifiedDate":"2021-10-23"},{"lineNumber":14,"author":{"gitId":"crabnuggets"},"content":"     * @param userInput User input containing the names to parse","lastModifiedDate":"2021-10-23"},{"lineNumber":15,"author":{"gitId":"crabnuggets"},"content":"     * @return A String[] of names that have been parsed","lastModifiedDate":"2021-10-23"},{"lineNumber":16,"author":{"gitId":"crabnuggets"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":17,"author":{"gitId":"crabnuggets"},"content":"    public static String[] parseMemberCommand(String userInput) {","lastModifiedDate":"2021-10-23"},{"lineNumber":18,"author":{"gitId":"crabnuggets"},"content":"        try {","lastModifiedDate":"2021-10-23"},{"lineNumber":19,"author":{"gitId":"crabnuggets"},"content":"            verifyMemberCommand(userInput);","lastModifiedDate":"2021-10-23"},{"lineNumber":20,"author":{"gitId":"crabnuggets"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-10-23"},{"lineNumber":21,"author":{"gitId":"crabnuggets"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2021-10-23"},{"lineNumber":22,"author":{"gitId":"crabnuggets"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":23,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":24,"author":{"gitId":"crabnuggets"},"content":"        String[] memberNames \u003d userInput.split(INTER_MEMBER_DELIMITER);","lastModifiedDate":"2021-10-23"},{"lineNumber":25,"author":{"gitId":"crabnuggets"},"content":"        for (int i \u003d 0; i \u003c memberNames.length; i++) {","lastModifiedDate":"2021-10-23"},{"lineNumber":26,"author":{"gitId":"crabnuggets"},"content":"            memberNames[i] \u003d memberNames[i].replaceAll(NAME_SPACER, \" \").toUpperCase();","lastModifiedDate":"2021-11-07"},{"lineNumber":27,"author":{"gitId":"crabnuggets"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":28,"author":{"gitId":"crabnuggets"},"content":"        return memberNames;","lastModifiedDate":"2021-10-23"},{"lineNumber":29,"author":{"gitId":"crabnuggets"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":30,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":31,"author":{"gitId":"crabnuggets"},"content":"    private static void verifyMemberCommand(String userInput) throws DukeException {","lastModifiedDate":"2021-10-23"},{"lineNumber":32,"author":{"gitId":"crabnuggets"},"content":"        if (userInput.isBlank()) {","lastModifiedDate":"2021-10-23"},{"lineNumber":33,"author":{"gitId":"crabnuggets"},"content":"            throw new DukeException(\"Please give me at least a name! E.g. JOHN_DOE \");","lastModifiedDate":"2021-10-23"},{"lineNumber":34,"author":{"gitId":"crabnuggets"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":35,"author":{"gitId":"crabnuggets"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":36,"author":{"gitId":"crabnuggets"},"content":"}","lastModifiedDate":"2021-10-23"}],"authorContributionMap":{"crabnuggets":36}},{"path":"src/main/java/seedu/duke/parser/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"crabnuggets"},"content":"package seedu.duke.parser;","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"crabnuggets"},"content":"import seedu.duke.Ui;","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"antrikshv"},"content":"import seedu.duke.commands.ByeCommand;","lastModifiedDate":"2021-10-04"},{"lineNumber":6,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"antrikshv"},"content":"import seedu.duke.commands.HelpCommand;","lastModifiedDate":"2021-10-04"},{"lineNumber":8,"author":{"gitId":"antrikshv"},"content":"import seedu.duke.commands.Command;","lastModifiedDate":"2021-10-04"},{"lineNumber":9,"author":{"gitId":"antrikshv"},"content":"import seedu.duke.commands.DeleteCommand;","lastModifiedDate":"2021-10-04"},{"lineNumber":10,"author":{"gitId":"alwinangys"},"content":"import seedu.duke.commands.FindCommand;","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"crabnuggets"},"content":"import seedu.duke.exceptions.DukeException;","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"crabnuggets"},"content":"import seedu.duke.exceptions.parserexceptions.AttributeNotFoundException;","lastModifiedDate":"2021-10-31"},{"lineNumber":13,"author":{"gitId":"antrikshv"},"content":"import seedu.duke.exceptions.parserexceptions.InvalidBudgetException;","lastModifiedDate":"2021-10-31"},{"lineNumber":14,"author":{"gitId":"crabnuggets"},"content":"import seedu.duke.exceptions.parserexceptions.InvalidItemTypeException;","lastModifiedDate":"2021-10-31"},{"lineNumber":15,"author":{"gitId":"crabnuggets"},"content":"import seedu.duke.exceptions.parserexceptions.NoCommandAttributesException;","lastModifiedDate":"2021-10-31"},{"lineNumber":16,"author":{"gitId":"Alvinlj00"},"content":"import seedu.duke.parser.commandparser.AddParser;","lastModifiedDate":"2021-11-07"},{"lineNumber":17,"author":{"gitId":"alwinangys"},"content":"import seedu.duke.parser.commandparser.DeleteParser;","lastModifiedDate":"2021-11-07"},{"lineNumber":18,"author":{"gitId":"alwinangys"},"content":"import seedu.duke.parser.commandparser.FindParser;","lastModifiedDate":"2021-11-06"},{"lineNumber":19,"author":{"gitId":"Alvinlj00"},"content":"import seedu.duke.parser.commandparser.ListParser;","lastModifiedDate":"2021-11-07"},{"lineNumber":20,"author":{"gitId":"Alvinlj00"},"content":"import seedu.duke.parser.commandparser.NextParser;","lastModifiedDate":"2021-11-07"},{"lineNumber":21,"author":{"gitId":"Alvinlj00"},"content":"import seedu.duke.parser.commandparser.SelectParser;","lastModifiedDate":"2021-11-07"},{"lineNumber":22,"author":{"gitId":"Alvinlj00"},"content":"import seedu.duke.parser.commandparser.UpdateParser;","lastModifiedDate":"2021-11-07"},{"lineNumber":23,"author":{"gitId":"Alvinlj00"},"content":"import seedu.duke.parser.commandparser.DoneUndoParser;","lastModifiedDate":"2021-11-07"},{"lineNumber":24,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":25,"author":{"gitId":"antrikshv"},"content":"import java.math.BigDecimal;","lastModifiedDate":"2021-10-31"},{"lineNumber":26,"author":{"gitId":"antrikshv"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"antrikshv"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"antrikshv"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-10-31"},{"lineNumber":29,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":30,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":31,"author":{"gitId":"crabnuggets"},"content":"public abstract class Parser {","lastModifiedDate":"2021-10-31"},{"lineNumber":32,"author":{"gitId":"antrikshv"},"content":"    protected static DateTimeFormatter formatter1 \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\");","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"antrikshv"},"content":"    protected static DateTimeFormatter formatter2 \u003d DateTimeFormatter.ofPattern(\"d MMM yyyy - HH:mm\");","lastModifiedDate":"2021-10-10"},{"lineNumber":34,"author":{"gitId":"alwinangys"},"content":"    private static int indexOfLastSelectedEvent \u003d -1;","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":36,"author":{"gitId":"antrikshv"},"content":"    public static Command parseCommand(String response) throws DukeException, NoCommandAttributesException,","lastModifiedDate":"2021-11-02"},{"lineNumber":37,"author":{"gitId":"antrikshv"},"content":"            InvalidItemTypeException {","lastModifiedDate":"2021-11-02"},{"lineNumber":38,"author":{"gitId":"crabnuggets"},"content":"        // Trim and split response using first detected occurrence of whitespace(s) to get type of command requested","lastModifiedDate":"2021-10-31"},{"lineNumber":39,"author":{"gitId":"antrikshv"},"content":"        //String[] command \u003d response.trim().split(\" +\");","lastModifiedDate":"2021-10-31"},{"lineNumber":40,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":41,"author":{"gitId":"crabnuggets"},"content":"        // TODO: Once parser is restructured, replace above with following two lines","lastModifiedDate":"2021-10-31"},{"lineNumber":42,"author":{"gitId":"antrikshv"},"content":"        String[] command \u003d response.trim().split(\" +\");","lastModifiedDate":"2021-10-31"},{"lineNumber":43,"author":{"gitId":"antrikshv"},"content":"        if (command.length \u003d\u003d 1) {","lastModifiedDate":"2021-11-01"},{"lineNumber":44,"author":{"gitId":"antrikshv"},"content":"            String commandType \u003d command[0];","lastModifiedDate":"2021-11-01"},{"lineNumber":45,"author":{"gitId":"antrikshv"},"content":"            return singleWordCommandProtocol(command, commandType);","lastModifiedDate":"2021-11-01"},{"lineNumber":46,"author":{"gitId":"antrikshv"},"content":"        } else {","lastModifiedDate":"2021-11-01"},{"lineNumber":47,"author":{"gitId":"Alvinlj00"},"content":"            String[] splitCommandIntoTwo \u003d response.trim().split(\" +\", 2);","lastModifiedDate":"2021-11-04"},{"lineNumber":48,"author":{"gitId":"Alvinlj00"},"content":"            String commandDetails \u003d splitCommandIntoTwo[1];","lastModifiedDate":"2021-11-04"},{"lineNumber":49,"author":{"gitId":"crabnuggets"},"content":"            String commandType \u003d command[0];","lastModifiedDate":"2021-10-31"},{"lineNumber":50,"author":{"gitId":"antrikshv"},"content":"            return multiWordCommandProtocol(response, command, commandDetails, commandType);","lastModifiedDate":"2021-11-01"},{"lineNumber":51,"author":{"gitId":"antrikshv"},"content":"        }","lastModifiedDate":"2021-11-01"},{"lineNumber":52,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":53,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":54,"author":{"gitId":"antrikshv"},"content":"    private static Command multiWordCommandProtocol(String response, String[] command, String commandDetails,","lastModifiedDate":"2021-11-01"},{"lineNumber":55,"author":{"gitId":"antrikshv"},"content":"                                                    String commandType) throws DukeException {","lastModifiedDate":"2021-11-02"},{"lineNumber":56,"author":{"gitId":"crabnuggets"},"content":"        switch (commandType) {","lastModifiedDate":"2021-10-31"},{"lineNumber":57,"author":{"gitId":"antrikshv"},"content":"        case \"list\":","lastModifiedDate":"2021-10-04"},{"lineNumber":58,"author":{"gitId":"antrikshv"},"content":"            //return new ListCommand(command);","lastModifiedDate":"2021-11-02"},{"lineNumber":59,"author":{"gitId":"antrikshv"},"content":"            return ListParser.getListCommand(commandDetails,response);","lastModifiedDate":"2021-11-02"},{"lineNumber":60,"author":{"gitId":"Alvinlj00"},"content":"        case \"done\":","lastModifiedDate":"2021-10-11"},{"lineNumber":61,"author":{"gitId":"Alvinlj00"},"content":"        case \"undo\":","lastModifiedDate":"2021-10-11"},{"lineNumber":62,"author":{"gitId":"Alvinlj00"},"content":"            return DoneUndoParser.getDoneUndoCommand(command, commandDetails);","lastModifiedDate":"2021-11-07"},{"lineNumber":63,"author":{"gitId":"antrikshv"},"content":"        case \"delete\":","lastModifiedDate":"2021-10-04"},{"lineNumber":64,"author":{"gitId":"alwinangys"},"content":"            return DeleteParser.getDeleteCommand(command, commandDetails);","lastModifiedDate":"2021-11-07"},{"lineNumber":65,"author":{"gitId":"antrikshv"},"content":"        case \"add\":","lastModifiedDate":"2021-10-04"},{"lineNumber":66,"author":{"gitId":"Alvinlj00"},"content":"            return AddParser.getAddCommand(commandDetails);","lastModifiedDate":"2021-11-04"},{"lineNumber":67,"author":{"gitId":"antrikshv"},"content":"        case \"bye\":","lastModifiedDate":"2021-10-04"},{"lineNumber":68,"author":{"gitId":"antrikshv"},"content":"            return new ByeCommand();","lastModifiedDate":"2021-10-04"},{"lineNumber":69,"author":{"gitId":"antrikshv"},"content":"        case \"help\":","lastModifiedDate":"2021-10-04"},{"lineNumber":70,"author":{"gitId":"antrikshv"},"content":"            return new HelpCommand();","lastModifiedDate":"2021-10-04"},{"lineNumber":71,"author":{"gitId":"alwinangys"},"content":"        case \"find\":","lastModifiedDate":"2021-10-12"},{"lineNumber":72,"author":{"gitId":"alwinangys"},"content":"            return FindParser.getFindCommand(command, commandDetails);","lastModifiedDate":"2021-11-06"},{"lineNumber":73,"author":{"gitId":"alwinangys"},"content":"        case \"select\":","lastModifiedDate":"2021-10-12"},{"lineNumber":74,"author":{"gitId":"alwinangys"},"content":"            return SelectParser.getSelectCommand(command, commandDetails);","lastModifiedDate":"2021-11-03"},{"lineNumber":75,"author":{"gitId":"antrikshv"},"content":"        case \"update\":","lastModifiedDate":"2021-10-04"},{"lineNumber":76,"author":{"gitId":"antrikshv"},"content":"            //return new UpdateCommand(command);","lastModifiedDate":"2021-10-31"},{"lineNumber":77,"author":{"gitId":"antrikshv"},"content":"            return UpdateParser.getUpdateCommand(commandDetails);","lastModifiedDate":"2021-10-31"},{"lineNumber":78,"author":{"gitId":"antrikshv"},"content":"        case \"next\":","lastModifiedDate":"2021-10-04"},{"lineNumber":79,"author":{"gitId":"antrikshv"},"content":"            return NextParser.getNextCommand(commandDetails, response);","lastModifiedDate":"2021-11-02"},{"lineNumber":80,"author":{"gitId":"antrikshv"},"content":"        default:","lastModifiedDate":"2021-10-04"},{"lineNumber":81,"author":{"gitId":"crabnuggets"},"content":"            throw new DukeException(Ui.getInvalidCommandMessage());","lastModifiedDate":"2021-10-26"},{"lineNumber":82,"author":{"gitId":"antrikshv"},"content":"        }","lastModifiedDate":"2021-10-04"},{"lineNumber":83,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":84,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":85,"author":{"gitId":"antrikshv"},"content":"    private static Command singleWordCommandProtocol(String[] command, String commandType) throws DukeException {","lastModifiedDate":"2021-11-01"},{"lineNumber":86,"author":{"gitId":"antrikshv"},"content":"        switch (commandType) {","lastModifiedDate":"2021-11-01"},{"lineNumber":87,"author":{"gitId":"antrikshv"},"content":"        case \"bye\":","lastModifiedDate":"2021-11-01"},{"lineNumber":88,"author":{"gitId":"antrikshv"},"content":"            return new ByeCommand();","lastModifiedDate":"2021-11-01"},{"lineNumber":89,"author":{"gitId":"antrikshv"},"content":"        case \"help\":","lastModifiedDate":"2021-11-01"},{"lineNumber":90,"author":{"gitId":"antrikshv"},"content":"            return new HelpCommand();","lastModifiedDate":"2021-11-01"},{"lineNumber":91,"author":{"gitId":"antrikshv"},"content":"        default:","lastModifiedDate":"2021-11-01"},{"lineNumber":92,"author":{"gitId":"antrikshv"},"content":"            throw new DukeException(Ui.getInvalidCommandMessage());","lastModifiedDate":"2021-11-01"},{"lineNumber":93,"author":{"gitId":"antrikshv"},"content":"        }","lastModifiedDate":"2021-11-01"},{"lineNumber":94,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":95,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":96,"author":{"gitId":"crabnuggets"},"content":"    /**","lastModifiedDate":"2021-10-31"},{"lineNumber":97,"author":{"gitId":"crabnuggets"},"content":"     * Gets the item type (event, task or member) of the command given user input with the command","lastModifiedDate":"2021-10-31"},{"lineNumber":98,"author":{"gitId":"crabnuggets"},"content":"     * type (add, delete etc) filtered off.","lastModifiedDate":"2021-10-31"},{"lineNumber":99,"author":{"gitId":"crabnuggets"},"content":"     *","lastModifiedDate":"2021-10-31"},{"lineNumber":100,"author":{"gitId":"crabnuggets"},"content":"     * @param commandDetails Details of the command containing only the item flag and its","lastModifiedDate":"2021-10-31"},{"lineNumber":101,"author":{"gitId":"crabnuggets"},"content":"     *                       attributes (e.g. \"-e n/TITLE...\")","lastModifiedDate":"2021-10-31"},{"lineNumber":102,"author":{"gitId":"crabnuggets"},"content":"     * @return The specified item type of the user command","lastModifiedDate":"2021-10-31"},{"lineNumber":103,"author":{"gitId":"crabnuggets"},"content":"     * @throws InvalidItemTypeException If there is no flag detected that is valid","lastModifiedDate":"2021-10-31"},{"lineNumber":104,"author":{"gitId":"crabnuggets"},"content":"     */","lastModifiedDate":"2021-10-31"},{"lineNumber":105,"author":{"gitId":"crabnuggets"},"content":"    protected static ItemType getItemType(String commandDetails) throws InvalidItemTypeException {","lastModifiedDate":"2021-10-31"},{"lineNumber":106,"author":{"gitId":"crabnuggets"},"content":"        String itemFlagDeclaration \u003d (commandDetails.trim().split(\" +\"))[0];","lastModifiedDate":"2021-10-31"},{"lineNumber":107,"author":{"gitId":"crabnuggets"},"content":"        switch (itemFlagDeclaration) {","lastModifiedDate":"2021-10-31"},{"lineNumber":108,"author":{"gitId":"crabnuggets"},"content":"        case \"-e\":","lastModifiedDate":"2021-10-31"},{"lineNumber":109,"author":{"gitId":"crabnuggets"},"content":"            return ItemType.EVENT;","lastModifiedDate":"2021-10-31"},{"lineNumber":110,"author":{"gitId":"crabnuggets"},"content":"        case \"-t\":","lastModifiedDate":"2021-10-31"},{"lineNumber":111,"author":{"gitId":"crabnuggets"},"content":"            return ItemType.TASK;","lastModifiedDate":"2021-10-31"},{"lineNumber":112,"author":{"gitId":"crabnuggets"},"content":"        case \"-m\":","lastModifiedDate":"2021-10-31"},{"lineNumber":113,"author":{"gitId":"crabnuggets"},"content":"            return ItemType.MEMBER;","lastModifiedDate":"2021-10-31"},{"lineNumber":114,"author":{"gitId":"crabnuggets"},"content":"        default:","lastModifiedDate":"2021-10-31"},{"lineNumber":115,"author":{"gitId":"crabnuggets"},"content":"            throw new InvalidItemTypeException();","lastModifiedDate":"2021-10-31"},{"lineNumber":116,"author":{"gitId":"crabnuggets"},"content":"        }","lastModifiedDate":"2021-10-31"},{"lineNumber":117,"author":{"gitId":"crabnuggets"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":118,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":119,"author":{"gitId":"crabnuggets"},"content":"    /**","lastModifiedDate":"2021-10-31"},{"lineNumber":120,"author":{"gitId":"crabnuggets"},"content":"     * Gets the combined string of command attributes given user input with the command type (add, delete etc)","lastModifiedDate":"2021-10-31"},{"lineNumber":121,"author":{"gitId":"crabnuggets"},"content":"     * filtered off.","lastModifiedDate":"2021-10-31"},{"lineNumber":122,"author":{"gitId":"crabnuggets"},"content":"     *","lastModifiedDate":"2021-10-31"},{"lineNumber":123,"author":{"gitId":"crabnuggets"},"content":"     * @param commandDetails String containing details of the command","lastModifiedDate":"2021-10-31"},{"lineNumber":124,"author":{"gitId":"crabnuggets"},"content":"     * @return The combined string of command attributes e.g. \"n/TITLE d/DATE v/VENUE b/BUDGET\"","lastModifiedDate":"2021-10-31"},{"lineNumber":125,"author":{"gitId":"crabnuggets"},"content":"     * @throws NoCommandAttributesException If there is no command attributes detected","lastModifiedDate":"2021-10-31"},{"lineNumber":126,"author":{"gitId":"crabnuggets"},"content":"     */","lastModifiedDate":"2021-10-31"},{"lineNumber":127,"author":{"gitId":"crabnuggets"},"content":"    protected static String getCommandAttributes(String commandDetails) throws NoCommandAttributesException {","lastModifiedDate":"2021-10-31"},{"lineNumber":128,"author":{"gitId":"Alvinlj00"},"content":"        String[] commandAttributes \u003d (commandDetails.trim().split(\" +\", 2));","lastModifiedDate":"2021-11-04"},{"lineNumber":129,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":130,"author":{"gitId":"crabnuggets"},"content":"        if (commandAttributes.length \u003c 2) {","lastModifiedDate":"2021-10-31"},{"lineNumber":131,"author":{"gitId":"crabnuggets"},"content":"            throw new NoCommandAttributesException();","lastModifiedDate":"2021-10-31"},{"lineNumber":132,"author":{"gitId":"crabnuggets"},"content":"        }","lastModifiedDate":"2021-10-31"},{"lineNumber":133,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":134,"author":{"gitId":"crabnuggets"},"content":"        return commandAttributes[1];","lastModifiedDate":"2021-10-31"},{"lineNumber":135,"author":{"gitId":"crabnuggets"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":136,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":137,"author":{"gitId":"Alvinlj00"},"content":"    // @@author Alvinlj00","lastModifiedDate":"2021-10-31"},{"lineNumber":138,"author":{"gitId":"Alvinlj00"},"content":"    /**","lastModifiedDate":"2021-10-31"},{"lineNumber":139,"author":{"gitId":"Alvinlj00"},"content":"     * Takes in an item attribute and searches the response String (e.g. commandDetails) for the item attribute, and","lastModifiedDate":"2021-10-31"},{"lineNumber":140,"author":{"gitId":"Alvinlj00"},"content":"     * returns the parsed attribute.","lastModifiedDate":"2021-10-31"},{"lineNumber":141,"author":{"gitId":"Alvinlj00"},"content":"     *","lastModifiedDate":"2021-10-31"},{"lineNumber":142,"author":{"gitId":"Alvinlj00"},"content":"     * @param response User input/details regarding the command to search the attribute for.","lastModifiedDate":"2021-10-31"},{"lineNumber":143,"author":{"gitId":"Alvinlj00"},"content":"     * @param itemAttribute The item attribute to search for (e.g. title, venue etc.).","lastModifiedDate":"2021-10-31"},{"lineNumber":144,"author":{"gitId":"Alvinlj00"},"content":"     * @return The parsed attribute (does not contain the attribute flag) that was found.","lastModifiedDate":"2021-10-31"},{"lineNumber":145,"author":{"gitId":"Alvinlj00"},"content":"     * @throws AttributeNotFoundException If no such attribute is found within the provided string.","lastModifiedDate":"2021-10-31"},{"lineNumber":146,"author":{"gitId":"Alvinlj00"},"content":"     */","lastModifiedDate":"2021-10-31"},{"lineNumber":147,"author":{"gitId":"Alvinlj00"},"content":"    protected static String retrieveItemAttribute(String response, ItemAttribute itemAttribute)","lastModifiedDate":"2021-10-31"},{"lineNumber":148,"author":{"gitId":"Alvinlj00"},"content":"            throws AttributeNotFoundException {","lastModifiedDate":"2021-10-31"},{"lineNumber":149,"author":{"gitId":"Alvinlj00"},"content":"        int startOfItemAttribute \u003d response.indexOf(ItemAttribute.getItemFlag(itemAttribute)) + 2;","lastModifiedDate":"2021-10-31"},{"lineNumber":150,"author":{"gitId":"Alvinlj00"},"content":"        int endOfItemAttribute \u003d response.indexOf(\"/\", startOfItemAttribute) - 2;","lastModifiedDate":"2021-10-31"},{"lineNumber":151,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":152,"author":{"gitId":"Alvinlj00"},"content":"        String result;","lastModifiedDate":"2021-10-31"},{"lineNumber":153,"author":{"gitId":"Alvinlj00"},"content":"        if (endOfItemAttribute \u003c 0) {","lastModifiedDate":"2021-10-31"},{"lineNumber":154,"author":{"gitId":"Alvinlj00"},"content":"            result \u003d response.trim().substring(startOfItemAttribute);","lastModifiedDate":"2021-10-31"},{"lineNumber":155,"author":{"gitId":"Alvinlj00"},"content":"        } else {","lastModifiedDate":"2021-10-31"},{"lineNumber":156,"author":{"gitId":"Alvinlj00"},"content":"            result \u003d response.trim().substring(startOfItemAttribute, endOfItemAttribute);","lastModifiedDate":"2021-10-31"},{"lineNumber":157,"author":{"gitId":"Alvinlj00"},"content":"        }","lastModifiedDate":"2021-10-31"},{"lineNumber":158,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":159,"author":{"gitId":"Alvinlj00"},"content":"        if (result.isBlank()) {","lastModifiedDate":"2021-10-31"},{"lineNumber":160,"author":{"gitId":"Alvinlj00"},"content":"            throw new AttributeNotFoundException(itemAttribute);","lastModifiedDate":"2021-10-31"},{"lineNumber":161,"author":{"gitId":"Alvinlj00"},"content":"        }","lastModifiedDate":"2021-10-31"},{"lineNumber":162,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":163,"author":{"gitId":"Alvinlj00"},"content":"        return result;","lastModifiedDate":"2021-10-31"},{"lineNumber":164,"author":{"gitId":"Alvinlj00"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":165,"author":{"gitId":"Alvinlj00"},"content":"    // @@author","lastModifiedDate":"2021-10-31"},{"lineNumber":166,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":167,"author":{"gitId":"antrikshv"},"content":"    public static String convertDateTime(LocalDateTime dateTime) {","lastModifiedDate":"2021-10-10"},{"lineNumber":168,"author":{"gitId":"antrikshv"},"content":"        return dateTime.format(formatter2);","lastModifiedDate":"2021-10-10"},{"lineNumber":169,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":170,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":171,"author":{"gitId":"crabnuggets"},"content":"    public static LocalDateTime convertDateTime(String dateTime) throws DukeException {","lastModifiedDate":"2021-10-31"},{"lineNumber":172,"author":{"gitId":"antrikshv"},"content":"        try {","lastModifiedDate":"2021-10-31"},{"lineNumber":173,"author":{"gitId":"crabnuggets"},"content":"            LocalDateTime result \u003d LocalDateTime.parse(dateTime, formatter1);","lastModifiedDate":"2021-10-31"},{"lineNumber":174,"author":{"gitId":"crabnuggets"},"content":"            if (result.isBefore(LocalDateTime.now())) {","lastModifiedDate":"2021-10-31"},{"lineNumber":175,"author":{"gitId":"crabnuggets"},"content":"                throw new DukeException(\"Unfortunately, we cannot travel back in time. Please \"","lastModifiedDate":"2021-10-31"},{"lineNumber":176,"author":{"gitId":"crabnuggets"},"content":"                        + \"enter a valid date and time in the format \u0027dd-MM-yyyy HHmm\u0027. \");","lastModifiedDate":"2021-10-31"},{"lineNumber":177,"author":{"gitId":"crabnuggets"},"content":"            }","lastModifiedDate":"2021-10-31"},{"lineNumber":178,"author":{"gitId":"crabnuggets"},"content":"            return result;","lastModifiedDate":"2021-10-31"},{"lineNumber":179,"author":{"gitId":"antrikshv"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-10-31"},{"lineNumber":180,"author":{"gitId":"antrikshv"},"content":"            System.out.println(\"Please enter a valid date and time in the format \u0027dd-MM-yyyy HHmm\u0027.\");","lastModifiedDate":"2021-10-31"},{"lineNumber":181,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":182,"author":{"gitId":"antrikshv"},"content":"        }","lastModifiedDate":"2021-10-31"},{"lineNumber":183,"author":{"gitId":"antrikshv"},"content":"        return null;","lastModifiedDate":"2021-10-31"},{"lineNumber":184,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":185,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":186,"author":{"gitId":"crabnuggets"},"content":"    public static String convertDateTimeForSaving(LocalDateTime dateTime) {","lastModifiedDate":"2021-10-11"},{"lineNumber":187,"author":{"gitId":"crabnuggets"},"content":"        return dateTime.format(formatter1);","lastModifiedDate":"2021-10-11"},{"lineNumber":188,"author":{"gitId":"crabnuggets"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":189,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":190,"author":{"gitId":"crabnuggets"},"content":"    public static LocalDateTime convertDateTimeForLoading(String dateTime) {","lastModifiedDate":"2021-11-04"},{"lineNumber":191,"author":{"gitId":"crabnuggets"},"content":"        return LocalDateTime.parse(dateTime, formatter1);","lastModifiedDate":"2021-11-04"},{"lineNumber":192,"author":{"gitId":"crabnuggets"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":193,"author":{"gitId":"crabnuggets"},"content":"  ","lastModifiedDate":"2021-11-04"},{"lineNumber":194,"author":{"gitId":"antrikshv"},"content":"    /**","lastModifiedDate":"2021-10-31"},{"lineNumber":195,"author":{"gitId":"antrikshv"},"content":"     * Converts a budget as a string and formats it into a double.","lastModifiedDate":"2021-10-31"},{"lineNumber":196,"author":{"gitId":"antrikshv"},"content":"     *","lastModifiedDate":"2021-10-31"},{"lineNumber":197,"author":{"gitId":"antrikshv"},"content":"     * @param budget The budget provided as a String","lastModifiedDate":"2021-10-31"},{"lineNumber":198,"author":{"gitId":"antrikshv"},"content":"     * @return The converted budget as a double","lastModifiedDate":"2021-10-31"},{"lineNumber":199,"author":{"gitId":"antrikshv"},"content":"     * @throws InvalidBudgetException If the provided budget converts into a negative number of has more than 2 decimals","lastModifiedDate":"2021-10-31"},{"lineNumber":200,"author":{"gitId":"antrikshv"},"content":"     */","lastModifiedDate":"2021-10-31"},{"lineNumber":201,"author":{"gitId":"antrikshv"},"content":"    public static double convertEventBudgetToDouble(String budget) throws InvalidBudgetException {","lastModifiedDate":"2021-10-31"},{"lineNumber":202,"author":{"gitId":"antrikshv"},"content":"        Double result \u003d null;","lastModifiedDate":"2021-10-31"},{"lineNumber":203,"author":{"gitId":"antrikshv"},"content":"        try {","lastModifiedDate":"2021-10-31"},{"lineNumber":204,"author":{"gitId":"Alvinlj00"},"content":"            if (!budget.matches(\"[0-9.]+\")) {","lastModifiedDate":"2021-11-04"},{"lineNumber":205,"author":{"gitId":"Alvinlj00"},"content":"                throw new InvalidBudgetException(\"Event budget can only be a valid number. \");","lastModifiedDate":"2021-11-04"},{"lineNumber":206,"author":{"gitId":"Alvinlj00"},"content":"            }","lastModifiedDate":"2021-11-04"},{"lineNumber":207,"author":{"gitId":"antrikshv"},"content":"            result \u003d Double.parseDouble(budget);","lastModifiedDate":"2021-10-31"},{"lineNumber":208,"author":{"gitId":"antrikshv"},"content":"            if (result \u003c 0) {","lastModifiedDate":"2021-10-31"},{"lineNumber":209,"author":{"gitId":"antrikshv"},"content":"                throw new InvalidBudgetException(\"Event budget needs to be a positive number.\");","lastModifiedDate":"2021-10-31"},{"lineNumber":210,"author":{"gitId":"antrikshv"},"content":"            }","lastModifiedDate":"2021-10-31"},{"lineNumber":211,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":212,"author":{"gitId":"antrikshv"},"content":"            if (BigDecimal.valueOf(result).scale() \u003e 2) {","lastModifiedDate":"2021-10-31"},{"lineNumber":213,"author":{"gitId":"antrikshv"},"content":"                throw new InvalidBudgetException(\"Event budget cannot have more than 2 decimal places.\");","lastModifiedDate":"2021-10-31"},{"lineNumber":214,"author":{"gitId":"antrikshv"},"content":"            }","lastModifiedDate":"2021-10-31"},{"lineNumber":215,"author":{"gitId":"antrikshv"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-10-31"},{"lineNumber":216,"author":{"gitId":"antrikshv"},"content":"            System.out.println(\"Event budget needs to be a number.\");","lastModifiedDate":"2021-10-31"},{"lineNumber":217,"author":{"gitId":"antrikshv"},"content":"        }","lastModifiedDate":"2021-10-31"},{"lineNumber":218,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":219,"author":{"gitId":"antrikshv"},"content":"        // If conditional checks above fail internally, result will remain null. Throw exception","lastModifiedDate":"2021-10-31"},{"lineNumber":220,"author":{"gitId":"antrikshv"},"content":"        if (result \u003d\u003d null) {","lastModifiedDate":"2021-10-31"},{"lineNumber":221,"author":{"gitId":"antrikshv"},"content":"            throw new InvalidBudgetException(\"Event budget is null!\");","lastModifiedDate":"2021-10-31"},{"lineNumber":222,"author":{"gitId":"antrikshv"},"content":"        }","lastModifiedDate":"2021-10-31"},{"lineNumber":223,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":224,"author":{"gitId":"antrikshv"},"content":"        return result;","lastModifiedDate":"2021-10-31"},{"lineNumber":225,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":226,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":227,"author":{"gitId":"Alvinlj00"},"content":"    public static int[] extractInt(String input) throws DukeException {","lastModifiedDate":"2021-11-04"},{"lineNumber":228,"author":{"gitId":"Alvinlj00"},"content":"        String parsedInput \u003d input.replaceAll(\"[^\\\\d]\", \" \").trim();","lastModifiedDate":"2021-11-04"},{"lineNumber":229,"author":{"gitId":"Alvinlj00"},"content":"        if (parsedInput.isBlank()) {","lastModifiedDate":"2021-11-04"},{"lineNumber":230,"author":{"gitId":"Alvinlj00"},"content":"            throw new DukeException(\"Indexes entered need to be valid numbers. \");","lastModifiedDate":"2021-11-04"},{"lineNumber":231,"author":{"gitId":"Alvinlj00"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":232,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":233,"author":{"gitId":"Alvinlj00"},"content":"        String[] stringIndexes \u003d parsedInput.split(\" +\");","lastModifiedDate":"2021-11-04"},{"lineNumber":234,"author":{"gitId":"Alvinlj00"},"content":"        int [] indexes \u003d new int[stringIndexes.length];","lastModifiedDate":"2021-11-04"},{"lineNumber":235,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":236,"author":{"gitId":"Alvinlj00"},"content":"        for (int i \u003d 0; i \u003c stringIndexes.length; i++) {","lastModifiedDate":"2021-11-04"},{"lineNumber":237,"author":{"gitId":"Alvinlj00"},"content":"            // -1 to obtain the real indexes instead of what the user sees","lastModifiedDate":"2021-11-04"},{"lineNumber":238,"author":{"gitId":"Alvinlj00"},"content":"            indexes[i] \u003d Integer.parseInt(stringIndexes[i]) - 1;","lastModifiedDate":"2021-11-04"},{"lineNumber":239,"author":{"gitId":"Alvinlj00"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":240,"author":{"gitId":"Alvinlj00"},"content":"        return indexes;","lastModifiedDate":"2021-11-04"},{"lineNumber":241,"author":{"gitId":"Alvinlj00"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":242,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":243,"author":{"gitId":"alwinangys"},"content":"    public static void updateIndexOfLastSelectedEvent(int index) {","lastModifiedDate":"2021-10-24"},{"lineNumber":244,"author":{"gitId":"alwinangys"},"content":"        indexOfLastSelectedEvent \u003d index;","lastModifiedDate":"2021-10-24"},{"lineNumber":245,"author":{"gitId":"alwinangys"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":246,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":247,"author":{"gitId":"alwinangys"},"content":"    public static int getIndexOfLastSelectedEvent() {","lastModifiedDate":"2021-10-24"},{"lineNumber":248,"author":{"gitId":"alwinangys"},"content":"        return indexOfLastSelectedEvent;","lastModifiedDate":"2021-10-24"},{"lineNumber":249,"author":{"gitId":"alwinangys"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":250,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":251,"author":{"gitId":"alwinangys"},"content":"    public static void updateIndexToNoEventSelected() {","lastModifiedDate":"2021-10-25"},{"lineNumber":252,"author":{"gitId":"alwinangys"},"content":"        updateIndexOfLastSelectedEvent(-1);","lastModifiedDate":"2021-10-25"},{"lineNumber":253,"author":{"gitId":"alwinangys"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":254,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":255,"author":{"gitId":"alwinangys"},"content":"    public static boolean noEventSelected() {","lastModifiedDate":"2021-10-25"},{"lineNumber":256,"author":{"gitId":"alwinangys"},"content":"        return getIndexOfLastSelectedEvent() \u003d\u003d -1;","lastModifiedDate":"2021-10-25"},{"lineNumber":257,"author":{"gitId":"alwinangys"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":258,"author":{"gitId":"antrikshv"},"content":"}","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"antrikshv":101,"Alvinlj00":61,"crabnuggets":70,"alwinangys":26}},{"path":"src/main/java/seedu/duke/parser/commandparser/AddParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"crabnuggets"},"content":"package seedu.duke.parser.commandparser;","lastModifiedDate":"2021-10-31"},{"lineNumber":2,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":3,"author":{"gitId":"Alvinlj00"},"content":"import seedu.duke.Duke;","lastModifiedDate":"2021-11-04"},{"lineNumber":4,"author":{"gitId":"crabnuggets"},"content":"import seedu.duke.Ui;","lastModifiedDate":"2021-10-31"},{"lineNumber":5,"author":{"gitId":"crabnuggets"},"content":"import seedu.duke.commands.Command;","lastModifiedDate":"2021-10-31"},{"lineNumber":6,"author":{"gitId":"Alvinlj00"},"content":"import seedu.duke.commands.addcommands.AddEventCommand;","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"Alvinlj00"},"content":"import seedu.duke.commands.addcommands.AddMemberCommand;","lastModifiedDate":"2021-11-04"},{"lineNumber":8,"author":{"gitId":"Alvinlj00"},"content":"import seedu.duke.commands.addcommands.AddTaskCommand;","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"crabnuggets"},"content":"import seedu.duke.exceptions.DukeException;","lastModifiedDate":"2021-10-31"},{"lineNumber":10,"author":{"gitId":"crabnuggets"},"content":"import seedu.duke.exceptions.parserexceptions.AttributeNotFoundException;","lastModifiedDate":"2021-10-31"},{"lineNumber":11,"author":{"gitId":"crabnuggets"},"content":"import seedu.duke.exceptions.parserexceptions.InvalidBudgetException;","lastModifiedDate":"2021-10-31"},{"lineNumber":12,"author":{"gitId":"crabnuggets"},"content":"import seedu.duke.exceptions.parserexceptions.InvalidItemTypeException;","lastModifiedDate":"2021-10-31"},{"lineNumber":13,"author":{"gitId":"crabnuggets"},"content":"import seedu.duke.exceptions.parserexceptions.NoCommandAttributesException;","lastModifiedDate":"2021-10-31"},{"lineNumber":14,"author":{"gitId":"Alvinlj00"},"content":"import seedu.duke.items.Event;","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"Alvinlj00"},"content":"import seedu.duke.items.characteristics.Member;","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"crabnuggets"},"content":"import seedu.duke.parser.ItemAttribute;","lastModifiedDate":"2021-10-31"},{"lineNumber":17,"author":{"gitId":"crabnuggets"},"content":"import seedu.duke.parser.ItemType;","lastModifiedDate":"2021-10-31"},{"lineNumber":18,"author":{"gitId":"crabnuggets"},"content":"import seedu.duke.parser.Parser;","lastModifiedDate":"2021-10-31"},{"lineNumber":19,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":20,"author":{"gitId":"crabnuggets"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-10-31"},{"lineNumber":21,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":22,"author":{"gitId":"crabnuggets"},"content":"public abstract class AddParser extends Parser {","lastModifiedDate":"2021-10-31"},{"lineNumber":23,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":24,"author":{"gitId":"crabnuggets"},"content":"    private static final int INDEX_OF_TITLE \u003d 0;","lastModifiedDate":"2021-10-31"},{"lineNumber":25,"author":{"gitId":"crabnuggets"},"content":"    private static final int INDEX_OF_DATETIME \u003d 1;","lastModifiedDate":"2021-10-31"},{"lineNumber":26,"author":{"gitId":"crabnuggets"},"content":"    private static final int INDEX_OF_VENUE \u003d 2;","lastModifiedDate":"2021-10-31"},{"lineNumber":27,"author":{"gitId":"crabnuggets"},"content":"    private static final int INDEX_OF_BUDGET \u003d 3;","lastModifiedDate":"2021-10-31"},{"lineNumber":28,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":29,"author":{"gitId":"crabnuggets"},"content":"    /**","lastModifiedDate":"2021-10-31"},{"lineNumber":30,"author":{"gitId":"crabnuggets"},"content":"     * Parses add command details from user input to determine the type of item to be added along with its respective","lastModifiedDate":"2021-10-31"},{"lineNumber":31,"author":{"gitId":"crabnuggets"},"content":"     * attributes and returns the respective Add Command.","lastModifiedDate":"2021-10-31"},{"lineNumber":32,"author":{"gitId":"crabnuggets"},"content":"     *","lastModifiedDate":"2021-10-31"},{"lineNumber":33,"author":{"gitId":"crabnuggets"},"content":"     * @param commandDetails User input containing the flag of the item to be added and attributes for the command","lastModifiedDate":"2021-10-31"},{"lineNumber":34,"author":{"gitId":"crabnuggets"},"content":"     * @return The constructed Add Command. Null otherwise.","lastModifiedDate":"2021-10-31"},{"lineNumber":35,"author":{"gitId":"crabnuggets"},"content":"     */","lastModifiedDate":"2021-10-31"},{"lineNumber":36,"author":{"gitId":"Alvinlj00"},"content":"    public static Command getAddCommand(String commandDetails) {","lastModifiedDate":"2021-11-04"},{"lineNumber":37,"author":{"gitId":"crabnuggets"},"content":"        try {","lastModifiedDate":"2021-10-31"},{"lineNumber":38,"author":{"gitId":"crabnuggets"},"content":"            ItemType itemTypeToAdd \u003d getItemType(commandDetails);","lastModifiedDate":"2021-10-31"},{"lineNumber":39,"author":{"gitId":"crabnuggets"},"content":"            switch (itemTypeToAdd) {","lastModifiedDate":"2021-10-31"},{"lineNumber":40,"author":{"gitId":"crabnuggets"},"content":"            case EVENT:","lastModifiedDate":"2021-10-31"},{"lineNumber":41,"author":{"gitId":"crabnuggets"},"content":"                String[] parsedAttributes \u003d parseAddEvent(commandDetails);","lastModifiedDate":"2021-10-31"},{"lineNumber":42,"author":{"gitId":"crabnuggets"},"content":"                String title \u003d parsedAttributes[INDEX_OF_TITLE];","lastModifiedDate":"2021-10-31"},{"lineNumber":43,"author":{"gitId":"crabnuggets"},"content":"                LocalDateTime dateTime \u003d convertDateTime(parsedAttributes[INDEX_OF_DATETIME]);","lastModifiedDate":"2021-10-31"},{"lineNumber":44,"author":{"gitId":"crabnuggets"},"content":"                String venue \u003d parsedAttributes[INDEX_OF_VENUE];","lastModifiedDate":"2021-10-31"},{"lineNumber":45,"author":{"gitId":"Alvinlj00"},"content":"                double budget \u003d convertEventBudgetToDouble(parsedAttributes[INDEX_OF_BUDGET]);","lastModifiedDate":"2021-11-04"},{"lineNumber":46,"author":{"gitId":"Alvinlj00"},"content":"                Ui.promptForDescription();","lastModifiedDate":"2021-11-04"},{"lineNumber":47,"author":{"gitId":"crabnuggets"},"content":"                String description \u003d Ui.readInput().trim();","lastModifiedDate":"2021-10-31"},{"lineNumber":48,"author":{"gitId":"Alvinlj00"},"content":"                Ui.printLineBreak();","lastModifiedDate":"2021-11-04"},{"lineNumber":49,"author":{"gitId":"Alvinlj00"},"content":"                return new AddEventCommand(title, description, dateTime, venue, budget);","lastModifiedDate":"2021-11-04"},{"lineNumber":50,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":51,"author":{"gitId":"crabnuggets"},"content":"            case TASK:","lastModifiedDate":"2021-10-31"},{"lineNumber":52,"author":{"gitId":"Alvinlj00"},"content":"                parsedAttributes \u003d parseAddTask(commandDetails);","lastModifiedDate":"2021-11-04"},{"lineNumber":53,"author":{"gitId":"Alvinlj00"},"content":"                title \u003d parsedAttributes[INDEX_OF_TITLE];","lastModifiedDate":"2021-11-04"},{"lineNumber":54,"author":{"gitId":"Alvinlj00"},"content":"                dateTime \u003d convertDateTime(parsedAttributes[INDEX_OF_DATETIME]);","lastModifiedDate":"2021-11-04"},{"lineNumber":55,"author":{"gitId":"Alvinlj00"},"content":"                Ui.promptForDescription();","lastModifiedDate":"2021-11-04"},{"lineNumber":56,"author":{"gitId":"Alvinlj00"},"content":"                description \u003d Ui.readInput().trim();","lastModifiedDate":"2021-11-04"},{"lineNumber":57,"author":{"gitId":"Alvinlj00"},"content":"                Ui.printLineBreak();","lastModifiedDate":"2021-11-04"},{"lineNumber":58,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":59,"author":{"gitId":"Alvinlj00"},"content":"                int eventIndex \u003d getEventForTask();","lastModifiedDate":"2021-11-04"},{"lineNumber":60,"author":{"gitId":"Alvinlj00"},"content":"                Ui.printLineBreak();","lastModifiedDate":"2021-11-06"},{"lineNumber":61,"author":{"gitId":"Alvinlj00"},"content":"                int[] memberIndexes \u003d getMembersForTask();","lastModifiedDate":"2021-11-04"},{"lineNumber":62,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":63,"author":{"gitId":"Alvinlj00"},"content":"                return new AddTaskCommand(title, description, dateTime, eventIndex, memberIndexes);","lastModifiedDate":"2021-11-04"},{"lineNumber":64,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":65,"author":{"gitId":"crabnuggets"},"content":"            case MEMBER:","lastModifiedDate":"2021-10-31"},{"lineNumber":66,"author":{"gitId":"Alvinlj00"},"content":"                parsedAttributes \u003d parseAddMembers(commandDetails);","lastModifiedDate":"2021-11-04"},{"lineNumber":67,"author":{"gitId":"Alvinlj00"},"content":"                return new AddMemberCommand(parsedAttributes);","lastModifiedDate":"2021-11-04"},{"lineNumber":68,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":69,"author":{"gitId":"crabnuggets"},"content":"            default:","lastModifiedDate":"2021-10-31"},{"lineNumber":70,"author":{"gitId":"crabnuggets"},"content":"                return null;","lastModifiedDate":"2021-10-31"},{"lineNumber":71,"author":{"gitId":"crabnuggets"},"content":"            }","lastModifiedDate":"2021-10-31"},{"lineNumber":72,"author":{"gitId":"crabnuggets"},"content":"        } catch (InvalidItemTypeException e) {","lastModifiedDate":"2021-10-31"},{"lineNumber":73,"author":{"gitId":"crabnuggets"},"content":"            System.out.println(\"Having some trouble understanding what exactly you\u0027re trying to add!\\n\"","lastModifiedDate":"2021-10-31"},{"lineNumber":74,"author":{"gitId":"crabnuggets"},"content":"                    + \"TIP: Specify event \u0027-e\u0027, task \u0027-t\u0027, or member \u0027-m\u0027 after the \u0027add\u0027 command.\");","lastModifiedDate":"2021-10-31"},{"lineNumber":75,"author":{"gitId":"crabnuggets"},"content":"        } catch (InvalidBudgetException | DukeException e) {","lastModifiedDate":"2021-10-31"},{"lineNumber":76,"author":{"gitId":"crabnuggets"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2021-10-31"},{"lineNumber":77,"author":{"gitId":"crabnuggets"},"content":"        }","lastModifiedDate":"2021-10-31"},{"lineNumber":78,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":79,"author":{"gitId":"crabnuggets"},"content":"        return null;","lastModifiedDate":"2021-10-31"},{"lineNumber":80,"author":{"gitId":"crabnuggets"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":81,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":82,"author":{"gitId":"crabnuggets"},"content":"    /**","lastModifiedDate":"2021-10-31"},{"lineNumber":83,"author":{"gitId":"crabnuggets"},"content":"     * Takes in command details for an event and returns a String[] containing the parsed attributes for that event.","lastModifiedDate":"2021-10-31"},{"lineNumber":84,"author":{"gitId":"crabnuggets"},"content":"     *","lastModifiedDate":"2021-10-31"},{"lineNumber":85,"author":{"gitId":"crabnuggets"},"content":"     * @param commandDetails String that contains command attributes and a redundant event flag.","lastModifiedDate":"2021-10-31"},{"lineNumber":86,"author":{"gitId":"crabnuggets"},"content":"     * @return The String[] of parsed attributes for an event. Null otherwise.","lastModifiedDate":"2021-10-31"},{"lineNumber":87,"author":{"gitId":"crabnuggets"},"content":"     */","lastModifiedDate":"2021-10-31"},{"lineNumber":88,"author":{"gitId":"Alvinlj00"},"content":"    private static String[] parseAddEvent(String commandDetails) throws DukeException {","lastModifiedDate":"2021-11-04"},{"lineNumber":89,"author":{"gitId":"crabnuggets"},"content":"        try {","lastModifiedDate":"2021-10-31"},{"lineNumber":90,"author":{"gitId":"crabnuggets"},"content":"            String commandAttributes \u003d getCommandAttributes(commandDetails);","lastModifiedDate":"2021-10-31"},{"lineNumber":91,"author":{"gitId":"crabnuggets"},"content":"            String[] parsedAttributes \u003d new String[4];","lastModifiedDate":"2021-10-31"},{"lineNumber":92,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":93,"author":{"gitId":"crabnuggets"},"content":"            String title \u003d retrieveItemAttribute(commandAttributes, ItemAttribute.TITLE);","lastModifiedDate":"2021-10-31"},{"lineNumber":94,"author":{"gitId":"crabnuggets"},"content":"            parsedAttributes[INDEX_OF_TITLE] \u003d title;","lastModifiedDate":"2021-10-31"},{"lineNumber":95,"author":{"gitId":"crabnuggets"},"content":"            String dateTime \u003d retrieveItemAttribute(commandAttributes, ItemAttribute.DATE);","lastModifiedDate":"2021-10-31"},{"lineNumber":96,"author":{"gitId":"crabnuggets"},"content":"            parsedAttributes[INDEX_OF_DATETIME] \u003d dateTime;","lastModifiedDate":"2021-10-31"},{"lineNumber":97,"author":{"gitId":"crabnuggets"},"content":"            String venue \u003d retrieveItemAttribute(commandAttributes, ItemAttribute.VENUE);","lastModifiedDate":"2021-10-31"},{"lineNumber":98,"author":{"gitId":"crabnuggets"},"content":"            parsedAttributes[INDEX_OF_VENUE] \u003d venue;","lastModifiedDate":"2021-10-31"},{"lineNumber":99,"author":{"gitId":"crabnuggets"},"content":"            String budget \u003d retrieveItemAttribute(commandAttributes, ItemAttribute.BUDGET);","lastModifiedDate":"2021-10-31"},{"lineNumber":100,"author":{"gitId":"crabnuggets"},"content":"            parsedAttributes[INDEX_OF_BUDGET] \u003d budget;","lastModifiedDate":"2021-10-31"},{"lineNumber":101,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":102,"author":{"gitId":"crabnuggets"},"content":"            return parsedAttributes;","lastModifiedDate":"2021-10-31"},{"lineNumber":103,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":104,"author":{"gitId":"crabnuggets"},"content":"        } catch (NoCommandAttributesException e) {","lastModifiedDate":"2021-10-31"},{"lineNumber":105,"author":{"gitId":"Alvinlj00"},"content":"            throw new DukeException(\"No details about the event you\u0027re trying to add is given!\\n\"","lastModifiedDate":"2021-11-04"},{"lineNumber":106,"author":{"gitId":"crabnuggets"},"content":"                    + \"Format: add -e n/TITLE d/dd-MM-yyyy HHmm v/VENUE b/BUDGET\");","lastModifiedDate":"2021-10-31"},{"lineNumber":107,"author":{"gitId":"crabnuggets"},"content":"        } catch (AttributeNotFoundException e) {","lastModifiedDate":"2021-10-31"},{"lineNumber":108,"author":{"gitId":"crabnuggets"},"content":"            String attributeType \u003d ItemAttribute.getAttributeName(e.getItemAttribute());","lastModifiedDate":"2021-10-31"},{"lineNumber":109,"author":{"gitId":"crabnuggets"},"content":"            String attributeFlag \u003d ItemAttribute.getItemFlag(e.getItemAttribute());","lastModifiedDate":"2021-10-31"},{"lineNumber":110,"author":{"gitId":"Alvinlj00"},"content":"            throw new DukeException(\"Please add a \" + attributeType + \"for your event using \"","lastModifiedDate":"2021-11-04"},{"lineNumber":111,"author":{"gitId":"crabnuggets"},"content":"                    + attributeFlag + attributeType.toUpperCase());","lastModifiedDate":"2021-10-31"},{"lineNumber":112,"author":{"gitId":"crabnuggets"},"content":"        }","lastModifiedDate":"2021-10-31"},{"lineNumber":113,"author":{"gitId":"Alvinlj00"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":114,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":115,"author":{"gitId":"Alvinlj00"},"content":"    private static String[] parseAddTask(String commandDetails) throws DukeException {","lastModifiedDate":"2021-11-04"},{"lineNumber":116,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":117,"author":{"gitId":"Alvinlj00"},"content":"        if (Duke.eventCatalog.isEmpty()) {","lastModifiedDate":"2021-11-04"},{"lineNumber":118,"author":{"gitId":"Alvinlj00"},"content":"            throw new DukeException(\"There is no event to assign this task to! Please add \"","lastModifiedDate":"2021-11-04"},{"lineNumber":119,"author":{"gitId":"Alvinlj00"},"content":"                    + \"an event using the flag \u0027-e\u0027. \");","lastModifiedDate":"2021-11-04"},{"lineNumber":120,"author":{"gitId":"Alvinlj00"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":121,"author":{"gitId":"Alvinlj00"},"content":"        if (Duke.memberRoster.isEmpty()) {","lastModifiedDate":"2021-11-04"},{"lineNumber":122,"author":{"gitId":"Alvinlj00"},"content":"            throw new DukeException(\"There are no members in your roster to assign this task to!\");","lastModifiedDate":"2021-11-04"},{"lineNumber":123,"author":{"gitId":"crabnuggets"},"content":"        }","lastModifiedDate":"2021-10-31"},{"lineNumber":124,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":125,"author":{"gitId":"Alvinlj00"},"content":"        try {","lastModifiedDate":"2021-11-04"},{"lineNumber":126,"author":{"gitId":"Alvinlj00"},"content":"            String commandAttributes \u003d getCommandAttributes(commandDetails);","lastModifiedDate":"2021-11-04"},{"lineNumber":127,"author":{"gitId":"Alvinlj00"},"content":"            String[] parsedAttributes \u003d new String[2];","lastModifiedDate":"2021-11-04"},{"lineNumber":128,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":129,"author":{"gitId":"Alvinlj00"},"content":"            String title \u003d retrieveItemAttribute(commandAttributes, ItemAttribute.TITLE);","lastModifiedDate":"2021-11-04"},{"lineNumber":130,"author":{"gitId":"Alvinlj00"},"content":"            parsedAttributes[INDEX_OF_TITLE] \u003d title;","lastModifiedDate":"2021-11-04"},{"lineNumber":131,"author":{"gitId":"Alvinlj00"},"content":"            String dateTime \u003d retrieveItemAttribute(commandAttributes, ItemAttribute.DATE);","lastModifiedDate":"2021-11-04"},{"lineNumber":132,"author":{"gitId":"Alvinlj00"},"content":"            parsedAttributes[INDEX_OF_DATETIME] \u003d dateTime;","lastModifiedDate":"2021-11-04"},{"lineNumber":133,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":134,"author":{"gitId":"Alvinlj00"},"content":"            return parsedAttributes;","lastModifiedDate":"2021-11-04"},{"lineNumber":135,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":136,"author":{"gitId":"Alvinlj00"},"content":"        } catch (NoCommandAttributesException e) {","lastModifiedDate":"2021-11-04"},{"lineNumber":137,"author":{"gitId":"Alvinlj00"},"content":"            throw new DukeException(\"No details about the task you\u0027re trying to add is given!\\n\"","lastModifiedDate":"2021-11-04"},{"lineNumber":138,"author":{"gitId":"Alvinlj00"},"content":"                    + \"Format: add -t n/TITLE d/dd-MM-yyyy HHmm\");","lastModifiedDate":"2021-11-04"},{"lineNumber":139,"author":{"gitId":"Alvinlj00"},"content":"        } catch (AttributeNotFoundException e) {","lastModifiedDate":"2021-11-04"},{"lineNumber":140,"author":{"gitId":"Alvinlj00"},"content":"            String attributeType \u003d ItemAttribute.getAttributeName(e.getItemAttribute());","lastModifiedDate":"2021-11-04"},{"lineNumber":141,"author":{"gitId":"Alvinlj00"},"content":"            String attributeFlag \u003d ItemAttribute.getItemFlag(e.getItemAttribute());","lastModifiedDate":"2021-11-04"},{"lineNumber":142,"author":{"gitId":"Alvinlj00"},"content":"            throw new DukeException(\"Please add a \" + attributeType + \"for your task using \"","lastModifiedDate":"2021-11-04"},{"lineNumber":143,"author":{"gitId":"Alvinlj00"},"content":"                    + attributeFlag + attributeType.toUpperCase());","lastModifiedDate":"2021-11-04"},{"lineNumber":144,"author":{"gitId":"Alvinlj00"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":145,"author":{"gitId":"crabnuggets"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":146,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":147,"author":{"gitId":"Alvinlj00"},"content":"    private static String[] parseAddMembers(String commandDetails) throws DukeException {","lastModifiedDate":"2021-11-04"},{"lineNumber":148,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":149,"author":{"gitId":"Alvinlj00"},"content":"        try {","lastModifiedDate":"2021-11-04"},{"lineNumber":150,"author":{"gitId":"Alvinlj00"},"content":"            String[] memberNames \u003d commandDetails.split(\" +\", 2);","lastModifiedDate":"2021-11-04"},{"lineNumber":151,"author":{"gitId":"Alvinlj00"},"content":"            String[] parsedAttributes \u003d memberNames[1].split(\", +\");","lastModifiedDate":"2021-11-04"},{"lineNumber":152,"author":{"gitId":"Alvinlj00"},"content":"            for (int i \u003d 0; i \u003c parsedAttributes.length; i++) {","lastModifiedDate":"2021-11-04"},{"lineNumber":153,"author":{"gitId":"Alvinlj00"},"content":"                parsedAttributes[i] \u003d parsedAttributes[i].toUpperCase();","lastModifiedDate":"2021-11-04"},{"lineNumber":154,"author":{"gitId":"Alvinlj00"},"content":"                if (!isValidName(parsedAttributes[i])) {","lastModifiedDate":"2021-11-04"},{"lineNumber":155,"author":{"gitId":"Alvinlj00"},"content":"                    throw new DukeException(\"One or more of the member names are not valid. \"","lastModifiedDate":"2021-11-04"},{"lineNumber":156,"author":{"gitId":"Alvinlj00"},"content":"                            + \"Please separate the names with \u0027, \u0027. \");","lastModifiedDate":"2021-11-04"},{"lineNumber":157,"author":{"gitId":"Alvinlj00"},"content":"                }","lastModifiedDate":"2021-11-04"},{"lineNumber":158,"author":{"gitId":"Alvinlj00"},"content":"            }","lastModifiedDate":"2021-11-04"},{"lineNumber":159,"author":{"gitId":"Alvinlj00"},"content":"            return parsedAttributes;","lastModifiedDate":"2021-11-04"},{"lineNumber":160,"author":{"gitId":"Alvinlj00"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-11-04"},{"lineNumber":161,"author":{"gitId":"Alvinlj00"},"content":"            throw new DukeException(\"Member name cannot be empty. \");","lastModifiedDate":"2021-11-04"},{"lineNumber":162,"author":{"gitId":"Alvinlj00"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":163,"author":{"gitId":"crabnuggets"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":164,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":165,"author":{"gitId":"Alvinlj00"},"content":"    private static int getEventForTask() {","lastModifiedDate":"2021-11-04"},{"lineNumber":166,"author":{"gitId":"Alvinlj00"},"content":"        Ui.promptForEventIndex();","lastModifiedDate":"2021-11-04"},{"lineNumber":167,"author":{"gitId":"Alvinlj00"},"content":"        int eventIndex \u003d -1;","lastModifiedDate":"2021-11-04"},{"lineNumber":168,"author":{"gitId":"Alvinlj00"},"content":"        boolean isCorrectEvent \u003d false;","lastModifiedDate":"2021-11-04"},{"lineNumber":169,"author":{"gitId":"Alvinlj00"},"content":"        while (!isCorrectEvent) {","lastModifiedDate":"2021-11-04"},{"lineNumber":170,"author":{"gitId":"Alvinlj00"},"content":"            try {","lastModifiedDate":"2021-11-04"},{"lineNumber":171,"author":{"gitId":"Alvinlj00"},"content":"                assert !Duke.eventCatalog.isEmpty() : \"The event catalog should not be empty\";","lastModifiedDate":"2021-11-04"},{"lineNumber":172,"author":{"gitId":"Alvinlj00"},"content":"                Ui.printEventCatalog();","lastModifiedDate":"2021-11-04"},{"lineNumber":173,"author":{"gitId":"Alvinlj00"},"content":"                Ui.printLineBreak();","lastModifiedDate":"2021-11-04"},{"lineNumber":174,"author":{"gitId":"Alvinlj00"},"content":"                eventIndex \u003d Integer.parseInt(Ui.readInput()) - 1;","lastModifiedDate":"2021-11-04"},{"lineNumber":175,"author":{"gitId":"Alvinlj00"},"content":"                Event event \u003d Duke.eventCatalog.get(eventIndex);","lastModifiedDate":"2021-11-04"},{"lineNumber":176,"author":{"gitId":"Alvinlj00"},"content":"                assert event !\u003d null : \"Event does not exist\";","lastModifiedDate":"2021-11-04"},{"lineNumber":177,"author":{"gitId":"Alvinlj00"},"content":"                isCorrectEvent \u003d true;","lastModifiedDate":"2021-11-04"},{"lineNumber":178,"author":{"gitId":"Alvinlj00"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2021-11-04"},{"lineNumber":179,"author":{"gitId":"Alvinlj00"},"content":"                System.out.println(\"Please enter the number corresponding to the event \"","lastModifiedDate":"2021-11-04"},{"lineNumber":180,"author":{"gitId":"Alvinlj00"},"content":"                        + \"you want to add to. \");","lastModifiedDate":"2021-11-04"},{"lineNumber":181,"author":{"gitId":"Alvinlj00"},"content":"                Ui.printLineBreak();","lastModifiedDate":"2021-11-04"},{"lineNumber":182,"author":{"gitId":"Alvinlj00"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-11-04"},{"lineNumber":183,"author":{"gitId":"Alvinlj00"},"content":"                System.out.println(\"No such event. Please enter a valid event for your task. \");","lastModifiedDate":"2021-11-04"},{"lineNumber":184,"author":{"gitId":"Alvinlj00"},"content":"                Ui.printLineBreak();","lastModifiedDate":"2021-11-04"},{"lineNumber":185,"author":{"gitId":"Alvinlj00"},"content":"            }","lastModifiedDate":"2021-11-04"},{"lineNumber":186,"author":{"gitId":"Alvinlj00"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":187,"author":{"gitId":"Alvinlj00"},"content":"        assert eventIndex \u003e\u003d 0 : \"Event index should be valid\";","lastModifiedDate":"2021-11-04"},{"lineNumber":188,"author":{"gitId":"Alvinlj00"},"content":"        return eventIndex;","lastModifiedDate":"2021-11-04"},{"lineNumber":189,"author":{"gitId":"Alvinlj00"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":190,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":191,"author":{"gitId":"Alvinlj00"},"content":"    private static int[] getMembersForTask() {","lastModifiedDate":"2021-11-04"},{"lineNumber":192,"author":{"gitId":"Alvinlj00"},"content":"        Ui.promptForMemberIndex();","lastModifiedDate":"2021-11-04"},{"lineNumber":193,"author":{"gitId":"Alvinlj00"},"content":"        int[] memberIndexes \u003d null;","lastModifiedDate":"2021-11-04"},{"lineNumber":194,"author":{"gitId":"Alvinlj00"},"content":"        boolean isCorrectMember \u003d false;","lastModifiedDate":"2021-11-04"},{"lineNumber":195,"author":{"gitId":"Alvinlj00"},"content":"        while (!isCorrectMember) {","lastModifiedDate":"2021-11-04"},{"lineNumber":196,"author":{"gitId":"Alvinlj00"},"content":"            try {","lastModifiedDate":"2021-11-04"},{"lineNumber":197,"author":{"gitId":"Alvinlj00"},"content":"                assert !Duke.memberRoster.isEmpty() : \"The member roster should not be empty\";","lastModifiedDate":"2021-11-04"},{"lineNumber":198,"author":{"gitId":"Alvinlj00"},"content":"                Ui.printMemberRoster();","lastModifiedDate":"2021-11-04"},{"lineNumber":199,"author":{"gitId":"Alvinlj00"},"content":"                Ui.printLineBreak();","lastModifiedDate":"2021-11-04"},{"lineNumber":200,"author":{"gitId":"Alvinlj00"},"content":"                memberIndexes \u003d extractInt(Ui.readInput());","lastModifiedDate":"2021-11-04"},{"lineNumber":201,"author":{"gitId":"Alvinlj00"},"content":"                for (int index : memberIndexes) {","lastModifiedDate":"2021-11-04"},{"lineNumber":202,"author":{"gitId":"Alvinlj00"},"content":"                    Member member \u003d Duke.memberRoster.get(index);","lastModifiedDate":"2021-11-04"},{"lineNumber":203,"author":{"gitId":"Alvinlj00"},"content":"                    assert member !\u003d null : \"Member does not exist\";","lastModifiedDate":"2021-11-04"},{"lineNumber":204,"author":{"gitId":"Alvinlj00"},"content":"                }","lastModifiedDate":"2021-11-04"},{"lineNumber":205,"author":{"gitId":"Alvinlj00"},"content":"                isCorrectMember \u003d true;","lastModifiedDate":"2021-11-04"},{"lineNumber":206,"author":{"gitId":"Alvinlj00"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-11-04"},{"lineNumber":207,"author":{"gitId":"Alvinlj00"},"content":"                System.out.println(\"One or more of these members do not exist. Please enter the \"","lastModifiedDate":"2021-11-04"},{"lineNumber":208,"author":{"gitId":"Alvinlj00"},"content":"                        + \"index(es) corresponding to the correct member(s). \");","lastModifiedDate":"2021-11-04"},{"lineNumber":209,"author":{"gitId":"Alvinlj00"},"content":"                Ui.printLineBreak();","lastModifiedDate":"2021-11-04"},{"lineNumber":210,"author":{"gitId":"Alvinlj00"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2021-11-04"},{"lineNumber":211,"author":{"gitId":"Alvinlj00"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2021-11-04"},{"lineNumber":212,"author":{"gitId":"Alvinlj00"},"content":"                Ui.printLineBreak();","lastModifiedDate":"2021-11-04"},{"lineNumber":213,"author":{"gitId":"Alvinlj00"},"content":"            }","lastModifiedDate":"2021-11-04"},{"lineNumber":214,"author":{"gitId":"Alvinlj00"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":215,"author":{"gitId":"Alvinlj00"},"content":"        return memberIndexes;","lastModifiedDate":"2021-11-04"},{"lineNumber":216,"author":{"gitId":"Alvinlj00"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":217,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":218,"author":{"gitId":"Alvinlj00"},"content":"    public static boolean isValidName(String input) {","lastModifiedDate":"2021-11-04"},{"lineNumber":219,"author":{"gitId":"Alvinlj00"},"content":"        return ((!input.equals(\"\")) \u0026\u0026 (input.matches(\"^[A-Z. -]*$\")));","lastModifiedDate":"2021-11-04"},{"lineNumber":220,"author":{"gitId":"Alvinlj00"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":221,"author":{"gitId":"crabnuggets"},"content":"}","lastModifiedDate":"2021-10-31"}],"authorContributionMap":{"Alvinlj00":132,"crabnuggets":89}},{"path":"src/main/java/seedu/duke/parser/commandparser/DeleteParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"crabnuggets"},"content":"package seedu.duke.parser.commandparser;","lastModifiedDate":"2021-10-31"},{"lineNumber":2,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":3,"author":{"gitId":"alwinangys"},"content":"import seedu.duke.Duke;","lastModifiedDate":"2021-11-07"},{"lineNumber":4,"author":{"gitId":"crabnuggets"},"content":"import seedu.duke.commands.Command;","lastModifiedDate":"2021-10-31"},{"lineNumber":5,"author":{"gitId":"alwinangys"},"content":"import seedu.duke.commands.DeleteCommand;","lastModifiedDate":"2021-11-07"},{"lineNumber":6,"author":{"gitId":"alwinangys"},"content":"import seedu.duke.exceptions.DukeException;","lastModifiedDate":"2021-11-07"},{"lineNumber":7,"author":{"gitId":"alwinangys"},"content":"import seedu.duke.exceptions.parserexceptions.InvalidIndexException;","lastModifiedDate":"2021-11-07"},{"lineNumber":8,"author":{"gitId":"alwinangys"},"content":"import seedu.duke.exceptions.parserexceptions.InvalidItemTypeException;","lastModifiedDate":"2021-11-07"},{"lineNumber":9,"author":{"gitId":"alwinangys"},"content":"import seedu.duke.items.characteristics.Member;","lastModifiedDate":"2021-11-07"},{"lineNumber":10,"author":{"gitId":"alwinangys"},"content":"import seedu.duke.parser.ItemType;","lastModifiedDate":"2021-11-07"},{"lineNumber":11,"author":{"gitId":"crabnuggets"},"content":"import seedu.duke.parser.Parser;","lastModifiedDate":"2021-10-31"},{"lineNumber":12,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":13,"author":{"gitId":"alwinangys"},"content":"import static seedu.duke.Duke.eventCatalog;","lastModifiedDate":"2021-11-07"},{"lineNumber":14,"author":{"gitId":"alwinangys"},"content":"import static seedu.duke.parser.ItemType.EVENT;","lastModifiedDate":"2021-11-08"},{"lineNumber":15,"author":{"gitId":"alwinangys"},"content":"import static seedu.duke.parser.ItemType.TASK;","lastModifiedDate":"2021-11-08"},{"lineNumber":16,"author":{"gitId":"alwinangys"},"content":"import static seedu.duke.parser.ItemType.MEMBER;","lastModifiedDate":"2021-11-08"},{"lineNumber":17,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":18,"author":{"gitId":"crabnuggets"},"content":"public abstract class DeleteParser extends Parser {","lastModifiedDate":"2021-10-31"},{"lineNumber":19,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":20,"author":{"gitId":"alwinangys"},"content":"    private static int eventIndexToDelete;","lastModifiedDate":"2021-11-07"},{"lineNumber":21,"author":{"gitId":"alwinangys"},"content":"    private static int taskIndexToDelete;","lastModifiedDate":"2021-11-07"},{"lineNumber":22,"author":{"gitId":"alwinangys"},"content":"    private static int memberIndexToDelete;","lastModifiedDate":"2021-11-07"},{"lineNumber":23,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":24,"author":{"gitId":"alwinangys"},"content":"    public static Command getDeleteCommand(String[] command, String commandDetails) {","lastModifiedDate":"2021-11-07"},{"lineNumber":25,"author":{"gitId":"alwinangys"},"content":"        try {","lastModifiedDate":"2021-11-07"},{"lineNumber":26,"author":{"gitId":"alwinangys"},"content":"            if (isDeleteAll(command)) {","lastModifiedDate":"2021-11-08"},{"lineNumber":27,"author":{"gitId":"alwinangys"},"content":"                return new DeleteCommand();","lastModifiedDate":"2021-11-08"},{"lineNumber":28,"author":{"gitId":"alwinangys"},"content":"            }","lastModifiedDate":"2021-11-08"},{"lineNumber":29,"author":{"gitId":"alwinangys"},"content":"            ItemType itemType \u003d getItemType(commandDetails);","lastModifiedDate":"2021-11-07"},{"lineNumber":30,"author":{"gitId":"alwinangys"},"content":"            switch (itemType) {","lastModifiedDate":"2021-11-07"},{"lineNumber":31,"author":{"gitId":"alwinangys"},"content":"            case EVENT:","lastModifiedDate":"2021-11-07"},{"lineNumber":32,"author":{"gitId":"alwinangys"},"content":"                parseEvent(command);","lastModifiedDate":"2021-11-07"},{"lineNumber":33,"author":{"gitId":"alwinangys"},"content":"                return new DeleteCommand(EVENT, eventIndexToDelete);","lastModifiedDate":"2021-11-07"},{"lineNumber":34,"author":{"gitId":"alwinangys"},"content":"            case TASK:","lastModifiedDate":"2021-11-07"},{"lineNumber":35,"author":{"gitId":"alwinangys"},"content":"                parseTask(command);","lastModifiedDate":"2021-11-07"},{"lineNumber":36,"author":{"gitId":"alwinangys"},"content":"                return new DeleteCommand(TASK, taskIndexToDelete);","lastModifiedDate":"2021-11-07"},{"lineNumber":37,"author":{"gitId":"alwinangys"},"content":"            case MEMBER:","lastModifiedDate":"2021-11-07"},{"lineNumber":38,"author":{"gitId":"alwinangys"},"content":"                parseMember(command);","lastModifiedDate":"2021-11-07"},{"lineNumber":39,"author":{"gitId":"alwinangys"},"content":"                return new DeleteCommand(MEMBER, memberIndexToDelete);","lastModifiedDate":"2021-11-07"},{"lineNumber":40,"author":{"gitId":"alwinangys"},"content":"            default:","lastModifiedDate":"2021-11-07"},{"lineNumber":41,"author":{"gitId":"alwinangys"},"content":"                throw new InvalidItemTypeException();","lastModifiedDate":"2021-11-07"},{"lineNumber":42,"author":{"gitId":"alwinangys"},"content":"            }","lastModifiedDate":"2021-11-07"},{"lineNumber":43,"author":{"gitId":"alwinangys"},"content":"        } catch (InvalidItemTypeException e) {","lastModifiedDate":"2021-11-07"},{"lineNumber":44,"author":{"gitId":"alwinangys"},"content":"            System.out.println(\"Please indicate a flag:\\n\" + \"-e for Event\\n\" + \"-t for Task\\n\"","lastModifiedDate":"2021-11-07"},{"lineNumber":45,"author":{"gitId":"alwinangys"},"content":"                    + \"-m for Member\");","lastModifiedDate":"2021-11-07"},{"lineNumber":46,"author":{"gitId":"alwinangys"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-11-07"},{"lineNumber":47,"author":{"gitId":"alwinangys"},"content":"            System.out.println(\"Please enter a number for the item index!\");","lastModifiedDate":"2021-11-07"},{"lineNumber":48,"author":{"gitId":"alwinangys"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-11-07"},{"lineNumber":49,"author":{"gitId":"alwinangys"},"content":"            System.out.println(\"Please select an index!\");","lastModifiedDate":"2021-11-07"},{"lineNumber":50,"author":{"gitId":"alwinangys"},"content":"        } catch (DukeException | InvalidIndexException e) {","lastModifiedDate":"2021-11-07"},{"lineNumber":51,"author":{"gitId":"alwinangys"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2021-11-07"},{"lineNumber":52,"author":{"gitId":"alwinangys"},"content":"        }","lastModifiedDate":"2021-11-07"},{"lineNumber":53,"author":{"gitId":"crabnuggets"},"content":"        return null;","lastModifiedDate":"2021-10-31"},{"lineNumber":54,"author":{"gitId":"crabnuggets"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":55,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":56,"author":{"gitId":"alwinangys"},"content":"    private static void parseEvent(String[] command) throws InvalidIndexException {","lastModifiedDate":"2021-11-07"},{"lineNumber":57,"author":{"gitId":"alwinangys"},"content":"        int eventIndex \u003d getIndexFromCommand(command[2]);","lastModifiedDate":"2021-11-07"},{"lineNumber":58,"author":{"gitId":"alwinangys"},"content":"        if (!isValidEventIndex(eventIndex)) {","lastModifiedDate":"2021-11-07"},{"lineNumber":59,"author":{"gitId":"alwinangys"},"content":"            if (eventCatalog.isEmpty()) {","lastModifiedDate":"2021-11-07"},{"lineNumber":60,"author":{"gitId":"alwinangys"},"content":"                throw new InvalidIndexException(\"There are no events to delete.\");","lastModifiedDate":"2021-11-07"},{"lineNumber":61,"author":{"gitId":"alwinangys"},"content":"            }","lastModifiedDate":"2021-11-07"},{"lineNumber":62,"author":{"gitId":"alwinangys"},"content":"            throw new InvalidIndexException(\"Invalid index range. Choose a number between 1 and \"","lastModifiedDate":"2021-11-07"},{"lineNumber":63,"author":{"gitId":"alwinangys"},"content":"                    + eventCatalog.size() + \".\");","lastModifiedDate":"2021-11-07"},{"lineNumber":64,"author":{"gitId":"alwinangys"},"content":"        }","lastModifiedDate":"2021-11-07"},{"lineNumber":65,"author":{"gitId":"alwinangys"},"content":"        eventIndexToDelete \u003d eventIndex;","lastModifiedDate":"2021-11-07"},{"lineNumber":66,"author":{"gitId":"alwinangys"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":67,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":68,"author":{"gitId":"alwinangys"},"content":"    private static void parseTask(String[] command) throws InvalidIndexException {","lastModifiedDate":"2021-11-07"},{"lineNumber":69,"author":{"gitId":"alwinangys"},"content":"        int taskIndex \u003d getIndexFromCommand(command[2]);","lastModifiedDate":"2021-11-07"},{"lineNumber":70,"author":{"gitId":"alwinangys"},"content":"        int lastEventIndex \u003d Parser.getIndexOfLastSelectedEvent();","lastModifiedDate":"2021-11-07"},{"lineNumber":71,"author":{"gitId":"alwinangys"},"content":"        if (!isValidTaskIndex(lastEventIndex, taskIndex)) {","lastModifiedDate":"2021-11-07"},{"lineNumber":72,"author":{"gitId":"alwinangys"},"content":"            if (eventCatalog.get(lastEventIndex).getTaskList().isEmpty()) {","lastModifiedDate":"2021-11-07"},{"lineNumber":73,"author":{"gitId":"alwinangys"},"content":"                throw new InvalidIndexException(\"There are no tasks to delete.\");","lastModifiedDate":"2021-11-07"},{"lineNumber":74,"author":{"gitId":"alwinangys"},"content":"            }","lastModifiedDate":"2021-11-07"},{"lineNumber":75,"author":{"gitId":"alwinangys"},"content":"            throw new InvalidIndexException(\"Invalid index range. Choose a number between 1 to \"","lastModifiedDate":"2021-11-07"},{"lineNumber":76,"author":{"gitId":"alwinangys"},"content":"                    + eventCatalog.get(lastEventIndex).getTaskList().size() + \".\");","lastModifiedDate":"2021-11-07"},{"lineNumber":77,"author":{"gitId":"alwinangys"},"content":"        }","lastModifiedDate":"2021-11-07"},{"lineNumber":78,"author":{"gitId":"alwinangys"},"content":"        taskIndexToDelete \u003d taskIndex;","lastModifiedDate":"2021-11-07"},{"lineNumber":79,"author":{"gitId":"alwinangys"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":80,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":81,"author":{"gitId":"alwinangys"},"content":"    private static void parseMember(String[] command) throws DukeException {","lastModifiedDate":"2021-11-07"},{"lineNumber":82,"author":{"gitId":"alwinangys"},"content":"        String memberName \u003d getMemberNameFromCommand(command);","lastModifiedDate":"2021-11-07"},{"lineNumber":83,"author":{"gitId":"alwinangys"},"content":"        memberIndexToDelete \u003d getMemberIndexFromQuery(memberName);","lastModifiedDate":"2021-11-07"},{"lineNumber":84,"author":{"gitId":"alwinangys"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":85,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":86,"author":{"gitId":"alwinangys"},"content":"    private static int getIndexFromCommand(String indexAsString) {","lastModifiedDate":"2021-11-07"},{"lineNumber":87,"author":{"gitId":"alwinangys"},"content":"        return Integer.parseInt(indexAsString.trim()) - 1;","lastModifiedDate":"2021-11-07"},{"lineNumber":88,"author":{"gitId":"alwinangys"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":89,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":90,"author":{"gitId":"alwinangys"},"content":"    private static boolean isValidEventIndex(int eventIndex) {","lastModifiedDate":"2021-11-07"},{"lineNumber":91,"author":{"gitId":"alwinangys"},"content":"        return eventIndex \u003e\u003d 0 \u0026\u0026 eventIndex \u003c Duke.eventCatalog.size();","lastModifiedDate":"2021-11-07"},{"lineNumber":92,"author":{"gitId":"alwinangys"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":93,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":94,"author":{"gitId":"alwinangys"},"content":"    private static boolean isValidTaskIndex(int eventIndex, int taskIndex) {","lastModifiedDate":"2021-11-07"},{"lineNumber":95,"author":{"gitId":"alwinangys"},"content":"        return taskIndex \u003e\u003d 0 \u0026\u0026 taskIndex \u003c Duke.eventCatalog.get(eventIndex).getTaskList().size();","lastModifiedDate":"2021-11-07"},{"lineNumber":96,"author":{"gitId":"alwinangys"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":97,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":98,"author":{"gitId":"alwinangys"},"content":"    private static String getMemberNameFromCommand(String[] command) throws DukeException {","lastModifiedDate":"2021-11-07"},{"lineNumber":99,"author":{"gitId":"alwinangys"},"content":"        if (command.length \u003c 3) {","lastModifiedDate":"2021-11-07"},{"lineNumber":100,"author":{"gitId":"alwinangys"},"content":"            throw new DukeException(\"Please enter a name!\");","lastModifiedDate":"2021-11-07"},{"lineNumber":101,"author":{"gitId":"alwinangys"},"content":"        }","lastModifiedDate":"2021-11-07"},{"lineNumber":102,"author":{"gitId":"alwinangys"},"content":"        StringBuilder memberNameQuery \u003d new StringBuilder();","lastModifiedDate":"2021-11-07"},{"lineNumber":103,"author":{"gitId":"alwinangys"},"content":"        for (int i \u003d 2; i \u003c command.length; i++) {","lastModifiedDate":"2021-11-07"},{"lineNumber":104,"author":{"gitId":"alwinangys"},"content":"            memberNameQuery.append(command[i].trim());","lastModifiedDate":"2021-11-07"},{"lineNumber":105,"author":{"gitId":"alwinangys"},"content":"            memberNameQuery.append(\" \");","lastModifiedDate":"2021-11-07"},{"lineNumber":106,"author":{"gitId":"alwinangys"},"content":"        }","lastModifiedDate":"2021-11-07"},{"lineNumber":107,"author":{"gitId":"alwinangys"},"content":"        return memberNameQuery.toString().trim();","lastModifiedDate":"2021-11-07"},{"lineNumber":108,"author":{"gitId":"alwinangys"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":109,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":110,"author":{"gitId":"alwinangys"},"content":"    private static int getMemberIndexFromQuery(String memberName) throws DukeException {","lastModifiedDate":"2021-11-07"},{"lineNumber":111,"author":{"gitId":"alwinangys"},"content":"        for (int i \u003d 0; i \u003c Duke.memberRoster.size(); i++) {","lastModifiedDate":"2021-11-07"},{"lineNumber":112,"author":{"gitId":"alwinangys"},"content":"            Member member \u003d Duke.memberRoster.get(i);","lastModifiedDate":"2021-11-07"},{"lineNumber":113,"author":{"gitId":"alwinangys"},"content":"            if (member.getName().equalsIgnoreCase(memberName)) {","lastModifiedDate":"2021-11-07"},{"lineNumber":114,"author":{"gitId":"alwinangys"},"content":"                return i;","lastModifiedDate":"2021-11-07"},{"lineNumber":115,"author":{"gitId":"alwinangys"},"content":"            }","lastModifiedDate":"2021-11-07"},{"lineNumber":116,"author":{"gitId":"alwinangys"},"content":"        }","lastModifiedDate":"2021-11-07"},{"lineNumber":117,"author":{"gitId":"alwinangys"},"content":"        throw new DukeException(\"No matching names found!\");","lastModifiedDate":"2021-11-07"},{"lineNumber":118,"author":{"gitId":"alwinangys"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":119,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":120,"author":{"gitId":"alwinangys"},"content":"    private static boolean isDeleteAll(String[] command) {","lastModifiedDate":"2021-11-08"},{"lineNumber":121,"author":{"gitId":"alwinangys"},"content":"        if (command.length \u003d\u003d 2) {","lastModifiedDate":"2021-11-07"},{"lineNumber":122,"author":{"gitId":"alwinangys"},"content":"            return (command[1].trim().equalsIgnoreCase(\"all\"));","lastModifiedDate":"2021-11-07"},{"lineNumber":123,"author":{"gitId":"alwinangys"},"content":"        }","lastModifiedDate":"2021-11-07"},{"lineNumber":124,"author":{"gitId":"alwinangys"},"content":"        return false;","lastModifiedDate":"2021-11-07"},{"lineNumber":125,"author":{"gitId":"alwinangys"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":126,"author":{"gitId":"crabnuggets"},"content":"}","lastModifiedDate":"2021-10-31"}],"authorContributionMap":{"crabnuggets":10,"alwinangys":116}},{"path":"src/main/java/seedu/duke/parser/commandparser/DoneUndoParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Alvinlj00"},"content":"package seedu.duke.parser.commandparser;","lastModifiedDate":"2021-11-07"},{"lineNumber":2,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":3,"author":{"gitId":"Alvinlj00"},"content":"import seedu.duke.Duke;","lastModifiedDate":"2021-11-07"},{"lineNumber":4,"author":{"gitId":"Alvinlj00"},"content":"import seedu.duke.commands.Command;","lastModifiedDate":"2021-11-07"},{"lineNumber":5,"author":{"gitId":"Alvinlj00"},"content":"import seedu.duke.commands.DoneUndoCommand;","lastModifiedDate":"2021-11-07"},{"lineNumber":6,"author":{"gitId":"Alvinlj00"},"content":"import seedu.duke.exceptions.DukeException;","lastModifiedDate":"2021-11-07"},{"lineNumber":7,"author":{"gitId":"Alvinlj00"},"content":"import seedu.duke.exceptions.parserexceptions.InvalidIndexException;","lastModifiedDate":"2021-11-07"},{"lineNumber":8,"author":{"gitId":"Alvinlj00"},"content":"import seedu.duke.exceptions.parserexceptions.InvalidItemTypeException;","lastModifiedDate":"2021-11-07"},{"lineNumber":9,"author":{"gitId":"Alvinlj00"},"content":"import seedu.duke.parser.ItemType;","lastModifiedDate":"2021-11-07"},{"lineNumber":10,"author":{"gitId":"Alvinlj00"},"content":"import seedu.duke.parser.Parser;","lastModifiedDate":"2021-11-07"},{"lineNumber":11,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":12,"author":{"gitId":"Alvinlj00"},"content":"public abstract class DoneUndoParser extends Parser {","lastModifiedDate":"2021-11-07"},{"lineNumber":13,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":14,"author":{"gitId":"Alvinlj00"},"content":"    private static final String DONE \u003d \"done\";","lastModifiedDate":"2021-11-07"},{"lineNumber":15,"author":{"gitId":"Alvinlj00"},"content":"    private static final String UNDO \u003d \"undo\";","lastModifiedDate":"2021-11-07"},{"lineNumber":16,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":17,"author":{"gitId":"Alvinlj00"},"content":"    public static Command getDoneUndoCommand(String[] command, String commandDetails) {","lastModifiedDate":"2021-11-07"},{"lineNumber":18,"author":{"gitId":"Alvinlj00"},"content":"        String action \u003d command[0];","lastModifiedDate":"2021-11-07"},{"lineNumber":19,"author":{"gitId":"Alvinlj00"},"content":"        assert action.equals(DONE) || action.equals(UNDO) : \"Invalid action for command\";","lastModifiedDate":"2021-11-07"},{"lineNumber":20,"author":{"gitId":"Alvinlj00"},"content":"        try {","lastModifiedDate":"2021-11-07"},{"lineNumber":21,"author":{"gitId":"Alvinlj00"},"content":"            if (command.length \u003d\u003d 2) {","lastModifiedDate":"2021-11-07"},{"lineNumber":22,"author":{"gitId":"Alvinlj00"},"content":"                throw new DukeException(\"Please add the index(es) of the item(s) you want to \"","lastModifiedDate":"2021-11-07"},{"lineNumber":23,"author":{"gitId":"Alvinlj00"},"content":"                        + (action.equals(DONE) ? \"mark as done\" : \"undo\") + \". \");","lastModifiedDate":"2021-11-07"},{"lineNumber":24,"author":{"gitId":"Alvinlj00"},"content":"            }","lastModifiedDate":"2021-11-07"},{"lineNumber":25,"author":{"gitId":"Alvinlj00"},"content":"            ItemType itemType \u003d getItemType(commandDetails);","lastModifiedDate":"2021-11-07"},{"lineNumber":26,"author":{"gitId":"Alvinlj00"},"content":"            int[] indexes \u003d getIndexes(commandDetails);","lastModifiedDate":"2021-11-07"},{"lineNumber":27,"author":{"gitId":"Alvinlj00"},"content":"            checkForValidIndexes(itemType, indexes);","lastModifiedDate":"2021-11-07"},{"lineNumber":28,"author":{"gitId":"Alvinlj00"},"content":"            switch (itemType) {","lastModifiedDate":"2021-11-07"},{"lineNumber":29,"author":{"gitId":"Alvinlj00"},"content":"            case EVENT:","lastModifiedDate":"2021-11-07"},{"lineNumber":30,"author":{"gitId":"Alvinlj00"},"content":"            case TASK:","lastModifiedDate":"2021-11-07"},{"lineNumber":31,"author":{"gitId":"Alvinlj00"},"content":"                return new DoneUndoCommand(action, itemType, indexes);","lastModifiedDate":"2021-11-07"},{"lineNumber":32,"author":{"gitId":"Alvinlj00"},"content":"            default:","lastModifiedDate":"2021-11-07"},{"lineNumber":33,"author":{"gitId":"Alvinlj00"},"content":"                throw new InvalidItemTypeException();","lastModifiedDate":"2021-11-07"},{"lineNumber":34,"author":{"gitId":"Alvinlj00"},"content":"            }","lastModifiedDate":"2021-11-07"},{"lineNumber":35,"author":{"gitId":"Alvinlj00"},"content":"        } catch (InvalidItemTypeException e) {","lastModifiedDate":"2021-11-07"},{"lineNumber":36,"author":{"gitId":"Alvinlj00"},"content":"            System.out.println(\"Having some trouble understanding what exactly you\u0027re trying to \"","lastModifiedDate":"2021-11-07"},{"lineNumber":37,"author":{"gitId":"Alvinlj00"},"content":"                    + (action.equals(DONE) ? \"mark as done\" : \"undo\") + \"!\\n\"","lastModifiedDate":"2021-11-07"},{"lineNumber":38,"author":{"gitId":"Alvinlj00"},"content":"                    + \"TIP: Specify event \u0027-e\u0027 or task \u0027-t\u0027 after the \u0027\"","lastModifiedDate":"2021-11-07"},{"lineNumber":39,"author":{"gitId":"Alvinlj00"},"content":"                    + (action.equals(DONE) ? \"done\" : \"undo\") + \"\u0027 command.\");","lastModifiedDate":"2021-11-07"},{"lineNumber":40,"author":{"gitId":"Alvinlj00"},"content":"        } catch (DukeException | InvalidIndexException e) {","lastModifiedDate":"2021-11-07"},{"lineNumber":41,"author":{"gitId":"Alvinlj00"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2021-11-07"},{"lineNumber":42,"author":{"gitId":"Alvinlj00"},"content":"        }","lastModifiedDate":"2021-11-07"},{"lineNumber":43,"author":{"gitId":"Alvinlj00"},"content":"        return null;","lastModifiedDate":"2021-11-07"},{"lineNumber":44,"author":{"gitId":"Alvinlj00"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":45,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":46,"author":{"gitId":"Alvinlj00"},"content":"    private static int[] getIndexes(String commandDetails) throws DukeException {","lastModifiedDate":"2021-11-07"},{"lineNumber":47,"author":{"gitId":"Alvinlj00"},"content":"        String indexesInString \u003d commandDetails.split(\" \", 2)[1];","lastModifiedDate":"2021-11-07"},{"lineNumber":48,"author":{"gitId":"Alvinlj00"},"content":"        return extractInt(indexesInString);","lastModifiedDate":"2021-11-07"},{"lineNumber":49,"author":{"gitId":"Alvinlj00"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":50,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":51,"author":{"gitId":"Alvinlj00"},"content":"    private static void checkForValidIndexes(ItemType itemType, int[] indexes)","lastModifiedDate":"2021-11-07"},{"lineNumber":52,"author":{"gitId":"Alvinlj00"},"content":"            throws DukeException, InvalidIndexException {","lastModifiedDate":"2021-11-07"},{"lineNumber":53,"author":{"gitId":"Alvinlj00"},"content":"        switch (itemType) {","lastModifiedDate":"2021-11-07"},{"lineNumber":54,"author":{"gitId":"Alvinlj00"},"content":"        case EVENT:","lastModifiedDate":"2021-11-07"},{"lineNumber":55,"author":{"gitId":"Alvinlj00"},"content":"            for (int index : indexes) {","lastModifiedDate":"2021-11-07"},{"lineNumber":56,"author":{"gitId":"Alvinlj00"},"content":"                if (!isValidEventIndex(index)) {","lastModifiedDate":"2021-11-07"},{"lineNumber":57,"author":{"gitId":"Alvinlj00"},"content":"                    throw new InvalidIndexException(\"One or more of these events do not exist. \");","lastModifiedDate":"2021-11-07"},{"lineNumber":58,"author":{"gitId":"Alvinlj00"},"content":"                }","lastModifiedDate":"2021-11-07"},{"lineNumber":59,"author":{"gitId":"Alvinlj00"},"content":"            }","lastModifiedDate":"2021-11-07"},{"lineNumber":60,"author":{"gitId":"Alvinlj00"},"content":"            break;","lastModifiedDate":"2021-11-07"},{"lineNumber":61,"author":{"gitId":"Alvinlj00"},"content":"        case TASK:","lastModifiedDate":"2021-11-07"},{"lineNumber":62,"author":{"gitId":"Alvinlj00"},"content":"            for (int index : indexes) {","lastModifiedDate":"2021-11-07"},{"lineNumber":63,"author":{"gitId":"Alvinlj00"},"content":"                if (!isValidTaskIndex(index)) {","lastModifiedDate":"2021-11-07"},{"lineNumber":64,"author":{"gitId":"Alvinlj00"},"content":"                    throw new InvalidIndexException(\"One or more of these tasks do not exist. \");","lastModifiedDate":"2021-11-07"},{"lineNumber":65,"author":{"gitId":"Alvinlj00"},"content":"                }","lastModifiedDate":"2021-11-07"},{"lineNumber":66,"author":{"gitId":"Alvinlj00"},"content":"            }","lastModifiedDate":"2021-11-07"},{"lineNumber":67,"author":{"gitId":"Alvinlj00"},"content":"            break;","lastModifiedDate":"2021-11-07"},{"lineNumber":68,"author":{"gitId":"Alvinlj00"},"content":"        default:","lastModifiedDate":"2021-11-07"},{"lineNumber":69,"author":{"gitId":"Alvinlj00"},"content":"            throw new DukeException(\"That\u0027s weird, the item is not an event or a task. \");","lastModifiedDate":"2021-11-07"},{"lineNumber":70,"author":{"gitId":"Alvinlj00"},"content":"        }","lastModifiedDate":"2021-11-07"},{"lineNumber":71,"author":{"gitId":"Alvinlj00"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":72,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":73,"author":{"gitId":"Alvinlj00"},"content":"    private static boolean isValidEventIndex(int eventIndex) {","lastModifiedDate":"2021-11-07"},{"lineNumber":74,"author":{"gitId":"Alvinlj00"},"content":"        return eventIndex \u003e\u003d 0 \u0026\u0026 eventIndex \u003c Duke.eventCatalog.size();","lastModifiedDate":"2021-11-07"},{"lineNumber":75,"author":{"gitId":"Alvinlj00"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":76,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":77,"author":{"gitId":"Alvinlj00"},"content":"    private static boolean isValidTaskIndex(int taskIndex) throws DukeException {","lastModifiedDate":"2021-11-07"},{"lineNumber":78,"author":{"gitId":"Alvinlj00"},"content":"        if (Parser.noEventSelected()) {","lastModifiedDate":"2021-11-07"},{"lineNumber":79,"author":{"gitId":"Alvinlj00"},"content":"            throw new DukeException(\"Please select which event the task is under using the \"","lastModifiedDate":"2021-11-07"},{"lineNumber":80,"author":{"gitId":"Alvinlj00"},"content":"                    + \"\u0027select\u0027 command. \");","lastModifiedDate":"2021-11-07"},{"lineNumber":81,"author":{"gitId":"Alvinlj00"},"content":"        }","lastModifiedDate":"2021-11-07"},{"lineNumber":82,"author":{"gitId":"Alvinlj00"},"content":"        int eventIndex \u003d getIndexOfLastSelectedEvent();","lastModifiedDate":"2021-11-07"},{"lineNumber":83,"author":{"gitId":"Alvinlj00"},"content":"        return taskIndex \u003e\u003d 0 \u0026\u0026 taskIndex \u003c Duke.eventCatalog.get(eventIndex).getTaskList().size();","lastModifiedDate":"2021-11-07"},{"lineNumber":84,"author":{"gitId":"Alvinlj00"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":85,"author":{"gitId":"Alvinlj00"},"content":"}","lastModifiedDate":"2021-11-07"}],"authorContributionMap":{"Alvinlj00":85}},{"path":"src/main/java/seedu/duke/parser/commandparser/FindParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"crabnuggets"},"content":"package seedu.duke.parser.commandparser;","lastModifiedDate":"2021-10-31"},{"lineNumber":2,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":3,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":4,"author":{"gitId":"crabnuggets"},"content":"import seedu.duke.commands.Command;","lastModifiedDate":"2021-10-31"},{"lineNumber":5,"author":{"gitId":"alwinangys"},"content":"import seedu.duke.commands.FindCommand;","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"alwinangys"},"content":"import seedu.duke.exceptions.DukeException;","lastModifiedDate":"2021-11-06"},{"lineNumber":7,"author":{"gitId":"alwinangys"},"content":"import seedu.duke.exceptions.parserexceptions.InvalidItemTypeException;","lastModifiedDate":"2021-11-06"},{"lineNumber":8,"author":{"gitId":"alwinangys"},"content":"import seedu.duke.parser.ItemType;","lastModifiedDate":"2021-11-06"},{"lineNumber":9,"author":{"gitId":"crabnuggets"},"content":"import seedu.duke.parser.Parser;","lastModifiedDate":"2021-10-31"},{"lineNumber":10,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":11,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":12,"author":{"gitId":"alwinangys"},"content":"import static seedu.duke.parser.ItemType.EVENT;","lastModifiedDate":"2021-11-06"},{"lineNumber":13,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":14,"author":{"gitId":"crabnuggets"},"content":"public abstract class FindParser extends Parser {","lastModifiedDate":"2021-10-31"},{"lineNumber":15,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":16,"author":{"gitId":"alwinangys"},"content":"    private static String keywords;","lastModifiedDate":"2021-11-07"},{"lineNumber":17,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":18,"author":{"gitId":"alwinangys"},"content":"    public static Command getFindCommand(String[] command, String commandDetails) {","lastModifiedDate":"2021-11-06"},{"lineNumber":19,"author":{"gitId":"alwinangys"},"content":"        try {","lastModifiedDate":"2021-11-06"},{"lineNumber":20,"author":{"gitId":"alwinangys"},"content":"            ItemType itemType \u003d getItemType(commandDetails);","lastModifiedDate":"2021-11-06"},{"lineNumber":21,"author":{"gitId":"alwinangys"},"content":"            if (itemType \u003d\u003d EVENT) {","lastModifiedDate":"2021-11-06"},{"lineNumber":22,"author":{"gitId":"alwinangys"},"content":"                parseFindKeyword(command);","lastModifiedDate":"2021-11-06"},{"lineNumber":23,"author":{"gitId":"alwinangys"},"content":"                return new FindCommand(keywords);","lastModifiedDate":"2021-11-07"},{"lineNumber":24,"author":{"gitId":"alwinangys"},"content":"            }","lastModifiedDate":"2021-11-06"},{"lineNumber":25,"author":{"gitId":"alwinangys"},"content":"            throw new InvalidItemTypeException();","lastModifiedDate":"2021-11-06"},{"lineNumber":26,"author":{"gitId":"alwinangys"},"content":"        } catch (InvalidItemTypeException e) {","lastModifiedDate":"2021-11-06"},{"lineNumber":27,"author":{"gitId":"alwinangys"},"content":"            System.out.println(\"Please add -e to find event(s)!\");","lastModifiedDate":"2021-11-06"},{"lineNumber":28,"author":{"gitId":"alwinangys"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-11-06"},{"lineNumber":29,"author":{"gitId":"alwinangys"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2021-11-06"},{"lineNumber":30,"author":{"gitId":"alwinangys"},"content":"        }","lastModifiedDate":"2021-11-06"},{"lineNumber":31,"author":{"gitId":"crabnuggets"},"content":"        return null;","lastModifiedDate":"2021-10-31"},{"lineNumber":32,"author":{"gitId":"crabnuggets"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":33,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":34,"author":{"gitId":"alwinangys"},"content":"    private static void parseFindKeyword(String[] command) throws DukeException {","lastModifiedDate":"2021-11-06"},{"lineNumber":35,"author":{"gitId":"alwinangys"},"content":"        keywords \u003d extractKeywords(command);","lastModifiedDate":"2021-11-07"},{"lineNumber":36,"author":{"gitId":"alwinangys"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":37,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":38,"author":{"gitId":"alwinangys"},"content":"    private static String extractKeywords(String[] command) throws DukeException {","lastModifiedDate":"2021-11-06"},{"lineNumber":39,"author":{"gitId":"alwinangys"},"content":"        if (command.length \u003c 3) {","lastModifiedDate":"2021-11-06"},{"lineNumber":40,"author":{"gitId":"alwinangys"},"content":"            throw new DukeException(\"Please specify what Events you wish to find!\");","lastModifiedDate":"2021-11-06"},{"lineNumber":41,"author":{"gitId":"alwinangys"},"content":"        }","lastModifiedDate":"2021-11-06"},{"lineNumber":42,"author":{"gitId":"alwinangys"},"content":"        StringBuilder keyword \u003d new StringBuilder();","lastModifiedDate":"2021-11-06"},{"lineNumber":43,"author":{"gitId":"alwinangys"},"content":"        for (int i \u003d 2; i \u003c command.length; i++) {","lastModifiedDate":"2021-11-06"},{"lineNumber":44,"author":{"gitId":"alwinangys"},"content":"            keyword.append(command[i].trim());","lastModifiedDate":"2021-11-06"},{"lineNumber":45,"author":{"gitId":"alwinangys"},"content":"            keyword.append(\" \");","lastModifiedDate":"2021-11-06"},{"lineNumber":46,"author":{"gitId":"alwinangys"},"content":"        }","lastModifiedDate":"2021-11-06"},{"lineNumber":47,"author":{"gitId":"alwinangys"},"content":"        return keyword.toString().trim();","lastModifiedDate":"2021-11-06"},{"lineNumber":48,"author":{"gitId":"alwinangys"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":49,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":50,"author":{"gitId":"crabnuggets"},"content":"}","lastModifiedDate":"2021-10-31"}],"authorContributionMap":{"crabnuggets":10,"alwinangys":40}},{"path":"src/main/java/seedu/duke/parser/commandparser/ListParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"crabnuggets"},"content":"package seedu.duke.parser.commandparser;","lastModifiedDate":"2021-10-31"},{"lineNumber":2,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":3,"author":{"gitId":"antrikshv"},"content":"import seedu.duke.Duke;","lastModifiedDate":"2021-11-02"},{"lineNumber":4,"author":{"gitId":"antrikshv"},"content":"import seedu.duke.Ui;","lastModifiedDate":"2021-11-02"},{"lineNumber":5,"author":{"gitId":"crabnuggets"},"content":"import seedu.duke.commands.Command;","lastModifiedDate":"2021-10-31"},{"lineNumber":6,"author":{"gitId":"antrikshv"},"content":"import seedu.duke.commands.CommandResult;","lastModifiedDate":"2021-11-02"},{"lineNumber":7,"author":{"gitId":"antrikshv"},"content":"import seedu.duke.commands.ListCommand;","lastModifiedDate":"2021-11-02"},{"lineNumber":8,"author":{"gitId":"antrikshv"},"content":"import seedu.duke.exceptions.DukeException;","lastModifiedDate":"2021-11-02"},{"lineNumber":9,"author":{"gitId":"antrikshv"},"content":"import seedu.duke.exceptions.parserexceptions.InvalidItemTypeException;","lastModifiedDate":"2021-11-02"},{"lineNumber":10,"author":{"gitId":"antrikshv"},"content":"import seedu.duke.exceptions.parserexceptions.NoCommandAttributesException;","lastModifiedDate":"2021-11-02"},{"lineNumber":11,"author":{"gitId":"antrikshv"},"content":"import seedu.duke.parser.ItemType;","lastModifiedDate":"2021-11-02"},{"lineNumber":12,"author":{"gitId":"crabnuggets"},"content":"import seedu.duke.parser.Parser;","lastModifiedDate":"2021-10-31"},{"lineNumber":13,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":14,"author":{"gitId":"crabnuggets"},"content":"public abstract class ListParser extends Parser {","lastModifiedDate":"2021-10-31"},{"lineNumber":15,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":16,"author":{"gitId":"antrikshv"},"content":"    public static Command getListCommand(String commandDetails, String response) {","lastModifiedDate":"2021-11-02"},{"lineNumber":17,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":18,"author":{"gitId":"antrikshv"},"content":"        try {","lastModifiedDate":"2021-11-02"},{"lineNumber":19,"author":{"gitId":"antrikshv"},"content":"            ItemType listType \u003d getItemType(commandDetails);","lastModifiedDate":"2021-11-02"},{"lineNumber":20,"author":{"gitId":"antrikshv"},"content":"            switch (listType) {","lastModifiedDate":"2021-11-02"},{"lineNumber":21,"author":{"gitId":"antrikshv"},"content":"            case EVENT:","lastModifiedDate":"2021-11-02"},{"lineNumber":22,"author":{"gitId":"antrikshv"},"content":"                return new ListCommand(\"event\", -1, -1);","lastModifiedDate":"2021-11-02"},{"lineNumber":23,"author":{"gitId":"antrikshv"},"content":"            case TASK:","lastModifiedDate":"2021-11-02"},{"lineNumber":24,"author":{"gitId":"antrikshv"},"content":"                return parseListTask(response);","lastModifiedDate":"2021-11-02"},{"lineNumber":25,"author":{"gitId":"antrikshv"},"content":"            case MEMBER:","lastModifiedDate":"2021-11-02"},{"lineNumber":26,"author":{"gitId":"antrikshv"},"content":"                return parseListMember(response);","lastModifiedDate":"2021-11-02"},{"lineNumber":27,"author":{"gitId":"antrikshv"},"content":"            default:","lastModifiedDate":"2021-11-02"},{"lineNumber":28,"author":{"gitId":"antrikshv"},"content":"                System.out.println(\"please specify type for list \"","lastModifiedDate":"2021-11-02"},{"lineNumber":29,"author":{"gitId":"antrikshv"},"content":"                        + System.lineSeparator()","lastModifiedDate":"2021-11-02"},{"lineNumber":30,"author":{"gitId":"antrikshv"},"content":"                        + \"list -e: to see overall events\"","lastModifiedDate":"2021-11-02"},{"lineNumber":31,"author":{"gitId":"antrikshv"},"content":"                        + System.lineSeparator()","lastModifiedDate":"2021-11-02"},{"lineNumber":32,"author":{"gitId":"antrikshv"},"content":"                        + \"list -t [EVENT_NUM]: to see tasks in an Event\"","lastModifiedDate":"2021-11-02"},{"lineNumber":33,"author":{"gitId":"antrikshv"},"content":"                        + System.lineSeparator()","lastModifiedDate":"2021-11-02"},{"lineNumber":34,"author":{"gitId":"antrikshv"},"content":"                        + \"list -m e/[Event Index] t/[Task Index] : to see members in a Task\"","lastModifiedDate":"2021-11-02"},{"lineNumber":35,"author":{"gitId":"antrikshv"},"content":"                        + System.lineSeparator()","lastModifiedDate":"2021-11-02"},{"lineNumber":36,"author":{"gitId":"antrikshv"},"content":"                        + \"list -m: to see overall member roster\");","lastModifiedDate":"2021-11-02"},{"lineNumber":37,"author":{"gitId":"antrikshv"},"content":"            }","lastModifiedDate":"2021-11-02"},{"lineNumber":38,"author":{"gitId":"antrikshv"},"content":"        } catch (NullPointerException | IndexOutOfBoundsException | NoCommandAttributesException e) {","lastModifiedDate":"2021-11-02"},{"lineNumber":39,"author":{"gitId":"antrikshv"},"content":"            System.out.println(\"Please check through the format carefully\");","lastModifiedDate":"2021-11-02"},{"lineNumber":40,"author":{"gitId":"antrikshv"},"content":"            Ui.listUsageCommands();","lastModifiedDate":"2021-11-02"},{"lineNumber":41,"author":{"gitId":"antrikshv"},"content":"        } catch (InvalidItemTypeException e) {","lastModifiedDate":"2021-11-02"},{"lineNumber":42,"author":{"gitId":"antrikshv"},"content":"            System.out.println(\"Please key in the correct list type value (-e, -t, -m)\");;","lastModifiedDate":"2021-11-02"},{"lineNumber":43,"author":{"gitId":"antrikshv"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-11-02"},{"lineNumber":44,"author":{"gitId":"antrikshv"},"content":"            System.out.println(\"Please key in an integer that exists for the selection\");;","lastModifiedDate":"2021-11-02"},{"lineNumber":45,"author":{"gitId":"antrikshv"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":46,"author":{"gitId":"crabnuggets"},"content":"        return null;","lastModifiedDate":"2021-10-31"},{"lineNumber":47,"author":{"gitId":"crabnuggets"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":48,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":49,"author":{"gitId":"antrikshv"},"content":"    private static Command parseListMember(String response) throws NoCommandAttributesException,","lastModifiedDate":"2021-11-02"},{"lineNumber":50,"author":{"gitId":"antrikshv"},"content":"            NumberFormatException {","lastModifiedDate":"2021-11-02"},{"lineNumber":51,"author":{"gitId":"antrikshv"},"content":"        if ((response.trim().split(\" +\")).length \u003d\u003d 2) {","lastModifiedDate":"2021-11-02"},{"lineNumber":52,"author":{"gitId":"antrikshv"},"content":"            return new ListCommand(\"memberRoster\", -1, -1);","lastModifiedDate":"2021-11-02"},{"lineNumber":53,"author":{"gitId":"antrikshv"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":54,"author":{"gitId":"antrikshv"},"content":"        String[] index \u003d response.trim().split(\" +\");","lastModifiedDate":"2021-11-02"},{"lineNumber":55,"author":{"gitId":"antrikshv"},"content":"        checkNoCommandAttributesException(index);","lastModifiedDate":"2021-11-02"},{"lineNumber":56,"author":{"gitId":"antrikshv"},"content":"        String[] taskStringIndex \u003d index[2].trim().split(\"/+\");","lastModifiedDate":"2021-11-02"},{"lineNumber":57,"author":{"gitId":"antrikshv"},"content":"        String[] eventStringIndex \u003d index[3].trim().split(\"/+\");","lastModifiedDate":"2021-11-02"},{"lineNumber":58,"author":{"gitId":"antrikshv"},"content":"        int eventIndex \u003d Integer.parseInt(taskStringIndex[1]) - 1;","lastModifiedDate":"2021-11-02"},{"lineNumber":59,"author":{"gitId":"antrikshv"},"content":"        if (eventIndex \u003e\u003d Duke.eventCatalog.size() || eventIndex \u003c 0) {","lastModifiedDate":"2021-11-07"},{"lineNumber":60,"author":{"gitId":"antrikshv"},"content":"            System.out.println(\"Event does not exist!\");","lastModifiedDate":"2021-11-02"},{"lineNumber":61,"author":{"gitId":"antrikshv"},"content":"            throw new NumberFormatException();","lastModifiedDate":"2021-11-02"},{"lineNumber":62,"author":{"gitId":"antrikshv"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":63,"author":{"gitId":"antrikshv"},"content":"        int taskIndex \u003d Integer.parseInt(eventStringIndex[1]) - 1;","lastModifiedDate":"2021-11-02"},{"lineNumber":64,"author":{"gitId":"antrikshv"},"content":"        if (taskIndex \u003e\u003d Duke.eventCatalog.get(eventIndex).getTaskList().size() || taskIndex \u003c 0) {","lastModifiedDate":"2021-11-07"},{"lineNumber":65,"author":{"gitId":"antrikshv"},"content":"            System.out.println(\"Task does not exist!\");","lastModifiedDate":"2021-11-02"},{"lineNumber":66,"author":{"gitId":"antrikshv"},"content":"            throw new NumberFormatException();","lastModifiedDate":"2021-11-02"},{"lineNumber":67,"author":{"gitId":"antrikshv"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":68,"author":{"gitId":"antrikshv"},"content":"        return new ListCommand(\"member\", eventIndex, taskIndex);","lastModifiedDate":"2021-11-02"},{"lineNumber":69,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":70,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":71,"author":{"gitId":"antrikshv"},"content":"    private static Command parseListTask(String response)","lastModifiedDate":"2021-11-02"},{"lineNumber":72,"author":{"gitId":"antrikshv"},"content":"            throws NoCommandAttributesException, NumberFormatException {","lastModifiedDate":"2021-11-02"},{"lineNumber":73,"author":{"gitId":"antrikshv"},"content":"        String[] index \u003d response.trim().split(\" +\");","lastModifiedDate":"2021-11-02"},{"lineNumber":74,"author":{"gitId":"antrikshv"},"content":"        checkNoCommandAttributesException(index);","lastModifiedDate":"2021-11-02"},{"lineNumber":75,"author":{"gitId":"antrikshv"},"content":"        int eventIndex \u003d Integer.parseInt(index[2]) - 1;","lastModifiedDate":"2021-11-02"},{"lineNumber":76,"author":{"gitId":"antrikshv"},"content":"        return new ListCommand(\"task\", eventIndex, -1);","lastModifiedDate":"2021-11-02"},{"lineNumber":77,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":78,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":79,"author":{"gitId":"antrikshv"},"content":"    private static void checkNoCommandAttributesException(String[] index) throws NoCommandAttributesException {","lastModifiedDate":"2021-11-02"},{"lineNumber":80,"author":{"gitId":"antrikshv"},"content":"        if (index.length \u003c 2) {","lastModifiedDate":"2021-11-02"},{"lineNumber":81,"author":{"gitId":"antrikshv"},"content":"            throw new NoCommandAttributesException();","lastModifiedDate":"2021-11-02"},{"lineNumber":82,"author":{"gitId":"antrikshv"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":83,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":84,"author":{"gitId":"crabnuggets"},"content":"}","lastModifiedDate":"2021-10-31"}],"authorContributionMap":{"antrikshv":74,"crabnuggets":10}},{"path":"src/main/java/seedu/duke/parser/commandparser/NextParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"antrikshv"},"content":"package seedu.duke.parser.commandparser;","lastModifiedDate":"2021-11-02"},{"lineNumber":2,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":3,"author":{"gitId":"antrikshv"},"content":"import seedu.duke.Duke;","lastModifiedDate":"2021-11-02"},{"lineNumber":4,"author":{"gitId":"antrikshv"},"content":"import seedu.duke.Ui;","lastModifiedDate":"2021-11-02"},{"lineNumber":5,"author":{"gitId":"antrikshv"},"content":"import seedu.duke.commands.Command;","lastModifiedDate":"2021-11-02"},{"lineNumber":6,"author":{"gitId":"antrikshv"},"content":"import seedu.duke.commands.NextCommand;","lastModifiedDate":"2021-11-02"},{"lineNumber":7,"author":{"gitId":"antrikshv"},"content":"import seedu.duke.exceptions.parserexceptions.InvalidItemTypeException;","lastModifiedDate":"2021-11-02"},{"lineNumber":8,"author":{"gitId":"antrikshv"},"content":"import seedu.duke.exceptions.parserexceptions.NoCommandAttributesException;","lastModifiedDate":"2021-11-02"},{"lineNumber":9,"author":{"gitId":"antrikshv"},"content":"import seedu.duke.parser.ItemType;","lastModifiedDate":"2021-11-02"},{"lineNumber":10,"author":{"gitId":"antrikshv"},"content":"import seedu.duke.parser.Parser;","lastModifiedDate":"2021-11-02"},{"lineNumber":11,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":12,"author":{"gitId":"antrikshv"},"content":"public class NextParser extends Parser {","lastModifiedDate":"2021-11-02"},{"lineNumber":13,"author":{"gitId":"antrikshv"},"content":"    public static Command getNextCommand(String commandDetails, String response) {","lastModifiedDate":"2021-11-02"},{"lineNumber":14,"author":{"gitId":"antrikshv"},"content":"        try {","lastModifiedDate":"2021-11-02"},{"lineNumber":15,"author":{"gitId":"antrikshv"},"content":"            ItemType listType \u003d getItemType(commandDetails);","lastModifiedDate":"2021-11-02"},{"lineNumber":16,"author":{"gitId":"antrikshv"},"content":"            switch (listType) {","lastModifiedDate":"2021-11-02"},{"lineNumber":17,"author":{"gitId":"antrikshv"},"content":"            case EVENT:","lastModifiedDate":"2021-11-02"},{"lineNumber":18,"author":{"gitId":"antrikshv"},"content":"                return new NextCommand(\"event\", 0);","lastModifiedDate":"2021-11-02"},{"lineNumber":19,"author":{"gitId":"antrikshv"},"content":"            case TASK:","lastModifiedDate":"2021-11-02"},{"lineNumber":20,"author":{"gitId":"antrikshv"},"content":"                return parseListTask(response);","lastModifiedDate":"2021-11-02"},{"lineNumber":21,"author":{"gitId":"antrikshv"},"content":"            default:","lastModifiedDate":"2021-11-02"},{"lineNumber":22,"author":{"gitId":"antrikshv"},"content":"                Ui.printNextCommandErrorMessage();","lastModifiedDate":"2021-11-02"},{"lineNumber":23,"author":{"gitId":"antrikshv"},"content":"            }","lastModifiedDate":"2021-11-02"},{"lineNumber":24,"author":{"gitId":"antrikshv"},"content":"        } catch (NumberFormatException | NullPointerException | IndexOutOfBoundsException","lastModifiedDate":"2021-11-02"},{"lineNumber":25,"author":{"gitId":"antrikshv"},"content":"                | NoCommandAttributesException e) {","lastModifiedDate":"2021-11-02"},{"lineNumber":26,"author":{"gitId":"antrikshv"},"content":"            System.out.println(\"Please key in a valid Event Index!\");","lastModifiedDate":"2021-11-02"},{"lineNumber":27,"author":{"gitId":"antrikshv"},"content":"        } catch (InvalidItemTypeException e) {","lastModifiedDate":"2021-11-02"},{"lineNumber":28,"author":{"gitId":"antrikshv"},"content":"            System.out.println(\"Please key in the correct next type value (-e, -t)\");","lastModifiedDate":"2021-11-02"},{"lineNumber":29,"author":{"gitId":"antrikshv"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":30,"author":{"gitId":"antrikshv"},"content":"        return null;","lastModifiedDate":"2021-11-02"},{"lineNumber":31,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":32,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":33,"author":{"gitId":"antrikshv"},"content":"    private static Command parseListTask(String response)","lastModifiedDate":"2021-11-02"},{"lineNumber":34,"author":{"gitId":"antrikshv"},"content":"            throws NoCommandAttributesException, NumberFormatException {","lastModifiedDate":"2021-11-02"},{"lineNumber":35,"author":{"gitId":"antrikshv"},"content":"        String[] index \u003d response.trim().split(\" +\");","lastModifiedDate":"2021-11-02"},{"lineNumber":36,"author":{"gitId":"antrikshv"},"content":"        checkNoCommandAttributesException(index);","lastModifiedDate":"2021-11-02"},{"lineNumber":37,"author":{"gitId":"antrikshv"},"content":"        int eventIndex \u003d Integer.parseInt(index[2]) - 1;","lastModifiedDate":"2021-11-02"},{"lineNumber":38,"author":{"gitId":"antrikshv"},"content":"        if (Duke.eventCatalog.get(eventIndex).getTaskList().size() \u003d\u003d 0) {","lastModifiedDate":"2021-11-02"},{"lineNumber":39,"author":{"gitId":"antrikshv"},"content":"            return new NextCommand(\"noTask\", eventIndex);","lastModifiedDate":"2021-11-02"},{"lineNumber":40,"author":{"gitId":"antrikshv"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":41,"author":{"gitId":"antrikshv"},"content":"        return new NextCommand(\"task\", eventIndex);","lastModifiedDate":"2021-11-02"},{"lineNumber":42,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":43,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":44,"author":{"gitId":"antrikshv"},"content":"    private static void checkNoCommandAttributesException(String[] index) throws NoCommandAttributesException {","lastModifiedDate":"2021-11-02"},{"lineNumber":45,"author":{"gitId":"antrikshv"},"content":"        if (index.length \u003c 2) {","lastModifiedDate":"2021-11-02"},{"lineNumber":46,"author":{"gitId":"antrikshv"},"content":"            throw new NoCommandAttributesException();","lastModifiedDate":"2021-11-02"},{"lineNumber":47,"author":{"gitId":"antrikshv"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":48,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":49,"author":{"gitId":"antrikshv"},"content":"}","lastModifiedDate":"2021-11-02"}],"authorContributionMap":{"antrikshv":49}},{"path":"src/main/java/seedu/duke/parser/commandparser/SelectParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"crabnuggets"},"content":"package seedu.duke.parser.commandparser;","lastModifiedDate":"2021-10-31"},{"lineNumber":2,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":3,"author":{"gitId":"alwinangys"},"content":"import seedu.duke.Duke;","lastModifiedDate":"2021-11-03"},{"lineNumber":4,"author":{"gitId":"crabnuggets"},"content":"import seedu.duke.commands.Command;","lastModifiedDate":"2021-10-31"},{"lineNumber":5,"author":{"gitId":"alwinangys"},"content":"import seedu.duke.commands.SelectCommand;","lastModifiedDate":"2021-11-03"},{"lineNumber":6,"author":{"gitId":"alwinangys"},"content":"import seedu.duke.exceptions.DukeException;","lastModifiedDate":"2021-11-03"},{"lineNumber":7,"author":{"gitId":"alwinangys"},"content":"import seedu.duke.exceptions.parserexceptions.InvalidIndexException;","lastModifiedDate":"2021-11-03"},{"lineNumber":8,"author":{"gitId":"alwinangys"},"content":"import seedu.duke.exceptions.parserexceptions.InvalidItemTypeException;","lastModifiedDate":"2021-11-03"},{"lineNumber":9,"author":{"gitId":"alwinangys"},"content":"import seedu.duke.items.characteristics.Member;","lastModifiedDate":"2021-11-06"},{"lineNumber":10,"author":{"gitId":"alwinangys"},"content":"import seedu.duke.parser.ItemType;","lastModifiedDate":"2021-11-03"},{"lineNumber":11,"author":{"gitId":"crabnuggets"},"content":"import seedu.duke.parser.Parser;","lastModifiedDate":"2021-10-31"},{"lineNumber":12,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":13,"author":{"gitId":"alwinangys"},"content":"import static seedu.duke.Duke.eventCatalog;","lastModifiedDate":"2021-11-03"},{"lineNumber":14,"author":{"gitId":"alwinangys"},"content":"import static seedu.duke.parser.ItemType.MEMBER;","lastModifiedDate":"2021-11-06"},{"lineNumber":15,"author":{"gitId":"alwinangys"},"content":"import static seedu.duke.parser.ItemType.EVENT;","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"alwinangys"},"content":"import static seedu.duke.parser.ItemType.TASK;","lastModifiedDate":"2021-11-04"},{"lineNumber":17,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":18,"author":{"gitId":"crabnuggets"},"content":"public abstract class SelectParser extends Parser {","lastModifiedDate":"2021-10-31"},{"lineNumber":19,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":20,"author":{"gitId":"alwinangys"},"content":"    private static int eventIndexToSelect;","lastModifiedDate":"2021-11-03"},{"lineNumber":21,"author":{"gitId":"alwinangys"},"content":"    private static int taskIndexToSelect;","lastModifiedDate":"2021-11-03"},{"lineNumber":22,"author":{"gitId":"alwinangys"},"content":"    private static int lastEventIndex;","lastModifiedDate":"2021-11-04"},{"lineNumber":23,"author":{"gitId":"alwinangys"},"content":"    private static int memberIndexToSelect;","lastModifiedDate":"2021-11-06"},{"lineNumber":24,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":25,"author":{"gitId":"alwinangys"},"content":"    public static Command getSelectCommand(String[] command, String commandDetails) {","lastModifiedDate":"2021-11-03"},{"lineNumber":26,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":27,"author":{"gitId":"alwinangys"},"content":"        try {","lastModifiedDate":"2021-11-03"},{"lineNumber":28,"author":{"gitId":"alwinangys"},"content":"            ItemType itemType \u003d getItemType(commandDetails);","lastModifiedDate":"2021-11-03"},{"lineNumber":29,"author":{"gitId":"alwinangys"},"content":"            switch (itemType) {","lastModifiedDate":"2021-11-03"},{"lineNumber":30,"author":{"gitId":"alwinangys"},"content":"            case EVENT:","lastModifiedDate":"2021-11-03"},{"lineNumber":31,"author":{"gitId":"alwinangys"},"content":"                parseEvent(command);","lastModifiedDate":"2021-11-03"},{"lineNumber":32,"author":{"gitId":"alwinangys"},"content":"                return new SelectCommand(EVENT, eventIndexToSelect);","lastModifiedDate":"2021-11-04"},{"lineNumber":33,"author":{"gitId":"alwinangys"},"content":"            case TASK:","lastModifiedDate":"2021-11-03"},{"lineNumber":34,"author":{"gitId":"alwinangys"},"content":"                parseTask(command);","lastModifiedDate":"2021-11-03"},{"lineNumber":35,"author":{"gitId":"alwinangys"},"content":"                return new SelectCommand(TASK, lastEventIndex, taskIndexToSelect);","lastModifiedDate":"2021-11-04"},{"lineNumber":36,"author":{"gitId":"alwinangys"},"content":"            case MEMBER:","lastModifiedDate":"2021-11-03"},{"lineNumber":37,"author":{"gitId":"alwinangys"},"content":"                parseMember(command);","lastModifiedDate":"2021-11-06"},{"lineNumber":38,"author":{"gitId":"alwinangys"},"content":"                return new SelectCommand(MEMBER, memberIndexToSelect);","lastModifiedDate":"2021-11-06"},{"lineNumber":39,"author":{"gitId":"alwinangys"},"content":"            default:","lastModifiedDate":"2021-11-03"},{"lineNumber":40,"author":{"gitId":"alwinangys"},"content":"                throw new InvalidItemTypeException();","lastModifiedDate":"2021-11-03"},{"lineNumber":41,"author":{"gitId":"alwinangys"},"content":"            }","lastModifiedDate":"2021-11-03"},{"lineNumber":42,"author":{"gitId":"alwinangys"},"content":"        } catch (InvalidItemTypeException e) {","lastModifiedDate":"2021-11-06"},{"lineNumber":43,"author":{"gitId":"alwinangys"},"content":"            System.out.println(\"Please indicate a flag:\\n\" + \"-e for Event\\n\" + \"-t for Task\\n\"","lastModifiedDate":"2021-11-06"},{"lineNumber":44,"author":{"gitId":"alwinangys"},"content":"                    + \"-m for Member\");","lastModifiedDate":"2021-11-06"},{"lineNumber":45,"author":{"gitId":"alwinangys"},"content":"        } catch (InvalidIndexException | DukeException e) {","lastModifiedDate":"2021-11-06"},{"lineNumber":46,"author":{"gitId":"alwinangys"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2021-11-03"},{"lineNumber":47,"author":{"gitId":"alwinangys"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-11-03"},{"lineNumber":48,"author":{"gitId":"alwinangys"},"content":"            System.out.println(\"Please enter a number for the item index!\");","lastModifiedDate":"2021-11-03"},{"lineNumber":49,"author":{"gitId":"alwinangys"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-11-03"},{"lineNumber":50,"author":{"gitId":"alwinangys"},"content":"            System.out.println(\"Please select an index!\");","lastModifiedDate":"2021-11-06"},{"lineNumber":51,"author":{"gitId":"alwinangys"},"content":"        }","lastModifiedDate":"2021-11-03"},{"lineNumber":52,"author":{"gitId":"crabnuggets"},"content":"        return null;","lastModifiedDate":"2021-10-31"},{"lineNumber":53,"author":{"gitId":"crabnuggets"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":54,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":55,"author":{"gitId":"alwinangys"},"content":"    private static void parseEvent(String[] command) throws InvalidIndexException {","lastModifiedDate":"2021-11-03"},{"lineNumber":56,"author":{"gitId":"alwinangys"},"content":"        int index \u003d getIndexFromCommand(command[2]);","lastModifiedDate":"2021-11-03"},{"lineNumber":57,"author":{"gitId":"alwinangys"},"content":"        if (!isValidEventIndex(index)) {","lastModifiedDate":"2021-11-06"},{"lineNumber":58,"author":{"gitId":"alwinangys"},"content":"            throw new InvalidIndexException(\"Invalid index range. Choose a number between 1 and \"","lastModifiedDate":"2021-11-06"},{"lineNumber":59,"author":{"gitId":"alwinangys"},"content":"                    + eventCatalog.size() + \".\");","lastModifiedDate":"2021-11-06"},{"lineNumber":60,"author":{"gitId":"alwinangys"},"content":"        }","lastModifiedDate":"2021-11-06"},{"lineNumber":61,"author":{"gitId":"alwinangys"},"content":"        updateIndexOfLastSelectedEvent(index);","lastModifiedDate":"2021-11-03"},{"lineNumber":62,"author":{"gitId":"alwinangys"},"content":"        eventIndexToSelect \u003d index;","lastModifiedDate":"2021-11-03"},{"lineNumber":63,"author":{"gitId":"alwinangys"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":64,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":65,"author":{"gitId":"alwinangys"},"content":"    private static void parseTask(String[] command) throws InvalidIndexException, DukeException {","lastModifiedDate":"2021-11-03"},{"lineNumber":66,"author":{"gitId":"alwinangys"},"content":"        if (Parser.noEventSelected()) {","lastModifiedDate":"2021-11-03"},{"lineNumber":67,"author":{"gitId":"alwinangys"},"content":"            throw new DukeException(\"Please select an event first!\");","lastModifiedDate":"2021-11-03"},{"lineNumber":68,"author":{"gitId":"alwinangys"},"content":"        }","lastModifiedDate":"2021-11-03"},{"lineNumber":69,"author":{"gitId":"alwinangys"},"content":"        lastEventIndex \u003d getIndexOfLastSelectedEvent();","lastModifiedDate":"2021-11-04"},{"lineNumber":70,"author":{"gitId":"alwinangys"},"content":"        int index \u003d getIndexFromCommand(command[2]);","lastModifiedDate":"2021-11-03"},{"lineNumber":71,"author":{"gitId":"alwinangys"},"content":"        if (!isValidTaskIndex(lastEventIndex, index)) {","lastModifiedDate":"2021-11-07"},{"lineNumber":72,"author":{"gitId":"alwinangys"},"content":"            throw new InvalidIndexException(\"Invalid index range. Choose a number between 1 to \"","lastModifiedDate":"2021-11-07"},{"lineNumber":73,"author":{"gitId":"alwinangys"},"content":"                    + eventCatalog.get(lastEventIndex).getTaskList().size() + \".\");","lastModifiedDate":"2021-11-04"},{"lineNumber":74,"author":{"gitId":"alwinangys"},"content":"        }","lastModifiedDate":"2021-11-03"},{"lineNumber":75,"author":{"gitId":"alwinangys"},"content":"        taskIndexToSelect \u003d index;","lastModifiedDate":"2021-11-03"},{"lineNumber":76,"author":{"gitId":"alwinangys"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":77,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":78,"author":{"gitId":"alwinangys"},"content":"    private static void parseMember(String[] command) throws DukeException {","lastModifiedDate":"2021-11-06"},{"lineNumber":79,"author":{"gitId":"alwinangys"},"content":"        String memberName \u003d getMemberNameFromCommand(command);","lastModifiedDate":"2021-11-06"},{"lineNumber":80,"author":{"gitId":"alwinangys"},"content":"        memberIndexToSelect \u003d getMemberIndexFromQuery(memberName);","lastModifiedDate":"2021-11-06"},{"lineNumber":81,"author":{"gitId":"alwinangys"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":82,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":83,"author":{"gitId":"alwinangys"},"content":"    private static int getIndexFromCommand(String indexAsString) {","lastModifiedDate":"2021-11-07"},{"lineNumber":84,"author":{"gitId":"alwinangys"},"content":"        return Integer.parseInt(indexAsString.trim()) - 1;","lastModifiedDate":"2021-11-06"},{"lineNumber":85,"author":{"gitId":"alwinangys"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":86,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":87,"author":{"gitId":"alwinangys"},"content":"    private static boolean isValidEventIndex(int eventIndex) {","lastModifiedDate":"2021-11-03"},{"lineNumber":88,"author":{"gitId":"alwinangys"},"content":"        return eventIndex \u003e\u003d 0 \u0026\u0026 eventIndex \u003c Duke.eventCatalog.size();","lastModifiedDate":"2021-11-03"},{"lineNumber":89,"author":{"gitId":"alwinangys"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":90,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":91,"author":{"gitId":"alwinangys"},"content":"    private static boolean isValidTaskIndex(int eventIndex, int taskIndex) {","lastModifiedDate":"2021-11-03"},{"lineNumber":92,"author":{"gitId":"alwinangys"},"content":"        return taskIndex \u003e\u003d 0 \u0026\u0026 taskIndex \u003c Duke.eventCatalog.get(eventIndex).getTaskList().size();","lastModifiedDate":"2021-11-07"},{"lineNumber":93,"author":{"gitId":"alwinangys"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":94,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":95,"author":{"gitId":"alwinangys"},"content":"    private static String getMemberNameFromCommand(String[] command) throws DukeException {","lastModifiedDate":"2021-11-06"},{"lineNumber":96,"author":{"gitId":"alwinangys"},"content":"        if (command.length \u003c 3) {","lastModifiedDate":"2021-11-06"},{"lineNumber":97,"author":{"gitId":"alwinangys"},"content":"            throw new DukeException(\"Please enter a name!\");","lastModifiedDate":"2021-11-06"},{"lineNumber":98,"author":{"gitId":"alwinangys"},"content":"        }","lastModifiedDate":"2021-11-06"},{"lineNumber":99,"author":{"gitId":"alwinangys"},"content":"        StringBuilder memberNameQuery \u003d new StringBuilder();","lastModifiedDate":"2021-11-06"},{"lineNumber":100,"author":{"gitId":"alwinangys"},"content":"        for (int i \u003d 2; i \u003c command.length; i++) {","lastModifiedDate":"2021-11-06"},{"lineNumber":101,"author":{"gitId":"alwinangys"},"content":"            memberNameQuery.append(command[i].trim());","lastModifiedDate":"2021-11-06"},{"lineNumber":102,"author":{"gitId":"alwinangys"},"content":"            memberNameQuery.append(\" \");","lastModifiedDate":"2021-11-06"},{"lineNumber":103,"author":{"gitId":"alwinangys"},"content":"        }","lastModifiedDate":"2021-11-06"},{"lineNumber":104,"author":{"gitId":"alwinangys"},"content":"        return memberNameQuery.toString().trim();","lastModifiedDate":"2021-11-06"},{"lineNumber":105,"author":{"gitId":"alwinangys"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":106,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":107,"author":{"gitId":"alwinangys"},"content":"    private static int getMemberIndexFromQuery(String memberName) throws DukeException {","lastModifiedDate":"2021-11-06"},{"lineNumber":108,"author":{"gitId":"alwinangys"},"content":"        for (int i \u003d 0; i \u003c Duke.memberRoster.size(); i++) {","lastModifiedDate":"2021-11-06"},{"lineNumber":109,"author":{"gitId":"alwinangys"},"content":"            Member member \u003d Duke.memberRoster.get(i);","lastModifiedDate":"2021-11-06"},{"lineNumber":110,"author":{"gitId":"alwinangys"},"content":"            if (member.getName().equalsIgnoreCase(memberName)) {","lastModifiedDate":"2021-11-06"},{"lineNumber":111,"author":{"gitId":"alwinangys"},"content":"                return i;","lastModifiedDate":"2021-11-06"},{"lineNumber":112,"author":{"gitId":"alwinangys"},"content":"            }","lastModifiedDate":"2021-11-06"},{"lineNumber":113,"author":{"gitId":"alwinangys"},"content":"        }","lastModifiedDate":"2021-11-06"},{"lineNumber":114,"author":{"gitId":"alwinangys"},"content":"        throw new DukeException(\"No matching names found!\");","lastModifiedDate":"2021-11-06"},{"lineNumber":115,"author":{"gitId":"alwinangys"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":116,"author":{"gitId":"crabnuggets"},"content":"}","lastModifiedDate":"2021-10-31"}],"authorContributionMap":{"crabnuggets":10,"alwinangys":106}},{"path":"src/main/java/seedu/duke/parser/commandparser/UpdateParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"crabnuggets"},"content":"package seedu.duke.parser.commandparser;","lastModifiedDate":"2021-10-31"},{"lineNumber":2,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":3,"author":{"gitId":"antrikshv"},"content":"import seedu.duke.Duke;","lastModifiedDate":"2021-10-31"},{"lineNumber":4,"author":{"gitId":"antrikshv"},"content":"import seedu.duke.Ui;","lastModifiedDate":"2021-10-31"},{"lineNumber":5,"author":{"gitId":"antrikshv"},"content":"import seedu.duke.commands.Command;","lastModifiedDate":"2021-11-01"},{"lineNumber":6,"author":{"gitId":"antrikshv"},"content":"import seedu.duke.commands.updates.UpdateEventCommand;","lastModifiedDate":"2021-11-01"},{"lineNumber":7,"author":{"gitId":"antrikshv"},"content":"import seedu.duke.commands.updates.UpdateMemberCommand;","lastModifiedDate":"2021-11-01"},{"lineNumber":8,"author":{"gitId":"antrikshv"},"content":"import seedu.duke.commands.updates.UpdateTaskCommand;","lastModifiedDate":"2021-11-01"},{"lineNumber":9,"author":{"gitId":"antrikshv"},"content":"import seedu.duke.exceptions.DukeException;","lastModifiedDate":"2021-10-31"},{"lineNumber":10,"author":{"gitId":"antrikshv"},"content":"import seedu.duke.exceptions.parserexceptions.AttributeNotFoundException;","lastModifiedDate":"2021-11-02"},{"lineNumber":11,"author":{"gitId":"antrikshv"},"content":"import seedu.duke.exceptions.parserexceptions.ExistingMemberException;","lastModifiedDate":"2021-11-02"},{"lineNumber":12,"author":{"gitId":"antrikshv"},"content":"import seedu.duke.exceptions.parserexceptions.InvalidBudgetException;","lastModifiedDate":"2021-10-31"},{"lineNumber":13,"author":{"gitId":"antrikshv"},"content":"import seedu.duke.items.Event;","lastModifiedDate":"2021-10-31"},{"lineNumber":14,"author":{"gitId":"antrikshv"},"content":"import seedu.duke.items.Task;","lastModifiedDate":"2021-10-31"},{"lineNumber":15,"author":{"gitId":"antrikshv"},"content":"import seedu.duke.items.characteristics.Member;","lastModifiedDate":"2021-10-31"},{"lineNumber":16,"author":{"gitId":"antrikshv"},"content":"import seedu.duke.parser.ItemAttribute;","lastModifiedDate":"2021-11-02"},{"lineNumber":17,"author":{"gitId":"crabnuggets"},"content":"import seedu.duke.parser.Parser;","lastModifiedDate":"2021-10-31"},{"lineNumber":18,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":19,"author":{"gitId":"antrikshv"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-10-31"},{"lineNumber":20,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":21,"author":{"gitId":"crabnuggets"},"content":"public abstract class UpdateParser extends Parser {","lastModifiedDate":"2021-10-31"},{"lineNumber":22,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":23,"author":{"gitId":"antrikshv"},"content":"    private static final int INDEX_OF_TITLE \u003d 0;","lastModifiedDate":"2021-10-31"},{"lineNumber":24,"author":{"gitId":"antrikshv"},"content":"    private static final int INDEX_OF_VENUE \u003d 2;","lastModifiedDate":"2021-10-31"},{"lineNumber":25,"author":{"gitId":"antrikshv"},"content":"    private static final int INDEX_OF_DESCRIPTION \u003d 1;","lastModifiedDate":"2021-10-31"},{"lineNumber":26,"author":{"gitId":"antrikshv"},"content":"    protected static final String TITLE_FLAG \u003d \"n/\";","lastModifiedDate":"2021-11-02"},{"lineNumber":27,"author":{"gitId":"antrikshv"},"content":"    protected static final String DATE_FLAG \u003d \"d/\";","lastModifiedDate":"2021-11-02"},{"lineNumber":28,"author":{"gitId":"antrikshv"},"content":"    protected static final String VENUE_FLAG \u003d \"v/\";","lastModifiedDate":"2021-11-02"},{"lineNumber":29,"author":{"gitId":"antrikshv"},"content":"    protected static final String BUDGET_FLAG \u003d \"b/\";","lastModifiedDate":"2021-11-02"},{"lineNumber":30,"author":{"gitId":"antrikshv"},"content":"    protected static final String DESCRIPTION_FLAG \u003d \"p/\";","lastModifiedDate":"2021-11-02"},{"lineNumber":31,"author":{"gitId":"antrikshv"},"content":"    protected static final String TASK_FLAG \u003d \"t/\";","lastModifiedDate":"2021-11-02"},{"lineNumber":32,"author":{"gitId":"antrikshv"},"content":"    protected static final String CHANGE_FLAG \u003d \"change/\";","lastModifiedDate":"2021-11-02"},{"lineNumber":33,"author":{"gitId":"antrikshv"},"content":"    protected static final String REMOVE_FLAG \u003d \"remove/\";","lastModifiedDate":"2021-10-31"},{"lineNumber":34,"author":{"gitId":"antrikshv"},"content":"    protected static final String ADD_FLAG \u003d \"add\";","lastModifiedDate":"2021-11-01"},{"lineNumber":35,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":36,"author":{"gitId":"antrikshv"},"content":"    public static Command getUpdateCommand(String commandDetails) {","lastModifiedDate":"2021-10-31"},{"lineNumber":37,"author":{"gitId":"antrikshv"},"content":"        try {","lastModifiedDate":"2021-10-31"},{"lineNumber":38,"author":{"gitId":"antrikshv"},"content":"            int eventIndex \u003d Integer.parseInt(commandDetails) - 1;","lastModifiedDate":"2021-10-31"},{"lineNumber":39,"author":{"gitId":"antrikshv"},"content":"            Event eventToBeUpdated \u003d Duke.eventCatalog.get(eventIndex);","lastModifiedDate":"2021-10-31"},{"lineNumber":40,"author":{"gitId":"antrikshv"},"content":"            Ui.printUpdateEventDetails(eventToBeUpdated);","lastModifiedDate":"2021-10-31"},{"lineNumber":41,"author":{"gitId":"antrikshv"},"content":"            Ui.updateIntroMessage();","lastModifiedDate":"2021-10-31"},{"lineNumber":42,"author":{"gitId":"antrikshv"},"content":"            String userInput \u003d Ui.readInput();","lastModifiedDate":"2021-10-31"},{"lineNumber":43,"author":{"gitId":"antrikshv"},"content":"            Command result \u003d parseUpdateEvent(userInput, eventToBeUpdated);","lastModifiedDate":"2021-11-02"},{"lineNumber":44,"author":{"gitId":"antrikshv"},"content":"            Ui.printLineBreak();","lastModifiedDate":"2021-10-31"},{"lineNumber":45,"author":{"gitId":"antrikshv"},"content":"            return result;","lastModifiedDate":"2021-10-31"},{"lineNumber":46,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":47,"author":{"gitId":"antrikshv"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-10-31"},{"lineNumber":48,"author":{"gitId":"antrikshv"},"content":"            System.out.println(\"That is not an Integer! Please key an integer value!\");","lastModifiedDate":"2021-11-02"},{"lineNumber":49,"author":{"gitId":"antrikshv"},"content":"        } catch (ExistingMemberException | InvalidBudgetException | DukeException e) {","lastModifiedDate":"2021-11-02"},{"lineNumber":50,"author":{"gitId":"antrikshv"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2021-10-31"},{"lineNumber":51,"author":{"gitId":"antrikshv"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2021-11-01"},{"lineNumber":52,"author":{"gitId":"antrikshv"},"content":"            System.out.println(\"Please key in your updates!\");","lastModifiedDate":"2021-11-01"},{"lineNumber":53,"author":{"gitId":"antrikshv"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-11-01"},{"lineNumber":54,"author":{"gitId":"antrikshv"},"content":"            Ui.printLineBreak();","lastModifiedDate":"2021-11-01"},{"lineNumber":55,"author":{"gitId":"antrikshv"},"content":"            System.out.println(\"That selection does not exist!\");","lastModifiedDate":"2021-11-01"},{"lineNumber":56,"author":{"gitId":"antrikshv"},"content":"        } catch (AttributeNotFoundException e) {","lastModifiedDate":"2021-11-02"},{"lineNumber":57,"author":{"gitId":"antrikshv"},"content":"            String attributeType \u003d ItemAttribute.getAttributeName(e.getItemAttribute());","lastModifiedDate":"2021-11-02"},{"lineNumber":58,"author":{"gitId":"antrikshv"},"content":"            String attributeFlag \u003d ItemAttribute.getItemFlag(e.getItemAttribute());","lastModifiedDate":"2021-11-02"},{"lineNumber":59,"author":{"gitId":"antrikshv"},"content":"            System.out.println(\"Please add a \" + attributeType + \"for your update using \"","lastModifiedDate":"2021-11-02"},{"lineNumber":60,"author":{"gitId":"antrikshv"},"content":"                    + attributeFlag + attributeType.toUpperCase());","lastModifiedDate":"2021-11-02"},{"lineNumber":61,"author":{"gitId":"antrikshv"},"content":"        }","lastModifiedDate":"2021-10-31"},{"lineNumber":62,"author":{"gitId":"crabnuggets"},"content":"        return null;","lastModifiedDate":"2021-10-31"},{"lineNumber":63,"author":{"gitId":"crabnuggets"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":64,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":65,"author":{"gitId":"antrikshv"},"content":"    private static Command parseUpdateEvent(String update, Event event)","lastModifiedDate":"2021-11-02"},{"lineNumber":66,"author":{"gitId":"antrikshv"},"content":"            throws DukeException, InvalidBudgetException, AttributeNotFoundException, ExistingMemberException {","lastModifiedDate":"2021-11-02"},{"lineNumber":67,"author":{"gitId":"antrikshv"},"content":"        String[] parsedAttributes \u003d new String[3];","lastModifiedDate":"2021-10-31"},{"lineNumber":68,"author":{"gitId":"antrikshv"},"content":"        LocalDateTime dateTimeToBeUpdated \u003d null;","lastModifiedDate":"2021-11-02"},{"lineNumber":69,"author":{"gitId":"antrikshv"},"content":"        double budget \u003d 0;","lastModifiedDate":"2021-10-31"},{"lineNumber":70,"author":{"gitId":"antrikshv"},"content":"        if (update.trim().startsWith(TITLE_FLAG)) {","lastModifiedDate":"2021-11-02"},{"lineNumber":71,"author":{"gitId":"antrikshv"},"content":"            String title \u003d retrieveItemAttribute(update, ItemAttribute.TITLE);","lastModifiedDate":"2021-11-02"},{"lineNumber":72,"author":{"gitId":"antrikshv"},"content":"            parsedAttributes[INDEX_OF_TITLE] \u003d title;","lastModifiedDate":"2021-11-02"},{"lineNumber":73,"author":{"gitId":"antrikshv"},"content":"        } else if (update.trim().startsWith(DATE_FLAG)) {","lastModifiedDate":"2021-11-02"},{"lineNumber":74,"author":{"gitId":"antrikshv"},"content":"            String dateTime \u003d retrieveItemAttribute(update, ItemAttribute.DATE);","lastModifiedDate":"2021-11-02"},{"lineNumber":75,"author":{"gitId":"antrikshv"},"content":"            dateTimeToBeUpdated \u003d convertDateTime(dateTime);","lastModifiedDate":"2021-11-02"},{"lineNumber":76,"author":{"gitId":"antrikshv"},"content":"        } else if (update.trim().startsWith(VENUE_FLAG)) {","lastModifiedDate":"2021-11-02"},{"lineNumber":77,"author":{"gitId":"antrikshv"},"content":"            String venue \u003d retrieveItemAttribute(update, ItemAttribute.VENUE);","lastModifiedDate":"2021-11-02"},{"lineNumber":78,"author":{"gitId":"antrikshv"},"content":"            parsedAttributes[INDEX_OF_VENUE] \u003d venue;","lastModifiedDate":"2021-11-02"},{"lineNumber":79,"author":{"gitId":"antrikshv"},"content":"        } else if (update.trim().startsWith(BUDGET_FLAG)) {","lastModifiedDate":"2021-11-02"},{"lineNumber":80,"author":{"gitId":"antrikshv"},"content":"            budget \u003d Double.parseDouble(retrieveItemAttribute(update, ItemAttribute.BUDGET));","lastModifiedDate":"2021-11-02"},{"lineNumber":81,"author":{"gitId":"antrikshv"},"content":"        } else if (update.trim().startsWith(DESCRIPTION_FLAG)) {","lastModifiedDate":"2021-11-02"},{"lineNumber":82,"author":{"gitId":"antrikshv"},"content":"            String description \u003d retrieveItemAttribute(update, ItemAttribute.DESCRIPTION);","lastModifiedDate":"2021-11-02"},{"lineNumber":83,"author":{"gitId":"antrikshv"},"content":"            parsedAttributes[INDEX_OF_DESCRIPTION] \u003d description;","lastModifiedDate":"2021-11-02"},{"lineNumber":84,"author":{"gitId":"antrikshv"},"content":"        } else if (update.trim().startsWith(TASK_FLAG)) {","lastModifiedDate":"2021-11-02"},{"lineNumber":85,"author":{"gitId":"antrikshv"},"content":"            String taskIndex \u003d retrieveItemAttribute(update, ItemAttribute.TASK);","lastModifiedDate":"2021-11-02"},{"lineNumber":86,"author":{"gitId":"antrikshv"},"content":"            taskIndex \u003d taskIndex.replaceAll(\"\\\\s\", \"\");","lastModifiedDate":"2021-11-02"},{"lineNumber":87,"author":{"gitId":"antrikshv"},"content":"            return parseUpdateTask(event, taskIndex);","lastModifiedDate":"2021-11-02"},{"lineNumber":88,"author":{"gitId":"antrikshv"},"content":"        } else {","lastModifiedDate":"2021-11-02"},{"lineNumber":89,"author":{"gitId":"antrikshv"},"content":"            System.out.println(\"Invalid update\");","lastModifiedDate":"2021-11-02"},{"lineNumber":90,"author":{"gitId":"antrikshv"},"content":"        }","lastModifiedDate":"2021-11-01"},{"lineNumber":91,"author":{"gitId":"antrikshv"},"content":"        checkForOtherUpdate(update);","lastModifiedDate":"2021-11-02"},{"lineNumber":92,"author":{"gitId":"antrikshv"},"content":"        return new UpdateEventCommand(event, parsedAttributes, dateTimeToBeUpdated, budget);","lastModifiedDate":"2021-11-02"},{"lineNumber":93,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":94,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":95,"author":{"gitId":"antrikshv"},"content":"    private static void checkForOtherUpdate(String update) {","lastModifiedDate":"2021-11-02"},{"lineNumber":96,"author":{"gitId":"antrikshv"},"content":"        long totalCharacters \u003d update.chars().filter(ch -\u003e ch \u003d\u003d \u0027/\u0027).count();","lastModifiedDate":"2021-11-02"},{"lineNumber":97,"author":{"gitId":"antrikshv"},"content":"        if (totalCharacters \u003e 2) {","lastModifiedDate":"2021-11-02"},{"lineNumber":98,"author":{"gitId":"antrikshv"},"content":"            Ui.printLineBreak();","lastModifiedDate":"2021-11-02"},{"lineNumber":99,"author":{"gitId":"antrikshv"},"content":"            System.out.println(\"Multiple updates detected, Only the first one will be implemented!\"","lastModifiedDate":"2021-11-02"},{"lineNumber":100,"author":{"gitId":"antrikshv"},"content":"                    + \"\\nPlease only key in a single update at a time!\");","lastModifiedDate":"2021-11-02"},{"lineNumber":101,"author":{"gitId":"antrikshv"},"content":"        }","lastModifiedDate":"2021-10-31"},{"lineNumber":102,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":103,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":104,"author":{"gitId":"antrikshv"},"content":"    protected static Command parseUpdateTask(Event eventToBeUpdated, String index)","lastModifiedDate":"2021-11-01"},{"lineNumber":105,"author":{"gitId":"antrikshv"},"content":"            throws DukeException, AttributeNotFoundException, ExistingMemberException {","lastModifiedDate":"2021-11-02"},{"lineNumber":106,"author":{"gitId":"antrikshv"},"content":"        int taskNum \u003d Integer.parseInt(index) - 1;","lastModifiedDate":"2021-10-31"},{"lineNumber":107,"author":{"gitId":"antrikshv"},"content":"        Task taskToBeUpdated \u003d eventToBeUpdated.getFromTaskList(taskNum);","lastModifiedDate":"2021-10-31"},{"lineNumber":108,"author":{"gitId":"antrikshv"},"content":"        String update \u003d prepareTaskUpdates(taskToBeUpdated);","lastModifiedDate":"2021-11-02"},{"lineNumber":109,"author":{"gitId":"antrikshv"},"content":"        String[] parsedAttributes \u003d new String[3];","lastModifiedDate":"2021-10-31"},{"lineNumber":110,"author":{"gitId":"antrikshv"},"content":"        LocalDateTime dateTimeToBeUpdated \u003d null;","lastModifiedDate":"2021-11-02"},{"lineNumber":111,"author":{"gitId":"antrikshv"},"content":"        String[] attribute \u003d update.trim().split(\"/+\");","lastModifiedDate":"2021-10-31"},{"lineNumber":112,"author":{"gitId":"antrikshv"},"content":"        if (update.trim().startsWith(TITLE_FLAG)) {","lastModifiedDate":"2021-11-02"},{"lineNumber":113,"author":{"gitId":"antrikshv"},"content":"            String title \u003d retrieveItemAttribute(update, ItemAttribute.TITLE);","lastModifiedDate":"2021-11-02"},{"lineNumber":114,"author":{"gitId":"antrikshv"},"content":"            parsedAttributes[INDEX_OF_TITLE] \u003d title;","lastModifiedDate":"2021-11-02"},{"lineNumber":115,"author":{"gitId":"antrikshv"},"content":"        } else if (update.trim().startsWith(DATE_FLAG)) {","lastModifiedDate":"2021-11-02"},{"lineNumber":116,"author":{"gitId":"antrikshv"},"content":"            String dateTime \u003d retrieveItemAttribute(update, ItemAttribute.DATE);","lastModifiedDate":"2021-11-02"},{"lineNumber":117,"author":{"gitId":"antrikshv"},"content":"            dateTimeToBeUpdated \u003d convertDateTime(dateTime);","lastModifiedDate":"2021-11-02"},{"lineNumber":118,"author":{"gitId":"antrikshv"},"content":"        } else if (update.trim().startsWith(DESCRIPTION_FLAG)) {","lastModifiedDate":"2021-11-02"},{"lineNumber":119,"author":{"gitId":"antrikshv"},"content":"            String description \u003d retrieveItemAttribute(update, ItemAttribute.DESCRIPTION);","lastModifiedDate":"2021-11-02"},{"lineNumber":120,"author":{"gitId":"antrikshv"},"content":"            parsedAttributes[INDEX_OF_DESCRIPTION] \u003d description;","lastModifiedDate":"2021-11-02"},{"lineNumber":121,"author":{"gitId":"antrikshv"},"content":"        } else if (update.contains(CHANGE_FLAG)) {","lastModifiedDate":"2021-11-02"},{"lineNumber":122,"author":{"gitId":"antrikshv"},"content":"            attribute[1] \u003d attribute[1].replaceAll(\"\\\\s\", \"\");","lastModifiedDate":"2021-10-31"},{"lineNumber":123,"author":{"gitId":"antrikshv"},"content":"            return changeMember(attribute[1], taskToBeUpdated);","lastModifiedDate":"2021-10-31"},{"lineNumber":124,"author":{"gitId":"antrikshv"},"content":"        } else if (update.contains(REMOVE_FLAG)) {","lastModifiedDate":"2021-10-31"},{"lineNumber":125,"author":{"gitId":"antrikshv"},"content":"            attribute[1] \u003d attribute[1].replaceAll(\"\\\\s\", \"\");","lastModifiedDate":"2021-10-31"},{"lineNumber":126,"author":{"gitId":"antrikshv"},"content":"            return removeMember(attribute[1], taskToBeUpdated);","lastModifiedDate":"2021-10-31"},{"lineNumber":127,"author":{"gitId":"antrikshv"},"content":"        } else if (update.contains(ADD_FLAG)) {","lastModifiedDate":"2021-10-31"},{"lineNumber":128,"author":{"gitId":"antrikshv"},"content":"            return addMember(taskToBeUpdated);","lastModifiedDate":"2021-10-31"},{"lineNumber":129,"author":{"gitId":"antrikshv"},"content":"        } else {","lastModifiedDate":"2021-10-31"},{"lineNumber":130,"author":{"gitId":"antrikshv"},"content":"            System.out.println(\"Invalid update\");","lastModifiedDate":"2021-11-01"},{"lineNumber":131,"author":{"gitId":"antrikshv"},"content":"        }","lastModifiedDate":"2021-10-31"},{"lineNumber":132,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":133,"author":{"gitId":"antrikshv"},"content":"        return new UpdateTaskCommand(parsedAttributes, taskToBeUpdated, dateTimeToBeUpdated);","lastModifiedDate":"2021-11-02"},{"lineNumber":134,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":135,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":136,"author":{"gitId":"antrikshv"},"content":"    private static Command changeMember(String index, Task taskToBeUpdated) throws DukeException,","lastModifiedDate":"2021-11-02"},{"lineNumber":137,"author":{"gitId":"antrikshv"},"content":"            ExistingMemberException {","lastModifiedDate":"2021-11-02"},{"lineNumber":138,"author":{"gitId":"antrikshv"},"content":"        int memberToBeReplaced \u003d Integer.parseInt(index);","lastModifiedDate":"2021-10-31"},{"lineNumber":139,"author":{"gitId":"antrikshv"},"content":"        int memberIndex \u003d prepareMemberDetails();","lastModifiedDate":"2021-10-31"},{"lineNumber":140,"author":{"gitId":"antrikshv"},"content":"        checkValidMember(memberIndex, taskToBeUpdated);","lastModifiedDate":"2021-11-01"},{"lineNumber":141,"author":{"gitId":"antrikshv"},"content":"        return new UpdateMemberCommand(\"change\", memberIndex, taskToBeUpdated, memberToBeReplaced);","lastModifiedDate":"2021-10-31"},{"lineNumber":142,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":143,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":144,"author":{"gitId":"antrikshv"},"content":"    private static Command addMember(Task taskToBeUpdated) throws DukeException, ExistingMemberException {","lastModifiedDate":"2021-11-02"},{"lineNumber":145,"author":{"gitId":"antrikshv"},"content":"        int memberIndex \u003d prepareMemberDetails();","lastModifiedDate":"2021-10-31"},{"lineNumber":146,"author":{"gitId":"antrikshv"},"content":"        checkValidMember(memberIndex, taskToBeUpdated);","lastModifiedDate":"2021-11-01"},{"lineNumber":147,"author":{"gitId":"antrikshv"},"content":"        return new UpdateMemberCommand(\"add\", memberIndex, taskToBeUpdated, -1);","lastModifiedDate":"2021-10-31"},{"lineNumber":148,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":149,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":150,"author":{"gitId":"antrikshv"},"content":"    private static int prepareMemberDetails() throws DukeException {","lastModifiedDate":"2021-10-31"},{"lineNumber":151,"author":{"gitId":"antrikshv"},"content":"        int memberIndex \u003d -1;","lastModifiedDate":"2021-10-31"},{"lineNumber":152,"author":{"gitId":"antrikshv"},"content":"        boolean isCorrectMember \u003d false;","lastModifiedDate":"2021-10-31"},{"lineNumber":153,"author":{"gitId":"antrikshv"},"content":"        while (!isCorrectMember) {","lastModifiedDate":"2021-10-31"},{"lineNumber":154,"author":{"gitId":"antrikshv"},"content":"            try {","lastModifiedDate":"2021-10-31"},{"lineNumber":155,"author":{"gitId":"antrikshv"},"content":"                memberIndex \u003d getMemberIndex();","lastModifiedDate":"2021-10-31"},{"lineNumber":156,"author":{"gitId":"antrikshv"},"content":"                isCorrectMember \u003d true;","lastModifiedDate":"2021-10-31"},{"lineNumber":157,"author":{"gitId":"antrikshv"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-10-31"},{"lineNumber":158,"author":{"gitId":"antrikshv"},"content":"                Ui.printLineBreak();","lastModifiedDate":"2021-10-31"},{"lineNumber":159,"author":{"gitId":"antrikshv"},"content":"                throw new DukeException(\"This member does not exist. Please enter the index corresponding to \"","lastModifiedDate":"2021-10-31"},{"lineNumber":160,"author":{"gitId":"antrikshv"},"content":"                        + \"the correct member. \");","lastModifiedDate":"2021-10-31"},{"lineNumber":161,"author":{"gitId":"antrikshv"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2021-10-31"},{"lineNumber":162,"author":{"gitId":"antrikshv"},"content":"                Ui.printLineBreak();","lastModifiedDate":"2021-10-31"},{"lineNumber":163,"author":{"gitId":"antrikshv"},"content":"                System.out.println(\"Please enter the number corresponding to the member \"","lastModifiedDate":"2021-10-31"},{"lineNumber":164,"author":{"gitId":"antrikshv"},"content":"                        + \"you want to assign this task to. \");","lastModifiedDate":"2021-10-31"},{"lineNumber":165,"author":{"gitId":"antrikshv"},"content":"            }","lastModifiedDate":"2021-10-31"},{"lineNumber":166,"author":{"gitId":"antrikshv"},"content":"        }","lastModifiedDate":"2021-10-31"},{"lineNumber":167,"author":{"gitId":"antrikshv"},"content":"        return memberIndex;","lastModifiedDate":"2021-10-31"},{"lineNumber":168,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":169,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":170,"author":{"gitId":"antrikshv"},"content":"    private static void checkValidMember(int memberIndex, Task task) throws ExistingMemberException {","lastModifiedDate":"2021-11-02"},{"lineNumber":171,"author":{"gitId":"antrikshv"},"content":"        if (memberIndex \u003e\u003d task.memberList.size() || memberIndex \u003c 0) {","lastModifiedDate":"2021-11-02"},{"lineNumber":172,"author":{"gitId":"antrikshv"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2021-11-01"},{"lineNumber":173,"author":{"gitId":"antrikshv"},"content":"        }","lastModifiedDate":"2021-11-01"},{"lineNumber":174,"author":{"gitId":"antrikshv"},"content":"        Member memberAdded \u003d task.getFromMemberList(memberIndex);","lastModifiedDate":"2021-11-02"},{"lineNumber":175,"author":{"gitId":"antrikshv"},"content":"        if (task.getMemberList().contains(memberAdded)) {","lastModifiedDate":"2021-11-02"},{"lineNumber":176,"author":{"gitId":"antrikshv"},"content":"            throw new ExistingMemberException(Ui.getLineBreak()","lastModifiedDate":"2021-11-02"},{"lineNumber":177,"author":{"gitId":"antrikshv"},"content":"                    + \"\\nThis member is already assigned to the task!\");","lastModifiedDate":"2021-11-02"},{"lineNumber":178,"author":{"gitId":"antrikshv"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":179,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":180,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":181,"author":{"gitId":"antrikshv"},"content":"    private static int getMemberIndex() {","lastModifiedDate":"2021-10-31"},{"lineNumber":182,"author":{"gitId":"antrikshv"},"content":"        Ui.printLineBreak();","lastModifiedDate":"2021-10-31"},{"lineNumber":183,"author":{"gitId":"antrikshv"},"content":"        Ui.promptForMemberIndex();","lastModifiedDate":"2021-10-31"},{"lineNumber":184,"author":{"gitId":"antrikshv"},"content":"        Ui.printMemberRoster();","lastModifiedDate":"2021-10-31"},{"lineNumber":185,"author":{"gitId":"antrikshv"},"content":"        Ui.printLineBreak();","lastModifiedDate":"2021-10-31"},{"lineNumber":186,"author":{"gitId":"antrikshv"},"content":"        return Integer.parseInt(Ui.readInput()) - 1;","lastModifiedDate":"2021-10-31"},{"lineNumber":187,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":188,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":189,"author":{"gitId":"antrikshv"},"content":"    private static Command removeMember(String index, Task taskToBeUpdated) {","lastModifiedDate":"2021-10-31"},{"lineNumber":190,"author":{"gitId":"antrikshv"},"content":"        Ui.printLineBreak();","lastModifiedDate":"2021-10-31"},{"lineNumber":191,"author":{"gitId":"antrikshv"},"content":"        int memberIndex \u003d Integer.parseInt(index) - 1;","lastModifiedDate":"2021-10-31"},{"lineNumber":192,"author":{"gitId":"antrikshv"},"content":"        Member memberToBeRemoved \u003d taskToBeUpdated.memberList.get(memberIndex);","lastModifiedDate":"2021-10-31"},{"lineNumber":193,"author":{"gitId":"antrikshv"},"content":"        System.out.println(\"Are you sure you want to remove \" + memberToBeRemoved.getName() + \" from this task (y/n)\");","lastModifiedDate":"2021-10-31"},{"lineNumber":194,"author":{"gitId":"antrikshv"},"content":"        Ui.printLineBreak();","lastModifiedDate":"2021-10-31"},{"lineNumber":195,"author":{"gitId":"antrikshv"},"content":"        boolean exit \u003d false;","lastModifiedDate":"2021-10-31"},{"lineNumber":196,"author":{"gitId":"antrikshv"},"content":"        while (!exit) {","lastModifiedDate":"2021-10-31"},{"lineNumber":197,"author":{"gitId":"antrikshv"},"content":"            String userInput \u003d Ui.readInput();","lastModifiedDate":"2021-10-31"},{"lineNumber":198,"author":{"gitId":"antrikshv"},"content":"            Ui.printLineBreak();","lastModifiedDate":"2021-10-31"},{"lineNumber":199,"author":{"gitId":"antrikshv"},"content":"            if (taskToBeUpdated.memberList.size() \u003c\u003d 1) {","lastModifiedDate":"2021-10-31"},{"lineNumber":200,"author":{"gitId":"antrikshv"},"content":"                System.out.println(\"Task cannot be carried out without a member, no member removed!\");","lastModifiedDate":"2021-10-31"},{"lineNumber":201,"author":{"gitId":"antrikshv"},"content":"                //flag for error","lastModifiedDate":"2021-10-31"},{"lineNumber":202,"author":{"gitId":"antrikshv"},"content":"                memberIndex \u003d -1;","lastModifiedDate":"2021-10-31"},{"lineNumber":203,"author":{"gitId":"antrikshv"},"content":"                exit \u003d true;","lastModifiedDate":"2021-10-31"},{"lineNumber":204,"author":{"gitId":"antrikshv"},"content":"            } else if (userInput.equalsIgnoreCase(\"y\")) {","lastModifiedDate":"2021-10-31"},{"lineNumber":205,"author":{"gitId":"antrikshv"},"content":"                System.out.println(memberToBeRemoved.getName() + \" removed from Task!\");","lastModifiedDate":"2021-10-31"},{"lineNumber":206,"author":{"gitId":"antrikshv"},"content":"                exit \u003d true;","lastModifiedDate":"2021-10-31"},{"lineNumber":207,"author":{"gitId":"antrikshv"},"content":"            } else if (userInput.equalsIgnoreCase(\"n\")) {","lastModifiedDate":"2021-10-31"},{"lineNumber":208,"author":{"gitId":"antrikshv"},"content":"                System.out.println(\"No member removed from Task!\");","lastModifiedDate":"2021-10-31"},{"lineNumber":209,"author":{"gitId":"antrikshv"},"content":"                memberIndex \u003d -1;","lastModifiedDate":"2021-10-31"},{"lineNumber":210,"author":{"gitId":"antrikshv"},"content":"                exit \u003d true;","lastModifiedDate":"2021-10-31"},{"lineNumber":211,"author":{"gitId":"antrikshv"},"content":"            } else {","lastModifiedDate":"2021-10-31"},{"lineNumber":212,"author":{"gitId":"antrikshv"},"content":"                System.out.println(\"please key in [y] for yes and [n] for no\");","lastModifiedDate":"2021-10-31"},{"lineNumber":213,"author":{"gitId":"antrikshv"},"content":"                Ui.printLineBreak();","lastModifiedDate":"2021-10-31"},{"lineNumber":214,"author":{"gitId":"antrikshv"},"content":"            }","lastModifiedDate":"2021-10-31"},{"lineNumber":215,"author":{"gitId":"antrikshv"},"content":"        }","lastModifiedDate":"2021-10-31"},{"lineNumber":216,"author":{"gitId":"antrikshv"},"content":"        return new UpdateMemberCommand(\"remove\", -1, taskToBeUpdated, memberIndex);","lastModifiedDate":"2021-10-31"},{"lineNumber":217,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":218,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":219,"author":{"gitId":"antrikshv"},"content":"    private static String prepareTaskUpdates(Task taskToBeUpdated) {","lastModifiedDate":"2021-11-02"},{"lineNumber":220,"author":{"gitId":"antrikshv"},"content":"        Ui.printLineBreak();","lastModifiedDate":"2021-11-01"},{"lineNumber":221,"author":{"gitId":"antrikshv"},"content":"        Ui.printTask(taskToBeUpdated);","lastModifiedDate":"2021-10-31"},{"lineNumber":222,"author":{"gitId":"antrikshv"},"content":"        Ui.updateTaskIntroMessage();","lastModifiedDate":"2021-10-31"},{"lineNumber":223,"author":{"gitId":"antrikshv"},"content":"        return Ui.readInput();","lastModifiedDate":"2021-11-02"},{"lineNumber":224,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":225,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":226,"author":{"gitId":"crabnuggets"},"content":"}","lastModifiedDate":"2021-10-31"}],"authorContributionMap":{"antrikshv":217,"crabnuggets":9}},{"path":"src/main/java/seedu/duke/storage/EventDecoder.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"crabnuggets"},"content":"package seedu.duke.storage;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"crabnuggets"},"content":"import seedu.duke.exceptions.DukeException;","lastModifiedDate":"2021-10-31"},{"lineNumber":4,"author":{"gitId":"crabnuggets"},"content":"import seedu.duke.parser.Parser;","lastModifiedDate":"2021-10-23"},{"lineNumber":5,"author":{"gitId":"crabnuggets"},"content":"import seedu.duke.items.Event;","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"Alvinlj00"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"crabnuggets"},"content":"public class EventDecoder {","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"crabnuggets"},"content":"    // Index 0 is reserved for indicator for event/task","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"crabnuggets"},"content":"    private static final int INDEX_OF_TITLE \u003d 1;","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"crabnuggets"},"content":"    private static final int INDEX_OF_STATUS \u003d 2;","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"crabnuggets"},"content":"    private static final int INDEX_OF_DESCRIPTION \u003d 3;","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"crabnuggets"},"content":"    private static final int INDEX_OF_DATETIME \u003d 4;","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"crabnuggets"},"content":"    private static final int INDEX_OF_VENUE \u003d 5;","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"crabnuggets"},"content":"    private static final int INDEX_OF_BUDGET \u003d 6;","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"crabnuggets"},"content":"    protected static Event decodeEventFromString(String encodedEvent) throws DukeException {","lastModifiedDate":"2021-10-31"},{"lineNumber":20,"author":{"gitId":"crabnuggets"},"content":"        String[] eventDetails \u003d encodedEvent.trim().split(Event.EVENT_DATA_ARGS_DELIMITER);","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"crabnuggets"},"content":"        String eventTitle \u003d eventDetails[INDEX_OF_TITLE];","lastModifiedDate":"2021-10-06"},{"lineNumber":22,"author":{"gitId":"Alvinlj00"},"content":"        String eventStatus \u003d eventDetails[INDEX_OF_STATUS];","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"Alvinlj00"},"content":"        String eventDescription \u003d eventDetails[INDEX_OF_DESCRIPTION];","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"crabnuggets"},"content":"        LocalDateTime eventDateTime \u003d Parser.convertDateTimeForLoading(eventDetails[INDEX_OF_DATETIME]);","lastModifiedDate":"2021-11-07"},{"lineNumber":25,"author":{"gitId":"crabnuggets"},"content":"        String eventVenue \u003d eventDetails[INDEX_OF_VENUE];","lastModifiedDate":"2021-10-06"},{"lineNumber":26,"author":{"gitId":"crabnuggets"},"content":"        double eventBudget \u003d Double.parseDouble(eventDetails[INDEX_OF_BUDGET]);","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":28,"author":{"gitId":"Alvinlj00"},"content":"        Event event \u003d new Event(eventTitle, eventDescription, eventDateTime, eventVenue, eventBudget);","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"Alvinlj00"},"content":"        if (eventStatus.equals(\"X\")) {","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"Alvinlj00"},"content":"            event.markAsDone();","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"Alvinlj00"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"Alvinlj00"},"content":"        return event;","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"crabnuggets"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":34,"author":{"gitId":"crabnuggets"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"Alvinlj00":8,"crabnuggets":26}},{"path":"src/main/java/seedu/duke/storage/EventEncoder.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"crabnuggets"},"content":"package seedu.duke.storage;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"crabnuggets"},"content":"import seedu.duke.parser.Parser;","lastModifiedDate":"2021-10-23"},{"lineNumber":4,"author":{"gitId":"crabnuggets"},"content":"import seedu.duke.items.Event;","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"crabnuggets"},"content":"import seedu.duke.items.Task;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"crabnuggets"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"crabnuggets"},"content":"import java.util.List;","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"crabnuggets"},"content":"public class EventEncoder {","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"crabnuggets"},"content":"    protected static List\u003cString\u003e encodeEventsList(ArrayList\u003cEvent\u003e eventsToSave) {","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"crabnuggets"},"content":"        List\u003cString\u003e encodedEvents \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"crabnuggets"},"content":"        eventsToSave.forEach(event -\u003e encodedEvents.addAll(encodeEventToString(event)));","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"crabnuggets"},"content":"        return encodedEvents;","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"crabnuggets"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"crabnuggets"},"content":"    private static List\u003cString\u003e encodeEventToString(Event event) {","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"crabnuggets"},"content":"        List\u003cString\u003e encodedEvent \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"crabnuggets"},"content":"        encodedEvent.add(\"e | \"","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"crabnuggets"},"content":"                + event.getTitle()","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"Alvinlj00"},"content":"                + \" | \"","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"Alvinlj00"},"content":"                + event.getStatusIcon()","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"crabnuggets"},"content":"                + \" | \"","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"crabnuggets"},"content":"                + event.getDescription()","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"crabnuggets"},"content":"                + \" | \"","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"Alvinlj00"},"content":"                + Parser.convertDateTimeForSaving(event.getDateTime())","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"crabnuggets"},"content":"                + \" | \"","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"crabnuggets"},"content":"                + event.getVenue()","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"crabnuggets"},"content":"                + \" | \"","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"crabnuggets"},"content":"                + event.getBudget());","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"crabnuggets"},"content":"        // Append the additional subtasks to the current event as new lines","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"crabnuggets"},"content":"        List\u003cString\u003e encodedSubTasks \u003d encodeSubTasksToString(event);","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"crabnuggets"},"content":"        encodedEvent.addAll(encodedSubTasks);","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":37,"author":{"gitId":"crabnuggets"},"content":"        return encodedEvent;","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"crabnuggets"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"crabnuggets"},"content":"    private static List\u003cString\u003e encodeSubTasksToString(Event event) {","lastModifiedDate":"2021-10-19"},{"lineNumber":41,"author":{"gitId":"crabnuggets"},"content":"        ArrayList\u003cTask\u003e tasksToEncode \u003d event.getTaskList();","lastModifiedDate":"2021-10-19"},{"lineNumber":42,"author":{"gitId":"crabnuggets"},"content":"        return TaskEncoder.encodeTasksList(tasksToEncode);","lastModifiedDate":"2021-10-19"},{"lineNumber":43,"author":{"gitId":"crabnuggets"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":44,"author":{"gitId":"crabnuggets"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"Alvinlj00":3,"crabnuggets":41}},{"path":"src/main/java/seedu/duke/storage/MemberDecoder.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"crabnuggets"},"content":"package seedu.duke.storage;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"crabnuggets"},"content":"import seedu.duke.items.characteristics.Member;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"crabnuggets"},"content":"import seedu.duke.parser.MemberParser;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"crabnuggets"},"content":"public class MemberDecoder {","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"crabnuggets"},"content":"    // Index 0 is reserved for indicator of event/task","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"crabnuggets"},"content":"    private static final int INDEX_OF_NAME \u003d 1;","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"crabnuggets"},"content":"    protected static Member decodeMemberFromString(String encodedMember) {","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"crabnuggets"},"content":"        String[] memberDetails \u003d encodedMember.trim().split(Member.MEMBER_DATA_ARGS_DELIMITER);","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"crabnuggets"},"content":"        String unformattedName \u003d memberDetails[INDEX_OF_NAME];","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"crabnuggets"},"content":"        // Replace the \"_\" in the unformatted name with proper whitespaces.","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"crabnuggets"},"content":"        String formattedName \u003d MemberParser.parseMemberCommand(unformattedName)[0];","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"crabnuggets"},"content":"        return new Member(formattedName);","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"crabnuggets"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"crabnuggets"},"content":"}","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"crabnuggets":19}},{"path":"src/main/java/seedu/duke/storage/MemberEncoder.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"crabnuggets"},"content":"package seedu.duke.storage;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"crabnuggets"},"content":"import seedu.duke.items.characteristics.Member;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"crabnuggets"},"content":"import seedu.duke.items.mainlists.MemberRoster;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"crabnuggets"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"crabnuggets"},"content":"import java.util.List;","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"crabnuggets"},"content":"public class MemberEncoder {","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"crabnuggets"},"content":"    private static final String INTER_MEMBER_DELIMITER \u003d \" +\";","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"crabnuggets"},"content":"    private static final String NAME_SPACER \u003d \"_\";","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"crabnuggets"},"content":"    protected static List\u003cString\u003e encodeMembersList(MemberRoster membersToSave) {","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"crabnuggets"},"content":"        List\u003cString\u003e encodedMembers \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"crabnuggets"},"content":"        membersToSave.forEach(member -\u003e encodedMembers.add(encodeMemberToString(member)));","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"crabnuggets"},"content":"        return encodedMembers;","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"crabnuggets"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"crabnuggets"},"content":"    protected static String encodeMemberNameToString(Member member) {","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"crabnuggets"},"content":"        String name \u003d member.getName();","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"crabnuggets"},"content":"        name \u003d name.replaceAll(INTER_MEMBER_DELIMITER, NAME_SPACER);","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"crabnuggets"},"content":"        return name;","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"crabnuggets"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"crabnuggets"},"content":"    private static String encodeMemberToString(Member member) {","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"crabnuggets"},"content":"        return \"m | \" + encodeMemberNameToString(member);","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"crabnuggets"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"crabnuggets"},"content":"}","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"crabnuggets":29}},{"path":"src/main/java/seedu/duke/storage/StorageFile.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"crabnuggets"},"content":"package seedu.duke.storage;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"crabnuggets"},"content":"import seedu.duke.Ui;","lastModifiedDate":"2021-11-07"},{"lineNumber":4,"author":{"gitId":"crabnuggets"},"content":"import seedu.duke.exceptions.DukeException;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"crabnuggets"},"content":"import seedu.duke.items.Task;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"crabnuggets"},"content":"import seedu.duke.items.characteristics.Member;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"Alvinlj00"},"content":"import seedu.duke.items.mainlists.EventCatalog;","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"crabnuggets"},"content":"import seedu.duke.items.mainlists.MemberRoster;","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"crabnuggets"},"content":"import java.io.File;","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"crabnuggets"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"crabnuggets"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"crabnuggets"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"crabnuggets"},"content":"import java.nio.file.Files;","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"crabnuggets"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"crabnuggets"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-11-07"},{"lineNumber":17,"author":{"gitId":"crabnuggets"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"crabnuggets"},"content":"import java.util.List;","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"crabnuggets"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"crabnuggets"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"crabnuggets"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"crabnuggets"},"content":"public class StorageFile {","lastModifiedDate":"2021-10-06"},{"lineNumber":24,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"crabnuggets"},"content":"    private static final String DEFAULT_FILE_PATH \u003d \"data/slamData.txt\";","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"crabnuggets"},"content":"    private static final String DEFAULT_DIRECTORY \u003d \"data\";","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"crabnuggets"},"content":"    private static final Logger logger \u003d Logger.getLogger(\"Duke logger\");","lastModifiedDate":"2021-11-07"},{"lineNumber":28,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":29,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"crabnuggets"},"content":"    public void save(MemberRoster memberRoster, EventCatalog eventCatalog) {","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"crabnuggets"},"content":"        File saveFile \u003d new File(DEFAULT_FILE_PATH);","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"crabnuggets"},"content":"        checkFileIsValid(saveFile);","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"crabnuggets"},"content":"        List\u003cString\u003e encodedMembersList \u003d MemberEncoder.encodeMembersList(memberRoster);","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"crabnuggets"},"content":"        List\u003cString\u003e encodedEventsList \u003d EventEncoder.encodeEventsList(eventCatalog);","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"crabnuggets"},"content":"        try {","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"crabnuggets"},"content":"            writeToFile(saveFile, encodedMembersList, encodedEventsList);","lastModifiedDate":"2021-10-24"},{"lineNumber":38,"author":{"gitId":"crabnuggets"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"crabnuggets"},"content":"            System.out.println(\"Error writing to file at path: \" + DEFAULT_FILE_PATH);","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"crabnuggets"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"crabnuggets"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"crabnuggets"},"content":"    private static void checkFileIsValid(File saveFile) {","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":45,"author":{"gitId":"crabnuggets"},"content":"        try {","lastModifiedDate":"2021-10-07"},{"lineNumber":46,"author":{"gitId":"crabnuggets"},"content":"            if (!saveFile.exists()) {","lastModifiedDate":"2021-10-07"},{"lineNumber":47,"author":{"gitId":"crabnuggets"},"content":"                Files.createDirectories(Path.of(DEFAULT_DIRECTORY));","lastModifiedDate":"2021-10-07"},{"lineNumber":48,"author":{"gitId":"crabnuggets"},"content":"                Files.createFile(Path.of(DEFAULT_FILE_PATH));","lastModifiedDate":"2021-10-07"},{"lineNumber":49,"author":{"gitId":"crabnuggets"},"content":"            }","lastModifiedDate":"2021-10-07"},{"lineNumber":50,"author":{"gitId":"crabnuggets"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-10-07"},{"lineNumber":51,"author":{"gitId":"crabnuggets"},"content":"            System.out.println(\"Error with default directory/file_path.\");","lastModifiedDate":"2021-10-07"},{"lineNumber":52,"author":{"gitId":"crabnuggets"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":53,"author":{"gitId":"crabnuggets"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":54,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":55,"author":{"gitId":"crabnuggets"},"content":"    private void writeToFile(File saveFile, List\u003cString\u003e encodedMembersList, List\u003cString\u003e encodedEventsList)","lastModifiedDate":"2021-10-24"},{"lineNumber":56,"author":{"gitId":"crabnuggets"},"content":"            throws IOException {","lastModifiedDate":"2021-10-07"},{"lineNumber":57,"author":{"gitId":"crabnuggets"},"content":"        FileWriter membersWriter \u003d new FileWriter(saveFile);","lastModifiedDate":"2021-10-24"},{"lineNumber":58,"author":{"gitId":"crabnuggets"},"content":"        for (String member : encodedMembersList) {","lastModifiedDate":"2021-10-24"},{"lineNumber":59,"author":{"gitId":"crabnuggets"},"content":"            membersWriter.write(member + \"\\n\");","lastModifiedDate":"2021-10-24"},{"lineNumber":60,"author":{"gitId":"crabnuggets"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":61,"author":{"gitId":"crabnuggets"},"content":"        membersWriter.close();","lastModifiedDate":"2021-10-24"},{"lineNumber":62,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":63,"author":{"gitId":"crabnuggets"},"content":"        FileWriter eventsWriter \u003d new FileWriter(saveFile, true);","lastModifiedDate":"2021-10-24"},{"lineNumber":64,"author":{"gitId":"crabnuggets"},"content":"        for (String item : encodedEventsList) {","lastModifiedDate":"2021-10-19"},{"lineNumber":65,"author":{"gitId":"crabnuggets"},"content":"            eventsWriter.write(item + \"\\n\");","lastModifiedDate":"2021-10-19"},{"lineNumber":66,"author":{"gitId":"crabnuggets"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":67,"author":{"gitId":"crabnuggets"},"content":"        eventsWriter.close();","lastModifiedDate":"2021-10-07"},{"lineNumber":68,"author":{"gitId":"crabnuggets"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":69,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":70,"author":{"gitId":"crabnuggets"},"content":"    public void loadSaveFile(MemberRoster memberRoster, EventCatalog eventCatalog) {","lastModifiedDate":"2021-11-07"},{"lineNumber":71,"author":{"gitId":"crabnuggets"},"content":"        File saveFile \u003d new File(DEFAULT_FILE_PATH);","lastModifiedDate":"2021-10-07"},{"lineNumber":72,"author":{"gitId":"crabnuggets"},"content":"        List\u003cString\u003e encodedLines \u003d getStringsFromFile(saveFile);","lastModifiedDate":"2021-10-24"},{"lineNumber":73,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":74,"author":{"gitId":"crabnuggets"},"content":"        assert encodedLines.isEmpty() || encodedLines.get(0).startsWith(\"m\")","lastModifiedDate":"2021-10-24"},{"lineNumber":75,"author":{"gitId":"crabnuggets"},"content":"                : \"First String in list should be a Member\";","lastModifiedDate":"2021-10-24"},{"lineNumber":76,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":77,"author":{"gitId":"crabnuggets"},"content":"        String line \u003d \"\";","lastModifiedDate":"2021-11-07"},{"lineNumber":78,"author":{"gitId":"crabnuggets"},"content":"        try {","lastModifiedDate":"2021-11-07"},{"lineNumber":79,"author":{"gitId":"crabnuggets"},"content":"            for (String encodedLine : encodedLines) {","lastModifiedDate":"2021-11-07"},{"lineNumber":80,"author":{"gitId":"crabnuggets"},"content":"                line \u003d encodedLine.trim();","lastModifiedDate":"2021-11-07"},{"lineNumber":81,"author":{"gitId":"crabnuggets"},"content":"                char classType \u003d line.charAt(0);","lastModifiedDate":"2021-10-24"},{"lineNumber":82,"author":{"gitId":"crabnuggets"},"content":"                switch (classType) {","lastModifiedDate":"2021-10-24"},{"lineNumber":83,"author":{"gitId":"crabnuggets"},"content":"                case \u0027m\u0027:","lastModifiedDate":"2021-10-24"},{"lineNumber":84,"author":{"gitId":"crabnuggets"},"content":"                    memberRoster.add(MemberDecoder.decodeMemberFromString(line));","lastModifiedDate":"2021-10-24"},{"lineNumber":85,"author":{"gitId":"crabnuggets"},"content":"                    break;","lastModifiedDate":"2021-10-24"},{"lineNumber":86,"author":{"gitId":"crabnuggets"},"content":"                case \u0027e\u0027:","lastModifiedDate":"2021-10-24"},{"lineNumber":87,"author":{"gitId":"crabnuggets"},"content":"                    eventCatalog.add(EventDecoder.decodeEventFromString(line));","lastModifiedDate":"2021-10-24"},{"lineNumber":88,"author":{"gitId":"crabnuggets"},"content":"                    break;","lastModifiedDate":"2021-10-24"},{"lineNumber":89,"author":{"gitId":"crabnuggets"},"content":"                case \u0027t\u0027:","lastModifiedDate":"2021-10-24"},{"lineNumber":90,"author":{"gitId":"crabnuggets"},"content":"                    Task decodedTask \u003d TaskDecoder.decodeTaskFromString(line);","lastModifiedDate":"2021-11-07"},{"lineNumber":91,"author":{"gitId":"crabnuggets"},"content":"                    // Within the parent event, update its list of tasks","lastModifiedDate":"2021-11-07"},{"lineNumber":92,"author":{"gitId":"crabnuggets"},"content":"                    decodedTask.getEvent().addToTaskList(decodedTask);","lastModifiedDate":"2021-11-07"},{"lineNumber":93,"author":{"gitId":"crabnuggets"},"content":"                    // Within each member in the member roster that contains this task, add this task to their task list","lastModifiedDate":"2021-11-07"},{"lineNumber":94,"author":{"gitId":"crabnuggets"},"content":"                    updateMemberTasks(decodedTask, memberRoster);","lastModifiedDate":"2021-11-07"},{"lineNumber":95,"author":{"gitId":"crabnuggets"},"content":"                    break;","lastModifiedDate":"2021-10-24"},{"lineNumber":96,"author":{"gitId":"crabnuggets"},"content":"                default:","lastModifiedDate":"2021-10-24"},{"lineNumber":97,"author":{"gitId":"crabnuggets"},"content":"                    throw new DukeException(\"Invalid flag at start of line.\");","lastModifiedDate":"2021-11-07"},{"lineNumber":98,"author":{"gitId":"crabnuggets"},"content":"                }","lastModifiedDate":"2021-10-19"},{"lineNumber":99,"author":{"gitId":"crabnuggets"},"content":"            }","lastModifiedDate":"2021-10-19"},{"lineNumber":100,"author":{"gitId":"crabnuggets"},"content":"        } catch (NumberFormatException | IndexOutOfBoundsException | DateTimeParseException | DukeException e) {","lastModifiedDate":"2021-11-07"},{"lineNumber":101,"author":{"gitId":"crabnuggets"},"content":"            System.out.println(\"Oh no seems like the save data is corrupted! Previous data will be overwritten :(\\n\"","lastModifiedDate":"2021-11-07"},{"lineNumber":102,"author":{"gitId":"crabnuggets"},"content":"                    + \"Corrupted data occurs in the following line in slamData.txt:\\n\\n\"","lastModifiedDate":"2021-11-07"},{"lineNumber":103,"author":{"gitId":"crabnuggets"},"content":"                    + line);","lastModifiedDate":"2021-11-07"},{"lineNumber":104,"author":{"gitId":"crabnuggets"},"content":"            if (e instanceof DukeException) {","lastModifiedDate":"2021-11-07"},{"lineNumber":105,"author":{"gitId":"crabnuggets"},"content":"                System.out.println(\"Additional info: \" + e.getMessage() + System.lineSeparator());","lastModifiedDate":"2021-11-07"},{"lineNumber":106,"author":{"gitId":"crabnuggets"},"content":"            } else {","lastModifiedDate":"2021-11-07"},{"lineNumber":107,"author":{"gitId":"crabnuggets"},"content":"                System.out.println();","lastModifiedDate":"2021-11-07"},{"lineNumber":108,"author":{"gitId":"crabnuggets"},"content":"            }","lastModifiedDate":"2021-11-07"},{"lineNumber":109,"author":{"gitId":"crabnuggets"},"content":"            System.out.println(\"Data prior to the above line is loaded!\\n\"","lastModifiedDate":"2021-11-07"},{"lineNumber":110,"author":{"gitId":"crabnuggets"},"content":"                    + \"Please terminate SLAM by entering \u003cctrl + c\u003e and fix the save file before restarting.\\n\"","lastModifiedDate":"2021-11-07"},{"lineNumber":111,"author":{"gitId":"crabnuggets"},"content":"                    + \"Otherwise, performing commands will cause data from that line onwards to be lost!\\n\");","lastModifiedDate":"2021-11-07"},{"lineNumber":112,"author":{"gitId":"crabnuggets"},"content":"            logger.log(Level.INFO, \"File format error\", e);","lastModifiedDate":"2021-11-07"},{"lineNumber":113,"author":{"gitId":"crabnuggets"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":114,"author":{"gitId":"crabnuggets"},"content":"        Ui.printLoadSuccesfulMessage();","lastModifiedDate":"2021-11-07"},{"lineNumber":115,"author":{"gitId":"crabnuggets"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":116,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":117,"author":{"gitId":"crabnuggets"},"content":"    private void updateMemberTasks(Task task, MemberRoster memberRoster) {","lastModifiedDate":"2021-10-24"},{"lineNumber":118,"author":{"gitId":"crabnuggets"},"content":"        for (Member member : task.memberList) {","lastModifiedDate":"2021-10-24"},{"lineNumber":119,"author":{"gitId":"crabnuggets"},"content":"            memberRoster.stream()","lastModifiedDate":"2021-10-24"},{"lineNumber":120,"author":{"gitId":"crabnuggets"},"content":"                    .filter(m -\u003e m.getName().equals(member.getName()))","lastModifiedDate":"2021-10-24"},{"lineNumber":121,"author":{"gitId":"crabnuggets"},"content":"                    .forEach(m -\u003e m.addTask(task));","lastModifiedDate":"2021-10-24"},{"lineNumber":122,"author":{"gitId":"crabnuggets"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":123,"author":{"gitId":"crabnuggets"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":124,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":125,"author":{"gitId":"crabnuggets"},"content":"    private List\u003cString\u003e getStringsFromFile(File saveFile) {","lastModifiedDate":"2021-11-07"},{"lineNumber":126,"author":{"gitId":"crabnuggets"},"content":"        List\u003cString\u003e encodedItems \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-19"},{"lineNumber":127,"author":{"gitId":"crabnuggets"},"content":"        try {","lastModifiedDate":"2021-11-07"},{"lineNumber":128,"author":{"gitId":"crabnuggets"},"content":"            Scanner myScanner \u003d new Scanner(saveFile);","lastModifiedDate":"2021-10-07"},{"lineNumber":129,"author":{"gitId":"crabnuggets"},"content":"            while (myScanner.hasNextLine()) {","lastModifiedDate":"2021-10-07"},{"lineNumber":130,"author":{"gitId":"crabnuggets"},"content":"                String data \u003d myScanner.nextLine();","lastModifiedDate":"2021-10-07"},{"lineNumber":131,"author":{"gitId":"crabnuggets"},"content":"                encodedItems.add(data);","lastModifiedDate":"2021-10-19"},{"lineNumber":132,"author":{"gitId":"crabnuggets"},"content":"            }","lastModifiedDate":"2021-10-07"},{"lineNumber":133,"author":{"gitId":"crabnuggets"},"content":"            Ui.printLoadingMessage();","lastModifiedDate":"2021-11-07"},{"lineNumber":134,"author":{"gitId":"crabnuggets"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-11-07"},{"lineNumber":135,"author":{"gitId":"crabnuggets"},"content":"            System.out.println(\"Oooh a new user!\");","lastModifiedDate":"2021-11-07"},{"lineNumber":136,"author":{"gitId":"crabnuggets"},"content":"        }","lastModifiedDate":"2021-11-07"},{"lineNumber":137,"author":{"gitId":"crabnuggets"},"content":"        return encodedItems;","lastModifiedDate":"2021-10-19"},{"lineNumber":138,"author":{"gitId":"crabnuggets"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":139,"author":{"gitId":"crabnuggets"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"Alvinlj00":1,"crabnuggets":138}},{"path":"src/main/java/seedu/duke/storage/TaskDecoder.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"crabnuggets"},"content":"package seedu.duke.storage;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"crabnuggets"},"content":"import seedu.duke.Duke;","lastModifiedDate":"2021-11-04"},{"lineNumber":4,"author":{"gitId":"crabnuggets"},"content":"import seedu.duke.exceptions.DukeException;","lastModifiedDate":"2021-10-31"},{"lineNumber":5,"author":{"gitId":"crabnuggets"},"content":"import seedu.duke.items.Event;","lastModifiedDate":"2021-11-04"},{"lineNumber":6,"author":{"gitId":"crabnuggets"},"content":"import seedu.duke.items.characteristics.Member;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"crabnuggets"},"content":"import seedu.duke.items.mainlists.MemberRoster;","lastModifiedDate":"2021-11-07"},{"lineNumber":8,"author":{"gitId":"crabnuggets"},"content":"import seedu.duke.parser.MemberParser;","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"crabnuggets"},"content":"import seedu.duke.parser.Parser;","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"crabnuggets"},"content":"import seedu.duke.items.Task;","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"Alvinlj00"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"crabnuggets"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"crabnuggets"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-11-07"},{"lineNumber":15,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"crabnuggets"},"content":"public class TaskDecoder {","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"crabnuggets"},"content":"    // Index 0 is reserved for indicator for event/task","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"crabnuggets"},"content":"    private static final int INDEX_OF_TILE \u003d 1;","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"crabnuggets"},"content":"    private static final int INDEX_OF_STATUS \u003d 2;","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"crabnuggets"},"content":"    private static final int INDEX_OF_DESCRIPTION \u003d 3;","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"crabnuggets"},"content":"    private static final int INDEX_OF_DEADLINE \u003d 4;","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"crabnuggets"},"content":"    private static final int INDEX_OF_MEMBERS \u003d 5;","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"crabnuggets"},"content":"    private static final int INDEX_OF_PARENT_EVENT_INDEX \u003d 6;","lastModifiedDate":"2021-11-04"},{"lineNumber":25,"author":{"gitId":"crabnuggets"},"content":"    private static final int INDEX_OF_PARENT_EVENT_TITLE \u003d 7;","lastModifiedDate":"2021-11-04"},{"lineNumber":26,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":27,"author":{"gitId":"crabnuggets"},"content":"    protected static Task decodeTaskFromString(String encodedTask) throws DukeException {","lastModifiedDate":"2021-10-31"},{"lineNumber":28,"author":{"gitId":"crabnuggets"},"content":"        String[] taskDetails \u003d encodedTask.trim().split(Task.TASK_DATA_ARGS_DELIMITER);","lastModifiedDate":"2021-10-06"},{"lineNumber":29,"author":{"gitId":"crabnuggets"},"content":"        String taskTitle \u003d taskDetails[INDEX_OF_TILE];","lastModifiedDate":"2021-10-06"},{"lineNumber":30,"author":{"gitId":"Alvinlj00"},"content":"        String taskStatus \u003d taskDetails[INDEX_OF_STATUS];","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"crabnuggets"},"content":"        String taskDescription \u003d taskDetails[INDEX_OF_DESCRIPTION];","lastModifiedDate":"2021-10-06"},{"lineNumber":32,"author":{"gitId":"crabnuggets"},"content":"        LocalDateTime taskDeadline \u003d Parser.convertDateTimeForLoading(taskDetails[INDEX_OF_DEADLINE]);","lastModifiedDate":"2021-11-04"},{"lineNumber":33,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":34,"author":{"gitId":"crabnuggets"},"content":"        ArrayList\u003cMember\u003e membersList \u003d decodeAssignedMembers(taskDetails[INDEX_OF_MEMBERS]);","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"crabnuggets"},"content":"        boolean isMembersListVerified \u003d verifyMemberListWithMainRoster(membersList, Duke.memberRoster);","lastModifiedDate":"2021-11-07"},{"lineNumber":36,"author":{"gitId":"crabnuggets"},"content":"        if (!isMembersListVerified) {","lastModifiedDate":"2021-11-07"},{"lineNumber":37,"author":{"gitId":"crabnuggets"},"content":"            throw new DukeException(\"Members in this task are not present in the member roster.\");","lastModifiedDate":"2021-11-07"},{"lineNumber":38,"author":{"gitId":"crabnuggets"},"content":"        }","lastModifiedDate":"2021-11-07"},{"lineNumber":39,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":40,"author":{"gitId":"crabnuggets"},"content":"        String titleOfParentEvent \u003d taskDetails[INDEX_OF_PARENT_EVENT_TITLE];","lastModifiedDate":"2021-11-04"},{"lineNumber":41,"author":{"gitId":"crabnuggets"},"content":"        int indexOfParentEvent \u003d Integer.parseInt(taskDetails[INDEX_OF_PARENT_EVENT_INDEX]);","lastModifiedDate":"2021-11-04"},{"lineNumber":42,"author":{"gitId":"crabnuggets"},"content":"        boolean isParentEventVerified \u003d verifyParentEvent(titleOfParentEvent, indexOfParentEvent);","lastModifiedDate":"2021-11-04"},{"lineNumber":43,"author":{"gitId":"crabnuggets"},"content":"        if (!isParentEventVerified) {","lastModifiedDate":"2021-11-04"},{"lineNumber":44,"author":{"gitId":"crabnuggets"},"content":"            throw new DukeException(\"Associated event for the task is not valid or loaded in yet.\");","lastModifiedDate":"2021-11-07"},{"lineNumber":45,"author":{"gitId":"crabnuggets"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":46,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":47,"author":{"gitId":"crabnuggets"},"content":"        Event parentEvent \u003d Duke.eventCatalog.get(indexOfParentEvent);","lastModifiedDate":"2021-11-04"},{"lineNumber":48,"author":{"gitId":"crabnuggets"},"content":"        Task task \u003d new Task(taskTitle, taskDescription, taskDeadline, membersList, parentEvent);","lastModifiedDate":"2021-11-04"},{"lineNumber":49,"author":{"gitId":"Alvinlj00"},"content":"        if (taskStatus.equals(\"X\")) {","lastModifiedDate":"2021-10-11"},{"lineNumber":50,"author":{"gitId":"Alvinlj00"},"content":"            task.markAsDone();","lastModifiedDate":"2021-10-11"},{"lineNumber":51,"author":{"gitId":"Alvinlj00"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":52,"author":{"gitId":"Alvinlj00"},"content":"        return task;","lastModifiedDate":"2021-10-11"},{"lineNumber":53,"author":{"gitId":"crabnuggets"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":54,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":55,"author":{"gitId":"crabnuggets"},"content":"    private static ArrayList\u003cMember\u003e decodeAssignedMembers(String encodedMembers) {","lastModifiedDate":"2021-10-24"},{"lineNumber":56,"author":{"gitId":"crabnuggets"},"content":"        String[] formattedMemberNamesInString \u003d MemberParser.parseMemberCommand(encodedMembers);","lastModifiedDate":"2021-10-24"},{"lineNumber":57,"author":{"gitId":"crabnuggets"},"content":"        ArrayList\u003cMember\u003e membersList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-24"},{"lineNumber":58,"author":{"gitId":"crabnuggets"},"content":"        for (String name : formattedMemberNamesInString) {","lastModifiedDate":"2021-10-24"},{"lineNumber":59,"author":{"gitId":"crabnuggets"},"content":"            // If the member in the member roster matches the decoded name, assign this member to the task","lastModifiedDate":"2021-11-08"},{"lineNumber":60,"author":{"gitId":"crabnuggets"},"content":"            for (Member member : Duke.memberRoster) {","lastModifiedDate":"2021-11-08"},{"lineNumber":61,"author":{"gitId":"crabnuggets"},"content":"                if (member.getName().equals(name)) {","lastModifiedDate":"2021-11-08"},{"lineNumber":62,"author":{"gitId":"crabnuggets"},"content":"                    membersList.add(member);","lastModifiedDate":"2021-11-08"},{"lineNumber":63,"author":{"gitId":"crabnuggets"},"content":"                }","lastModifiedDate":"2021-11-08"},{"lineNumber":64,"author":{"gitId":"crabnuggets"},"content":"            }","lastModifiedDate":"2021-11-08"},{"lineNumber":65,"author":{"gitId":"crabnuggets"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":66,"author":{"gitId":"crabnuggets"},"content":"        return membersList;","lastModifiedDate":"2021-10-24"},{"lineNumber":67,"author":{"gitId":"crabnuggets"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":68,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":69,"author":{"gitId":"crabnuggets"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":70,"author":{"gitId":"crabnuggets"},"content":"     * This method verifies whether the saved title of the parent event is the same as the one currently loaded","lastModifiedDate":"2021-11-04"},{"lineNumber":71,"author":{"gitId":"crabnuggets"},"content":"     * in the main event catalog.","lastModifiedDate":"2021-11-04"},{"lineNumber":72,"author":{"gitId":"crabnuggets"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":73,"author":{"gitId":"crabnuggets"},"content":"     * @param titleOfParentEvent The title of the saved parent event in slamData.txt","lastModifiedDate":"2021-11-04"},{"lineNumber":74,"author":{"gitId":"crabnuggets"},"content":"     * @param indexOfParentEvent The title of the actual event the task is supposed to be associated with in the main","lastModifiedDate":"2021-11-04"},{"lineNumber":75,"author":{"gitId":"crabnuggets"},"content":"     *                           event catalog","lastModifiedDate":"2021-11-04"},{"lineNumber":76,"author":{"gitId":"crabnuggets"},"content":"     * @return True if they are the same. False otherwise.","lastModifiedDate":"2021-11-04"},{"lineNumber":77,"author":{"gitId":"crabnuggets"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":78,"author":{"gitId":"crabnuggets"},"content":"    private static boolean verifyParentEvent(String titleOfParentEvent, int indexOfParentEvent) {","lastModifiedDate":"2021-11-04"},{"lineNumber":79,"author":{"gitId":"crabnuggets"},"content":"        if (indexOfParentEvent \u003c 0 || indexOfParentEvent \u003e Duke.eventCatalog.size() - 1) {","lastModifiedDate":"2021-11-07"},{"lineNumber":80,"author":{"gitId":"crabnuggets"},"content":"            return false;","lastModifiedDate":"2021-11-07"},{"lineNumber":81,"author":{"gitId":"crabnuggets"},"content":"        }","lastModifiedDate":"2021-11-07"},{"lineNumber":82,"author":{"gitId":"crabnuggets"},"content":"        Event parentEvent \u003d Duke.eventCatalog.get(indexOfParentEvent);","lastModifiedDate":"2021-11-04"},{"lineNumber":83,"author":{"gitId":"crabnuggets"},"content":"        String actualTitleOfParentEvent \u003d parentEvent.getTitle();","lastModifiedDate":"2021-11-04"},{"lineNumber":84,"author":{"gitId":"crabnuggets"},"content":"        return titleOfParentEvent.equals(actualTitleOfParentEvent);","lastModifiedDate":"2021-11-04"},{"lineNumber":85,"author":{"gitId":"crabnuggets"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":86,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":87,"author":{"gitId":"crabnuggets"},"content":"    /**","lastModifiedDate":"2021-11-07"},{"lineNumber":88,"author":{"gitId":"crabnuggets"},"content":"     * This method verifies whether the saved members assigned to the task exist in the provided member roster.","lastModifiedDate":"2021-11-07"},{"lineNumber":89,"author":{"gitId":"crabnuggets"},"content":"     * This is achieved by checking whether each member exists in the member roster through their name and adding it","lastModifiedDate":"2021-11-07"},{"lineNumber":90,"author":{"gitId":"crabnuggets"},"content":"     * to a list. The size of this list after each member is checked to see whether it matches the size of the","lastModifiedDate":"2021-11-07"},{"lineNumber":91,"author":{"gitId":"crabnuggets"},"content":"     * original list provided by the user.","lastModifiedDate":"2021-11-07"},{"lineNumber":92,"author":{"gitId":"crabnuggets"},"content":"     *","lastModifiedDate":"2021-11-07"},{"lineNumber":93,"author":{"gitId":"crabnuggets"},"content":"     * @param membersList The list of members assigned to the task","lastModifiedDate":"2021-11-07"},{"lineNumber":94,"author":{"gitId":"crabnuggets"},"content":"     * @return True if the members saved in the task exist in the provided member roster. False otherwise.","lastModifiedDate":"2021-11-07"},{"lineNumber":95,"author":{"gitId":"crabnuggets"},"content":"     */","lastModifiedDate":"2021-11-07"},{"lineNumber":96,"author":{"gitId":"crabnuggets"},"content":"    private static boolean verifyMemberListWithMainRoster(ArrayList\u003cMember\u003e membersList, MemberRoster memberRoster) {","lastModifiedDate":"2021-11-07"},{"lineNumber":97,"author":{"gitId":"crabnuggets"},"content":"        ArrayList\u003cMember\u003e filteredResults \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-11-07"},{"lineNumber":98,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":99,"author":{"gitId":"crabnuggets"},"content":"        for (Member member : membersList) {","lastModifiedDate":"2021-11-07"},{"lineNumber":100,"author":{"gitId":"crabnuggets"},"content":"            filteredResults.addAll(memberRoster.stream()","lastModifiedDate":"2021-11-07"},{"lineNumber":101,"author":{"gitId":"crabnuggets"},"content":"                    .filter(m -\u003e m.getName().equals(member.getName()))","lastModifiedDate":"2021-11-07"},{"lineNumber":102,"author":{"gitId":"crabnuggets"},"content":"                    .collect(Collectors.toList()));","lastModifiedDate":"2021-11-07"},{"lineNumber":103,"author":{"gitId":"crabnuggets"},"content":"        }","lastModifiedDate":"2021-11-07"},{"lineNumber":104,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":105,"author":{"gitId":"crabnuggets"},"content":"        // If all the members in the task are in the roster,","lastModifiedDate":"2021-11-07"},{"lineNumber":106,"author":{"gitId":"crabnuggets"},"content":"        return filteredResults.size() \u003d\u003d membersList.size();","lastModifiedDate":"2021-11-07"},{"lineNumber":107,"author":{"gitId":"crabnuggets"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":108,"author":{"gitId":"crabnuggets"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"Alvinlj00":6,"crabnuggets":102}},{"path":"src/main/java/seedu/duke/storage/TaskEncoder.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"crabnuggets"},"content":"package seedu.duke.storage;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"crabnuggets"},"content":"import seedu.duke.Duke;","lastModifiedDate":"2021-11-04"},{"lineNumber":4,"author":{"gitId":"crabnuggets"},"content":"import seedu.duke.items.mainlists.EventCatalog;","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"crabnuggets"},"content":"import seedu.duke.parser.Parser;","lastModifiedDate":"2021-10-23"},{"lineNumber":6,"author":{"gitId":"crabnuggets"},"content":"import seedu.duke.items.Task;","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"crabnuggets"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"crabnuggets"},"content":"import java.util.List;","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"crabnuggets"},"content":"public class TaskEncoder {","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"crabnuggets"},"content":"    protected static List\u003cString\u003e encodeTasksList(ArrayList\u003cTask\u003e tasksToSave) {","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"crabnuggets"},"content":"        List\u003cString\u003e encodedTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"crabnuggets"},"content":"        tasksToSave.forEach(task -\u003e encodedTasks.add(encodeTaskToString(task)));","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"crabnuggets"},"content":"        return encodedTasks;","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"crabnuggets"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"crabnuggets"},"content":"    private static String encodeTaskToString(Task task) {","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"crabnuggets"},"content":"        return \"t | \"","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"crabnuggets"},"content":"                + task.getTitle()","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"Alvinlj00"},"content":"                + \" | \"","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"Alvinlj00"},"content":"                + task.getStatusIcon()","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"crabnuggets"},"content":"                + \" | \"","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"crabnuggets"},"content":"                + task.getDescription()","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"crabnuggets"},"content":"                + \" | \"","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"crabnuggets"},"content":"                + Parser.convertDateTimeForSaving(task.getDateTime())","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"crabnuggets"},"content":"                + \" |\"","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"crabnuggets"},"content":"                + encodeMemberListToString(task)","lastModifiedDate":"2021-11-04"},{"lineNumber":30,"author":{"gitId":"crabnuggets"},"content":"                + \" | \"","lastModifiedDate":"2021-11-04"},{"lineNumber":31,"author":{"gitId":"crabnuggets"},"content":"                + Duke.eventCatalog.indexOf(task.getEvent())","lastModifiedDate":"2021-11-04"},{"lineNumber":32,"author":{"gitId":"crabnuggets"},"content":"                + \" | \"","lastModifiedDate":"2021-11-04"},{"lineNumber":33,"author":{"gitId":"crabnuggets"},"content":"                + task.getEvent().getTitle();","lastModifiedDate":"2021-11-04"},{"lineNumber":34,"author":{"gitId":"crabnuggets"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"crabnuggets"},"content":"    private static String encodeMemberListToString(Task task) {","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"crabnuggets"},"content":"        StringBuilder encodedMemberList \u003d new StringBuilder();","lastModifiedDate":"2021-10-24"},{"lineNumber":38,"author":{"gitId":"crabnuggets"},"content":"        task.memberList.forEach(member -\u003e encodedMemberList.append(\" \")","lastModifiedDate":"2021-10-24"},{"lineNumber":39,"author":{"gitId":"crabnuggets"},"content":"                .append(MemberEncoder.encodeMemberNameToString(member)));","lastModifiedDate":"2021-10-24"},{"lineNumber":40,"author":{"gitId":"crabnuggets"},"content":"        return encodedMemberList.toString();","lastModifiedDate":"2021-10-24"},{"lineNumber":41,"author":{"gitId":"crabnuggets"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"crabnuggets"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"Alvinlj00":2,"crabnuggets":40}},{"path":"src/test/java/seedu/duke/UiTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"crabnuggets"},"content":"package seedu.duke;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"crabnuggets"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"crabnuggets"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"crabnuggets"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"crabnuggets"},"content":"import seedu.duke.exceptions.DukeException;","lastModifiedDate":"2021-10-31"},{"lineNumber":7,"author":{"gitId":"crabnuggets"},"content":"import seedu.duke.items.Event;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"crabnuggets"},"content":"import seedu.duke.items.Item;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"crabnuggets"},"content":"import seedu.duke.items.Task;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"crabnuggets"},"content":"import seedu.duke.parser.Parser;","lastModifiedDate":"2021-10-23"},{"lineNumber":11,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"crabnuggets"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"crabnuggets"},"content":"import java.io.PrintStream;","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"crabnuggets"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"crabnuggets"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"crabnuggets"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"crabnuggets"},"content":"class UiTest {","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"crabnuggets"},"content":"    private final ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"crabnuggets"},"content":"    private final PrintStream originalOut \u003d System.out;","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"crabnuggets"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"crabnuggets"},"content":"    public void setUpStream() {","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"crabnuggets"},"content":"        System.setOut(new PrintStream(outContent));","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"crabnuggets"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"crabnuggets"},"content":"    @AfterEach","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"crabnuggets"},"content":"    public void restoreStream() {","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"crabnuggets"},"content":"        System.setOut(originalOut);","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"crabnuggets"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"crabnuggets"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"crabnuggets"},"content":"    void printList_listOfEvents_success() throws DukeException {","lastModifiedDate":"2021-10-31"},{"lineNumber":35,"author":{"gitId":"crabnuggets"},"content":"        // Setting up","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"crabnuggets"},"content":"        LocalDateTime event1DateTime \u003d Parser.convertDateTime(\"19-02-2022 2000\");","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"crabnuggets"},"content":"        Event event1 \u003d new Event(\"Peppa Pig\u0027s Concert\",","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"crabnuggets"},"content":"                \"Asia world tour\", event1DateTime,","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"crabnuggets"},"content":"                \"Indoor Stadium\", 1000.90);","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"crabnuggets"},"content":"        event1.markAsDone();","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"crabnuggets"},"content":"        LocalDateTime event2DateTime \u003d Parser.convertDateTime(\"20-02-2022 2030\");","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"crabnuggets"},"content":"        Event event2 \u003d new Event(\"Funfair\",","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"crabnuggets"},"content":"                \"For charity\", event2DateTime,","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"crabnuggets"},"content":"                \"Parade square\", 2000.10);","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"crabnuggets"},"content":"        ArrayList\u003cItem\u003e eventsList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"crabnuggets"},"content":"        eventsList.add(event1);","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"crabnuggets"},"content":"        eventsList.add(event2);","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"crabnuggets"},"content":"        Ui.printList(eventsList);","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"crabnuggets"},"content":"        String expectedOutput \u003d \"1. [E][X] Peppa Pig\u0027s Concert (at: 19 Feb 2022 - 20:00)\"","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"crabnuggets"},"content":"                + System.lineSeparator()","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"crabnuggets"},"content":"                + \"2. [E][ ] Funfair (at: 20 Feb 2022 - 20:30)\"","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"crabnuggets"},"content":"                + System.lineSeparator();","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"crabnuggets"},"content":"        assertEquals(expectedOutput, outContent.toString());","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"crabnuggets"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"crabnuggets"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"crabnuggets"},"content":"    void printList_listOfTasks_success() throws DukeException {","lastModifiedDate":"2021-10-31"},{"lineNumber":59,"author":{"gitId":"crabnuggets"},"content":"        // Setting up","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"crabnuggets"},"content":"        LocalDateTime task1Deadline \u003d Parser.convertDateTime(\"19-02-2022 2359\");","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"crabnuggets"},"content":"        Task task1 \u003d new Task(\"Do homework\", \"CS2113T tp V1.0\", task1Deadline);","lastModifiedDate":"2021-10-12"},{"lineNumber":62,"author":{"gitId":"crabnuggets"},"content":"        task1.markAsDone();","lastModifiedDate":"2021-10-12"},{"lineNumber":63,"author":{"gitId":"crabnuggets"},"content":"        LocalDateTime task2Deadline \u003d Parser.convertDateTime(\"19-02-2022 0800\");","lastModifiedDate":"2021-10-12"},{"lineNumber":64,"author":{"gitId":"crabnuggets"},"content":"        Task task2 \u003d new Task(\"Waking up\", \"This is difficult...\", task2Deadline);","lastModifiedDate":"2021-10-12"},{"lineNumber":65,"author":{"gitId":"crabnuggets"},"content":"        ArrayList\u003cItem\u003e tasksList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-12"},{"lineNumber":66,"author":{"gitId":"crabnuggets"},"content":"        tasksList.add(task1);","lastModifiedDate":"2021-10-12"},{"lineNumber":67,"author":{"gitId":"crabnuggets"},"content":"        tasksList.add(task2);","lastModifiedDate":"2021-10-12"},{"lineNumber":68,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":69,"author":{"gitId":"crabnuggets"},"content":"        Ui.printList(tasksList);","lastModifiedDate":"2021-10-12"},{"lineNumber":70,"author":{"gitId":"crabnuggets"},"content":"        String expectedOutput \u003d \"1. [T][X] Do homework (by: 19 Feb 2022 - 23:59)\"","lastModifiedDate":"2021-10-12"},{"lineNumber":71,"author":{"gitId":"crabnuggets"},"content":"                + System.lineSeparator()","lastModifiedDate":"2021-10-12"},{"lineNumber":72,"author":{"gitId":"crabnuggets"},"content":"                + \"2. [T][ ] Waking up (by: 19 Feb 2022 - 08:00)\"","lastModifiedDate":"2021-10-12"},{"lineNumber":73,"author":{"gitId":"crabnuggets"},"content":"                + System.lineSeparator();","lastModifiedDate":"2021-10-12"},{"lineNumber":74,"author":{"gitId":"crabnuggets"},"content":"        assertEquals(expectedOutput, outContent.toString());","lastModifiedDate":"2021-10-12"},{"lineNumber":75,"author":{"gitId":"crabnuggets"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":76,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":77,"author":{"gitId":"crabnuggets"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":78,"author":{"gitId":"crabnuggets"},"content":"    void printList_listOfEventsAndTasks_success() throws DukeException {","lastModifiedDate":"2021-10-31"},{"lineNumber":79,"author":{"gitId":"crabnuggets"},"content":"        // Setting up","lastModifiedDate":"2021-10-12"},{"lineNumber":80,"author":{"gitId":"crabnuggets"},"content":"        LocalDateTime eventDateTime \u003d Parser.convertDateTime(\"19-02-2022 2000\");","lastModifiedDate":"2021-10-12"},{"lineNumber":81,"author":{"gitId":"crabnuggets"},"content":"        Event event \u003d new Event(\"Peppa Pig\u0027s Concert\",","lastModifiedDate":"2021-10-12"},{"lineNumber":82,"author":{"gitId":"crabnuggets"},"content":"                \"Asia world tour\", eventDateTime,","lastModifiedDate":"2021-10-12"},{"lineNumber":83,"author":{"gitId":"crabnuggets"},"content":"                \"Indoor Stadium\", 1000.90);","lastModifiedDate":"2021-10-12"},{"lineNumber":84,"author":{"gitId":"crabnuggets"},"content":"        event.markAsDone();","lastModifiedDate":"2021-10-12"},{"lineNumber":85,"author":{"gitId":"crabnuggets"},"content":"        LocalDateTime taskDeadline \u003d Parser.convertDateTime(\"19-02-2022 2359\");","lastModifiedDate":"2021-10-12"},{"lineNumber":86,"author":{"gitId":"crabnuggets"},"content":"        Task task \u003d new Task(\"Do homework\", \"CS2113T tp V1.0\", taskDeadline);","lastModifiedDate":"2021-10-12"},{"lineNumber":87,"author":{"gitId":"crabnuggets"},"content":"        task.markAsDone();","lastModifiedDate":"2021-10-12"},{"lineNumber":88,"author":{"gitId":"crabnuggets"},"content":"        ArrayList\u003cItem\u003e combinedList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-12"},{"lineNumber":89,"author":{"gitId":"crabnuggets"},"content":"        combinedList.add(event);","lastModifiedDate":"2021-10-12"},{"lineNumber":90,"author":{"gitId":"crabnuggets"},"content":"        combinedList.add(task);","lastModifiedDate":"2021-10-12"},{"lineNumber":91,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":92,"author":{"gitId":"crabnuggets"},"content":"        Ui.printList(combinedList);","lastModifiedDate":"2021-10-12"},{"lineNumber":93,"author":{"gitId":"crabnuggets"},"content":"        String expectedOutput \u003d \"1. [E][X] Peppa Pig\u0027s Concert (at: 19 Feb 2022 - 20:00)\"","lastModifiedDate":"2021-10-12"},{"lineNumber":94,"author":{"gitId":"crabnuggets"},"content":"                + System.lineSeparator()","lastModifiedDate":"2021-10-12"},{"lineNumber":95,"author":{"gitId":"crabnuggets"},"content":"                + \"2. [T][X] Do homework (by: 19 Feb 2022 - 23:59)\"","lastModifiedDate":"2021-10-12"},{"lineNumber":96,"author":{"gitId":"crabnuggets"},"content":"                + System.lineSeparator();","lastModifiedDate":"2021-10-12"},{"lineNumber":97,"author":{"gitId":"crabnuggets"},"content":"        assertEquals(expectedOutput, outContent.toString());","lastModifiedDate":"2021-10-12"},{"lineNumber":98,"author":{"gitId":"crabnuggets"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":99,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":100,"author":{"gitId":"crabnuggets"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":101,"author":{"gitId":"crabnuggets"},"content":"    void printEvent_oneEvent_success() throws DukeException {","lastModifiedDate":"2021-10-31"},{"lineNumber":102,"author":{"gitId":"crabnuggets"},"content":"        // Setting up","lastModifiedDate":"2021-10-12"},{"lineNumber":103,"author":{"gitId":"crabnuggets"},"content":"        LocalDateTime event1DateTime \u003d Parser.convertDateTime(\"19-02-2022 2000\");","lastModifiedDate":"2021-10-12"},{"lineNumber":104,"author":{"gitId":"crabnuggets"},"content":"        Event event \u003d new Event(\"Peppa Pig\u0027s Concert\",","lastModifiedDate":"2021-10-12"},{"lineNumber":105,"author":{"gitId":"crabnuggets"},"content":"                \"Asia world tour\", event1DateTime,","lastModifiedDate":"2021-10-12"},{"lineNumber":106,"author":{"gitId":"crabnuggets"},"content":"                \"Indoor Stadium\", 1000.90);","lastModifiedDate":"2021-10-12"},{"lineNumber":107,"author":{"gitId":"crabnuggets"},"content":"        event.markAsDone();","lastModifiedDate":"2021-10-12"},{"lineNumber":108,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":109,"author":{"gitId":"crabnuggets"},"content":"        Ui.printEvent(event);","lastModifiedDate":"2021-10-12"},{"lineNumber":110,"author":{"gitId":"antrikshv"},"content":"        String expectedOutput \u003d \"Title: Peppa Pig\u0027s Concert\"","lastModifiedDate":"2021-10-24"},{"lineNumber":111,"author":{"gitId":"crabnuggets"},"content":"                + System.lineSeparator()","lastModifiedDate":"2021-10-12"},{"lineNumber":112,"author":{"gitId":"antrikshv"},"content":"                + \"Date: 19 Feb 2022 - 20:00\"","lastModifiedDate":"2021-10-24"},{"lineNumber":113,"author":{"gitId":"crabnuggets"},"content":"                + System.lineSeparator()","lastModifiedDate":"2021-10-12"},{"lineNumber":114,"author":{"gitId":"antrikshv"},"content":"                + \"Description: Asia world tour\"","lastModifiedDate":"2021-10-24"},{"lineNumber":115,"author":{"gitId":"crabnuggets"},"content":"                + System.lineSeparator()","lastModifiedDate":"2021-10-12"},{"lineNumber":116,"author":{"gitId":"antrikshv"},"content":"                + \"Venue: Indoor Stadium\"","lastModifiedDate":"2021-10-24"},{"lineNumber":117,"author":{"gitId":"crabnuggets"},"content":"                + System.lineSeparator()","lastModifiedDate":"2021-10-12"},{"lineNumber":118,"author":{"gitId":"antrikshv"},"content":"                + \"Budget: $1000.9\"","lastModifiedDate":"2021-10-24"},{"lineNumber":119,"author":{"gitId":"antrikshv"},"content":"                + System.lineSeparator()","lastModifiedDate":"2021-10-24"},{"lineNumber":120,"author":{"gitId":"antrikshv"},"content":"                + \"Tasks: \"","lastModifiedDate":"2021-10-24"},{"lineNumber":121,"author":{"gitId":"crabnuggets"},"content":"                + System.lineSeparator();","lastModifiedDate":"2021-10-12"},{"lineNumber":122,"author":{"gitId":"crabnuggets"},"content":"        assertEquals(expectedOutput, outContent.toString());","lastModifiedDate":"2021-10-12"},{"lineNumber":123,"author":{"gitId":"crabnuggets"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":124,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":125,"author":{"gitId":"crabnuggets"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":126,"author":{"gitId":"crabnuggets"},"content":"    void printTask_oneTask_success() throws DukeException {","lastModifiedDate":"2021-10-31"},{"lineNumber":127,"author":{"gitId":"crabnuggets"},"content":"        // Setting up","lastModifiedDate":"2021-10-12"},{"lineNumber":128,"author":{"gitId":"crabnuggets"},"content":"        LocalDateTime taskDeadline \u003d Parser.convertDateTime(\"19-02-2022 2359\");","lastModifiedDate":"2021-10-12"},{"lineNumber":129,"author":{"gitId":"crabnuggets"},"content":"        Task task \u003d new Task(\"Do homework\", \"CS2113T tp V1.0\", taskDeadline);","lastModifiedDate":"2021-10-12"},{"lineNumber":130,"author":{"gitId":"crabnuggets"},"content":"        task.markAsDone();","lastModifiedDate":"2021-10-12"},{"lineNumber":131,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":132,"author":{"gitId":"crabnuggets"},"content":"        Ui.printTask(task);","lastModifiedDate":"2021-10-12"},{"lineNumber":133,"author":{"gitId":"antrikshv"},"content":"        String expectedOutput \u003d \"Title: Do homework\"","lastModifiedDate":"2021-10-24"},{"lineNumber":134,"author":{"gitId":"antrikshv"},"content":"                + System.lineSeparator()","lastModifiedDate":"2021-10-24"},{"lineNumber":135,"author":{"gitId":"antrikshv"},"content":"                + \"Deadline: 19 Feb 2022 - 23:59\"","lastModifiedDate":"2021-10-24"},{"lineNumber":136,"author":{"gitId":"crabnuggets"},"content":"                + System.lineSeparator()","lastModifiedDate":"2021-10-12"},{"lineNumber":137,"author":{"gitId":"antrikshv"},"content":"                + \"Description: CS2113T tp V1.0\"","lastModifiedDate":"2021-10-24"},{"lineNumber":138,"author":{"gitId":"crabnuggets"},"content":"                + System.lineSeparator()","lastModifiedDate":"2021-10-12"},{"lineNumber":139,"author":{"gitId":"antrikshv"},"content":"                + \"Members: \"","lastModifiedDate":"2021-10-24"},{"lineNumber":140,"author":{"gitId":"crabnuggets"},"content":"                + System.lineSeparator();","lastModifiedDate":"2021-10-12"},{"lineNumber":141,"author":{"gitId":"crabnuggets"},"content":"        assertEquals(expectedOutput, outContent.toString());","lastModifiedDate":"2021-10-12"},{"lineNumber":142,"author":{"gitId":"crabnuggets"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":143,"author":{"gitId":"crabnuggets"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"antrikshv":12,"crabnuggets":131}},{"path":"src/test/java/seedu/duke/commands/ByeCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"antrikshv"},"content":"package seedu.duke.commands;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"antrikshv"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"antrikshv"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"antrikshv"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"crabnuggets"},"content":"import seedu.duke.exceptions.DukeException;","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"antrikshv"},"content":"import seedu.duke.exceptions.parserexceptions.InvalidBudgetException;","lastModifiedDate":"2021-11-01"},{"lineNumber":8,"author":{"gitId":"antrikshv"},"content":"import seedu.duke.exceptions.parserexceptions.InvalidItemTypeException;","lastModifiedDate":"2021-11-02"},{"lineNumber":9,"author":{"gitId":"antrikshv"},"content":"import seedu.duke.exceptions.parserexceptions.NoCommandAttributesException;","lastModifiedDate":"2021-11-01"},{"lineNumber":10,"author":{"gitId":"antrikshv"},"content":"import seedu.duke.parser.Parser;","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"antrikshv"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"antrikshv"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"antrikshv"},"content":"import java.io.PrintStream;","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"antrikshv"},"content":"public class ByeCommandTest {","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"antrikshv"},"content":"    private final ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"antrikshv"},"content":"    private final PrintStream originalOut \u003d System.out;","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"antrikshv"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"antrikshv"},"content":"    public void setUpStream() {","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"antrikshv"},"content":"        System.setOut(new PrintStream(outContent));","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":25,"author":{"gitId":"antrikshv"},"content":"    @AfterEach","lastModifiedDate":"2021-10-25"},{"lineNumber":26,"author":{"gitId":"antrikshv"},"content":"    public void restoreStream() {","lastModifiedDate":"2021-10-25"},{"lineNumber":27,"author":{"gitId":"antrikshv"},"content":"        System.setOut(originalOut);","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"antrikshv"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":31,"author":{"gitId":"antrikshv"},"content":"    public void byeCommand_success() throws DukeException, NoCommandAttributesException, InvalidBudgetException,","lastModifiedDate":"2021-11-02"},{"lineNumber":32,"author":{"gitId":"antrikshv"},"content":"            InvalidItemTypeException {","lastModifiedDate":"2021-11-02"},{"lineNumber":33,"author":{"gitId":"antrikshv"},"content":"        Command command1 \u003d Parser.parseCommand(\"bye\");","lastModifiedDate":"2021-10-25"},{"lineNumber":34,"author":{"gitId":"antrikshv"},"content":"        command1.execute();","lastModifiedDate":"2021-10-25"},{"lineNumber":35,"author":{"gitId":"antrikshv"},"content":"        assertEquals(\"\", outContent.toString());","lastModifiedDate":"2021-10-25"},{"lineNumber":36,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":37,"author":{"gitId":"antrikshv"},"content":"}","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"antrikshv":36,"crabnuggets":1}},{"path":"src/test/java/seedu/duke/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"alwinangys"},"content":"package seedu.duke.commands;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"alwinangys"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"crabnuggets"},"content":"import seedu.duke.exceptions.DukeException;","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"antrikshv"},"content":"import seedu.duke.exceptions.parserexceptions.InvalidBudgetException;","lastModifiedDate":"2021-11-01"},{"lineNumber":7,"author":{"gitId":"antrikshv"},"content":"import seedu.duke.exceptions.parserexceptions.InvalidItemTypeException;","lastModifiedDate":"2021-11-02"},{"lineNumber":8,"author":{"gitId":"antrikshv"},"content":"import seedu.duke.exceptions.parserexceptions.NoCommandAttributesException;","lastModifiedDate":"2021-11-01"},{"lineNumber":9,"author":{"gitId":"crabnuggets"},"content":"import seedu.duke.parser.Parser;","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"alwinangys"},"content":"import seedu.duke.items.Event;","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"alwinangys"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"alwinangys"},"content":"import static seedu.duke.Duke.eventCatalog;","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"Alvinlj00"},"content":"import java.io.ByteArrayInputStream;","lastModifiedDate":"2021-10-22"},{"lineNumber":16,"author":{"gitId":"Alvinlj00"},"content":"import java.io.InputStream;","lastModifiedDate":"2021-10-22"},{"lineNumber":17,"author":{"gitId":"alwinangys"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"alwinangys"},"content":"class DeleteCommandTest {","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"alwinangys"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"antrikshv"},"content":"    void deleteOneEvent_listOfTwoEvents_oneEventRemaining() throws DukeException, NoCommandAttributesException,","lastModifiedDate":"2021-11-01"},{"lineNumber":24,"author":{"gitId":"antrikshv"},"content":"            InvalidBudgetException, InvalidItemTypeException {","lastModifiedDate":"2021-11-02"},{"lineNumber":25,"author":{"gitId":"alwinangys"},"content":"        setUp();","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"Alvinlj00"},"content":"        Command command1 \u003d Parser.parseCommand(\"delete -e 2\");","lastModifiedDate":"2021-10-22"},{"lineNumber":27,"author":{"gitId":"Alvinlj00"},"content":"        command1.execute();","lastModifiedDate":"2021-10-22"},{"lineNumber":28,"author":{"gitId":"alwinangys"},"content":"        assertEquals(1, eventCatalog.size());","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":30,"author":{"gitId":"Alvinlj00"},"content":"        final InputStream sysInBackup \u003d System.in;","lastModifiedDate":"2021-10-22"},{"lineNumber":31,"author":{"gitId":"Alvinlj00"},"content":"        ByteArrayInputStream in \u003d new ByteArrayInputStream(\"Y\".getBytes());","lastModifiedDate":"2021-10-22"},{"lineNumber":32,"author":{"gitId":"Alvinlj00"},"content":"        System.setIn(in);","lastModifiedDate":"2021-10-22"},{"lineNumber":33,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":34,"author":{"gitId":"Alvinlj00"},"content":"        Command command2 \u003d Parser.parseCommand(\"delete all\");","lastModifiedDate":"2021-10-22"},{"lineNumber":35,"author":{"gitId":"Alvinlj00"},"content":"        command2.execute();","lastModifiedDate":"2021-10-22"},{"lineNumber":36,"author":{"gitId":"Alvinlj00"},"content":"        System.setIn(sysInBackup);","lastModifiedDate":"2021-10-22"},{"lineNumber":37,"author":{"gitId":"alwinangys"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"crabnuggets"},"content":"    void setUp() throws DukeException {","lastModifiedDate":"2021-10-31"},{"lineNumber":41,"author":{"gitId":"alwinangys"},"content":"        // Setting up","lastModifiedDate":"2021-10-21"},{"lineNumber":42,"author":{"gitId":"alwinangys"},"content":"        LocalDateTime event1DateTime \u003d Parser.convertDateTime(\"19-02-2022 2000\");","lastModifiedDate":"2021-10-21"},{"lineNumber":43,"author":{"gitId":"alwinangys"},"content":"        Event event1 \u003d new Event(\"Peppa Pig\u0027s Concert\",","lastModifiedDate":"2021-10-21"},{"lineNumber":44,"author":{"gitId":"alwinangys"},"content":"                \"Asia world tour\", event1DateTime,","lastModifiedDate":"2021-10-21"},{"lineNumber":45,"author":{"gitId":"alwinangys"},"content":"                \"Indoor Stadium\", 1000.90);","lastModifiedDate":"2021-10-21"},{"lineNumber":46,"author":{"gitId":"alwinangys"},"content":"        event1.markAsDone();","lastModifiedDate":"2021-10-21"},{"lineNumber":47,"author":{"gitId":"alwinangys"},"content":"        LocalDateTime event2DateTime \u003d Parser.convertDateTime(\"20-02-2022 2030\");","lastModifiedDate":"2021-10-21"},{"lineNumber":48,"author":{"gitId":"alwinangys"},"content":"        Event event2 \u003d new Event(\"Funfair\",","lastModifiedDate":"2021-10-21"},{"lineNumber":49,"author":{"gitId":"alwinangys"},"content":"                \"For charity\", event2DateTime,","lastModifiedDate":"2021-10-21"},{"lineNumber":50,"author":{"gitId":"alwinangys"},"content":"                \"Parade square\", 2000.10);","lastModifiedDate":"2021-10-21"},{"lineNumber":51,"author":{"gitId":"alwinangys"},"content":"        eventCatalog.add(event1);","lastModifiedDate":"2021-10-21"},{"lineNumber":52,"author":{"gitId":"alwinangys"},"content":"        eventCatalog.add(event2);","lastModifiedDate":"2021-10-21"},{"lineNumber":53,"author":{"gitId":"alwinangys"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":54,"author":{"gitId":"alwinangys"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"antrikshv":5,"Alvinlj00":12,"crabnuggets":3,"alwinangys":34}},{"path":"src/test/java/seedu/duke/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"alwinangys"},"content":"package seedu.duke.commands;","lastModifiedDate":"2021-11-07"},{"lineNumber":2,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":3,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":4,"author":{"gitId":"alwinangys"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2021-11-07"},{"lineNumber":5,"author":{"gitId":"alwinangys"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-11-07"},{"lineNumber":6,"author":{"gitId":"alwinangys"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-11-07"},{"lineNumber":7,"author":{"gitId":"alwinangys"},"content":"import seedu.duke.exceptions.DukeException;","lastModifiedDate":"2021-11-07"},{"lineNumber":8,"author":{"gitId":"alwinangys"},"content":"import seedu.duke.exceptions.parserexceptions.InvalidItemTypeException;","lastModifiedDate":"2021-11-07"},{"lineNumber":9,"author":{"gitId":"alwinangys"},"content":"import seedu.duke.exceptions.parserexceptions.NoCommandAttributesException;","lastModifiedDate":"2021-11-07"},{"lineNumber":10,"author":{"gitId":"alwinangys"},"content":"import seedu.duke.items.Event;","lastModifiedDate":"2021-11-07"},{"lineNumber":11,"author":{"gitId":"alwinangys"},"content":"import seedu.duke.parser.Parser;","lastModifiedDate":"2021-11-07"},{"lineNumber":12,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":13,"author":{"gitId":"alwinangys"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2021-11-07"},{"lineNumber":14,"author":{"gitId":"alwinangys"},"content":"import java.io.PrintStream;","lastModifiedDate":"2021-11-07"},{"lineNumber":15,"author":{"gitId":"alwinangys"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-11-07"},{"lineNumber":16,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":17,"author":{"gitId":"alwinangys"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-11-07"},{"lineNumber":18,"author":{"gitId":"alwinangys"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-11-07"},{"lineNumber":19,"author":{"gitId":"alwinangys"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-11-07"},{"lineNumber":20,"author":{"gitId":"alwinangys"},"content":"import static seedu.duke.Duke.eventCatalog;","lastModifiedDate":"2021-11-07"},{"lineNumber":21,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":22,"author":{"gitId":"alwinangys"},"content":"class FindCommandTest {","lastModifiedDate":"2021-11-07"},{"lineNumber":23,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":24,"author":{"gitId":"alwinangys"},"content":"    private final ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2021-11-07"},{"lineNumber":25,"author":{"gitId":"alwinangys"},"content":"    private final PrintStream originalOut \u003d System.out;","lastModifiedDate":"2021-11-07"},{"lineNumber":26,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":27,"author":{"gitId":"alwinangys"},"content":"    @BeforeEach","lastModifiedDate":"2021-11-07"},{"lineNumber":28,"author":{"gitId":"alwinangys"},"content":"    public void setUpStream() {","lastModifiedDate":"2021-11-07"},{"lineNumber":29,"author":{"gitId":"alwinangys"},"content":"        System.setOut(new PrintStream(outContent));","lastModifiedDate":"2021-11-07"},{"lineNumber":30,"author":{"gitId":"alwinangys"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":31,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":32,"author":{"gitId":"alwinangys"},"content":"    @AfterEach","lastModifiedDate":"2021-11-07"},{"lineNumber":33,"author":{"gitId":"alwinangys"},"content":"    public void restoreStream() {","lastModifiedDate":"2021-11-07"},{"lineNumber":34,"author":{"gitId":"alwinangys"},"content":"        System.setOut(originalOut);","lastModifiedDate":"2021-11-07"},{"lineNumber":35,"author":{"gitId":"alwinangys"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":36,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":37,"author":{"gitId":"alwinangys"},"content":"    @Test","lastModifiedDate":"2021-11-07"},{"lineNumber":38,"author":{"gitId":"alwinangys"},"content":"    void findResult_ThreeEventsWithTwoMatches_correctOutput() throws DukeException, NoCommandAttributesException,","lastModifiedDate":"2021-11-07"},{"lineNumber":39,"author":{"gitId":"alwinangys"},"content":"            InvalidItemTypeException {","lastModifiedDate":"2021-11-07"},{"lineNumber":40,"author":{"gitId":"alwinangys"},"content":"        createEventsList();","lastModifiedDate":"2021-11-07"},{"lineNumber":41,"author":{"gitId":"alwinangys"},"content":"        Command command \u003d Parser.parseCommand(\"find -e Concert\");","lastModifiedDate":"2021-11-07"},{"lineNumber":42,"author":{"gitId":"alwinangys"},"content":"        CommandResult feedback \u003d command.execute();","lastModifiedDate":"2021-11-07"},{"lineNumber":43,"author":{"gitId":"alwinangys"},"content":"        assertTrue(feedback.feedbackToUser.contains(\"Temasek Hall Concert\"));","lastModifiedDate":"2021-11-07"},{"lineNumber":44,"author":{"gitId":"alwinangys"},"content":"        assertTrue(feedback.feedbackToUser.contains(\"NUS Concert\"));","lastModifiedDate":"2021-11-07"},{"lineNumber":45,"author":{"gitId":"alwinangys"},"content":"        assertFalse(feedback.feedbackToUser.contains(\"Orientation Week\"));","lastModifiedDate":"2021-11-07"},{"lineNumber":46,"author":{"gitId":"alwinangys"},"content":"        eventCatalog.clear();","lastModifiedDate":"2021-11-07"},{"lineNumber":47,"author":{"gitId":"alwinangys"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":48,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":49,"author":{"gitId":"alwinangys"},"content":"    @Test","lastModifiedDate":"2021-11-07"},{"lineNumber":50,"author":{"gitId":"alwinangys"},"content":"    void findResult_noFlag_correctErrorMessage() throws DukeException, NoCommandAttributesException,","lastModifiedDate":"2021-11-07"},{"lineNumber":51,"author":{"gitId":"alwinangys"},"content":"            InvalidItemTypeException {","lastModifiedDate":"2021-11-07"},{"lineNumber":52,"author":{"gitId":"alwinangys"},"content":"        createEventsList();","lastModifiedDate":"2021-11-07"},{"lineNumber":53,"author":{"gitId":"alwinangys"},"content":"        Parser.parseCommand(\"find abc\");","lastModifiedDate":"2021-11-07"},{"lineNumber":54,"author":{"gitId":"alwinangys"},"content":"        String expectedOutput \u003d \"Please add -e to find event(s)!\" + System.lineSeparator();","lastModifiedDate":"2021-11-07"},{"lineNumber":55,"author":{"gitId":"alwinangys"},"content":"        assertEquals(expectedOutput, outContent.toString());","lastModifiedDate":"2021-11-07"},{"lineNumber":56,"author":{"gitId":"alwinangys"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":57,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":58,"author":{"gitId":"alwinangys"},"content":"    @Test","lastModifiedDate":"2021-11-07"},{"lineNumber":59,"author":{"gitId":"alwinangys"},"content":"    void findResult_noEventsFound_correctErrorMessage() throws DukeException, NoCommandAttributesException,","lastModifiedDate":"2021-11-07"},{"lineNumber":60,"author":{"gitId":"alwinangys"},"content":"            InvalidItemTypeException {","lastModifiedDate":"2021-11-07"},{"lineNumber":61,"author":{"gitId":"alwinangys"},"content":"        createEventsList();","lastModifiedDate":"2021-11-07"},{"lineNumber":62,"author":{"gitId":"alwinangys"},"content":"        Command command \u003d Parser.parseCommand(\"find -e abc\");","lastModifiedDate":"2021-11-07"},{"lineNumber":63,"author":{"gitId":"alwinangys"},"content":"        CommandResult feedback \u003d command.execute();","lastModifiedDate":"2021-11-07"},{"lineNumber":64,"author":{"gitId":"alwinangys"},"content":"        String expectedOutput \u003d \"No matching events found!\";","lastModifiedDate":"2021-11-07"},{"lineNumber":65,"author":{"gitId":"alwinangys"},"content":"        assertEquals(expectedOutput, feedback.feedbackToUser);","lastModifiedDate":"2021-11-07"},{"lineNumber":66,"author":{"gitId":"alwinangys"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":67,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":68,"author":{"gitId":"alwinangys"},"content":"    private void createEventsList() throws DukeException {","lastModifiedDate":"2021-11-07"},{"lineNumber":69,"author":{"gitId":"alwinangys"},"content":"        eventCatalog.clear();","lastModifiedDate":"2021-11-07"},{"lineNumber":70,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":71,"author":{"gitId":"alwinangys"},"content":"        LocalDateTime event1DateTime \u003d Parser.convertDateTime(\"03-12-2021 2300\");","lastModifiedDate":"2021-11-07"},{"lineNumber":72,"author":{"gitId":"alwinangys"},"content":"        Event event1 \u003d new Event(\"Temasek Hall Concert\", \"Concert for Freshmen\",","lastModifiedDate":"2021-11-07"},{"lineNumber":73,"author":{"gitId":"alwinangys"},"content":"                event1DateTime, \"Temasek Hall\", 1000);","lastModifiedDate":"2021-11-07"},{"lineNumber":74,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":75,"author":{"gitId":"alwinangys"},"content":"        LocalDateTime event2DateTime \u003d Parser.convertDateTime(\"04-12-2021 1900\");","lastModifiedDate":"2021-11-07"},{"lineNumber":76,"author":{"gitId":"alwinangys"},"content":"        Event event2 \u003d new Event(\"NUS Concert\", \"Concert for Profs\",","lastModifiedDate":"2021-11-07"},{"lineNumber":77,"author":{"gitId":"alwinangys"},"content":"                event2DateTime, \"NUS MPSH\", 2000);","lastModifiedDate":"2021-11-07"},{"lineNumber":78,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":79,"author":{"gitId":"alwinangys"},"content":"        LocalDateTime event3DateTime \u003d Parser.convertDateTime(\"01-01-2022 1200\");","lastModifiedDate":"2021-11-07"},{"lineNumber":80,"author":{"gitId":"alwinangys"},"content":"        Event event3 \u003d new Event(\"Orientation Week\", \"Orientation for Freshmen\",","lastModifiedDate":"2021-11-07"},{"lineNumber":81,"author":{"gitId":"alwinangys"},"content":"                event3DateTime, \"NUS\", 3000);","lastModifiedDate":"2021-11-07"},{"lineNumber":82,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":83,"author":{"gitId":"alwinangys"},"content":"        eventCatalog.add(event1);","lastModifiedDate":"2021-11-07"},{"lineNumber":84,"author":{"gitId":"alwinangys"},"content":"        eventCatalog.add(event2);","lastModifiedDate":"2021-11-07"},{"lineNumber":85,"author":{"gitId":"alwinangys"},"content":"        eventCatalog.add(event3);","lastModifiedDate":"2021-11-07"},{"lineNumber":86,"author":{"gitId":"alwinangys"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":87,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":88,"author":{"gitId":"alwinangys"},"content":"}","lastModifiedDate":"2021-11-07"}],"authorContributionMap":{"alwinangys":88}},{"path":"src/test/java/seedu/duke/commands/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"antrikshv"},"content":"package seedu.duke.commands;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"antrikshv"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"antrikshv"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"antrikshv"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"crabnuggets"},"content":"import seedu.duke.exceptions.DukeException;","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"antrikshv"},"content":"import seedu.duke.exceptions.parserexceptions.InvalidBudgetException;","lastModifiedDate":"2021-11-01"},{"lineNumber":8,"author":{"gitId":"antrikshv"},"content":"import seedu.duke.exceptions.parserexceptions.InvalidItemTypeException;","lastModifiedDate":"2021-11-02"},{"lineNumber":9,"author":{"gitId":"antrikshv"},"content":"import seedu.duke.exceptions.parserexceptions.NoCommandAttributesException;","lastModifiedDate":"2021-11-01"},{"lineNumber":10,"author":{"gitId":"antrikshv"},"content":"import seedu.duke.items.Event;","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"antrikshv"},"content":"import seedu.duke.items.Task;","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"antrikshv"},"content":"import seedu.duke.items.characteristics.Member;","lastModifiedDate":"2021-11-03"},{"lineNumber":13,"author":{"gitId":"antrikshv"},"content":"import seedu.duke.parser.Parser;","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"antrikshv"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"antrikshv"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"antrikshv"},"content":"import java.io.PrintStream;","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"antrikshv"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"antrikshv"},"content":"import static seedu.duke.Duke.eventCatalog;","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"antrikshv"},"content":"import static seedu.duke.Duke.memberRoster;","lastModifiedDate":"2021-11-03"},{"lineNumber":22,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"antrikshv"},"content":"public class ListCommandTest {","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":25,"author":{"gitId":"antrikshv"},"content":"    private final ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2021-10-25"},{"lineNumber":26,"author":{"gitId":"antrikshv"},"content":"    private final PrintStream originalOut \u003d System.out;","lastModifiedDate":"2021-10-25"},{"lineNumber":27,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"antrikshv"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"crabnuggets"},"content":"    public void setUpStream() throws DukeException {","lastModifiedDate":"2021-10-31"},{"lineNumber":30,"author":{"gitId":"antrikshv"},"content":"        System.setOut(new PrintStream(outContent));","lastModifiedDate":"2021-10-25"},{"lineNumber":31,"author":{"gitId":"antrikshv"},"content":"        setUp();","lastModifiedDate":"2021-10-25"},{"lineNumber":32,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":33,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":34,"author":{"gitId":"antrikshv"},"content":"    @AfterEach","lastModifiedDate":"2021-10-25"},{"lineNumber":35,"author":{"gitId":"antrikshv"},"content":"    public void restoreStream() {","lastModifiedDate":"2021-10-25"},{"lineNumber":36,"author":{"gitId":"antrikshv"},"content":"        System.setOut(originalOut);","lastModifiedDate":"2021-10-25"},{"lineNumber":37,"author":{"gitId":"antrikshv"},"content":"        eventCatalog.clear();","lastModifiedDate":"2021-10-25"},{"lineNumber":38,"author":{"gitId":"antrikshv"},"content":"        memberRoster.clear();","lastModifiedDate":"2021-11-03"},{"lineNumber":39,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":40,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":41,"author":{"gitId":"antrikshv"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":42,"author":{"gitId":"antrikshv"},"content":"    public void listCommand_overallScheduleTest() throws DukeException, NoCommandAttributesException,","lastModifiedDate":"2021-11-01"},{"lineNumber":43,"author":{"gitId":"antrikshv"},"content":"            InvalidItemTypeException {","lastModifiedDate":"2021-11-03"},{"lineNumber":44,"author":{"gitId":"antrikshv"},"content":"        Command command1 \u003d Parser.parseCommand(\"list -e\");","lastModifiedDate":"2021-11-02"},{"lineNumber":45,"author":{"gitId":"antrikshv"},"content":"        command1.execute();","lastModifiedDate":"2021-10-25"},{"lineNumber":46,"author":{"gitId":"antrikshv"},"content":"        String expectedOutput \u003d \"OVERALL SCHEDULE\"","lastModifiedDate":"2021-10-25"},{"lineNumber":47,"author":{"gitId":"antrikshv"},"content":"                + System.lineSeparator()","lastModifiedDate":"2021-10-25"},{"lineNumber":48,"author":{"gitId":"antrikshv"},"content":"                + \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\"","lastModifiedDate":"2021-10-25"},{"lineNumber":49,"author":{"gitId":"antrikshv"},"content":"                + System.lineSeparator()","lastModifiedDate":"2021-10-25"},{"lineNumber":50,"author":{"gitId":"antrikshv"},"content":"                + \"1. [E][X] Peppa Pig\u0027s Concert (at: 19 Feb 2022 - 20:00)\"","lastModifiedDate":"2021-10-25"},{"lineNumber":51,"author":{"gitId":"antrikshv"},"content":"                + System.lineSeparator()","lastModifiedDate":"2021-10-25"},{"lineNumber":52,"author":{"gitId":"antrikshv"},"content":"                + \"2. [E][ ] Funfair (at: 20 Feb 2022 - 20:30)\"","lastModifiedDate":"2021-10-25"},{"lineNumber":53,"author":{"gitId":"antrikshv"},"content":"                + System.lineSeparator()","lastModifiedDate":"2021-10-25"},{"lineNumber":54,"author":{"gitId":"antrikshv"},"content":"                + System.lineSeparator()","lastModifiedDate":"2021-10-25"},{"lineNumber":55,"author":{"gitId":"antrikshv"},"content":"                + \"FURTHER COMMANDS\"","lastModifiedDate":"2021-10-25"},{"lineNumber":56,"author":{"gitId":"antrikshv"},"content":"                + System.lineSeparator()","lastModifiedDate":"2021-10-25"},{"lineNumber":57,"author":{"gitId":"antrikshv"},"content":"                + \"-----------------------\"","lastModifiedDate":"2021-10-25"},{"lineNumber":58,"author":{"gitId":"antrikshv"},"content":"                + System.lineSeparator()","lastModifiedDate":"2021-10-25"},{"lineNumber":59,"author":{"gitId":"antrikshv"},"content":"                + \"list -e: to see overall events\"","lastModifiedDate":"2021-11-02"},{"lineNumber":60,"author":{"gitId":"antrikshv"},"content":"                + System.lineSeparator()","lastModifiedDate":"2021-10-25"},{"lineNumber":61,"author":{"gitId":"antrikshv"},"content":"                + \"list -t [EVENT_NUM]: to see tasks in an Event\"","lastModifiedDate":"2021-11-02"},{"lineNumber":62,"author":{"gitId":"antrikshv"},"content":"                + System.lineSeparator()","lastModifiedDate":"2021-11-02"},{"lineNumber":63,"author":{"gitId":"antrikshv"},"content":"                + \"list -m e/[Event Index] t/[Task Index] : to see members in a Task\"","lastModifiedDate":"2021-11-02"},{"lineNumber":64,"author":{"gitId":"antrikshv"},"content":"                + System.lineSeparator()","lastModifiedDate":"2021-11-02"},{"lineNumber":65,"author":{"gitId":"antrikshv"},"content":"                + \"list -m: to see overall member roster\"","lastModifiedDate":"2021-11-02"},{"lineNumber":66,"author":{"gitId":"antrikshv"},"content":"                + System.lineSeparator();","lastModifiedDate":"2021-10-25"},{"lineNumber":67,"author":{"gitId":"antrikshv"},"content":"        assertEquals(expectedOutput, outContent.toString());","lastModifiedDate":"2021-10-25"},{"lineNumber":68,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":69,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":70,"author":{"gitId":"antrikshv"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":71,"author":{"gitId":"antrikshv"},"content":"    public void listCommand_taskListTest() throws DukeException, NoCommandAttributesException,","lastModifiedDate":"2021-11-03"},{"lineNumber":72,"author":{"gitId":"antrikshv"},"content":"            InvalidItemTypeException {","lastModifiedDate":"2021-11-02"},{"lineNumber":73,"author":{"gitId":"antrikshv"},"content":"        Command command1 \u003d Parser.parseCommand(\"list -t 1\");","lastModifiedDate":"2021-11-02"},{"lineNumber":74,"author":{"gitId":"antrikshv"},"content":"        command1.execute();","lastModifiedDate":"2021-10-25"},{"lineNumber":75,"author":{"gitId":"antrikshv"},"content":"        String expectedOutput \u003d \"Event: Peppa Pig\u0027s Concert\"","lastModifiedDate":"2021-10-25"},{"lineNumber":76,"author":{"gitId":"antrikshv"},"content":"                + System.lineSeparator()","lastModifiedDate":"2021-10-25"},{"lineNumber":77,"author":{"gitId":"antrikshv"},"content":"                + \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\"","lastModifiedDate":"2021-10-25"},{"lineNumber":78,"author":{"gitId":"antrikshv"},"content":"                + System.lineSeparator()","lastModifiedDate":"2021-10-25"},{"lineNumber":79,"author":{"gitId":"antrikshv"},"content":"                + \"1. [T][ ] Collect Tickets (by: 18 Feb 2022 - 19:30)\"","lastModifiedDate":"2021-10-25"},{"lineNumber":80,"author":{"gitId":"antrikshv"},"content":"                + System.lineSeparator()","lastModifiedDate":"2021-10-25"},{"lineNumber":81,"author":{"gitId":"antrikshv"},"content":"                + \"2. [T][ ] Buy Boost (by: 19 Feb 2022 - 19:30)\"","lastModifiedDate":"2021-10-25"},{"lineNumber":82,"author":{"gitId":"antrikshv"},"content":"                + System.lineSeparator();","lastModifiedDate":"2021-10-25"},{"lineNumber":83,"author":{"gitId":"antrikshv"},"content":"        assertEquals(expectedOutput, outContent.toString());","lastModifiedDate":"2021-10-25"},{"lineNumber":84,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":85,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":86,"author":{"gitId":"antrikshv"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":87,"author":{"gitId":"antrikshv"},"content":"    public void listCommand_memberListTest() throws DukeException, NoCommandAttributesException,","lastModifiedDate":"2021-11-01"},{"lineNumber":88,"author":{"gitId":"antrikshv"},"content":"            InvalidItemTypeException {","lastModifiedDate":"2021-11-03"},{"lineNumber":89,"author":{"gitId":"antrikshv"},"content":"        Command command1 \u003d Parser.parseCommand(\"list -m e/1 t/1\");","lastModifiedDate":"2021-11-02"},{"lineNumber":90,"author":{"gitId":"antrikshv"},"content":"        command1.execute();","lastModifiedDate":"2021-10-25"},{"lineNumber":91,"author":{"gitId":"antrikshv"},"content":"        String expectedOutput \u003d \"Event: Peppa Pig\u0027s Concert\"","lastModifiedDate":"2021-10-25"},{"lineNumber":92,"author":{"gitId":"antrikshv"},"content":"                + System.lineSeparator()","lastModifiedDate":"2021-10-25"},{"lineNumber":93,"author":{"gitId":"antrikshv"},"content":"                + \"Task: Collect Tickets\"","lastModifiedDate":"2021-10-25"},{"lineNumber":94,"author":{"gitId":"antrikshv"},"content":"                + System.lineSeparator()","lastModifiedDate":"2021-10-25"},{"lineNumber":95,"author":{"gitId":"antrikshv"},"content":"                + \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\"","lastModifiedDate":"2021-10-25"},{"lineNumber":96,"author":{"gitId":"antrikshv"},"content":"                + System.lineSeparator();","lastModifiedDate":"2021-10-25"},{"lineNumber":97,"author":{"gitId":"antrikshv"},"content":"        assertEquals(expectedOutput, outContent.toString());","lastModifiedDate":"2021-10-25"},{"lineNumber":98,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":99,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":100,"author":{"gitId":"antrikshv"},"content":"    @Test","lastModifiedDate":"2021-11-03"},{"lineNumber":101,"author":{"gitId":"antrikshv"},"content":"    public void listCommand_memberRosterListTest() throws DukeException, NoCommandAttributesException,","lastModifiedDate":"2021-11-03"},{"lineNumber":102,"author":{"gitId":"antrikshv"},"content":"            InvalidItemTypeException {","lastModifiedDate":"2021-11-03"},{"lineNumber":103,"author":{"gitId":"antrikshv"},"content":"        Command command1 \u003d Parser.parseCommand(\"list -m\");","lastModifiedDate":"2021-11-03"},{"lineNumber":104,"author":{"gitId":"antrikshv"},"content":"        command1.execute();","lastModifiedDate":"2021-11-03"},{"lineNumber":105,"author":{"gitId":"antrikshv"},"content":"        String expectedOutput \u003d \"List of members in MemberRoster\"","lastModifiedDate":"2021-11-03"},{"lineNumber":106,"author":{"gitId":"antrikshv"},"content":"                + System.lineSeparator()","lastModifiedDate":"2021-11-03"},{"lineNumber":107,"author":{"gitId":"antrikshv"},"content":"                + \"1. BOB\"","lastModifiedDate":"2021-11-03"},{"lineNumber":108,"author":{"gitId":"antrikshv"},"content":"                + System.lineSeparator()","lastModifiedDate":"2021-11-03"},{"lineNumber":109,"author":{"gitId":"antrikshv"},"content":"                + \"2. Ant Verma\"","lastModifiedDate":"2021-11-03"},{"lineNumber":110,"author":{"gitId":"antrikshv"},"content":"                + System.lineSeparator();","lastModifiedDate":"2021-11-03"},{"lineNumber":111,"author":{"gitId":"antrikshv"},"content":"        assertEquals(expectedOutput, outContent.toString());","lastModifiedDate":"2021-11-03"},{"lineNumber":112,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":113,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":114,"author":{"gitId":"crabnuggets"},"content":"    void setUp() throws DukeException {","lastModifiedDate":"2021-10-31"},{"lineNumber":115,"author":{"gitId":"antrikshv"},"content":"        LocalDateTime event1DateTime \u003d Parser.convertDateTime(\"19-02-2022 2000\");","lastModifiedDate":"2021-10-25"},{"lineNumber":116,"author":{"gitId":"antrikshv"},"content":"        Event event1 \u003d new Event(\"Peppa Pig\u0027s Concert\",","lastModifiedDate":"2021-10-25"},{"lineNumber":117,"author":{"gitId":"antrikshv"},"content":"                \"Asia world tour\", event1DateTime,","lastModifiedDate":"2021-10-25"},{"lineNumber":118,"author":{"gitId":"antrikshv"},"content":"                \"Indoor Stadium\", 1000.90);","lastModifiedDate":"2021-10-25"},{"lineNumber":119,"author":{"gitId":"antrikshv"},"content":"        event1.markAsDone();","lastModifiedDate":"2021-10-25"},{"lineNumber":120,"author":{"gitId":"antrikshv"},"content":"        eventCatalog.add(event1);","lastModifiedDate":"2021-10-26"},{"lineNumber":121,"author":{"gitId":"antrikshv"},"content":"        LocalDateTime taskDeadline1 \u003d Parser.convertDateTime(\"19-02-2022 1930\");","lastModifiedDate":"2021-10-25"},{"lineNumber":122,"author":{"gitId":"antrikshv"},"content":"        Task task1 \u003d new Task(\"Buy Boost\", \"Need the boost for the concert\", taskDeadline1);","lastModifiedDate":"2021-10-25"},{"lineNumber":123,"author":{"gitId":"antrikshv"},"content":"        LocalDateTime taskDeadline2 \u003d Parser.convertDateTime(\"18-02-2022 1930\");","lastModifiedDate":"2021-10-25"},{"lineNumber":124,"author":{"gitId":"antrikshv"},"content":"        Task task2 \u003d new Task(\"Collect Tickets\", \"Collection point: Scape\", taskDeadline2);","lastModifiedDate":"2021-10-25"},{"lineNumber":125,"author":{"gitId":"antrikshv"},"content":"        LocalDateTime event2DateTime \u003d Parser.convertDateTime(\"20-02-2022 2030\");","lastModifiedDate":"2021-10-26"},{"lineNumber":126,"author":{"gitId":"antrikshv"},"content":"        Event event2 \u003d new Event(\"Funfair\",","lastModifiedDate":"2021-10-26"},{"lineNumber":127,"author":{"gitId":"antrikshv"},"content":"                \"For charity\", event2DateTime,","lastModifiedDate":"2021-10-26"},{"lineNumber":128,"author":{"gitId":"antrikshv"},"content":"                \"Parade square\", 2000.10);","lastModifiedDate":"2021-10-26"},{"lineNumber":129,"author":{"gitId":"antrikshv"},"content":"        eventCatalog.add(event2);","lastModifiedDate":"2021-10-26"},{"lineNumber":130,"author":{"gitId":"antrikshv"},"content":"        eventCatalog.get(0).addToTaskList(task1);","lastModifiedDate":"2021-10-25"},{"lineNumber":131,"author":{"gitId":"antrikshv"},"content":"        eventCatalog.get(0).addToTaskList(task2);","lastModifiedDate":"2021-10-25"},{"lineNumber":132,"author":{"gitId":"antrikshv"},"content":"        Member bob \u003d new Member(\"BOB\");","lastModifiedDate":"2021-11-03"},{"lineNumber":133,"author":{"gitId":"antrikshv"},"content":"        Member ant \u003d new Member(\"Ant Verma\");","lastModifiedDate":"2021-11-03"},{"lineNumber":134,"author":{"gitId":"antrikshv"},"content":"        memberRoster.add(bob);","lastModifiedDate":"2021-11-03"},{"lineNumber":135,"author":{"gitId":"antrikshv"},"content":"        memberRoster.add(ant);","lastModifiedDate":"2021-11-03"},{"lineNumber":136,"author":{"gitId":"antrikshv"},"content":"        eventCatalog.sortCatalog();","lastModifiedDate":"2021-10-25"},{"lineNumber":137,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":138,"author":{"gitId":"antrikshv"},"content":"}","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"antrikshv":135,"crabnuggets":3}},{"path":"src/test/java/seedu/duke/commands/NextCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"antrikshv"},"content":"package seedu.duke.commands;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"antrikshv"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"antrikshv"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"antrikshv"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"antrikshv"},"content":"import seedu.duke.Ui;","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"crabnuggets"},"content":"import seedu.duke.exceptions.DukeException;","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"antrikshv"},"content":"import seedu.duke.exceptions.parserexceptions.InvalidItemTypeException;","lastModifiedDate":"2021-11-02"},{"lineNumber":9,"author":{"gitId":"antrikshv"},"content":"import seedu.duke.exceptions.parserexceptions.NoCommandAttributesException;","lastModifiedDate":"2021-11-01"},{"lineNumber":10,"author":{"gitId":"antrikshv"},"content":"import seedu.duke.items.Event;","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"antrikshv"},"content":"import seedu.duke.items.Task;","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"antrikshv"},"content":"import seedu.duke.parser.Parser;","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"antrikshv"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"antrikshv"},"content":"import java.io.PrintStream;","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"antrikshv"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"antrikshv"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"antrikshv"},"content":"import static seedu.duke.Duke.eventCatalog;","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"antrikshv"},"content":"public class NextCommandTest {","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"antrikshv"},"content":"    private final ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"antrikshv"},"content":"    private final PrintStream originalOut \u003d System.out;","lastModifiedDate":"2021-10-25"},{"lineNumber":25,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":26,"author":{"gitId":"antrikshv"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-25"},{"lineNumber":27,"author":{"gitId":"antrikshv"},"content":"    public void setUpStream() {","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"antrikshv"},"content":"        System.setOut(new PrintStream(outContent));","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":31,"author":{"gitId":"antrikshv"},"content":"    @AfterEach","lastModifiedDate":"2021-10-25"},{"lineNumber":32,"author":{"gitId":"antrikshv"},"content":"    public void restoreStream() {","lastModifiedDate":"2021-10-25"},{"lineNumber":33,"author":{"gitId":"antrikshv"},"content":"        System.setOut(originalOut);","lastModifiedDate":"2021-10-25"},{"lineNumber":34,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":35,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":36,"author":{"gitId":"antrikshv"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":37,"author":{"gitId":"antrikshv"},"content":"    public void nextCommandResult_nextEarliestEvent() throws DukeException, NoCommandAttributesException,","lastModifiedDate":"2021-11-01"},{"lineNumber":38,"author":{"gitId":"antrikshv"},"content":"            InvalidItemTypeException {","lastModifiedDate":"2021-11-03"},{"lineNumber":39,"author":{"gitId":"antrikshv"},"content":"        setUp();","lastModifiedDate":"2021-10-25"},{"lineNumber":40,"author":{"gitId":"antrikshv"},"content":"        Command command1 \u003d Parser.parseCommand(\"next -e\");","lastModifiedDate":"2021-11-02"},{"lineNumber":41,"author":{"gitId":"antrikshv"},"content":"        Ui.printEvent(eventCatalog.get(0));","lastModifiedDate":"2021-10-25"},{"lineNumber":42,"author":{"gitId":"antrikshv"},"content":"        String expectedOutput \u003d \"Title: Peppa Pig\u0027s Concert\"","lastModifiedDate":"2021-10-25"},{"lineNumber":43,"author":{"gitId":"antrikshv"},"content":"                + System.lineSeparator()","lastModifiedDate":"2021-10-25"},{"lineNumber":44,"author":{"gitId":"antrikshv"},"content":"                + \"Date: 19 Feb 2022 - 20:00\"","lastModifiedDate":"2021-10-25"},{"lineNumber":45,"author":{"gitId":"antrikshv"},"content":"                + System.lineSeparator()","lastModifiedDate":"2021-10-25"},{"lineNumber":46,"author":{"gitId":"antrikshv"},"content":"                + \"Description: Asia world tour\"","lastModifiedDate":"2021-10-25"},{"lineNumber":47,"author":{"gitId":"antrikshv"},"content":"                + System.lineSeparator()","lastModifiedDate":"2021-10-25"},{"lineNumber":48,"author":{"gitId":"antrikshv"},"content":"                + \"Venue: Indoor Stadium\"","lastModifiedDate":"2021-10-25"},{"lineNumber":49,"author":{"gitId":"antrikshv"},"content":"                + System.lineSeparator()","lastModifiedDate":"2021-10-25"},{"lineNumber":50,"author":{"gitId":"antrikshv"},"content":"                + \"Budget: $1000.9\"","lastModifiedDate":"2021-10-25"},{"lineNumber":51,"author":{"gitId":"antrikshv"},"content":"                + System.lineSeparator()","lastModifiedDate":"2021-10-25"},{"lineNumber":52,"author":{"gitId":"antrikshv"},"content":"                + \"Tasks: \"","lastModifiedDate":"2021-10-25"},{"lineNumber":53,"author":{"gitId":"antrikshv"},"content":"                + System.lineSeparator()","lastModifiedDate":"2021-10-25"},{"lineNumber":54,"author":{"gitId":"antrikshv"},"content":"                + \"1. [T][ ] Collect Tickets (by: 18 Feb 2022 - 19:30)\"","lastModifiedDate":"2021-10-25"},{"lineNumber":55,"author":{"gitId":"antrikshv"},"content":"                + System.lineSeparator()","lastModifiedDate":"2021-10-25"},{"lineNumber":56,"author":{"gitId":"antrikshv"},"content":"                + \"2. [T][ ] Buy Boost (by: 19 Feb 2022 - 19:30)\"","lastModifiedDate":"2021-10-25"},{"lineNumber":57,"author":{"gitId":"antrikshv"},"content":"                + System.lineSeparator();","lastModifiedDate":"2021-10-25"},{"lineNumber":58,"author":{"gitId":"antrikshv"},"content":"        assertEquals(expectedOutput, outContent.toString());","lastModifiedDate":"2021-10-25"},{"lineNumber":59,"author":{"gitId":"antrikshv"},"content":"        assertEquals(\"Hope you have prepared everything!\", command1.execute().feedbackToUser);","lastModifiedDate":"2021-10-25"},{"lineNumber":60,"author":{"gitId":"antrikshv"},"content":"        eventCatalog.clear();","lastModifiedDate":"2021-10-25"},{"lineNumber":61,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":62,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":63,"author":{"gitId":"antrikshv"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":64,"author":{"gitId":"antrikshv"},"content":"    public void nextCommandResult_nextEarliestTask_taskExists() throws DukeException, NoCommandAttributesException,","lastModifiedDate":"2021-11-01"},{"lineNumber":65,"author":{"gitId":"antrikshv"},"content":"            InvalidItemTypeException {","lastModifiedDate":"2021-11-03"},{"lineNumber":66,"author":{"gitId":"antrikshv"},"content":"        setUp();","lastModifiedDate":"2021-10-25"},{"lineNumber":67,"author":{"gitId":"antrikshv"},"content":"        Command command1 \u003d Parser.parseCommand(\"next -t 1\");","lastModifiedDate":"2021-11-02"},{"lineNumber":68,"author":{"gitId":"antrikshv"},"content":"        Ui.printTask(eventCatalog.get(0).getFromTaskList(0));","lastModifiedDate":"2021-10-25"},{"lineNumber":69,"author":{"gitId":"antrikshv"},"content":"        String expectedOutput \u003d \"Title: Collect Tickets\"","lastModifiedDate":"2021-10-25"},{"lineNumber":70,"author":{"gitId":"antrikshv"},"content":"                + System.lineSeparator()","lastModifiedDate":"2021-10-25"},{"lineNumber":71,"author":{"gitId":"antrikshv"},"content":"                + \"Deadline: 18 Feb 2022 - 19:30\"","lastModifiedDate":"2021-10-25"},{"lineNumber":72,"author":{"gitId":"antrikshv"},"content":"                + System.lineSeparator()","lastModifiedDate":"2021-10-25"},{"lineNumber":73,"author":{"gitId":"antrikshv"},"content":"                + \"Description: Collection point: Scape\"","lastModifiedDate":"2021-10-25"},{"lineNumber":74,"author":{"gitId":"antrikshv"},"content":"                + System.lineSeparator()","lastModifiedDate":"2021-10-25"},{"lineNumber":75,"author":{"gitId":"antrikshv"},"content":"                + \"Members: \"","lastModifiedDate":"2021-10-25"},{"lineNumber":76,"author":{"gitId":"antrikshv"},"content":"                + System.lineSeparator();","lastModifiedDate":"2021-10-25"},{"lineNumber":77,"author":{"gitId":"antrikshv"},"content":"        assertEquals(expectedOutput, outContent.toString());","lastModifiedDate":"2021-10-25"},{"lineNumber":78,"author":{"gitId":"antrikshv"},"content":"        assertEquals(\"Hope you have prepared everything!\", command1.execute().feedbackToUser);","lastModifiedDate":"2021-10-25"},{"lineNumber":79,"author":{"gitId":"antrikshv"},"content":"        eventCatalog.clear();","lastModifiedDate":"2021-10-25"},{"lineNumber":80,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":81,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":82,"author":{"gitId":"antrikshv"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":83,"author":{"gitId":"antrikshv"},"content":"    public void nextCommandResult_nextEarliestTask_noTaskExists() throws DukeException, NoCommandAttributesException,","lastModifiedDate":"2021-11-01"},{"lineNumber":84,"author":{"gitId":"antrikshv"},"content":"            InvalidItemTypeException {","lastModifiedDate":"2021-11-03"},{"lineNumber":85,"author":{"gitId":"antrikshv"},"content":"        setUp();","lastModifiedDate":"2021-10-25"},{"lineNumber":86,"author":{"gitId":"antrikshv"},"content":"        Command command1 \u003d Parser.parseCommand(\"next -t 2\");","lastModifiedDate":"2021-11-02"},{"lineNumber":87,"author":{"gitId":"antrikshv"},"content":"        assertEquals(\"This Event has no Tasks!\", command1.execute().feedbackToUser);","lastModifiedDate":"2021-11-02"},{"lineNumber":88,"author":{"gitId":"antrikshv"},"content":"        eventCatalog.clear();","lastModifiedDate":"2021-10-25"},{"lineNumber":89,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":90,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":91,"author":{"gitId":"crabnuggets"},"content":"    void setUp() throws DukeException {","lastModifiedDate":"2021-10-31"},{"lineNumber":92,"author":{"gitId":"antrikshv"},"content":"        LocalDateTime event1DateTime \u003d Parser.convertDateTime(\"19-02-2022 2000\");","lastModifiedDate":"2021-10-25"},{"lineNumber":93,"author":{"gitId":"antrikshv"},"content":"        Event event1 \u003d new Event(\"Peppa Pig\u0027s Concert\",","lastModifiedDate":"2021-10-25"},{"lineNumber":94,"author":{"gitId":"antrikshv"},"content":"                \"Asia world tour\", event1DateTime,","lastModifiedDate":"2021-10-25"},{"lineNumber":95,"author":{"gitId":"antrikshv"},"content":"                \"Indoor Stadium\", 1000.90);","lastModifiedDate":"2021-10-25"},{"lineNumber":96,"author":{"gitId":"antrikshv"},"content":"        event1.markAsDone();","lastModifiedDate":"2021-10-25"},{"lineNumber":97,"author":{"gitId":"antrikshv"},"content":"        eventCatalog.add(event1);","lastModifiedDate":"2021-10-26"},{"lineNumber":98,"author":{"gitId":"antrikshv"},"content":"        LocalDateTime taskDeadline1 \u003d Parser.convertDateTime(\"19-02-2022 1930\");","lastModifiedDate":"2021-10-25"},{"lineNumber":99,"author":{"gitId":"antrikshv"},"content":"        Task task1 \u003d new Task(\"Buy Boost\", \"Need the boost for the concert\", taskDeadline1);","lastModifiedDate":"2021-10-25"},{"lineNumber":100,"author":{"gitId":"antrikshv"},"content":"        LocalDateTime taskDeadline2 \u003d Parser.convertDateTime(\"18-02-2022 1930\");","lastModifiedDate":"2021-10-25"},{"lineNumber":101,"author":{"gitId":"antrikshv"},"content":"        Task task2 \u003d new Task(\"Collect Tickets\", \"Collection point: Scape\", taskDeadline2);","lastModifiedDate":"2021-10-25"},{"lineNumber":102,"author":{"gitId":"antrikshv"},"content":"        LocalDateTime event2DateTime \u003d Parser.convertDateTime(\"20-02-2022 2030\");","lastModifiedDate":"2021-10-26"},{"lineNumber":103,"author":{"gitId":"antrikshv"},"content":"        Event event2 \u003d new Event(\"Funfair\",","lastModifiedDate":"2021-10-26"},{"lineNumber":104,"author":{"gitId":"antrikshv"},"content":"                \"For charity\", event2DateTime,","lastModifiedDate":"2021-10-26"},{"lineNumber":105,"author":{"gitId":"antrikshv"},"content":"                \"Parade square\", 2000.10);","lastModifiedDate":"2021-10-26"},{"lineNumber":106,"author":{"gitId":"antrikshv"},"content":"        eventCatalog.add(event2);","lastModifiedDate":"2021-10-26"},{"lineNumber":107,"author":{"gitId":"antrikshv"},"content":"        eventCatalog.get(0).addToTaskList(task1);","lastModifiedDate":"2021-10-25"},{"lineNumber":108,"author":{"gitId":"antrikshv"},"content":"        eventCatalog.get(0).addToTaskList(task2);","lastModifiedDate":"2021-10-25"},{"lineNumber":109,"author":{"gitId":"antrikshv"},"content":"        eventCatalog.sortCatalog();","lastModifiedDate":"2021-10-25"},{"lineNumber":110,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":111,"author":{"gitId":"antrikshv"},"content":"}","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"antrikshv":109,"crabnuggets":2}},{"path":"src/test/java/seedu/duke/commands/SelectCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"alwinangys"},"content":"package seedu.duke.commands;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"alwinangys"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"crabnuggets"},"content":"import seedu.duke.exceptions.DukeException;","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"antrikshv"},"content":"import seedu.duke.exceptions.parserexceptions.InvalidBudgetException;","lastModifiedDate":"2021-11-01"},{"lineNumber":6,"author":{"gitId":"antrikshv"},"content":"import seedu.duke.exceptions.parserexceptions.InvalidItemTypeException;","lastModifiedDate":"2021-11-02"},{"lineNumber":7,"author":{"gitId":"antrikshv"},"content":"import seedu.duke.exceptions.parserexceptions.NoCommandAttributesException;","lastModifiedDate":"2021-11-01"},{"lineNumber":8,"author":{"gitId":"alwinangys"},"content":"import seedu.duke.items.Event;","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"alwinangys"},"content":"import seedu.duke.items.Task;","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"alwinangys"},"content":"import seedu.duke.items.characteristics.Member;","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"alwinangys"},"content":"import seedu.duke.parser.Parser;","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"alwinangys"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"alwinangys"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"alwinangys"},"content":"import static seedu.duke.Duke.eventCatalog;","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"alwinangys"},"content":"class SelectCommandTest {","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"alwinangys"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"antrikshv"},"content":"    void selectTaskUnderFirstEvent_TwoEventsWithOneTaskEach_correctTaskOutput() throws DukeException,","lastModifiedDate":"2021-11-01"},{"lineNumber":21,"author":{"gitId":"antrikshv"},"content":"            NoCommandAttributesException, InvalidBudgetException, InvalidItemTypeException {","lastModifiedDate":"2021-11-02"},{"lineNumber":22,"author":{"gitId":"alwinangys"},"content":"        createEventsList();","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"alwinangys"},"content":"        Command command1 \u003d Parser.parseCommand(\"select -e 1\");","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"alwinangys"},"content":"        CommandResult feedback1 \u003d command1.execute();","lastModifiedDate":"2021-10-25"},{"lineNumber":25,"author":{"gitId":"alwinangys"},"content":"        assertTrue(feedback1.feedbackToUser.contains(\"Peppa Pig\u0027s Concert\"));","lastModifiedDate":"2021-10-25"},{"lineNumber":26,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":27,"author":{"gitId":"alwinangys"},"content":"        Command command2 \u003d Parser.parseCommand(\"select -t 1\");","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"alwinangys"},"content":"        CommandResult feedback2 \u003d command2.execute();","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"alwinangys"},"content":"        assertTrue(feedback2.feedbackToUser.contains(\"Hype myself up\"));","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"alwinangys"},"content":"        eventCatalog.clear();","lastModifiedDate":"2021-10-25"},{"lineNumber":31,"author":{"gitId":"alwinangys"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":32,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":33,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":34,"author":{"gitId":"crabnuggets"},"content":"    private void createEventsList() throws DukeException {","lastModifiedDate":"2021-10-31"},{"lineNumber":35,"author":{"gitId":"alwinangys"},"content":"        eventCatalog.clear();","lastModifiedDate":"2021-10-25"},{"lineNumber":36,"author":{"gitId":"alwinangys"},"content":"        LocalDateTime event1DateTime \u003d Parser.convertDateTime(\"19-02-2022 2000\");","lastModifiedDate":"2021-10-25"},{"lineNumber":37,"author":{"gitId":"alwinangys"},"content":"        Event event1 \u003d new Event(\"Peppa Pig\u0027s Concert\",","lastModifiedDate":"2021-10-25"},{"lineNumber":38,"author":{"gitId":"alwinangys"},"content":"                \"Asia world tour\", event1DateTime,","lastModifiedDate":"2021-10-25"},{"lineNumber":39,"author":{"gitId":"alwinangys"},"content":"                \"Indoor Stadium\", 1000.90);","lastModifiedDate":"2021-10-25"},{"lineNumber":40,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":41,"author":{"gitId":"alwinangys"},"content":"        LocalDateTime task1DateTime \u003d Parser.convertDateTime(\"19-02-2022 1950\");","lastModifiedDate":"2021-10-25"},{"lineNumber":42,"author":{"gitId":"alwinangys"},"content":"        Task task1 \u003d new Task(\"Hype myself up\", \"Drink lots of sugar\", task1DateTime);","lastModifiedDate":"2021-10-25"},{"lineNumber":43,"author":{"gitId":"alwinangys"},"content":"        task1.memberList.add(new Member(\"Biggest Fan\"));","lastModifiedDate":"2021-10-25"},{"lineNumber":44,"author":{"gitId":"alwinangys"},"content":"        task1.markAsDone();","lastModifiedDate":"2021-10-25"},{"lineNumber":45,"author":{"gitId":"alwinangys"},"content":"        event1.addToTaskList(task1);","lastModifiedDate":"2021-10-25"},{"lineNumber":46,"author":{"gitId":"alwinangys"},"content":"        event1.getFromTaskList(0).markAsDone();","lastModifiedDate":"2021-10-25"},{"lineNumber":47,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":48,"author":{"gitId":"alwinangys"},"content":"        LocalDateTime task2DateTime \u003d Parser.convertDateTime(\"19-02-2022 1955\");","lastModifiedDate":"2021-10-25"},{"lineNumber":49,"author":{"gitId":"alwinangys"},"content":"        Task task2 \u003d new Task(\"Enter venue\", \"\", task2DateTime);","lastModifiedDate":"2021-10-25"},{"lineNumber":50,"author":{"gitId":"alwinangys"},"content":"        task2.memberList.add(new Member(\"Biggest Fan\"));","lastModifiedDate":"2021-10-25"},{"lineNumber":51,"author":{"gitId":"alwinangys"},"content":"        event1.addToTaskList(task2);","lastModifiedDate":"2021-10-25"},{"lineNumber":52,"author":{"gitId":"alwinangys"},"content":"        event1.markAsDone();","lastModifiedDate":"2021-10-25"},{"lineNumber":53,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":54,"author":{"gitId":"alwinangys"},"content":"        LocalDateTime event2DateTime \u003d Parser.convertDateTime(\"20-02-2022 2030\");","lastModifiedDate":"2021-10-25"},{"lineNumber":55,"author":{"gitId":"alwinangys"},"content":"        Event event2 \u003d new Event(\"Funfair\",","lastModifiedDate":"2021-10-25"},{"lineNumber":56,"author":{"gitId":"alwinangys"},"content":"                \"For charity\", event2DateTime,","lastModifiedDate":"2021-10-25"},{"lineNumber":57,"author":{"gitId":"alwinangys"},"content":"                \"Parade square\", 2000.10);","lastModifiedDate":"2021-10-25"},{"lineNumber":58,"author":{"gitId":"alwinangys"},"content":"        eventCatalog.add(event1);","lastModifiedDate":"2021-10-25"},{"lineNumber":59,"author":{"gitId":"alwinangys"},"content":"        eventCatalog.add(event2);","lastModifiedDate":"2021-10-25"},{"lineNumber":60,"author":{"gitId":"alwinangys"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":61,"author":{"gitId":"alwinangys"},"content":"}","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"antrikshv":5,"crabnuggets":2,"alwinangys":54}},{"path":"src/test/java/seedu/duke/commands/UpdateCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"antrikshv"},"content":"package seedu.duke.commands;","lastModifiedDate":"2021-11-03"},{"lineNumber":2,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":3,"author":{"gitId":"antrikshv"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2021-11-03"},{"lineNumber":4,"author":{"gitId":"antrikshv"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-11-03"},{"lineNumber":5,"author":{"gitId":"antrikshv"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-11-03"},{"lineNumber":6,"author":{"gitId":"antrikshv"},"content":"import seedu.duke.exceptions.DukeException;","lastModifiedDate":"2021-11-03"},{"lineNumber":7,"author":{"gitId":"antrikshv"},"content":"import seedu.duke.exceptions.parserexceptions.InvalidItemTypeException;","lastModifiedDate":"2021-11-03"},{"lineNumber":8,"author":{"gitId":"antrikshv"},"content":"import seedu.duke.exceptions.parserexceptions.NoCommandAttributesException;","lastModifiedDate":"2021-11-03"},{"lineNumber":9,"author":{"gitId":"antrikshv"},"content":"import seedu.duke.items.Event;","lastModifiedDate":"2021-11-03"},{"lineNumber":10,"author":{"gitId":"antrikshv"},"content":"import seedu.duke.items.Task;","lastModifiedDate":"2021-11-03"},{"lineNumber":11,"author":{"gitId":"antrikshv"},"content":"import seedu.duke.parser.Parser;","lastModifiedDate":"2021-11-03"},{"lineNumber":12,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":13,"author":{"gitId":"antrikshv"},"content":"import java.io.ByteArrayInputStream;","lastModifiedDate":"2021-11-03"},{"lineNumber":14,"author":{"gitId":"antrikshv"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2021-11-03"},{"lineNumber":15,"author":{"gitId":"antrikshv"},"content":"import java.io.InputStream;","lastModifiedDate":"2021-11-03"},{"lineNumber":16,"author":{"gitId":"antrikshv"},"content":"import java.io.PrintStream;","lastModifiedDate":"2021-11-03"},{"lineNumber":17,"author":{"gitId":"antrikshv"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-11-03"},{"lineNumber":18,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":19,"author":{"gitId":"antrikshv"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-11-03"},{"lineNumber":20,"author":{"gitId":"antrikshv"},"content":"import static seedu.duke.Duke.eventCatalog;","lastModifiedDate":"2021-11-03"},{"lineNumber":21,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":22,"author":{"gitId":"antrikshv"},"content":"public class UpdateCommandTest {","lastModifiedDate":"2021-11-03"},{"lineNumber":23,"author":{"gitId":"antrikshv"},"content":"    private final ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2021-11-03"},{"lineNumber":24,"author":{"gitId":"antrikshv"},"content":"    private final PrintStream originalOut \u003d System.out;","lastModifiedDate":"2021-11-03"},{"lineNumber":25,"author":{"gitId":"antrikshv"},"content":"    private static ByteArrayInputStream in;","lastModifiedDate":"2021-11-03"},{"lineNumber":26,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":27,"author":{"gitId":"antrikshv"},"content":"    public void setInput(String input) {","lastModifiedDate":"2021-11-03"},{"lineNumber":28,"author":{"gitId":"antrikshv"},"content":"        in \u003d new ByteArrayInputStream(input.getBytes());","lastModifiedDate":"2021-11-03"},{"lineNumber":29,"author":{"gitId":"antrikshv"},"content":"        System.setIn(in);","lastModifiedDate":"2021-11-03"},{"lineNumber":30,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":31,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":32,"author":{"gitId":"antrikshv"},"content":"    @BeforeEach","lastModifiedDate":"2021-11-03"},{"lineNumber":33,"author":{"gitId":"antrikshv"},"content":"    public void setUpStream() throws DukeException {","lastModifiedDate":"2021-11-03"},{"lineNumber":34,"author":{"gitId":"antrikshv"},"content":"        System.setOut(new PrintStream(outContent));","lastModifiedDate":"2021-11-03"},{"lineNumber":35,"author":{"gitId":"antrikshv"},"content":"        setUp();","lastModifiedDate":"2021-11-03"},{"lineNumber":36,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":37,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":38,"author":{"gitId":"antrikshv"},"content":"    @AfterEach","lastModifiedDate":"2021-11-03"},{"lineNumber":39,"author":{"gitId":"antrikshv"},"content":"    public void restoreStream() {","lastModifiedDate":"2021-11-03"},{"lineNumber":40,"author":{"gitId":"antrikshv"},"content":"        System.setOut(originalOut);","lastModifiedDate":"2021-11-03"},{"lineNumber":41,"author":{"gitId":"antrikshv"},"content":"        eventCatalog.clear();","lastModifiedDate":"2021-11-03"},{"lineNumber":42,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":43,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":44,"author":{"gitId":"antrikshv"},"content":"    @Test","lastModifiedDate":"2021-11-03"},{"lineNumber":45,"author":{"gitId":"antrikshv"},"content":"    public void updateCommand_updateNameOfEvent_success() throws DukeException, NoCommandAttributesException,","lastModifiedDate":"2021-11-03"},{"lineNumber":46,"author":{"gitId":"antrikshv"},"content":"            InvalidItemTypeException {","lastModifiedDate":"2021-11-03"},{"lineNumber":47,"author":{"gitId":"antrikshv"},"content":"        final InputStream sysInBackup \u003d System.in;","lastModifiedDate":"2021-11-03"},{"lineNumber":48,"author":{"gitId":"antrikshv"},"content":"        setInput(\"n/Charlie Puth Concert\");","lastModifiedDate":"2021-11-03"},{"lineNumber":49,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":50,"author":{"gitId":"antrikshv"},"content":"        Command command1 \u003d Parser.parseCommand(\"update 2\");","lastModifiedDate":"2021-11-03"},{"lineNumber":51,"author":{"gitId":"antrikshv"},"content":"        command1.execute();","lastModifiedDate":"2021-11-03"},{"lineNumber":52,"author":{"gitId":"antrikshv"},"content":"        assertEquals(\"Charlie Puth Concert\", eventCatalog.get(1).getTitle());","lastModifiedDate":"2021-11-03"},{"lineNumber":53,"author":{"gitId":"antrikshv"},"content":"        System.setIn(sysInBackup);","lastModifiedDate":"2021-11-03"},{"lineNumber":54,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":55,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":56,"author":{"gitId":"antrikshv"},"content":"    @Test","lastModifiedDate":"2021-11-03"},{"lineNumber":57,"author":{"gitId":"antrikshv"},"content":"    public void updateCommand_updateDateOfEvent_success() throws DukeException, NoCommandAttributesException,","lastModifiedDate":"2021-11-03"},{"lineNumber":58,"author":{"gitId":"antrikshv"},"content":"            InvalidItemTypeException {","lastModifiedDate":"2021-11-03"},{"lineNumber":59,"author":{"gitId":"antrikshv"},"content":"        final InputStream sysInBackup \u003d System.in;","lastModifiedDate":"2021-11-03"},{"lineNumber":60,"author":{"gitId":"antrikshv"},"content":"        setInput(\"d/31-12-2022 1800\");","lastModifiedDate":"2021-11-03"},{"lineNumber":61,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":62,"author":{"gitId":"antrikshv"},"content":"        Command command1 \u003d Parser.parseCommand(\"update 2\");","lastModifiedDate":"2021-11-03"},{"lineNumber":63,"author":{"gitId":"antrikshv"},"content":"        command1.execute();","lastModifiedDate":"2021-11-03"},{"lineNumber":64,"author":{"gitId":"antrikshv"},"content":"        assertEquals(\"31 Dec 2022 - 18:00\", eventCatalog.get(1).getStringDateTime());","lastModifiedDate":"2021-11-03"},{"lineNumber":65,"author":{"gitId":"antrikshv"},"content":"        System.setIn(sysInBackup);","lastModifiedDate":"2021-11-03"},{"lineNumber":66,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":67,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":68,"author":{"gitId":"antrikshv"},"content":"    @Test","lastModifiedDate":"2021-11-03"},{"lineNumber":69,"author":{"gitId":"antrikshv"},"content":"    public void updateCommand_updateVenueOfEvent_success() throws DukeException, NoCommandAttributesException,","lastModifiedDate":"2021-11-03"},{"lineNumber":70,"author":{"gitId":"antrikshv"},"content":"            InvalidItemTypeException {","lastModifiedDate":"2021-11-03"},{"lineNumber":71,"author":{"gitId":"antrikshv"},"content":"        final InputStream sysInBackup \u003d System.in;","lastModifiedDate":"2021-11-03"},{"lineNumber":72,"author":{"gitId":"antrikshv"},"content":"        setInput(\"v/mfr\");","lastModifiedDate":"2021-11-03"},{"lineNumber":73,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":74,"author":{"gitId":"antrikshv"},"content":"        Command command1 \u003d Parser.parseCommand(\"update 2\");","lastModifiedDate":"2021-11-03"},{"lineNumber":75,"author":{"gitId":"antrikshv"},"content":"        command1.execute();","lastModifiedDate":"2021-11-03"},{"lineNumber":76,"author":{"gitId":"antrikshv"},"content":"        assertEquals(\"mfr\", eventCatalog.get(1).getVenue());","lastModifiedDate":"2021-11-03"},{"lineNumber":77,"author":{"gitId":"antrikshv"},"content":"        System.setIn(sysInBackup);","lastModifiedDate":"2021-11-03"},{"lineNumber":78,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":79,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":80,"author":{"gitId":"antrikshv"},"content":"    @Test","lastModifiedDate":"2021-11-03"},{"lineNumber":81,"author":{"gitId":"antrikshv"},"content":"    public void updateCommand_updateDescriptionOfEvent_success() throws DukeException, NoCommandAttributesException,","lastModifiedDate":"2021-11-03"},{"lineNumber":82,"author":{"gitId":"antrikshv"},"content":"            InvalidItemTypeException {","lastModifiedDate":"2021-11-03"},{"lineNumber":83,"author":{"gitId":"antrikshv"},"content":"        final InputStream sysInBackup \u003d System.in;","lastModifiedDate":"2021-11-03"},{"lineNumber":84,"author":{"gitId":"antrikshv"},"content":"        setInput(\"p/Cool coool cool, awesome, top 16 fruit tree\");","lastModifiedDate":"2021-11-03"},{"lineNumber":85,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":86,"author":{"gitId":"antrikshv"},"content":"        Command command1 \u003d Parser.parseCommand(\"update 2\");","lastModifiedDate":"2021-11-03"},{"lineNumber":87,"author":{"gitId":"antrikshv"},"content":"        command1.execute();","lastModifiedDate":"2021-11-03"},{"lineNumber":88,"author":{"gitId":"antrikshv"},"content":"        assertEquals(\"Cool coool cool, awesome, top 16 fruit tree\", eventCatalog.get(1).getDescription());","lastModifiedDate":"2021-11-03"},{"lineNumber":89,"author":{"gitId":"antrikshv"},"content":"        System.setIn(sysInBackup);","lastModifiedDate":"2021-11-03"},{"lineNumber":90,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":91,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":92,"author":{"gitId":"antrikshv"},"content":"    @Test","lastModifiedDate":"2021-11-03"},{"lineNumber":93,"author":{"gitId":"antrikshv"},"content":"    public void updateCommand_updateBudgetOfEvent_success() throws DukeException, NoCommandAttributesException,","lastModifiedDate":"2021-11-03"},{"lineNumber":94,"author":{"gitId":"antrikshv"},"content":"            InvalidItemTypeException {","lastModifiedDate":"2021-11-03"},{"lineNumber":95,"author":{"gitId":"antrikshv"},"content":"        final InputStream sysInBackup \u003d System.in;","lastModifiedDate":"2021-11-03"},{"lineNumber":96,"author":{"gitId":"antrikshv"},"content":"        setInput(\"b/10000.53\");","lastModifiedDate":"2021-11-03"},{"lineNumber":97,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":98,"author":{"gitId":"antrikshv"},"content":"        Command command1 \u003d Parser.parseCommand(\"update 2\");","lastModifiedDate":"2021-11-03"},{"lineNumber":99,"author":{"gitId":"antrikshv"},"content":"        command1.execute();","lastModifiedDate":"2021-11-03"},{"lineNumber":100,"author":{"gitId":"antrikshv"},"content":"        String actualBudget \u003d Double.toString(eventCatalog.get(1).getBudget());","lastModifiedDate":"2021-11-03"},{"lineNumber":101,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":102,"author":{"gitId":"antrikshv"},"content":"        assertEquals(\"10000.53\", actualBudget);","lastModifiedDate":"2021-11-03"},{"lineNumber":103,"author":{"gitId":"antrikshv"},"content":"        System.setIn(sysInBackup);","lastModifiedDate":"2021-11-03"},{"lineNumber":104,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":105,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":106,"author":{"gitId":"antrikshv"},"content":"    void setUp() throws DukeException {","lastModifiedDate":"2021-11-03"},{"lineNumber":107,"author":{"gitId":"antrikshv"},"content":"        LocalDateTime event1DateTime \u003d Parser.convertDateTime(\"19-02-2022 2000\");","lastModifiedDate":"2021-11-03"},{"lineNumber":108,"author":{"gitId":"antrikshv"},"content":"        Event event1 \u003d new Event(\"Peppa Pig\u0027s Concert\",","lastModifiedDate":"2021-11-03"},{"lineNumber":109,"author":{"gitId":"antrikshv"},"content":"                \"Asia world tour\", event1DateTime,","lastModifiedDate":"2021-11-03"},{"lineNumber":110,"author":{"gitId":"antrikshv"},"content":"                \"Indoor Stadium\", 1000.90);","lastModifiedDate":"2021-11-03"},{"lineNumber":111,"author":{"gitId":"antrikshv"},"content":"        event1.markAsDone();","lastModifiedDate":"2021-11-03"},{"lineNumber":112,"author":{"gitId":"antrikshv"},"content":"        eventCatalog.add(event1);","lastModifiedDate":"2021-11-03"},{"lineNumber":113,"author":{"gitId":"antrikshv"},"content":"        LocalDateTime taskDeadline1 \u003d Parser.convertDateTime(\"19-02-2022 1930\");","lastModifiedDate":"2021-11-03"},{"lineNumber":114,"author":{"gitId":"antrikshv"},"content":"        Task task1 \u003d new Task(\"Buy Boost\", \"Need the boost for the concert\", taskDeadline1);","lastModifiedDate":"2021-11-03"},{"lineNumber":115,"author":{"gitId":"antrikshv"},"content":"        LocalDateTime taskDeadline2 \u003d Parser.convertDateTime(\"18-02-2022 1930\");","lastModifiedDate":"2021-11-03"},{"lineNumber":116,"author":{"gitId":"antrikshv"},"content":"        Task task2 \u003d new Task(\"Collect Tickets\", \"Collection point: Scape\", taskDeadline2);","lastModifiedDate":"2021-11-03"},{"lineNumber":117,"author":{"gitId":"antrikshv"},"content":"        LocalDateTime event2DateTime \u003d Parser.convertDateTime(\"20-02-2022 2030\");","lastModifiedDate":"2021-11-03"},{"lineNumber":118,"author":{"gitId":"antrikshv"},"content":"        Event event2 \u003d new Event(\"Funfair\",","lastModifiedDate":"2021-11-03"},{"lineNumber":119,"author":{"gitId":"antrikshv"},"content":"                \"For charity\", event2DateTime,","lastModifiedDate":"2021-11-03"},{"lineNumber":120,"author":{"gitId":"antrikshv"},"content":"                \"Parade square\", 2000.10);","lastModifiedDate":"2021-11-03"},{"lineNumber":121,"author":{"gitId":"antrikshv"},"content":"        eventCatalog.add(event2);","lastModifiedDate":"2021-11-03"},{"lineNumber":122,"author":{"gitId":"antrikshv"},"content":"        eventCatalog.get(0).addToTaskList(task1);","lastModifiedDate":"2021-11-03"},{"lineNumber":123,"author":{"gitId":"antrikshv"},"content":"        eventCatalog.get(0).addToTaskList(task2);","lastModifiedDate":"2021-11-03"},{"lineNumber":124,"author":{"gitId":"antrikshv"},"content":"        eventCatalog.sortCatalog();","lastModifiedDate":"2021-11-03"},{"lineNumber":125,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":126,"author":{"gitId":"antrikshv"},"content":"}","lastModifiedDate":"2021-11-03"}],"authorContributionMap":{"antrikshv":126}},{"path":"src/test/java/seedu/duke/storage/EventDecoderTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"crabnuggets"},"content":"package seedu.duke.storage;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"crabnuggets"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"crabnuggets"},"content":"import seedu.duke.exceptions.DukeException;","lastModifiedDate":"2021-10-31"},{"lineNumber":5,"author":{"gitId":"crabnuggets"},"content":"import seedu.duke.items.Event;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"crabnuggets"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"crabnuggets"},"content":"class EventDecoderTest {","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"crabnuggets"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"crabnuggets"},"content":"    void decodeEventFromString_stringValidFormatDoneEvent_expectOneEvent() throws DukeException {","lastModifiedDate":"2021-11-07"},{"lineNumber":13,"author":{"gitId":"crabnuggets"},"content":"        // Setting up","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"crabnuggets"},"content":"        String encodedEvent \u003d \"e | Peppa Pig\u0027s Concert | X | Asia world tour | 19-02-2022 2000 \"","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"crabnuggets"},"content":"                + \"| Indoor Stadium | 1000.9\";","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"crabnuggets"},"content":"        Event decodedEvent \u003d EventDecoder.decodeEventFromString(encodedEvent);","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"crabnuggets"},"content":"        String expectedTitle \u003d \"Peppa Pig\u0027s Concert\";","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"crabnuggets"},"content":"        assertEquals(expectedTitle, decodedEvent.getTitle());","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"crabnuggets"},"content":"        String expectedStatus \u003d \"X\";","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"crabnuggets"},"content":"        assertEquals(expectedStatus, decodedEvent.getStatusIcon());","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"crabnuggets"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":24,"author":{"gitId":"crabnuggets"},"content":"    @Test","lastModifiedDate":"2021-11-07"},{"lineNumber":25,"author":{"gitId":"crabnuggets"},"content":"    void decodeEventFromString_stringValidFormatUndoneEvent_expectOneEvent() throws DukeException {","lastModifiedDate":"2021-11-07"},{"lineNumber":26,"author":{"gitId":"crabnuggets"},"content":"        // Setting up","lastModifiedDate":"2021-11-07"},{"lineNumber":27,"author":{"gitId":"crabnuggets"},"content":"        String encodedEvent \u003d \"e | Peppa Pig\u0027s Concert |   | Asia world tour | 19-02-2022 2000 \"","lastModifiedDate":"2021-11-07"},{"lineNumber":28,"author":{"gitId":"crabnuggets"},"content":"                + \"| Indoor Stadium | 1000.9\";","lastModifiedDate":"2021-11-07"},{"lineNumber":29,"author":{"gitId":"crabnuggets"},"content":"        Event decodedEvent \u003d EventDecoder.decodeEventFromString(encodedEvent);","lastModifiedDate":"2021-11-07"},{"lineNumber":30,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":31,"author":{"gitId":"crabnuggets"},"content":"        String expectedTitle \u003d \"Peppa Pig\u0027s Concert\";","lastModifiedDate":"2021-11-07"},{"lineNumber":32,"author":{"gitId":"crabnuggets"},"content":"        assertEquals(expectedTitle, decodedEvent.getTitle());","lastModifiedDate":"2021-11-07"},{"lineNumber":33,"author":{"gitId":"crabnuggets"},"content":"        String expectedStatus \u003d \" \";","lastModifiedDate":"2021-11-07"},{"lineNumber":34,"author":{"gitId":"crabnuggets"},"content":"        assertEquals(expectedStatus, decodedEvent.getStatusIcon());","lastModifiedDate":"2021-11-07"},{"lineNumber":35,"author":{"gitId":"crabnuggets"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":36,"author":{"gitId":"crabnuggets"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"crabnuggets":36}},{"path":"src/test/java/seedu/duke/storage/EventEncoderTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"crabnuggets"},"content":"package seedu.duke.storage;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"crabnuggets"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2021-11-07"},{"lineNumber":4,"author":{"gitId":"crabnuggets"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-11-07"},{"lineNumber":5,"author":{"gitId":"crabnuggets"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"crabnuggets"},"content":"import seedu.duke.exceptions.DukeException;","lastModifiedDate":"2021-10-31"},{"lineNumber":7,"author":{"gitId":"crabnuggets"},"content":"import seedu.duke.items.characteristics.Member;","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"crabnuggets"},"content":"import seedu.duke.parser.Parser;","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"crabnuggets"},"content":"import seedu.duke.items.Event;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"crabnuggets"},"content":"import seedu.duke.items.Task;","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"crabnuggets"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"crabnuggets"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"crabnuggets"},"content":"import java.util.List;","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"crabnuggets"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"crabnuggets"},"content":"import static seedu.duke.Duke.eventCatalog;","lastModifiedDate":"2021-11-07"},{"lineNumber":18,"author":{"gitId":"crabnuggets"},"content":"import static seedu.duke.Duke.memberRoster;","lastModifiedDate":"2021-11-07"},{"lineNumber":19,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"crabnuggets"},"content":"class EventEncoderTest {","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"crabnuggets"},"content":"    @BeforeEach","lastModifiedDate":"2021-11-07"},{"lineNumber":23,"author":{"gitId":"crabnuggets"},"content":"    public void initializeTestEnvironment() throws DukeException {","lastModifiedDate":"2021-11-07"},{"lineNumber":24,"author":{"gitId":"crabnuggets"},"content":"        setUp();","lastModifiedDate":"2021-11-07"},{"lineNumber":25,"author":{"gitId":"crabnuggets"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":26,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":27,"author":{"gitId":"crabnuggets"},"content":"    @AfterEach","lastModifiedDate":"2021-11-07"},{"lineNumber":28,"author":{"gitId":"crabnuggets"},"content":"    public void reset() {","lastModifiedDate":"2021-11-07"},{"lineNumber":29,"author":{"gitId":"crabnuggets"},"content":"        eventCatalog.clear();","lastModifiedDate":"2021-11-07"},{"lineNumber":30,"author":{"gitId":"crabnuggets"},"content":"        memberRoster.clear();","lastModifiedDate":"2021-11-07"},{"lineNumber":31,"author":{"gitId":"crabnuggets"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":32,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":33,"author":{"gitId":"crabnuggets"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"crabnuggets"},"content":"    void encodeEventsList_listOfTwoEvents_expectListOfTwoStrings() throws DukeException {","lastModifiedDate":"2021-10-31"},{"lineNumber":35,"author":{"gitId":"crabnuggets"},"content":"        // Setting up","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"crabnuggets"},"content":"        List\u003cString\u003e encodedEventsList \u003d EventEncoder.encodeEventsList(eventCatalog);","lastModifiedDate":"2021-11-07"},{"lineNumber":37,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"crabnuggets"},"content":"        // Check number of items in encodedEventsList","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"crabnuggets"},"content":"        assertEquals(4, encodedEventsList.size());","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":41,"author":{"gitId":"crabnuggets"},"content":"        // Check the event is saved in the correct String format","lastModifiedDate":"2021-10-19"},{"lineNumber":42,"author":{"gitId":"crabnuggets"},"content":"        String expectedEvent1 \u003d \"e | Peppa Pig\u0027s Concert | X | Asia world tour \"","lastModifiedDate":"2021-10-19"},{"lineNumber":43,"author":{"gitId":"crabnuggets"},"content":"                + \"| 19-02-2022 2000 | Indoor Stadium | 1000.9\";","lastModifiedDate":"2021-10-19"},{"lineNumber":44,"author":{"gitId":"crabnuggets"},"content":"        assertEquals(expectedEvent1, encodedEventsList.get(0));","lastModifiedDate":"2021-10-19"},{"lineNumber":45,"author":{"gitId":"crabnuggets"},"content":"        String expectedSubTask1 \u003d \"t | Hype myself up | X | Drink lots of sugar | 19-02-2022 1950 | JOHN_DOE\"","lastModifiedDate":"2021-11-07"},{"lineNumber":46,"author":{"gitId":"crabnuggets"},"content":"                + \" | 0 | Peppa Pig\u0027s Concert\";","lastModifiedDate":"2021-11-07"},{"lineNumber":47,"author":{"gitId":"crabnuggets"},"content":"        assertEquals(expectedSubTask1, encodedEventsList.get(1));","lastModifiedDate":"2021-10-19"},{"lineNumber":48,"author":{"gitId":"crabnuggets"},"content":"        String expectedSubTask2 \u003d \"t | Enter venue |   |  | 19-02-2022 1955 | JOHN_DOE JANE_DOE\"","lastModifiedDate":"2021-11-07"},{"lineNumber":49,"author":{"gitId":"crabnuggets"},"content":"                + \" | 0 | Peppa Pig\u0027s Concert\";","lastModifiedDate":"2021-11-07"},{"lineNumber":50,"author":{"gitId":"crabnuggets"},"content":"        assertEquals(expectedSubTask2, encodedEventsList.get(2));","lastModifiedDate":"2021-10-19"},{"lineNumber":51,"author":{"gitId":"crabnuggets"},"content":"        String expectedEvent2 \u003d \"e | Funfair |   | For charity | 20-02-2022 2030 | Parade square | 2000.1\";","lastModifiedDate":"2021-10-19"},{"lineNumber":52,"author":{"gitId":"crabnuggets"},"content":"        assertEquals(expectedEvent2, encodedEventsList.get(3));","lastModifiedDate":"2021-10-19"},{"lineNumber":53,"author":{"gitId":"crabnuggets"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":54,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":55,"author":{"gitId":"crabnuggets"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":56,"author":{"gitId":"crabnuggets"},"content":"     * Generates an event catalog and member roster for testing.","lastModifiedDate":"2021-11-07"},{"lineNumber":57,"author":{"gitId":"crabnuggets"},"content":"     * Event 1 contains 2 sub-tasks, the first subtask contains all fields and 1 member whilst","lastModifiedDate":"2021-11-07"},{"lineNumber":58,"author":{"gitId":"crabnuggets"},"content":"     * the second contains an empty description field and 2 members.","lastModifiedDate":"2021-11-07"},{"lineNumber":59,"author":{"gitId":"crabnuggets"},"content":"     * Event 2 contains no sub-tasks.","lastModifiedDate":"2021-10-19"},{"lineNumber":60,"author":{"gitId":"crabnuggets"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":61,"author":{"gitId":"crabnuggets"},"content":"    private void setUp() throws DukeException {","lastModifiedDate":"2021-11-07"},{"lineNumber":62,"author":{"gitId":"crabnuggets"},"content":"        Member johnDoe \u003d new Member(\"JOHN DOE\");","lastModifiedDate":"2021-11-07"},{"lineNumber":63,"author":{"gitId":"crabnuggets"},"content":"        memberRoster.add(johnDoe);","lastModifiedDate":"2021-11-07"},{"lineNumber":64,"author":{"gitId":"crabnuggets"},"content":"        Member janeDoe \u003d new Member(\"JANE DOE\");","lastModifiedDate":"2021-11-07"},{"lineNumber":65,"author":{"gitId":"crabnuggets"},"content":"        memberRoster.add(janeDoe);","lastModifiedDate":"2021-11-07"},{"lineNumber":66,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":67,"author":{"gitId":"crabnuggets"},"content":"        LocalDateTime event1DateTime \u003d Parser.convertDateTime(\"19-02-2022 2000\");","lastModifiedDate":"2021-10-12"},{"lineNumber":68,"author":{"gitId":"crabnuggets"},"content":"        Event event1 \u003d new Event(\"Peppa Pig\u0027s Concert\",","lastModifiedDate":"2021-10-12"},{"lineNumber":69,"author":{"gitId":"crabnuggets"},"content":"                \"Asia world tour\", event1DateTime,","lastModifiedDate":"2021-10-12"},{"lineNumber":70,"author":{"gitId":"crabnuggets"},"content":"                \"Indoor Stadium\", 1000.90);","lastModifiedDate":"2021-10-12"},{"lineNumber":71,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":72,"author":{"gitId":"crabnuggets"},"content":"        LocalDateTime task1DateTime \u003d Parser.convertDateTime(\"19-02-2022 1950\");","lastModifiedDate":"2021-10-19"},{"lineNumber":73,"author":{"gitId":"crabnuggets"},"content":"        Task task1 \u003d new Task(\"Hype myself up\", \"Drink lots of sugar\", task1DateTime);","lastModifiedDate":"2021-10-24"},{"lineNumber":74,"author":{"gitId":"crabnuggets"},"content":"        task1.memberList.add(johnDoe);","lastModifiedDate":"2021-11-07"},{"lineNumber":75,"author":{"gitId":"crabnuggets"},"content":"        task1.markAsDone();","lastModifiedDate":"2021-10-24"},{"lineNumber":76,"author":{"gitId":"crabnuggets"},"content":"        task1.setEvent(event1);","lastModifiedDate":"2021-11-07"},{"lineNumber":77,"author":{"gitId":"crabnuggets"},"content":"        event1.addToTaskList(task1);","lastModifiedDate":"2021-10-24"},{"lineNumber":78,"author":{"gitId":"Alvinlj00"},"content":"        event1.getFromTaskList(0).markAsDone();","lastModifiedDate":"2021-10-21"},{"lineNumber":79,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":80,"author":{"gitId":"crabnuggets"},"content":"        LocalDateTime task2DateTime \u003d Parser.convertDateTime(\"19-02-2022 1955\");","lastModifiedDate":"2021-10-19"},{"lineNumber":81,"author":{"gitId":"crabnuggets"},"content":"        Task task2 \u003d new Task(\"Enter venue\", \"\", task2DateTime);","lastModifiedDate":"2021-10-24"},{"lineNumber":82,"author":{"gitId":"crabnuggets"},"content":"        task2.memberList.add(johnDoe);","lastModifiedDate":"2021-11-07"},{"lineNumber":83,"author":{"gitId":"crabnuggets"},"content":"        task2.memberList.add(janeDoe);","lastModifiedDate":"2021-11-07"},{"lineNumber":84,"author":{"gitId":"crabnuggets"},"content":"        task2.setEvent(event1);","lastModifiedDate":"2021-11-07"},{"lineNumber":85,"author":{"gitId":"crabnuggets"},"content":"        event1.addToTaskList(task2);","lastModifiedDate":"2021-10-24"},{"lineNumber":86,"author":{"gitId":"crabnuggets"},"content":"        event1.markAsDone();","lastModifiedDate":"2021-10-12"},{"lineNumber":87,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":88,"author":{"gitId":"crabnuggets"},"content":"        LocalDateTime event2DateTime \u003d Parser.convertDateTime(\"20-02-2022 2030\");","lastModifiedDate":"2021-10-12"},{"lineNumber":89,"author":{"gitId":"crabnuggets"},"content":"        Event event2 \u003d new Event(\"Funfair\",","lastModifiedDate":"2021-10-12"},{"lineNumber":90,"author":{"gitId":"crabnuggets"},"content":"                \"For charity\", event2DateTime,","lastModifiedDate":"2021-10-12"},{"lineNumber":91,"author":{"gitId":"crabnuggets"},"content":"                \"Parade square\", 2000.10);","lastModifiedDate":"2021-10-12"},{"lineNumber":92,"author":{"gitId":"crabnuggets"},"content":"        ArrayList\u003cEvent\u003e eventsList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-12"},{"lineNumber":93,"author":{"gitId":"crabnuggets"},"content":"        eventsList.add(event1);","lastModifiedDate":"2021-10-12"},{"lineNumber":94,"author":{"gitId":"crabnuggets"},"content":"        eventsList.add(event2);","lastModifiedDate":"2021-10-12"},{"lineNumber":95,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":96,"author":{"gitId":"crabnuggets"},"content":"        eventCatalog.addAll(eventsList);","lastModifiedDate":"2021-11-07"},{"lineNumber":97,"author":{"gitId":"crabnuggets"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":98,"author":{"gitId":"crabnuggets"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"Alvinlj00":1,"crabnuggets":97}},{"path":"src/test/java/seedu/duke/storage/MemberDecoderTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"crabnuggets"},"content":"package seedu.duke.storage;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"crabnuggets"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"crabnuggets"},"content":"import seedu.duke.items.characteristics.Member;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"crabnuggets"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"crabnuggets"},"content":"class MemberDecoderTest {","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"crabnuggets"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"crabnuggets"},"content":"    void decodeMemberFromString_stringValidFormat_expectOneMember() {","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"crabnuggets"},"content":"        // Setting up","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"crabnuggets"},"content":"        String encodedMember \u003d \"m | JOHN_DOE\";","lastModifiedDate":"2021-11-07"},{"lineNumber":14,"author":{"gitId":"crabnuggets"},"content":"        Member decodedMember \u003d MemberDecoder.decodeMemberFromString(encodedMember);","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"crabnuggets"},"content":"        String expectedName \u003d \"JOHN DOE\";","lastModifiedDate":"2021-11-07"},{"lineNumber":17,"author":{"gitId":"crabnuggets"},"content":"        assertEquals(expectedName, decodedMember.getName());","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"crabnuggets"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"crabnuggets"},"content":"}","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"crabnuggets":19}},{"path":"src/test/java/seedu/duke/storage/MemberEncoderTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"crabnuggets"},"content":"package seedu.duke.storage;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"crabnuggets"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"crabnuggets"},"content":"import seedu.duke.items.characteristics.Member;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"crabnuggets"},"content":"import seedu.duke.items.mainlists.MemberRoster;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"crabnuggets"},"content":"import java.util.List;","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"crabnuggets"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"crabnuggets"},"content":"class MemberEncoderTest {","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"crabnuggets"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"crabnuggets"},"content":"    void encodeMembersList_listOfTwoMembers_expectListOfTwoStrings() {","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"crabnuggets"},"content":"        // Setting up","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"crabnuggets"},"content":"        Member member1 \u003d new Member(\"John Doe\");","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"crabnuggets"},"content":"        Member member2 \u003d new Member(\"Jane Doe\");","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"crabnuggets"},"content":"        MemberRoster memberRoster \u003d MemberRoster.getInstance();","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"crabnuggets"},"content":"        memberRoster.add(member1);","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"crabnuggets"},"content":"        memberRoster.add(member2);","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"crabnuggets"},"content":"        List\u003cString\u003e encodedMemberRoster \u003d MemberEncoder.encodeMembersList(memberRoster);","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"crabnuggets"},"content":"        // Check number of items in encodedMemberList","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"crabnuggets"},"content":"        assertEquals(2, encodedMemberRoster.size());","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"crabnuggets"},"content":"        // Check the members are saved in the correct String format","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"crabnuggets"},"content":"        String expectedResult1 \u003d \"m | John_Doe\";","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"crabnuggets"},"content":"        assertEquals(expectedResult1, encodedMemberRoster.get(0));","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"crabnuggets"},"content":"        String expectedResult2 \u003d \"m | Jane_Doe\";","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"crabnuggets"},"content":"        assertEquals(expectedResult2, encodedMemberRoster.get(1));","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"crabnuggets"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"crabnuggets"},"content":"}","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"crabnuggets":32}},{"path":"src/test/java/seedu/duke/storage/TaskDecoderTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"crabnuggets"},"content":"package seedu.duke.storage;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"crabnuggets"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2021-11-07"},{"lineNumber":4,"author":{"gitId":"crabnuggets"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-11-07"},{"lineNumber":5,"author":{"gitId":"crabnuggets"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"crabnuggets"},"content":"import seedu.duke.exceptions.DukeException;","lastModifiedDate":"2021-10-31"},{"lineNumber":7,"author":{"gitId":"crabnuggets"},"content":"import seedu.duke.items.Event;","lastModifiedDate":"2021-11-07"},{"lineNumber":8,"author":{"gitId":"crabnuggets"},"content":"import seedu.duke.items.Task;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"crabnuggets"},"content":"import seedu.duke.items.characteristics.Member;","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"crabnuggets"},"content":"import seedu.duke.parser.Parser;","lastModifiedDate":"2021-11-07"},{"lineNumber":11,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":12,"author":{"gitId":"crabnuggets"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-11-07"},{"lineNumber":13,"author":{"gitId":"crabnuggets"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-11-07"},{"lineNumber":14,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"crabnuggets"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"crabnuggets"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-11-07"},{"lineNumber":17,"author":{"gitId":"crabnuggets"},"content":"import static seedu.duke.Duke.eventCatalog;","lastModifiedDate":"2021-11-07"},{"lineNumber":18,"author":{"gitId":"crabnuggets"},"content":"import static seedu.duke.Duke.memberRoster;","lastModifiedDate":"2021-11-07"},{"lineNumber":19,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"crabnuggets"},"content":"class TaskDecoderTest {","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"crabnuggets"},"content":"    @BeforeEach","lastModifiedDate":"2021-11-07"},{"lineNumber":23,"author":{"gitId":"crabnuggets"},"content":"    public void initializeTestEnvironment() throws DukeException {","lastModifiedDate":"2021-11-07"},{"lineNumber":24,"author":{"gitId":"crabnuggets"},"content":"        setUp();","lastModifiedDate":"2021-11-07"},{"lineNumber":25,"author":{"gitId":"crabnuggets"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":26,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":27,"author":{"gitId":"crabnuggets"},"content":"    @AfterEach","lastModifiedDate":"2021-11-07"},{"lineNumber":28,"author":{"gitId":"crabnuggets"},"content":"    public void reset() {","lastModifiedDate":"2021-11-07"},{"lineNumber":29,"author":{"gitId":"crabnuggets"},"content":"        eventCatalog.clear();","lastModifiedDate":"2021-11-07"},{"lineNumber":30,"author":{"gitId":"crabnuggets"},"content":"        memberRoster.clear();","lastModifiedDate":"2021-11-07"},{"lineNumber":31,"author":{"gitId":"crabnuggets"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":32,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":33,"author":{"gitId":"crabnuggets"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"crabnuggets"},"content":"    void decodeTaskFromString_validDoneTask_expectOneTask() throws DukeException {","lastModifiedDate":"2021-11-07"},{"lineNumber":35,"author":{"gitId":"crabnuggets"},"content":"        String encodedTask \u003d \"t | Hype myself up | X | Drink lots of sugar | 19-02-2022 1950 | JOHN_DOE\"","lastModifiedDate":"2021-11-07"},{"lineNumber":36,"author":{"gitId":"crabnuggets"},"content":"                + \" | 0 | Peppa Pig\u0027s Concert\";","lastModifiedDate":"2021-11-07"},{"lineNumber":37,"author":{"gitId":"crabnuggets"},"content":"        Task decodedTask \u003d TaskDecoder.decodeTaskFromString(encodedTask);","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"crabnuggets"},"content":"        String expectedTitle \u003d \"Hype myself up\";","lastModifiedDate":"2021-11-07"},{"lineNumber":40,"author":{"gitId":"crabnuggets"},"content":"        assertEquals(expectedTitle, decodedTask.getTitle());","lastModifiedDate":"2021-10-19"},{"lineNumber":41,"author":{"gitId":"crabnuggets"},"content":"        String expectedAssociatedEvent \u003d \"Peppa Pig\u0027s Concert\";","lastModifiedDate":"2021-11-07"},{"lineNumber":42,"author":{"gitId":"crabnuggets"},"content":"        assertEquals(expectedAssociatedEvent, eventCatalog.get(0).getTitle());","lastModifiedDate":"2021-11-07"},{"lineNumber":43,"author":{"gitId":"crabnuggets"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":44,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":45,"author":{"gitId":"crabnuggets"},"content":"    @Test","lastModifiedDate":"2021-11-07"},{"lineNumber":46,"author":{"gitId":"crabnuggets"},"content":"    void decodeTaskFromString_validUndoneTask_expectOneTask() throws DukeException {","lastModifiedDate":"2021-11-07"},{"lineNumber":47,"author":{"gitId":"crabnuggets"},"content":"        String encodedTask \u003d \"t | Enter venue |   |  | 19-02-2022 1955 | JANE_DOE | 0 | Peppa Pig\u0027s Concert\";","lastModifiedDate":"2021-11-07"},{"lineNumber":48,"author":{"gitId":"crabnuggets"},"content":"        Task decodedTask \u003d TaskDecoder.decodeTaskFromString(encodedTask);","lastModifiedDate":"2021-11-07"},{"lineNumber":49,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":50,"author":{"gitId":"crabnuggets"},"content":"        String expectedTitle \u003d \"Enter venue\";","lastModifiedDate":"2021-11-07"},{"lineNumber":51,"author":{"gitId":"crabnuggets"},"content":"        assertEquals(expectedTitle, decodedTask.getTitle());","lastModifiedDate":"2021-11-07"},{"lineNumber":52,"author":{"gitId":"crabnuggets"},"content":"        String expectedAssociatedEvent \u003d \"Peppa Pig\u0027s Concert\";","lastModifiedDate":"2021-11-07"},{"lineNumber":53,"author":{"gitId":"crabnuggets"},"content":"        assertEquals(expectedAssociatedEvent, eventCatalog.get(0).getTitle());","lastModifiedDate":"2021-11-07"},{"lineNumber":54,"author":{"gitId":"crabnuggets"},"content":"        String expectedDescription \u003d \"\";","lastModifiedDate":"2021-11-07"},{"lineNumber":55,"author":{"gitId":"crabnuggets"},"content":"        assertEquals(expectedDescription, decodedTask.getDescription());","lastModifiedDate":"2021-11-07"},{"lineNumber":56,"author":{"gitId":"crabnuggets"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":57,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":58,"author":{"gitId":"crabnuggets"},"content":"    @Test","lastModifiedDate":"2021-11-07"},{"lineNumber":59,"author":{"gitId":"crabnuggets"},"content":"    void decodeTaskFromString_outOfBoundsIndexOfEvent_exceptionThrown() {","lastModifiedDate":"2021-11-07"},{"lineNumber":60,"author":{"gitId":"crabnuggets"},"content":"        String encodedTask \u003d \"t | Hype myself up | X | Drink lots of sugar | 19-02-2022 1950 | JOHN_DOE\"","lastModifiedDate":"2021-11-07"},{"lineNumber":61,"author":{"gitId":"crabnuggets"},"content":"                + \" | 3 | Peppa Pig\u0027s Concert\";","lastModifiedDate":"2021-11-07"},{"lineNumber":62,"author":{"gitId":"crabnuggets"},"content":"        assertThrows(DukeException.class, () -\u003e {","lastModifiedDate":"2021-11-07"},{"lineNumber":63,"author":{"gitId":"crabnuggets"},"content":"            TaskDecoder.decodeTaskFromString(encodedTask);","lastModifiedDate":"2021-11-07"},{"lineNumber":64,"author":{"gitId":"crabnuggets"},"content":"        });","lastModifiedDate":"2021-11-07"},{"lineNumber":65,"author":{"gitId":"crabnuggets"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":66,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":67,"author":{"gitId":"crabnuggets"},"content":"    @Test","lastModifiedDate":"2021-11-07"},{"lineNumber":68,"author":{"gitId":"crabnuggets"},"content":"    void decodeTaskFromString_negativeEventIndex_exceptionThrown() {","lastModifiedDate":"2021-11-07"},{"lineNumber":69,"author":{"gitId":"crabnuggets"},"content":"        String encodedTask \u003d \"t | Hype myself up | X | Drink lots of sugar | 19-02-2022 1950 | JOHN_DOE\"","lastModifiedDate":"2021-11-07"},{"lineNumber":70,"author":{"gitId":"crabnuggets"},"content":"                + \" | -1 | Peppa Pig\u0027s Doom\";","lastModifiedDate":"2021-11-07"},{"lineNumber":71,"author":{"gitId":"crabnuggets"},"content":"        assertThrows(DukeException.class, () -\u003e {","lastModifiedDate":"2021-11-07"},{"lineNumber":72,"author":{"gitId":"crabnuggets"},"content":"            TaskDecoder.decodeTaskFromString(encodedTask);","lastModifiedDate":"2021-11-07"},{"lineNumber":73,"author":{"gitId":"crabnuggets"},"content":"        });","lastModifiedDate":"2021-11-07"},{"lineNumber":74,"author":{"gitId":"crabnuggets"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":75,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":76,"author":{"gitId":"crabnuggets"},"content":"    @Test","lastModifiedDate":"2021-11-07"},{"lineNumber":77,"author":{"gitId":"crabnuggets"},"content":"    void decodeTaskFromString_invalidMemberListSize_exceptionThrown() {","lastModifiedDate":"2021-11-07"},{"lineNumber":78,"author":{"gitId":"crabnuggets"},"content":"        String encodedTask \u003d \"t | Enter venue |   |  | 19-02-2022 1955 | BIGGEST_FAN | 1 | Peppa Pig\u0027s Concert\";","lastModifiedDate":"2021-11-07"},{"lineNumber":79,"author":{"gitId":"crabnuggets"},"content":"        assertThrows(DukeException.class, () -\u003e {","lastModifiedDate":"2021-11-07"},{"lineNumber":80,"author":{"gitId":"crabnuggets"},"content":"            TaskDecoder.decodeTaskFromString(encodedTask);","lastModifiedDate":"2021-11-07"},{"lineNumber":81,"author":{"gitId":"crabnuggets"},"content":"        });","lastModifiedDate":"2021-11-07"},{"lineNumber":82,"author":{"gitId":"crabnuggets"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":83,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":84,"author":{"gitId":"crabnuggets"},"content":"    /**","lastModifiedDate":"2021-11-07"},{"lineNumber":85,"author":{"gitId":"crabnuggets"},"content":"     * Generates an event catalog and member roster for testing.","lastModifiedDate":"2021-11-07"},{"lineNumber":86,"author":{"gitId":"crabnuggets"},"content":"     * Event 1 contains 2 sub-tasks, the first subtask contains all fields and 1 member whilst","lastModifiedDate":"2021-11-07"},{"lineNumber":87,"author":{"gitId":"crabnuggets"},"content":"     * the second contains an empty description field and 2 members.","lastModifiedDate":"2021-11-07"},{"lineNumber":88,"author":{"gitId":"crabnuggets"},"content":"     * Event 2 contains no sub-tasks.","lastModifiedDate":"2021-11-07"},{"lineNumber":89,"author":{"gitId":"crabnuggets"},"content":"     */","lastModifiedDate":"2021-11-07"},{"lineNumber":90,"author":{"gitId":"crabnuggets"},"content":"    private void setUp() throws DukeException {","lastModifiedDate":"2021-11-07"},{"lineNumber":91,"author":{"gitId":"crabnuggets"},"content":"        Member johnDoe \u003d new Member(\"JOHN DOE\");","lastModifiedDate":"2021-11-07"},{"lineNumber":92,"author":{"gitId":"crabnuggets"},"content":"        memberRoster.add(johnDoe);","lastModifiedDate":"2021-11-07"},{"lineNumber":93,"author":{"gitId":"crabnuggets"},"content":"        Member janeDoe \u003d new Member(\"JANE DOE\");","lastModifiedDate":"2021-11-07"},{"lineNumber":94,"author":{"gitId":"crabnuggets"},"content":"        memberRoster.add(janeDoe);","lastModifiedDate":"2021-11-07"},{"lineNumber":95,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":96,"author":{"gitId":"crabnuggets"},"content":"        LocalDateTime event1DateTime \u003d Parser.convertDateTime(\"19-02-2022 2000\");","lastModifiedDate":"2021-11-07"},{"lineNumber":97,"author":{"gitId":"crabnuggets"},"content":"        Event event1 \u003d new Event(\"Peppa Pig\u0027s Concert\",","lastModifiedDate":"2021-11-07"},{"lineNumber":98,"author":{"gitId":"crabnuggets"},"content":"                \"Asia world tour\", event1DateTime,","lastModifiedDate":"2021-11-07"},{"lineNumber":99,"author":{"gitId":"crabnuggets"},"content":"                \"Indoor Stadium\", 1000.90);","lastModifiedDate":"2021-11-07"},{"lineNumber":100,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":101,"author":{"gitId":"crabnuggets"},"content":"        LocalDateTime task1DateTime \u003d Parser.convertDateTime(\"19-02-2022 1950\");","lastModifiedDate":"2021-11-07"},{"lineNumber":102,"author":{"gitId":"crabnuggets"},"content":"        Task task1 \u003d new Task(\"Hype myself up\", \"Drink lots of sugar\", task1DateTime);","lastModifiedDate":"2021-11-07"},{"lineNumber":103,"author":{"gitId":"crabnuggets"},"content":"        task1.memberList.add(johnDoe);","lastModifiedDate":"2021-11-07"},{"lineNumber":104,"author":{"gitId":"crabnuggets"},"content":"        task1.markAsDone();","lastModifiedDate":"2021-11-07"},{"lineNumber":105,"author":{"gitId":"crabnuggets"},"content":"        task1.setEvent(event1);","lastModifiedDate":"2021-11-07"},{"lineNumber":106,"author":{"gitId":"crabnuggets"},"content":"        event1.addToTaskList(task1);","lastModifiedDate":"2021-11-07"},{"lineNumber":107,"author":{"gitId":"crabnuggets"},"content":"        event1.getFromTaskList(0).markAsDone();","lastModifiedDate":"2021-11-07"},{"lineNumber":108,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":109,"author":{"gitId":"crabnuggets"},"content":"        LocalDateTime task2DateTime \u003d Parser.convertDateTime(\"19-02-2022 1955\");","lastModifiedDate":"2021-11-07"},{"lineNumber":110,"author":{"gitId":"crabnuggets"},"content":"        Task task2 \u003d new Task(\"Enter venue\", \"\", task2DateTime);","lastModifiedDate":"2021-11-07"},{"lineNumber":111,"author":{"gitId":"crabnuggets"},"content":"        task2.memberList.add(johnDoe);","lastModifiedDate":"2021-11-07"},{"lineNumber":112,"author":{"gitId":"crabnuggets"},"content":"        task2.memberList.add(janeDoe);","lastModifiedDate":"2021-11-07"},{"lineNumber":113,"author":{"gitId":"crabnuggets"},"content":"        task2.setEvent(event1);","lastModifiedDate":"2021-11-07"},{"lineNumber":114,"author":{"gitId":"crabnuggets"},"content":"        event1.addToTaskList(task2);","lastModifiedDate":"2021-11-07"},{"lineNumber":115,"author":{"gitId":"crabnuggets"},"content":"        event1.markAsDone();","lastModifiedDate":"2021-11-07"},{"lineNumber":116,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":117,"author":{"gitId":"crabnuggets"},"content":"        LocalDateTime event2DateTime \u003d Parser.convertDateTime(\"20-02-2022 2030\");","lastModifiedDate":"2021-11-07"},{"lineNumber":118,"author":{"gitId":"crabnuggets"},"content":"        Event event2 \u003d new Event(\"Funfair\",","lastModifiedDate":"2021-11-07"},{"lineNumber":119,"author":{"gitId":"crabnuggets"},"content":"                \"For charity\", event2DateTime,","lastModifiedDate":"2021-11-07"},{"lineNumber":120,"author":{"gitId":"crabnuggets"},"content":"                \"Parade square\", 2000.10);","lastModifiedDate":"2021-11-07"},{"lineNumber":121,"author":{"gitId":"crabnuggets"},"content":"        ArrayList\u003cEvent\u003e eventsList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-11-07"},{"lineNumber":122,"author":{"gitId":"crabnuggets"},"content":"        eventsList.add(event1);","lastModifiedDate":"2021-11-07"},{"lineNumber":123,"author":{"gitId":"crabnuggets"},"content":"        eventsList.add(event2);","lastModifiedDate":"2021-11-07"},{"lineNumber":124,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":125,"author":{"gitId":"crabnuggets"},"content":"        eventCatalog.addAll(eventsList);","lastModifiedDate":"2021-11-07"},{"lineNumber":126,"author":{"gitId":"crabnuggets"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":127,"author":{"gitId":"crabnuggets"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"crabnuggets":127}},{"path":"src/test/java/seedu/duke/storage/TaskEncoderTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"crabnuggets"},"content":"package seedu.duke.storage;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"crabnuggets"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2021-11-07"},{"lineNumber":4,"author":{"gitId":"crabnuggets"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"crabnuggets"},"content":"import seedu.duke.exceptions.DukeException;","lastModifiedDate":"2021-10-31"},{"lineNumber":6,"author":{"gitId":"crabnuggets"},"content":"import seedu.duke.items.Event;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"crabnuggets"},"content":"import seedu.duke.items.characteristics.Member;","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"crabnuggets"},"content":"import seedu.duke.parser.Parser;","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"crabnuggets"},"content":"import seedu.duke.items.Task;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":12,"author":{"gitId":"crabnuggets"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"crabnuggets"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"crabnuggets"},"content":"import java.util.List;","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"crabnuggets"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"crabnuggets"},"content":"import static seedu.duke.Duke.eventCatalog;","lastModifiedDate":"2021-11-07"},{"lineNumber":18,"author":{"gitId":"crabnuggets"},"content":"import static seedu.duke.Duke.memberRoster;","lastModifiedDate":"2021-11-07"},{"lineNumber":19,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"crabnuggets"},"content":"class TaskEncoderTest {","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"crabnuggets"},"content":"    @AfterEach","lastModifiedDate":"2021-11-07"},{"lineNumber":23,"author":{"gitId":"crabnuggets"},"content":"    public void reset() {","lastModifiedDate":"2021-11-07"},{"lineNumber":24,"author":{"gitId":"crabnuggets"},"content":"        eventCatalog.clear();","lastModifiedDate":"2021-11-07"},{"lineNumber":25,"author":{"gitId":"crabnuggets"},"content":"        memberRoster.clear();","lastModifiedDate":"2021-11-07"},{"lineNumber":26,"author":{"gitId":"crabnuggets"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":27,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":28,"author":{"gitId":"crabnuggets"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"crabnuggets"},"content":"    void encodeTasksList_listOfTwoTasks_expectListOfTwoStrings() throws DukeException {","lastModifiedDate":"2021-10-31"},{"lineNumber":30,"author":{"gitId":"crabnuggets"},"content":"        // Setting up","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"crabnuggets"},"content":"        ArrayList\u003cTask\u003e tasksList \u003d setUp();","lastModifiedDate":"2021-11-07"},{"lineNumber":32,"author":{"gitId":"crabnuggets"},"content":"        List\u003cString\u003e encodedTasksList \u003d TaskEncoder.encodeTasksList(tasksList);","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"crabnuggets"},"content":"        // Check number of items in encodedTasksList","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"crabnuggets"},"content":"        assertEquals(2, encodedTasksList.size());","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"crabnuggets"},"content":"        // Check the item is saved in the correct String format","lastModifiedDate":"2021-10-24"},{"lineNumber":38,"author":{"gitId":"crabnuggets"},"content":"        String expectedResult1 \u003d \"t | Hype myself up | X | Drink lots of sugar | 19-02-2022 1950 | JOHN_DOE\"","lastModifiedDate":"2021-11-07"},{"lineNumber":39,"author":{"gitId":"crabnuggets"},"content":"                + \" | 0 | Peppa Pig\u0027s Concert\";","lastModifiedDate":"2021-11-07"},{"lineNumber":40,"author":{"gitId":"crabnuggets"},"content":"        assertEquals(expectedResult1, encodedTasksList.get(0));","lastModifiedDate":"2021-10-24"},{"lineNumber":41,"author":{"gitId":"crabnuggets"},"content":"        String expectedResult2 \u003d \"t | Enter venue |   |  | 19-02-2022 1955 | JOHN_DOE JANE_DOE\"","lastModifiedDate":"2021-11-07"},{"lineNumber":42,"author":{"gitId":"crabnuggets"},"content":"                + \" | 0 | Peppa Pig\u0027s Concert\";","lastModifiedDate":"2021-11-07"},{"lineNumber":43,"author":{"gitId":"crabnuggets"},"content":"        assertEquals(expectedResult2, encodedTasksList.get(1));","lastModifiedDate":"2021-10-24"},{"lineNumber":44,"author":{"gitId":"crabnuggets"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":45,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":46,"author":{"gitId":"crabnuggets"},"content":"    private ArrayList\u003cTask\u003e setUp() throws DukeException {","lastModifiedDate":"2021-11-07"},{"lineNumber":47,"author":{"gitId":"crabnuggets"},"content":"        Member johnDoe \u003d new Member(\"JOHN DOE\");","lastModifiedDate":"2021-11-07"},{"lineNumber":48,"author":{"gitId":"crabnuggets"},"content":"        memberRoster.add(johnDoe);","lastModifiedDate":"2021-11-07"},{"lineNumber":49,"author":{"gitId":"crabnuggets"},"content":"        Member janeDoe \u003d new Member(\"JANE DOE\");","lastModifiedDate":"2021-11-07"},{"lineNumber":50,"author":{"gitId":"crabnuggets"},"content":"        memberRoster.add(janeDoe);","lastModifiedDate":"2021-11-07"},{"lineNumber":51,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":52,"author":{"gitId":"crabnuggets"},"content":"        LocalDateTime event1DateTime \u003d Parser.convertDateTime(\"19-02-2022 2000\");","lastModifiedDate":"2021-11-07"},{"lineNumber":53,"author":{"gitId":"crabnuggets"},"content":"        Event event1 \u003d new Event(\"Peppa Pig\u0027s Concert\",","lastModifiedDate":"2021-11-07"},{"lineNumber":54,"author":{"gitId":"crabnuggets"},"content":"                \"Asia world tour\", event1DateTime,","lastModifiedDate":"2021-11-07"},{"lineNumber":55,"author":{"gitId":"crabnuggets"},"content":"                \"Indoor Stadium\", 1000.90);","lastModifiedDate":"2021-11-07"},{"lineNumber":56,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":57,"author":{"gitId":"crabnuggets"},"content":"        LocalDateTime task1DateTime \u003d Parser.convertDateTime(\"19-02-2022 1950\");","lastModifiedDate":"2021-11-07"},{"lineNumber":58,"author":{"gitId":"crabnuggets"},"content":"        Task task1 \u003d new Task(\"Hype myself up\", \"Drink lots of sugar\", task1DateTime);","lastModifiedDate":"2021-11-07"},{"lineNumber":59,"author":{"gitId":"crabnuggets"},"content":"        task1.memberList.add(johnDoe);","lastModifiedDate":"2021-11-07"},{"lineNumber":60,"author":{"gitId":"crabnuggets"},"content":"        task1.markAsDone();","lastModifiedDate":"2021-11-07"},{"lineNumber":61,"author":{"gitId":"crabnuggets"},"content":"        task1.setEvent(event1);","lastModifiedDate":"2021-11-07"},{"lineNumber":62,"author":{"gitId":"crabnuggets"},"content":"        event1.addToTaskList(task1);","lastModifiedDate":"2021-11-07"},{"lineNumber":63,"author":{"gitId":"crabnuggets"},"content":"        event1.getFromTaskList(0).markAsDone();","lastModifiedDate":"2021-11-07"},{"lineNumber":64,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":65,"author":{"gitId":"crabnuggets"},"content":"        LocalDateTime task2DateTime \u003d Parser.convertDateTime(\"19-02-2022 1955\");","lastModifiedDate":"2021-11-07"},{"lineNumber":66,"author":{"gitId":"crabnuggets"},"content":"        Task task2 \u003d new Task(\"Enter venue\", \"\", task2DateTime);","lastModifiedDate":"2021-11-07"},{"lineNumber":67,"author":{"gitId":"crabnuggets"},"content":"        task2.memberList.add(johnDoe);","lastModifiedDate":"2021-11-07"},{"lineNumber":68,"author":{"gitId":"crabnuggets"},"content":"        task2.memberList.add(janeDoe);","lastModifiedDate":"2021-11-07"},{"lineNumber":69,"author":{"gitId":"crabnuggets"},"content":"        task2.setEvent(event1);","lastModifiedDate":"2021-11-07"},{"lineNumber":70,"author":{"gitId":"crabnuggets"},"content":"        event1.addToTaskList(task2);","lastModifiedDate":"2021-11-07"},{"lineNumber":71,"author":{"gitId":"crabnuggets"},"content":"        event1.markAsDone();","lastModifiedDate":"2021-11-07"},{"lineNumber":72,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":73,"author":{"gitId":"crabnuggets"},"content":"        eventCatalog.add(event1);","lastModifiedDate":"2021-11-07"},{"lineNumber":74,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":75,"author":{"gitId":"crabnuggets"},"content":"        return event1.getTaskList();","lastModifiedDate":"2021-11-07"},{"lineNumber":76,"author":{"gitId":"crabnuggets"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":77,"author":{"gitId":"crabnuggets"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"crabnuggets":77}}]
