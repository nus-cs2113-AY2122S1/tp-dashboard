[{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    mainClassName \u003d \"seedu.duke.Duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.23\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"crabnuggets"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2021-10-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"crabnuggets":1,"-":46}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# About us","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"Display | Name | Github Profile | Portfolio ","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"--------|:----:|:--------------:|:---------:","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"Alvinlj00"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Alvin Lim | [Github](https://github.com/Alvinlj00) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2021-09-29"},{"lineNumber":6,"author":{"gitId":"crabnuggets"},"content":"![](https://static.wikia.nocookie.net/tttecommunitycentral/images/3/3e/Thomas%27_Train_%28Restored-UK%29/revision/latest?cb\u003d20190329190733) | Alvin Pang | [Github](https://github.com/crabnuggets) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2021-09-29"},{"lineNumber":7,"author":{"gitId":"alwinangys"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Alwin Ang | [Github](https://github.com/alwinangys) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2021-09-29"},{"lineNumber":8,"author":{"gitId":"antrikshv"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Antriksh Verma | [Github](https://github.com/antrikshv) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2021-09-29"}],"authorContributionMap":{"antrikshv":1,"Alvinlj00":1,"crabnuggets":1,"-":4,"alwinangys":1}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Developer Guide","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Acknowledgements","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"{list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2020-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"## Design \u0026 implementation","lastModifiedDate":"2020-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":9,"author":{"gitId":"crabnuggets"},"content":"{TO DELETE: Describe the design and implementation of the product. Use UML diagrams and short code snippets where applicable.}","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":11,"author":{"gitId":"crabnuggets"},"content":"This section describes some noteworthy details on how certain features are designed and implemented.","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"alwinangys"},"content":"### Logic component","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"alwinangys"},"content":"**API**: `Parser.java` {NOTE: this may change based on further implementations}","lastModifiedDate":"2021-10-22"},{"lineNumber":16,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":17,"author":{"gitId":"alwinangys"},"content":"(insert relevant information here about taking in user input and parsing it etc.)","lastModifiedDate":"2021-10-22"},{"lineNumber":18,"author":{"gitId":"antrikshv"},"content":"#### List Functionality","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"antrikshv"},"content":"![](images/ListDiagram.png)","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"antrikshv"},"content":"How List works:","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"antrikshv"},"content":"1. When the `parser` class parses `list` as the command from the user, a new `Command` object, `ListCommand` is created.","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"antrikshv"},"content":"2. The `ListCommand` constructor will parse through the user command to remove the empty space by calling `checkForEmptyCells`","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"antrikshv"},"content":"3. Then it would initialize the `listType` value depending on the `userCommand`","lastModifiedDate":"2021-10-27"},{"lineNumber":25,"author":{"gitId":"antrikshv"},"content":"4. This processed information would be passed back to `parser` then on to `Duke`.","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"antrikshv"},"content":"5. `Duke` then calls the `execute` method in `ListCommand` which will then return an object of type `CommandResult` and would print out the list corresponding to the `listType` in chronological order","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"antrikshv"},"content":"6. list can display 4 types of list depending on the `listType` ","lastModifiedDate":"2021-10-27"},{"lineNumber":28,"author":{"gitId":"antrikshv"},"content":"7. `list` : to list the Overall Schedule ","lastModifiedDate":"2021-10-27"},{"lineNumber":29,"author":{"gitId":"antrikshv"},"content":"8. `list -m` : to list all the members in the Overall Members List","lastModifiedDate":"2021-10-27"},{"lineNumber":30,"author":{"gitId":"antrikshv"},"content":"9. `list {Event_Num} -t` : to display all the tasks in a unique Event","lastModifiedDate":"2021-10-27"},{"lineNumber":31,"author":{"gitId":"antrikshv"},"content":"10. `list {Event_Num} t/{Task_Num}` : to display all the members involved in a specific task","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":33,"author":{"gitId":"antrikshv"},"content":"#### Next Functionality","lastModifiedDate":"2021-10-27"},{"lineNumber":34,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":35,"author":{"gitId":"antrikshv"},"content":"How Next works:","lastModifiedDate":"2021-10-27"},{"lineNumber":36,"author":{"gitId":"antrikshv"},"content":"1. When the `Parser` class parses `next` as the command from the user, a new `Command` object, `NextCommand` is created.","lastModifiedDate":"2021-10-27"},{"lineNumber":37,"author":{"gitId":"antrikshv"},"content":"2. Within the constructor `NextCommand` process the inputs from the user","lastModifiedDate":"2021-10-27"},{"lineNumber":38,"author":{"gitId":"antrikshv"},"content":"3. `Duke` then calls `execute` within the `NextCommand` where in it will display the most upcoming event or task depending on the user input","lastModifiedDate":"2021-10-27"},{"lineNumber":39,"author":{"gitId":"antrikshv"},"content":"4. `task` will display next upcoming task and `event` will display next upcoming event","lastModifiedDate":"2021-10-27"},{"lineNumber":40,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":41,"author":{"gitId":"antrikshv"},"content":"#### Update Functionality","lastModifiedDate":"2021-10-27"},{"lineNumber":42,"author":{"gitId":"antrikshv"},"content":"![](images/UpdateDiagram.png)","lastModifiedDate":"2021-10-27"},{"lineNumber":43,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":44,"author":{"gitId":"antrikshv"},"content":"How Updating works:","lastModifiedDate":"2021-10-27"},{"lineNumber":45,"author":{"gitId":"antrikshv"},"content":"1. When the `Parser` class parses `update` as the command from the user, a new `Command` object, `UpdateCommand` is created.","lastModifiedDate":"2021-10-27"},{"lineNumber":46,"author":{"gitId":"antrikshv"},"content":"2. The `UpdateCommand` constructor processes the entire input from the user by calling `prepareUpdates`.","lastModifiedDate":"2021-10-27"},{"lineNumber":47,"author":{"gitId":"antrikshv"},"content":"3. It will the display to the user the selected `Event`","lastModifiedDate":"2021-10-27"},{"lineNumber":48,"author":{"gitId":"antrikshv"},"content":"4. `Duke` then calls the `execute`  method in `UpdateCommand`","lastModifiedDate":"2021-10-27"},{"lineNumber":49,"author":{"gitId":"antrikshv"},"content":"5. `UpdateCommand` will interact with `Duke` and the Users Inputs to finish the updates the User requires within a loop","lastModifiedDate":"2021-10-27"},{"lineNumber":50,"author":{"gitId":"antrikshv"},"content":"6. Once all the updates are completed, and we exit the loop, `UpdateCommand` will return a `postUpdateMessage()` along with `CommandResult` object to show the User the result of the Updates","lastModifiedDate":"2021-10-27"},{"lineNumber":51,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":52,"author":{"gitId":"alwinangys"},"content":"#### Delete Functionality","lastModifiedDate":"2021-10-22"},{"lineNumber":53,"author":{"gitId":"alwinangys"},"content":"How deleting works:","lastModifiedDate":"2021-10-22"},{"lineNumber":54,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":55,"author":{"gitId":"alwinangys"},"content":"1. When the `Parser` class parses `delete` as the command from the user, a new `Command` object, `DeleteCommand` is created.","lastModifiedDate":"2021-10-22"},{"lineNumber":56,"author":{"gitId":"alwinangys"},"content":"2. The `DeleteCommand` constructor processes the entire input from the user by calling `prepareInputs`.","lastModifiedDate":"2021-10-22"},{"lineNumber":57,"author":{"gitId":"alwinangys"},"content":"3. `DeleteCommand` has 3 uses: deleting an `Event`, a `Task`, or to delete all `Event`s through the command `delete all`.","lastModifiedDate":"2021-10-22"},{"lineNumber":58,"author":{"gitId":"alwinangys"},"content":"4. The constructor processes the usage for `DeleteCommand` and executes the actual deletion through `execute` which returns a `CommandResult` object with the associated deletion message from the `Ui` class.","lastModifiedDate":"2021-10-22"},{"lineNumber":59,"author":{"gitId":"alwinangys"},"content":"5. `delete all` will not immediately invoke the `clear()` method on the global `eventCatalog` ArrayList and will instead prompt a confirmation from the user before deleting all `Event`s.","lastModifiedDate":"2021-10-22"},{"lineNumber":60,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":61,"author":{"gitId":"alwinangys"},"content":"#### Select Functionality","lastModifiedDate":"2021-10-26"},{"lineNumber":62,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":63,"author":{"gitId":"alwinangys"},"content":"![](images/SelectDiagram.png)","lastModifiedDate":"2021-10-26"},{"lineNumber":64,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":65,"author":{"gitId":"alwinangys"},"content":"How selecting an `Event` or an event\u0027s nested `Task` works:","lastModifiedDate":"2021-10-26"},{"lineNumber":66,"author":{"gitId":"alwinangys"},"content":"1. When the `Parser` class parses `select` as the command from the user, a new `Command` object, `SelectCommand` is created.","lastModifiedDate":"2021-10-26"},{"lineNumber":67,"author":{"gitId":"alwinangys"},"content":"2. If the command contains a valid flag (`-e` or `-t`), `SelectCommand` processes the input from the user by calling `prepareInputs`.","lastModifiedDate":"2021-10-26"},{"lineNumber":68,"author":{"gitId":"alwinangys"},"content":"3. If the user selects an `Event`, `SelectCommand` updates the index of this `Event` in `Parser`.","lastModifiedDate":"2021-10-26"},{"lineNumber":69,"author":{"gitId":"alwinangys"},"content":"4. `SelectCommand` then passes the processed inputs back to `Parser`, which passes it back to `Duke`.","lastModifiedDate":"2021-10-26"},{"lineNumber":70,"author":{"gitId":"alwinangys"},"content":"5. `Duke` then calls the `execute` method in `SelectCommand` which will return an object of type `CommandResult`, and the respective output will be printed.","lastModifiedDate":"2021-10-26"},{"lineNumber":71,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":72,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":73,"author":{"gitId":"crabnuggets"},"content":"### Storage component","lastModifiedDate":"2021-10-19"},{"lineNumber":74,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":75,"author":{"gitId":"crabnuggets"},"content":"#### Save Functionality","lastModifiedDate":"2021-10-19"},{"lineNumber":76,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":77,"author":{"gitId":"crabnuggets"},"content":"![](images/SaveDiagram.png)","lastModifiedDate":"2021-10-19"},{"lineNumber":78,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":79,"author":{"gitId":"crabnuggets"},"content":"How the `save` functionality works: ","lastModifiedDate":"2021-10-19"},{"lineNumber":80,"author":{"gitId":"crabnuggets"},"content":"1. When the `save` method is called, `StorageFile` constructs a new `File` object using the configured `DEFAULT_FILE_PATH` (see Step 2 in diagram).","lastModifiedDate":"2021-10-27"},{"lineNumber":81,"author":{"gitId":"crabnuggets"},"content":"2. Checks for the presence of the `File` object on the local system and creates the `data` directory and `.txt` file if required (see Steps 4-5 in diagram).","lastModifiedDate":"2021-10-27"},{"lineNumber":82,"author":{"gitId":"crabnuggets"},"content":"3. For each `Member` in the provided `memberRoster`, the `encodeMemebersList` method will be called to parse each member and its respective member into an overall `ArrayList\u003cString\u003e` and return this (see Steps 6-7 in diagram).  ","lastModifiedDate":"2021-10-27"},{"lineNumber":83,"author":{"gitId":"crabnuggets"},"content":"4. For each `Event` in the provided `eventsList`, the `encodeEventsList` method will be called to parse each event and its respective tasks into an overall `ArrayList\u003cString\u003e` and return this (see Steps 8-9 in diagram). ","lastModifiedDate":"2021-10-27"},{"lineNumber":84,"author":{"gitId":"crabnuggets"},"content":"5. The `writeToFile` method will be called to write the two returned `ArrayList\u003cString\u003e` into the `.txt` save file locally for future uses of the program (see Steps 10-11 in diagram).","lastModifiedDate":"2021-10-27"},{"lineNumber":85,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":86,"author":{"gitId":"crabnuggets"},"content":"#### Load Functionality ","lastModifiedDate":"2021-10-27"},{"lineNumber":87,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":88,"author":{"gitId":"crabnuggets"},"content":"![](images/LoadDiagram.png)","lastModifiedDate":"2021-10-27"},{"lineNumber":89,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":90,"author":{"gitId":"crabnuggets"},"content":"How the `load` functionality works: ","lastModifiedDate":"2021-10-27"},{"lineNumber":91,"author":{"gitId":"crabnuggets"},"content":"1. When the `load` method is called, `StorageFile` constructs a new `File` object using the configured `DEFAULT_FILE_PATH` (see Step 2 in diagram). ","lastModifiedDate":"2021-10-27"},{"lineNumber":92,"author":{"gitId":"crabnuggets"},"content":"2. If the detected line contains data regarding a `Member` or `Event` object, the `StorageFile` instance will decode and construct the `Member` and `Event` objects, adding them to `MemberRoster` and `EventCatalog` respectively (see Steps 4-7 in diagram)","lastModifiedDate":"2021-10-27"},{"lineNumber":93,"author":{"gitId":"crabnuggets"},"content":"3. If the detected line contains data regarding a `Task` object:","lastModifiedDate":"2021-10-27"},{"lineNumber":94,"author":{"gitId":"crabnuggets"},"content":"   1. The `StorageFile` instance will get the previously added event (see Step 8 in diagram) and save it as an `Event` variable `currEvent`","lastModifiedDate":"2021-10-27"},{"lineNumber":95,"author":{"gitId":"crabnuggets"},"content":"   2. The current encoded line will be decoded to construct a new `task:Task` object (see Step 10-11 in diagram). ","lastModifiedDate":"2021-10-27"},{"lineNumber":96,"author":{"gitId":"crabnuggets"},"content":"   3. The past added event will be set to the `event` attribute of the new `task`, and the `task` will be added to the list of tasks in `currEvent`. The `task` will also be assigned to `Member` objects in `MemberRoster` if the `Member` objects are assigned to the `task` (bidirectional association) (see Steps 12-13 in diagram).","lastModifiedDate":"2021-10-27"},{"lineNumber":97,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":98,"author":{"gitId":"crabnuggets"},"content":"The `load` functionality asserts the following based on **SLAM**\u0027s core design principles:","lastModifiedDate":"2021-10-27"},{"lineNumber":99,"author":{"gitId":"crabnuggets"},"content":"- No tasks can exist without a member assigned to it, but a member can exist without an assigned task. As such, member objects will be first created and added to the roster when loading ([refer to Save functionality to understand how this is achieved](#save-functionality)).","lastModifiedDate":"2021-10-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"## Product scope","lastModifiedDate":"2020-05-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"### Target user profile","lastModifiedDate":"2020-05-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"{Describe the target user profile}","lastModifiedDate":"2020-05-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"### Value proposition","lastModifiedDate":"2020-05-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"{Describe the value proposition: what problem does it solve?}","lastModifiedDate":"2020-05-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"## User Stories","lastModifiedDate":"2020-05-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"|Version| As a ... | I want to ... | So that I can ...|","lastModifiedDate":"2020-05-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"|--------|----------|---------------|------------------|","lastModifiedDate":"2020-05-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"|v1.0|new user|see usage instructions|refer to them when I forget how to use the application|","lastModifiedDate":"2020-05-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"|v2.0|user|find a to-do item by name|locate a to-do without having to go through the entire list|","lastModifiedDate":"2020-05-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"## Non-Functional Requirements","lastModifiedDate":"2020-05-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"{Give non-functional requirements}","lastModifiedDate":"2020-05-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"## Glossary","lastModifiedDate":"2020-05-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"* *glossary item* - Definition","lastModifiedDate":"2020-05-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"## Instructions for manual testing","lastModifiedDate":"2020-05-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"{Give instructions on how to do a manual product testing e.g., how to load sample data to be used for testing}","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"antrikshv":33,"crabnuggets":30,"-":37,"alwinangys":27}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"crabnuggets"},"content":"# SLAM User Guide","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"crabnuggets"},"content":"Welcome to **SLAM**! **SLAM** is a desktop application for student group leaders in NUS to manage their group events, tasks, members and various activities. This application allows you to effectively plan and manage the organisation of events by allowing users to create and add such events to their schedule. Leading up to the actual date and time of the event, committee heads can add tasks (e.g. meetings, purchase of logistics) to complete under each event to keep track of progress. Group members can also be added and assigned to these tasks. This application uses a Command Line Interface (CLI); that is, the application is operated by typing commands into a Command Box.","lastModifiedDate":"2021-10-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"crabnuggets"},"content":"---","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":6,"author":{"gitId":"crabnuggets"},"content":"# Table of Contents","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"crabnuggets"},"content":"1. [Quick Start](#1-quick-start)","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"crabnuggets"},"content":"2. [Navigating This Document](#2-navigating-this-document)","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"crabnuggets"},"content":"   1. [Events](#21-events)","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"crabnuggets"},"content":"   2. [Tasks](#22-tasks)","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"crabnuggets"},"content":"3. [General Commands](#3-general-commands)","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"crabnuggets"},"content":"   1. [Help](#31-help)","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"crabnuggets"},"content":"   3. [List all Events](#32-listing-events-tasks-or-members)","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"crabnuggets"},"content":"   2. [Exiting the program](#33-exiting-the-program)","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"crabnuggets"},"content":"4. [Event Commands](#4-event-commands)","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"crabnuggets"},"content":"   1. [Add an event](#41-add-an-event)","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"crabnuggets"},"content":"   2. [Select an event](#42-select-an-event)","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"crabnuggets"},"content":"   3. [Mark an event as done](#43-mark-an-event-as-done)","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"crabnuggets"},"content":"   4. [Mark an event as undone](#44-mark-an-event-as-undone)","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"crabnuggets"},"content":"   5. [Delete an event](#45-delete-an-event)","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"crabnuggets"},"content":"   10. [Delete all Events](#46-delete-all-events)","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"crabnuggets"},"content":"   6. [Find Event(s) based on keywords(s)](#47-find-events-based-on-keywords)","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"alwinangys"},"content":"   8. [Display next upcoming Event](#48-display-next-upcoming-event)","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"alwinangys"},"content":"   9. [Update an Event](#49-update-an-event)","lastModifiedDate":"2021-10-27"},{"lineNumber":25,"author":{"gitId":"crabnuggets"},"content":"5. [Task Commands](#5-task-commands)","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"crabnuggets"},"content":"   1. [Add a task](#51-add-a-task)","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"crabnuggets"},"content":"   2. [Mark a task as done](#52-mark-a-task-as-done)","lastModifiedDate":"2021-10-27"},{"lineNumber":28,"author":{"gitId":"crabnuggets"},"content":"   3. [Mark a task as undone](#53-mark-a-task-as-undone)","lastModifiedDate":"2021-10-27"},{"lineNumber":29,"author":{"gitId":"crabnuggets"},"content":"   4. [Delete a task](#54-delete-a-task)","lastModifiedDate":"2021-10-27"},{"lineNumber":30,"author":{"gitId":"crabnuggets"},"content":"6. [Member Commands](#6-member-commands)","lastModifiedDate":"2021-10-27"},{"lineNumber":31,"author":{"gitId":"crabnuggets"},"content":"   1. [Add a member](#61-add-a-member)","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"crabnuggets"},"content":"   2. [Delete a member](#62-delete-a-member)","lastModifiedDate":"2021-10-27"},{"lineNumber":33,"author":{"gitId":"crabnuggets"},"content":"7. [Saving the data](#7-saving-the-data)","lastModifiedDate":"2021-10-27"},{"lineNumber":34,"author":{"gitId":"crabnuggets"},"content":"8. [FAQ](#8-faq)","lastModifiedDate":"2021-10-27"},{"lineNumber":35,"author":{"gitId":"crabnuggets"},"content":"9. [Command summary](#9-command-summary)","lastModifiedDate":"2021-10-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":37,"author":{"gitId":"crabnuggets"},"content":"---","lastModifiedDate":"2021-10-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":39,"author":{"gitId":"crabnuggets"},"content":"## 1. Quick Start","lastModifiedDate":"2021-10-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":41,"author":{"gitId":"crabnuggets"},"content":"1. Ensure that you have Java 11 or above installed on your computer.","lastModifiedDate":"2021-10-27"},{"lineNumber":42,"author":{"gitId":"crabnuggets"},"content":"2. Download the latest `.jar` file release of SLAM from [here](https://github.com/AY2122S1-CS2113T-W12-3/tp/).","lastModifiedDate":"2021-10-27"},{"lineNumber":43,"author":{"gitId":"crabnuggets"},"content":"3. Place the downloaded `.jar` file in the directory you intend to store **SLAM**’s data at.","lastModifiedDate":"2021-10-27"},{"lineNumber":44,"author":{"gitId":"crabnuggets"},"content":"4. Double-click the `.jar` file to launch the app. If double-clicking does not work, open the command prompt, navigate to the directory the file is located at, and enter the following command to launch the program:","lastModifiedDate":"2021-10-27"},{"lineNumber":45,"author":{"gitId":"crabnuggets"},"content":"```","lastModifiedDate":"2021-10-27"},{"lineNumber":46,"author":{"gitId":"crabnuggets"},"content":" java -jar SLAM.jar","lastModifiedDate":"2021-10-27"},{"lineNumber":47,"author":{"gitId":"crabnuggets"},"content":"```","lastModifiedDate":"2021-10-27"},{"lineNumber":48,"author":{"gitId":"crabnuggets"},"content":"5. Congratulations! You are good to go. ","lastModifiedDate":"2021-10-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":50,"author":{"gitId":"crabnuggets"},"content":"---","lastModifiedDate":"2021-10-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":52,"author":{"gitId":"crabnuggets"},"content":"## 2. Navigating this document ","lastModifiedDate":"2021-10-27"},{"lineNumber":53,"author":{"gitId":"crabnuggets"},"content":"This document shows you the available features in **SLAM**, and provides you with the relevant commands to use them.","lastModifiedDate":"2021-10-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":55,"author":{"gitId":"crabnuggets"},"content":"\u003e 💡 **Notes about reading this document:**","lastModifiedDate":"2021-10-27"},{"lineNumber":56,"author":{"gitId":"crabnuggets"},"content":"\u003e - Parameters that are supplied by the user are written in `UPPER_CASE`\u003cbr /\u003e E.g. in `add -e n/TITLE`, a possible parameter for `TITLE` can be `Concert`","lastModifiedDate":"2021-10-27"},{"lineNumber":57,"author":{"gitId":"crabnuggets"},"content":"\u003e - 🚨 **IMPORTANT** 🚨\u003cbr /\u003e When inputting date \u0026 time as commands, the format should always be DD-mm-YYYY hhMM\u003cbr /\u003e E.g. 31-12-2021 2359","lastModifiedDate":"2021-10-27"},{"lineNumber":58,"author":{"gitId":"crabnuggets"},"content":"    Since **SLAM** is an application revolving around the management of events, tasks and committee members, it is important to be aware of the respective details that **SLAM** can use in managing the overall catalog.","lastModifiedDate":"2021-10-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":60,"author":{"gitId":"crabnuggets"},"content":"### 2.1 Events","lastModifiedDate":"2021-10-27"},{"lineNumber":61,"author":{"gitId":"crabnuggets"},"content":"The following two tables show the fields which **SLAM** works with in managing events in the overall catalog.","lastModifiedDate":"2021-10-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":63,"author":{"gitId":"crabnuggets"},"content":"| **Required Fields** | **Description**                      |","lastModifiedDate":"2021-10-27"},{"lineNumber":64,"author":{"gitId":"crabnuggets"},"content":"| ------------------- | -------------------------------- |","lastModifiedDate":"2021-10-27"},{"lineNumber":65,"author":{"gitId":"crabnuggets"},"content":"| Title | The title of the event                         |","lastModifiedDate":"2021-10-27"},{"lineNumber":66,"author":{"gitId":"crabnuggets"},"content":"| Date \u0026 Time | The date and time the event is happening | ","lastModifiedDate":"2021-10-27"},{"lineNumber":67,"author":{"gitId":"crabnuggets"},"content":"| Venue | The venue at which the event is happening      |","lastModifiedDate":"2021-10-27"},{"lineNumber":68,"author":{"gitId":"crabnuggets"},"content":"| Budget | The amount of budget allocated to the event   |","lastModifiedDate":"2021-10-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":70,"author":{"gitId":"crabnuggets"},"content":"| **Optional Fields** | Description                      |","lastModifiedDate":"2021-10-27"},{"lineNumber":71,"author":{"gitId":"crabnuggets"},"content":"| ------------------- | -------------------------------- |","lastModifiedDate":"2021-10-27"},{"lineNumber":72,"author":{"gitId":"alwinangys"},"content":"| Description | A brief description of the event                         |","lastModifiedDate":"2021-10-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":74,"author":{"gitId":"crabnuggets"},"content":"### 2.2 Tasks","lastModifiedDate":"2021-10-27"},{"lineNumber":75,"author":{"gitId":"crabnuggets"},"content":"The following two tables show the fields which **SLAM** works with in managing the tasks you can add and keep track of under each event created.","lastModifiedDate":"2021-10-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":77,"author":{"gitId":"crabnuggets"},"content":"| **Required Fields** | **Description**                       |","lastModifiedDate":"2021-10-27"},{"lineNumber":78,"author":{"gitId":"crabnuggets"},"content":"| ------------------- | --------------------------------- |","lastModifiedDate":"2021-10-27"},{"lineNumber":79,"author":{"gitId":"crabnuggets"},"content":"| Title | The title of the task                           |","lastModifiedDate":"2021-10-27"},{"lineNumber":80,"author":{"gitId":"crabnuggets"},"content":"| Deadline | The deadline the task has to be completed by |","lastModifiedDate":"2021-10-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":82,"author":{"gitId":"crabnuggets"},"content":"| **Optional Fields** | **Description**                     |","lastModifiedDate":"2021-10-27"},{"lineNumber":83,"author":{"gitId":"crabnuggets"},"content":"| ------------------- | ------------------------------- |","lastModifiedDate":"2021-10-27"},{"lineNumber":84,"author":{"gitId":"crabnuggets"},"content":"| Description         | A brief description of the task |","lastModifiedDate":"2021-10-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":87,"author":{"gitId":"crabnuggets"},"content":"[Back to table of contents](#table-of-contents)","lastModifiedDate":"2021-10-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":89,"author":{"gitId":"crabnuggets"},"content":"---","lastModifiedDate":"2021-10-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":91,"author":{"gitId":"crabnuggets"},"content":"## 3. General Commands","lastModifiedDate":"2021-10-27"},{"lineNumber":92,"author":{"gitId":"crabnuggets"},"content":"This section contains the general basic commands for **SLAM**.","lastModifiedDate":"2021-10-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":94,"author":{"gitId":"crabnuggets"},"content":"### 3.1 Help ","lastModifiedDate":"2021-10-27"},{"lineNumber":95,"author":{"gitId":"crabnuggets"},"content":"This allows you to quickly view all the available commands and how to use them, all in one place.","lastModifiedDate":"2021-10-27"},{"lineNumber":96,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":97,"author":{"gitId":"crabnuggets"},"content":"**Format:** `help`","lastModifiedDate":"2021-10-27"},{"lineNumber":98,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":99,"author":{"gitId":"crabnuggets"},"content":"### 3.2 Listing Events, Tasks or Members","lastModifiedDate":"2021-10-27"},{"lineNumber":100,"author":{"gitId":"crabnuggets"},"content":"You may use this feature of **SLAM** to view the desired selection of your **SLAM** database. ","lastModifiedDate":"2021-10-27"},{"lineNumber":101,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":102,"author":{"gitId":"crabnuggets"},"content":"You may choose to view all your scheduled `events` in SLAM. SLAM sorts this chronologically for you so you don\u0027t have to. ","lastModifiedDate":"2021-10-27"},{"lineNumber":103,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":104,"author":{"gitId":"crabnuggets"},"content":"**Format:** `list`","lastModifiedDate":"2021-10-27"},{"lineNumber":105,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":106,"author":{"gitId":"crabnuggets"},"content":"**Example:** ","lastModifiedDate":"2021-10-27"},{"lineNumber":107,"author":{"gitId":"crabnuggets"},"content":"```","lastModifiedDate":"2021-10-27"},{"lineNumber":108,"author":{"gitId":"crabnuggets"},"content":"\u003e list","lastModifiedDate":"2021-10-27"},{"lineNumber":109,"author":{"gitId":"crabnuggets"},"content":"```","lastModifiedDate":"2021-10-27"},{"lineNumber":110,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":111,"author":{"gitId":"crabnuggets"},"content":"```","lastModifiedDate":"2021-10-27"},{"lineNumber":112,"author":{"gitId":"crabnuggets"},"content":"OVERALL SCHEDULE","lastModifiedDate":"2021-10-27"},{"lineNumber":113,"author":{"gitId":"crabnuggets"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-27"},{"lineNumber":114,"author":{"gitId":"crabnuggets"},"content":"1. [E][ ] Tembusu Concert (at: 19 Feb 2022 - 20:00)","lastModifiedDate":"2021-10-27"},{"lineNumber":115,"author":{"gitId":"crabnuggets"},"content":"2. [E][ ] Faculty Funfair (at: 20 Mar 2022 - 16:00)","lastModifiedDate":"2021-10-27"},{"lineNumber":116,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":117,"author":{"gitId":"crabnuggets"},"content":"FURTHER COMMANDS","lastModifiedDate":"2021-10-27"},{"lineNumber":118,"author":{"gitId":"crabnuggets"},"content":"-----------------------","lastModifiedDate":"2021-10-27"},{"lineNumber":119,"author":{"gitId":"crabnuggets"},"content":"To list Task: list [Event Index] -t","lastModifiedDate":"2021-10-27"},{"lineNumber":120,"author":{"gitId":"crabnuggets"},"content":"To list Members of a Task: list [Event Index] t/[Task Index]","lastModifiedDate":"2021-10-27"},{"lineNumber":121,"author":{"gitId":"crabnuggets"},"content":"--------END OF LIST-----------","lastModifiedDate":"2021-10-27"},{"lineNumber":122,"author":{"gitId":"crabnuggets"},"content":"```","lastModifiedDate":"2021-10-27"},{"lineNumber":123,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":124,"author":{"gitId":"crabnuggets"},"content":"💡 `list` can also be used to display all members in your current roster. ","lastModifiedDate":"2021-10-27"},{"lineNumber":125,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":126,"author":{"gitId":"crabnuggets"},"content":"**Format:** `list -m`","lastModifiedDate":"2021-10-27"},{"lineNumber":127,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":128,"author":{"gitId":"crabnuggets"},"content":"**Example:** ","lastModifiedDate":"2021-10-27"},{"lineNumber":129,"author":{"gitId":"crabnuggets"},"content":"```","lastModifiedDate":"2021-10-27"},{"lineNumber":130,"author":{"gitId":"crabnuggets"},"content":"\u003e list -m","lastModifiedDate":"2021-10-27"},{"lineNumber":131,"author":{"gitId":"crabnuggets"},"content":"```","lastModifiedDate":"2021-10-27"},{"lineNumber":132,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":133,"author":{"gitId":"crabnuggets"},"content":"```","lastModifiedDate":"2021-10-27"},{"lineNumber":134,"author":{"gitId":"crabnuggets"},"content":"List of members in MemberRoster","lastModifiedDate":"2021-10-27"},{"lineNumber":135,"author":{"gitId":"crabnuggets"},"content":"1. JOHN DOE","lastModifiedDate":"2021-10-27"},{"lineNumber":136,"author":{"gitId":"crabnuggets"},"content":"2. JANE DOE","lastModifiedDate":"2021-10-27"},{"lineNumber":137,"author":{"gitId":"crabnuggets"},"content":"--------END OF LIST-----------","lastModifiedDate":"2021-10-27"},{"lineNumber":138,"author":{"gitId":"crabnuggets"},"content":"```","lastModifiedDate":"2021-10-27"},{"lineNumber":139,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":140,"author":{"gitId":"crabnuggets"},"content":"💡 You may also choose to view all the `tasks` you have assigned to any specified event.","lastModifiedDate":"2021-10-27"},{"lineNumber":141,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":142,"author":{"gitId":"crabnuggets"},"content":"**Format:** `list EVENT_INDEX -t`","lastModifiedDate":"2021-10-27"},{"lineNumber":143,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":144,"author":{"gitId":"crabnuggets"},"content":"**Example:** `list 1 -t`","lastModifiedDate":"2021-10-27"},{"lineNumber":145,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":146,"author":{"gitId":"crabnuggets"},"content":"**Expected Output:** ","lastModifiedDate":"2021-10-27"},{"lineNumber":147,"author":{"gitId":"crabnuggets"},"content":"```","lastModifiedDate":"2021-10-27"},{"lineNumber":148,"author":{"gitId":"crabnuggets"},"content":"\u003e list 1 -t","lastModifiedDate":"2021-10-27"},{"lineNumber":149,"author":{"gitId":"crabnuggets"},"content":"```","lastModifiedDate":"2021-10-27"},{"lineNumber":150,"author":{"gitId":"crabnuggets"},"content":"```","lastModifiedDate":"2021-10-27"},{"lineNumber":151,"author":{"gitId":"crabnuggets"},"content":"Event: Tembusu Concert","lastModifiedDate":"2021-10-27"},{"lineNumber":152,"author":{"gitId":"crabnuggets"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-27"},{"lineNumber":153,"author":{"gitId":"crabnuggets"},"content":"1. [T][X] Buy stage lights (by: 10 Feb 2022 - 22:00)","lastModifiedDate":"2021-10-27"},{"lineNumber":154,"author":{"gitId":"crabnuggets"},"content":"2. [T][ ] Stage layout meeting (by: 12 Feb 2022 - 20:00)","lastModifiedDate":"2021-10-27"},{"lineNumber":155,"author":{"gitId":"crabnuggets"},"content":"--------END OF LIST-----------","lastModifiedDate":"2021-10-27"},{"lineNumber":156,"author":{"gitId":"crabnuggets"},"content":"```","lastModifiedDate":"2021-10-27"},{"lineNumber":157,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":158,"author":{"gitId":"crabnuggets"},"content":"💡 **SLAM** also allows you to choose to **view all the assigned members for a particular task** too.","lastModifiedDate":"2021-10-27"},{"lineNumber":159,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":160,"author":{"gitId":"crabnuggets"},"content":"**Format:** `list EVENT_INDEX t/TASK_INDEX`","lastModifiedDate":"2021-10-27"},{"lineNumber":161,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":162,"author":{"gitId":"crabnuggets"},"content":"**Example:** `list 1 t/1`","lastModifiedDate":"2021-10-27"},{"lineNumber":163,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":164,"author":{"gitId":"crabnuggets"},"content":"**Expected Output:**","lastModifiedDate":"2021-10-27"},{"lineNumber":165,"author":{"gitId":"crabnuggets"},"content":"```","lastModifiedDate":"2021-10-27"},{"lineNumber":166,"author":{"gitId":"crabnuggets"},"content":"Event: Tembusu Concert","lastModifiedDate":"2021-10-27"},{"lineNumber":167,"author":{"gitId":"crabnuggets"},"content":"Task: Buy stage lights","lastModifiedDate":"2021-10-27"},{"lineNumber":168,"author":{"gitId":"crabnuggets"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-27"},{"lineNumber":169,"author":{"gitId":"crabnuggets"},"content":"1. JOHN DOE","lastModifiedDate":"2021-10-27"},{"lineNumber":170,"author":{"gitId":"crabnuggets"},"content":"2. JANE DOE","lastModifiedDate":"2021-10-27"},{"lineNumber":171,"author":{"gitId":"crabnuggets"},"content":"--------END OF LIST-----------","lastModifiedDate":"2021-10-27"},{"lineNumber":172,"author":{"gitId":"crabnuggets"},"content":"```","lastModifiedDate":"2021-10-27"},{"lineNumber":173,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":174,"author":{"gitId":"crabnuggets"},"content":"### 3.3 Exiting the program","lastModifiedDate":"2021-10-27"},{"lineNumber":175,"author":{"gitId":"crabnuggets"},"content":"This allows you to safely terminate the program.","lastModifiedDate":"2021-10-27"},{"lineNumber":176,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":177,"author":{"gitId":"crabnuggets"},"content":"**Format:** `bye` ","lastModifiedDate":"2021-10-27"},{"lineNumber":178,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":179,"author":{"gitId":"crabnuggets"},"content":"[Back to table of contents](#table-of-contents)","lastModifiedDate":"2021-10-27"},{"lineNumber":180,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":181,"author":{"gitId":"crabnuggets"},"content":"---","lastModifiedDate":"2021-10-27"},{"lineNumber":182,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":183,"author":{"gitId":"crabnuggets"},"content":"## 4. Event Commands","lastModifiedDate":"2021-10-27"},{"lineNumber":184,"author":{"gitId":"crabnuggets"},"content":"This section contains the available commands to manage events in **SLAM**.","lastModifiedDate":"2021-10-27"},{"lineNumber":185,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":186,"author":{"gitId":"crabnuggets"},"content":"### 4.1 Add an Event","lastModifiedDate":"2021-10-27"},{"lineNumber":187,"author":{"gitId":"Alvinlj00"},"content":"Adds an event to your current catalog of events.","lastModifiedDate":"2021-10-28"},{"lineNumber":188,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":189,"author":{"gitId":"Alvinlj00"},"content":"To add an event, first describe the event using the following command:","lastModifiedDate":"2021-10-28"},{"lineNumber":190,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":191,"author":{"gitId":"Alvinlj00"},"content":"**Format:** `add -e n/TITLE d/DATE_\u0026_TIME v/VENUE b/BUDGET`","lastModifiedDate":"2021-10-28"},{"lineNumber":192,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":193,"author":{"gitId":"Alvinlj00"},"content":"**Example:** `add -e n/Temasek Hall Concert d/30-11-2021 2300 v/MPH b/500`","lastModifiedDate":"2021-10-28"},{"lineNumber":194,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":195,"author":{"gitId":"Alvinlj00"},"content":"Following which, **SLAM** will prompt you for an optional description for your event which should look like this:","lastModifiedDate":"2021-10-28"},{"lineNumber":196,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":197,"author":{"gitId":"Alvinlj00"},"content":"```","lastModifiedDate":"2021-10-28"},{"lineNumber":198,"author":{"gitId":"Alvinlj00"},"content":"\u003e add -e n/Temasek Hall Concert d/30-11-2021 2300 v/MPH b/500","lastModifiedDate":"2021-10-28"},{"lineNumber":199,"author":{"gitId":"Alvinlj00"},"content":"```","lastModifiedDate":"2021-10-28"},{"lineNumber":200,"author":{"gitId":"Alvinlj00"},"content":"```","lastModifiedDate":"2021-10-28"},{"lineNumber":201,"author":{"gitId":"Alvinlj00"},"content":"Please add an optional description for your item and press enter.","lastModifiedDate":"2021-10-28"},{"lineNumber":202,"author":{"gitId":"Alvinlj00"},"content":"```","lastModifiedDate":"2021-10-28"},{"lineNumber":203,"author":{"gitId":"Alvinlj00"},"content":"```","lastModifiedDate":"2021-10-28"},{"lineNumber":204,"author":{"gitId":"Alvinlj00"},"content":"\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":205,"author":{"gitId":"Alvinlj00"},"content":"```","lastModifiedDate":"2021-10-28"},{"lineNumber":206,"author":{"gitId":"Alvinlj00"},"content":"Key in your description and press `enter`, or just press `enter` if you have none. You have successfully added an event into **SLAM**!","lastModifiedDate":"2021-10-28"},{"lineNumber":207,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":208,"author":{"gitId":"crabnuggets"},"content":"### 4.2 Select an Event","lastModifiedDate":"2021-10-27"},{"lineNumber":209,"author":{"gitId":"crabnuggets"},"content":"This allows you to select an event from your list using the event’s numerical position in the list (i.e. the event’s ID). Upon selection, more details about that event will be displayed, and you may perform additional commands with the selected event (e.g. adding tasks to complete).","lastModifiedDate":"2021-10-27"},{"lineNumber":210,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":211,"author":{"gitId":"crabnuggets"},"content":"**Format:** `select -e EVENT_ID`","lastModifiedDate":"2021-10-27"},{"lineNumber":212,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":213,"author":{"gitId":"crabnuggets"},"content":"**Example:** `select -e 1`","lastModifiedDate":"2021-10-27"},{"lineNumber":214,"author":{"gitId":"crabnuggets"},"content":"\u003e 💡 The `select` command is especially useful to keep in mind! An event needs to be selected before any changes to its tasks can be done.","lastModifiedDate":"2021-10-27"},{"lineNumber":215,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":216,"author":{"gitId":"crabnuggets"},"content":"**Expected Output:**","lastModifiedDate":"2021-10-27"},{"lineNumber":217,"author":{"gitId":"crabnuggets"},"content":"```","lastModifiedDate":"2021-10-27"},{"lineNumber":218,"author":{"gitId":"crabnuggets"},"content":"\u003e select -e 1","lastModifiedDate":"2021-10-27"},{"lineNumber":219,"author":{"gitId":"crabnuggets"},"content":"```","lastModifiedDate":"2021-10-27"},{"lineNumber":220,"author":{"gitId":"crabnuggets"},"content":"```","lastModifiedDate":"2021-10-27"},{"lineNumber":221,"author":{"gitId":"crabnuggets"},"content":"Here are the details of the event:","lastModifiedDate":"2021-10-27"},{"lineNumber":222,"author":{"gitId":"crabnuggets"},"content":"Title: Tembusu Concert","lastModifiedDate":"2021-10-27"},{"lineNumber":223,"author":{"gitId":"crabnuggets"},"content":"Date: 19 Feb 2022 - 20:00","lastModifiedDate":"2021-10-27"},{"lineNumber":224,"author":{"gitId":"crabnuggets"},"content":"Description: Semesterly Arts Week Fundraiser","lastModifiedDate":"2021-10-27"},{"lineNumber":225,"author":{"gitId":"crabnuggets"},"content":"Venue: MPH","lastModifiedDate":"2021-10-27"},{"lineNumber":226,"author":{"gitId":"crabnuggets"},"content":"Budget: $1000.0","lastModifiedDate":"2021-10-27"},{"lineNumber":227,"author":{"gitId":"crabnuggets"},"content":"Tasks:","lastModifiedDate":"2021-10-27"},{"lineNumber":228,"author":{"gitId":"crabnuggets"},"content":"1. Make props","lastModifiedDate":"2021-10-27"},{"lineNumber":229,"author":{"gitId":"crabnuggets"},"content":"```","lastModifiedDate":"2021-10-27"},{"lineNumber":230,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":231,"author":{"gitId":"crabnuggets"},"content":"### 4.3 Mark an Event as `done`","lastModifiedDate":"2021-10-27"},{"lineNumber":232,"author":{"gitId":"Alvinlj00"},"content":"This will allow you to mark an event as done after the event is over. ","lastModifiedDate":"2021-10-28"},{"lineNumber":233,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":234,"author":{"gitId":"Alvinlj00"},"content":"**Format:** `done -e EVENT_ID`","lastModifiedDate":"2021-10-28"},{"lineNumber":235,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":236,"author":{"gitId":"Alvinlj00"},"content":"**Example:** `done -e 1`","lastModifiedDate":"2021-10-28"},{"lineNumber":237,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":238,"author":{"gitId":"Alvinlj00"},"content":"**Expected Output:**","lastModifiedDate":"2021-10-28"},{"lineNumber":239,"author":{"gitId":"Alvinlj00"},"content":"```","lastModifiedDate":"2021-10-28"},{"lineNumber":240,"author":{"gitId":"Alvinlj00"},"content":"\u003e done -e 1","lastModifiedDate":"2021-10-28"},{"lineNumber":241,"author":{"gitId":"Alvinlj00"},"content":"```","lastModifiedDate":"2021-10-28"},{"lineNumber":242,"author":{"gitId":"Alvinlj00"},"content":"```","lastModifiedDate":"2021-10-28"},{"lineNumber":243,"author":{"gitId":"Alvinlj00"},"content":"Nice! I have marked these items as done!","lastModifiedDate":"2021-10-28"},{"lineNumber":244,"author":{"gitId":"Alvinlj00"},"content":"[E][X] Tembusu Concert (at: 19 Feb 2022 - 20:00)","lastModifiedDate":"2021-10-28"},{"lineNumber":245,"author":{"gitId":"Alvinlj00"},"content":"--------LIST UPDATED--------","lastModifiedDate":"2021-10-28"},{"lineNumber":246,"author":{"gitId":"Alvinlj00"},"content":"```","lastModifiedDate":"2021-10-28"},{"lineNumber":247,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":248,"author":{"gitId":"crabnuggets"},"content":"### 4.4 Mark an Event as `undone`","lastModifiedDate":"2021-10-27"},{"lineNumber":249,"author":{"gitId":"Alvinlj00"},"content":"This will allow you to undo an event that was marked done if the event is not over yet.","lastModifiedDate":"2021-10-28"},{"lineNumber":250,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":251,"author":{"gitId":"Alvinlj00"},"content":"**Format:** `undo -e EVENT_ID`","lastModifiedDate":"2021-10-28"},{"lineNumber":252,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":253,"author":{"gitId":"Alvinlj00"},"content":"**Example:** `undo -e 1`","lastModifiedDate":"2021-10-28"},{"lineNumber":254,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":255,"author":{"gitId":"Alvinlj00"},"content":"**Expected Output:**","lastModifiedDate":"2021-10-28"},{"lineNumber":256,"author":{"gitId":"Alvinlj00"},"content":"```","lastModifiedDate":"2021-10-28"},{"lineNumber":257,"author":{"gitId":"Alvinlj00"},"content":"Ok, I have unmarked these items:","lastModifiedDate":"2021-10-28"},{"lineNumber":258,"author":{"gitId":"Alvinlj00"},"content":"[E][ ] Tembusu Concert (at: 19 Feb 2022 - 20:00)","lastModifiedDate":"2021-10-28"},{"lineNumber":259,"author":{"gitId":"Alvinlj00"},"content":"--------LIST UPDATED--------","lastModifiedDate":"2021-10-28"},{"lineNumber":260,"author":{"gitId":"Alvinlj00"},"content":"```","lastModifiedDate":"2021-10-28"},{"lineNumber":261,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":262,"author":{"gitId":"crabnuggets"},"content":"### 4.5 Delete an Event","lastModifiedDate":"2021-10-27"},{"lineNumber":263,"author":{"gitId":"alwinangys"},"content":"Deletes an event from the list.","lastModifiedDate":"2021-10-27"},{"lineNumber":264,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":265,"author":{"gitId":"alwinangys"},"content":"**Format:** `delete -e EVENT_ID`","lastModifiedDate":"2021-10-27"},{"lineNumber":266,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":267,"author":{"gitId":"alwinangys"},"content":"**Example:** `delete -e 1`","lastModifiedDate":"2021-10-27"},{"lineNumber":268,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":269,"author":{"gitId":"alwinangys"},"content":"\u003e 🚨 If you choose to `delete` an event, all of its associated tasks will be deleted too.","lastModifiedDate":"2021-10-27"},{"lineNumber":270,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":271,"author":{"gitId":"alwinangys"},"content":"**Expected Output:**","lastModifiedDate":"2021-10-27"},{"lineNumber":272,"author":{"gitId":"alwinangys"},"content":"```","lastModifiedDate":"2021-10-27"},{"lineNumber":273,"author":{"gitId":"alwinangys"},"content":"\u003e delete -e 1","lastModifiedDate":"2021-10-27"},{"lineNumber":274,"author":{"gitId":"alwinangys"},"content":"```","lastModifiedDate":"2021-10-27"},{"lineNumber":275,"author":{"gitId":"alwinangys"},"content":"```","lastModifiedDate":"2021-10-27"},{"lineNumber":276,"author":{"gitId":"alwinangys"},"content":"This event has been removed: Tembusu Concert","lastModifiedDate":"2021-10-27"},{"lineNumber":277,"author":{"gitId":"alwinangys"},"content":"```","lastModifiedDate":"2021-10-27"},{"lineNumber":278,"author":{"gitId":"crabnuggets"},"content":"### 4.6 Delete all Events","lastModifiedDate":"2021-10-27"},{"lineNumber":279,"author":{"gitId":"alwinangys"},"content":"This allows you to delete all events.","lastModifiedDate":"2021-10-27"},{"lineNumber":280,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":281,"author":{"gitId":"alwinangys"},"content":"\u003e 🚨 As this can potentially affect a huge amount of your data, the program will confirm with you again if you want to delete all events.","lastModifiedDate":"2021-10-27"},{"lineNumber":282,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":283,"author":{"gitId":"alwinangys"},"content":"**Format:** `delete all`","lastModifiedDate":"2021-10-27"},{"lineNumber":284,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":285,"author":{"gitId":"alwinangys"},"content":"After entering `delete all`, this is what you will see:","lastModifiedDate":"2021-10-27"},{"lineNumber":286,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":287,"author":{"gitId":"alwinangys"},"content":"```","lastModifiedDate":"2021-10-27"},{"lineNumber":288,"author":{"gitId":"alwinangys"},"content":"\u003e delete all","lastModifiedDate":"2021-10-27"},{"lineNumber":289,"author":{"gitId":"alwinangys"},"content":"```","lastModifiedDate":"2021-10-27"},{"lineNumber":290,"author":{"gitId":"alwinangys"},"content":"```","lastModifiedDate":"2021-10-27"},{"lineNumber":291,"author":{"gitId":"alwinangys"},"content":"Are you sure you want to delete all events? (Y/N)","lastModifiedDate":"2021-10-27"},{"lineNumber":292,"author":{"gitId":"alwinangys"},"content":"\u003e Y","lastModifiedDate":"2021-10-27"},{"lineNumber":293,"author":{"gitId":"alwinangys"},"content":"I have deleted everything!","lastModifiedDate":"2021-10-27"},{"lineNumber":294,"author":{"gitId":"alwinangys"},"content":"```","lastModifiedDate":"2021-10-27"},{"lineNumber":295,"author":{"gitId":"alwinangys"},"content":"\u003e 🚨 Once you confirmed that you want to delete all events, the action is irreversible!","lastModifiedDate":"2021-10-27"},{"lineNumber":296,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":297,"author":{"gitId":"crabnuggets"},"content":"[Back to table of contents](#table-of-contents)","lastModifiedDate":"2021-10-27"},{"lineNumber":298,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":299,"author":{"gitId":"crabnuggets"},"content":"### 4.7 Find Event(s) based on keyword(s)","lastModifiedDate":"2021-10-27"},{"lineNumber":300,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":301,"author":{"gitId":"crabnuggets"},"content":"### 4.8 Display next upcoming Event","lastModifiedDate":"2021-10-27"},{"lineNumber":302,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":303,"author":{"gitId":"crabnuggets"},"content":"### 4.9 Update an Event","lastModifiedDate":"2021-10-27"},{"lineNumber":304,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":305,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":306,"author":{"gitId":"crabnuggets"},"content":"---","lastModifiedDate":"2021-10-27"},{"lineNumber":307,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":308,"author":{"gitId":"crabnuggets"},"content":"## 5. Task Commands","lastModifiedDate":"2021-10-27"},{"lineNumber":309,"author":{"gitId":"crabnuggets"},"content":"This section contains the available commands for managing tasks for events in **SLAM**. Because all tasks belong to a specific event in your catalog, an event must first be selected ([see Section 5.2 on Selecting Events](#52-select-an-event)) before any of the below commands can be used.","lastModifiedDate":"2021-10-27"},{"lineNumber":310,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":311,"author":{"gitId":"crabnuggets"},"content":"### 5.1 Add a task ","lastModifiedDate":"2021-10-27"},{"lineNumber":312,"author":{"gitId":"crabnuggets"},"content":"Note: For this current version of **SLAM**, pre-selecting an `Event` is not required for this command.","lastModifiedDate":"2021-10-27"},{"lineNumber":313,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":314,"author":{"gitId":"Alvinlj00"},"content":"**Prerequisite:** You must have added at least one event and one member before adding a task.","lastModifiedDate":"2021-10-28"},{"lineNumber":315,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":316,"author":{"gitId":"Alvinlj00"},"content":"Adds a task to an existing event in your current catalog of events.","lastModifiedDate":"2021-10-28"},{"lineNumber":317,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":318,"author":{"gitId":"Alvinlj00"},"content":"To add a task, first describe the task using the following command:","lastModifiedDate":"2021-10-28"},{"lineNumber":319,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":320,"author":{"gitId":"Alvinlj00"},"content":"**Format:** `add -t n/TITLE d/DATE_\u0026_TIME`","lastModifiedDate":"2021-10-28"},{"lineNumber":321,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":322,"author":{"gitId":"Alvinlj00"},"content":"**Example:** `add -t n/Buy stage lights d/10-11-2021 1600`","lastModifiedDate":"2021-10-28"},{"lineNumber":323,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":324,"author":{"gitId":"crabnuggets"},"content":"### 5.2 Mark a Task as `done`","lastModifiedDate":"2021-10-27"},{"lineNumber":325,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":326,"author":{"gitId":"crabnuggets"},"content":"### 5.3 Mark a Task as `undone`","lastModifiedDate":"2021-10-27"},{"lineNumber":327,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":328,"author":{"gitId":"crabnuggets"},"content":"### 5.4 Delete a Task","lastModifiedDate":"2021-10-27"},{"lineNumber":329,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":330,"author":{"gitId":"crabnuggets"},"content":"[Back to table of contents](#table-of-contents)","lastModifiedDate":"2021-10-27"},{"lineNumber":331,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":332,"author":{"gitId":"crabnuggets"},"content":"---","lastModifiedDate":"2021-10-27"},{"lineNumber":333,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":334,"author":{"gitId":"crabnuggets"},"content":"## 6. Member Commands","lastModifiedDate":"2021-10-27"},{"lineNumber":335,"author":{"gitId":"crabnuggets"},"content":"This section contains the available commands for managing members in `SLAM`.","lastModifiedDate":"2021-10-27"},{"lineNumber":336,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":337,"author":{"gitId":"crabnuggets"},"content":"### 6.1 Add a member ","lastModifiedDate":"2021-10-27"},{"lineNumber":338,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":339,"author":{"gitId":"crabnuggets"},"content":"### 6.2 Delete a member","lastModifiedDate":"2021-10-27"},{"lineNumber":340,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":341,"author":{"gitId":"crabnuggets"},"content":"[Back to table of contents](#table-of-contents)","lastModifiedDate":"2021-10-27"},{"lineNumber":342,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":343,"author":{"gitId":"crabnuggets"},"content":"---","lastModifiedDate":"2021-10-27"},{"lineNumber":344,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":345,"author":{"gitId":"crabnuggets"},"content":"## 7. Saving the Data","lastModifiedDate":"2021-10-27"},{"lineNumber":346,"author":{"gitId":"crabnuggets"},"content":"**SLAM** data is saved in the hard disk automatically after you exit the program. There is no need to save manually.","lastModifiedDate":"2021-10-27"},{"lineNumber":347,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":348,"author":{"gitId":"crabnuggets"},"content":"[Back to table of contents](#table-of-contents)","lastModifiedDate":"2021-10-27"},{"lineNumber":349,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":350,"author":{"gitId":"crabnuggets"},"content":"## 8. FAQ","lastModifiedDate":"2021-10-27"},{"lineNumber":351,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":352,"author":{"gitId":"crabnuggets"},"content":"\u003e**Q**: How do I transfer my data to another computer? ","lastModifiedDate":"2021-10-27"},{"lineNumber":353,"author":{"gitId":"crabnuggets"},"content":"\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":354,"author":{"gitId":"crabnuggets"},"content":"\u003e**A**: You can transfer your data to another computer by copying the `data` folder found in the directory where SLAM was used, and pasting it in the directory of the device where **SLAM** is intended to be run.","lastModifiedDate":"2021-10-27"},{"lineNumber":355,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":356,"author":{"gitId":"crabnuggets"},"content":"\u003e**Q**: Can I delete all members from my current roster using `delete all`? ","lastModifiedDate":"2021-10-27"},{"lineNumber":357,"author":{"gitId":"crabnuggets"},"content":"\u003e ","lastModifiedDate":"2021-10-27"},{"lineNumber":358,"author":{"gitId":"crabnuggets"},"content":"\u003e**A**: The current verson of **SLAM** (2.0) does not allow for this. We are working on this on a future update for v2.1.","lastModifiedDate":"2021-10-27"},{"lineNumber":359,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":360,"author":{"gitId":"crabnuggets"},"content":"\u003e**Q**: Will deleting a member from my roster remove that member from all tasks he/she is assigned to? ","lastModifiedDate":"2021-10-27"},{"lineNumber":361,"author":{"gitId":"crabnuggets"},"content":"\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":362,"author":{"gitId":"crabnuggets"},"content":"\u003e**A**: SLAM 2.0 does not support this functionality and we are working on a fix for this for our v2.1 update. Hang on tight in the meanwhile and ensure your members produce work for you before kicking them out! 😉","lastModifiedDate":"2021-10-27"},{"lineNumber":363,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":364,"author":{"gitId":"crabnuggets"},"content":"[Back to table of contents](#table-of-contents)","lastModifiedDate":"2021-10-27"},{"lineNumber":365,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":366,"author":{"gitId":"crabnuggets"},"content":"## 9. Command Summary","lastModifiedDate":"2021-10-27"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":368,"author":{"gitId":"crabnuggets"},"content":"### General commands","lastModifiedDate":"2021-10-27"},{"lineNumber":369,"author":{"gitId":"crabnuggets"},"content":"| Command                   | Format                                              |","lastModifiedDate":"2021-10-27"},{"lineNumber":370,"author":{"gitId":"crabnuggets"},"content":"|---------------------------|-----------------------------------------------------|","lastModifiedDate":"2021-10-27"},{"lineNumber":371,"author":{"gitId":"crabnuggets"},"content":"| Display user manual       | `help`                                              |","lastModifiedDate":"2021-10-27"},{"lineNumber":372,"author":{"gitId":"crabnuggets"},"content":"| List events/members/tasks | For events: `list`\u003cbr /\u003eFor tasks: `list EVENT_INDEX -t`\u003cbr /\u003eFor members: `list -m`\u003cbr /\u003eFor members assigned to a task: `list EVENT_INDEX t/TASK_INDEX`|","lastModifiedDate":"2021-10-27"},{"lineNumber":373,"author":{"gitId":"crabnuggets"},"content":"| Exit program              | `bye`                                               |","lastModifiedDate":"2021-10-27"},{"lineNumber":374,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":375,"author":{"gitId":"crabnuggets"},"content":"### Event commands","lastModifiedDate":"2021-10-27"},{"lineNumber":376,"author":{"gitId":"crabnuggets"},"content":"| Command               | Format                                              |","lastModifiedDate":"2021-10-27"},{"lineNumber":377,"author":{"gitId":"crabnuggets"},"content":"|-----------------------|-----------------------------------------------------|","lastModifiedDate":"2021-10-27"},{"lineNumber":378,"author":{"gitId":"crabnuggets"},"content":"| Add an event          | `add -e n/TITLE d/dd-MM-yyyy HHmm v/VENUE b/BUDGET` |","lastModifiedDate":"2021-10-27"},{"lineNumber":379,"author":{"gitId":"crabnuggets"},"content":"| Delete an event       | `delete -e INDEX`                                   |","lastModifiedDate":"2021-10-27"},{"lineNumber":380,"author":{"gitId":"crabnuggets"},"content":"| Delete all events     | `delete all`                                        |","lastModifiedDate":"2021-10-27"},{"lineNumber":381,"author":{"gitId":"crabnuggets"},"content":"| Select an event       | `select -e INDEX`                                   | ","lastModifiedDate":"2021-10-27"},{"lineNumber":382,"author":{"gitId":"crabnuggets"},"content":"| Find event(s)         | `find EVENT_KEYWORD(S)`                             |","lastModifiedDate":"2021-10-27"},{"lineNumber":383,"author":{"gitId":"crabnuggets"},"content":"| Mark event as done    | `done -e INDEX`                                     | ","lastModifiedDate":"2021-10-27"},{"lineNumber":384,"author":{"gitId":"crabnuggets"},"content":"| Un-mark event as done | `undo -e INDEX`                                     |","lastModifiedDate":"2021-10-27"},{"lineNumber":385,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":386,"author":{"gitId":"crabnuggets"},"content":"### Task commands","lastModifiedDate":"2021-10-27"},{"lineNumber":387,"author":{"gitId":"crabnuggets"},"content":"| Command               | Format                        |","lastModifiedDate":"2021-10-27"},{"lineNumber":388,"author":{"gitId":"crabnuggets"},"content":"|-----------------------|-------------------------------|","lastModifiedDate":"2021-10-27"},{"lineNumber":389,"author":{"gitId":"crabnuggets"},"content":"| Add a task            | `add -t n/TITLE d/dd-MM-yyyy` |","lastModifiedDate":"2021-10-27"},{"lineNumber":390,"author":{"gitId":"crabnuggets"},"content":"| Delete a task         | `delete -t INDEX`             | ","lastModifiedDate":"2021-10-27"},{"lineNumber":391,"author":{"gitId":"crabnuggets"},"content":"| Select a task         | `select -t INDEX`             |","lastModifiedDate":"2021-10-27"},{"lineNumber":392,"author":{"gitId":"crabnuggets"},"content":"| Mark a task as done   | `done -t INDEX`               |","lastModifiedDate":"2021-10-27"},{"lineNumber":393,"author":{"gitId":"crabnuggets"},"content":"| Un-mark a task as done| `undo -t INDEX`               |","lastModifiedDate":"2021-10-27"},{"lineNumber":394,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":395,"author":{"gitId":"crabnuggets"},"content":"### Member commands","lastModifiedDate":"2021-10-27"},{"lineNumber":396,"author":{"gitId":"crabnuggets"},"content":"| Command         | Format                  |","lastModifiedDate":"2021-10-27"},{"lineNumber":397,"author":{"gitId":"crabnuggets"},"content":"|-----------------|-------------------------|","lastModifiedDate":"2021-10-27"},{"lineNumber":398,"author":{"gitId":"crabnuggets"},"content":"| Add a member    | `add -m MEMBER_NAME`    | ","lastModifiedDate":"2021-10-27"},{"lineNumber":399,"author":{"gitId":"crabnuggets"},"content":"| Delete a member | `delete -m MEMBER_NAME` |","lastModifiedDate":"2021-10-27"},{"lineNumber":400,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":401,"author":{"gitId":"crabnuggets"},"content":"[Back to table of contents](#table-of-contents)","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"Alvinlj00":57,"crabnuggets":284,"-":24,"alwinangys":36}},{"path":"docs/diagrams/ListDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"antrikshv"},"content":"@startuml","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"antrikshv"},"content":"title ListCommand","lastModifiedDate":"2021-10-27"},{"lineNumber":3,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"antrikshv"},"content":"participant \":Duke\" as Duke","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"antrikshv"},"content":"activate Duke","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"antrikshv"},"content":"create \":Parser\" as Parser","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"antrikshv"},"content":"Duke -\u003e Parser","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"antrikshv"},"content":"activate Parser #yellow","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"antrikshv"},"content":"create \":ListCommand\" as ListCommand","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"antrikshv"},"content":"Parser -\u003e ListCommand: ListCommand(command)","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"antrikshv"},"content":"activate ListCommand #lightblue","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"antrikshv"},"content":"ListCommand -\u003e ListCommand: checkForEmptyCells(command)","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"antrikshv"},"content":"activate ListCommand #lightgreen","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"antrikshv"},"content":"return","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"antrikshv"},"content":"return","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"antrikshv"},"content":"return","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"antrikshv"},"content":"Duke -\u003e ListCommand","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"antrikshv"},"content":"activate ListCommand #lightblue","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"antrikshv"},"content":"ListCommand -\u003e ListCommand: execute()","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"antrikshv"},"content":"activate ListCommand #lightgreen","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"antrikshv"},"content":"return","lastModifiedDate":"2021-10-27"},{"lineNumber":25,"author":{"gitId":"antrikshv"},"content":"ListCommand --\u003e Duke : CommandResult","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"antrikshv"},"content":"deactivate","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":28,"author":{"gitId":"antrikshv"},"content":"@enduml","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"antrikshv":28}},{"path":"docs/diagrams/LoadDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"crabnuggets"},"content":"@startuml","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"crabnuggets"},"content":"autonumber","lastModifiedDate":"2021-10-27"},{"lineNumber":3,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"crabnuggets"},"content":"title Load Functionality","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"crabnuggets"},"content":"-\u003e \":StorageFile\": load(memberRoster : MemberRoster\\n eventCatalog : EventCatalog)","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"crabnuggets"},"content":"activate \":StorageFile\" #yellow","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"crabnuggets"},"content":"|||","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"crabnuggets"},"content":"\":StorageFile\" -\u003e File:new File(DEFAULT_FILE_PATH)","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"crabnuggets"},"content":"activate File #lightblue","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"crabnuggets"},"content":"return saveFile: File","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"crabnuggets"},"content":"|||","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"crabnuggets"},"content":"loop lines","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"crabnuggets"},"content":"    alt classType !\u003d \u0027t\u0027","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"crabnuggets"},"content":"        \":StorageFile\" -\u003e \":StorageFile\": add","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"crabnuggets"},"content":"        note right: Adds to the respective roster/catalog","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"crabnuggets"},"content":"        activate \":StorageFile\" #orange","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"crabnuggets"},"content":"        \":StorageFile\"-\u003e \":XYZDecoder\": decodeXYZFromString(line)","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"crabnuggets"},"content":"        activate \":XYZDecoder\" #lightblue","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"crabnuggets"},"content":"        note right: Decoders for Member,\\n Task and Event objects","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"crabnuggets"},"content":"        return :DecodedObject","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"crabnuggets"},"content":"        return","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"crabnuggets"},"content":"    |||","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"crabnuggets"},"content":"    else classType \u003d\u003d \u0027t\u0027","lastModifiedDate":"2021-10-27"},{"lineNumber":25,"author":{"gitId":"crabnuggets"},"content":"        \":StorageFile\" -\u003e eventCatalog: get(lastAddedEvent)","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"crabnuggets"},"content":"        activate eventCatalog #lightblue","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"crabnuggets"},"content":"        return currEvent: Event","lastModifiedDate":"2021-10-27"},{"lineNumber":28,"author":{"gitId":"crabnuggets"},"content":"        |||","lastModifiedDate":"2021-10-27"},{"lineNumber":29,"author":{"gitId":"crabnuggets"},"content":"        \":StorageFile\"-\u003e \":XYZDecoder\": decodeXYZFromString(line)","lastModifiedDate":"2021-10-27"},{"lineNumber":30,"author":{"gitId":"crabnuggets"},"content":"        activate \":XYZDecoder\" #lightblue","lastModifiedDate":"2021-10-27"},{"lineNumber":31,"author":{"gitId":"crabnuggets"},"content":"        return task:Task","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"crabnuggets"},"content":"        |||","lastModifiedDate":"2021-10-27"},{"lineNumber":33,"author":{"gitId":"crabnuggets"},"content":"        \":StorageFile\" -\u003e \":TaskSetter\": setXYZAttributes()","lastModifiedDate":"2021-10-27"},{"lineNumber":34,"author":{"gitId":"crabnuggets"},"content":"        note over \":TaskSetter\": Sets the currEvent for the Task,\\n adds the task to the currEvent\\n and assigns task to respective members","lastModifiedDate":"2021-10-27"},{"lineNumber":35,"author":{"gitId":"crabnuggets"},"content":"        activate \":TaskSetter\" #lightblue","lastModifiedDate":"2021-10-27"},{"lineNumber":36,"author":{"gitId":"crabnuggets"},"content":"        return","lastModifiedDate":"2021-10-27"},{"lineNumber":37,"author":{"gitId":"crabnuggets"},"content":"    end","lastModifiedDate":"2021-10-27"},{"lineNumber":38,"author":{"gitId":"crabnuggets"},"content":"return","lastModifiedDate":"2021-10-27"},{"lineNumber":39,"author":{"gitId":"crabnuggets"},"content":"@enduml","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"crabnuggets":39}},{"path":"docs/diagrams/SaveDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"crabnuggets"},"content":"@startuml","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"crabnuggets"},"content":"autonumber","lastModifiedDate":"2021-10-27"},{"lineNumber":3,"author":{"gitId":"crabnuggets"},"content":"title Save Functionality","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"crabnuggets"},"content":"-\u003e StorageFile: save(eventsList : ArrayList\u003cEvent\u003e)","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"crabnuggets"},"content":"activate StorageFile #yellow","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"crabnuggets"},"content":"create File","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"crabnuggets"},"content":"StorageFile -\u003e File:new File(DEFAULT_FILE_PATH)","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"crabnuggets"},"content":"activate File #lightblue","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"crabnuggets"},"content":"return saveFile: File","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"crabnuggets"},"content":"|||","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"crabnuggets"},"content":"StorageFile -\u003e StorageFile: checkFileIsValid(saveFile)","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"crabnuggets"},"content":"activate StorageFile #orange","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"crabnuggets"},"content":"return","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"crabnuggets"},"content":"|||","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"crabnuggets"},"content":"StorageFile -\u003e MemberEncoder: encodeMembersList(memberRoster)","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"crabnuggets"},"content":"activate MemberEncoder #lightblue","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"crabnuggets"},"content":"return MemberEncoder: List\u003cString\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"crabnuggets"},"content":"|||","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"crabnuggets"},"content":"StorageFile -\u003e EventEncoder: encodeEventsList(eventsList)","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"crabnuggets"},"content":"activate EventEncoder #lightblue","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"crabnuggets"},"content":"return encodedEvents: List\u003cString\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"crabnuggets"},"content":"|||","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"crabnuggets"},"content":"StorageFile -\u003e StorageFile: writeToFile(saveFile,\\n encodeMembersList,\\n encodeMembersList)","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"crabnuggets"},"content":"activate StorageFile #orange","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"crabnuggets"},"content":"return","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"crabnuggets"},"content":"|||","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"crabnuggets"},"content":"return","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"crabnuggets"},"content":"@enduml","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"crabnuggets":31}},{"path":"docs/diagrams/SelectDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"alwinangys"},"content":"@startuml","lastModifiedDate":"2021-10-26"},{"lineNumber":2,"author":{"gitId":"alwinangys"},"content":"title SelectCommand","lastModifiedDate":"2021-10-26"},{"lineNumber":3,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"alwinangys"},"content":"participant \":Duke\" as Duke","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"alwinangys"},"content":"activate Duke","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"alwinangys"},"content":"create \":Parser\" as Parser","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"alwinangys"},"content":"Duke -\u003e Parser","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"alwinangys"},"content":"activate Parser #yellow","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":11,"author":{"gitId":"alwinangys"},"content":"create \":SelectCommand\" as SelectCommand","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"alwinangys"},"content":"Parser -\u003e SelectCommand","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"alwinangys"},"content":"activate SelectCommand #lightblue","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"alwinangys"},"content":"opt isValidFlag","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"alwinangys"},"content":"SelectCommand -\u003e SelectCommand: prepareInputs(command)","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"alwinangys"},"content":"activate SelectCommand #lightgreen","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"alwinangys"},"content":"opt isEventFlag","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"alwinangys"},"content":"Parser -\u003e SelectCommand: updateIndexOfLastSelectedEvent(index)","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"alwinangys"},"content":"end","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"alwinangys"},"content":"return","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"alwinangys"},"content":"|||","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"alwinangys"},"content":"end","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"alwinangys"},"content":"return","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"alwinangys"},"content":"|||","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"alwinangys"},"content":"return","lastModifiedDate":"2021-10-26"},{"lineNumber":27,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"alwinangys"},"content":"Duke -\u003e SelectCommand","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"alwinangys"},"content":"activate SelectCommand #lightblue","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"alwinangys"},"content":"SelectCommand -\u003e SelectCommand: execute()","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"alwinangys"},"content":"activate SelectCommand #lightgreen","lastModifiedDate":"2021-10-26"},{"lineNumber":32,"author":{"gitId":"alwinangys"},"content":"return","lastModifiedDate":"2021-10-26"},{"lineNumber":33,"author":{"gitId":"alwinangys"},"content":"SelectCommand -\u003e Duke: CommandResult","lastModifiedDate":"2021-10-26"},{"lineNumber":34,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":35,"author":{"gitId":"alwinangys"},"content":"@enduml","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"alwinangys":35}},{"path":"docs/diagrams/UpdateDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"antrikshv"},"content":"@startuml","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"antrikshv"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2021-10-27"},{"lineNumber":3,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"antrikshv"},"content":"autonumber","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"antrikshv"},"content":"title UpdateCommand","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"antrikshv"},"content":"participant \":Duke\" as Duke","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"antrikshv"},"content":"activate Duke","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"antrikshv"},"content":"create \":Parser\" as Parser","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"antrikshv"},"content":"Duke -\u003e Parser","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"antrikshv"},"content":"activate Parser #yellow","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"antrikshv"},"content":"create \":UpdateCommand\" as UpdateCommand","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"antrikshv"},"content":"Parser -\u003e UpdateCommand: UpdateCommand(command)","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"antrikshv"},"content":"return","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"antrikshv"},"content":"activate UpdateCommand #lightblue","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"antrikshv"},"content":"UpdateCommand -\u003e UpdateCommand: prepareUpdates()","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"antrikshv"},"content":"activate UpdateCommand #lightgreen","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"antrikshv"},"content":"return","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"antrikshv"},"content":"alt isError","lastModifiedDate":"2021-10-27"},{"lineNumber":25,"author":{"gitId":"antrikshv"},"content":"    UpdateCommand -\u003e Duke : errorMessages()","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"antrikshv"},"content":"else !isError","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"antrikshv"},"content":"    UpdateCommand -\u003e Duke : Ui.printEvent()","lastModifiedDate":"2021-10-27"},{"lineNumber":28,"author":{"gitId":"antrikshv"},"content":"    Duke -\u003e UpdateCommand: execute()","lastModifiedDate":"2021-10-27"},{"lineNumber":29,"author":{"gitId":"antrikshv"},"content":"    UpdateCommand -\u003e Duke: Ui.updateIntroMessage()","lastModifiedDate":"2021-10-27"},{"lineNumber":30,"author":{"gitId":"antrikshv"},"content":"    Duke -\u003e UpdateCommand: Ui.readInput()","lastModifiedDate":"2021-10-27"},{"lineNumber":31,"author":{"gitId":"antrikshv"},"content":"        loop Until User completes updates","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"antrikshv"},"content":"            UpdateCommand -\u003e UpdateCommand: implementUpdates()","lastModifiedDate":"2021-10-27"},{"lineNumber":33,"author":{"gitId":"antrikshv"},"content":"            activate UpdateCommand #lightgreen","lastModifiedDate":"2021-10-27"},{"lineNumber":34,"author":{"gitId":"antrikshv"},"content":"            return","lastModifiedDate":"2021-10-27"},{"lineNumber":35,"author":{"gitId":"antrikshv"},"content":"            UpdateCommand -\u003e Duke","lastModifiedDate":"2021-10-27"},{"lineNumber":36,"author":{"gitId":"antrikshv"},"content":"            Duke -\u003e UpdateCommand: Ui.readInput()","lastModifiedDate":"2021-10-27"},{"lineNumber":37,"author":{"gitId":"antrikshv"},"content":"        end","lastModifiedDate":"2021-10-27"},{"lineNumber":38,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":39,"author":{"gitId":"antrikshv"},"content":"    UpdateCommand -\u003e Duke: postUpdateMessage()","lastModifiedDate":"2021-10-27"},{"lineNumber":40,"author":{"gitId":"antrikshv"},"content":"    UpdateCommand -\u003e Duke: CommandResult(executeResult);","lastModifiedDate":"2021-10-27"},{"lineNumber":41,"author":{"gitId":"antrikshv"},"content":"    deactivate UpdateCommand","lastModifiedDate":"2021-10-27"},{"lineNumber":42,"author":{"gitId":"antrikshv"},"content":"end","lastModifiedDate":"2021-10-27"},{"lineNumber":43,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":44,"author":{"gitId":"antrikshv"},"content":"@enduml","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"antrikshv":44}},{"path":"src/main/java/seedu/duke/Duke.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.duke;","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"antrikshv"},"content":"import seedu.duke.commands.ByeCommand;","lastModifiedDate":"2021-10-04"},{"lineNumber":4,"author":{"gitId":"antrikshv"},"content":"import seedu.duke.commands.Command;","lastModifiedDate":"2021-10-04"},{"lineNumber":5,"author":{"gitId":"antrikshv"},"content":"import seedu.duke.commands.CommandResult;","lastModifiedDate":"2021-10-04"},{"lineNumber":6,"author":{"gitId":"crabnuggets"},"content":"import seedu.duke.exceptions.DukeException;","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"Alvinlj00"},"content":"import seedu.duke.items.mainlists.EventCatalog;","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"crabnuggets"},"content":"import seedu.duke.items.Task;","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"crabnuggets"},"content":"import seedu.duke.items.mainlists.MemberRoster;","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"crabnuggets"},"content":"import seedu.duke.parser.Parser;","lastModifiedDate":"2021-10-23"},{"lineNumber":11,"author":{"gitId":"crabnuggets"},"content":"import seedu.duke.storage.StorageFile;","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":13,"author":{"gitId":"antrikshv"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":16,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":17,"author":{"gitId":"Alvinlj00"},"content":"    public static EventCatalog eventCatalog \u003d EventCatalog.getInstance();","lastModifiedDate":"2021-10-22"},{"lineNumber":18,"author":{"gitId":"crabnuggets"},"content":"    public static MemberRoster memberRoster \u003d MemberRoster.getInstance();","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"crabnuggets"},"content":"    /*TODO: Delete the ArrayList of tasks below once the project has been restructured to fully utilize the new","lastModifiedDate":"2021-10-17"},{"lineNumber":20,"author":{"gitId":"crabnuggets"},"content":"     *  ArrayList of Task objects within each Event*/","lastModifiedDate":"2021-10-17"},{"lineNumber":21,"author":{"gitId":"crabnuggets"},"content":"    public static ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"crabnuggets"},"content":"    private static final StorageFile storage \u003d new StorageFile();","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":25,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"crabnuggets"},"content":"        Ui.printGreetingMessage();","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"crabnuggets"},"content":"        storage.load(memberRoster, eventCatalog);","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"antrikshv"},"content":"        runSlam();","lastModifiedDate":"2021-10-04"},{"lineNumber":29,"author":{"gitId":"crabnuggets"},"content":"        storage.save(memberRoster, eventCatalog);","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":31,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":32,"author":{"gitId":"antrikshv"},"content":"    protected static void runSlam() {","lastModifiedDate":"2021-10-04"},{"lineNumber":33,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":34,"author":{"gitId":"antrikshv"},"content":"        String userInput;","lastModifiedDate":"2021-10-04"},{"lineNumber":35,"author":{"gitId":"antrikshv"},"content":"        Command command;","lastModifiedDate":"2021-10-04"},{"lineNumber":36,"author":{"gitId":"antrikshv"},"content":"        CommandResult feedback;","lastModifiedDate":"2021-10-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":38,"author":{"gitId":"antrikshv"},"content":"        do {","lastModifiedDate":"2021-10-04"},{"lineNumber":39,"author":{"gitId":"antrikshv"},"content":"            try {","lastModifiedDate":"2021-10-26"},{"lineNumber":40,"author":{"gitId":"antrikshv"},"content":"                userInput \u003d Ui.readInput();","lastModifiedDate":"2021-10-04"},{"lineNumber":41,"author":{"gitId":"crabnuggets"},"content":"                Ui.printLineBreak();","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"antrikshv"},"content":"                command \u003d Parser.parseCommand(userInput);","lastModifiedDate":"2021-10-04"},{"lineNumber":43,"author":{"gitId":"antrikshv"},"content":"                feedback \u003d command.execute();","lastModifiedDate":"2021-10-04"},{"lineNumber":44,"author":{"gitId":"antrikshv"},"content":"                System.out.println(feedback.feedbackToUser);","lastModifiedDate":"2021-10-04"},{"lineNumber":45,"author":{"gitId":"crabnuggets"},"content":"                Ui.printLineBreak();","lastModifiedDate":"2021-10-11"},{"lineNumber":46,"author":{"gitId":"antrikshv"},"content":"            } catch (NullPointerException | NumberFormatException | StringIndexOutOfBoundsException e) {","lastModifiedDate":"2021-10-26"},{"lineNumber":47,"author":{"gitId":"antrikshv"},"content":"                System.out.println(\"Please key in the commands accurately, use help to view the guide\");","lastModifiedDate":"2021-10-26"},{"lineNumber":48,"author":{"gitId":"antrikshv"},"content":"                Ui.printLineBreak();","lastModifiedDate":"2021-10-26"},{"lineNumber":49,"author":{"gitId":"crabnuggets"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2021-10-26"},{"lineNumber":50,"author":{"gitId":"crabnuggets"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2021-10-26"},{"lineNumber":51,"author":{"gitId":"crabnuggets"},"content":"                Ui.printLineBreak();","lastModifiedDate":"2021-10-26"},{"lineNumber":52,"author":{"gitId":"antrikshv"},"content":"            }","lastModifiedDate":"2021-10-26"},{"lineNumber":53,"author":{"gitId":"antrikshv"},"content":"        } while (ByeCommand.isRunning);","lastModifiedDate":"2021-10-04"},{"lineNumber":54,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"antrikshv":26,"Alvinlj00":2,"crabnuggets":20,"-":8}},{"path":"src/main/java/seedu/duke/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"antrikshv"},"content":"package seedu.duke;","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"crabnuggets"},"content":"import seedu.duke.items.Event;","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"crabnuggets"},"content":"import seedu.duke.items.Task;","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"antrikshv"},"content":"import seedu.duke.items.characteristics.Member;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"crabnuggets"},"content":"import seedu.duke.parser.Parser;","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"crabnuggets"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"antrikshv"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-10-04"},{"lineNumber":10,"author":{"gitId":"antrikshv"},"content":"import java.util.concurrent.atomic.AtomicInteger;","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":12,"author":{"gitId":"antrikshv"},"content":"public class Ui {","lastModifiedDate":"2021-10-04"},{"lineNumber":13,"author":{"gitId":"crabnuggets"},"content":"    private static final String HELP_MESSAGE \u003d \"Here\u0027s some tips on how to use me!\\n\\n\"","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"crabnuggets"},"content":"            + \"help\\n\"","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"crabnuggets"},"content":"            + \"\\t - Show a summary of the commands and options that I can handle\\n\\n\"","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"crabnuggets"},"content":"            + \"list\\n\"","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"crabnuggets"},"content":"            + \"\\t - Lists all the events in your schedule in chronological order\\n\"","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"crabnuggets"},"content":"            + \"\\t - To list Tasks: list [Event Index] -t\\n\"","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"crabnuggets"},"content":"            + \"\\t - To list Members of a Task: list [Event Index] t/[Task Index]\\n\\n\"","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"crabnuggets"},"content":"            + \"add -e n/TITLE d/dd-MM-yyyy HHmm v/VENUE b/BUDGET\\n\"","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"crabnuggets"},"content":"            + \"\\t - Add an event to the schedule\\n\\n\"","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"crabnuggets"},"content":"            + \"delete -e INDEX\\n\"","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"crabnuggets"},"content":"            + \"\\t - Delete an event given its index\\n\\n\"","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"crabnuggets"},"content":"            + \"delete all\\n\"","lastModifiedDate":"2021-10-27"},{"lineNumber":25,"author":{"gitId":"crabnuggets"},"content":"            + \"\\t - Delete all events in your schedule\\n\\n\"","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"crabnuggets"},"content":"            + \"select -e INDEX\\n\"","lastModifiedDate":"2021-10-26"},{"lineNumber":27,"author":{"gitId":"crabnuggets"},"content":"            + \"\\t - Select an event and display its details\\n\\n\"","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"crabnuggets"},"content":"            + \"find EVENT_KEYWORD(S)\\n\"","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"crabnuggets"},"content":"            + \"\\t - Find an event based on the given keyword/query\\n\\n\"","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"crabnuggets"},"content":"            + \"done -e INDEX\\n\"","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"crabnuggets"},"content":"            + \"\\t - Mark an event as done given its index\\n\\n\"","lastModifiedDate":"2021-10-26"},{"lineNumber":32,"author":{"gitId":"crabnuggets"},"content":"            + \"undo -e INDEX\\n\"","lastModifiedDate":"2021-10-26"},{"lineNumber":33,"author":{"gitId":"crabnuggets"},"content":"            + \"\\t - Un-mark an event as done given its index\\n\\n\"","lastModifiedDate":"2021-10-26"},{"lineNumber":34,"author":{"gitId":"crabnuggets"},"content":"            + \"add -t n/TITLE d/DATE\\n\"","lastModifiedDate":"2021-10-10"},{"lineNumber":35,"author":{"gitId":"crabnuggets"},"content":"            + \"\\t - Add a task to the schedule\\n\\n\"","lastModifiedDate":"2021-10-10"},{"lineNumber":36,"author":{"gitId":"crabnuggets"},"content":"            + \"delete -t INDEX\\n\"","lastModifiedDate":"2021-10-26"},{"lineNumber":37,"author":{"gitId":"crabnuggets"},"content":"            + \"\\t - Deletes a task given its index in the overall schedule\\n\\n\"","lastModifiedDate":"2021-10-10"},{"lineNumber":38,"author":{"gitId":"crabnuggets"},"content":"            + \"select -t INDEX\\n\"","lastModifiedDate":"2021-10-26"},{"lineNumber":39,"author":{"gitId":"crabnuggets"},"content":"            + \"\\t - Displays more details about the selected task. Requires an event to first be selected.\\n\\n\"","lastModifiedDate":"2021-10-26"},{"lineNumber":40,"author":{"gitId":"crabnuggets"},"content":"            + \"done -t INDEX\\n\"","lastModifiedDate":"2021-10-26"},{"lineNumber":41,"author":{"gitId":"crabnuggets"},"content":"            + \"\\t - Mark a task as done given its index. Requires an event to first be selected.\\n\\n\"","lastModifiedDate":"2021-10-26"},{"lineNumber":42,"author":{"gitId":"crabnuggets"},"content":"            + \"undo -t INDEX\\n\"","lastModifiedDate":"2021-10-26"},{"lineNumber":43,"author":{"gitId":"crabnuggets"},"content":"            + \"\\t - Un-mark a task as done given its index\\n\\n\"","lastModifiedDate":"2021-10-26"},{"lineNumber":44,"author":{"gitId":"crabnuggets"},"content":"            + \"add -m MEMBER_NAME\\n\"","lastModifiedDate":"2021-10-26"},{"lineNumber":45,"author":{"gitId":"crabnuggets"},"content":"            + \"\\t - Add a member to your current roster of members\\n\\n\"","lastModifiedDate":"2021-10-26"},{"lineNumber":46,"author":{"gitId":"crabnuggets"},"content":"            + \"delete -m MEMBER_NAME\\n\"","lastModifiedDate":"2021-10-26"},{"lineNumber":47,"author":{"gitId":"crabnuggets"},"content":"            + \"\\t - Delete a member from your roster given his/her name\\n\\n\"","lastModifiedDate":"2021-10-26"},{"lineNumber":48,"author":{"gitId":"crabnuggets"},"content":"            + \"update EVENT_INDEX\\n\"","lastModifiedDate":"2021-10-26"},{"lineNumber":49,"author":{"gitId":"crabnuggets"},"content":"            + \"\\t - Choose an event to update. You can update tasks/members under that event from there.\\n\\n\"","lastModifiedDate":"2021-10-26"},{"lineNumber":50,"author":{"gitId":"crabnuggets"},"content":"            + \"bye\\n\"","lastModifiedDate":"2021-10-26"},{"lineNumber":51,"author":{"gitId":"crabnuggets"},"content":"            + \"\\t - Exit the program. Bye!\";","lastModifiedDate":"2021-10-26"},{"lineNumber":52,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":53,"author":{"gitId":"antrikshv"},"content":"    public static String readInput() {","lastModifiedDate":"2021-10-04"},{"lineNumber":54,"author":{"gitId":"antrikshv"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2021-10-04"},{"lineNumber":55,"author":{"gitId":"crabnuggets"},"content":"        String userInput \u003d \"\";","lastModifiedDate":"2021-10-11"},{"lineNumber":56,"author":{"gitId":"crabnuggets"},"content":"        if (in.hasNextLine()) {","lastModifiedDate":"2021-10-11"},{"lineNumber":57,"author":{"gitId":"crabnuggets"},"content":"            userInput \u003d in.nextLine();","lastModifiedDate":"2021-10-11"},{"lineNumber":58,"author":{"gitId":"crabnuggets"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":59,"author":{"gitId":"crabnuggets"},"content":"        return userInput;","lastModifiedDate":"2021-10-11"},{"lineNumber":60,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":61,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":62,"author":{"gitId":"crabnuggets"},"content":"    public static String getLineBreak() {","lastModifiedDate":"2021-10-10"},{"lineNumber":63,"author":{"gitId":"antrikshv"},"content":"        return \"_____________________________________________________________________________________________\"","lastModifiedDate":"2021-10-26"},{"lineNumber":64,"author":{"gitId":"antrikshv"},"content":"                + \"_______________\";","lastModifiedDate":"2021-10-26"},{"lineNumber":65,"author":{"gitId":"crabnuggets"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":66,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":67,"author":{"gitId":"crabnuggets"},"content":"    public static void printLineBreak() {","lastModifiedDate":"2021-10-10"},{"lineNumber":68,"author":{"gitId":"antrikshv"},"content":"        System.out.println(\"________________________________________________________________________________________\"","lastModifiedDate":"2021-10-26"},{"lineNumber":69,"author":{"gitId":"antrikshv"},"content":"                + \"____________________\");","lastModifiedDate":"2021-10-26"},{"lineNumber":70,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":71,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":72,"author":{"gitId":"crabnuggets"},"content":"    public static String getInvalidCommandMessage() {","lastModifiedDate":"2021-10-26"},{"lineNumber":73,"author":{"gitId":"crabnuggets"},"content":"        return \"I\u0027m sorry I did not catch that! Try entering \u003chelp\u003e for a list of commands.\";","lastModifiedDate":"2021-10-26"},{"lineNumber":74,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":75,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":76,"author":{"gitId":"Alvinlj00"},"content":"    public static void promptForDescription() {","lastModifiedDate":"2021-10-09"},{"lineNumber":77,"author":{"gitId":"Alvinlj00"},"content":"        System.out.println(\"Please add an optional description for your item and press enter.\");","lastModifiedDate":"2021-10-09"},{"lineNumber":78,"author":{"gitId":"crabnuggets"},"content":"        printLineBreak();","lastModifiedDate":"2021-10-10"},{"lineNumber":79,"author":{"gitId":"crabnuggets"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":80,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":81,"author":{"gitId":"Alvinlj00"},"content":"    public static void promptForEventIndex() {","lastModifiedDate":"2021-10-21"},{"lineNumber":82,"author":{"gitId":"Alvinlj00"},"content":"        System.out.println(\"Please choose which event you want to add your task to. \");","lastModifiedDate":"2021-10-21"},{"lineNumber":83,"author":{"gitId":"Alvinlj00"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":84,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":85,"author":{"gitId":"Alvinlj00"},"content":"    public static void promptForMemberIndex() {","lastModifiedDate":"2021-10-25"},{"lineNumber":86,"author":{"gitId":"Alvinlj00"},"content":"        System.out.println(\"Please choose which member you want to assign your task to. \");","lastModifiedDate":"2021-10-25"},{"lineNumber":87,"author":{"gitId":"Alvinlj00"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":88,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":89,"author":{"gitId":"crabnuggets"},"content":"    public static String getTaskDeletionMessage(String taskTitle) {","lastModifiedDate":"2021-10-10"},{"lineNumber":90,"author":{"gitId":"crabnuggets"},"content":"        return String.format(\"This task has been removed: %s\\n\", taskTitle);","lastModifiedDate":"2021-10-10"},{"lineNumber":91,"author":{"gitId":"crabnuggets"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":92,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":93,"author":{"gitId":"Alvinlj00"},"content":"    public static String getEventDeletionMessage(String eventTitle) {","lastModifiedDate":"2021-10-22"},{"lineNumber":94,"author":{"gitId":"Alvinlj00"},"content":"        return String.format(\"This event has been removed: %s\\n\", eventTitle);","lastModifiedDate":"2021-10-22"},{"lineNumber":95,"author":{"gitId":"Alvinlj00"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":96,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":97,"author":{"gitId":"alwinangys"},"content":"    public static String getMemberDeletionMessage(String name) {","lastModifiedDate":"2021-10-26"},{"lineNumber":98,"author":{"gitId":"alwinangys"},"content":"        return String.format(\"This member has been removed: %s\\n\", name);","lastModifiedDate":"2021-10-26"},{"lineNumber":99,"author":{"gitId":"alwinangys"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":100,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":101,"author":{"gitId":"Alvinlj00"},"content":"    public static String getTaskAddedMessage(int eventIndex, Task task) {","lastModifiedDate":"2021-10-22"},{"lineNumber":102,"author":{"gitId":"Alvinlj00"},"content":"        assert eventIndex \u003c Duke.eventCatalog.size() : \"Number entered cannot be more than \"","lastModifiedDate":"2021-10-22"},{"lineNumber":103,"author":{"gitId":"Alvinlj00"},"content":"                + \"number of events\";","lastModifiedDate":"2021-10-22"},{"lineNumber":104,"author":{"gitId":"crabnuggets"},"content":"        return String.format(\"Task added: %s\\n\"","lastModifiedDate":"2021-10-10"},{"lineNumber":105,"author":{"gitId":"Alvinlj00"},"content":"                        + \"Total number of tasks in this event \u003d %s\",","lastModifiedDate":"2021-10-22"},{"lineNumber":106,"author":{"gitId":"Alvinlj00"},"content":"                task.getTitle(), Duke.eventCatalog.get(eventIndex - 1).getTaskList().size());","lastModifiedDate":"2021-10-22"},{"lineNumber":107,"author":{"gitId":"crabnuggets"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":108,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":109,"author":{"gitId":"crabnuggets"},"content":"    public static String getEventAddedMessage(Event event) {","lastModifiedDate":"2021-10-10"},{"lineNumber":110,"author":{"gitId":"crabnuggets"},"content":"        return String.format(\"Event added: %s\\n\"","lastModifiedDate":"2021-10-10"},{"lineNumber":111,"author":{"gitId":"crabnuggets"},"content":"                        + \"Total number of events \u003d %s\",","lastModifiedDate":"2021-10-11"},{"lineNumber":112,"author":{"gitId":"crabnuggets"},"content":"                event.getTitle(), Duke.eventCatalog.size());","lastModifiedDate":"2021-10-17"},{"lineNumber":113,"author":{"gitId":"crabnuggets"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":114,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":115,"author":{"gitId":"Alvinlj00"},"content":"    public static String getMemberAddedMessage(Member member) {","lastModifiedDate":"2021-10-25"},{"lineNumber":116,"author":{"gitId":"antrikshv"},"content":"        return String.format(\"Member added: %s\", member.getName());","lastModifiedDate":"2021-10-26"},{"lineNumber":117,"author":{"gitId":"Alvinlj00"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":118,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":119,"author":{"gitId":"crabnuggets"},"content":"    public static void printGreetingMessage() {","lastModifiedDate":"2021-10-11"},{"lineNumber":120,"author":{"gitId":"crabnuggets"},"content":"        System.out.println(\"Greetings mortal. How may you be served today?\\n\"","lastModifiedDate":"2021-10-11"},{"lineNumber":121,"author":{"gitId":"crabnuggets"},"content":"                + \"TIP: enter \\\"help\\\" if you are weak and clueless!\\n\"","lastModifiedDate":"2021-10-11"},{"lineNumber":122,"author":{"gitId":"crabnuggets"},"content":"                + getLineBreak());","lastModifiedDate":"2021-10-11"},{"lineNumber":123,"author":{"gitId":"crabnuggets"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":124,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":125,"author":{"gitId":"crabnuggets"},"content":"    public static String getByeMessage() {","lastModifiedDate":"2021-10-10"},{"lineNumber":126,"author":{"gitId":"crabnuggets"},"content":"        return \"You will be missed!!\";","lastModifiedDate":"2021-10-10"},{"lineNumber":127,"author":{"gitId":"crabnuggets"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":128,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":129,"author":{"gitId":"crabnuggets"},"content":"    public static String getHelpMessage() {","lastModifiedDate":"2021-10-11"},{"lineNumber":130,"author":{"gitId":"crabnuggets"},"content":"        return HELP_MESSAGE;","lastModifiedDate":"2021-10-11"},{"lineNumber":131,"author":{"gitId":"Alvinlj00"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":132,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":133,"author":{"gitId":"alwinangys"},"content":"    public static String getSelectedTaskMessage(Task task) {","lastModifiedDate":"2021-10-12"},{"lineNumber":134,"author":{"gitId":"Alvinlj00"},"content":"        return \"Here are the details of the task:\" + System.lineSeparator()","lastModifiedDate":"2021-10-26"},{"lineNumber":135,"author":{"gitId":"Alvinlj00"},"content":"                + getTask(task);","lastModifiedDate":"2021-10-26"},{"lineNumber":136,"author":{"gitId":"alwinangys"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":137,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":138,"author":{"gitId":"alwinangys"},"content":"    public static String getSelectedEventMessage(Event event) {","lastModifiedDate":"2021-10-12"},{"lineNumber":139,"author":{"gitId":"Alvinlj00"},"content":"        return \"Here are the details of the event:\" + System.lineSeparator()","lastModifiedDate":"2021-10-26"},{"lineNumber":140,"author":{"gitId":"Alvinlj00"},"content":"                + getEvent(event);","lastModifiedDate":"2021-10-26"},{"lineNumber":141,"author":{"gitId":"alwinangys"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":142,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":143,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":144,"author":{"gitId":"Alvinlj00"},"content":"    public static \u003cT\u003e void printList(ArrayList\u003cT\u003e list) {","lastModifiedDate":"2021-10-25"},{"lineNumber":145,"author":{"gitId":"antrikshv"},"content":"        AtomicInteger i \u003d new AtomicInteger();","lastModifiedDate":"2021-10-10"},{"lineNumber":146,"author":{"gitId":"crabnuggets"},"content":"        list.forEach(item -\u003e System.out.println(i.getAndIncrement() + 1 + \". \" + item));","lastModifiedDate":"2021-10-11"},{"lineNumber":147,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":148,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":149,"author":{"gitId":"Alvinlj00"},"content":"    public static void printEventCatalog() {","lastModifiedDate":"2021-10-22"},{"lineNumber":150,"author":{"gitId":"Alvinlj00"},"content":"        printList(Duke.eventCatalog);","lastModifiedDate":"2021-10-22"},{"lineNumber":151,"author":{"gitId":"Alvinlj00"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":152,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":153,"author":{"gitId":"Alvinlj00"},"content":"    public static void printMemberRoster() {","lastModifiedDate":"2021-10-25"},{"lineNumber":154,"author":{"gitId":"Alvinlj00"},"content":"        printList(Duke.memberRoster);","lastModifiedDate":"2021-10-25"},{"lineNumber":155,"author":{"gitId":"Alvinlj00"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":156,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":157,"author":{"gitId":"alwinangys"},"content":"    public static String getTask(Task task) {","lastModifiedDate":"2021-10-12"},{"lineNumber":158,"author":{"gitId":"alwinangys"},"content":"        return \"Title: \" + task.getTitle() + System.lineSeparator()","lastModifiedDate":"2021-10-26"},{"lineNumber":159,"author":{"gitId":"alwinangys"},"content":"                + \"Deadline: \" + Parser.convertDateTime(task.getDateTime()) + System.lineSeparator()","lastModifiedDate":"2021-10-26"},{"lineNumber":160,"author":{"gitId":"alwinangys"},"content":"                + \"Description: \" + task.getDescription() + System.lineSeparator()","lastModifiedDate":"2021-10-26"},{"lineNumber":161,"author":{"gitId":"alwinangys"},"content":"                + \"Members: \" + System.lineSeparator() + task.getMemberListAsString();","lastModifiedDate":"2021-10-26"},{"lineNumber":162,"author":{"gitId":"alwinangys"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":163,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":164,"author":{"gitId":"alwinangys"},"content":"    public static String getEvent(Event event) {","lastModifiedDate":"2021-10-12"},{"lineNumber":165,"author":{"gitId":"alwinangys"},"content":"        return \"Title: \" + event.getTitle() + System.lineSeparator()","lastModifiedDate":"2021-10-26"},{"lineNumber":166,"author":{"gitId":"alwinangys"},"content":"                + \"Date: \" + Parser.convertDateTime(event.getDateTime()) + System.lineSeparator()","lastModifiedDate":"2021-10-26"},{"lineNumber":167,"author":{"gitId":"alwinangys"},"content":"                + \"Description: \" + event.getDescription() + System.lineSeparator()","lastModifiedDate":"2021-10-26"},{"lineNumber":168,"author":{"gitId":"alwinangys"},"content":"                + \"Venue: \" + event.getVenue() + System.lineSeparator()","lastModifiedDate":"2021-10-26"},{"lineNumber":169,"author":{"gitId":"alwinangys"},"content":"                + \"Budget: $\" + event.getBudget() + System.lineSeparator()","lastModifiedDate":"2021-10-26"},{"lineNumber":170,"author":{"gitId":"alwinangys"},"content":"                + \"Tasks: \" + System.lineSeparator() + event.getTaskListAsString();","lastModifiedDate":"2021-10-26"},{"lineNumber":171,"author":{"gitId":"alwinangys"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":172,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":173,"author":{"gitId":"alwinangys"},"content":"    public static void printTask(Task task) {","lastModifiedDate":"2021-10-12"},{"lineNumber":174,"author":{"gitId":"antrikshv"},"content":"        System.out.println(\"Title: \" + task.getTitle() + System.lineSeparator()","lastModifiedDate":"2021-10-24"},{"lineNumber":175,"author":{"gitId":"antrikshv"},"content":"                + \"Deadline: \" + Parser.convertDateTime(task.getDateTime()) + System.lineSeparator()","lastModifiedDate":"2021-10-24"},{"lineNumber":176,"author":{"gitId":"antrikshv"},"content":"                + \"Description: \" + task.getDescription() + System.lineSeparator()","lastModifiedDate":"2021-10-24"},{"lineNumber":177,"author":{"gitId":"antrikshv"},"content":"                + \"Members: \");","lastModifiedDate":"2021-10-24"},{"lineNumber":178,"author":{"gitId":"antrikshv"},"content":"        printMemberList(task.getMemberList());","lastModifiedDate":"2021-10-24"},{"lineNumber":179,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":180,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":181,"author":{"gitId":"alwinangys"},"content":"    public static void printEvent(Event event) {","lastModifiedDate":"2021-10-12"},{"lineNumber":182,"author":{"gitId":"antrikshv"},"content":"        System.out.println(\"Title: \" + event.getTitle() + System.lineSeparator()","lastModifiedDate":"2021-10-24"},{"lineNumber":183,"author":{"gitId":"antrikshv"},"content":"                + \"Date: \" + Parser.convertDateTime(event.getDateTime()) + System.lineSeparator()","lastModifiedDate":"2021-10-24"},{"lineNumber":184,"author":{"gitId":"antrikshv"},"content":"                + \"Description: \" + event.getDescription() + System.lineSeparator()","lastModifiedDate":"2021-10-24"},{"lineNumber":185,"author":{"gitId":"antrikshv"},"content":"                + \"Venue: \" + event.getVenue() + System.lineSeparator()","lastModifiedDate":"2021-10-24"},{"lineNumber":186,"author":{"gitId":"antrikshv"},"content":"                + \"Budget: $\" + event.getBudget() + System.lineSeparator()","lastModifiedDate":"2021-10-24"},{"lineNumber":187,"author":{"gitId":"antrikshv"},"content":"                + \"Tasks: \");","lastModifiedDate":"2021-10-24"},{"lineNumber":188,"author":{"gitId":"antrikshv"},"content":"        printList(event.getTaskList());","lastModifiedDate":"2021-10-24"},{"lineNumber":189,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":190,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":191,"author":{"gitId":"antrikshv"},"content":"    public static void printMemberList(ArrayList\u003cMember\u003e list) {","lastModifiedDate":"2021-10-24"},{"lineNumber":192,"author":{"gitId":"antrikshv"},"content":"        AtomicInteger i \u003d new AtomicInteger();","lastModifiedDate":"2021-10-24"},{"lineNumber":193,"author":{"gitId":"antrikshv"},"content":"        list.forEach(member -\u003e System.out.println(i.getAndIncrement() + 1 + \". \" + member));","lastModifiedDate":"2021-10-24"},{"lineNumber":194,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":195,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":196,"author":{"gitId":"antrikshv"},"content":"    public static void listUsageCommands() {","lastModifiedDate":"2021-10-25"},{"lineNumber":197,"author":{"gitId":"antrikshv"},"content":"        System.out.println(System.lineSeparator() + \"FURTHER COMMANDS\"","lastModifiedDate":"2021-10-25"},{"lineNumber":198,"author":{"gitId":"antrikshv"},"content":"                + System.lineSeparator() + \"-----------------------\"","lastModifiedDate":"2021-10-25"},{"lineNumber":199,"author":{"gitId":"antrikshv"},"content":"                + System.lineSeparator() + \"To list Task: list [Event Index] -t\"","lastModifiedDate":"2021-10-25"},{"lineNumber":200,"author":{"gitId":"antrikshv"},"content":"                + System.lineSeparator() + \"To list Members of a Task: \"","lastModifiedDate":"2021-10-25"},{"lineNumber":201,"author":{"gitId":"antrikshv"},"content":"                + \"list [Event Index] t/[Task Index]\");","lastModifiedDate":"2021-10-25"},{"lineNumber":202,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":203,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":204,"author":{"gitId":"antrikshv"},"content":"    public static void updateIntroMessage() {","lastModifiedDate":"2021-10-25"},{"lineNumber":205,"author":{"gitId":"antrikshv"},"content":"        System.out.println(\"Please type the item you would like to update in the following manner \"","lastModifiedDate":"2021-10-25"},{"lineNumber":206,"author":{"gitId":"antrikshv"},"content":"                + System.lineSeparator() + \"-----------------------------------------------------------------------   \"","lastModifiedDate":"2021-10-25"},{"lineNumber":207,"author":{"gitId":"antrikshv"},"content":"                + System.lineSeparator() + \"title/[NEW NAME]   \"","lastModifiedDate":"2021-10-25"},{"lineNumber":208,"author":{"gitId":"antrikshv"},"content":"                + System.lineSeparator() + \"date/[NEW DATE[d/dd-MM-yyyy HHmm]]\"","lastModifiedDate":"2021-10-25"},{"lineNumber":209,"author":{"gitId":"antrikshv"},"content":"                + System.lineSeparator() + \"description/[NEW DESCRIPTION]\"","lastModifiedDate":"2021-10-25"},{"lineNumber":210,"author":{"gitId":"antrikshv"},"content":"                + System.lineSeparator() + \"venue/[NEW VENUE]\"","lastModifiedDate":"2021-10-25"},{"lineNumber":211,"author":{"gitId":"antrikshv"},"content":"                + System.lineSeparator() + \"budget/[NEW BUDGET]\"","lastModifiedDate":"2021-10-25"},{"lineNumber":212,"author":{"gitId":"antrikshv"},"content":"                + System.lineSeparator() + \"task/[TASK NUM YOU WANT TO UPDATE]\"","lastModifiedDate":"2021-10-25"},{"lineNumber":213,"author":{"gitId":"antrikshv"},"content":"                + System.lineSeparator()","lastModifiedDate":"2021-10-25"},{"lineNumber":214,"author":{"gitId":"antrikshv"},"content":"                + \"You may type more then one update at a given time but separate them with a [\u003e]\"","lastModifiedDate":"2021-10-25"},{"lineNumber":215,"author":{"gitId":"antrikshv"},"content":"                + System.lineSeparator() + Ui.getLineBreak());","lastModifiedDate":"2021-10-25"},{"lineNumber":216,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":217,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":218,"author":{"gitId":"antrikshv"},"content":"    public static void printUpdatedEvent(Event event) {","lastModifiedDate":"2021-10-26"},{"lineNumber":219,"author":{"gitId":"antrikshv"},"content":"        System.out.println(\"Title: \" + event.getTitle() + System.lineSeparator()","lastModifiedDate":"2021-10-26"},{"lineNumber":220,"author":{"gitId":"antrikshv"},"content":"                + \"Date: \" + Parser.convertDateTime(event.getDateTime()) + System.lineSeparator()","lastModifiedDate":"2021-10-26"},{"lineNumber":221,"author":{"gitId":"antrikshv"},"content":"                + \"Description: \" + event.getDescription() + System.lineSeparator()","lastModifiedDate":"2021-10-26"},{"lineNumber":222,"author":{"gitId":"antrikshv"},"content":"                + \"Venue: \" + event.getVenue() + System.lineSeparator()","lastModifiedDate":"2021-10-26"},{"lineNumber":223,"author":{"gitId":"antrikshv"},"content":"                + \"Budget: $\" + event.getBudget() + System.lineSeparator()","lastModifiedDate":"2021-10-26"},{"lineNumber":224,"author":{"gitId":"antrikshv"},"content":"                + \"Tasks: \");","lastModifiedDate":"2021-10-26"},{"lineNumber":225,"author":{"gitId":"antrikshv"},"content":"        for (Task t : event.getTaskList()) {","lastModifiedDate":"2021-10-26"},{"lineNumber":226,"author":{"gitId":"antrikshv"},"content":"            printTask(t);","lastModifiedDate":"2021-10-26"},{"lineNumber":227,"author":{"gitId":"antrikshv"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":228,"author":{"gitId":"antrikshv"},"content":"        //printList(event.getTaskList());","lastModifiedDate":"2021-10-26"},{"lineNumber":229,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":230,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":231,"author":{"gitId":"antrikshv"},"content":"}","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"antrikshv":79,"Alvinlj00":37,"crabnuggets":85,"alwinangys":30}},{"path":"src/main/java/seedu/duke/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"antrikshv"},"content":"package seedu.duke.commands;","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"Alvinlj00"},"content":"import seedu.duke.Duke;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"Alvinlj00"},"content":"import seedu.duke.items.characteristics.Member;","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"crabnuggets"},"content":"import seedu.duke.parser.Parser;","lastModifiedDate":"2021-10-23"},{"lineNumber":6,"author":{"gitId":"Alvinlj00"},"content":"import seedu.duke.Ui;","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"Alvinlj00"},"content":"import seedu.duke.exceptions.DukeException;","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"Alvinlj00"},"content":"import seedu.duke.items.Event;","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"Alvinlj00"},"content":"import seedu.duke.items.Task;","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"Alvinlj00"},"content":"import java.math.BigDecimal;","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"Alvinlj00"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"Alvinlj00"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"antrikshv"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2021-10-04"},{"lineNumber":16,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":17,"author":{"gitId":"Alvinlj00"},"content":"    protected static final String TASK_FLAG \u003d \"-t\";","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"Alvinlj00"},"content":"    protected static final String EVENT_FLAG \u003d \"-e\";","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"Alvinlj00"},"content":"    protected static final String MEMBER_FLAG \u003d \"-m\";","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"Alvinlj00"},"content":"    protected static final String TITLE_FLAG \u003d \"n/\";","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"Alvinlj00"},"content":"    protected static final String DATE_FLAG \u003d \"d/\";","lastModifiedDate":"2021-10-09"},{"lineNumber":22,"author":{"gitId":"Alvinlj00"},"content":"    protected static final String VENUE_FLAG \u003d \"v/\";","lastModifiedDate":"2021-10-09"},{"lineNumber":23,"author":{"gitId":"Alvinlj00"},"content":"    protected static final String BUDGET_FLAG \u003d \"b/\";","lastModifiedDate":"2021-10-09"},{"lineNumber":24,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":25,"author":{"gitId":"Alvinlj00"},"content":"    protected static String itemType;","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"Alvinlj00"},"content":"    protected static String itemTitle;","lastModifiedDate":"2021-10-09"},{"lineNumber":27,"author":{"gitId":"Alvinlj00"},"content":"    protected static String itemDescription;","lastModifiedDate":"2021-10-09"},{"lineNumber":28,"author":{"gitId":"Alvinlj00"},"content":"    protected static LocalDateTime itemDateTime;","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"Alvinlj00"},"content":"    protected static String eventVenue;","lastModifiedDate":"2021-10-09"},{"lineNumber":31,"author":{"gitId":"Alvinlj00"},"content":"    protected static double eventBudget;","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"Alvinlj00"},"content":"    protected static String memberName;","lastModifiedDate":"2021-10-25"},{"lineNumber":34,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":35,"author":{"gitId":"Alvinlj00"},"content":"    // Indicates if an error occurs due to the wrong format typed by the user","lastModifiedDate":"2021-10-09"},{"lineNumber":36,"author":{"gitId":"Alvinlj00"},"content":"    protected static boolean isCorrectFormat;","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"Alvinlj00"},"content":"    public AddCommand(String[] command, String response) {","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":40,"author":{"gitId":"Alvinlj00"},"content":"        isCorrectFormat \u003d true;","lastModifiedDate":"2021-10-08"},{"lineNumber":41,"author":{"gitId":"Alvinlj00"},"content":"        assert command[0].equals(\"add\") : \"Command must be \u0027add\u0027\";","lastModifiedDate":"2021-10-22"},{"lineNumber":42,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":43,"author":{"gitId":"Alvinlj00"},"content":"        try {","lastModifiedDate":"2021-10-08"},{"lineNumber":44,"author":{"gitId":"Alvinlj00"},"content":"            if (command.length \u003d\u003d 1) {","lastModifiedDate":"2021-10-08"},{"lineNumber":45,"author":{"gitId":"Alvinlj00"},"content":"                throw new DukeException(\"Please specify what to add. \");","lastModifiedDate":"2021-10-08"},{"lineNumber":46,"author":{"gitId":"Alvinlj00"},"content":"            }","lastModifiedDate":"2021-10-08"},{"lineNumber":47,"author":{"gitId":"Alvinlj00"},"content":"            itemType \u003d command[1];","lastModifiedDate":"2021-10-08"},{"lineNumber":48,"author":{"gitId":"Alvinlj00"},"content":"            if (itemType.equalsIgnoreCase(TASK_FLAG)) {","lastModifiedDate":"2021-10-09"},{"lineNumber":49,"author":{"gitId":"Alvinlj00"},"content":"                prepareTask(response);","lastModifiedDate":"2021-10-08"},{"lineNumber":50,"author":{"gitId":"Alvinlj00"},"content":"            } else if (itemType.equalsIgnoreCase(EVENT_FLAG)) {","lastModifiedDate":"2021-10-09"},{"lineNumber":51,"author":{"gitId":"Alvinlj00"},"content":"                prepareEvent(response);","lastModifiedDate":"2021-10-08"},{"lineNumber":52,"author":{"gitId":"Alvinlj00"},"content":"            } else if (itemType.equalsIgnoreCase(MEMBER_FLAG)) {","lastModifiedDate":"2021-10-25"},{"lineNumber":53,"author":{"gitId":"Alvinlj00"},"content":"                prepareMember(response);","lastModifiedDate":"2021-10-25"},{"lineNumber":54,"author":{"gitId":"Alvinlj00"},"content":"            } else {","lastModifiedDate":"2021-10-08"},{"lineNumber":55,"author":{"gitId":"Alvinlj00"},"content":"                throw new DukeException(\"Invalid item flag entered. Please specify task \u0027-t\u0027 or event \u0027-e\u0027\"","lastModifiedDate":"2021-10-11"},{"lineNumber":56,"author":{"gitId":"Alvinlj00"},"content":"                        + \"after the \u0027add\u0027 command. \");","lastModifiedDate":"2021-10-11"},{"lineNumber":57,"author":{"gitId":"Alvinlj00"},"content":"            }","lastModifiedDate":"2021-10-08"},{"lineNumber":58,"author":{"gitId":"Alvinlj00"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-10-08"},{"lineNumber":59,"author":{"gitId":"Alvinlj00"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2021-10-08"},{"lineNumber":60,"author":{"gitId":"Alvinlj00"},"content":"            isCorrectFormat \u003d false;","lastModifiedDate":"2021-10-08"},{"lineNumber":61,"author":{"gitId":"Alvinlj00"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":62,"author":{"gitId":"Alvinlj00"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":63,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":64,"author":{"gitId":"Alvinlj00"},"content":"    private String retrieveItemAttribute(String response, String flag) {","lastModifiedDate":"2021-10-09"},{"lineNumber":65,"author":{"gitId":"Alvinlj00"},"content":"        int startOfItemAttribute \u003d response.indexOf(flag) + 2;","lastModifiedDate":"2021-10-09"},{"lineNumber":66,"author":{"gitId":"Alvinlj00"},"content":"        int endOfItemAttribute \u003d response.indexOf(\"/\", startOfItemAttribute) - 2;","lastModifiedDate":"2021-10-09"},{"lineNumber":67,"author":{"gitId":"Alvinlj00"},"content":"        if (endOfItemAttribute \u003c 0) {","lastModifiedDate":"2021-10-09"},{"lineNumber":68,"author":{"gitId":"Alvinlj00"},"content":"            return response.trim().substring(startOfItemAttribute);","lastModifiedDate":"2021-10-09"},{"lineNumber":69,"author":{"gitId":"Alvinlj00"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":70,"author":{"gitId":"Alvinlj00"},"content":"        return response.trim().substring(startOfItemAttribute, endOfItemAttribute);","lastModifiedDate":"2021-10-09"},{"lineNumber":71,"author":{"gitId":"Alvinlj00"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":72,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":73,"author":{"gitId":"Alvinlj00"},"content":"    private void initializeDateTime(String taskDeadline) throws DukeException {","lastModifiedDate":"2021-10-11"},{"lineNumber":74,"author":{"gitId":"Alvinlj00"},"content":"        try {","lastModifiedDate":"2021-10-11"},{"lineNumber":75,"author":{"gitId":"Alvinlj00"},"content":"            itemDateTime \u003d Parser.convertDateTime(taskDeadline);","lastModifiedDate":"2021-10-11"},{"lineNumber":76,"author":{"gitId":"Alvinlj00"},"content":"            if (itemDateTime.isBefore(LocalDateTime.now())) {","lastModifiedDate":"2021-10-11"},{"lineNumber":77,"author":{"gitId":"Alvinlj00"},"content":"                throw new DukeException(\"Unfortunately, we cannot travel back in time. Please \"","lastModifiedDate":"2021-10-11"},{"lineNumber":78,"author":{"gitId":"Alvinlj00"},"content":"                        + \"enter a valid date and time in the format \u0027dd-MM-yyyy HHmm\u0027. \");","lastModifiedDate":"2021-10-11"},{"lineNumber":79,"author":{"gitId":"Alvinlj00"},"content":"            }","lastModifiedDate":"2021-10-11"},{"lineNumber":80,"author":{"gitId":"Alvinlj00"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-10-11"},{"lineNumber":81,"author":{"gitId":"Alvinlj00"},"content":"            throw new DukeException(\"Please use this format for the deadline \u0027dd-MM-yyyy HHmm\u0027. \");","lastModifiedDate":"2021-10-11"},{"lineNumber":82,"author":{"gitId":"Alvinlj00"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":83,"author":{"gitId":"Alvinlj00"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":84,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":85,"author":{"gitId":"Alvinlj00"},"content":"    private double retrieveEventBudget(String response) {","lastModifiedDate":"2021-10-11"},{"lineNumber":86,"author":{"gitId":"Alvinlj00"},"content":"        int startOfEventBudget \u003d response.indexOf(BUDGET_FLAG) + 2;","lastModifiedDate":"2021-10-09"},{"lineNumber":87,"author":{"gitId":"Alvinlj00"},"content":"        int endOfEventBudget \u003d response.indexOf(\"/\", startOfEventBudget) - 2;","lastModifiedDate":"2021-10-09"},{"lineNumber":88,"author":{"gitId":"Alvinlj00"},"content":"        double budget;","lastModifiedDate":"2021-10-22"},{"lineNumber":89,"author":{"gitId":"Alvinlj00"},"content":"        try {","lastModifiedDate":"2021-10-09"},{"lineNumber":90,"author":{"gitId":"Alvinlj00"},"content":"            if (endOfEventBudget \u003c 0) {","lastModifiedDate":"2021-10-09"},{"lineNumber":91,"author":{"gitId":"Alvinlj00"},"content":"                budget \u003d Double.parseDouble(response.trim().substring(startOfEventBudget));","lastModifiedDate":"2021-10-22"},{"lineNumber":92,"author":{"gitId":"Alvinlj00"},"content":"            } else {","lastModifiedDate":"2021-10-22"},{"lineNumber":93,"author":{"gitId":"Alvinlj00"},"content":"                budget \u003d Double.parseDouble(response.trim().substring(startOfEventBudget, endOfEventBudget));","lastModifiedDate":"2021-10-22"},{"lineNumber":94,"author":{"gitId":"Alvinlj00"},"content":"            }","lastModifiedDate":"2021-10-22"},{"lineNumber":95,"author":{"gitId":"Alvinlj00"},"content":"            if (budget \u003c 0) {","lastModifiedDate":"2021-10-22"},{"lineNumber":96,"author":{"gitId":"Alvinlj00"},"content":"                System.out.print(\"Event budget needs to be a positive number. \");","lastModifiedDate":"2021-10-22"},{"lineNumber":97,"author":{"gitId":"Alvinlj00"},"content":"                // Returns -1 to signify that the budget entered was not a positive number","lastModifiedDate":"2021-10-22"},{"lineNumber":98,"author":{"gitId":"Alvinlj00"},"content":"                return -1;","lastModifiedDate":"2021-10-22"},{"lineNumber":99,"author":{"gitId":"Alvinlj00"},"content":"            }","lastModifiedDate":"2021-10-09"},{"lineNumber":100,"author":{"gitId":"Alvinlj00"},"content":"            return budget;","lastModifiedDate":"2021-10-22"},{"lineNumber":101,"author":{"gitId":"Alvinlj00"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-10-09"},{"lineNumber":102,"author":{"gitId":"Alvinlj00"},"content":"            System.out.print(\"Event budget needs to be a number. \");","lastModifiedDate":"2021-10-11"},{"lineNumber":103,"author":{"gitId":"Alvinlj00"},"content":"            // Returns -1 to signify that the budget entered was not a valid number","lastModifiedDate":"2021-10-22"},{"lineNumber":104,"author":{"gitId":"Alvinlj00"},"content":"            return -1;","lastModifiedDate":"2021-10-09"},{"lineNumber":105,"author":{"gitId":"Alvinlj00"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":106,"author":{"gitId":"Alvinlj00"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":107,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":108,"author":{"gitId":"Alvinlj00"},"content":"    private void prepareTask(String response) throws DukeException {","lastModifiedDate":"2021-10-08"},{"lineNumber":109,"author":{"gitId":"Alvinlj00"},"content":"        if (Duke.eventCatalog.isEmpty()) {","lastModifiedDate":"2021-10-21"},{"lineNumber":110,"author":{"gitId":"Alvinlj00"},"content":"            throw new DukeException(\"There is no event to assign this task to! Please add \"","lastModifiedDate":"2021-10-21"},{"lineNumber":111,"author":{"gitId":"Alvinlj00"},"content":"                    + \"an event using the flag \u0027-e\u0027. \");","lastModifiedDate":"2021-10-21"},{"lineNumber":112,"author":{"gitId":"Alvinlj00"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":113,"author":{"gitId":"Alvinlj00"},"content":"        if (Duke.memberRoster.isEmpty()) {","lastModifiedDate":"2021-10-25"},{"lineNumber":114,"author":{"gitId":"Alvinlj00"},"content":"            throw new DukeException(\"There are no members in your roster to assign this task to!\");","lastModifiedDate":"2021-10-25"},{"lineNumber":115,"author":{"gitId":"Alvinlj00"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":116,"author":{"gitId":"Alvinlj00"},"content":"        if (!response.contains(TITLE_FLAG)) {","lastModifiedDate":"2021-10-09"},{"lineNumber":117,"author":{"gitId":"Alvinlj00"},"content":"            throw new DukeException(\"Please add a title for your task using \u0027n/\u003ctitle\u003e\u0027. \");","lastModifiedDate":"2021-10-08"},{"lineNumber":118,"author":{"gitId":"Alvinlj00"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":119,"author":{"gitId":"Alvinlj00"},"content":"        if (!response.contains(DATE_FLAG)) {","lastModifiedDate":"2021-10-09"},{"lineNumber":120,"author":{"gitId":"Alvinlj00"},"content":"            throw new DukeException(\"Please add a deadline for your task using \u0027d/\u003cdeadline\u003e\u0027 in the \"","lastModifiedDate":"2021-10-09"},{"lineNumber":121,"author":{"gitId":"antrikshv"},"content":"                    + \"format dd-MM-yyyy HHmm. \");","lastModifiedDate":"2021-10-10"},{"lineNumber":122,"author":{"gitId":"Alvinlj00"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":123,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":124,"author":{"gitId":"Alvinlj00"},"content":"        itemTitle \u003d retrieveItemAttribute(response, TITLE_FLAG);","lastModifiedDate":"2021-10-09"},{"lineNumber":125,"author":{"gitId":"Alvinlj00"},"content":"        if (itemTitle.isBlank()) {","lastModifiedDate":"2021-10-09"},{"lineNumber":126,"author":{"gitId":"Alvinlj00"},"content":"            throw new DukeException(\"Task title cannot be empty, please re-enter your task. \");","lastModifiedDate":"2021-10-08"},{"lineNumber":127,"author":{"gitId":"Alvinlj00"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":128,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":129,"author":{"gitId":"Alvinlj00"},"content":"        String taskDeadline \u003d retrieveItemAttribute(response, DATE_FLAG);","lastModifiedDate":"2021-10-11"},{"lineNumber":130,"author":{"gitId":"Alvinlj00"},"content":"        if (taskDeadline.isBlank()) {","lastModifiedDate":"2021-10-11"},{"lineNumber":131,"author":{"gitId":"Alvinlj00"},"content":"            throw new DukeException(\"Task deadline cannot be empty, please re-enter your task. \");","lastModifiedDate":"2021-10-08"},{"lineNumber":132,"author":{"gitId":"Alvinlj00"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":133,"author":{"gitId":"Alvinlj00"},"content":"        initializeDateTime(taskDeadline);","lastModifiedDate":"2021-10-11"},{"lineNumber":134,"author":{"gitId":"Alvinlj00"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":135,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":136,"author":{"gitId":"Alvinlj00"},"content":"    private void prepareEvent(String response) throws DukeException {","lastModifiedDate":"2021-10-09"},{"lineNumber":137,"author":{"gitId":"Alvinlj00"},"content":"        if (!response.contains(TITLE_FLAG)) {","lastModifiedDate":"2021-10-09"},{"lineNumber":138,"author":{"gitId":"Alvinlj00"},"content":"            throw new DukeException(\"Please add a title for your event using \u0027n/\u003ctitle\u003e\u0027. \");","lastModifiedDate":"2021-10-09"},{"lineNumber":139,"author":{"gitId":"Alvinlj00"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":140,"author":{"gitId":"Alvinlj00"},"content":"        if (!response.contains(DATE_FLAG)) {","lastModifiedDate":"2021-10-09"},{"lineNumber":141,"author":{"gitId":"Alvinlj00"},"content":"            throw new DukeException(\"Please add a date for your event using \u0027d/\u003cdate\u003e\u0027 in the \"","lastModifiedDate":"2021-10-09"},{"lineNumber":142,"author":{"gitId":"antrikshv"},"content":"                    + \"format dd-MM-yyyy HHmm. \");","lastModifiedDate":"2021-10-10"},{"lineNumber":143,"author":{"gitId":"Alvinlj00"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":144,"author":{"gitId":"Alvinlj00"},"content":"        if (!response.contains(VENUE_FLAG)) {","lastModifiedDate":"2021-10-09"},{"lineNumber":145,"author":{"gitId":"Alvinlj00"},"content":"            throw new DukeException(\"Please add a venue for your event using \u0027v/\u003cvenue\u003e\u0027. \");","lastModifiedDate":"2021-10-09"},{"lineNumber":146,"author":{"gitId":"Alvinlj00"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":147,"author":{"gitId":"Alvinlj00"},"content":"        if (!response.contains(BUDGET_FLAG)) {","lastModifiedDate":"2021-10-09"},{"lineNumber":148,"author":{"gitId":"Alvinlj00"},"content":"            throw new DukeException(\"Please add a budget for your event using \u0027b/\u003cbudget\u003e\u0027. \");","lastModifiedDate":"2021-10-09"},{"lineNumber":149,"author":{"gitId":"Alvinlj00"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":150,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":151,"author":{"gitId":"Alvinlj00"},"content":"        itemTitle \u003d retrieveItemAttribute(response, TITLE_FLAG);","lastModifiedDate":"2021-10-09"},{"lineNumber":152,"author":{"gitId":"Alvinlj00"},"content":"        if (itemTitle.isBlank()) {","lastModifiedDate":"2021-10-09"},{"lineNumber":153,"author":{"gitId":"Alvinlj00"},"content":"            throw new DukeException(\"Event title cannot be empty, please re-enter your event. \");","lastModifiedDate":"2021-10-09"},{"lineNumber":154,"author":{"gitId":"Alvinlj00"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":155,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":156,"author":{"gitId":"Alvinlj00"},"content":"        String eventDateTime \u003d retrieveItemAttribute(response, DATE_FLAG);","lastModifiedDate":"2021-10-11"},{"lineNumber":157,"author":{"gitId":"Alvinlj00"},"content":"        if (eventDateTime.isBlank()) {","lastModifiedDate":"2021-10-11"},{"lineNumber":158,"author":{"gitId":"Alvinlj00"},"content":"            throw new DukeException(\"Event date and time cannot be empty, please re-enter your task. \");","lastModifiedDate":"2021-10-11"},{"lineNumber":159,"author":{"gitId":"Alvinlj00"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":160,"author":{"gitId":"Alvinlj00"},"content":"        initializeDateTime(eventDateTime);","lastModifiedDate":"2021-10-11"},{"lineNumber":161,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":162,"author":{"gitId":"Alvinlj00"},"content":"        eventVenue \u003d retrieveItemAttribute(response, VENUE_FLAG);","lastModifiedDate":"2021-10-09"},{"lineNumber":163,"author":{"gitId":"Alvinlj00"},"content":"        if (eventVenue.isBlank()) {","lastModifiedDate":"2021-10-09"},{"lineNumber":164,"author":{"gitId":"Alvinlj00"},"content":"            throw new DukeException(\"Event venue cannot be empty, please re-enter your event. \");","lastModifiedDate":"2021-10-09"},{"lineNumber":165,"author":{"gitId":"Alvinlj00"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":166,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":167,"author":{"gitId":"Alvinlj00"},"content":"        eventBudget \u003d retrieveEventBudget(response);","lastModifiedDate":"2021-10-09"},{"lineNumber":168,"author":{"gitId":"Alvinlj00"},"content":"        if (eventBudget \u003d\u003d -1) {","lastModifiedDate":"2021-10-22"},{"lineNumber":169,"author":{"gitId":"Alvinlj00"},"content":"            throw new DukeException(\"Please re-enter your event. \");","lastModifiedDate":"2021-10-22"},{"lineNumber":170,"author":{"gitId":"Alvinlj00"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":171,"author":{"gitId":"Alvinlj00"},"content":"        assert eventBudget \u003e\u003d 0 : \"Event budget cannot be a negative number\";","lastModifiedDate":"2021-10-22"},{"lineNumber":172,"author":{"gitId":"Alvinlj00"},"content":"        if (BigDecimal.valueOf(eventBudget).scale() \u003e 2) {","lastModifiedDate":"2021-10-11"},{"lineNumber":173,"author":{"gitId":"Alvinlj00"},"content":"            throw new DukeException(\"Event budget cannot have more than 2 decimal places. Please re-enter \"","lastModifiedDate":"2021-10-11"},{"lineNumber":174,"author":{"gitId":"Alvinlj00"},"content":"                    + \"your event. \");","lastModifiedDate":"2021-10-11"},{"lineNumber":175,"author":{"gitId":"Alvinlj00"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":176,"author":{"gitId":"Alvinlj00"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":177,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":178,"author":{"gitId":"Alvinlj00"},"content":"    private void prepareMember(String response) {","lastModifiedDate":"2021-10-25"},{"lineNumber":179,"author":{"gitId":"Alvinlj00"},"content":"        memberName \u003d response.substring(response.indexOf(MEMBER_FLAG) + 3).trim().toUpperCase();","lastModifiedDate":"2021-10-25"},{"lineNumber":180,"author":{"gitId":"Alvinlj00"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":181,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":182,"author":{"gitId":"Alvinlj00"},"content":"    private static void addToEventCatalog(Event event) {","lastModifiedDate":"2021-10-21"},{"lineNumber":183,"author":{"gitId":"Alvinlj00"},"content":"        Duke.eventCatalog.add(event);","lastModifiedDate":"2021-10-21"},{"lineNumber":184,"author":{"gitId":"Alvinlj00"},"content":"        Duke.eventCatalog.sortCatalog();","lastModifiedDate":"2021-10-22"},{"lineNumber":185,"author":{"gitId":"Alvinlj00"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":186,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":187,"author":{"gitId":"Alvinlj00"},"content":"    private static void addToMemberRoster(Member member) {","lastModifiedDate":"2021-10-25"},{"lineNumber":188,"author":{"gitId":"Alvinlj00"},"content":"        Duke.memberRoster.add(member);","lastModifiedDate":"2021-10-25"},{"lineNumber":189,"author":{"gitId":"Alvinlj00"},"content":"        Duke.memberRoster.sortRoster();","lastModifiedDate":"2021-10-25"},{"lineNumber":190,"author":{"gitId":"Alvinlj00"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":191,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":192,"author":{"gitId":"Alvinlj00"},"content":"    private void addTaskToEvent(int eventIndex, Task task) throws DukeException {","lastModifiedDate":"2021-10-22"},{"lineNumber":193,"author":{"gitId":"Alvinlj00"},"content":"        try {","lastModifiedDate":"2021-10-22"},{"lineNumber":194,"author":{"gitId":"Alvinlj00"},"content":"            Duke.eventCatalog.get(eventIndex - 1).addToTaskList(task);","lastModifiedDate":"2021-10-21"},{"lineNumber":195,"author":{"gitId":"Alvinlj00"},"content":"            Duke.eventCatalog.sortCatalog();","lastModifiedDate":"2021-10-22"},{"lineNumber":196,"author":{"gitId":"Alvinlj00"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-10-22"},{"lineNumber":197,"author":{"gitId":"antrikshv"},"content":"            Ui.printLineBreak();","lastModifiedDate":"2021-10-26"},{"lineNumber":198,"author":{"gitId":"Alvinlj00"},"content":"            throw new DukeException(\"No such event. Please enter a valid event for your task. \");","lastModifiedDate":"2021-10-22"},{"lineNumber":199,"author":{"gitId":"Alvinlj00"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":200,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":201,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":202,"author":{"gitId":"Alvinlj00"},"content":"    private void addTaskToMember(int memberIndex, Task task) throws DukeException {","lastModifiedDate":"2021-10-25"},{"lineNumber":203,"author":{"gitId":"Alvinlj00"},"content":"        try {","lastModifiedDate":"2021-10-25"},{"lineNumber":204,"author":{"gitId":"Alvinlj00"},"content":"            Duke.memberRoster.get(memberIndex - 1).addToAssignedTasks(task);","lastModifiedDate":"2021-10-25"},{"lineNumber":205,"author":{"gitId":"Alvinlj00"},"content":"            Duke.memberRoster.get(memberIndex - 1).sortTasks();","lastModifiedDate":"2021-10-25"},{"lineNumber":206,"author":{"gitId":"Alvinlj00"},"content":"            task.addMember(Duke.memberRoster.get(memberIndex - 1));","lastModifiedDate":"2021-10-25"},{"lineNumber":207,"author":{"gitId":"Alvinlj00"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-10-25"},{"lineNumber":208,"author":{"gitId":"antrikshv"},"content":"            Ui.printLineBreak();","lastModifiedDate":"2021-10-26"},{"lineNumber":209,"author":{"gitId":"Alvinlj00"},"content":"            throw new DukeException(\"This member does not exist. Please enter the index corresponding to \"","lastModifiedDate":"2021-10-25"},{"lineNumber":210,"author":{"gitId":"Alvinlj00"},"content":"                    + \"the correct member. \");","lastModifiedDate":"2021-10-25"},{"lineNumber":211,"author":{"gitId":"Alvinlj00"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":212,"author":{"gitId":"Alvinlj00"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":213,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":214,"author":{"gitId":"Alvinlj00"},"content":"    private int getEventForTask(Task task) {","lastModifiedDate":"2021-10-25"},{"lineNumber":215,"author":{"gitId":"Alvinlj00"},"content":"        Ui.promptForEventIndex();","lastModifiedDate":"2021-10-21"},{"lineNumber":216,"author":{"gitId":"Alvinlj00"},"content":"        int eventIndex \u003d 0;","lastModifiedDate":"2021-10-25"},{"lineNumber":217,"author":{"gitId":"Alvinlj00"},"content":"        boolean isCorrectEvent \u003d false;","lastModifiedDate":"2021-10-22"},{"lineNumber":218,"author":{"gitId":"Alvinlj00"},"content":"        while (!isCorrectEvent) {","lastModifiedDate":"2021-10-22"},{"lineNumber":219,"author":{"gitId":"Alvinlj00"},"content":"            try {","lastModifiedDate":"2021-10-22"},{"lineNumber":220,"author":{"gitId":"Alvinlj00"},"content":"                assert !Duke.eventCatalog.isEmpty() : \"The event catalog should not be empty\";","lastModifiedDate":"2021-10-22"},{"lineNumber":221,"author":{"gitId":"Alvinlj00"},"content":"                Ui.printEventCatalog();","lastModifiedDate":"2021-10-22"},{"lineNumber":222,"author":{"gitId":"Alvinlj00"},"content":"                Ui.printLineBreak();","lastModifiedDate":"2021-10-22"},{"lineNumber":223,"author":{"gitId":"Alvinlj00"},"content":"                eventIndex \u003d Integer.parseInt(Ui.readInput());","lastModifiedDate":"2021-10-25"},{"lineNumber":224,"author":{"gitId":"Alvinlj00"},"content":"                addTaskToEvent(eventIndex, task);","lastModifiedDate":"2021-10-21"},{"lineNumber":225,"author":{"gitId":"Alvinlj00"},"content":"                isCorrectEvent \u003d true;","lastModifiedDate":"2021-10-22"},{"lineNumber":226,"author":{"gitId":"Alvinlj00"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2021-10-22"},{"lineNumber":227,"author":{"gitId":"antrikshv"},"content":"                Ui.printLineBreak();","lastModifiedDate":"2021-10-26"},{"lineNumber":228,"author":{"gitId":"Alvinlj00"},"content":"                System.out.println(\"Please enter the number corresponding to the event \"","lastModifiedDate":"2021-10-22"},{"lineNumber":229,"author":{"gitId":"Alvinlj00"},"content":"                        + \"you want to add to. \");","lastModifiedDate":"2021-10-22"},{"lineNumber":230,"author":{"gitId":"Alvinlj00"},"content":"                Ui.printLineBreak();","lastModifiedDate":"2021-10-22"},{"lineNumber":231,"author":{"gitId":"Alvinlj00"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2021-10-22"},{"lineNumber":232,"author":{"gitId":"Alvinlj00"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2021-10-22"},{"lineNumber":233,"author":{"gitId":"Alvinlj00"},"content":"                Ui.printLineBreak();","lastModifiedDate":"2021-10-22"},{"lineNumber":234,"author":{"gitId":"Alvinlj00"},"content":"            }","lastModifiedDate":"2021-10-22"},{"lineNumber":235,"author":{"gitId":"Alvinlj00"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":236,"author":{"gitId":"Alvinlj00"},"content":"        assert eventIndex \u003e 0 : \"Event index should be valid\";","lastModifiedDate":"2021-10-25"},{"lineNumber":237,"author":{"gitId":"Alvinlj00"},"content":"        return eventIndex;","lastModifiedDate":"2021-10-25"},{"lineNumber":238,"author":{"gitId":"Alvinlj00"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":239,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":240,"author":{"gitId":"Alvinlj00"},"content":"    private void getMemberForTask(Task task) {","lastModifiedDate":"2021-10-25"},{"lineNumber":241,"author":{"gitId":"antrikshv"},"content":"        Ui.printLineBreak();","lastModifiedDate":"2021-10-26"},{"lineNumber":242,"author":{"gitId":"Alvinlj00"},"content":"        Ui.promptForMemberIndex();","lastModifiedDate":"2021-10-25"},{"lineNumber":243,"author":{"gitId":"Alvinlj00"},"content":"        boolean isCorrectMember \u003d false;","lastModifiedDate":"2021-10-25"},{"lineNumber":244,"author":{"gitId":"Alvinlj00"},"content":"        while (!isCorrectMember) {","lastModifiedDate":"2021-10-25"},{"lineNumber":245,"author":{"gitId":"Alvinlj00"},"content":"            try {","lastModifiedDate":"2021-10-25"},{"lineNumber":246,"author":{"gitId":"Alvinlj00"},"content":"                Ui.printMemberRoster();","lastModifiedDate":"2021-10-25"},{"lineNumber":247,"author":{"gitId":"Alvinlj00"},"content":"                Ui.printLineBreak();","lastModifiedDate":"2021-10-25"},{"lineNumber":248,"author":{"gitId":"Alvinlj00"},"content":"                int memberIndex \u003d Integer.parseInt(Ui.readInput());","lastModifiedDate":"2021-10-25"},{"lineNumber":249,"author":{"gitId":"Alvinlj00"},"content":"                addTaskToMember(memberIndex, task);","lastModifiedDate":"2021-10-25"},{"lineNumber":250,"author":{"gitId":"Alvinlj00"},"content":"                isCorrectMember \u003d true;","lastModifiedDate":"2021-10-25"},{"lineNumber":251,"author":{"gitId":"Alvinlj00"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2021-10-25"},{"lineNumber":252,"author":{"gitId":"Alvinlj00"},"content":"                System.out.println(\"Please enter the number corresponding to the member \"","lastModifiedDate":"2021-10-25"},{"lineNumber":253,"author":{"gitId":"Alvinlj00"},"content":"                        + \"you want to assign this task to. \");","lastModifiedDate":"2021-10-25"},{"lineNumber":254,"author":{"gitId":"Alvinlj00"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2021-10-25"},{"lineNumber":255,"author":{"gitId":"Alvinlj00"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2021-10-25"},{"lineNumber":256,"author":{"gitId":"Alvinlj00"},"content":"                Ui.printLineBreak();","lastModifiedDate":"2021-10-25"},{"lineNumber":257,"author":{"gitId":"Alvinlj00"},"content":"            }","lastModifiedDate":"2021-10-25"},{"lineNumber":258,"author":{"gitId":"Alvinlj00"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":259,"author":{"gitId":"Alvinlj00"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":260,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":261,"author":{"gitId":"Alvinlj00"},"content":"    public CommandResult execute() {","lastModifiedDate":"2021-10-25"},{"lineNumber":262,"author":{"gitId":"Alvinlj00"},"content":"        if (isCorrectFormat) {","lastModifiedDate":"2021-10-25"},{"lineNumber":263,"author":{"gitId":"antrikshv"},"content":"            if (itemType.equalsIgnoreCase(MEMBER_FLAG)) {","lastModifiedDate":"2021-10-26"},{"lineNumber":264,"author":{"gitId":"antrikshv"},"content":"                Member member \u003d new Member(memberName);","lastModifiedDate":"2021-10-26"},{"lineNumber":265,"author":{"gitId":"antrikshv"},"content":"                addToMemberRoster(member);","lastModifiedDate":"2021-10-26"},{"lineNumber":266,"author":{"gitId":"antrikshv"},"content":"                return new CommandResult(Ui.getMemberAddedMessage(member));","lastModifiedDate":"2021-10-26"},{"lineNumber":267,"author":{"gitId":"antrikshv"},"content":"            }","lastModifiedDate":"2021-10-26"},{"lineNumber":268,"author":{"gitId":"antrikshv"},"content":"            Ui.promptForDescription();","lastModifiedDate":"2021-10-26"},{"lineNumber":269,"author":{"gitId":"antrikshv"},"content":"            itemDescription \u003d Ui.readInput();","lastModifiedDate":"2021-10-26"},{"lineNumber":270,"author":{"gitId":"antrikshv"},"content":"            Ui.printLineBreak();","lastModifiedDate":"2021-10-26"},{"lineNumber":271,"author":{"gitId":"Alvinlj00"},"content":"            if (itemType.equalsIgnoreCase(TASK_FLAG)) {","lastModifiedDate":"2021-10-25"},{"lineNumber":272,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":273,"author":{"gitId":"Alvinlj00"},"content":"                Task task \u003d new Task(itemTitle, itemDescription, itemDateTime);","lastModifiedDate":"2021-10-25"},{"lineNumber":274,"author":{"gitId":"Alvinlj00"},"content":"                int eventIndex \u003d getEventForTask(task);","lastModifiedDate":"2021-10-25"},{"lineNumber":275,"author":{"gitId":"Alvinlj00"},"content":"                getMemberForTask(task);","lastModifiedDate":"2021-10-25"},{"lineNumber":276,"author":{"gitId":"antrikshv"},"content":"                Ui.printLineBreak();","lastModifiedDate":"2021-10-26"},{"lineNumber":277,"author":{"gitId":"Alvinlj00"},"content":"                return new CommandResult(Ui.getTaskAddedMessage(eventIndex, task));","lastModifiedDate":"2021-10-25"},{"lineNumber":278,"author":{"gitId":"Alvinlj00"},"content":"            }","lastModifiedDate":"2021-10-09"},{"lineNumber":279,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":280,"author":{"gitId":"Alvinlj00"},"content":"            if (itemType.equalsIgnoreCase(EVENT_FLAG)) {","lastModifiedDate":"2021-10-09"},{"lineNumber":281,"author":{"gitId":"Alvinlj00"},"content":"                Event event \u003d new Event(itemTitle, itemDescription, itemDateTime, eventVenue, eventBudget);","lastModifiedDate":"2021-10-11"},{"lineNumber":282,"author":{"gitId":"Alvinlj00"},"content":"                addToEventCatalog(event);","lastModifiedDate":"2021-10-21"},{"lineNumber":283,"author":{"gitId":"crabnuggets"},"content":"                return new CommandResult(Ui.getEventAddedMessage(event));","lastModifiedDate":"2021-10-10"},{"lineNumber":284,"author":{"gitId":"Alvinlj00"},"content":"            }","lastModifiedDate":"2021-10-09"},{"lineNumber":285,"author":{"gitId":"Alvinlj00"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":286,"author":{"gitId":"Alvinlj00"},"content":"        return new CommandResult(\"Item unable to be added!\");","lastModifiedDate":"2021-10-09"},{"lineNumber":287,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":288,"author":{"gitId":"antrikshv"},"content":"}","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"antrikshv":25,"Alvinlj00":261,"crabnuggets":2}},{"path":"src/main/java/seedu/duke/commands/ByeCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"antrikshv"},"content":"package seedu.duke.commands;","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"crabnuggets"},"content":"import seedu.duke.Ui;","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"antrikshv"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2021-10-04"},{"lineNumber":6,"author":{"gitId":"antrikshv"},"content":"    public static boolean isRunning \u003d true;","lastModifiedDate":"2021-10-04"},{"lineNumber":7,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":8,"author":{"gitId":"antrikshv"},"content":"    public ByeCommand() {","lastModifiedDate":"2021-10-04"},{"lineNumber":9,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":10,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":11,"author":{"gitId":"antrikshv"},"content":"    public CommandResult execute() {","lastModifiedDate":"2021-10-04"},{"lineNumber":12,"author":{"gitId":"antrikshv"},"content":"        isRunning \u003d false;","lastModifiedDate":"2021-10-04"},{"lineNumber":13,"author":{"gitId":"crabnuggets"},"content":"        return new CommandResult(Ui.getByeMessage());","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":15,"author":{"gitId":"antrikshv"},"content":"}","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"antrikshv":12,"crabnuggets":3}},{"path":"src/main/java/seedu/duke/commands/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"antrikshv"},"content":"package seedu.duke.commands;","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"antrikshv"},"content":"public class Command {","lastModifiedDate":"2021-10-04"},{"lineNumber":4,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":5,"author":{"gitId":"antrikshv"},"content":"    public Command() {","lastModifiedDate":"2021-10-04"},{"lineNumber":6,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":7,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":8,"author":{"gitId":"antrikshv"},"content":"    public CommandResult execute() {","lastModifiedDate":"2021-10-04"},{"lineNumber":9,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":10,"author":{"gitId":"antrikshv"},"content":"        /*","lastModifiedDate":"2021-10-04"},{"lineNumber":11,"author":{"gitId":"antrikshv"},"content":"        This is thrown if ever an empty command is executed (pseudo error message)","lastModifiedDate":"2021-10-04"},{"lineNumber":12,"author":{"gitId":"antrikshv"},"content":"        Will get overridden by methods within the separate commands","lastModifiedDate":"2021-10-04"},{"lineNumber":13,"author":{"gitId":"antrikshv"},"content":"         */","lastModifiedDate":"2021-10-04"},{"lineNumber":14,"author":{"gitId":"antrikshv"},"content":"        return new CommandResult(\"Sorry I did not quite understand, \"","lastModifiedDate":"2021-10-04"},{"lineNumber":15,"author":{"gitId":"antrikshv"},"content":"                + System.lineSeparator()","lastModifiedDate":"2021-10-04"},{"lineNumber":16,"author":{"gitId":"antrikshv"},"content":"                + \"try typing in help for brief user manual\");","lastModifiedDate":"2021-10-04"},{"lineNumber":17,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":18,"author":{"gitId":"antrikshv"},"content":"}","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"antrikshv":18}},{"path":"src/main/java/seedu/duke/commands/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"antrikshv"},"content":"package seedu.duke.commands;","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"antrikshv"},"content":"public class CommandResult {","lastModifiedDate":"2021-10-04"},{"lineNumber":4,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":5,"author":{"gitId":"antrikshv"},"content":"    public String feedbackToUser;","lastModifiedDate":"2021-10-04"},{"lineNumber":6,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":7,"author":{"gitId":"antrikshv"},"content":"    public CommandResult(String s) {","lastModifiedDate":"2021-10-04"},{"lineNumber":8,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":9,"author":{"gitId":"antrikshv"},"content":"        feedbackToUser \u003d s;","lastModifiedDate":"2021-10-04"},{"lineNumber":10,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":11,"author":{"gitId":"antrikshv"},"content":"}","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"antrikshv":11}},{"path":"src/main/java/seedu/duke/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"antrikshv"},"content":"package seedu.duke.commands;","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"crabnuggets"},"content":"import seedu.duke.Ui;","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"alwinangys"},"content":"import seedu.duke.exceptions.DukeException;","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"alwinangys"},"content":"import seedu.duke.items.characteristics.Member;","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"alwinangys"},"content":"import seedu.duke.parser.Parser;","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"alwinangys"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"alwinangys"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"alwinangys"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"crabnuggets"},"content":"import static seedu.duke.Duke.eventCatalog;","lastModifiedDate":"2021-10-17"},{"lineNumber":13,"author":{"gitId":"alwinangys"},"content":"import static seedu.duke.Duke.memberRoster;","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"antrikshv"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2021-10-04"},{"lineNumber":17,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":18,"author":{"gitId":"alwinangys"},"content":"    protected static final String EVENT_FLAG \u003d \"-e\";","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"alwinangys"},"content":"    protected static final String TASK_FLAG \u003d \"-t\";","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"alwinangys"},"content":"    protected static final String MEMBER_FLAG \u003d \"-m\";","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"alwinangys"},"content":"    protected static final String DELETE_ALL_FLAG \u003d \"all\";","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"alwinangys"},"content":"    // input from user","lastModifiedDate":"2021-10-06"},{"lineNumber":24,"author":{"gitId":"alwinangys"},"content":"    private String itemFlag;","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"alwinangys"},"content":"    private int eventIndexToDelete;","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"alwinangys"},"content":"    private int taskIndexToDelete;","lastModifiedDate":"2021-10-26"},{"lineNumber":27,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"alwinangys"},"content":"    private boolean isDeleteAll;","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"alwinangys"},"content":"    private boolean isCorrectFormat;","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"alwinangys"},"content":"    private static int indexOfMemberToDelete \u003d -1;","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":32,"author":{"gitId":"alwinangys"},"content":"    // create logger","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"alwinangys"},"content":"    private static final Logger logger \u003d Logger.getLogger(\"Logger\");","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"alwinangys"},"content":"    // v2.0: deleteCommand deletes purely based on index, i.e. delete -t/-e [TASK_INDEX]","lastModifiedDate":"2021-10-19"},{"lineNumber":37,"author":{"gitId":"alwinangys"},"content":"    public DeleteCommand(String[] command) {","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"alwinangys"},"content":"        isCorrectFormat \u003d true;","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"alwinangys"},"content":"        isDeleteAll \u003d false;","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"alwinangys"},"content":"        logger.setLevel(Level.SEVERE);","lastModifiedDate":"2021-10-26"},{"lineNumber":42,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":43,"author":{"gitId":"alwinangys"},"content":"        try {","lastModifiedDate":"2021-10-19"},{"lineNumber":44,"author":{"gitId":"alwinangys"},"content":"            logger.log(Level.INFO, \"going to start processing\");","lastModifiedDate":"2021-10-21"},{"lineNumber":45,"author":{"gitId":"alwinangys"},"content":"            if (command.length \u003d\u003d 1) {","lastModifiedDate":"2021-10-21"},{"lineNumber":46,"author":{"gitId":"alwinangys"},"content":"                throw new DukeException(\"Please specify what you wish to delete.\");","lastModifiedDate":"2021-10-21"},{"lineNumber":47,"author":{"gitId":"alwinangys"},"content":"            }","lastModifiedDate":"2021-10-19"},{"lineNumber":48,"author":{"gitId":"alwinangys"},"content":"            itemFlag \u003d command[1].trim();","lastModifiedDate":"2021-10-21"},{"lineNumber":49,"author":{"gitId":"alwinangys"},"content":"            if (isDeleteAllFlag(itemFlag)) {","lastModifiedDate":"2021-10-21"},{"lineNumber":50,"author":{"gitId":"alwinangys"},"content":"                isDeleteAll \u003d true;","lastModifiedDate":"2021-10-21"},{"lineNumber":51,"author":{"gitId":"alwinangys"},"content":"            } else if (isValidFlag(itemFlag)) {","lastModifiedDate":"2021-10-26"},{"lineNumber":52,"author":{"gitId":"alwinangys"},"content":"                prepareInputs(command);","lastModifiedDate":"2021-10-19"},{"lineNumber":53,"author":{"gitId":"alwinangys"},"content":"            } else {","lastModifiedDate":"2021-10-21"},{"lineNumber":54,"author":{"gitId":"alwinangys"},"content":"                logger.log(Level.WARNING, \"processing error\");","lastModifiedDate":"2021-10-21"},{"lineNumber":55,"author":{"gitId":"alwinangys"},"content":"                throw new DukeException(\"Invalid item flag entered. Please specify event \u0027-e\u0027 \"","lastModifiedDate":"2021-10-21"},{"lineNumber":56,"author":{"gitId":"alwinangys"},"content":"                        + \"or task \u0027-t\u0027.\");","lastModifiedDate":"2021-10-21"},{"lineNumber":57,"author":{"gitId":"alwinangys"},"content":"            }","lastModifiedDate":"2021-10-21"},{"lineNumber":58,"author":{"gitId":"alwinangys"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-10-19"},{"lineNumber":59,"author":{"gitId":"alwinangys"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2021-10-19"},{"lineNumber":60,"author":{"gitId":"alwinangys"},"content":"            isCorrectFormat \u003d false;","lastModifiedDate":"2021-10-21"},{"lineNumber":61,"author":{"gitId":"alwinangys"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-10-21"},{"lineNumber":62,"author":{"gitId":"alwinangys"},"content":"            System.out.println(\"Please enter a number for the item index!\");","lastModifiedDate":"2021-10-24"},{"lineNumber":63,"author":{"gitId":"alwinangys"},"content":"            isCorrectFormat \u003d false;","lastModifiedDate":"2021-10-21"},{"lineNumber":64,"author":{"gitId":"alwinangys"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2021-10-24"},{"lineNumber":65,"author":{"gitId":"alwinangys"},"content":"            System.out.println(\"No such item index exists!\");","lastModifiedDate":"2021-10-24"},{"lineNumber":66,"author":{"gitId":"alwinangys"},"content":"            isCorrectFormat \u003d false;","lastModifiedDate":"2021-10-26"},{"lineNumber":67,"author":{"gitId":"alwinangys"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":68,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":69,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":70,"author":{"gitId":"antrikshv"},"content":"    public CommandResult execute() {","lastModifiedDate":"2021-10-04"},{"lineNumber":71,"author":{"gitId":"alwinangys"},"content":"        if (isCorrectFormat) {","lastModifiedDate":"2021-10-21"},{"lineNumber":72,"author":{"gitId":"alwinangys"},"content":"            if (isDeleteAll) {","lastModifiedDate":"2021-10-21"},{"lineNumber":73,"author":{"gitId":"alwinangys"},"content":"                if (confirmDeleteAll()) {","lastModifiedDate":"2021-10-21"},{"lineNumber":74,"author":{"gitId":"alwinangys"},"content":"                    deleteAllEventsAndTasks();","lastModifiedDate":"2021-10-21"},{"lineNumber":75,"author":{"gitId":"alwinangys"},"content":"                    return new CommandResult(\"I have deleted everything!\");","lastModifiedDate":"2021-10-21"},{"lineNumber":76,"author":{"gitId":"alwinangys"},"content":"                } else {","lastModifiedDate":"2021-10-21"},{"lineNumber":77,"author":{"gitId":"alwinangys"},"content":"                    return new CommandResult(\"I will not delete anything!\");","lastModifiedDate":"2021-10-21"},{"lineNumber":78,"author":{"gitId":"alwinangys"},"content":"                }","lastModifiedDate":"2021-10-21"},{"lineNumber":79,"author":{"gitId":"alwinangys"},"content":"            }","lastModifiedDate":"2021-10-21"},{"lineNumber":80,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":81,"author":{"gitId":"alwinangys"},"content":"            String deletedItem;","lastModifiedDate":"2021-10-19"},{"lineNumber":82,"author":{"gitId":"alwinangys"},"content":"            if (isEventFlag(itemFlag)) {","lastModifiedDate":"2021-10-19"},{"lineNumber":83,"author":{"gitId":"alwinangys"},"content":"                assert eventIndexToDelete \u003c eventCatalog.size();","lastModifiedDate":"2021-10-26"},{"lineNumber":84,"author":{"gitId":"alwinangys"},"content":"                deletedItem \u003d deleteEvent(eventIndexToDelete);","lastModifiedDate":"2021-10-26"},{"lineNumber":85,"author":{"gitId":"alwinangys"},"content":"                Parser.updateIndexToNoEventSelected();","lastModifiedDate":"2021-10-25"},{"lineNumber":86,"author":{"gitId":"Alvinlj00"},"content":"                return new CommandResult(Ui.getEventDeletionMessage(deletedItem));","lastModifiedDate":"2021-10-22"},{"lineNumber":87,"author":{"gitId":"alwinangys"},"content":"            } else if (isTaskFlag(itemFlag)) {","lastModifiedDate":"2021-10-19"},{"lineNumber":88,"author":{"gitId":"alwinangys"},"content":"                assert eventIndexToDelete \u003c eventCatalog.size();","lastModifiedDate":"2021-10-26"},{"lineNumber":89,"author":{"gitId":"alwinangys"},"content":"                deletedItem \u003d deleteTask(taskIndexToDelete);","lastModifiedDate":"2021-10-26"},{"lineNumber":90,"author":{"gitId":"Alvinlj00"},"content":"                return new CommandResult(Ui.getTaskDeletionMessage(deletedItem));","lastModifiedDate":"2021-10-22"},{"lineNumber":91,"author":{"gitId":"alwinangys"},"content":"            } else if (isMemberFlag(itemFlag)) {","lastModifiedDate":"2021-10-26"},{"lineNumber":92,"author":{"gitId":"alwinangys"},"content":"                deletedItem \u003d deleteMember(indexOfMemberToDelete);","lastModifiedDate":"2021-10-26"},{"lineNumber":93,"author":{"gitId":"alwinangys"},"content":"                return new CommandResult(Ui.getMemberDeletionMessage(deletedItem));","lastModifiedDate":"2021-10-26"},{"lineNumber":94,"author":{"gitId":"alwinangys"},"content":"            }","lastModifiedDate":"2021-10-19"},{"lineNumber":95,"author":{"gitId":"alwinangys"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":96,"author":{"gitId":"alwinangys"},"content":"        return new CommandResult(\"Unable to delete item!\");","lastModifiedDate":"2021-10-21"},{"lineNumber":97,"author":{"gitId":"alwinangys"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":98,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":99,"author":{"gitId":"alwinangys"},"content":"    private void prepareInputs(String[] command) throws DukeException {","lastModifiedDate":"2021-10-21"},{"lineNumber":100,"author":{"gitId":"alwinangys"},"content":"        if (command.length \u003d\u003d 2) {","lastModifiedDate":"2021-10-21"},{"lineNumber":101,"author":{"gitId":"alwinangys"},"content":"            if (isMemberFlag(itemFlag)) {","lastModifiedDate":"2021-10-26"},{"lineNumber":102,"author":{"gitId":"alwinangys"},"content":"                throw new DukeException(\"Please give me the name of the member you wish to delete!\");","lastModifiedDate":"2021-10-26"},{"lineNumber":103,"author":{"gitId":"alwinangys"},"content":"            } else if (isEventFlag(itemFlag)) {","lastModifiedDate":"2021-10-26"},{"lineNumber":104,"author":{"gitId":"alwinangys"},"content":"                throw new DukeException(\"Please give me the index of the event you wish to delete!\");","lastModifiedDate":"2021-10-21"},{"lineNumber":105,"author":{"gitId":"alwinangys"},"content":"            } else if (isTaskFlag(itemFlag)) {","lastModifiedDate":"2021-10-26"},{"lineNumber":106,"author":{"gitId":"alwinangys"},"content":"                throw new DukeException(\"Please give me the index of the task you wish to delete!\");","lastModifiedDate":"2021-10-26"},{"lineNumber":107,"author":{"gitId":"alwinangys"},"content":"            } else {","lastModifiedDate":"2021-10-26"},{"lineNumber":108,"author":{"gitId":"alwinangys"},"content":"                throw new DukeException(\"Please enter a valid index!\");","lastModifiedDate":"2021-10-26"},{"lineNumber":109,"author":{"gitId":"alwinangys"},"content":"            }","lastModifiedDate":"2021-10-26"},{"lineNumber":110,"author":{"gitId":"alwinangys"},"content":"        } else if (isEventFlag(itemFlag)) {","lastModifiedDate":"2021-10-26"},{"lineNumber":111,"author":{"gitId":"alwinangys"},"content":"            eventIndexToDelete \u003d getIndex(command[2]);","lastModifiedDate":"2021-10-26"},{"lineNumber":112,"author":{"gitId":"alwinangys"},"content":"            Parser.updateIndexOfLastSelectedEvent(eventIndexToDelete);","lastModifiedDate":"2021-10-26"},{"lineNumber":113,"author":{"gitId":"alwinangys"},"content":"        } else if (isTaskFlag(itemFlag)) {","lastModifiedDate":"2021-10-26"},{"lineNumber":114,"author":{"gitId":"alwinangys"},"content":"            if (Parser.noEventSelected()) {","lastModifiedDate":"2021-10-26"},{"lineNumber":115,"author":{"gitId":"alwinangys"},"content":"                throw new DukeException(\"Select an event first!\");","lastModifiedDate":"2021-10-26"},{"lineNumber":116,"author":{"gitId":"alwinangys"},"content":"            }","lastModifiedDate":"2021-10-26"},{"lineNumber":117,"author":{"gitId":"alwinangys"},"content":"            taskIndexToDelete \u003d getIndex(command[2]);","lastModifiedDate":"2021-10-26"},{"lineNumber":118,"author":{"gitId":"alwinangys"},"content":"        } else if (isMemberFlag(itemFlag)) {","lastModifiedDate":"2021-10-26"},{"lineNumber":119,"author":{"gitId":"alwinangys"},"content":"            indexOfMemberToDelete \u003d getMemberIndex(command[2]);","lastModifiedDate":"2021-10-26"},{"lineNumber":120,"author":{"gitId":"alwinangys"},"content":"            if (!memberExists()) {","lastModifiedDate":"2021-10-26"},{"lineNumber":121,"author":{"gitId":"alwinangys"},"content":"                throw new DukeException(\"No such member found!\");","lastModifiedDate":"2021-10-26"},{"lineNumber":122,"author":{"gitId":"alwinangys"},"content":"            }","lastModifiedDate":"2021-10-26"},{"lineNumber":123,"author":{"gitId":"alwinangys"},"content":"        } else {","lastModifiedDate":"2021-10-21"},{"lineNumber":124,"author":{"gitId":"alwinangys"},"content":"            throw new DukeException(\"Invalid item index!\");","lastModifiedDate":"2021-10-21"},{"lineNumber":125,"author":{"gitId":"alwinangys"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":126,"author":{"gitId":"alwinangys"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":127,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":128,"author":{"gitId":"alwinangys"},"content":"    private static String deleteEvent(int index) {","lastModifiedDate":"2021-10-21"},{"lineNumber":129,"author":{"gitId":"alwinangys"},"content":"        String eventTitle \u003d eventCatalog.get(index).getTitle();","lastModifiedDate":"2021-10-19"},{"lineNumber":130,"author":{"gitId":"alwinangys"},"content":"        eventCatalog.remove(index);","lastModifiedDate":"2021-10-19"},{"lineNumber":131,"author":{"gitId":"alwinangys"},"content":"        return eventTitle;","lastModifiedDate":"2021-10-19"},{"lineNumber":132,"author":{"gitId":"alwinangys"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":133,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":134,"author":{"gitId":"alwinangys"},"content":"    private static String deleteTask(int index) {","lastModifiedDate":"2021-10-21"},{"lineNumber":135,"author":{"gitId":"alwinangys"},"content":"        int lastEventIndex \u003d Parser.getIndexOfLastSelectedEvent();","lastModifiedDate":"2021-10-26"},{"lineNumber":136,"author":{"gitId":"alwinangys"},"content":"        String taskTitle \u003d eventCatalog.get(lastEventIndex).getTaskList().get(index).getTitle();","lastModifiedDate":"2021-10-26"},{"lineNumber":137,"author":{"gitId":"alwinangys"},"content":"        eventCatalog.get(lastEventIndex).getTaskList().remove(index);","lastModifiedDate":"2021-10-26"},{"lineNumber":138,"author":{"gitId":"alwinangys"},"content":"        return taskTitle;","lastModifiedDate":"2021-10-06"},{"lineNumber":139,"author":{"gitId":"alwinangys"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":140,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":141,"author":{"gitId":"alwinangys"},"content":"    private static String deleteMember(int index) {","lastModifiedDate":"2021-10-26"},{"lineNumber":142,"author":{"gitId":"alwinangys"},"content":"        String memberName \u003d memberRoster.get(index).getName();","lastModifiedDate":"2021-10-26"},{"lineNumber":143,"author":{"gitId":"alwinangys"},"content":"        memberRoster.remove(index);","lastModifiedDate":"2021-10-26"},{"lineNumber":144,"author":{"gitId":"alwinangys"},"content":"        return memberName;","lastModifiedDate":"2021-10-26"},{"lineNumber":145,"author":{"gitId":"alwinangys"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":146,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":147,"author":{"gitId":"alwinangys"},"content":"    private static void deleteAllEventsAndTasks() {","lastModifiedDate":"2021-10-21"},{"lineNumber":148,"author":{"gitId":"alwinangys"},"content":"        eventCatalog.clear();","lastModifiedDate":"2021-10-21"},{"lineNumber":149,"author":{"gitId":"alwinangys"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":150,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":151,"author":{"gitId":"alwinangys"},"content":"    private static int getIndex(String indexAsString) {","lastModifiedDate":"2021-10-21"},{"lineNumber":152,"author":{"gitId":"alwinangys"},"content":"        return Integer.parseInt(indexAsString.trim()) - 1;","lastModifiedDate":"2021-10-21"},{"lineNumber":153,"author":{"gitId":"alwinangys"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":154,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":155,"author":{"gitId":"alwinangys"},"content":"    private static boolean isEventFlag(String flag) {","lastModifiedDate":"2021-10-21"},{"lineNumber":156,"author":{"gitId":"alwinangys"},"content":"        return flag.trim().equalsIgnoreCase(EVENT_FLAG);","lastModifiedDate":"2021-10-19"},{"lineNumber":157,"author":{"gitId":"alwinangys"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":158,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":159,"author":{"gitId":"alwinangys"},"content":"    private static boolean isTaskFlag(String flag) {","lastModifiedDate":"2021-10-21"},{"lineNumber":160,"author":{"gitId":"alwinangys"},"content":"        return flag.trim().equalsIgnoreCase(TASK_FLAG);","lastModifiedDate":"2021-10-19"},{"lineNumber":161,"author":{"gitId":"alwinangys"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":162,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":163,"author":{"gitId":"alwinangys"},"content":"    private static boolean isMemberFlag(String flag) {","lastModifiedDate":"2021-10-26"},{"lineNumber":164,"author":{"gitId":"alwinangys"},"content":"        return flag.trim().equalsIgnoreCase(MEMBER_FLAG);","lastModifiedDate":"2021-10-26"},{"lineNumber":165,"author":{"gitId":"alwinangys"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":166,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":167,"author":{"gitId":"alwinangys"},"content":"    private static boolean isValidFlag(String flag) {","lastModifiedDate":"2021-10-26"},{"lineNumber":168,"author":{"gitId":"alwinangys"},"content":"        return isEventFlag(flag) || isTaskFlag(flag) || isMemberFlag(flag);","lastModifiedDate":"2021-10-26"},{"lineNumber":169,"author":{"gitId":"alwinangys"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":170,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":171,"author":{"gitId":"alwinangys"},"content":"    private static boolean isDeleteAllFlag(String flag) {","lastModifiedDate":"2021-10-21"},{"lineNumber":172,"author":{"gitId":"alwinangys"},"content":"        return flag.trim().equalsIgnoreCase(DELETE_ALL_FLAG);","lastModifiedDate":"2021-10-21"},{"lineNumber":173,"author":{"gitId":"alwinangys"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":174,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":175,"author":{"gitId":"alwinangys"},"content":"    private static boolean confirmDeleteAll() {","lastModifiedDate":"2021-10-21"},{"lineNumber":176,"author":{"gitId":"alwinangys"},"content":"        System.out.println(\"Are you sure you want to delete all events? (Y/N)\");","lastModifiedDate":"2021-10-21"},{"lineNumber":177,"author":{"gitId":"alwinangys"},"content":"        String userInput;","lastModifiedDate":"2021-10-21"},{"lineNumber":178,"author":{"gitId":"alwinangys"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2021-10-21"},{"lineNumber":179,"author":{"gitId":"alwinangys"},"content":"        userInput \u003d in.nextLine();","lastModifiedDate":"2021-10-21"},{"lineNumber":180,"author":{"gitId":"alwinangys"},"content":"        return userInput.trim().equalsIgnoreCase(\"y\");","lastModifiedDate":"2021-10-21"},{"lineNumber":181,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":182,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":183,"author":{"gitId":"alwinangys"},"content":"    public static int getMemberIndex(String name) {","lastModifiedDate":"2021-10-26"},{"lineNumber":184,"author":{"gitId":"alwinangys"},"content":"        for (int i \u003d 0; i \u003c memberRoster.size(); i++) {","lastModifiedDate":"2021-10-26"},{"lineNumber":185,"author":{"gitId":"alwinangys"},"content":"            Member member \u003d memberRoster.get(i);","lastModifiedDate":"2021-10-26"},{"lineNumber":186,"author":{"gitId":"alwinangys"},"content":"            if (member.getName().equalsIgnoreCase(name)) {","lastModifiedDate":"2021-10-26"},{"lineNumber":187,"author":{"gitId":"alwinangys"},"content":"                return i;","lastModifiedDate":"2021-10-26"},{"lineNumber":188,"author":{"gitId":"alwinangys"},"content":"            }","lastModifiedDate":"2021-10-26"},{"lineNumber":189,"author":{"gitId":"alwinangys"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":190,"author":{"gitId":"alwinangys"},"content":"        return -1;","lastModifiedDate":"2021-10-26"},{"lineNumber":191,"author":{"gitId":"alwinangys"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":192,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":193,"author":{"gitId":"alwinangys"},"content":"    public static boolean memberExists() {","lastModifiedDate":"2021-10-26"},{"lineNumber":194,"author":{"gitId":"alwinangys"},"content":"        return indexOfMemberToDelete !\u003d -1;","lastModifiedDate":"2021-10-26"},{"lineNumber":195,"author":{"gitId":"alwinangys"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":196,"author":{"gitId":"antrikshv"},"content":"}","lastModifiedDate":"2021-10-04"},{"lineNumber":197,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"antrikshv":9,"Alvinlj00":2,"crabnuggets":2,"alwinangys":184}},{"path":"src/main/java/seedu/duke/commands/DoneUndoCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Alvinlj00"},"content":"package seedu.duke.commands;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"Alvinlj00"},"content":"import seedu.duke.Duke;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"crabnuggets"},"content":"import seedu.duke.parser.Parser;","lastModifiedDate":"2021-10-23"},{"lineNumber":5,"author":{"gitId":"Alvinlj00"},"content":"import seedu.duke.exceptions.DukeException;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"Alvinlj00"},"content":"import seedu.duke.items.mainlists.EventCatalog;","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"Alvinlj00"},"content":"import seedu.duke.items.Item;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"Alvinlj00"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"Alvinlj00"},"content":"public class DoneUndoCommand extends Command {","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"Alvinlj00"},"content":"    protected static final String TASK_FLAG \u003d \"-t\";","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"Alvinlj00"},"content":"    protected static final String EVENT_FLAG \u003d \"-e\";","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"Alvinlj00"},"content":"    protected static final String DONE \u003d \"done\";","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"Alvinlj00"},"content":"    protected static final String UNDO \u003d \"undo\";","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"Alvinlj00"},"content":"    protected static String action;","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"Alvinlj00"},"content":"    protected static String itemType;","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"Alvinlj00"},"content":"    protected static int[] indexes;","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"Alvinlj00"},"content":"    // Indicates if an error occurs due to the wrong format typed by the user","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"Alvinlj00"},"content":"    protected static boolean isCorrectFormat;","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"Alvinlj00"},"content":"    public DoneUndoCommand(String[] command, String response) {","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"Alvinlj00"},"content":"        isCorrectFormat \u003d true;","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"Alvinlj00"},"content":"        try {","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"Alvinlj00"},"content":"            if (command.length \u003d\u003d 1) {","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"Alvinlj00"},"content":"                throw new DukeException(\"Please specify the indexes of the items you want to mark done or undo \"","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"Alvinlj00"},"content":"                        + \"using the event \u0027-e\u0027 or task \u0027-t\u0027 flags. \");","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"Alvinlj00"},"content":"            }","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"Alvinlj00"},"content":"            action \u003d command[0];","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"Alvinlj00"},"content":"            itemType \u003d command[1];","lastModifiedDate":"2021-10-26"},{"lineNumber":34,"author":{"gitId":"Alvinlj00"},"content":"            if (!(itemType.equalsIgnoreCase(TASK_FLAG) || itemType.equalsIgnoreCase(EVENT_FLAG))) {","lastModifiedDate":"2021-10-26"},{"lineNumber":35,"author":{"gitId":"Alvinlj00"},"content":"                throw new DukeException(\"Please specify the type of items you want to mark done or undo \"","lastModifiedDate":"2021-10-26"},{"lineNumber":36,"author":{"gitId":"Alvinlj00"},"content":"                        + \"using the event \u0027-e\u0027 or task \u0027-t\u0027 flags. \");","lastModifiedDate":"2021-10-26"},{"lineNumber":37,"author":{"gitId":"Alvinlj00"},"content":"            }","lastModifiedDate":"2021-10-26"},{"lineNumber":38,"author":{"gitId":"Alvinlj00"},"content":"            if (command.length \u003d\u003d 2) {","lastModifiedDate":"2021-10-11"},{"lineNumber":39,"author":{"gitId":"Alvinlj00"},"content":"                throw new DukeException(\"Please specify the indexes of the tasks or events you want \"","lastModifiedDate":"2021-10-26"},{"lineNumber":40,"author":{"gitId":"Alvinlj00"},"content":"                        + \"to mark done or undo. \");","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"Alvinlj00"},"content":"            }","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"Alvinlj00"},"content":"            extractInt(response);","lastModifiedDate":"2021-10-26"},{"lineNumber":43,"author":{"gitId":"Alvinlj00"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-10-11"},{"lineNumber":44,"author":{"gitId":"Alvinlj00"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2021-10-11"},{"lineNumber":45,"author":{"gitId":"Alvinlj00"},"content":"            isCorrectFormat \u003d false;","lastModifiedDate":"2021-10-11"},{"lineNumber":46,"author":{"gitId":"Alvinlj00"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":47,"author":{"gitId":"Alvinlj00"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":48,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":49,"author":{"gitId":"Alvinlj00"},"content":"    private static void extractInt(String input) throws DukeException {","lastModifiedDate":"2021-10-26"},{"lineNumber":50,"author":{"gitId":"Alvinlj00"},"content":"        String parsedInput \u003d input.replaceAll(\"[^\\\\d]\", \" \").trim();","lastModifiedDate":"2021-10-26"},{"lineNumber":51,"author":{"gitId":"Alvinlj00"},"content":"        if (parsedInput.isBlank()) {","lastModifiedDate":"2021-10-26"},{"lineNumber":52,"author":{"gitId":"Alvinlj00"},"content":"            throw new DukeException(\"Indexes entered need to be valid numbers. \");","lastModifiedDate":"2021-10-26"},{"lineNumber":53,"author":{"gitId":"Alvinlj00"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":54,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":55,"author":{"gitId":"Alvinlj00"},"content":"        String[] stringIndexes \u003d parsedInput.split(\" +\");","lastModifiedDate":"2021-10-26"},{"lineNumber":56,"author":{"gitId":"Alvinlj00"},"content":"        indexes \u003d new int[stringIndexes.length];","lastModifiedDate":"2021-10-26"},{"lineNumber":57,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":58,"author":{"gitId":"Alvinlj00"},"content":"        for (int i \u003d 0; i \u003c stringIndexes.length; i++) {","lastModifiedDate":"2021-10-26"},{"lineNumber":59,"author":{"gitId":"Alvinlj00"},"content":"            indexes[i] \u003d Integer.parseInt(stringIndexes[i]);","lastModifiedDate":"2021-10-26"},{"lineNumber":60,"author":{"gitId":"Alvinlj00"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":61,"author":{"gitId":"Alvinlj00"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":62,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":63,"author":{"gitId":"Alvinlj00"},"content":"    private String done() throws DukeException {","lastModifiedDate":"2021-10-11"},{"lineNumber":64,"author":{"gitId":"Alvinlj00"},"content":"        try {","lastModifiedDate":"2021-10-11"},{"lineNumber":65,"author":{"gitId":"Alvinlj00"},"content":"            StringBuilder listOfItems \u003d new StringBuilder();","lastModifiedDate":"2021-10-11"},{"lineNumber":66,"author":{"gitId":"Alvinlj00"},"content":"            if (itemType.equalsIgnoreCase(TASK_FLAG)) {","lastModifiedDate":"2021-10-26"},{"lineNumber":67,"author":{"gitId":"Alvinlj00"},"content":"                if (Parser.noEventSelected()) {","lastModifiedDate":"2021-10-26"},{"lineNumber":68,"author":{"gitId":"Alvinlj00"},"content":"                    throw new DukeException(\"Please select which event the task is under using the \"","lastModifiedDate":"2021-10-26"},{"lineNumber":69,"author":{"gitId":"Alvinlj00"},"content":"                            + \"\u0027select\u0027 command. \");","lastModifiedDate":"2021-10-26"},{"lineNumber":70,"author":{"gitId":"Alvinlj00"},"content":"                }","lastModifiedDate":"2021-10-26"},{"lineNumber":71,"author":{"gitId":"Alvinlj00"},"content":"                for (int index : indexes) {","lastModifiedDate":"2021-10-26"},{"lineNumber":72,"author":{"gitId":"Alvinlj00"},"content":"                    Duke.eventCatalog.get(Parser.getIndexOfLastSelectedEvent())","lastModifiedDate":"2021-10-26"},{"lineNumber":73,"author":{"gitId":"Alvinlj00"},"content":"                            .getFromTaskList(index - 1).markAsDone();","lastModifiedDate":"2021-10-26"},{"lineNumber":74,"author":{"gitId":"Alvinlj00"},"content":"                    listOfItems.append(Duke.eventCatalog.get(Parser.getIndexOfLastSelectedEvent())","lastModifiedDate":"2021-10-26"},{"lineNumber":75,"author":{"gitId":"Alvinlj00"},"content":"                            .getFromTaskList(index - 1)).append(\"\\n\");","lastModifiedDate":"2021-10-26"},{"lineNumber":76,"author":{"gitId":"Alvinlj00"},"content":"                }","lastModifiedDate":"2021-10-26"},{"lineNumber":77,"author":{"gitId":"Alvinlj00"},"content":"            }","lastModifiedDate":"2021-10-26"},{"lineNumber":78,"author":{"gitId":"Alvinlj00"},"content":"            if (itemType.equalsIgnoreCase(EVENT_FLAG)) {","lastModifiedDate":"2021-10-26"},{"lineNumber":79,"author":{"gitId":"Alvinlj00"},"content":"                for (int index : indexes) {","lastModifiedDate":"2021-10-26"},{"lineNumber":80,"author":{"gitId":"Alvinlj00"},"content":"                    Duke.eventCatalog.get(index - 1).markAsDone();","lastModifiedDate":"2021-10-26"},{"lineNumber":81,"author":{"gitId":"Alvinlj00"},"content":"                    listOfItems.append(Duke.eventCatalog.get(index - 1)).append(\"\\n\");","lastModifiedDate":"2021-10-26"},{"lineNumber":82,"author":{"gitId":"Alvinlj00"},"content":"                }","lastModifiedDate":"2021-10-26"},{"lineNumber":83,"author":{"gitId":"Alvinlj00"},"content":"            }","lastModifiedDate":"2021-10-11"},{"lineNumber":84,"author":{"gitId":"Alvinlj00"},"content":"            return listOfItems.toString();","lastModifiedDate":"2021-10-11"},{"lineNumber":85,"author":{"gitId":"Alvinlj00"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-10-11"},{"lineNumber":86,"author":{"gitId":"Alvinlj00"},"content":"            throw new DukeException(\"One or more of the items do not exist. \");","lastModifiedDate":"2021-10-11"},{"lineNumber":87,"author":{"gitId":"Alvinlj00"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":88,"author":{"gitId":"Alvinlj00"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":89,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":90,"author":{"gitId":"Alvinlj00"},"content":"    private String undo() throws DukeException {","lastModifiedDate":"2021-10-11"},{"lineNumber":91,"author":{"gitId":"Alvinlj00"},"content":"        try {","lastModifiedDate":"2021-10-11"},{"lineNumber":92,"author":{"gitId":"Alvinlj00"},"content":"            StringBuilder listOfItems \u003d new StringBuilder();","lastModifiedDate":"2021-10-11"},{"lineNumber":93,"author":{"gitId":"Alvinlj00"},"content":"            if (itemType.equalsIgnoreCase(TASK_FLAG)) {","lastModifiedDate":"2021-10-26"},{"lineNumber":94,"author":{"gitId":"Alvinlj00"},"content":"                if (Parser.noEventSelected()) {","lastModifiedDate":"2021-10-26"},{"lineNumber":95,"author":{"gitId":"Alvinlj00"},"content":"                    throw new DukeException(\"Please select which event the task is under using the \"","lastModifiedDate":"2021-10-26"},{"lineNumber":96,"author":{"gitId":"Alvinlj00"},"content":"                            + \"\u0027select\u0027 command. \");","lastModifiedDate":"2021-10-26"},{"lineNumber":97,"author":{"gitId":"Alvinlj00"},"content":"                }","lastModifiedDate":"2021-10-26"},{"lineNumber":98,"author":{"gitId":"Alvinlj00"},"content":"                for (int index : indexes) {","lastModifiedDate":"2021-10-26"},{"lineNumber":99,"author":{"gitId":"Alvinlj00"},"content":"                    Duke.eventCatalog.get(Parser.getIndexOfLastSelectedEvent())","lastModifiedDate":"2021-10-26"},{"lineNumber":100,"author":{"gitId":"Alvinlj00"},"content":"                            .getFromTaskList(index - 1).undo();","lastModifiedDate":"2021-10-26"},{"lineNumber":101,"author":{"gitId":"Alvinlj00"},"content":"                    listOfItems.append(Duke.eventCatalog.get(Parser.getIndexOfLastSelectedEvent())","lastModifiedDate":"2021-10-26"},{"lineNumber":102,"author":{"gitId":"Alvinlj00"},"content":"                            .getFromTaskList(index - 1)).append(\"\\n\");","lastModifiedDate":"2021-10-26"},{"lineNumber":103,"author":{"gitId":"Alvinlj00"},"content":"                }","lastModifiedDate":"2021-10-26"},{"lineNumber":104,"author":{"gitId":"Alvinlj00"},"content":"            }","lastModifiedDate":"2021-10-26"},{"lineNumber":105,"author":{"gitId":"Alvinlj00"},"content":"            if (itemType.equalsIgnoreCase(EVENT_FLAG)) {","lastModifiedDate":"2021-10-26"},{"lineNumber":106,"author":{"gitId":"Alvinlj00"},"content":"                for (int index : indexes) {","lastModifiedDate":"2021-10-26"},{"lineNumber":107,"author":{"gitId":"Alvinlj00"},"content":"                    Duke.eventCatalog.get(index - 1).undo();","lastModifiedDate":"2021-10-26"},{"lineNumber":108,"author":{"gitId":"Alvinlj00"},"content":"                    listOfItems.append(Duke.eventCatalog.get(index - 1)).append(\"\\n\");","lastModifiedDate":"2021-10-26"},{"lineNumber":109,"author":{"gitId":"Alvinlj00"},"content":"                }","lastModifiedDate":"2021-10-26"},{"lineNumber":110,"author":{"gitId":"Alvinlj00"},"content":"            }","lastModifiedDate":"2021-10-11"},{"lineNumber":111,"author":{"gitId":"Alvinlj00"},"content":"            return listOfItems.toString();","lastModifiedDate":"2021-10-11"},{"lineNumber":112,"author":{"gitId":"Alvinlj00"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-10-11"},{"lineNumber":113,"author":{"gitId":"Alvinlj00"},"content":"            throw new DukeException(\"One or more of the items do not exist. \");","lastModifiedDate":"2021-10-11"},{"lineNumber":114,"author":{"gitId":"Alvinlj00"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":115,"author":{"gitId":"Alvinlj00"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":116,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":117,"author":{"gitId":"Alvinlj00"},"content":"    public CommandResult execute() {","lastModifiedDate":"2021-10-11"},{"lineNumber":118,"author":{"gitId":"Alvinlj00"},"content":"        if (!isCorrectFormat) {","lastModifiedDate":"2021-10-11"},{"lineNumber":119,"author":{"gitId":"Alvinlj00"},"content":"            return new CommandResult(\"Unable to mark as done or undo items. \");","lastModifiedDate":"2021-10-11"},{"lineNumber":120,"author":{"gitId":"Alvinlj00"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":121,"author":{"gitId":"Alvinlj00"},"content":"        try {","lastModifiedDate":"2021-10-11"},{"lineNumber":122,"author":{"gitId":"Alvinlj00"},"content":"            if (action.equalsIgnoreCase(DONE)) {","lastModifiedDate":"2021-10-11"},{"lineNumber":123,"author":{"gitId":"Alvinlj00"},"content":"                String listOfItems \u003d done();","lastModifiedDate":"2021-10-11"},{"lineNumber":124,"author":{"gitId":"Alvinlj00"},"content":"                System.out.print(\"Nice! I have marked these items as done: \\n\" + listOfItems);","lastModifiedDate":"2021-10-11"},{"lineNumber":125,"author":{"gitId":"Alvinlj00"},"content":"            } else if (action.equalsIgnoreCase(UNDO)) {","lastModifiedDate":"2021-10-11"},{"lineNumber":126,"author":{"gitId":"Alvinlj00"},"content":"                String listOfItems \u003d undo();","lastModifiedDate":"2021-10-11"},{"lineNumber":127,"author":{"gitId":"Alvinlj00"},"content":"                System.out.print(\"Okay, I have unmarked these items: \\n\" + listOfItems);","lastModifiedDate":"2021-10-11"},{"lineNumber":128,"author":{"gitId":"Alvinlj00"},"content":"            }","lastModifiedDate":"2021-10-11"},{"lineNumber":129,"author":{"gitId":"Alvinlj00"},"content":"            return new CommandResult(\"--------LIST UPDATED-----------\");","lastModifiedDate":"2021-10-11"},{"lineNumber":130,"author":{"gitId":"Alvinlj00"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-10-11"},{"lineNumber":131,"author":{"gitId":"Alvinlj00"},"content":"            return new CommandResult(e.getMessage() + \"Unable to mark as done or undo items. \");","lastModifiedDate":"2021-10-11"},{"lineNumber":132,"author":{"gitId":"Alvinlj00"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":133,"author":{"gitId":"Alvinlj00"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":134,"author":{"gitId":"Alvinlj00"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"Alvinlj00":133,"crabnuggets":1}},{"path":"src/main/java/seedu/duke/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"alwinangys"},"content":"package seedu.duke.commands;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"alwinangys"},"content":"import seedu.duke.Duke;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"alwinangys"},"content":"import seedu.duke.exceptions.DukeException;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"alwinangys"},"content":"import seedu.duke.items.Event;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"alwinangys"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"alwinangys"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"alwinangys"},"content":"    private static final int MAX_SIZE \u003d Duke.eventCatalog.size();","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"alwinangys"},"content":"    private static String keyword;","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"alwinangys"},"content":"    private static Event[] filteredList \u003d new Event[MAX_SIZE];","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"alwinangys"},"content":"    //private static ArrayList\u003cEvent\u003e filteredList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"alwinangys"},"content":"    private static int numberOfEvents;","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"alwinangys"},"content":"    public FindCommand(String[] command) {","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"alwinangys"},"content":"        try {","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"alwinangys"},"content":"            if (command.length \u003d\u003d 1) {","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"alwinangys"},"content":"                throw new DukeException(\"Please specify what Events you wish to find.\");","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"alwinangys"},"content":"            }","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"alwinangys"},"content":"            keyword \u003d getKeywordFromCommand(command);","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"alwinangys"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"alwinangys"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"alwinangys"},"content":"        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"alwinangys"},"content":"            System.out.println(\"Please enter at least one keyword!\");","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"alwinangys"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"alwinangys"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"alwinangys"},"content":"    public CommandResult execute() {","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"alwinangys"},"content":"        filterEventsByString(keyword);","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"alwinangys"},"content":"        System.out.println(\"Here are the events you wished to find:\");","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"alwinangys"},"content":"        printFilteredEvents();","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"alwinangys"},"content":"        if (numberOfEvents \u003d\u003d 0) {","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"alwinangys"},"content":"            return new CommandResult(\"No matching events were found.\");","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"alwinangys"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"alwinangys"},"content":"        return new CommandResult(numberOfEvents + \" events found.\");","lastModifiedDate":"2021-10-24"},{"lineNumber":39,"author":{"gitId":"alwinangys"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":40,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"alwinangys"},"content":"    private static String convertArrayToString(String[] command) {","lastModifiedDate":"2021-10-24"},{"lineNumber":42,"author":{"gitId":"alwinangys"},"content":"        return Arrays.toString(command);","lastModifiedDate":"2021-10-24"},{"lineNumber":43,"author":{"gitId":"alwinangys"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":45,"author":{"gitId":"alwinangys"},"content":"    private static String getKeywordFromCommand(String[] command) {","lastModifiedDate":"2021-10-24"},{"lineNumber":46,"author":{"gitId":"alwinangys"},"content":"        String commandAsString \u003d convertArrayToString(command);","lastModifiedDate":"2021-10-24"},{"lineNumber":47,"author":{"gitId":"alwinangys"},"content":"        int endIndex \u003d commandAsString.length();","lastModifiedDate":"2021-10-24"},{"lineNumber":48,"author":{"gitId":"alwinangys"},"content":"        int startOfKeyword \u003d commandAsString.trim().indexOf(\" \") + 1;","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"alwinangys"},"content":"        return commandAsString.substring(startOfKeyword, endIndex - 1).trim();","lastModifiedDate":"2021-10-24"},{"lineNumber":50,"author":{"gitId":"alwinangys"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"alwinangys"},"content":"    private static void filterEventsByString(String keyword) {","lastModifiedDate":"2021-10-24"},{"lineNumber":53,"author":{"gitId":"alwinangys"},"content":"        for (int i \u003d 0; i \u003c Duke.eventCatalog.size(); i++) {","lastModifiedDate":"2021-10-24"},{"lineNumber":54,"author":{"gitId":"alwinangys"},"content":"            Event event \u003d Duke.eventCatalog.get(i);","lastModifiedDate":"2021-10-24"},{"lineNumber":55,"author":{"gitId":"alwinangys"},"content":"            if (event.getTitle().toLowerCase().contains(keyword.toLowerCase())) {","lastModifiedDate":"2021-10-24"},{"lineNumber":56,"author":{"gitId":"alwinangys"},"content":"                filteredList[i] \u003d event;","lastModifiedDate":"2021-10-24"},{"lineNumber":57,"author":{"gitId":"alwinangys"},"content":"            }","lastModifiedDate":"2021-10-24"},{"lineNumber":58,"author":{"gitId":"alwinangys"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":59,"author":{"gitId":"alwinangys"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"alwinangys"},"content":"    private static void printFilteredEvents() {","lastModifiedDate":"2021-10-24"},{"lineNumber":62,"author":{"gitId":"alwinangys"},"content":"        for (int i \u003d 0; i \u003c filteredList.length; i++) {","lastModifiedDate":"2021-10-24"},{"lineNumber":63,"author":{"gitId":"alwinangys"},"content":"            if (filteredList[i] \u003d\u003d null) {","lastModifiedDate":"2021-10-24"},{"lineNumber":64,"author":{"gitId":"alwinangys"},"content":"                continue;","lastModifiedDate":"2021-10-24"},{"lineNumber":65,"author":{"gitId":"alwinangys"},"content":"            }","lastModifiedDate":"2021-10-24"},{"lineNumber":66,"author":{"gitId":"alwinangys"},"content":"            System.out.println((i + 1) + \". \" + filteredList[i].getTitle());","lastModifiedDate":"2021-10-24"},{"lineNumber":67,"author":{"gitId":"alwinangys"},"content":"            numberOfEvents++;","lastModifiedDate":"2021-10-24"},{"lineNumber":68,"author":{"gitId":"alwinangys"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":69,"author":{"gitId":"alwinangys"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":70,"author":{"gitId":"alwinangys"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"alwinangys":70}},{"path":"src/main/java/seedu/duke/commands/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"antrikshv"},"content":"package seedu.duke.commands;","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"crabnuggets"},"content":"import seedu.duke.Ui;","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"antrikshv"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2021-10-04"},{"lineNumber":6,"author":{"gitId":"antrikshv"},"content":"    public HelpCommand() {","lastModifiedDate":"2021-10-04"},{"lineNumber":7,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":8,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":9,"author":{"gitId":"antrikshv"},"content":"    public CommandResult execute() {","lastModifiedDate":"2021-10-04"},{"lineNumber":10,"author":{"gitId":"crabnuggets"},"content":"        return new CommandResult(Ui.getHelpMessage());","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":12,"author":{"gitId":"antrikshv"},"content":"}","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"antrikshv":9,"crabnuggets":3}},{"path":"src/main/java/seedu/duke/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"antrikshv"},"content":"package seedu.duke.commands;","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"antrikshv"},"content":"import seedu.duke.exceptions.DukeException;","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"antrikshv"},"content":"import seedu.duke.items.Event;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"antrikshv"},"content":"import seedu.duke.items.Task;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"antrikshv"},"content":"import seedu.duke.Duke;","lastModifiedDate":"2021-10-04"},{"lineNumber":7,"author":{"gitId":"antrikshv"},"content":"import seedu.duke.Ui;","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":9,"author":{"gitId":"antrikshv"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":11,"author":{"gitId":"antrikshv"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2021-10-04"},{"lineNumber":12,"author":{"gitId":"antrikshv"},"content":"    protected String listType;","lastModifiedDate":"2021-10-04"},{"lineNumber":13,"author":{"gitId":"antrikshv"},"content":"    protected String[] userCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"antrikshv"},"content":"    protected ArrayList\u003cString\u003e checkCommand \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"antrikshv"},"content":"    protected String feedback \u003d \"--------END OF LIST-----------\";","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"antrikshv"},"content":"    public ListCommand(String[] command) {","lastModifiedDate":"2021-10-04"},{"lineNumber":18,"author":{"gitId":"antrikshv"},"content":"        checkForEmptyCells(command);","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"antrikshv"},"content":"        userCommand \u003d command;","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"antrikshv"},"content":"        if (checkCommand.size() \u003d\u003d 1) {","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"antrikshv"},"content":"            this.listType \u003d \"list\";","lastModifiedDate":"2021-10-04"},{"lineNumber":22,"author":{"gitId":"antrikshv"},"content":"        } else if (userCommand.length \u003e 2 \u0026\u0026 command[2].equalsIgnoreCase(\"-t\")) {","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"antrikshv"},"content":"            this.listType \u003d \"task\";","lastModifiedDate":"2021-10-04"},{"lineNumber":24,"author":{"gitId":"antrikshv"},"content":"        } else if (userCommand.length \u003e 2 \u0026\u0026 command[2].contains(\"t/\")) {","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"antrikshv"},"content":"            this.listType \u003d \"member\";","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"antrikshv"},"content":"        } else if (userCommand.length \u003e 1 \u0026\u0026 command[1].contains(\"-m\")) {","lastModifiedDate":"2021-10-26"},{"lineNumber":27,"author":{"gitId":"antrikshv"},"content":"            this.listType \u003d \"memberRoster\";","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"antrikshv"},"content":"        } else if (userCommand.length \u003e\u003d 2 \u0026\u0026 command[1].equalsIgnoreCase(\"-t\")) {","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"antrikshv"},"content":"            this.listType \u003d \"EventError\";","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"antrikshv"},"content":"        } else {","lastModifiedDate":"2021-10-04"},{"lineNumber":31,"author":{"gitId":"antrikshv"},"content":"            this.listType \u003d \"others\";","lastModifiedDate":"2021-10-04"},{"lineNumber":32,"author":{"gitId":"antrikshv"},"content":"        }","lastModifiedDate":"2021-10-04"},{"lineNumber":33,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":34,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":35,"author":{"gitId":"antrikshv"},"content":"    public CommandResult execute() {","lastModifiedDate":"2021-10-04"},{"lineNumber":36,"author":{"gitId":"antrikshv"},"content":"        try {","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"antrikshv"},"content":"            switch (listType) {","lastModifiedDate":"2021-10-04"},{"lineNumber":38,"author":{"gitId":"antrikshv"},"content":"            case \"list\":","lastModifiedDate":"2021-10-04"},{"lineNumber":39,"author":{"gitId":"antrikshv"},"content":"                listingOverallSchedule();","lastModifiedDate":"2021-10-25"},{"lineNumber":40,"author":{"gitId":"antrikshv"},"content":"                break;","lastModifiedDate":"2021-10-10"},{"lineNumber":41,"author":{"gitId":"antrikshv"},"content":"            case \"task\":","lastModifiedDate":"2021-10-04"},{"lineNumber":42,"author":{"gitId":"antrikshv"},"content":"                listingTaskDetails();","lastModifiedDate":"2021-10-25"},{"lineNumber":43,"author":{"gitId":"antrikshv"},"content":"                break;","lastModifiedDate":"2021-10-24"},{"lineNumber":44,"author":{"gitId":"antrikshv"},"content":"            case \"member\":","lastModifiedDate":"2021-10-24"},{"lineNumber":45,"author":{"gitId":"antrikshv"},"content":"                listingMemberDetails();","lastModifiedDate":"2021-10-25"},{"lineNumber":46,"author":{"gitId":"antrikshv"},"content":"                break;","lastModifiedDate":"2021-10-04"},{"lineNumber":47,"author":{"gitId":"antrikshv"},"content":"            case \"memberRoster\":","lastModifiedDate":"2021-10-26"},{"lineNumber":48,"author":{"gitId":"antrikshv"},"content":"                listingMemberRoster();","lastModifiedDate":"2021-10-26"},{"lineNumber":49,"author":{"gitId":"antrikshv"},"content":"                break;","lastModifiedDate":"2021-10-26"},{"lineNumber":50,"author":{"gitId":"antrikshv"},"content":"            case \"EventError\":","lastModifiedDate":"2021-10-26"},{"lineNumber":51,"author":{"gitId":"antrikshv"},"content":"                return new CommandResult(\"Please specify which event to view!\");","lastModifiedDate":"2021-10-26"},{"lineNumber":52,"author":{"gitId":"antrikshv"},"content":"            default:","lastModifiedDate":"2021-10-04"},{"lineNumber":53,"author":{"gitId":"antrikshv"},"content":"                return new CommandResult(\"please specify type for list \"","lastModifiedDate":"2021-10-04"},{"lineNumber":54,"author":{"gitId":"antrikshv"},"content":"                        + System.lineSeparator()","lastModifiedDate":"2021-10-26"},{"lineNumber":55,"author":{"gitId":"antrikshv"},"content":"                        + \"[list: to see overall schedule\"","lastModifiedDate":"2021-10-26"},{"lineNumber":56,"author":{"gitId":"antrikshv"},"content":"                        + System.lineSeparator()","lastModifiedDate":"2021-10-26"},{"lineNumber":57,"author":{"gitId":"antrikshv"},"content":"                        + \"list [EVENT_NUM] -t : to see tasks in an Event\"","lastModifiedDate":"2021-10-26"},{"lineNumber":58,"author":{"gitId":"antrikshv"},"content":"                        + System.lineSeparator()","lastModifiedDate":"2021-10-26"},{"lineNumber":59,"author":{"gitId":"antrikshv"},"content":"                        + \"list [Event Index] t/[Task Index] : to see members in a Task\");","lastModifiedDate":"2021-10-26"},{"lineNumber":60,"author":{"gitId":"antrikshv"},"content":"            }","lastModifiedDate":"2021-10-24"},{"lineNumber":61,"author":{"gitId":"antrikshv"},"content":"        } catch (NullPointerException | IndexOutOfBoundsException e) {","lastModifiedDate":"2021-10-24"},{"lineNumber":62,"author":{"gitId":"antrikshv"},"content":"            System.out.println(\"Please check through the format carefully\");","lastModifiedDate":"2021-10-24"},{"lineNumber":63,"author":{"gitId":"antrikshv"},"content":"            Ui.listUsageCommands();","lastModifiedDate":"2021-10-25"},{"lineNumber":64,"author":{"gitId":"antrikshv"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-10-26"},{"lineNumber":65,"author":{"gitId":"antrikshv"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2021-10-26"},{"lineNumber":66,"author":{"gitId":"antrikshv"},"content":"            Ui.listUsageCommands();","lastModifiedDate":"2021-10-26"},{"lineNumber":67,"author":{"gitId":"antrikshv"},"content":"        }","lastModifiedDate":"2021-10-04"},{"lineNumber":68,"author":{"gitId":"antrikshv"},"content":"        return new CommandResult(feedback);","lastModifiedDate":"2021-10-26"},{"lineNumber":69,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":70,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":71,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":72,"author":{"gitId":"antrikshv"},"content":"    private void listingMemberRoster() {","lastModifiedDate":"2021-10-26"},{"lineNumber":73,"author":{"gitId":"antrikshv"},"content":"        System.out.println(\"List of members in MemberRoster\");","lastModifiedDate":"2021-10-26"},{"lineNumber":74,"author":{"gitId":"antrikshv"},"content":"        Ui.printMemberRoster();","lastModifiedDate":"2021-10-26"},{"lineNumber":75,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":76,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":77,"author":{"gitId":"antrikshv"},"content":"    private void listingOverallSchedule() {","lastModifiedDate":"2021-10-25"},{"lineNumber":78,"author":{"gitId":"antrikshv"},"content":"        System.out.println(\"OVERALL SCHEDULE\"","lastModifiedDate":"2021-10-25"},{"lineNumber":79,"author":{"gitId":"antrikshv"},"content":"                + System.lineSeparator() + \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2021-10-25"},{"lineNumber":80,"author":{"gitId":"antrikshv"},"content":"        Ui.printEventCatalog();","lastModifiedDate":"2021-10-25"},{"lineNumber":81,"author":{"gitId":"antrikshv"},"content":"        Ui.listUsageCommands();","lastModifiedDate":"2021-10-25"},{"lineNumber":82,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":83,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":84,"author":{"gitId":"antrikshv"},"content":"    private void listingTaskDetails() throws DukeException {","lastModifiedDate":"2021-10-26"},{"lineNumber":85,"author":{"gitId":"antrikshv"},"content":"        Event event1;","lastModifiedDate":"2021-10-25"},{"lineNumber":86,"author":{"gitId":"antrikshv"},"content":"        try {","lastModifiedDate":"2021-10-26"},{"lineNumber":87,"author":{"gitId":"antrikshv"},"content":"            event1 \u003d Duke.eventCatalog.get(Integer.parseInt(userCommand[1]) - 1);","lastModifiedDate":"2021-10-25"},{"lineNumber":88,"author":{"gitId":"antrikshv"},"content":"            System.out.println(\"Event: \" + event1.getTitle()","lastModifiedDate":"2021-10-25"},{"lineNumber":89,"author":{"gitId":"antrikshv"},"content":"                    + System.lineSeparator() + \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2021-10-25"},{"lineNumber":90,"author":{"gitId":"antrikshv"},"content":"            Ui.printList(event1.getTaskList());","lastModifiedDate":"2021-10-25"},{"lineNumber":91,"author":{"gitId":"antrikshv"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-10-26"},{"lineNumber":92,"author":{"gitId":"antrikshv"},"content":"            throw new DukeException(\"That Event does not exist!\");","lastModifiedDate":"2021-10-26"},{"lineNumber":93,"author":{"gitId":"antrikshv"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":94,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":95,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":96,"author":{"gitId":"antrikshv"},"content":"    private void listingMemberDetails() throws DukeException {","lastModifiedDate":"2021-10-26"},{"lineNumber":97,"author":{"gitId":"antrikshv"},"content":"        try {","lastModifiedDate":"2021-10-26"},{"lineNumber":98,"author":{"gitId":"antrikshv"},"content":"            Event event2 \u003d Duke.eventCatalog.get(Integer.parseInt(userCommand[1]) - 1);","lastModifiedDate":"2021-10-25"},{"lineNumber":99,"author":{"gitId":"antrikshv"},"content":"            String[] memberCommand \u003d userCommand[2].split(\"/\");","lastModifiedDate":"2021-10-25"},{"lineNumber":100,"author":{"gitId":"antrikshv"},"content":"            int taskNum \u003d Integer.parseInt(memberCommand[1]) - 1;","lastModifiedDate":"2021-10-25"},{"lineNumber":101,"author":{"gitId":"antrikshv"},"content":"            Task task \u003d event2.getFromTaskList(taskNum);","lastModifiedDate":"2021-10-25"},{"lineNumber":102,"author":{"gitId":"antrikshv"},"content":"            System.out.println(\"Event: \" + event2.getTitle()","lastModifiedDate":"2021-10-25"},{"lineNumber":103,"author":{"gitId":"antrikshv"},"content":"                    + System.lineSeparator() + \"Task: \" + task.getTitle()","lastModifiedDate":"2021-10-25"},{"lineNumber":104,"author":{"gitId":"antrikshv"},"content":"                    + System.lineSeparator() + \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2021-10-25"},{"lineNumber":105,"author":{"gitId":"antrikshv"},"content":"            Ui.printMemberList(task.getMemberList());","lastModifiedDate":"2021-10-25"},{"lineNumber":106,"author":{"gitId":"antrikshv"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-10-26"},{"lineNumber":107,"author":{"gitId":"antrikshv"},"content":"            throw new DukeException(\"That Task does not exist!\");","lastModifiedDate":"2021-10-26"},{"lineNumber":108,"author":{"gitId":"antrikshv"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":109,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":110,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":111,"author":{"gitId":"antrikshv"},"content":"    private void checkForEmptyCells(String[] command) {","lastModifiedDate":"2021-10-26"},{"lineNumber":112,"author":{"gitId":"antrikshv"},"content":"        for (String check : command) {","lastModifiedDate":"2021-10-26"},{"lineNumber":113,"author":{"gitId":"antrikshv"},"content":"            if (!check.equalsIgnoreCase(\"\")) {","lastModifiedDate":"2021-10-26"},{"lineNumber":114,"author":{"gitId":"antrikshv"},"content":"                checkCommand.add(check);","lastModifiedDate":"2021-10-26"},{"lineNumber":115,"author":{"gitId":"antrikshv"},"content":"            }","lastModifiedDate":"2021-10-26"},{"lineNumber":116,"author":{"gitId":"antrikshv"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":117,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":118,"author":{"gitId":"antrikshv"},"content":"}","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"antrikshv":118}},{"path":"src/main/java/seedu/duke/commands/NextCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"antrikshv"},"content":"package seedu.duke.commands;","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"antrikshv"},"content":"import seedu.duke.Duke;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"antrikshv"},"content":"import seedu.duke.Ui;","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"antrikshv"},"content":"public class NextCommand extends Command {","lastModifiedDate":"2021-10-04"},{"lineNumber":8,"author":{"gitId":"antrikshv"},"content":"    protected static String nextItem;","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"antrikshv"},"content":"    protected static String[] userCommand;","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"antrikshv"},"content":"    public NextCommand(String[] command) {","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"antrikshv"},"content":"        userCommand \u003d command;","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"antrikshv"},"content":"        if (command.length \u003c 2 || command.length \u003e 3) {","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"antrikshv"},"content":"            nextCommandErrorMessage();","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"antrikshv"},"content":"            nextItem \u003d \"others\";","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"antrikshv"},"content":"        } else {","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"antrikshv"},"content":"            nextItem \u003d command[1];","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"antrikshv"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"antrikshv"},"content":"    private void nextCommandErrorMessage() {","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"antrikshv"},"content":"        System.out.println(\"please follow the correct format\"","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"antrikshv"},"content":"                + System.lineSeparator()","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"antrikshv"},"content":"                + \"next event : View details of the upcoming events\"","lastModifiedDate":"2021-10-25"},{"lineNumber":25,"author":{"gitId":"antrikshv"},"content":"                + System.lineSeparator()","lastModifiedDate":"2021-10-25"},{"lineNumber":26,"author":{"gitId":"antrikshv"},"content":"                + \"next task [Event index]: View details of the task with the closest deadline in a particular \"","lastModifiedDate":"2021-10-25"},{"lineNumber":27,"author":{"gitId":"antrikshv"},"content":"                + \"event\"","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"antrikshv"},"content":"                + System.lineSeparator()","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"antrikshv"},"content":"                + Ui.getLineBreak());","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":31,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":32,"author":{"gitId":"antrikshv"},"content":"    public CommandResult execute() {","lastModifiedDate":"2021-10-04"},{"lineNumber":33,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":34,"author":{"gitId":"antrikshv"},"content":"        try {","lastModifiedDate":"2021-10-25"},{"lineNumber":35,"author":{"gitId":"antrikshv"},"content":"            if (nextItem.equalsIgnoreCase(\"task\")) {","lastModifiedDate":"2021-10-25"},{"lineNumber":36,"author":{"gitId":"antrikshv"},"content":"                if (userCommand.length !\u003d 3) {","lastModifiedDate":"2021-10-25"},{"lineNumber":37,"author":{"gitId":"antrikshv"},"content":"                    nextCommandErrorMessage();","lastModifiedDate":"2021-10-25"},{"lineNumber":38,"author":{"gitId":"antrikshv"},"content":"                }","lastModifiedDate":"2021-10-25"},{"lineNumber":39,"author":{"gitId":"antrikshv"},"content":"                Ui.printTask(Duke.eventCatalog.get(Integer.parseInt(userCommand[2]) - 1).getFromTaskList(0));","lastModifiedDate":"2021-10-25"},{"lineNumber":40,"author":{"gitId":"antrikshv"},"content":"            } else if (nextItem.equalsIgnoreCase(\"event\")) {","lastModifiedDate":"2021-10-25"},{"lineNumber":41,"author":{"gitId":"antrikshv"},"content":"                Ui.printEvent((Duke.eventCatalog.get(0)));","lastModifiedDate":"2021-10-25"},{"lineNumber":42,"author":{"gitId":"antrikshv"},"content":"            } else {","lastModifiedDate":"2021-10-25"},{"lineNumber":43,"author":{"gitId":"antrikshv"},"content":"                nextCommandErrorMessage();","lastModifiedDate":"2021-10-25"},{"lineNumber":44,"author":{"gitId":"antrikshv"},"content":"            }","lastModifiedDate":"2021-10-25"},{"lineNumber":45,"author":{"gitId":"antrikshv"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-10-25"},{"lineNumber":46,"author":{"gitId":"antrikshv"},"content":"            nextCommandErrorMessage();","lastModifiedDate":"2021-10-25"},{"lineNumber":47,"author":{"gitId":"antrikshv"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-10-25"},{"lineNumber":48,"author":{"gitId":"antrikshv"},"content":"            return new CommandResult(\"This Event has no tasks!\");","lastModifiedDate":"2021-10-25"},{"lineNumber":49,"author":{"gitId":"antrikshv"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":50,"author":{"gitId":"antrikshv"},"content":"        return new CommandResult(\"Hope you have prepared everything!\");","lastModifiedDate":"2021-10-10"},{"lineNumber":51,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":52,"author":{"gitId":"antrikshv"},"content":"}","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"antrikshv":52}},{"path":"src/main/java/seedu/duke/commands/SelectCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"antrikshv"},"content":"package seedu.duke.commands;","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"alwinangys"},"content":"import seedu.duke.Duke;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"alwinangys"},"content":"import seedu.duke.Ui;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"alwinangys"},"content":"import seedu.duke.exceptions.DukeException;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"alwinangys"},"content":"import seedu.duke.items.Event;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"alwinangys"},"content":"import seedu.duke.items.Item;","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"alwinangys"},"content":"import seedu.duke.items.Task;","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"alwinangys"},"content":"import seedu.duke.parser.Parser;","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"alwinangys"},"content":"public class SelectCommand extends Command {","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"alwinangys"},"content":"    protected static final String EVENT_FLAG \u003d \"-e\";","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"alwinangys"},"content":"    protected static final String TASK_FLAG \u003d \"-t\";","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"alwinangys"},"content":"    private String itemFlag;","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"alwinangys"},"content":"    private int eventIndexToSelect;","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"alwinangys"},"content":"    private int taskIndexToSelect;","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"alwinangys"},"content":"    private static boolean isCorrectFormat;","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"alwinangys"},"content":"    public SelectCommand(String[] command) {","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"alwinangys"},"content":"        isCorrectFormat \u003d true;","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"alwinangys"},"content":"        try {","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"alwinangys"},"content":"            if (command.length \u003d\u003d 1) {","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"alwinangys"},"content":"                throw new DukeException(\"Please specify what you wish to select.\");","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"alwinangys"},"content":"            }","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"alwinangys"},"content":"            itemFlag \u003d command[1].trim().toLowerCase();","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"alwinangys"},"content":"            if (isValidFlag(itemFlag)) {","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"alwinangys"},"content":"                prepareInputs(command);","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"alwinangys"},"content":"            } else {","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"alwinangys"},"content":"                throw new DukeException(\"Invalid item flag entered. Please specify event \u0027-e\u0027 \"","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"alwinangys"},"content":"                        + \"or task \u0027-t\u0027.\");","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"alwinangys"},"content":"            }","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"alwinangys"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"alwinangys"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"alwinangys"},"content":"            isCorrectFormat \u003d false;","lastModifiedDate":"2021-10-24"},{"lineNumber":38,"author":{"gitId":"alwinangys"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-10-24"},{"lineNumber":39,"author":{"gitId":"alwinangys"},"content":"            System.out.println(\"Please enter a number for the item index!\");","lastModifiedDate":"2021-10-24"},{"lineNumber":40,"author":{"gitId":"alwinangys"},"content":"            isCorrectFormat \u003d false;","lastModifiedDate":"2021-10-24"},{"lineNumber":41,"author":{"gitId":"alwinangys"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2021-10-24"},{"lineNumber":42,"author":{"gitId":"alwinangys"},"content":"            System.out.println(\"No such item index exists!\");","lastModifiedDate":"2021-10-24"},{"lineNumber":43,"author":{"gitId":"alwinangys"},"content":"            isCorrectFormat \u003d false;","lastModifiedDate":"2021-10-24"},{"lineNumber":44,"author":{"gitId":"alwinangys"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":45,"author":{"gitId":"alwinangys"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"alwinangys"},"content":"    public CommandResult execute() {","lastModifiedDate":"2021-10-23"},{"lineNumber":48,"author":{"gitId":"alwinangys"},"content":"        if (!isCorrectFormat) {","lastModifiedDate":"2021-10-24"},{"lineNumber":49,"author":{"gitId":"alwinangys"},"content":"            return new CommandResult(\"Try again!\");","lastModifiedDate":"2021-10-25"},{"lineNumber":50,"author":{"gitId":"alwinangys"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":51,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":52,"author":{"gitId":"alwinangys"},"content":"        Item selectedItem;","lastModifiedDate":"2021-10-24"},{"lineNumber":53,"author":{"gitId":"alwinangys"},"content":"        if (isEventFlag(itemFlag)) {","lastModifiedDate":"2021-10-24"},{"lineNumber":54,"author":{"gitId":"alwinangys"},"content":"            selectedItem \u003d getEventFromIndex(eventIndexToSelect);","lastModifiedDate":"2021-10-24"},{"lineNumber":55,"author":{"gitId":"alwinangys"},"content":"            return new CommandResult(Ui.getSelectedEventMessage((Event) selectedItem));","lastModifiedDate":"2021-10-24"},{"lineNumber":56,"author":{"gitId":"alwinangys"},"content":"        } else if (isTaskFlag(itemFlag)) {","lastModifiedDate":"2021-10-24"},{"lineNumber":57,"author":{"gitId":"alwinangys"},"content":"            if (Parser.getIndexOfLastSelectedEvent() \u003d\u003d -1) {","lastModifiedDate":"2021-10-24"},{"lineNumber":58,"author":{"gitId":"alwinangys"},"content":"                return new CommandResult(\"Please select an event first!\");","lastModifiedDate":"2021-10-24"},{"lineNumber":59,"author":{"gitId":"alwinangys"},"content":"            }","lastModifiedDate":"2021-10-24"},{"lineNumber":60,"author":{"gitId":"alwinangys"},"content":"            eventIndexToSelect \u003d Parser.getIndexOfLastSelectedEvent();","lastModifiedDate":"2021-10-24"},{"lineNumber":61,"author":{"gitId":"alwinangys"},"content":"            selectedItem \u003d getTaskFromEventIndex(eventIndexToSelect, taskIndexToSelect);","lastModifiedDate":"2021-10-24"},{"lineNumber":62,"author":{"gitId":"alwinangys"},"content":"            return new CommandResult(Ui.getSelectedTaskMessage((Task) selectedItem));","lastModifiedDate":"2021-10-24"},{"lineNumber":63,"author":{"gitId":"alwinangys"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":64,"author":{"gitId":"alwinangys"},"content":"        return new CommandResult(\"Insert something here.\");","lastModifiedDate":"2021-10-24"},{"lineNumber":65,"author":{"gitId":"alwinangys"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":66,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":67,"author":{"gitId":"alwinangys"},"content":"    private void prepareInputs(String[] command) throws DukeException {","lastModifiedDate":"2021-10-24"},{"lineNumber":68,"author":{"gitId":"alwinangys"},"content":"        if (command.length \u003d\u003d 2) {","lastModifiedDate":"2021-10-24"},{"lineNumber":69,"author":{"gitId":"alwinangys"},"content":"            throw new DukeException(\"Please give me the index of the event you wish to select!\");","lastModifiedDate":"2021-10-24"},{"lineNumber":70,"author":{"gitId":"alwinangys"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":71,"author":{"gitId":"alwinangys"},"content":"        if (!isValidFlag(itemFlag)) {","lastModifiedDate":"2021-10-24"},{"lineNumber":72,"author":{"gitId":"alwinangys"},"content":"            throw new DukeException(\"Invalid item flag!\");","lastModifiedDate":"2021-10-24"},{"lineNumber":73,"author":{"gitId":"alwinangys"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":74,"author":{"gitId":"alwinangys"},"content":"        int index \u003d getIndexFromCommand(command[2]);","lastModifiedDate":"2021-10-24"},{"lineNumber":75,"author":{"gitId":"alwinangys"},"content":"        if (isEventFlag(itemFlag)) {","lastModifiedDate":"2021-10-24"},{"lineNumber":76,"author":{"gitId":"alwinangys"},"content":"            if (!isValidEventIndex(index)) {","lastModifiedDate":"2021-10-24"},{"lineNumber":77,"author":{"gitId":"alwinangys"},"content":"                throw new DukeException(\"Invalid event index!\");","lastModifiedDate":"2021-10-24"},{"lineNumber":78,"author":{"gitId":"alwinangys"},"content":"            }","lastModifiedDate":"2021-10-24"},{"lineNumber":79,"author":{"gitId":"alwinangys"},"content":"            eventIndexToSelect \u003d index;","lastModifiedDate":"2021-10-24"},{"lineNumber":80,"author":{"gitId":"alwinangys"},"content":"            Parser.updateIndexOfLastSelectedEvent(index);","lastModifiedDate":"2021-10-24"},{"lineNumber":81,"author":{"gitId":"alwinangys"},"content":"        } else {","lastModifiedDate":"2021-10-24"},{"lineNumber":82,"author":{"gitId":"alwinangys"},"content":"            if (Parser.noEventSelected()) {","lastModifiedDate":"2021-10-25"},{"lineNumber":83,"author":{"gitId":"alwinangys"},"content":"                throw new DukeException(\"Select an event first!\");","lastModifiedDate":"2021-10-25"},{"lineNumber":84,"author":{"gitId":"alwinangys"},"content":"            }","lastModifiedDate":"2021-10-25"},{"lineNumber":85,"author":{"gitId":"alwinangys"},"content":"            if (!isValidTaskIndex(Parser.getIndexOfLastSelectedEvent(), index)) {","lastModifiedDate":"2021-10-24"},{"lineNumber":86,"author":{"gitId":"alwinangys"},"content":"                throw new DukeException(\"Invalid task index!\");","lastModifiedDate":"2021-10-24"},{"lineNumber":87,"author":{"gitId":"alwinangys"},"content":"            }","lastModifiedDate":"2021-10-24"},{"lineNumber":88,"author":{"gitId":"alwinangys"},"content":"            taskIndexToSelect \u003d index;","lastModifiedDate":"2021-10-24"},{"lineNumber":89,"author":{"gitId":"alwinangys"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":90,"author":{"gitId":"alwinangys"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":91,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":92,"author":{"gitId":"alwinangys"},"content":"    private boolean isValidFlag(String flag) {","lastModifiedDate":"2021-10-24"},{"lineNumber":93,"author":{"gitId":"alwinangys"},"content":"        return isTaskFlag(flag) || isEventFlag(flag);","lastModifiedDate":"2021-10-24"},{"lineNumber":94,"author":{"gitId":"alwinangys"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":95,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":96,"author":{"gitId":"alwinangys"},"content":"    private static boolean isTaskFlag(String flag) {","lastModifiedDate":"2021-10-24"},{"lineNumber":97,"author":{"gitId":"alwinangys"},"content":"        return flag.trim().equalsIgnoreCase(TASK_FLAG);","lastModifiedDate":"2021-10-24"},{"lineNumber":98,"author":{"gitId":"alwinangys"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":99,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":100,"author":{"gitId":"alwinangys"},"content":"    private static boolean isEventFlag(String flag) {","lastModifiedDate":"2021-10-24"},{"lineNumber":101,"author":{"gitId":"alwinangys"},"content":"        return flag.trim().equalsIgnoreCase(EVENT_FLAG);","lastModifiedDate":"2021-10-24"},{"lineNumber":102,"author":{"gitId":"alwinangys"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":103,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":104,"author":{"gitId":"alwinangys"},"content":"    private static int getIndexFromCommand(String indexAsString) {","lastModifiedDate":"2021-10-24"},{"lineNumber":105,"author":{"gitId":"alwinangys"},"content":"        return Integer.parseInt(indexAsString.trim()) - 1;","lastModifiedDate":"2021-10-24"},{"lineNumber":106,"author":{"gitId":"alwinangys"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":107,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":108,"author":{"gitId":"alwinangys"},"content":"    private static boolean isValidEventIndex(int eventIndex) {","lastModifiedDate":"2021-10-24"},{"lineNumber":109,"author":{"gitId":"Alvinlj00"},"content":"        return eventIndex \u003e\u003d 0 \u0026\u0026 eventIndex \u003c\u003d Duke.eventCatalog.size();","lastModifiedDate":"2021-10-26"},{"lineNumber":110,"author":{"gitId":"alwinangys"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":111,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":112,"author":{"gitId":"alwinangys"},"content":"    private static boolean isValidTaskIndex(int eventIndex, int taskIndex) {","lastModifiedDate":"2021-10-24"},{"lineNumber":113,"author":{"gitId":"Alvinlj00"},"content":"        return taskIndex \u003e\u003d 0 \u0026\u0026 taskIndex \u003c\u003d Duke.eventCatalog.get(eventIndex).getTaskList().size();","lastModifiedDate":"2021-10-26"},{"lineNumber":114,"author":{"gitId":"alwinangys"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":115,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":116,"author":{"gitId":"alwinangys"},"content":"    private static Event getEventFromIndex(int eventIndex) {","lastModifiedDate":"2021-10-24"},{"lineNumber":117,"author":{"gitId":"alwinangys"},"content":"        return Duke.eventCatalog.get(eventIndex);","lastModifiedDate":"2021-10-24"},{"lineNumber":118,"author":{"gitId":"alwinangys"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":119,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":120,"author":{"gitId":"alwinangys"},"content":"    private Task getTaskFromEventIndex(int eventIndex, int taskIndex) {","lastModifiedDate":"2021-10-24"},{"lineNumber":121,"author":{"gitId":"alwinangys"},"content":"        return Duke.eventCatalog.get(eventIndex).getFromTaskList(taskIndex);","lastModifiedDate":"2021-10-24"},{"lineNumber":122,"author":{"gitId":"alwinangys"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":123,"author":{"gitId":"antrikshv"},"content":"}","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"antrikshv":3,"Alvinlj00":2,"alwinangys":118}},{"path":"src/main/java/seedu/duke/commands/UpdateCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"antrikshv"},"content":"package seedu.duke.commands;","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"antrikshv"},"content":"import seedu.duke.Duke;","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"antrikshv"},"content":"import seedu.duke.exceptions.DukeException;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"antrikshv"},"content":"import seedu.duke.items.Task;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"antrikshv"},"content":"import seedu.duke.items.characteristics.Member;","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"crabnuggets"},"content":"import seedu.duke.parser.Parser;","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"antrikshv"},"content":"import seedu.duke.Ui;","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"antrikshv"},"content":"import seedu.duke.items.Event;","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"antrikshv"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"antrikshv"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":14,"author":{"gitId":"antrikshv"},"content":"public class UpdateCommand extends Command {","lastModifiedDate":"2021-10-04"},{"lineNumber":15,"author":{"gitId":"antrikshv"},"content":"    protected Integer eventNumber;","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"antrikshv"},"content":"    protected Event eventToBeUpdated;","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"antrikshv"},"content":"    protected boolean isError \u003d false;","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"antrikshv"},"content":"    protected static final String TITLE_FLAG \u003d \"title/\";","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"antrikshv"},"content":"    protected static final String DATE_FLAG \u003d \"date/\";","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"antrikshv"},"content":"    protected static final String DEADLINE_FLAG \u003d \"deadline/\";","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"antrikshv"},"content":"    protected static final String VENUE_FLAG \u003d \"venue/\";","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"antrikshv"},"content":"    protected static final String BUDGET_FLAG \u003d \"budget/\";","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"antrikshv"},"content":"    protected static final String DESCRIPTION_FLAG \u003d \"description/\";","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"antrikshv"},"content":"    protected static final String TASK_FLAG \u003d \"task/\";","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"antrikshv"},"content":"    protected static final String MEMBER_FLAG \u003d \"member/\";","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"antrikshv"},"content":"    protected static final String REMOVE_FLAG \u003d \"remove/\";","lastModifiedDate":"2021-10-26"},{"lineNumber":27,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":28,"author":{"gitId":"antrikshv"},"content":"    public UpdateCommand(String[] command) {","lastModifiedDate":"2021-10-04"},{"lineNumber":29,"author":{"gitId":"antrikshv"},"content":"        try {","lastModifiedDate":"2021-10-28"},{"lineNumber":30,"author":{"gitId":"antrikshv"},"content":"            if (command.length \u003c 2) {","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"antrikshv"},"content":"                if (command[0].equalsIgnoreCase(\"update\")) {","lastModifiedDate":"2021-10-26"},{"lineNumber":32,"author":{"gitId":"antrikshv"},"content":"                    updateCommandErrorMessage();","lastModifiedDate":"2021-10-27"},{"lineNumber":33,"author":{"gitId":"antrikshv"},"content":"                }","lastModifiedDate":"2021-10-26"},{"lineNumber":34,"author":{"gitId":"antrikshv"},"content":"                Ui.printLineBreak();","lastModifiedDate":"2021-10-26"},{"lineNumber":35,"author":{"gitId":"antrikshv"},"content":"                this.isError \u003d true;","lastModifiedDate":"2021-10-26"},{"lineNumber":36,"author":{"gitId":"antrikshv"},"content":"            } else {","lastModifiedDate":"2021-10-26"},{"lineNumber":37,"author":{"gitId":"antrikshv"},"content":"                prepareUpdates(command);","lastModifiedDate":"2021-10-27"},{"lineNumber":38,"author":{"gitId":"antrikshv"},"content":"            }","lastModifiedDate":"2021-10-27"},{"lineNumber":39,"author":{"gitId":"antrikshv"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-10-28"},{"lineNumber":40,"author":{"gitId":"antrikshv"},"content":"            System.out.println(\"Event does not exist!\");","lastModifiedDate":"2021-10-28"},{"lineNumber":41,"author":{"gitId":"antrikshv"},"content":"            this.isError \u003d true;","lastModifiedDate":"2021-10-28"},{"lineNumber":42,"author":{"gitId":"antrikshv"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":43,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":44,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":45,"author":{"gitId":"antrikshv"},"content":"    private void updateCommandErrorMessage() {","lastModifiedDate":"2021-10-27"},{"lineNumber":46,"author":{"gitId":"antrikshv"},"content":"        System.out.println(\"please specify which event you would like to update in the format\"","lastModifiedDate":"2021-10-27"},{"lineNumber":47,"author":{"gitId":"antrikshv"},"content":"                + System.lineSeparator() + \"update [Event_num]\");","lastModifiedDate":"2021-10-27"},{"lineNumber":48,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":49,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":50,"author":{"gitId":"antrikshv"},"content":"    private void prepareUpdates(String[] command) {","lastModifiedDate":"2021-10-27"},{"lineNumber":51,"author":{"gitId":"antrikshv"},"content":"        this.eventNumber \u003d Integer.parseInt(command[1]) - 1;","lastModifiedDate":"2021-10-24"},{"lineNumber":52,"author":{"gitId":"antrikshv"},"content":"        this.eventToBeUpdated \u003d Duke.eventCatalog.get(eventNumber);","lastModifiedDate":"2021-10-24"},{"lineNumber":53,"author":{"gitId":"antrikshv"},"content":"        System.out.println(\"Here are the details of the event:\" + System.lineSeparator()","lastModifiedDate":"2021-10-24"},{"lineNumber":54,"author":{"gitId":"antrikshv"},"content":"                + \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2021-10-26"},{"lineNumber":55,"author":{"gitId":"antrikshv"},"content":"        Ui.printEvent(Duke.eventCatalog.get(eventNumber));","lastModifiedDate":"2021-10-24"},{"lineNumber":56,"author":{"gitId":"antrikshv"},"content":"        Ui.printLineBreak();","lastModifiedDate":"2021-10-24"},{"lineNumber":57,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":58,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":59,"author":{"gitId":"antrikshv"},"content":"    public CommandResult execute() {","lastModifiedDate":"2021-10-04"},{"lineNumber":60,"author":{"gitId":"antrikshv"},"content":"        String executeResult \u003d \"returning to main page...\";","lastModifiedDate":"2021-10-26"},{"lineNumber":61,"author":{"gitId":"antrikshv"},"content":"        if (!isError) {","lastModifiedDate":"2021-10-26"},{"lineNumber":62,"author":{"gitId":"antrikshv"},"content":"            try {","lastModifiedDate":"2021-10-26"},{"lineNumber":63,"author":{"gitId":"antrikshv"},"content":"                Ui.updateIntroMessage();","lastModifiedDate":"2021-10-25"},{"lineNumber":64,"author":{"gitId":"antrikshv"},"content":"                String userInput \u003d Ui.readInput();","lastModifiedDate":"2021-10-10"},{"lineNumber":65,"author":{"gitId":"antrikshv"},"content":"                Ui.printLineBreak();","lastModifiedDate":"2021-10-24"},{"lineNumber":66,"author":{"gitId":"antrikshv"},"content":"                if (userInput.equalsIgnoreCase(\"exit\")) {","lastModifiedDate":"2021-10-24"},{"lineNumber":67,"author":{"gitId":"antrikshv"},"content":"                    return new CommandResult(executeResult);","lastModifiedDate":"2021-10-26"},{"lineNumber":68,"author":{"gitId":"antrikshv"},"content":"                }","lastModifiedDate":"2021-10-24"},{"lineNumber":69,"author":{"gitId":"antrikshv"},"content":"                String[] userUpdates \u003d userInput.trim().split(\"\u003e\");","lastModifiedDate":"2021-10-24"},{"lineNumber":70,"author":{"gitId":"antrikshv"},"content":"                CommandResult result \u003d implementUpdates(userUpdates);","lastModifiedDate":"2021-10-25"},{"lineNumber":71,"author":{"gitId":"antrikshv"},"content":"                if (result !\u003d null) {","lastModifiedDate":"2021-10-25"},{"lineNumber":72,"author":{"gitId":"antrikshv"},"content":"                    return result;","lastModifiedDate":"2021-10-25"},{"lineNumber":73,"author":{"gitId":"antrikshv"},"content":"                }","lastModifiedDate":"2021-10-24"},{"lineNumber":74,"author":{"gitId":"antrikshv"},"content":"                postUpdateMessage();","lastModifiedDate":"2021-10-24"},{"lineNumber":75,"author":{"gitId":"antrikshv"},"content":"                Ui.printLineBreak();","lastModifiedDate":"2021-10-24"},{"lineNumber":76,"author":{"gitId":"antrikshv"},"content":"            } catch (NullPointerException | NumberFormatException e) {","lastModifiedDate":"2021-10-26"},{"lineNumber":77,"author":{"gitId":"antrikshv"},"content":"                executeResult \u003d \"please follow the format closely\"","lastModifiedDate":"2021-10-26"},{"lineNumber":78,"author":{"gitId":"antrikshv"},"content":"                        + System.lineSeparator() + \"returning to main page...\";","lastModifiedDate":"2021-10-26"},{"lineNumber":79,"author":{"gitId":"antrikshv"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2021-10-24"},{"lineNumber":80,"author":{"gitId":"antrikshv"},"content":"                executeResult \u003d e.getMessage()","lastModifiedDate":"2021-10-26"},{"lineNumber":81,"author":{"gitId":"antrikshv"},"content":"                        + System.lineSeparator() + \"returning to main page...\";","lastModifiedDate":"2021-10-26"},{"lineNumber":82,"author":{"gitId":"antrikshv"},"content":"            }","lastModifiedDate":"2021-10-24"},{"lineNumber":83,"author":{"gitId":"antrikshv"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":84,"author":{"gitId":"antrikshv"},"content":"        return new CommandResult(executeResult);","lastModifiedDate":"2021-10-26"},{"lineNumber":85,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":86,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":87,"author":{"gitId":"antrikshv"},"content":"    private CommandResult implementUpdates(String[] userUpdates) throws DukeException {","lastModifiedDate":"2021-10-24"},{"lineNumber":88,"author":{"gitId":"antrikshv"},"content":"        for (String update : userUpdates) {","lastModifiedDate":"2021-10-10"},{"lineNumber":89,"author":{"gitId":"antrikshv"},"content":"            String[] attribute \u003d update.trim().split(\"/+\");","lastModifiedDate":"2021-10-26"},{"lineNumber":90,"author":{"gitId":"antrikshv"},"content":"            if (update.contains(TITLE_FLAG)) {","lastModifiedDate":"2021-10-10"},{"lineNumber":91,"author":{"gitId":"antrikshv"},"content":"                eventToBeUpdated.setTitle(attribute[1]);","lastModifiedDate":"2021-10-24"},{"lineNumber":92,"author":{"gitId":"antrikshv"},"content":"            } else if (update.contains(DATE_FLAG)) {","lastModifiedDate":"2021-10-10"},{"lineNumber":93,"author":{"gitId":"antrikshv"},"content":"                updateDate(attribute[1]);","lastModifiedDate":"2021-10-24"},{"lineNumber":94,"author":{"gitId":"antrikshv"},"content":"            } else if (update.contains(VENUE_FLAG)) {","lastModifiedDate":"2021-10-10"},{"lineNumber":95,"author":{"gitId":"antrikshv"},"content":"                eventToBeUpdated.setVenue(attribute[1]);","lastModifiedDate":"2021-10-24"},{"lineNumber":96,"author":{"gitId":"antrikshv"},"content":"            } else if (update.contains(BUDGET_FLAG)) {","lastModifiedDate":"2021-10-10"},{"lineNumber":97,"author":{"gitId":"antrikshv"},"content":"                updateBudget(attribute[1]);","lastModifiedDate":"2021-10-24"},{"lineNumber":98,"author":{"gitId":"antrikshv"},"content":"            } else if (update.contains(DESCRIPTION_FLAG)) {","lastModifiedDate":"2021-10-10"},{"lineNumber":99,"author":{"gitId":"antrikshv"},"content":"                eventToBeUpdated.setDescription(attribute[1]);","lastModifiedDate":"2021-10-24"},{"lineNumber":100,"author":{"gitId":"antrikshv"},"content":"            } else if (update.contains(TASK_FLAG)) {","lastModifiedDate":"2021-10-24"},{"lineNumber":101,"author":{"gitId":"antrikshv"},"content":"                attribute[1] \u003d attribute[1].replaceAll(\"\\\\s\", \"\");","lastModifiedDate":"2021-10-26"},{"lineNumber":102,"author":{"gitId":"antrikshv"},"content":"                updateTask(attribute[1]);","lastModifiedDate":"2021-10-24"},{"lineNumber":103,"author":{"gitId":"antrikshv"},"content":"            } else {","lastModifiedDate":"2021-10-24"},{"lineNumber":104,"author":{"gitId":"antrikshv"},"content":"                return new CommandResult(\"Invalid update, you have returned to the main page!\");","lastModifiedDate":"2021-10-26"},{"lineNumber":105,"author":{"gitId":"antrikshv"},"content":"            }","lastModifiedDate":"2021-10-10"},{"lineNumber":106,"author":{"gitId":"antrikshv"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":107,"author":{"gitId":"antrikshv"},"content":"        return null;","lastModifiedDate":"2021-10-24"},{"lineNumber":108,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":109,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":110,"author":{"gitId":"antrikshv"},"content":"    protected void updateTask(String index) throws DukeException {","lastModifiedDate":"2021-10-24"},{"lineNumber":111,"author":{"gitId":"antrikshv"},"content":"        int taskNum \u003d Integer.parseInt(index) - 1;","lastModifiedDate":"2021-10-24"},{"lineNumber":112,"author":{"gitId":"antrikshv"},"content":"        Task taskToBeUpdated \u003d eventToBeUpdated.getFromTaskList(taskNum);","lastModifiedDate":"2021-10-24"},{"lineNumber":113,"author":{"gitId":"antrikshv"},"content":"        Ui.printTask(taskToBeUpdated);","lastModifiedDate":"2021-10-24"},{"lineNumber":114,"author":{"gitId":"antrikshv"},"content":"        updateTaskIntroMessage();","lastModifiedDate":"2021-10-24"},{"lineNumber":115,"author":{"gitId":"antrikshv"},"content":"        String userInput \u003d Ui.readInput();","lastModifiedDate":"2021-10-24"},{"lineNumber":116,"author":{"gitId":"antrikshv"},"content":"        String[] userUpdates \u003d userInput.trim().split(\"\u003e\");","lastModifiedDate":"2021-10-24"},{"lineNumber":117,"author":{"gitId":"antrikshv"},"content":"        for (String update : userUpdates) {","lastModifiedDate":"2021-10-24"},{"lineNumber":118,"author":{"gitId":"antrikshv"},"content":"            String[] attribute \u003d update.trim().split(\"/\");","lastModifiedDate":"2021-10-24"},{"lineNumber":119,"author":{"gitId":"antrikshv"},"content":"            if (update.contains(TITLE_FLAG)) {","lastModifiedDate":"2021-10-24"},{"lineNumber":120,"author":{"gitId":"antrikshv"},"content":"                taskToBeUpdated.setTitle(attribute[1]);","lastModifiedDate":"2021-10-24"},{"lineNumber":121,"author":{"gitId":"antrikshv"},"content":"            } else if (update.contains(DEADLINE_FLAG)) {","lastModifiedDate":"2021-10-24"},{"lineNumber":122,"author":{"gitId":"antrikshv"},"content":"                updateDeadline(attribute[1], taskToBeUpdated);","lastModifiedDate":"2021-10-24"},{"lineNumber":123,"author":{"gitId":"antrikshv"},"content":"            } else if (update.contains(DESCRIPTION_FLAG)) {","lastModifiedDate":"2021-10-24"},{"lineNumber":124,"author":{"gitId":"antrikshv"},"content":"                taskToBeUpdated.setDescription(attribute[1]);","lastModifiedDate":"2021-10-24"},{"lineNumber":125,"author":{"gitId":"antrikshv"},"content":"            } else if (update.contains(MEMBER_FLAG)) {","lastModifiedDate":"2021-10-24"},{"lineNumber":126,"author":{"gitId":"antrikshv"},"content":"                attribute[1] \u003d attribute[1].replaceAll(\"\\\\s\", \"\");","lastModifiedDate":"2021-10-26"},{"lineNumber":127,"author":{"gitId":"antrikshv"},"content":"                updateMember(attribute[1], taskToBeUpdated);","lastModifiedDate":"2021-10-26"},{"lineNumber":128,"author":{"gitId":"antrikshv"},"content":"            } else if (update.contains(REMOVE_FLAG)) {","lastModifiedDate":"2021-10-26"},{"lineNumber":129,"author":{"gitId":"antrikshv"},"content":"                attribute[1] \u003d attribute[1].replaceAll(\"\\\\s\", \"\");","lastModifiedDate":"2021-10-26"},{"lineNumber":130,"author":{"gitId":"antrikshv"},"content":"                removeMember(attribute[1], taskToBeUpdated);","lastModifiedDate":"2021-10-26"},{"lineNumber":131,"author":{"gitId":"antrikshv"},"content":"            } else {","lastModifiedDate":"2021-10-24"},{"lineNumber":132,"author":{"gitId":"antrikshv"},"content":"                System.out.println(\"invalid Command!\");","lastModifiedDate":"2021-10-24"},{"lineNumber":133,"author":{"gitId":"antrikshv"},"content":"            }","lastModifiedDate":"2021-10-10"},{"lineNumber":134,"author":{"gitId":"antrikshv"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":135,"author":{"gitId":"antrikshv"},"content":"        Ui.printLineBreak();","lastModifiedDate":"2021-10-24"},{"lineNumber":136,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":137,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":138,"author":{"gitId":"antrikshv"},"content":"    private void removeMember(String index, Task taskToBeUpdated) {","lastModifiedDate":"2021-10-26"},{"lineNumber":139,"author":{"gitId":"antrikshv"},"content":"        Ui.printLineBreak();","lastModifiedDate":"2021-10-26"},{"lineNumber":140,"author":{"gitId":"antrikshv"},"content":"        int memberIndex \u003d Integer.parseInt(index) - 1;","lastModifiedDate":"2021-10-26"},{"lineNumber":141,"author":{"gitId":"antrikshv"},"content":"        Member memberToBeRemoved \u003d taskToBeUpdated.memberList.get(memberIndex);","lastModifiedDate":"2021-10-26"},{"lineNumber":142,"author":{"gitId":"antrikshv"},"content":"        System.out.println(\"Are you sure you want to remove \" + memberToBeRemoved.getName() + \" from this task (y/n)\");","lastModifiedDate":"2021-10-26"},{"lineNumber":143,"author":{"gitId":"antrikshv"},"content":"        Ui.printLineBreak();","lastModifiedDate":"2021-10-26"},{"lineNumber":144,"author":{"gitId":"antrikshv"},"content":"        boolean exit \u003d false;","lastModifiedDate":"2021-10-26"},{"lineNumber":145,"author":{"gitId":"antrikshv"},"content":"        while (!exit) {","lastModifiedDate":"2021-10-26"},{"lineNumber":146,"author":{"gitId":"antrikshv"},"content":"            String userInput \u003d Ui.readInput();","lastModifiedDate":"2021-10-26"},{"lineNumber":147,"author":{"gitId":"antrikshv"},"content":"            Ui.printLineBreak();","lastModifiedDate":"2021-10-26"},{"lineNumber":148,"author":{"gitId":"antrikshv"},"content":"            if (taskToBeUpdated.memberList.size() \u003c\u003d 1) {","lastModifiedDate":"2021-10-26"},{"lineNumber":149,"author":{"gitId":"antrikshv"},"content":"                System.out.println(\"Task cannot be carried out without a member, no member removed!\");","lastModifiedDate":"2021-10-26"},{"lineNumber":150,"author":{"gitId":"antrikshv"},"content":"                exit \u003d true;","lastModifiedDate":"2021-10-26"},{"lineNumber":151,"author":{"gitId":"antrikshv"},"content":"            } else if (userInput.equalsIgnoreCase(\"y\")) {","lastModifiedDate":"2021-10-26"},{"lineNumber":152,"author":{"gitId":"antrikshv"},"content":"                System.out.println(memberToBeRemoved.getName() + \" removed from Task!\");","lastModifiedDate":"2021-10-26"},{"lineNumber":153,"author":{"gitId":"antrikshv"},"content":"                taskToBeUpdated.memberList.remove(memberIndex);","lastModifiedDate":"2021-10-26"},{"lineNumber":154,"author":{"gitId":"antrikshv"},"content":"                exit \u003d true;","lastModifiedDate":"2021-10-26"},{"lineNumber":155,"author":{"gitId":"antrikshv"},"content":"            } else if (userInput.equalsIgnoreCase(\"n\")) {","lastModifiedDate":"2021-10-26"},{"lineNumber":156,"author":{"gitId":"antrikshv"},"content":"                System.out.println(\"No member removed from Task!\");","lastModifiedDate":"2021-10-26"},{"lineNumber":157,"author":{"gitId":"antrikshv"},"content":"                exit \u003d true;","lastModifiedDate":"2021-10-26"},{"lineNumber":158,"author":{"gitId":"antrikshv"},"content":"            } else {","lastModifiedDate":"2021-10-26"},{"lineNumber":159,"author":{"gitId":"antrikshv"},"content":"                System.out.println(\"please key in [y] for yes and [n] for no\");","lastModifiedDate":"2021-10-26"},{"lineNumber":160,"author":{"gitId":"antrikshv"},"content":"                Ui.printLineBreak();","lastModifiedDate":"2021-10-26"},{"lineNumber":161,"author":{"gitId":"antrikshv"},"content":"            }","lastModifiedDate":"2021-10-26"},{"lineNumber":162,"author":{"gitId":"antrikshv"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":163,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":164,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":165,"author":{"gitId":"antrikshv"},"content":"    private void updateMember(String memberToBeUpdated, Task taskToBeUpdated) throws DukeException {","lastModifiedDate":"2021-10-26"},{"lineNumber":166,"author":{"gitId":"antrikshv"},"content":"        taskToBeUpdated.memberList.remove(Integer.parseInt(memberToBeUpdated) - 1);","lastModifiedDate":"2021-10-26"},{"lineNumber":167,"author":{"gitId":"antrikshv"},"content":"        Ui.printLineBreak();","lastModifiedDate":"2021-10-26"},{"lineNumber":168,"author":{"gitId":"antrikshv"},"content":"        Ui.promptForMemberIndex();","lastModifiedDate":"2021-10-26"},{"lineNumber":169,"author":{"gitId":"antrikshv"},"content":"        boolean isCorrectMember \u003d false;","lastModifiedDate":"2021-10-26"},{"lineNumber":170,"author":{"gitId":"antrikshv"},"content":"        while (!isCorrectMember) {","lastModifiedDate":"2021-10-26"},{"lineNumber":171,"author":{"gitId":"antrikshv"},"content":"            try {","lastModifiedDate":"2021-10-26"},{"lineNumber":172,"author":{"gitId":"antrikshv"},"content":"                isCorrectMember \u003d isMemberUpdated(taskToBeUpdated);","lastModifiedDate":"2021-10-26"},{"lineNumber":173,"author":{"gitId":"antrikshv"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-10-26"},{"lineNumber":174,"author":{"gitId":"antrikshv"},"content":"                Ui.printLineBreak();","lastModifiedDate":"2021-10-26"},{"lineNumber":175,"author":{"gitId":"antrikshv"},"content":"                throw new DukeException(\"This member does not exist. Please enter the index corresponding to \"","lastModifiedDate":"2021-10-26"},{"lineNumber":176,"author":{"gitId":"antrikshv"},"content":"                        + \"the correct member. \");","lastModifiedDate":"2021-10-26"},{"lineNumber":177,"author":{"gitId":"antrikshv"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2021-10-26"},{"lineNumber":178,"author":{"gitId":"antrikshv"},"content":"                Ui.printLineBreak();","lastModifiedDate":"2021-10-26"},{"lineNumber":179,"author":{"gitId":"antrikshv"},"content":"                System.out.println(\"Please enter the number corresponding to the member \"","lastModifiedDate":"2021-10-26"},{"lineNumber":180,"author":{"gitId":"antrikshv"},"content":"                        + \"you want to assign this task to. \");","lastModifiedDate":"2021-10-26"},{"lineNumber":181,"author":{"gitId":"antrikshv"},"content":"            }","lastModifiedDate":"2021-10-26"},{"lineNumber":182,"author":{"gitId":"antrikshv"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":183,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":184,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":185,"author":{"gitId":"antrikshv"},"content":"    private boolean isMemberUpdated(Task taskToBeUpdated) {","lastModifiedDate":"2021-10-26"},{"lineNumber":186,"author":{"gitId":"antrikshv"},"content":"        Ui.printMemberRoster();","lastModifiedDate":"2021-10-26"},{"lineNumber":187,"author":{"gitId":"antrikshv"},"content":"        Ui.printLineBreak();","lastModifiedDate":"2021-10-26"},{"lineNumber":188,"author":{"gitId":"antrikshv"},"content":"        int memberIndex \u003d Integer.parseInt(Ui.readInput());","lastModifiedDate":"2021-10-26"},{"lineNumber":189,"author":{"gitId":"antrikshv"},"content":"        Duke.memberRoster.get(memberIndex - 1).addToAssignedTasks(taskToBeUpdated);","lastModifiedDate":"2021-10-26"},{"lineNumber":190,"author":{"gitId":"antrikshv"},"content":"        Duke.memberRoster.get(memberIndex - 1).sortTasks();","lastModifiedDate":"2021-10-26"},{"lineNumber":191,"author":{"gitId":"antrikshv"},"content":"        taskToBeUpdated.addMember(Duke.memberRoster.get(memberIndex - 1));","lastModifiedDate":"2021-10-26"},{"lineNumber":192,"author":{"gitId":"antrikshv"},"content":"        return true;","lastModifiedDate":"2021-10-26"},{"lineNumber":193,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":194,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":195,"author":{"gitId":"antrikshv"},"content":"    private void updateTaskIntroMessage() {","lastModifiedDate":"2021-10-24"},{"lineNumber":196,"author":{"gitId":"antrikshv"},"content":"        Ui.printLineBreak();","lastModifiedDate":"2021-10-24"},{"lineNumber":197,"author":{"gitId":"antrikshv"},"content":"        System.out.println(\"Please type the item for task you would like to update in the following manner \"","lastModifiedDate":"2021-10-24"},{"lineNumber":198,"author":{"gitId":"antrikshv"},"content":"                + System.lineSeparator() + \"-----------------------------------------------------------------------\"","lastModifiedDate":"2021-10-24"},{"lineNumber":199,"author":{"gitId":"antrikshv"},"content":"                + System.lineSeparator() + \"title/[NEW NAME]   \"","lastModifiedDate":"2021-10-24"},{"lineNumber":200,"author":{"gitId":"antrikshv"},"content":"                + System.lineSeparator() + \"deadline/[NEW DATE[d/dd-MM-yyyy HHmm]]\"","lastModifiedDate":"2021-10-24"},{"lineNumber":201,"author":{"gitId":"antrikshv"},"content":"                + System.lineSeparator() + \"description/[NEW DESCRIPTION]\"","lastModifiedDate":"2021-10-24"},{"lineNumber":202,"author":{"gitId":"antrikshv"},"content":"                + System.lineSeparator() + \"member/[MEMBER INDEX]\"","lastModifiedDate":"2021-10-24"},{"lineNumber":203,"author":{"gitId":"antrikshv"},"content":"                + System.lineSeparator() + \"remove/[MEMBER INDEX]\"","lastModifiedDate":"2021-10-26"},{"lineNumber":204,"author":{"gitId":"antrikshv"},"content":"                + System.lineSeparator()","lastModifiedDate":"2021-10-24"},{"lineNumber":205,"author":{"gitId":"antrikshv"},"content":"                + \"You may type more then one update at a given time but separate them with a [\u003e]\"","lastModifiedDate":"2021-10-24"},{"lineNumber":206,"author":{"gitId":"antrikshv"},"content":"                + System.lineSeparator() + Ui.getLineBreak());","lastModifiedDate":"2021-10-24"},{"lineNumber":207,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":208,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":209,"author":{"gitId":"antrikshv"},"content":"    protected void updateDeadline(String attribute, Task taskToBeUpdated) throws DukeException {","lastModifiedDate":"2021-10-24"},{"lineNumber":210,"author":{"gitId":"antrikshv"},"content":"        try {","lastModifiedDate":"2021-10-10"},{"lineNumber":211,"author":{"gitId":"antrikshv"},"content":"            LocalDateTime newDate \u003d Parser.convertDateTime(attribute);","lastModifiedDate":"2021-10-24"},{"lineNumber":212,"author":{"gitId":"antrikshv"},"content":"            if (newDate.isBefore(LocalDateTime.now())) {","lastModifiedDate":"2021-10-24"},{"lineNumber":213,"author":{"gitId":"antrikshv"},"content":"                throw new DukeException(\"sorry a mortal cannot travel to the past\");","lastModifiedDate":"2021-10-24"},{"lineNumber":214,"author":{"gitId":"antrikshv"},"content":"            }","lastModifiedDate":"2021-10-10"},{"lineNumber":215,"author":{"gitId":"antrikshv"},"content":"            taskToBeUpdated.setDateTime(Parser.convertDateTime(attribute));","lastModifiedDate":"2021-10-24"},{"lineNumber":216,"author":{"gitId":"antrikshv"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-10-10"},{"lineNumber":217,"author":{"gitId":"antrikshv"},"content":"            System.out.println(\"incorrect format please ensure format for date is of [d/dd-MM-yyyy HHmm]\");","lastModifiedDate":"2021-10-10"},{"lineNumber":218,"author":{"gitId":"antrikshv"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":219,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":220,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":221,"author":{"gitId":"antrikshv"},"content":"    private void postUpdateMessage() {","lastModifiedDate":"2021-10-24"},{"lineNumber":222,"author":{"gitId":"antrikshv"},"content":"        System.out.println(\"Here is the Event\"","lastModifiedDate":"2021-10-26"},{"lineNumber":223,"author":{"gitId":"antrikshv"},"content":"                + System.lineSeparator()","lastModifiedDate":"2021-10-26"},{"lineNumber":224,"author":{"gitId":"antrikshv"},"content":"                + \"---------------------------\");","lastModifiedDate":"2021-10-26"},{"lineNumber":225,"author":{"gitId":"antrikshv"},"content":"        Ui.printUpdatedEvent(eventToBeUpdated);","lastModifiedDate":"2021-10-26"},{"lineNumber":226,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":227,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":228,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":229,"author":{"gitId":"antrikshv"},"content":"    protected void updateDate(String attribute) throws DukeException {","lastModifiedDate":"2021-10-24"},{"lineNumber":230,"author":{"gitId":"antrikshv"},"content":"        try {","lastModifiedDate":"2021-10-10"},{"lineNumber":231,"author":{"gitId":"antrikshv"},"content":"            LocalDateTime newDate \u003d Parser.convertDateTime(attribute);","lastModifiedDate":"2021-10-24"},{"lineNumber":232,"author":{"gitId":"antrikshv"},"content":"            if (newDate.isBefore(LocalDateTime.now())) {","lastModifiedDate":"2021-10-24"},{"lineNumber":233,"author":{"gitId":"antrikshv"},"content":"                throw new DukeException(\"sorry a mortal cannot travel to the past\");","lastModifiedDate":"2021-10-24"},{"lineNumber":234,"author":{"gitId":"antrikshv"},"content":"            }","lastModifiedDate":"2021-10-10"},{"lineNumber":235,"author":{"gitId":"antrikshv"},"content":"            eventToBeUpdated.setDateTime(Parser.convertDateTime(attribute));","lastModifiedDate":"2021-10-24"},{"lineNumber":236,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":237,"author":{"gitId":"antrikshv"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-10-24"},{"lineNumber":238,"author":{"gitId":"antrikshv"},"content":"            System.out.println(\"incorrect format please ensure format for date is of [d/dd-MM-yyyy HHmm]\");","lastModifiedDate":"2021-10-24"},{"lineNumber":239,"author":{"gitId":"antrikshv"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":240,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":241,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":242,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":243,"author":{"gitId":"antrikshv"},"content":"    protected void updateBudget(String attribute) {","lastModifiedDate":"2021-10-24"},{"lineNumber":244,"author":{"gitId":"antrikshv"},"content":"        try {","lastModifiedDate":"2021-10-24"},{"lineNumber":245,"author":{"gitId":"antrikshv"},"content":"            double newBudget \u003d Double.parseDouble(attribute);","lastModifiedDate":"2021-10-24"},{"lineNumber":246,"author":{"gitId":"antrikshv"},"content":"            eventToBeUpdated.setBudget(newBudget);","lastModifiedDate":"2021-10-24"},{"lineNumber":247,"author":{"gitId":"antrikshv"},"content":"        } catch (NullPointerException e) {","lastModifiedDate":"2021-10-24"},{"lineNumber":248,"author":{"gitId":"antrikshv"},"content":"            System.out.println(\"please ensure budget is a double\");","lastModifiedDate":"2021-10-24"},{"lineNumber":249,"author":{"gitId":"antrikshv"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":250,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":251,"author":{"gitId":"antrikshv"},"content":"}","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"antrikshv":250,"crabnuggets":1}},{"path":"src/main/java/seedu/duke/exceptions/DukeException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"alwinangys"},"content":"package seedu.duke.exceptions;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"alwinangys"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"alwinangys"},"content":"    public DukeException(String message) {","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"alwinangys"},"content":"        super(message);","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"alwinangys"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"alwinangys"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"alwinangys":8}},{"path":"src/main/java/seedu/duke/items/Event.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"antrikshv"},"content":"package seedu.duke.items;","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"antrikshv"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-10-04"},{"lineNumber":4,"author":{"gitId":"crabnuggets"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-17"},{"lineNumber":5,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":6,"author":{"gitId":"antrikshv"},"content":"public class Event extends Item {","lastModifiedDate":"2021-10-04"},{"lineNumber":7,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"Alvinlj00"},"content":"    private final ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"alwinangys"},"content":"    private String venue;","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"alwinangys"},"content":"    private double budget;","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"alwinangys"},"content":"    public static final String EVENT_DATA_ARGS_DELIMITER \u003d \"\\\\s*\\\\|\\\\s*\";","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"Alvinlj00"},"content":"    public Event(String title, String description, LocalDateTime dateTime, String venue, double budget) {","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"Alvinlj00"},"content":"        super(\"event\", title, description, dateTime);","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"alwinangys"},"content":"        this.venue \u003d venue;","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"alwinangys"},"content":"        this.budget \u003d budget;","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"alwinangys"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"antrikshv"},"content":"    public void setVenue(String venue) {","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"antrikshv"},"content":"        this.venue \u003d venue;","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"crabnuggets"},"content":"    public void setBudget(Double budget) {","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"crabnuggets"},"content":"        this.budget \u003d budget;","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"crabnuggets"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"crabnuggets"},"content":"    public String getVenue() {","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"crabnuggets"},"content":"        return venue;","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":31,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":32,"author":{"gitId":"alwinangys"},"content":"    public double getBudget() {","lastModifiedDate":"2021-10-06"},{"lineNumber":33,"author":{"gitId":"alwinangys"},"content":"        return budget;","lastModifiedDate":"2021-10-06"},{"lineNumber":34,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":35,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":36,"author":{"gitId":"Alvinlj00"},"content":"    public void addToTaskList(Task task) {","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"Alvinlj00"},"content":"        taskList.add(task);","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"Alvinlj00"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"Alvinlj00"},"content":"    public Task getFromTaskList(int index) {","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"Alvinlj00"},"content":"        return taskList.get(index);","lastModifiedDate":"2021-10-21"},{"lineNumber":42,"author":{"gitId":"Alvinlj00"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":43,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":44,"author":{"gitId":"crabnuggets"},"content":"    public ArrayList\u003cTask\u003e getTaskList() {","lastModifiedDate":"2021-10-17"},{"lineNumber":45,"author":{"gitId":"crabnuggets"},"content":"        return taskList;","lastModifiedDate":"2021-10-17"},{"lineNumber":46,"author":{"gitId":"crabnuggets"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":47,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":48,"author":{"gitId":"alwinangys"},"content":"    public String getTaskListAsString() {","lastModifiedDate":"2021-10-26"},{"lineNumber":49,"author":{"gitId":"alwinangys"},"content":"        StringBuilder tasks \u003d new StringBuilder();","lastModifiedDate":"2021-10-26"},{"lineNumber":50,"author":{"gitId":"alwinangys"},"content":"        int counter \u003d 1;","lastModifiedDate":"2021-10-26"},{"lineNumber":51,"author":{"gitId":"alwinangys"},"content":"        for (Task task: taskList) {","lastModifiedDate":"2021-10-26"},{"lineNumber":52,"author":{"gitId":"alwinangys"},"content":"            tasks.append(counter).append(\". \");","lastModifiedDate":"2021-10-26"},{"lineNumber":53,"author":{"gitId":"alwinangys"},"content":"            tasks.append(task.getTitle()).append(\"\\n\");","lastModifiedDate":"2021-10-26"},{"lineNumber":54,"author":{"gitId":"alwinangys"},"content":"            counter++;","lastModifiedDate":"2021-10-28"},{"lineNumber":55,"author":{"gitId":"alwinangys"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":56,"author":{"gitId":"alwinangys"},"content":"        return tasks.toString();","lastModifiedDate":"2021-10-26"},{"lineNumber":57,"author":{"gitId":"alwinangys"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":58,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":59,"author":{"gitId":"crabnuggets"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":60,"author":{"gitId":"crabnuggets"},"content":"    public String toString() {","lastModifiedDate":"2021-10-10"},{"lineNumber":61,"author":{"gitId":"Alvinlj00"},"content":"        return String.format(\"[E][%s] %s (at: %s)\", this.getStatusIcon(), this.getTitle(), this.getStringDateTime());","lastModifiedDate":"2021-10-11"},{"lineNumber":62,"author":{"gitId":"crabnuggets"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":63,"author":{"gitId":"antrikshv"},"content":"}","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"antrikshv":13,"Alvinlj00":12,"crabnuggets":15,"alwinangys":23}},{"path":"src/main/java/seedu/duke/items/Item.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"antrikshv"},"content":"package seedu.duke.items;","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"antrikshv"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"crabnuggets"},"content":"import seedu.duke.parser.Parser;","lastModifiedDate":"2021-10-23"},{"lineNumber":6,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"alwinangys"},"content":"public abstract class Item {","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"alwinangys"},"content":"    protected String type;","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"alwinangys"},"content":"    protected String title;","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"alwinangys"},"content":"    protected String description;","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"Alvinlj00"},"content":"    protected LocalDateTime dateTime;","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"Alvinlj00"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"Alvinlj00"},"content":"    public Item(String type, String title, String description, LocalDateTime dateTime) {","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"alwinangys"},"content":"        this.type \u003d type;","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"alwinangys"},"content":"        this.title \u003d title;","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"alwinangys"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"Alvinlj00"},"content":"        this.dateTime \u003d dateTime;","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"Alvinlj00"},"content":"        isDone \u003d false;","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"alwinangys"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"antrikshv"},"content":"    public void setTitle(String title) {","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"antrikshv"},"content":"        this.title \u003d title;","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"antrikshv"},"content":"    public void setDescription(String description) {","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"antrikshv"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":31,"author":{"gitId":"Alvinlj00"},"content":"    public void setDateTime(LocalDateTime dateTime) {","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"Alvinlj00"},"content":"        this.dateTime \u003d dateTime;","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"Alvinlj00"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"Alvinlj00"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"Alvinlj00"},"content":"        isDone \u003d true;","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"Alvinlj00"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":39,"author":{"gitId":"Alvinlj00"},"content":"    public void undo() {","lastModifiedDate":"2021-10-11"},{"lineNumber":40,"author":{"gitId":"Alvinlj00"},"content":"        isDone \u003d false;","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"Alvinlj00"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":43,"author":{"gitId":"alwinangys"},"content":"    public String getItemType() {","lastModifiedDate":"2021-10-08"},{"lineNumber":44,"author":{"gitId":"alwinangys"},"content":"        return type;","lastModifiedDate":"2021-10-08"},{"lineNumber":45,"author":{"gitId":"alwinangys"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":46,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":47,"author":{"gitId":"alwinangys"},"content":"    public String getTitle() {","lastModifiedDate":"2021-10-06"},{"lineNumber":48,"author":{"gitId":"alwinangys"},"content":"        return title;","lastModifiedDate":"2021-10-06"},{"lineNumber":49,"author":{"gitId":"alwinangys"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":50,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":51,"author":{"gitId":"alwinangys"},"content":"    public String getDescription() {","lastModifiedDate":"2021-10-08"},{"lineNumber":52,"author":{"gitId":"alwinangys"},"content":"        return description;","lastModifiedDate":"2021-10-08"},{"lineNumber":53,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":54,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":55,"author":{"gitId":"Alvinlj00"},"content":"    public LocalDateTime getDateTime() {","lastModifiedDate":"2021-10-11"},{"lineNumber":56,"author":{"gitId":"Alvinlj00"},"content":"        return dateTime;","lastModifiedDate":"2021-10-11"},{"lineNumber":57,"author":{"gitId":"Alvinlj00"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":58,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":59,"author":{"gitId":"Alvinlj00"},"content":"    public String getStringDateTime() {","lastModifiedDate":"2021-10-11"},{"lineNumber":60,"author":{"gitId":"Alvinlj00"},"content":"        return Parser.convertDateTime(dateTime);","lastModifiedDate":"2021-10-11"},{"lineNumber":61,"author":{"gitId":"Alvinlj00"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":62,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":63,"author":{"gitId":"Alvinlj00"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-10-11"},{"lineNumber":64,"author":{"gitId":"Alvinlj00"},"content":"        return isDone ? \"X\" : \" \";","lastModifiedDate":"2021-10-11"},{"lineNumber":65,"author":{"gitId":"Alvinlj00"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":66,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":67,"author":{"gitId":"crabnuggets"},"content":"    public boolean getIsDone() {","lastModifiedDate":"2021-10-12"},{"lineNumber":68,"author":{"gitId":"crabnuggets"},"content":"        return isDone;","lastModifiedDate":"2021-10-12"},{"lineNumber":69,"author":{"gitId":"crabnuggets"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":70,"author":{"gitId":"antrikshv"},"content":"}","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"antrikshv":15,"Alvinlj00":29,"crabnuggets":5,"alwinangys":21}},{"path":"src/main/java/seedu/duke/items/Task.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"antrikshv"},"content":"package seedu.duke.items;","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"crabnuggets"},"content":"import seedu.duke.items.characteristics.Member;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"antrikshv"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-10-04"},{"lineNumber":6,"author":{"gitId":"crabnuggets"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":8,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"antrikshv"},"content":"public class Task extends Item {","lastModifiedDate":"2021-10-04"},{"lineNumber":10,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"alwinangys"},"content":"    public static final String TASK_DATA_ARGS_DELIMITER \u003d \"\\\\s*\\\\|\\\\s*\";","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"crabnuggets"},"content":"    public ArrayList\u003cMember\u003e memberList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"crabnuggets"},"content":"    private Event event;","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"Alvinlj00"},"content":"    public Task(String title, String description, LocalDateTime deadline) {","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"Alvinlj00"},"content":"        super(\"task\", title, description, deadline);","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"crabnuggets"},"content":"    public Task(String title, String description, LocalDateTime dateTime, ArrayList\u003cMember\u003e memberList) {","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"crabnuggets"},"content":"        super(\"task\", title, description, dateTime);","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"crabnuggets"},"content":"        this.memberList \u003d memberList;","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"crabnuggets"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"crabnuggets"},"content":"    public Task(String title, String description, LocalDateTime deadline, ArrayList\u003cMember\u003e memberList, Event event) {","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"crabnuggets"},"content":"        super(\"task\", title, description, deadline);","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"crabnuggets"},"content":"        this.memberList \u003d memberList;","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"crabnuggets"},"content":"        this.event \u003d event;","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"crabnuggets"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"crabnuggets"},"content":"    public Event getEvent() {","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"crabnuggets"},"content":"        return event;","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"crabnuggets"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"crabnuggets"},"content":"    public void setEvent(Event event) {","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"crabnuggets"},"content":"        this.event \u003d event;","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"crabnuggets"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":38,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":39,"author":{"gitId":"Alvinlj00"},"content":"    public void addMember(Member member) {","lastModifiedDate":"2021-10-25"},{"lineNumber":40,"author":{"gitId":"Alvinlj00"},"content":"        memberList.add(member);","lastModifiedDate":"2021-10-25"},{"lineNumber":41,"author":{"gitId":"Alvinlj00"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":42,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":43,"author":{"gitId":"crabnuggets"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":44,"author":{"gitId":"crabnuggets"},"content":"    public String toString() {","lastModifiedDate":"2021-10-10"},{"lineNumber":45,"author":{"gitId":"Alvinlj00"},"content":"        return String.format(\"[T][%s] %s (by: %s)\", this.getStatusIcon(), this.getTitle(), this.getStringDateTime());","lastModifiedDate":"2021-10-11"},{"lineNumber":46,"author":{"gitId":"crabnuggets"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":47,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":48,"author":{"gitId":"antrikshv"},"content":"    public ArrayList\u003cMember\u003e getMemberList() {","lastModifiedDate":"2021-10-24"},{"lineNumber":49,"author":{"gitId":"antrikshv"},"content":"        return memberList;","lastModifiedDate":"2021-10-24"},{"lineNumber":50,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":51,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":52,"author":{"gitId":"antrikshv"},"content":"    public Member getFromMemberList(int index) {","lastModifiedDate":"2021-10-24"},{"lineNumber":53,"author":{"gitId":"antrikshv"},"content":"        return memberList.get(index);","lastModifiedDate":"2021-10-24"},{"lineNumber":54,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":55,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":56,"author":{"gitId":"alwinangys"},"content":"    public String getMemberListAsString() {","lastModifiedDate":"2021-10-26"},{"lineNumber":57,"author":{"gitId":"alwinangys"},"content":"        StringBuilder members \u003d new StringBuilder();","lastModifiedDate":"2021-10-26"},{"lineNumber":58,"author":{"gitId":"alwinangys"},"content":"        int counter \u003d 1;","lastModifiedDate":"2021-10-26"},{"lineNumber":59,"author":{"gitId":"alwinangys"},"content":"        for (Member member : memberList) {","lastModifiedDate":"2021-10-26"},{"lineNumber":60,"author":{"gitId":"alwinangys"},"content":"            members.append(counter).append(\" \");","lastModifiedDate":"2021-10-26"},{"lineNumber":61,"author":{"gitId":"alwinangys"},"content":"            members.append(member).append(\"\\n\");","lastModifiedDate":"2021-10-26"},{"lineNumber":62,"author":{"gitId":"alwinangys"},"content":"            counter++;","lastModifiedDate":"2021-10-28"},{"lineNumber":63,"author":{"gitId":"alwinangys"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":64,"author":{"gitId":"alwinangys"},"content":"        return members.toString();","lastModifiedDate":"2021-10-26"},{"lineNumber":65,"author":{"gitId":"alwinangys"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":66,"author":{"gitId":"antrikshv"},"content":"}","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"antrikshv":15,"Alvinlj00":8,"crabnuggets":29,"alwinangys":14}},{"path":"src/main/java/seedu/duke/items/characteristics/Member.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Alvinlj00"},"content":"package seedu.duke.items.characteristics;","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":3,"author":{"gitId":"Alvinlj00"},"content":"import seedu.duke.items.mainlists.EventCatalog;","lastModifiedDate":"2021-10-23"},{"lineNumber":4,"author":{"gitId":"Alvinlj00"},"content":"import seedu.duke.items.Task;","lastModifiedDate":"2021-10-23"},{"lineNumber":5,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":6,"author":{"gitId":"Alvinlj00"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"Alvinlj00"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"Alvinlj00"},"content":"public class Member {","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":11,"author":{"gitId":"Alvinlj00"},"content":"    private String name;","lastModifiedDate":"2021-10-23"},{"lineNumber":12,"author":{"gitId":"crabnuggets"},"content":"    private ArrayList\u003cTask\u003e assignedTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"crabnuggets"},"content":"    public static final String MEMBER_DATA_ARGS_DELIMITER \u003d \"\\\\s*\\\\|\\\\s*\";","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":16,"author":{"gitId":"Alvinlj00"},"content":"    public Member(String name) {","lastModifiedDate":"2021-10-23"},{"lineNumber":17,"author":{"gitId":"Alvinlj00"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-10-23"},{"lineNumber":18,"author":{"gitId":"Alvinlj00"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":19,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":20,"author":{"gitId":"Alvinlj00"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2021-10-23"},{"lineNumber":21,"author":{"gitId":"Alvinlj00"},"content":"        assignedTasks.add(task);","lastModifiedDate":"2021-10-23"},{"lineNumber":22,"author":{"gitId":"Alvinlj00"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":23,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":24,"author":{"gitId":"Alvinlj00"},"content":"    public void deleteTask(int index) {","lastModifiedDate":"2021-10-23"},{"lineNumber":25,"author":{"gitId":"Alvinlj00"},"content":"        assignedTasks.remove(index);","lastModifiedDate":"2021-10-23"},{"lineNumber":26,"author":{"gitId":"Alvinlj00"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":27,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":28,"author":{"gitId":"Alvinlj00"},"content":"    public String getName() {","lastModifiedDate":"2021-10-23"},{"lineNumber":29,"author":{"gitId":"Alvinlj00"},"content":"        return name;","lastModifiedDate":"2021-10-23"},{"lineNumber":30,"author":{"gitId":"Alvinlj00"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":31,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":32,"author":{"gitId":"Alvinlj00"},"content":"    public String getTasks() {","lastModifiedDate":"2021-10-23"},{"lineNumber":33,"author":{"gitId":"Alvinlj00"},"content":"        StringBuilder tasks \u003d new StringBuilder();","lastModifiedDate":"2021-10-23"},{"lineNumber":34,"author":{"gitId":"Alvinlj00"},"content":"        for (Task assignedTask : assignedTasks) {","lastModifiedDate":"2021-10-23"},{"lineNumber":35,"author":{"gitId":"Alvinlj00"},"content":"            tasks.append(assignedTask).append(\"\\n\");","lastModifiedDate":"2021-10-23"},{"lineNumber":36,"author":{"gitId":"Alvinlj00"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":37,"author":{"gitId":"Alvinlj00"},"content":"        return tasks.toString();","lastModifiedDate":"2021-10-23"},{"lineNumber":38,"author":{"gitId":"Alvinlj00"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":39,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":40,"author":{"gitId":"Alvinlj00"},"content":"    public void addToAssignedTasks(Task task) {","lastModifiedDate":"2021-10-25"},{"lineNumber":41,"author":{"gitId":"Alvinlj00"},"content":"        assignedTasks.add(task);","lastModifiedDate":"2021-10-25"},{"lineNumber":42,"author":{"gitId":"Alvinlj00"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":43,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":44,"author":{"gitId":"Alvinlj00"},"content":"    public void sortTasks() {","lastModifiedDate":"2021-10-23"},{"lineNumber":45,"author":{"gitId":"Alvinlj00"},"content":"        EventCatalog.bubbleSortItems(assignedTasks);","lastModifiedDate":"2021-10-23"},{"lineNumber":46,"author":{"gitId":"Alvinlj00"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":47,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":48,"author":{"gitId":"antrikshv"},"content":"    public void setName(String name) {","lastModifiedDate":"2021-10-24"},{"lineNumber":49,"author":{"gitId":"antrikshv"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-10-24"},{"lineNumber":50,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":51,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":52,"author":{"gitId":"Alvinlj00"},"content":"    public static Comparator\u003cMember\u003e NameComparator \u003d (member1, member2) -\u003e {","lastModifiedDate":"2021-10-25"},{"lineNumber":53,"author":{"gitId":"Alvinlj00"},"content":"        String name1 \u003d member1.getName().toUpperCase();","lastModifiedDate":"2021-10-25"},{"lineNumber":54,"author":{"gitId":"Alvinlj00"},"content":"        String name2 \u003d member2.getName().toUpperCase();","lastModifiedDate":"2021-10-25"},{"lineNumber":55,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":56,"author":{"gitId":"Alvinlj00"},"content":"        return name1.compareTo(name2);","lastModifiedDate":"2021-10-25"},{"lineNumber":57,"author":{"gitId":"Alvinlj00"},"content":"    };","lastModifiedDate":"2021-10-25"},{"lineNumber":58,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":59,"author":{"gitId":"Alvinlj00"},"content":"    @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":60,"author":{"gitId":"Alvinlj00"},"content":"    public String toString() {","lastModifiedDate":"2021-10-23"},{"lineNumber":61,"author":{"gitId":"Alvinlj00"},"content":"        return name;","lastModifiedDate":"2021-10-23"},{"lineNumber":62,"author":{"gitId":"Alvinlj00"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":63,"author":{"gitId":"Alvinlj00"},"content":"}","lastModifiedDate":"2021-10-23"}],"authorContributionMap":{"antrikshv":4,"Alvinlj00":56,"crabnuggets":3}},{"path":"src/main/java/seedu/duke/items/mainlists/EventCatalog.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Alvinlj00"},"content":"package seedu.duke.items.mainlists;","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":3,"author":{"gitId":"Alvinlj00"},"content":"import seedu.duke.items.Event;","lastModifiedDate":"2021-10-23"},{"lineNumber":4,"author":{"gitId":"Alvinlj00"},"content":"import seedu.duke.items.Item;","lastModifiedDate":"2021-10-23"},{"lineNumber":5,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":6,"author":{"gitId":"Alvinlj00"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"Alvinlj00"},"content":"public class EventCatalog extends ArrayList\u003cEvent\u003e {","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"Alvinlj00"},"content":"    private static EventCatalog eventCatalog \u003d null;","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":12,"author":{"gitId":"Alvinlj00"},"content":"    private EventCatalog() {","lastModifiedDate":"2021-10-23"},{"lineNumber":13,"author":{"gitId":"Alvinlj00"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":14,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":15,"author":{"gitId":"Alvinlj00"},"content":"    public static EventCatalog getInstance() {","lastModifiedDate":"2021-10-23"},{"lineNumber":16,"author":{"gitId":"Alvinlj00"},"content":"        if (eventCatalog \u003d\u003d null) {","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"Alvinlj00"},"content":"            eventCatalog \u003d new EventCatalog();","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"Alvinlj00"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":19,"author":{"gitId":"Alvinlj00"},"content":"        return eventCatalog;","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"Alvinlj00"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":21,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":22,"author":{"gitId":"Alvinlj00"},"content":"    private static \u003cT\u003e void swap(int i, ArrayList\u003cT\u003e list) {","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"Alvinlj00"},"content":"        T t;","lastModifiedDate":"2021-10-23"},{"lineNumber":24,"author":{"gitId":"Alvinlj00"},"content":"        t \u003d list.get(i);","lastModifiedDate":"2021-10-23"},{"lineNumber":25,"author":{"gitId":"Alvinlj00"},"content":"        list.set(i, list.get(i + 1));","lastModifiedDate":"2021-10-23"},{"lineNumber":26,"author":{"gitId":"Alvinlj00"},"content":"        list.set(i + 1, t);","lastModifiedDate":"2021-10-23"},{"lineNumber":27,"author":{"gitId":"Alvinlj00"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":28,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":29,"author":{"gitId":"Alvinlj00"},"content":"    public static \u003cT extends Item\u003e void bubbleSortItems(ArrayList\u003cT\u003e list) {","lastModifiedDate":"2021-10-23"},{"lineNumber":30,"author":{"gitId":"Alvinlj00"},"content":"        for (int j \u003d 0; j \u003c list.size() - 1; j++) {","lastModifiedDate":"2021-10-23"},{"lineNumber":31,"author":{"gitId":"Alvinlj00"},"content":"            for (int i \u003d 0; i \u003c list.size() - j - 1; i++) {","lastModifiedDate":"2021-10-23"},{"lineNumber":32,"author":{"gitId":"Alvinlj00"},"content":"                if (list.get(i + 1).getDateTime().isBefore(list.get(i).getDateTime())) {","lastModifiedDate":"2021-10-23"},{"lineNumber":33,"author":{"gitId":"Alvinlj00"},"content":"                    swap(i, list);","lastModifiedDate":"2021-10-23"},{"lineNumber":34,"author":{"gitId":"Alvinlj00"},"content":"                }","lastModifiedDate":"2021-10-23"},{"lineNumber":35,"author":{"gitId":"Alvinlj00"},"content":"            }","lastModifiedDate":"2021-10-23"},{"lineNumber":36,"author":{"gitId":"Alvinlj00"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":37,"author":{"gitId":"Alvinlj00"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":38,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":39,"author":{"gitId":"Alvinlj00"},"content":"    public void sortCatalog() {","lastModifiedDate":"2021-10-23"},{"lineNumber":40,"author":{"gitId":"Alvinlj00"},"content":"        bubbleSortItems(eventCatalog);","lastModifiedDate":"2021-10-25"},{"lineNumber":41,"author":{"gitId":"Alvinlj00"},"content":"        for (Event event : eventCatalog) {","lastModifiedDate":"2021-10-25"},{"lineNumber":42,"author":{"gitId":"Alvinlj00"},"content":"            bubbleSortItems(event.getTaskList());","lastModifiedDate":"2021-10-23"},{"lineNumber":43,"author":{"gitId":"Alvinlj00"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":44,"author":{"gitId":"Alvinlj00"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":45,"author":{"gitId":"Alvinlj00"},"content":"}","lastModifiedDate":"2021-10-23"}],"authorContributionMap":{"Alvinlj00":45}},{"path":"src/main/java/seedu/duke/items/mainlists/MemberRoster.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Alvinlj00"},"content":"package seedu.duke.items.mainlists;","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":3,"author":{"gitId":"Alvinlj00"},"content":"import seedu.duke.items.characteristics.Member;","lastModifiedDate":"2021-10-23"},{"lineNumber":4,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":5,"author":{"gitId":"Alvinlj00"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-23"},{"lineNumber":6,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"Alvinlj00"},"content":"public class MemberRoster extends ArrayList\u003cMember\u003e {","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"Alvinlj00"},"content":"    private static MemberRoster memberRoster \u003d null;","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":11,"author":{"gitId":"Alvinlj00"},"content":"    private MemberRoster() {","lastModifiedDate":"2021-10-23"},{"lineNumber":12,"author":{"gitId":"Alvinlj00"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":13,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":14,"author":{"gitId":"Alvinlj00"},"content":"    public static MemberRoster getInstance() {","lastModifiedDate":"2021-10-23"},{"lineNumber":15,"author":{"gitId":"Alvinlj00"},"content":"        if (memberRoster \u003d\u003d null) {","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"Alvinlj00"},"content":"            memberRoster \u003d new MemberRoster();","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"Alvinlj00"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":18,"author":{"gitId":"Alvinlj00"},"content":"        return memberRoster;","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"Alvinlj00"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"Alvinlj00"},"content":"    public void sortRoster() {","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"Alvinlj00"},"content":"        memberRoster.sort(Member.NameComparator);","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"Alvinlj00"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":24,"author":{"gitId":"Alvinlj00"},"content":"}","lastModifiedDate":"2021-10-23"}],"authorContributionMap":{"Alvinlj00":24}},{"path":"src/main/java/seedu/duke/parser/MemberParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"crabnuggets"},"content":"package seedu.duke.parser;","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":3,"author":{"gitId":"crabnuggets"},"content":"import seedu.duke.exceptions.DukeException;","lastModifiedDate":"2021-10-23"},{"lineNumber":4,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":5,"author":{"gitId":"crabnuggets"},"content":"public class MemberParser {","lastModifiedDate":"2021-10-23"},{"lineNumber":6,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"crabnuggets"},"content":"    private static final String INTER_MEMBER_DELIMITER \u003d \" +\";","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"crabnuggets"},"content":"    private static final String NAME_SPACER \u003d \"_\";","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"crabnuggets"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":11,"author":{"gitId":"crabnuggets"},"content":"     * Parses user input involving the description of member names. For example,","lastModifiedDate":"2021-10-23"},{"lineNumber":12,"author":{"gitId":"crabnuggets"},"content":"     * \"John_Doe Jane_Doe\" will return a String[] containing {\"John Doe\", \"Jane Doe\"}","lastModifiedDate":"2021-10-23"},{"lineNumber":13,"author":{"gitId":"crabnuggets"},"content":"     *","lastModifiedDate":"2021-10-23"},{"lineNumber":14,"author":{"gitId":"crabnuggets"},"content":"     * @param userInput User input containing the names to parse","lastModifiedDate":"2021-10-23"},{"lineNumber":15,"author":{"gitId":"crabnuggets"},"content":"     * @return A String[] of names that have been parsed","lastModifiedDate":"2021-10-23"},{"lineNumber":16,"author":{"gitId":"crabnuggets"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":17,"author":{"gitId":"crabnuggets"},"content":"    public static String[] parseMemberCommand(String userInput) {","lastModifiedDate":"2021-10-23"},{"lineNumber":18,"author":{"gitId":"crabnuggets"},"content":"        try {","lastModifiedDate":"2021-10-23"},{"lineNumber":19,"author":{"gitId":"crabnuggets"},"content":"            verifyMemberCommand(userInput);","lastModifiedDate":"2021-10-23"},{"lineNumber":20,"author":{"gitId":"crabnuggets"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-10-23"},{"lineNumber":21,"author":{"gitId":"crabnuggets"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2021-10-23"},{"lineNumber":22,"author":{"gitId":"crabnuggets"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":23,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":24,"author":{"gitId":"crabnuggets"},"content":"        String[] memberNames \u003d userInput.split(INTER_MEMBER_DELIMITER);","lastModifiedDate":"2021-10-23"},{"lineNumber":25,"author":{"gitId":"crabnuggets"},"content":"        for (int i \u003d 0; i \u003c memberNames.length; i++) {","lastModifiedDate":"2021-10-23"},{"lineNumber":26,"author":{"gitId":"crabnuggets"},"content":"            memberNames[i] \u003d memberNames[i].replaceAll(NAME_SPACER, \" \");","lastModifiedDate":"2021-10-23"},{"lineNumber":27,"author":{"gitId":"crabnuggets"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":28,"author":{"gitId":"crabnuggets"},"content":"        return memberNames;","lastModifiedDate":"2021-10-23"},{"lineNumber":29,"author":{"gitId":"crabnuggets"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":30,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":31,"author":{"gitId":"crabnuggets"},"content":"    private static void verifyMemberCommand(String userInput) throws DukeException {","lastModifiedDate":"2021-10-23"},{"lineNumber":32,"author":{"gitId":"crabnuggets"},"content":"        if (userInput.isBlank()) {","lastModifiedDate":"2021-10-23"},{"lineNumber":33,"author":{"gitId":"crabnuggets"},"content":"            throw new DukeException(\"Please give me at least a name! E.g. JOHN_DOE \");","lastModifiedDate":"2021-10-23"},{"lineNumber":34,"author":{"gitId":"crabnuggets"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":35,"author":{"gitId":"crabnuggets"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":36,"author":{"gitId":"crabnuggets"},"content":"}","lastModifiedDate":"2021-10-23"}],"authorContributionMap":{"crabnuggets":36}},{"path":"src/main/java/seedu/duke/parser/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"crabnuggets"},"content":"package seedu.duke.parser;","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"crabnuggets"},"content":"import seedu.duke.Duke;","lastModifiedDate":"2021-10-23"},{"lineNumber":5,"author":{"gitId":"crabnuggets"},"content":"import seedu.duke.Ui;","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"antrikshv"},"content":"import seedu.duke.commands.AddCommand;","lastModifiedDate":"2021-10-04"},{"lineNumber":7,"author":{"gitId":"antrikshv"},"content":"import seedu.duke.commands.ByeCommand;","lastModifiedDate":"2021-10-04"},{"lineNumber":8,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"Alvinlj00"},"content":"import seedu.duke.commands.DoneUndoCommand;","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"antrikshv"},"content":"import seedu.duke.commands.HelpCommand;","lastModifiedDate":"2021-10-04"},{"lineNumber":11,"author":{"gitId":"antrikshv"},"content":"import seedu.duke.commands.SelectCommand;","lastModifiedDate":"2021-10-04"},{"lineNumber":12,"author":{"gitId":"antrikshv"},"content":"import seedu.duke.commands.Command;","lastModifiedDate":"2021-10-04"},{"lineNumber":13,"author":{"gitId":"antrikshv"},"content":"import seedu.duke.commands.DeleteCommand;","lastModifiedDate":"2021-10-04"},{"lineNumber":14,"author":{"gitId":"alwinangys"},"content":"import seedu.duke.commands.FindCommand;","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"antrikshv"},"content":"import seedu.duke.commands.ListCommand;","lastModifiedDate":"2021-10-04"},{"lineNumber":16,"author":{"gitId":"antrikshv"},"content":"import seedu.duke.commands.NextCommand;","lastModifiedDate":"2021-10-04"},{"lineNumber":17,"author":{"gitId":"alwinangys"},"content":"import seedu.duke.commands.UpdateCommand;","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"crabnuggets"},"content":"import seedu.duke.exceptions.DukeException;","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"antrikshv"},"content":"import seedu.duke.items.Item;","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":21,"author":{"gitId":"antrikshv"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"antrikshv"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"antrikshv"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":25,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":26,"author":{"gitId":"antrikshv"},"content":"public class Parser {","lastModifiedDate":"2021-10-04"},{"lineNumber":27,"author":{"gitId":"antrikshv"},"content":"    protected static DateTimeFormatter formatter1 \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\");","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"antrikshv"},"content":"    protected static DateTimeFormatter formatter2 \u003d DateTimeFormatter.ofPattern(\"d MMM yyyy - HH:mm\");","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"alwinangys"},"content":"    private static int indexOfLastSelectedEvent \u003d -1;","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":31,"author":{"gitId":"crabnuggets"},"content":"    public static Command parseCommand(String response) throws DukeException {","lastModifiedDate":"2021-10-26"},{"lineNumber":32,"author":{"gitId":"antrikshv"},"content":"        String[] command \u003d response.split(\" \");","lastModifiedDate":"2021-10-26"},{"lineNumber":33,"author":{"gitId":"antrikshv"},"content":"        switch (command[0]) {","lastModifiedDate":"2021-10-04"},{"lineNumber":34,"author":{"gitId":"antrikshv"},"content":"        case \"list\":","lastModifiedDate":"2021-10-04"},{"lineNumber":35,"author":{"gitId":"antrikshv"},"content":"            return new ListCommand(command);","lastModifiedDate":"2021-10-04"},{"lineNumber":36,"author":{"gitId":"Alvinlj00"},"content":"        case \"done\":","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"Alvinlj00"},"content":"        case \"undo\":","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"Alvinlj00"},"content":"            return new DoneUndoCommand(command, response);","lastModifiedDate":"2021-10-26"},{"lineNumber":39,"author":{"gitId":"antrikshv"},"content":"        case \"delete\":","lastModifiedDate":"2021-10-04"},{"lineNumber":40,"author":{"gitId":"alwinangys"},"content":"            return new DeleteCommand(command);","lastModifiedDate":"2021-10-06"},{"lineNumber":41,"author":{"gitId":"antrikshv"},"content":"        case \"add\":","lastModifiedDate":"2021-10-04"},{"lineNumber":42,"author":{"gitId":"Alvinlj00"},"content":"            return new AddCommand(command, response);","lastModifiedDate":"2021-10-08"},{"lineNumber":43,"author":{"gitId":"antrikshv"},"content":"        case \"bye\":","lastModifiedDate":"2021-10-04"},{"lineNumber":44,"author":{"gitId":"antrikshv"},"content":"            return new ByeCommand();","lastModifiedDate":"2021-10-04"},{"lineNumber":45,"author":{"gitId":"antrikshv"},"content":"        case \"help\":","lastModifiedDate":"2021-10-04"},{"lineNumber":46,"author":{"gitId":"antrikshv"},"content":"            return new HelpCommand();","lastModifiedDate":"2021-10-04"},{"lineNumber":47,"author":{"gitId":"alwinangys"},"content":"        case \"find\":","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"alwinangys"},"content":"            return new FindCommand(command);","lastModifiedDate":"2021-10-11"},{"lineNumber":49,"author":{"gitId":"alwinangys"},"content":"        case \"select\":","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"alwinangys"},"content":"            return new SelectCommand(command);","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"antrikshv"},"content":"        case \"update\":","lastModifiedDate":"2021-10-04"},{"lineNumber":52,"author":{"gitId":"antrikshv"},"content":"            return new UpdateCommand(command);","lastModifiedDate":"2021-10-04"},{"lineNumber":53,"author":{"gitId":"antrikshv"},"content":"        case \"next\":","lastModifiedDate":"2021-10-04"},{"lineNumber":54,"author":{"gitId":"antrikshv"},"content":"            return new NextCommand(command);","lastModifiedDate":"2021-10-25"},{"lineNumber":55,"author":{"gitId":"antrikshv"},"content":"        default:","lastModifiedDate":"2021-10-04"},{"lineNumber":56,"author":{"gitId":"crabnuggets"},"content":"            throw new DukeException(Ui.getInvalidCommandMessage());","lastModifiedDate":"2021-10-26"},{"lineNumber":57,"author":{"gitId":"antrikshv"},"content":"        }","lastModifiedDate":"2021-10-04"},{"lineNumber":58,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":59,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":60,"author":{"gitId":"antrikshv"},"content":"    public static String convertDateTime(LocalDateTime dateTime) {","lastModifiedDate":"2021-10-10"},{"lineNumber":61,"author":{"gitId":"antrikshv"},"content":"        return dateTime.format(formatter2);","lastModifiedDate":"2021-10-10"},{"lineNumber":62,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":63,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":64,"author":{"gitId":"antrikshv"},"content":"    public static LocalDateTime convertDateTime(String dateTime) {","lastModifiedDate":"2021-10-10"},{"lineNumber":65,"author":{"gitId":"antrikshv"},"content":"        return LocalDateTime.parse(dateTime, formatter1);","lastModifiedDate":"2021-10-10"},{"lineNumber":66,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":67,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":68,"author":{"gitId":"crabnuggets"},"content":"    public static String convertDateTimeForSaving(LocalDateTime dateTime) {","lastModifiedDate":"2021-10-11"},{"lineNumber":69,"author":{"gitId":"crabnuggets"},"content":"        return dateTime.format(formatter1);","lastModifiedDate":"2021-10-11"},{"lineNumber":70,"author":{"gitId":"crabnuggets"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":71,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":72,"author":{"gitId":"antrikshv"},"content":"    public static ArrayList\u003cItem\u003e makeMainList() {","lastModifiedDate":"2021-10-10"},{"lineNumber":73,"author":{"gitId":"antrikshv"},"content":"        ArrayList\u003cItem\u003e sortedList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-10"},{"lineNumber":74,"author":{"gitId":"crabnuggets"},"content":"        sortedList.addAll(Duke.eventCatalog);","lastModifiedDate":"2021-10-17"},{"lineNumber":75,"author":{"gitId":"antrikshv"},"content":"        sortedList.addAll(Duke.taskList);","lastModifiedDate":"2021-10-10"},{"lineNumber":76,"author":{"gitId":"antrikshv"},"content":"        return sortedList;","lastModifiedDate":"2021-10-10"},{"lineNumber":77,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":78,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":79,"author":{"gitId":"alwinangys"},"content":"    public static void updateIndexOfLastSelectedEvent(int index) {","lastModifiedDate":"2021-10-24"},{"lineNumber":80,"author":{"gitId":"alwinangys"},"content":"        indexOfLastSelectedEvent \u003d index;","lastModifiedDate":"2021-10-24"},{"lineNumber":81,"author":{"gitId":"alwinangys"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":82,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":83,"author":{"gitId":"alwinangys"},"content":"    public static int getIndexOfLastSelectedEvent() {","lastModifiedDate":"2021-10-24"},{"lineNumber":84,"author":{"gitId":"alwinangys"},"content":"        return indexOfLastSelectedEvent;","lastModifiedDate":"2021-10-24"},{"lineNumber":85,"author":{"gitId":"alwinangys"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":86,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":87,"author":{"gitId":"alwinangys"},"content":"    public static void updateIndexToNoEventSelected() {","lastModifiedDate":"2021-10-25"},{"lineNumber":88,"author":{"gitId":"alwinangys"},"content":"        updateIndexOfLastSelectedEvent(-1);","lastModifiedDate":"2021-10-25"},{"lineNumber":89,"author":{"gitId":"alwinangys"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":90,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":91,"author":{"gitId":"alwinangys"},"content":"    public static boolean noEventSelected() {","lastModifiedDate":"2021-10-25"},{"lineNumber":92,"author":{"gitId":"alwinangys"},"content":"        return getIndexOfLastSelectedEvent() \u003d\u003d -1;","lastModifiedDate":"2021-10-25"},{"lineNumber":93,"author":{"gitId":"alwinangys"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":94,"author":{"gitId":"antrikshv"},"content":"}","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"antrikshv":52,"Alvinlj00":5,"crabnuggets":11,"alwinangys":26}},{"path":"src/main/java/seedu/duke/storage/EventDecoder.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"crabnuggets"},"content":"package seedu.duke.storage;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"crabnuggets"},"content":"import seedu.duke.parser.Parser;","lastModifiedDate":"2021-10-23"},{"lineNumber":4,"author":{"gitId":"crabnuggets"},"content":"import seedu.duke.items.Event;","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"Alvinlj00"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"crabnuggets"},"content":"public class EventDecoder {","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"crabnuggets"},"content":"    // Index 0 is reserved for indicator for event/task","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"crabnuggets"},"content":"    private static final int INDEX_OF_TITLE \u003d 1;","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"crabnuggets"},"content":"    private static final int INDEX_OF_STATUS \u003d 2;","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"crabnuggets"},"content":"    private static final int INDEX_OF_DESCRIPTION \u003d 3;","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"crabnuggets"},"content":"    private static final int INDEX_OF_DATETIME \u003d 4;","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"crabnuggets"},"content":"    private static final int INDEX_OF_VENUE \u003d 5;","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"crabnuggets"},"content":"    private static final int INDEX_OF_BUDGET \u003d 6;","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"crabnuggets"},"content":"    protected static Event decodeEventFromString(String encodedEvent) {","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"crabnuggets"},"content":"        String[] eventDetails \u003d encodedEvent.trim().split(Event.EVENT_DATA_ARGS_DELIMITER);","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"crabnuggets"},"content":"        String eventTitle \u003d eventDetails[INDEX_OF_TITLE];","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"Alvinlj00"},"content":"        String eventStatus \u003d eventDetails[INDEX_OF_STATUS];","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"Alvinlj00"},"content":"        String eventDescription \u003d eventDetails[INDEX_OF_DESCRIPTION];","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"Alvinlj00"},"content":"        LocalDateTime eventDateTime \u003d Parser.convertDateTime(eventDetails[INDEX_OF_DATETIME]);","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"crabnuggets"},"content":"        String eventVenue \u003d eventDetails[INDEX_OF_VENUE];","lastModifiedDate":"2021-10-06"},{"lineNumber":25,"author":{"gitId":"crabnuggets"},"content":"        double eventBudget \u003d Double.parseDouble(eventDetails[INDEX_OF_BUDGET]);","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":27,"author":{"gitId":"Alvinlj00"},"content":"        Event event \u003d new Event(eventTitle, eventDescription, eventDateTime, eventVenue, eventBudget);","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"Alvinlj00"},"content":"        if (eventStatus.equals(\"X\")) {","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"Alvinlj00"},"content":"            event.markAsDone();","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"Alvinlj00"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"Alvinlj00"},"content":"        return event;","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"crabnuggets"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":33,"author":{"gitId":"crabnuggets"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"Alvinlj00":9,"crabnuggets":24}},{"path":"src/main/java/seedu/duke/storage/EventEncoder.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"crabnuggets"},"content":"package seedu.duke.storage;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"crabnuggets"},"content":"import seedu.duke.parser.Parser;","lastModifiedDate":"2021-10-23"},{"lineNumber":4,"author":{"gitId":"crabnuggets"},"content":"import seedu.duke.items.Event;","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"crabnuggets"},"content":"import seedu.duke.items.Task;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"crabnuggets"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"crabnuggets"},"content":"import java.util.List;","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"crabnuggets"},"content":"public class EventEncoder {","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"crabnuggets"},"content":"    protected static List\u003cString\u003e encodeEventsList(ArrayList\u003cEvent\u003e eventsToSave) {","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"crabnuggets"},"content":"        List\u003cString\u003e encodedEvents \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"crabnuggets"},"content":"        eventsToSave.forEach(event -\u003e encodedEvents.addAll(encodeEventToString(event)));","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"crabnuggets"},"content":"        return encodedEvents;","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"crabnuggets"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"crabnuggets"},"content":"    private static List\u003cString\u003e encodeEventToString(Event event) {","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"crabnuggets"},"content":"        List\u003cString\u003e encodedEvent \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"crabnuggets"},"content":"        encodedEvent.add(\"e | \"","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"crabnuggets"},"content":"                + event.getTitle()","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"Alvinlj00"},"content":"                + \" | \"","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"Alvinlj00"},"content":"                + event.getStatusIcon()","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"crabnuggets"},"content":"                + \" | \"","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"crabnuggets"},"content":"                + event.getDescription()","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"crabnuggets"},"content":"                + \" | \"","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"Alvinlj00"},"content":"                + Parser.convertDateTimeForSaving(event.getDateTime())","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"crabnuggets"},"content":"                + \" | \"","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"crabnuggets"},"content":"                + event.getVenue()","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"crabnuggets"},"content":"                + \" | \"","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"crabnuggets"},"content":"                + event.getBudget());","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"crabnuggets"},"content":"        // Append the additional subtasks to the current event as new lines","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"crabnuggets"},"content":"        List\u003cString\u003e encodedSubTasks \u003d encodeSubTasksToString(event);","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"crabnuggets"},"content":"        encodedEvent.addAll(encodedSubTasks);","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":37,"author":{"gitId":"crabnuggets"},"content":"        return encodedEvent;","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"crabnuggets"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"crabnuggets"},"content":"    private static List\u003cString\u003e encodeSubTasksToString(Event event) {","lastModifiedDate":"2021-10-19"},{"lineNumber":41,"author":{"gitId":"crabnuggets"},"content":"        ArrayList\u003cTask\u003e tasksToEncode \u003d event.getTaskList();","lastModifiedDate":"2021-10-19"},{"lineNumber":42,"author":{"gitId":"crabnuggets"},"content":"        return TaskEncoder.encodeTasksList(tasksToEncode);","lastModifiedDate":"2021-10-19"},{"lineNumber":43,"author":{"gitId":"crabnuggets"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":44,"author":{"gitId":"crabnuggets"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"Alvinlj00":3,"crabnuggets":41}},{"path":"src/main/java/seedu/duke/storage/MemberDecoder.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"crabnuggets"},"content":"package seedu.duke.storage;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"crabnuggets"},"content":"import seedu.duke.items.characteristics.Member;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"crabnuggets"},"content":"import seedu.duke.parser.MemberParser;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"crabnuggets"},"content":"public class MemberDecoder {","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"crabnuggets"},"content":"    // Index 0 is reserved for indicator of event/task","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"crabnuggets"},"content":"    private static final int INDEX_OF_NAME \u003d 1;","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"crabnuggets"},"content":"    protected static Member decodeMemberFromString(String encodedMember) {","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"crabnuggets"},"content":"        String[] memberDetails \u003d encodedMember.trim().split(Member.MEMBER_DATA_ARGS_DELIMITER);","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"crabnuggets"},"content":"        String unformattedName \u003d memberDetails[INDEX_OF_NAME];","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"crabnuggets"},"content":"        // Replace the \"_\" in the unformatted name with proper whitespaces.","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"crabnuggets"},"content":"        String formattedName \u003d MemberParser.parseMemberCommand(unformattedName)[0];","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"crabnuggets"},"content":"        return new Member(formattedName);","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"crabnuggets"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"crabnuggets"},"content":"}","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"crabnuggets":19}},{"path":"src/main/java/seedu/duke/storage/MemberEncoder.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"crabnuggets"},"content":"package seedu.duke.storage;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"crabnuggets"},"content":"import seedu.duke.items.characteristics.Member;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"crabnuggets"},"content":"import seedu.duke.items.mainlists.MemberRoster;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"crabnuggets"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"crabnuggets"},"content":"import java.util.List;","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"crabnuggets"},"content":"public class MemberEncoder {","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"crabnuggets"},"content":"    private static final String INTER_MEMBER_DELIMITER \u003d \" +\";","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"crabnuggets"},"content":"    private static final String NAME_SPACER \u003d \"_\";","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"crabnuggets"},"content":"    protected static List\u003cString\u003e encodeMembersList(MemberRoster membersToSave) {","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"crabnuggets"},"content":"        List\u003cString\u003e encodedMembers \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"crabnuggets"},"content":"        membersToSave.forEach(member -\u003e encodedMembers.add(encodeMemberToString(member)));","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"crabnuggets"},"content":"        return encodedMembers;","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"crabnuggets"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"crabnuggets"},"content":"    protected static String encodeMemberNameToString(Member member) {","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"crabnuggets"},"content":"        String name \u003d member.getName();","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"crabnuggets"},"content":"        name \u003d name.replaceAll(INTER_MEMBER_DELIMITER, NAME_SPACER);","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"crabnuggets"},"content":"        return name;","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"crabnuggets"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"crabnuggets"},"content":"    private static String encodeMemberToString(Member member) {","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"crabnuggets"},"content":"        return \"m | \" + encodeMemberNameToString(member);","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"crabnuggets"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"crabnuggets"},"content":"}","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"crabnuggets":29}},{"path":"src/main/java/seedu/duke/storage/StorageFile.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"crabnuggets"},"content":"package seedu.duke.storage;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"crabnuggets"},"content":"import seedu.duke.exceptions.DukeException;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"crabnuggets"},"content":"import seedu.duke.items.Event;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"crabnuggets"},"content":"import seedu.duke.items.Task;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"crabnuggets"},"content":"import seedu.duke.items.characteristics.Member;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"Alvinlj00"},"content":"import seedu.duke.items.mainlists.EventCatalog;","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"crabnuggets"},"content":"import seedu.duke.items.mainlists.MemberRoster;","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"crabnuggets"},"content":"import java.io.File;","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"crabnuggets"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"crabnuggets"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"crabnuggets"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"crabnuggets"},"content":"import java.nio.file.Files;","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"crabnuggets"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"crabnuggets"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"crabnuggets"},"content":"import java.util.List;","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"crabnuggets"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"crabnuggets"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"crabnuggets"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"crabnuggets"},"content":"public class StorageFile {","lastModifiedDate":"2021-10-06"},{"lineNumber":23,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"crabnuggets"},"content":"    private static final String DEFAULT_FILE_PATH \u003d \"data/slamData.txt\";","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"crabnuggets"},"content":"    private static final String DEFAULT_DIRECTORY \u003d \"data\";","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"crabnuggets"},"content":"    public void save(MemberRoster memberRoster, EventCatalog eventCatalog) {","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"crabnuggets"},"content":"        File saveFile \u003d new File(DEFAULT_FILE_PATH);","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"crabnuggets"},"content":"        checkFileIsValid(saveFile);","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"crabnuggets"},"content":"        List\u003cString\u003e encodedMembersList \u003d MemberEncoder.encodeMembersList(memberRoster);","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"crabnuggets"},"content":"        List\u003cString\u003e encodedEventsList \u003d EventEncoder.encodeEventsList(eventCatalog);","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"crabnuggets"},"content":"        try {","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"crabnuggets"},"content":"            writeToFile(saveFile, encodedMembersList, encodedEventsList);","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"crabnuggets"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"crabnuggets"},"content":"            System.out.println(\"Error writing to file at path: \" + DEFAULT_FILE_PATH);","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"crabnuggets"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":38,"author":{"gitId":"crabnuggets"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"crabnuggets"},"content":"    private static void checkFileIsValid(File saveFile) {","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"crabnuggets"},"content":"        try {","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"crabnuggets"},"content":"            if (!saveFile.exists()) {","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"crabnuggets"},"content":"                Files.createDirectories(Path.of(DEFAULT_DIRECTORY));","lastModifiedDate":"2021-10-07"},{"lineNumber":45,"author":{"gitId":"crabnuggets"},"content":"                Files.createFile(Path.of(DEFAULT_FILE_PATH));","lastModifiedDate":"2021-10-07"},{"lineNumber":46,"author":{"gitId":"crabnuggets"},"content":"            }","lastModifiedDate":"2021-10-07"},{"lineNumber":47,"author":{"gitId":"crabnuggets"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-10-07"},{"lineNumber":48,"author":{"gitId":"crabnuggets"},"content":"            System.out.println(\"Error with default directory/file_path.\");","lastModifiedDate":"2021-10-07"},{"lineNumber":49,"author":{"gitId":"crabnuggets"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":50,"author":{"gitId":"crabnuggets"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":51,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":52,"author":{"gitId":"crabnuggets"},"content":"    private void writeToFile(File saveFile, List\u003cString\u003e encodedMembersList, List\u003cString\u003e encodedEventsList)","lastModifiedDate":"2021-10-24"},{"lineNumber":53,"author":{"gitId":"crabnuggets"},"content":"            throws IOException {","lastModifiedDate":"2021-10-07"},{"lineNumber":54,"author":{"gitId":"crabnuggets"},"content":"        FileWriter membersWriter \u003d new FileWriter(saveFile);","lastModifiedDate":"2021-10-24"},{"lineNumber":55,"author":{"gitId":"crabnuggets"},"content":"        for (String member : encodedMembersList) {","lastModifiedDate":"2021-10-24"},{"lineNumber":56,"author":{"gitId":"crabnuggets"},"content":"            membersWriter.write(member + \"\\n\");","lastModifiedDate":"2021-10-24"},{"lineNumber":57,"author":{"gitId":"crabnuggets"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":58,"author":{"gitId":"crabnuggets"},"content":"        membersWriter.close();","lastModifiedDate":"2021-10-24"},{"lineNumber":59,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":60,"author":{"gitId":"crabnuggets"},"content":"        FileWriter eventsWriter \u003d new FileWriter(saveFile, true);","lastModifiedDate":"2021-10-24"},{"lineNumber":61,"author":{"gitId":"crabnuggets"},"content":"        for (String item : encodedEventsList) {","lastModifiedDate":"2021-10-19"},{"lineNumber":62,"author":{"gitId":"crabnuggets"},"content":"            eventsWriter.write(item + \"\\n\");","lastModifiedDate":"2021-10-19"},{"lineNumber":63,"author":{"gitId":"crabnuggets"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":64,"author":{"gitId":"crabnuggets"},"content":"        eventsWriter.close();","lastModifiedDate":"2021-10-07"},{"lineNumber":65,"author":{"gitId":"crabnuggets"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":66,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":67,"author":{"gitId":"crabnuggets"},"content":"    public void load(MemberRoster memberRoster, EventCatalog eventCatalog) {","lastModifiedDate":"2021-10-24"},{"lineNumber":68,"author":{"gitId":"crabnuggets"},"content":"        File saveFile \u003d new File(DEFAULT_FILE_PATH);","lastModifiedDate":"2021-10-07"},{"lineNumber":69,"author":{"gitId":"crabnuggets"},"content":"        try {","lastModifiedDate":"2021-10-19"},{"lineNumber":70,"author":{"gitId":"crabnuggets"},"content":"            List\u003cString\u003e encodedLines \u003d getStringsFromFile(saveFile);","lastModifiedDate":"2021-10-24"},{"lineNumber":71,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":72,"author":{"gitId":"crabnuggets"},"content":"            assert encodedLines.isEmpty() || encodedLines.get(0).startsWith(\"m\")","lastModifiedDate":"2021-10-24"},{"lineNumber":73,"author":{"gitId":"crabnuggets"},"content":"                    : \"First String in list should be a Member\";","lastModifiedDate":"2021-10-24"},{"lineNumber":74,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":75,"author":{"gitId":"crabnuggets"},"content":"            for (String line : encodedLines) {","lastModifiedDate":"2021-10-24"},{"lineNumber":76,"author":{"gitId":"crabnuggets"},"content":"                char classType \u003d line.charAt(0);","lastModifiedDate":"2021-10-24"},{"lineNumber":77,"author":{"gitId":"crabnuggets"},"content":"                switch (classType) {","lastModifiedDate":"2021-10-24"},{"lineNumber":78,"author":{"gitId":"crabnuggets"},"content":"                case \u0027m\u0027:","lastModifiedDate":"2021-10-24"},{"lineNumber":79,"author":{"gitId":"crabnuggets"},"content":"                    memberRoster.add(MemberDecoder.decodeMemberFromString(line));","lastModifiedDate":"2021-10-24"},{"lineNumber":80,"author":{"gitId":"crabnuggets"},"content":"                    break;","lastModifiedDate":"2021-10-24"},{"lineNumber":81,"author":{"gitId":"crabnuggets"},"content":"                case \u0027e\u0027:","lastModifiedDate":"2021-10-24"},{"lineNumber":82,"author":{"gitId":"crabnuggets"},"content":"                    eventCatalog.add(EventDecoder.decodeEventFromString(line));","lastModifiedDate":"2021-10-24"},{"lineNumber":83,"author":{"gitId":"crabnuggets"},"content":"                    break;","lastModifiedDate":"2021-10-24"},{"lineNumber":84,"author":{"gitId":"crabnuggets"},"content":"                case \u0027t\u0027:","lastModifiedDate":"2021-10-24"},{"lineNumber":85,"author":{"gitId":"crabnuggets"},"content":"                    Event currEvent \u003d eventCatalog.get(eventCatalog.size() - 1);","lastModifiedDate":"2021-10-24"},{"lineNumber":86,"author":{"gitId":"crabnuggets"},"content":"                    Task task \u003d TaskDecoder.decodeTaskFromString(line);","lastModifiedDate":"2021-10-24"},{"lineNumber":87,"author":{"gitId":"crabnuggets"},"content":"                    task.setEvent(currEvent);","lastModifiedDate":"2021-10-24"},{"lineNumber":88,"author":{"gitId":"crabnuggets"},"content":"                    currEvent.addToTaskList(task);","lastModifiedDate":"2021-10-24"},{"lineNumber":89,"author":{"gitId":"crabnuggets"},"content":"                    updateMemberTasks(task, memberRoster);","lastModifiedDate":"2021-10-24"},{"lineNumber":90,"author":{"gitId":"crabnuggets"},"content":"                    break;","lastModifiedDate":"2021-10-24"},{"lineNumber":91,"author":{"gitId":"crabnuggets"},"content":"                default:","lastModifiedDate":"2021-10-24"},{"lineNumber":92,"author":{"gitId":"crabnuggets"},"content":"                    throw new DukeException(\"Seems like you have no data for me to load!\");","lastModifiedDate":"2021-10-24"},{"lineNumber":93,"author":{"gitId":"crabnuggets"},"content":"                }","lastModifiedDate":"2021-10-19"},{"lineNumber":94,"author":{"gitId":"crabnuggets"},"content":"            }","lastModifiedDate":"2021-10-19"},{"lineNumber":95,"author":{"gitId":"crabnuggets"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-10-19"},{"lineNumber":96,"author":{"gitId":"crabnuggets"},"content":"            System.out.println(\"Oooh a new user!\");","lastModifiedDate":"2021-10-19"},{"lineNumber":97,"author":{"gitId":"crabnuggets"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-10-24"},{"lineNumber":98,"author":{"gitId":"crabnuggets"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2021-10-24"},{"lineNumber":99,"author":{"gitId":"crabnuggets"},"content":"            Logger logger \u003d Logger.getLogger(\"Duke logger\");","lastModifiedDate":"2021-10-24"},{"lineNumber":100,"author":{"gitId":"crabnuggets"},"content":"            logger.log(Level.INFO, \"potential file format error\", e);","lastModifiedDate":"2021-10-24"},{"lineNumber":101,"author":{"gitId":"crabnuggets"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":102,"author":{"gitId":"crabnuggets"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":103,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":104,"author":{"gitId":"crabnuggets"},"content":"    private void updateMemberTasks(Task task, MemberRoster memberRoster) {","lastModifiedDate":"2021-10-24"},{"lineNumber":105,"author":{"gitId":"crabnuggets"},"content":"        for (Member member : task.memberList) {","lastModifiedDate":"2021-10-24"},{"lineNumber":106,"author":{"gitId":"crabnuggets"},"content":"            memberRoster.stream()","lastModifiedDate":"2021-10-24"},{"lineNumber":107,"author":{"gitId":"crabnuggets"},"content":"                    .filter(m -\u003e m.getName().equals(member.getName()))","lastModifiedDate":"2021-10-24"},{"lineNumber":108,"author":{"gitId":"crabnuggets"},"content":"                    .forEach(m -\u003e m.addTask(task));","lastModifiedDate":"2021-10-24"},{"lineNumber":109,"author":{"gitId":"crabnuggets"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":110,"author":{"gitId":"crabnuggets"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":111,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":112,"author":{"gitId":"crabnuggets"},"content":"    private List\u003cString\u003e getStringsFromFile(File saveFile) throws FileNotFoundException {","lastModifiedDate":"2021-10-19"},{"lineNumber":113,"author":{"gitId":"crabnuggets"},"content":"        List\u003cString\u003e encodedItems \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-19"},{"lineNumber":114,"author":{"gitId":"crabnuggets"},"content":"        Scanner myScanner \u003d new Scanner(saveFile);","lastModifiedDate":"2021-10-07"},{"lineNumber":115,"author":{"gitId":"crabnuggets"},"content":"        while (myScanner.hasNextLine()) {","lastModifiedDate":"2021-10-07"},{"lineNumber":116,"author":{"gitId":"crabnuggets"},"content":"            String data \u003d myScanner.nextLine();","lastModifiedDate":"2021-10-07"},{"lineNumber":117,"author":{"gitId":"crabnuggets"},"content":"            encodedItems.add(data);","lastModifiedDate":"2021-10-19"},{"lineNumber":118,"author":{"gitId":"crabnuggets"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":119,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":120,"author":{"gitId":"crabnuggets"},"content":"        return encodedItems;","lastModifiedDate":"2021-10-19"},{"lineNumber":121,"author":{"gitId":"crabnuggets"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":122,"author":{"gitId":"crabnuggets"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"Alvinlj00":1,"crabnuggets":121}},{"path":"src/main/java/seedu/duke/storage/TaskDecoder.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"crabnuggets"},"content":"package seedu.duke.storage;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"crabnuggets"},"content":"import seedu.duke.items.characteristics.Member;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"crabnuggets"},"content":"import seedu.duke.parser.MemberParser;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"crabnuggets"},"content":"import seedu.duke.parser.Parser;","lastModifiedDate":"2021-10-23"},{"lineNumber":6,"author":{"gitId":"crabnuggets"},"content":"import seedu.duke.items.Task;","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"Alvinlj00"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"crabnuggets"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"crabnuggets"},"content":"public class TaskDecoder {","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"crabnuggets"},"content":"    // Index 0 is reserved for indicator for event/task","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"crabnuggets"},"content":"    private static final int INDEX_OF_TILE \u003d 1;","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"crabnuggets"},"content":"    private static final int INDEX_OF_STATUS \u003d 2;","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"crabnuggets"},"content":"    private static final int INDEX_OF_DESCRIPTION \u003d 3;","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"crabnuggets"},"content":"    private static final int INDEX_OF_DEADLINE \u003d 4;","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"crabnuggets"},"content":"    private static final int INDEX_OF_MEMBERS \u003d 5;","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"crabnuggets"},"content":"    protected static Task decodeTaskFromString(String encodedTask) {","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"crabnuggets"},"content":"        String[] taskDetails \u003d encodedTask.trim().split(Task.TASK_DATA_ARGS_DELIMITER);","lastModifiedDate":"2021-10-06"},{"lineNumber":22,"author":{"gitId":"crabnuggets"},"content":"        String taskTitle \u003d taskDetails[INDEX_OF_TILE];","lastModifiedDate":"2021-10-06"},{"lineNumber":23,"author":{"gitId":"Alvinlj00"},"content":"        String taskStatus \u003d taskDetails[INDEX_OF_STATUS];","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"crabnuggets"},"content":"        String taskDescription \u003d taskDetails[INDEX_OF_DESCRIPTION];","lastModifiedDate":"2021-10-06"},{"lineNumber":25,"author":{"gitId":"Alvinlj00"},"content":"        LocalDateTime taskDeadline \u003d Parser.convertDateTime(taskDetails[INDEX_OF_DEADLINE]);","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"crabnuggets"},"content":"        ArrayList\u003cMember\u003e membersList \u003d decodeAssignedMembers(taskDetails[INDEX_OF_MEMBERS]);","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":28,"author":{"gitId":"crabnuggets"},"content":"        Task task \u003d new Task(taskTitle, taskDescription, taskDeadline, membersList);","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"Alvinlj00"},"content":"        if (taskStatus.equals(\"X\")) {","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"Alvinlj00"},"content":"            task.markAsDone();","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"Alvinlj00"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"Alvinlj00"},"content":"        return task;","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"crabnuggets"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":34,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"crabnuggets"},"content":"    private static ArrayList\u003cMember\u003e decodeAssignedMembers(String encodedMembers) {","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"crabnuggets"},"content":"        String[] formattedMemberNamesInString \u003d MemberParser.parseMemberCommand(encodedMembers);","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"crabnuggets"},"content":"        ArrayList\u003cMember\u003e membersList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-24"},{"lineNumber":38,"author":{"gitId":"crabnuggets"},"content":"        for (String name : formattedMemberNamesInString) {","lastModifiedDate":"2021-10-24"},{"lineNumber":39,"author":{"gitId":"crabnuggets"},"content":"            membersList.add(new Member(name));","lastModifiedDate":"2021-10-24"},{"lineNumber":40,"author":{"gitId":"crabnuggets"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":41,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":42,"author":{"gitId":"crabnuggets"},"content":"        return membersList;","lastModifiedDate":"2021-10-24"},{"lineNumber":43,"author":{"gitId":"crabnuggets"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":44,"author":{"gitId":"crabnuggets"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"Alvinlj00":7,"crabnuggets":37}},{"path":"src/main/java/seedu/duke/storage/TaskEncoder.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"crabnuggets"},"content":"package seedu.duke.storage;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"crabnuggets"},"content":"import seedu.duke.parser.Parser;","lastModifiedDate":"2021-10-23"},{"lineNumber":4,"author":{"gitId":"crabnuggets"},"content":"import seedu.duke.items.Task;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"crabnuggets"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"crabnuggets"},"content":"import java.util.List;","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"crabnuggets"},"content":"public class TaskEncoder {","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"crabnuggets"},"content":"    protected static List\u003cString\u003e encodeTasksList(ArrayList\u003cTask\u003e tasksToSave) {","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"crabnuggets"},"content":"        List\u003cString\u003e encodedTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"crabnuggets"},"content":"        tasksToSave.forEach(task -\u003e encodedTasks.add(encodeTaskToString(task)));","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"crabnuggets"},"content":"        return encodedTasks;","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"crabnuggets"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"crabnuggets"},"content":"    private static String encodeTaskToString(Task task) {","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"crabnuggets"},"content":"        return \"t | \"","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"crabnuggets"},"content":"                + task.getTitle()","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"Alvinlj00"},"content":"                + \" | \"","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"Alvinlj00"},"content":"                + task.getStatusIcon()","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"crabnuggets"},"content":"                + \" | \"","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"crabnuggets"},"content":"                + task.getDescription()","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"crabnuggets"},"content":"                + \" | \"","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"crabnuggets"},"content":"                + Parser.convertDateTimeForSaving(task.getDateTime())","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"crabnuggets"},"content":"                + \" |\"","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"crabnuggets"},"content":"                + encodeMemberListToString(task);","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"crabnuggets"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"crabnuggets"},"content":"    private static String encodeMemberListToString(Task task) {","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"crabnuggets"},"content":"        StringBuilder encodedMemberList \u003d new StringBuilder();","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"crabnuggets"},"content":"        task.memberList.forEach(member -\u003e encodedMemberList.append(\" \")","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"crabnuggets"},"content":"                .append(MemberEncoder.encodeMemberNameToString(member)));","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"crabnuggets"},"content":"        return encodedMemberList.toString();","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"crabnuggets"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"crabnuggets"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"Alvinlj00":2,"crabnuggets":34}},{"path":"src/test/java/seedu/duke/UiTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"crabnuggets"},"content":"package seedu.duke;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"crabnuggets"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"crabnuggets"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"crabnuggets"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"crabnuggets"},"content":"import seedu.duke.items.Event;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"crabnuggets"},"content":"import seedu.duke.items.Item;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"crabnuggets"},"content":"import seedu.duke.items.Task;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"crabnuggets"},"content":"import seedu.duke.parser.Parser;","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"crabnuggets"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"crabnuggets"},"content":"import java.io.PrintStream;","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"crabnuggets"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"crabnuggets"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"crabnuggets"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"crabnuggets"},"content":"class UiTest {","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"crabnuggets"},"content":"    private final ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"crabnuggets"},"content":"    private final PrintStream originalOut \u003d System.out;","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"crabnuggets"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"crabnuggets"},"content":"    public void setUpStream() {","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"crabnuggets"},"content":"        System.setOut(new PrintStream(outContent));","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"crabnuggets"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"crabnuggets"},"content":"    @AfterEach","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"crabnuggets"},"content":"    public void restoreStream() {","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"crabnuggets"},"content":"        System.setOut(originalOut);","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"crabnuggets"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"crabnuggets"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"crabnuggets"},"content":"    void printList_listOfEvents_success() {","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"crabnuggets"},"content":"        // Setting up","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"crabnuggets"},"content":"        LocalDateTime event1DateTime \u003d Parser.convertDateTime(\"19-02-2022 2000\");","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"crabnuggets"},"content":"        Event event1 \u003d new Event(\"Peppa Pig\u0027s Concert\",","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"crabnuggets"},"content":"                \"Asia world tour\", event1DateTime,","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"crabnuggets"},"content":"                \"Indoor Stadium\", 1000.90);","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"crabnuggets"},"content":"        event1.markAsDone();","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"crabnuggets"},"content":"        LocalDateTime event2DateTime \u003d Parser.convertDateTime(\"20-02-2022 2030\");","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"crabnuggets"},"content":"        Event event2 \u003d new Event(\"Funfair\",","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"crabnuggets"},"content":"                \"For charity\", event2DateTime,","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"crabnuggets"},"content":"                \"Parade square\", 2000.10);","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"crabnuggets"},"content":"        ArrayList\u003cItem\u003e eventsList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"crabnuggets"},"content":"        eventsList.add(event1);","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"crabnuggets"},"content":"        eventsList.add(event2);","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"crabnuggets"},"content":"        Ui.printList(eventsList);","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"crabnuggets"},"content":"        String expectedOutput \u003d \"1. [E][X] Peppa Pig\u0027s Concert (at: 19 Feb 2022 - 20:00)\"","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"crabnuggets"},"content":"                + System.lineSeparator()","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"crabnuggets"},"content":"                + \"2. [E][ ] Funfair (at: 20 Feb 2022 - 20:30)\"","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"crabnuggets"},"content":"                + System.lineSeparator();","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"crabnuggets"},"content":"        assertEquals(expectedOutput, outContent.toString());","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"crabnuggets"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"crabnuggets"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"crabnuggets"},"content":"    void printList_listOfTasks_success() {","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"crabnuggets"},"content":"        // Setting up","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"crabnuggets"},"content":"        LocalDateTime task1Deadline \u003d Parser.convertDateTime(\"19-02-2022 2359\");","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"crabnuggets"},"content":"        Task task1 \u003d new Task(\"Do homework\", \"CS2113T tp V1.0\", task1Deadline);","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"crabnuggets"},"content":"        task1.markAsDone();","lastModifiedDate":"2021-10-12"},{"lineNumber":62,"author":{"gitId":"crabnuggets"},"content":"        LocalDateTime task2Deadline \u003d Parser.convertDateTime(\"19-02-2022 0800\");","lastModifiedDate":"2021-10-12"},{"lineNumber":63,"author":{"gitId":"crabnuggets"},"content":"        Task task2 \u003d new Task(\"Waking up\", \"This is difficult...\", task2Deadline);","lastModifiedDate":"2021-10-12"},{"lineNumber":64,"author":{"gitId":"crabnuggets"},"content":"        ArrayList\u003cItem\u003e tasksList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-12"},{"lineNumber":65,"author":{"gitId":"crabnuggets"},"content":"        tasksList.add(task1);","lastModifiedDate":"2021-10-12"},{"lineNumber":66,"author":{"gitId":"crabnuggets"},"content":"        tasksList.add(task2);","lastModifiedDate":"2021-10-12"},{"lineNumber":67,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":68,"author":{"gitId":"crabnuggets"},"content":"        Ui.printList(tasksList);","lastModifiedDate":"2021-10-12"},{"lineNumber":69,"author":{"gitId":"crabnuggets"},"content":"        String expectedOutput \u003d \"1. [T][X] Do homework (by: 19 Feb 2022 - 23:59)\"","lastModifiedDate":"2021-10-12"},{"lineNumber":70,"author":{"gitId":"crabnuggets"},"content":"                + System.lineSeparator()","lastModifiedDate":"2021-10-12"},{"lineNumber":71,"author":{"gitId":"crabnuggets"},"content":"                + \"2. [T][ ] Waking up (by: 19 Feb 2022 - 08:00)\"","lastModifiedDate":"2021-10-12"},{"lineNumber":72,"author":{"gitId":"crabnuggets"},"content":"                + System.lineSeparator();","lastModifiedDate":"2021-10-12"},{"lineNumber":73,"author":{"gitId":"crabnuggets"},"content":"        assertEquals(expectedOutput, outContent.toString());","lastModifiedDate":"2021-10-12"},{"lineNumber":74,"author":{"gitId":"crabnuggets"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":75,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":76,"author":{"gitId":"crabnuggets"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":77,"author":{"gitId":"crabnuggets"},"content":"    void printList_listOfEventsAndTasks_success() {","lastModifiedDate":"2021-10-12"},{"lineNumber":78,"author":{"gitId":"crabnuggets"},"content":"        // Setting up","lastModifiedDate":"2021-10-12"},{"lineNumber":79,"author":{"gitId":"crabnuggets"},"content":"        LocalDateTime eventDateTime \u003d Parser.convertDateTime(\"19-02-2022 2000\");","lastModifiedDate":"2021-10-12"},{"lineNumber":80,"author":{"gitId":"crabnuggets"},"content":"        Event event \u003d new Event(\"Peppa Pig\u0027s Concert\",","lastModifiedDate":"2021-10-12"},{"lineNumber":81,"author":{"gitId":"crabnuggets"},"content":"                \"Asia world tour\", eventDateTime,","lastModifiedDate":"2021-10-12"},{"lineNumber":82,"author":{"gitId":"crabnuggets"},"content":"                \"Indoor Stadium\", 1000.90);","lastModifiedDate":"2021-10-12"},{"lineNumber":83,"author":{"gitId":"crabnuggets"},"content":"        event.markAsDone();","lastModifiedDate":"2021-10-12"},{"lineNumber":84,"author":{"gitId":"crabnuggets"},"content":"        LocalDateTime taskDeadline \u003d Parser.convertDateTime(\"19-02-2022 2359\");","lastModifiedDate":"2021-10-12"},{"lineNumber":85,"author":{"gitId":"crabnuggets"},"content":"        Task task \u003d new Task(\"Do homework\", \"CS2113T tp V1.0\", taskDeadline);","lastModifiedDate":"2021-10-12"},{"lineNumber":86,"author":{"gitId":"crabnuggets"},"content":"        task.markAsDone();","lastModifiedDate":"2021-10-12"},{"lineNumber":87,"author":{"gitId":"crabnuggets"},"content":"        ArrayList\u003cItem\u003e combinedList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-12"},{"lineNumber":88,"author":{"gitId":"crabnuggets"},"content":"        combinedList.add(event);","lastModifiedDate":"2021-10-12"},{"lineNumber":89,"author":{"gitId":"crabnuggets"},"content":"        combinedList.add(task);","lastModifiedDate":"2021-10-12"},{"lineNumber":90,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":91,"author":{"gitId":"crabnuggets"},"content":"        Ui.printList(combinedList);","lastModifiedDate":"2021-10-12"},{"lineNumber":92,"author":{"gitId":"crabnuggets"},"content":"        String expectedOutput \u003d \"1. [E][X] Peppa Pig\u0027s Concert (at: 19 Feb 2022 - 20:00)\"","lastModifiedDate":"2021-10-12"},{"lineNumber":93,"author":{"gitId":"crabnuggets"},"content":"                + System.lineSeparator()","lastModifiedDate":"2021-10-12"},{"lineNumber":94,"author":{"gitId":"crabnuggets"},"content":"                + \"2. [T][X] Do homework (by: 19 Feb 2022 - 23:59)\"","lastModifiedDate":"2021-10-12"},{"lineNumber":95,"author":{"gitId":"crabnuggets"},"content":"                + System.lineSeparator();","lastModifiedDate":"2021-10-12"},{"lineNumber":96,"author":{"gitId":"crabnuggets"},"content":"        assertEquals(expectedOutput, outContent.toString());","lastModifiedDate":"2021-10-12"},{"lineNumber":97,"author":{"gitId":"crabnuggets"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":98,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":99,"author":{"gitId":"crabnuggets"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":100,"author":{"gitId":"crabnuggets"},"content":"    void printEvent_oneEvent_success() {","lastModifiedDate":"2021-10-12"},{"lineNumber":101,"author":{"gitId":"crabnuggets"},"content":"        // Setting up","lastModifiedDate":"2021-10-12"},{"lineNumber":102,"author":{"gitId":"crabnuggets"},"content":"        LocalDateTime event1DateTime \u003d Parser.convertDateTime(\"19-02-2022 2000\");","lastModifiedDate":"2021-10-12"},{"lineNumber":103,"author":{"gitId":"crabnuggets"},"content":"        Event event \u003d new Event(\"Peppa Pig\u0027s Concert\",","lastModifiedDate":"2021-10-12"},{"lineNumber":104,"author":{"gitId":"crabnuggets"},"content":"                \"Asia world tour\", event1DateTime,","lastModifiedDate":"2021-10-12"},{"lineNumber":105,"author":{"gitId":"crabnuggets"},"content":"                \"Indoor Stadium\", 1000.90);","lastModifiedDate":"2021-10-12"},{"lineNumber":106,"author":{"gitId":"crabnuggets"},"content":"        event.markAsDone();","lastModifiedDate":"2021-10-12"},{"lineNumber":107,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":108,"author":{"gitId":"crabnuggets"},"content":"        Ui.printEvent(event);","lastModifiedDate":"2021-10-12"},{"lineNumber":109,"author":{"gitId":"antrikshv"},"content":"        String expectedOutput \u003d \"Title: Peppa Pig\u0027s Concert\"","lastModifiedDate":"2021-10-24"},{"lineNumber":110,"author":{"gitId":"crabnuggets"},"content":"                + System.lineSeparator()","lastModifiedDate":"2021-10-12"},{"lineNumber":111,"author":{"gitId":"antrikshv"},"content":"                + \"Date: 19 Feb 2022 - 20:00\"","lastModifiedDate":"2021-10-24"},{"lineNumber":112,"author":{"gitId":"crabnuggets"},"content":"                + System.lineSeparator()","lastModifiedDate":"2021-10-12"},{"lineNumber":113,"author":{"gitId":"antrikshv"},"content":"                + \"Description: Asia world tour\"","lastModifiedDate":"2021-10-24"},{"lineNumber":114,"author":{"gitId":"crabnuggets"},"content":"                + System.lineSeparator()","lastModifiedDate":"2021-10-12"},{"lineNumber":115,"author":{"gitId":"antrikshv"},"content":"                + \"Venue: Indoor Stadium\"","lastModifiedDate":"2021-10-24"},{"lineNumber":116,"author":{"gitId":"crabnuggets"},"content":"                + System.lineSeparator()","lastModifiedDate":"2021-10-12"},{"lineNumber":117,"author":{"gitId":"antrikshv"},"content":"                + \"Budget: $1000.9\"","lastModifiedDate":"2021-10-24"},{"lineNumber":118,"author":{"gitId":"antrikshv"},"content":"                + System.lineSeparator()","lastModifiedDate":"2021-10-24"},{"lineNumber":119,"author":{"gitId":"antrikshv"},"content":"                + \"Tasks: \"","lastModifiedDate":"2021-10-24"},{"lineNumber":120,"author":{"gitId":"crabnuggets"},"content":"                + System.lineSeparator();","lastModifiedDate":"2021-10-12"},{"lineNumber":121,"author":{"gitId":"crabnuggets"},"content":"        assertEquals(expectedOutput, outContent.toString());","lastModifiedDate":"2021-10-12"},{"lineNumber":122,"author":{"gitId":"crabnuggets"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":123,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":124,"author":{"gitId":"crabnuggets"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":125,"author":{"gitId":"crabnuggets"},"content":"    void printTask_oneTask_success() {","lastModifiedDate":"2021-10-12"},{"lineNumber":126,"author":{"gitId":"crabnuggets"},"content":"        // Setting up","lastModifiedDate":"2021-10-12"},{"lineNumber":127,"author":{"gitId":"crabnuggets"},"content":"        LocalDateTime taskDeadline \u003d Parser.convertDateTime(\"19-02-2022 2359\");","lastModifiedDate":"2021-10-12"},{"lineNumber":128,"author":{"gitId":"crabnuggets"},"content":"        Task task \u003d new Task(\"Do homework\", \"CS2113T tp V1.0\", taskDeadline);","lastModifiedDate":"2021-10-12"},{"lineNumber":129,"author":{"gitId":"crabnuggets"},"content":"        task.markAsDone();","lastModifiedDate":"2021-10-12"},{"lineNumber":130,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":131,"author":{"gitId":"crabnuggets"},"content":"        Ui.printTask(task);","lastModifiedDate":"2021-10-12"},{"lineNumber":132,"author":{"gitId":"antrikshv"},"content":"        String expectedOutput \u003d \"Title: Do homework\"","lastModifiedDate":"2021-10-24"},{"lineNumber":133,"author":{"gitId":"antrikshv"},"content":"                + System.lineSeparator()","lastModifiedDate":"2021-10-24"},{"lineNumber":134,"author":{"gitId":"antrikshv"},"content":"                + \"Deadline: 19 Feb 2022 - 23:59\"","lastModifiedDate":"2021-10-24"},{"lineNumber":135,"author":{"gitId":"crabnuggets"},"content":"                + System.lineSeparator()","lastModifiedDate":"2021-10-12"},{"lineNumber":136,"author":{"gitId":"antrikshv"},"content":"                + \"Description: CS2113T tp V1.0\"","lastModifiedDate":"2021-10-24"},{"lineNumber":137,"author":{"gitId":"crabnuggets"},"content":"                + System.lineSeparator()","lastModifiedDate":"2021-10-12"},{"lineNumber":138,"author":{"gitId":"antrikshv"},"content":"                + \"Members: \"","lastModifiedDate":"2021-10-24"},{"lineNumber":139,"author":{"gitId":"crabnuggets"},"content":"                + System.lineSeparator();","lastModifiedDate":"2021-10-12"},{"lineNumber":140,"author":{"gitId":"crabnuggets"},"content":"        assertEquals(expectedOutput, outContent.toString());","lastModifiedDate":"2021-10-12"},{"lineNumber":141,"author":{"gitId":"crabnuggets"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":142,"author":{"gitId":"crabnuggets"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"antrikshv":12,"crabnuggets":130}},{"path":"src/test/java/seedu/duke/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Alvinlj00"},"content":"package seedu.duke.commands;","lastModifiedDate":"2021-10-22"},{"lineNumber":2,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":3,"author":{"gitId":"Alvinlj00"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-22"},{"lineNumber":4,"author":{"gitId":"crabnuggets"},"content":"import seedu.duke.exceptions.DukeException;","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"crabnuggets"},"content":"import seedu.duke.parser.Parser;","lastModifiedDate":"2021-10-23"},{"lineNumber":6,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"Alvinlj00"},"content":"import java.io.ByteArrayInputStream;","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"Alvinlj00"},"content":"import java.io.InputStream;","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":10,"author":{"gitId":"Alvinlj00"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-22"},{"lineNumber":11,"author":{"gitId":"Alvinlj00"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2021-10-22"},{"lineNumber":12,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"Alvinlj00"},"content":"import static seedu.duke.Duke.eventCatalog;","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"Alvinlj00"},"content":"public class AddCommandTest {","lastModifiedDate":"2021-10-22"},{"lineNumber":16,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":17,"author":{"gitId":"Alvinlj00"},"content":"    @Test","lastModifiedDate":"2021-10-22"},{"lineNumber":18,"author":{"gitId":"crabnuggets"},"content":"    public void addCommand_validData_correctlyConstructed() throws DukeException {","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"alwinangys"},"content":"        eventCatalog.clear();","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"Alvinlj00"},"content":"        final InputStream sysInBackup \u003d System.in;","lastModifiedDate":"2021-10-22"},{"lineNumber":21,"author":{"gitId":"Alvinlj00"},"content":"        ByteArrayInputStream in1 \u003d new ByteArrayInputStream(\"Birthday barbeque\".getBytes());","lastModifiedDate":"2021-10-22"},{"lineNumber":22,"author":{"gitId":"Alvinlj00"},"content":"        System.setIn(in1);","lastModifiedDate":"2021-10-22"},{"lineNumber":23,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":24,"author":{"gitId":"Alvinlj00"},"content":"        Command command1 \u003d Parser.parseCommand(\"add -e n/Barbeque d/31-12-2022 1800 v/Home Grill b/100\");","lastModifiedDate":"2021-10-22"},{"lineNumber":25,"author":{"gitId":"Alvinlj00"},"content":"        command1.execute();","lastModifiedDate":"2021-10-22"},{"lineNumber":26,"author":{"gitId":"Alvinlj00"},"content":"        assertEquals(\"[E][ ] Barbeque (at: 31 Dec 2022 - 18:00)\", eventCatalog.get(0).toString());","lastModifiedDate":"2021-10-22"},{"lineNumber":27,"author":{"gitId":"Alvinlj00"},"content":"        System.setIn(sysInBackup);","lastModifiedDate":"2021-10-22"},{"lineNumber":28,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":29,"author":{"gitId":"Alvinlj00"},"content":"        ByteArrayInputStream in2 \u003d new ByteArrayInputStream(\"Y\".getBytes());","lastModifiedDate":"2021-10-22"},{"lineNumber":30,"author":{"gitId":"Alvinlj00"},"content":"        System.setIn(in2);","lastModifiedDate":"2021-10-22"},{"lineNumber":31,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":32,"author":{"gitId":"Alvinlj00"},"content":"        Command command2 \u003d Parser.parseCommand(\"delete all\");","lastModifiedDate":"2021-10-22"},{"lineNumber":33,"author":{"gitId":"Alvinlj00"},"content":"        command2.execute();","lastModifiedDate":"2021-10-22"},{"lineNumber":34,"author":{"gitId":"Alvinlj00"},"content":"        System.setIn(sysInBackup);","lastModifiedDate":"2021-10-22"},{"lineNumber":35,"author":{"gitId":"alwinangys"},"content":"        eventCatalog.clear();","lastModifiedDate":"2021-10-25"},{"lineNumber":36,"author":{"gitId":"Alvinlj00"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":37,"author":{"gitId":"Alvinlj00"},"content":"}","lastModifiedDate":"2021-10-22"}],"authorContributionMap":{"Alvinlj00":32,"crabnuggets":3,"alwinangys":2}},{"path":"src/test/java/seedu/duke/commands/ByeCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"antrikshv"},"content":"package seedu.duke.commands;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"antrikshv"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"antrikshv"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"antrikshv"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"crabnuggets"},"content":"import seedu.duke.exceptions.DukeException;","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"antrikshv"},"content":"import seedu.duke.items.Event;","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"antrikshv"},"content":"import seedu.duke.items.Task;","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"antrikshv"},"content":"import seedu.duke.parser.Parser;","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"antrikshv"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"antrikshv"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"antrikshv"},"content":"import java.io.PrintStream;","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"antrikshv"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"antrikshv"},"content":"import static seedu.duke.Duke.eventCatalog;","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"antrikshv"},"content":"public class ByeCommandTest {","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"antrikshv"},"content":"    private final ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"antrikshv"},"content":"    private final PrintStream originalOut \u003d System.out;","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"antrikshv"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"antrikshv"},"content":"    public void setUpStream() {","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"antrikshv"},"content":"        System.setOut(new PrintStream(outContent));","lastModifiedDate":"2021-10-25"},{"lineNumber":25,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":26,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":27,"author":{"gitId":"antrikshv"},"content":"    @AfterEach","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"antrikshv"},"content":"    public void restoreStream() {","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"antrikshv"},"content":"        System.setOut(originalOut);","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":31,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":32,"author":{"gitId":"antrikshv"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":33,"author":{"gitId":"crabnuggets"},"content":"    public void byeCommand_success() throws DukeException {","lastModifiedDate":"2021-10-26"},{"lineNumber":34,"author":{"gitId":"antrikshv"},"content":"        Command command1 \u003d Parser.parseCommand(\"bye\");","lastModifiedDate":"2021-10-25"},{"lineNumber":35,"author":{"gitId":"antrikshv"},"content":"        command1.execute();","lastModifiedDate":"2021-10-25"},{"lineNumber":36,"author":{"gitId":"antrikshv"},"content":"        assertEquals(\"\", outContent.toString());","lastModifiedDate":"2021-10-25"},{"lineNumber":37,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":38,"author":{"gitId":"antrikshv"},"content":"}","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"antrikshv":36,"crabnuggets":2}},{"path":"src/test/java/seedu/duke/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"alwinangys"},"content":"package seedu.duke.commands;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"alwinangys"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"crabnuggets"},"content":"import seedu.duke.exceptions.DukeException;","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"crabnuggets"},"content":"import seedu.duke.parser.Parser;","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"alwinangys"},"content":"import seedu.duke.items.Event;","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"alwinangys"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"alwinangys"},"content":"import static seedu.duke.Duke.eventCatalog;","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"Alvinlj00"},"content":"import java.io.ByteArrayInputStream;","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"Alvinlj00"},"content":"import java.io.InputStream;","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"alwinangys"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"alwinangys"},"content":"class DeleteCommandTest {","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"alwinangys"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"crabnuggets"},"content":"    void deleteOneEvent_listOfTwoEvents_oneEventRemaining() throws DukeException {","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"alwinangys"},"content":"        setUp();","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"Alvinlj00"},"content":"        Command command1 \u003d Parser.parseCommand(\"delete -e 2\");","lastModifiedDate":"2021-10-22"},{"lineNumber":23,"author":{"gitId":"Alvinlj00"},"content":"        command1.execute();","lastModifiedDate":"2021-10-22"},{"lineNumber":24,"author":{"gitId":"alwinangys"},"content":"        assertEquals(1, eventCatalog.size());","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":26,"author":{"gitId":"Alvinlj00"},"content":"        final InputStream sysInBackup \u003d System.in;","lastModifiedDate":"2021-10-22"},{"lineNumber":27,"author":{"gitId":"Alvinlj00"},"content":"        ByteArrayInputStream in \u003d new ByteArrayInputStream(\"Y\".getBytes());","lastModifiedDate":"2021-10-22"},{"lineNumber":28,"author":{"gitId":"Alvinlj00"},"content":"        System.setIn(in);","lastModifiedDate":"2021-10-22"},{"lineNumber":29,"author":{"gitId":"Alvinlj00"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":30,"author":{"gitId":"Alvinlj00"},"content":"        Command command2 \u003d Parser.parseCommand(\"delete all\");","lastModifiedDate":"2021-10-22"},{"lineNumber":31,"author":{"gitId":"Alvinlj00"},"content":"        command2.execute();","lastModifiedDate":"2021-10-22"},{"lineNumber":32,"author":{"gitId":"Alvinlj00"},"content":"        System.setIn(sysInBackup);","lastModifiedDate":"2021-10-22"},{"lineNumber":33,"author":{"gitId":"alwinangys"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"alwinangys"},"content":"    void setUp() {","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"alwinangys"},"content":"        // Setting up","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"alwinangys"},"content":"        LocalDateTime event1DateTime \u003d Parser.convertDateTime(\"19-02-2022 2000\");","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"alwinangys"},"content":"        Event event1 \u003d new Event(\"Peppa Pig\u0027s Concert\",","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"alwinangys"},"content":"                \"Asia world tour\", event1DateTime,","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"alwinangys"},"content":"                \"Indoor Stadium\", 1000.90);","lastModifiedDate":"2021-10-21"},{"lineNumber":42,"author":{"gitId":"alwinangys"},"content":"        event1.markAsDone();","lastModifiedDate":"2021-10-21"},{"lineNumber":43,"author":{"gitId":"alwinangys"},"content":"        LocalDateTime event2DateTime \u003d Parser.convertDateTime(\"20-02-2022 2030\");","lastModifiedDate":"2021-10-21"},{"lineNumber":44,"author":{"gitId":"alwinangys"},"content":"        Event event2 \u003d new Event(\"Funfair\",","lastModifiedDate":"2021-10-21"},{"lineNumber":45,"author":{"gitId":"alwinangys"},"content":"                \"For charity\", event2DateTime,","lastModifiedDate":"2021-10-21"},{"lineNumber":46,"author":{"gitId":"alwinangys"},"content":"                \"Parade square\", 2000.10);","lastModifiedDate":"2021-10-21"},{"lineNumber":47,"author":{"gitId":"alwinangys"},"content":"        eventCatalog.add(event1);","lastModifiedDate":"2021-10-21"},{"lineNumber":48,"author":{"gitId":"alwinangys"},"content":"        eventCatalog.add(event2);","lastModifiedDate":"2021-10-21"},{"lineNumber":49,"author":{"gitId":"alwinangys"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":50,"author":{"gitId":"alwinangys"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"Alvinlj00":12,"crabnuggets":3,"alwinangys":35}},{"path":"src/test/java/seedu/duke/commands/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"antrikshv"},"content":"package seedu.duke.commands;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"antrikshv"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"antrikshv"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"antrikshv"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"crabnuggets"},"content":"import seedu.duke.exceptions.DukeException;","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"antrikshv"},"content":"import seedu.duke.items.Event;","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"antrikshv"},"content":"import seedu.duke.items.Task;","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"antrikshv"},"content":"import seedu.duke.parser.Parser;","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"antrikshv"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"antrikshv"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"antrikshv"},"content":"import java.io.PrintStream;","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"antrikshv"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"antrikshv"},"content":"import static seedu.duke.Duke.eventCatalog;","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"antrikshv"},"content":"public class ListCommandTest {","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"antrikshv"},"content":"    private final ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"antrikshv"},"content":"    private final PrintStream originalOut \u003d System.out;","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"antrikshv"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"antrikshv"},"content":"    public void setUpStream() {","lastModifiedDate":"2021-10-25"},{"lineNumber":25,"author":{"gitId":"antrikshv"},"content":"        System.setOut(new PrintStream(outContent));","lastModifiedDate":"2021-10-25"},{"lineNumber":26,"author":{"gitId":"antrikshv"},"content":"        setUp();","lastModifiedDate":"2021-10-25"},{"lineNumber":27,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"antrikshv"},"content":"    @AfterEach","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"antrikshv"},"content":"    public void restoreStream() {","lastModifiedDate":"2021-10-25"},{"lineNumber":31,"author":{"gitId":"antrikshv"},"content":"        System.setOut(originalOut);","lastModifiedDate":"2021-10-25"},{"lineNumber":32,"author":{"gitId":"antrikshv"},"content":"        eventCatalog.clear();","lastModifiedDate":"2021-10-25"},{"lineNumber":33,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":34,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":35,"author":{"gitId":"antrikshv"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":36,"author":{"gitId":"crabnuggets"},"content":"    public void listCommand_overallScheduleTest() throws DukeException {","lastModifiedDate":"2021-10-26"},{"lineNumber":37,"author":{"gitId":"antrikshv"},"content":"        Command command1 \u003d Parser.parseCommand(\"list\");","lastModifiedDate":"2021-10-25"},{"lineNumber":38,"author":{"gitId":"antrikshv"},"content":"        command1.execute();","lastModifiedDate":"2021-10-25"},{"lineNumber":39,"author":{"gitId":"antrikshv"},"content":"        String expectedOutput \u003d \"OVERALL SCHEDULE\"","lastModifiedDate":"2021-10-25"},{"lineNumber":40,"author":{"gitId":"antrikshv"},"content":"                + System.lineSeparator()","lastModifiedDate":"2021-10-25"},{"lineNumber":41,"author":{"gitId":"antrikshv"},"content":"                + \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\"","lastModifiedDate":"2021-10-25"},{"lineNumber":42,"author":{"gitId":"antrikshv"},"content":"                + System.lineSeparator()","lastModifiedDate":"2021-10-25"},{"lineNumber":43,"author":{"gitId":"antrikshv"},"content":"                + \"1. [E][X] Peppa Pig\u0027s Concert (at: 19 Feb 2022 - 20:00)\"","lastModifiedDate":"2021-10-25"},{"lineNumber":44,"author":{"gitId":"antrikshv"},"content":"                + System.lineSeparator()","lastModifiedDate":"2021-10-25"},{"lineNumber":45,"author":{"gitId":"antrikshv"},"content":"                + \"2. [E][ ] Funfair (at: 20 Feb 2022 - 20:30)\"","lastModifiedDate":"2021-10-25"},{"lineNumber":46,"author":{"gitId":"antrikshv"},"content":"                + System.lineSeparator()","lastModifiedDate":"2021-10-25"},{"lineNumber":47,"author":{"gitId":"antrikshv"},"content":"                + System.lineSeparator()","lastModifiedDate":"2021-10-25"},{"lineNumber":48,"author":{"gitId":"antrikshv"},"content":"                + \"FURTHER COMMANDS\"","lastModifiedDate":"2021-10-25"},{"lineNumber":49,"author":{"gitId":"antrikshv"},"content":"                + System.lineSeparator()","lastModifiedDate":"2021-10-25"},{"lineNumber":50,"author":{"gitId":"antrikshv"},"content":"                + \"-----------------------\"","lastModifiedDate":"2021-10-25"},{"lineNumber":51,"author":{"gitId":"antrikshv"},"content":"                + System.lineSeparator()","lastModifiedDate":"2021-10-25"},{"lineNumber":52,"author":{"gitId":"antrikshv"},"content":"                + \"To list Task: list [Event Index] -t\"","lastModifiedDate":"2021-10-25"},{"lineNumber":53,"author":{"gitId":"antrikshv"},"content":"                + System.lineSeparator()","lastModifiedDate":"2021-10-25"},{"lineNumber":54,"author":{"gitId":"antrikshv"},"content":"                + \"To list Members of a Task: list [Event Index] t/[Task Index]\"","lastModifiedDate":"2021-10-25"},{"lineNumber":55,"author":{"gitId":"antrikshv"},"content":"                + System.lineSeparator();","lastModifiedDate":"2021-10-25"},{"lineNumber":56,"author":{"gitId":"antrikshv"},"content":"        assertEquals(expectedOutput, outContent.toString());","lastModifiedDate":"2021-10-25"},{"lineNumber":57,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":58,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":59,"author":{"gitId":"antrikshv"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":60,"author":{"gitId":"crabnuggets"},"content":"    public void listCommand_taskListTest() throws DukeException {","lastModifiedDate":"2021-10-26"},{"lineNumber":61,"author":{"gitId":"antrikshv"},"content":"        Command command1 \u003d Parser.parseCommand(\"list 1 -t\");","lastModifiedDate":"2021-10-25"},{"lineNumber":62,"author":{"gitId":"antrikshv"},"content":"        command1.execute();","lastModifiedDate":"2021-10-25"},{"lineNumber":63,"author":{"gitId":"antrikshv"},"content":"        String expectedOutput \u003d \"Event: Peppa Pig\u0027s Concert\"","lastModifiedDate":"2021-10-25"},{"lineNumber":64,"author":{"gitId":"antrikshv"},"content":"                + System.lineSeparator()","lastModifiedDate":"2021-10-25"},{"lineNumber":65,"author":{"gitId":"antrikshv"},"content":"                + \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\"","lastModifiedDate":"2021-10-25"},{"lineNumber":66,"author":{"gitId":"antrikshv"},"content":"                + System.lineSeparator()","lastModifiedDate":"2021-10-25"},{"lineNumber":67,"author":{"gitId":"antrikshv"},"content":"                + \"1. [T][ ] Collect Tickets (by: 18 Feb 2022 - 19:30)\"","lastModifiedDate":"2021-10-25"},{"lineNumber":68,"author":{"gitId":"antrikshv"},"content":"                + System.lineSeparator()","lastModifiedDate":"2021-10-25"},{"lineNumber":69,"author":{"gitId":"antrikshv"},"content":"                + \"2. [T][ ] Buy Boost (by: 19 Feb 2022 - 19:30)\"","lastModifiedDate":"2021-10-25"},{"lineNumber":70,"author":{"gitId":"antrikshv"},"content":"                + System.lineSeparator();","lastModifiedDate":"2021-10-25"},{"lineNumber":71,"author":{"gitId":"antrikshv"},"content":"        assertEquals(expectedOutput, outContent.toString());","lastModifiedDate":"2021-10-25"},{"lineNumber":72,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":73,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":74,"author":{"gitId":"antrikshv"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":75,"author":{"gitId":"crabnuggets"},"content":"    public void listCommand_memberListTest() throws DukeException {","lastModifiedDate":"2021-10-26"},{"lineNumber":76,"author":{"gitId":"antrikshv"},"content":"        Command command1 \u003d Parser.parseCommand(\"list 1 t/1\");","lastModifiedDate":"2021-10-25"},{"lineNumber":77,"author":{"gitId":"antrikshv"},"content":"        command1.execute();","lastModifiedDate":"2021-10-25"},{"lineNumber":78,"author":{"gitId":"antrikshv"},"content":"        String expectedOutput \u003d \"Event: Peppa Pig\u0027s Concert\"","lastModifiedDate":"2021-10-25"},{"lineNumber":79,"author":{"gitId":"antrikshv"},"content":"                + System.lineSeparator()","lastModifiedDate":"2021-10-25"},{"lineNumber":80,"author":{"gitId":"antrikshv"},"content":"                + \"Task: Collect Tickets\"","lastModifiedDate":"2021-10-25"},{"lineNumber":81,"author":{"gitId":"antrikshv"},"content":"                + System.lineSeparator()","lastModifiedDate":"2021-10-25"},{"lineNumber":82,"author":{"gitId":"antrikshv"},"content":"                + \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\"","lastModifiedDate":"2021-10-25"},{"lineNumber":83,"author":{"gitId":"antrikshv"},"content":"                + System.lineSeparator();","lastModifiedDate":"2021-10-25"},{"lineNumber":84,"author":{"gitId":"antrikshv"},"content":"        assertEquals(expectedOutput, outContent.toString());","lastModifiedDate":"2021-10-25"},{"lineNumber":85,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":86,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":87,"author":{"gitId":"antrikshv"},"content":"    void setUp() {","lastModifiedDate":"2021-10-25"},{"lineNumber":88,"author":{"gitId":"antrikshv"},"content":"        LocalDateTime event1DateTime \u003d Parser.convertDateTime(\"19-02-2022 2000\");","lastModifiedDate":"2021-10-25"},{"lineNumber":89,"author":{"gitId":"antrikshv"},"content":"        Event event1 \u003d new Event(\"Peppa Pig\u0027s Concert\",","lastModifiedDate":"2021-10-25"},{"lineNumber":90,"author":{"gitId":"antrikshv"},"content":"                \"Asia world tour\", event1DateTime,","lastModifiedDate":"2021-10-25"},{"lineNumber":91,"author":{"gitId":"antrikshv"},"content":"                \"Indoor Stadium\", 1000.90);","lastModifiedDate":"2021-10-25"},{"lineNumber":92,"author":{"gitId":"antrikshv"},"content":"        event1.markAsDone();","lastModifiedDate":"2021-10-25"},{"lineNumber":93,"author":{"gitId":"antrikshv"},"content":"        eventCatalog.add(event1);","lastModifiedDate":"2021-10-26"},{"lineNumber":94,"author":{"gitId":"antrikshv"},"content":"        LocalDateTime taskDeadline1 \u003d Parser.convertDateTime(\"19-02-2022 1930\");","lastModifiedDate":"2021-10-25"},{"lineNumber":95,"author":{"gitId":"antrikshv"},"content":"        Task task1 \u003d new Task(\"Buy Boost\", \"Need the boost for the concert\", taskDeadline1);","lastModifiedDate":"2021-10-25"},{"lineNumber":96,"author":{"gitId":"antrikshv"},"content":"        LocalDateTime taskDeadline2 \u003d Parser.convertDateTime(\"18-02-2022 1930\");","lastModifiedDate":"2021-10-25"},{"lineNumber":97,"author":{"gitId":"antrikshv"},"content":"        Task task2 \u003d new Task(\"Collect Tickets\", \"Collection point: Scape\", taskDeadline2);","lastModifiedDate":"2021-10-25"},{"lineNumber":98,"author":{"gitId":"antrikshv"},"content":"        LocalDateTime event2DateTime \u003d Parser.convertDateTime(\"20-02-2022 2030\");","lastModifiedDate":"2021-10-26"},{"lineNumber":99,"author":{"gitId":"antrikshv"},"content":"        Event event2 \u003d new Event(\"Funfair\",","lastModifiedDate":"2021-10-26"},{"lineNumber":100,"author":{"gitId":"antrikshv"},"content":"                \"For charity\", event2DateTime,","lastModifiedDate":"2021-10-26"},{"lineNumber":101,"author":{"gitId":"antrikshv"},"content":"                \"Parade square\", 2000.10);","lastModifiedDate":"2021-10-26"},{"lineNumber":102,"author":{"gitId":"antrikshv"},"content":"        eventCatalog.add(event2);","lastModifiedDate":"2021-10-26"},{"lineNumber":103,"author":{"gitId":"antrikshv"},"content":"        eventCatalog.get(0).addToTaskList(task1);","lastModifiedDate":"2021-10-25"},{"lineNumber":104,"author":{"gitId":"antrikshv"},"content":"        eventCatalog.get(0).addToTaskList(task2);","lastModifiedDate":"2021-10-25"},{"lineNumber":105,"author":{"gitId":"antrikshv"},"content":"        eventCatalog.sortCatalog();","lastModifiedDate":"2021-10-25"},{"lineNumber":106,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":107,"author":{"gitId":"antrikshv"},"content":"}","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"antrikshv":103,"crabnuggets":4}},{"path":"src/test/java/seedu/duke/commands/NextCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"antrikshv"},"content":"package seedu.duke.commands;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"antrikshv"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"antrikshv"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"antrikshv"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"antrikshv"},"content":"import seedu.duke.Ui;","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"crabnuggets"},"content":"import seedu.duke.exceptions.DukeException;","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"antrikshv"},"content":"import seedu.duke.items.Event;","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"antrikshv"},"content":"import seedu.duke.items.Task;","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"antrikshv"},"content":"import seedu.duke.parser.Parser;","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"antrikshv"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"antrikshv"},"content":"import java.io.PrintStream;","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"antrikshv"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"antrikshv"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"antrikshv"},"content":"import static seedu.duke.Duke.eventCatalog;","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"antrikshv"},"content":"public class NextCommandTest {","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"antrikshv"},"content":"    private final ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"antrikshv"},"content":"    private final PrintStream originalOut \u003d System.out;","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"antrikshv"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-25"},{"lineNumber":25,"author":{"gitId":"antrikshv"},"content":"    public void setUpStream() {","lastModifiedDate":"2021-10-25"},{"lineNumber":26,"author":{"gitId":"antrikshv"},"content":"        System.setOut(new PrintStream(outContent));","lastModifiedDate":"2021-10-25"},{"lineNumber":27,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"antrikshv"},"content":"    @AfterEach","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"antrikshv"},"content":"    public void restoreStream() {","lastModifiedDate":"2021-10-25"},{"lineNumber":31,"author":{"gitId":"antrikshv"},"content":"        System.setOut(originalOut);","lastModifiedDate":"2021-10-25"},{"lineNumber":32,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":33,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":34,"author":{"gitId":"antrikshv"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":35,"author":{"gitId":"crabnuggets"},"content":"    public void nextCommandResult_nextEarliestEvent() throws DukeException {","lastModifiedDate":"2021-10-26"},{"lineNumber":36,"author":{"gitId":"antrikshv"},"content":"        setUp();","lastModifiedDate":"2021-10-25"},{"lineNumber":37,"author":{"gitId":"antrikshv"},"content":"        Command command1 \u003d Parser.parseCommand(\"next event\");","lastModifiedDate":"2021-10-25"},{"lineNumber":38,"author":{"gitId":"antrikshv"},"content":"        Ui.printEvent(eventCatalog.get(0));","lastModifiedDate":"2021-10-25"},{"lineNumber":39,"author":{"gitId":"antrikshv"},"content":"        String expectedOutput \u003d \"Title: Peppa Pig\u0027s Concert\"","lastModifiedDate":"2021-10-25"},{"lineNumber":40,"author":{"gitId":"antrikshv"},"content":"                + System.lineSeparator()","lastModifiedDate":"2021-10-25"},{"lineNumber":41,"author":{"gitId":"antrikshv"},"content":"                + \"Date: 19 Feb 2022 - 20:00\"","lastModifiedDate":"2021-10-25"},{"lineNumber":42,"author":{"gitId":"antrikshv"},"content":"                + System.lineSeparator()","lastModifiedDate":"2021-10-25"},{"lineNumber":43,"author":{"gitId":"antrikshv"},"content":"                + \"Description: Asia world tour\"","lastModifiedDate":"2021-10-25"},{"lineNumber":44,"author":{"gitId":"antrikshv"},"content":"                + System.lineSeparator()","lastModifiedDate":"2021-10-25"},{"lineNumber":45,"author":{"gitId":"antrikshv"},"content":"                + \"Venue: Indoor Stadium\"","lastModifiedDate":"2021-10-25"},{"lineNumber":46,"author":{"gitId":"antrikshv"},"content":"                + System.lineSeparator()","lastModifiedDate":"2021-10-25"},{"lineNumber":47,"author":{"gitId":"antrikshv"},"content":"                + \"Budget: $1000.9\"","lastModifiedDate":"2021-10-25"},{"lineNumber":48,"author":{"gitId":"antrikshv"},"content":"                + System.lineSeparator()","lastModifiedDate":"2021-10-25"},{"lineNumber":49,"author":{"gitId":"antrikshv"},"content":"                + \"Tasks: \"","lastModifiedDate":"2021-10-25"},{"lineNumber":50,"author":{"gitId":"antrikshv"},"content":"                + System.lineSeparator()","lastModifiedDate":"2021-10-25"},{"lineNumber":51,"author":{"gitId":"antrikshv"},"content":"                + \"1. [T][ ] Collect Tickets (by: 18 Feb 2022 - 19:30)\"","lastModifiedDate":"2021-10-25"},{"lineNumber":52,"author":{"gitId":"antrikshv"},"content":"                + System.lineSeparator()","lastModifiedDate":"2021-10-25"},{"lineNumber":53,"author":{"gitId":"antrikshv"},"content":"                + \"2. [T][ ] Buy Boost (by: 19 Feb 2022 - 19:30)\"","lastModifiedDate":"2021-10-25"},{"lineNumber":54,"author":{"gitId":"antrikshv"},"content":"                + System.lineSeparator();","lastModifiedDate":"2021-10-25"},{"lineNumber":55,"author":{"gitId":"antrikshv"},"content":"        assertEquals(expectedOutput, outContent.toString());","lastModifiedDate":"2021-10-25"},{"lineNumber":56,"author":{"gitId":"antrikshv"},"content":"        assertEquals(\"Hope you have prepared everything!\", command1.execute().feedbackToUser);","lastModifiedDate":"2021-10-25"},{"lineNumber":57,"author":{"gitId":"antrikshv"},"content":"        eventCatalog.clear();","lastModifiedDate":"2021-10-25"},{"lineNumber":58,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":59,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":60,"author":{"gitId":"antrikshv"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":61,"author":{"gitId":"crabnuggets"},"content":"    public void nextCommandResult_nextEarliestTask_taskExists() throws DukeException {","lastModifiedDate":"2021-10-26"},{"lineNumber":62,"author":{"gitId":"antrikshv"},"content":"        setUp();","lastModifiedDate":"2021-10-25"},{"lineNumber":63,"author":{"gitId":"antrikshv"},"content":"        Command command1 \u003d Parser.parseCommand(\"next task 1\");","lastModifiedDate":"2021-10-25"},{"lineNumber":64,"author":{"gitId":"antrikshv"},"content":"        Ui.printTask(eventCatalog.get(0).getFromTaskList(0));","lastModifiedDate":"2021-10-25"},{"lineNumber":65,"author":{"gitId":"antrikshv"},"content":"        String expectedOutput \u003d \"Title: Collect Tickets\"","lastModifiedDate":"2021-10-25"},{"lineNumber":66,"author":{"gitId":"antrikshv"},"content":"                + System.lineSeparator()","lastModifiedDate":"2021-10-25"},{"lineNumber":67,"author":{"gitId":"antrikshv"},"content":"                + \"Deadline: 18 Feb 2022 - 19:30\"","lastModifiedDate":"2021-10-25"},{"lineNumber":68,"author":{"gitId":"antrikshv"},"content":"                + System.lineSeparator()","lastModifiedDate":"2021-10-25"},{"lineNumber":69,"author":{"gitId":"antrikshv"},"content":"                + \"Description: Collection point: Scape\"","lastModifiedDate":"2021-10-25"},{"lineNumber":70,"author":{"gitId":"antrikshv"},"content":"                + System.lineSeparator()","lastModifiedDate":"2021-10-25"},{"lineNumber":71,"author":{"gitId":"antrikshv"},"content":"                + \"Members: \"","lastModifiedDate":"2021-10-25"},{"lineNumber":72,"author":{"gitId":"antrikshv"},"content":"                + System.lineSeparator();","lastModifiedDate":"2021-10-25"},{"lineNumber":73,"author":{"gitId":"antrikshv"},"content":"        assertEquals(expectedOutput, outContent.toString());","lastModifiedDate":"2021-10-25"},{"lineNumber":74,"author":{"gitId":"antrikshv"},"content":"        assertEquals(\"Hope you have prepared everything!\", command1.execute().feedbackToUser);","lastModifiedDate":"2021-10-25"},{"lineNumber":75,"author":{"gitId":"antrikshv"},"content":"        eventCatalog.clear();","lastModifiedDate":"2021-10-25"},{"lineNumber":76,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":77,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":78,"author":{"gitId":"antrikshv"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":79,"author":{"gitId":"crabnuggets"},"content":"    public void nextCommandResult_nextEarliestTask_noTaskExists() throws DukeException {","lastModifiedDate":"2021-10-26"},{"lineNumber":80,"author":{"gitId":"antrikshv"},"content":"        setUp();","lastModifiedDate":"2021-10-25"},{"lineNumber":81,"author":{"gitId":"antrikshv"},"content":"        Command command1 \u003d Parser.parseCommand(\"next task 2\");","lastModifiedDate":"2021-10-25"},{"lineNumber":82,"author":{"gitId":"antrikshv"},"content":"        assertEquals(\"This Event has no tasks!\", command1.execute().feedbackToUser);","lastModifiedDate":"2021-10-25"},{"lineNumber":83,"author":{"gitId":"antrikshv"},"content":"        eventCatalog.clear();","lastModifiedDate":"2021-10-25"},{"lineNumber":84,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":85,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":86,"author":{"gitId":"antrikshv"},"content":"    void setUp() {","lastModifiedDate":"2021-10-25"},{"lineNumber":87,"author":{"gitId":"antrikshv"},"content":"        LocalDateTime event1DateTime \u003d Parser.convertDateTime(\"19-02-2022 2000\");","lastModifiedDate":"2021-10-25"},{"lineNumber":88,"author":{"gitId":"antrikshv"},"content":"        Event event1 \u003d new Event(\"Peppa Pig\u0027s Concert\",","lastModifiedDate":"2021-10-25"},{"lineNumber":89,"author":{"gitId":"antrikshv"},"content":"                \"Asia world tour\", event1DateTime,","lastModifiedDate":"2021-10-25"},{"lineNumber":90,"author":{"gitId":"antrikshv"},"content":"                \"Indoor Stadium\", 1000.90);","lastModifiedDate":"2021-10-25"},{"lineNumber":91,"author":{"gitId":"antrikshv"},"content":"        event1.markAsDone();","lastModifiedDate":"2021-10-25"},{"lineNumber":92,"author":{"gitId":"antrikshv"},"content":"        eventCatalog.add(event1);","lastModifiedDate":"2021-10-26"},{"lineNumber":93,"author":{"gitId":"antrikshv"},"content":"        LocalDateTime taskDeadline1 \u003d Parser.convertDateTime(\"19-02-2022 1930\");","lastModifiedDate":"2021-10-25"},{"lineNumber":94,"author":{"gitId":"antrikshv"},"content":"        Task task1 \u003d new Task(\"Buy Boost\", \"Need the boost for the concert\", taskDeadline1);","lastModifiedDate":"2021-10-25"},{"lineNumber":95,"author":{"gitId":"antrikshv"},"content":"        LocalDateTime taskDeadline2 \u003d Parser.convertDateTime(\"18-02-2022 1930\");","lastModifiedDate":"2021-10-25"},{"lineNumber":96,"author":{"gitId":"antrikshv"},"content":"        Task task2 \u003d new Task(\"Collect Tickets\", \"Collection point: Scape\", taskDeadline2);","lastModifiedDate":"2021-10-25"},{"lineNumber":97,"author":{"gitId":"antrikshv"},"content":"        LocalDateTime event2DateTime \u003d Parser.convertDateTime(\"20-02-2022 2030\");","lastModifiedDate":"2021-10-26"},{"lineNumber":98,"author":{"gitId":"antrikshv"},"content":"        Event event2 \u003d new Event(\"Funfair\",","lastModifiedDate":"2021-10-26"},{"lineNumber":99,"author":{"gitId":"antrikshv"},"content":"                \"For charity\", event2DateTime,","lastModifiedDate":"2021-10-26"},{"lineNumber":100,"author":{"gitId":"antrikshv"},"content":"                \"Parade square\", 2000.10);","lastModifiedDate":"2021-10-26"},{"lineNumber":101,"author":{"gitId":"antrikshv"},"content":"        eventCatalog.add(event2);","lastModifiedDate":"2021-10-26"},{"lineNumber":102,"author":{"gitId":"antrikshv"},"content":"        eventCatalog.get(0).addToTaskList(task1);","lastModifiedDate":"2021-10-25"},{"lineNumber":103,"author":{"gitId":"antrikshv"},"content":"        eventCatalog.get(0).addToTaskList(task2);","lastModifiedDate":"2021-10-25"},{"lineNumber":104,"author":{"gitId":"antrikshv"},"content":"        eventCatalog.sortCatalog();","lastModifiedDate":"2021-10-25"},{"lineNumber":105,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":106,"author":{"gitId":"antrikshv"},"content":"}","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"antrikshv":102,"crabnuggets":4}},{"path":"src/test/java/seedu/duke/commands/SelectCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"alwinangys"},"content":"package seedu.duke.commands;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"alwinangys"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"crabnuggets"},"content":"import seedu.duke.exceptions.DukeException;","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"alwinangys"},"content":"import seedu.duke.items.Event;","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"alwinangys"},"content":"import seedu.duke.items.Task;","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"alwinangys"},"content":"import seedu.duke.items.characteristics.Member;","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"alwinangys"},"content":"import seedu.duke.parser.Parser;","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"alwinangys"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"alwinangys"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"alwinangys"},"content":"import static seedu.duke.Duke.eventCatalog;","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"alwinangys"},"content":"class SelectCommandTest {","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"alwinangys"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"crabnuggets"},"content":"    void selectTaskUnderFirstEvent_TwoEventsWithOneTaskEach_correctTaskOutput() throws DukeException {","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"alwinangys"},"content":"        createEventsList();","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"alwinangys"},"content":"        Command command1 \u003d Parser.parseCommand(\"select -e 1\");","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"alwinangys"},"content":"        CommandResult feedback1 \u003d command1.execute();","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"alwinangys"},"content":"        assertTrue(feedback1.feedbackToUser.contains(\"Peppa Pig\u0027s Concert\"));","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"alwinangys"},"content":"        Command command2 \u003d Parser.parseCommand(\"select -t 1\");","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"alwinangys"},"content":"        CommandResult feedback2 \u003d command2.execute();","lastModifiedDate":"2021-10-25"},{"lineNumber":25,"author":{"gitId":"alwinangys"},"content":"        assertTrue(feedback2.feedbackToUser.contains(\"Hype myself up\"));","lastModifiedDate":"2021-10-25"},{"lineNumber":26,"author":{"gitId":"alwinangys"},"content":"        eventCatalog.clear();","lastModifiedDate":"2021-10-25"},{"lineNumber":27,"author":{"gitId":"alwinangys"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"alwinangys"},"content":"    private void createEventsList() {","lastModifiedDate":"2021-10-25"},{"lineNumber":31,"author":{"gitId":"alwinangys"},"content":"        eventCatalog.clear();","lastModifiedDate":"2021-10-25"},{"lineNumber":32,"author":{"gitId":"alwinangys"},"content":"        LocalDateTime event1DateTime \u003d Parser.convertDateTime(\"19-02-2022 2000\");","lastModifiedDate":"2021-10-25"},{"lineNumber":33,"author":{"gitId":"alwinangys"},"content":"        Event event1 \u003d new Event(\"Peppa Pig\u0027s Concert\",","lastModifiedDate":"2021-10-25"},{"lineNumber":34,"author":{"gitId":"alwinangys"},"content":"                \"Asia world tour\", event1DateTime,","lastModifiedDate":"2021-10-25"},{"lineNumber":35,"author":{"gitId":"alwinangys"},"content":"                \"Indoor Stadium\", 1000.90);","lastModifiedDate":"2021-10-25"},{"lineNumber":36,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":37,"author":{"gitId":"alwinangys"},"content":"        LocalDateTime task1DateTime \u003d Parser.convertDateTime(\"19-02-2022 1950\");","lastModifiedDate":"2021-10-25"},{"lineNumber":38,"author":{"gitId":"alwinangys"},"content":"        Task task1 \u003d new Task(\"Hype myself up\", \"Drink lots of sugar\", task1DateTime);","lastModifiedDate":"2021-10-25"},{"lineNumber":39,"author":{"gitId":"alwinangys"},"content":"        task1.memberList.add(new Member(\"Biggest Fan\"));","lastModifiedDate":"2021-10-25"},{"lineNumber":40,"author":{"gitId":"alwinangys"},"content":"        task1.markAsDone();","lastModifiedDate":"2021-10-25"},{"lineNumber":41,"author":{"gitId":"alwinangys"},"content":"        event1.addToTaskList(task1);","lastModifiedDate":"2021-10-25"},{"lineNumber":42,"author":{"gitId":"alwinangys"},"content":"        event1.getFromTaskList(0).markAsDone();","lastModifiedDate":"2021-10-25"},{"lineNumber":43,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":44,"author":{"gitId":"alwinangys"},"content":"        LocalDateTime task2DateTime \u003d Parser.convertDateTime(\"19-02-2022 1955\");","lastModifiedDate":"2021-10-25"},{"lineNumber":45,"author":{"gitId":"alwinangys"},"content":"        Task task2 \u003d new Task(\"Enter venue\", \"\", task2DateTime);","lastModifiedDate":"2021-10-25"},{"lineNumber":46,"author":{"gitId":"alwinangys"},"content":"        task2.memberList.add(new Member(\"Biggest Fan\"));","lastModifiedDate":"2021-10-25"},{"lineNumber":47,"author":{"gitId":"alwinangys"},"content":"        event1.addToTaskList(task2);","lastModifiedDate":"2021-10-25"},{"lineNumber":48,"author":{"gitId":"alwinangys"},"content":"        event1.markAsDone();","lastModifiedDate":"2021-10-25"},{"lineNumber":49,"author":{"gitId":"alwinangys"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":50,"author":{"gitId":"alwinangys"},"content":"        LocalDateTime event2DateTime \u003d Parser.convertDateTime(\"20-02-2022 2030\");","lastModifiedDate":"2021-10-25"},{"lineNumber":51,"author":{"gitId":"alwinangys"},"content":"        Event event2 \u003d new Event(\"Funfair\",","lastModifiedDate":"2021-10-25"},{"lineNumber":52,"author":{"gitId":"alwinangys"},"content":"                \"For charity\", event2DateTime,","lastModifiedDate":"2021-10-25"},{"lineNumber":53,"author":{"gitId":"alwinangys"},"content":"                \"Parade square\", 2000.10);","lastModifiedDate":"2021-10-25"},{"lineNumber":54,"author":{"gitId":"alwinangys"},"content":"        eventCatalog.add(event1);","lastModifiedDate":"2021-10-25"},{"lineNumber":55,"author":{"gitId":"alwinangys"},"content":"        eventCatalog.add(event2);","lastModifiedDate":"2021-10-25"},{"lineNumber":56,"author":{"gitId":"alwinangys"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":57,"author":{"gitId":"alwinangys"},"content":"}","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"crabnuggets":2,"alwinangys":55}},{"path":"src/test/java/seedu/duke/commands/UpdateCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"antrikshv"},"content":"package seedu.duke.commands;","lastModifiedDate":"2021-10-26"},{"lineNumber":2,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":3,"author":{"gitId":"antrikshv"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"antrikshv"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"antrikshv"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"crabnuggets"},"content":"import seedu.duke.exceptions.DukeException;","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"antrikshv"},"content":"import seedu.duke.items.Event;","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"antrikshv"},"content":"import seedu.duke.items.Task;","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"antrikshv"},"content":"import seedu.duke.parser.Parser;","lastModifiedDate":"2021-10-26"},{"lineNumber":11,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"antrikshv"},"content":"import java.io.ByteArrayInputStream;","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"antrikshv"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"antrikshv"},"content":"import java.io.InputStream;","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"antrikshv"},"content":"import java.io.PrintStream;","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"antrikshv"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"antrikshv"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"antrikshv"},"content":"import static seedu.duke.Duke.eventCatalog;","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"antrikshv"},"content":"public class UpdateCommandTest {","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"antrikshv"},"content":"    private final ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"antrikshv"},"content":"    private final PrintStream originalOut \u003d System.out;","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"antrikshv"},"content":"    private static ByteArrayInputStream in;","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"antrikshv"},"content":"    public void setInput(String input) {","lastModifiedDate":"2021-10-26"},{"lineNumber":27,"author":{"gitId":"antrikshv"},"content":"        in \u003d new ByteArrayInputStream(input.getBytes());","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"antrikshv"},"content":"        System.setIn(in);","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"antrikshv"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-26"},{"lineNumber":32,"author":{"gitId":"antrikshv"},"content":"    public void setUpStream() {","lastModifiedDate":"2021-10-26"},{"lineNumber":33,"author":{"gitId":"antrikshv"},"content":"        System.setOut(new PrintStream(outContent));","lastModifiedDate":"2021-10-26"},{"lineNumber":34,"author":{"gitId":"antrikshv"},"content":"        setUp();","lastModifiedDate":"2021-10-26"},{"lineNumber":35,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":36,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":37,"author":{"gitId":"antrikshv"},"content":"    @AfterEach","lastModifiedDate":"2021-10-26"},{"lineNumber":38,"author":{"gitId":"antrikshv"},"content":"    public void restoreStream() {","lastModifiedDate":"2021-10-26"},{"lineNumber":39,"author":{"gitId":"antrikshv"},"content":"        System.setOut(originalOut);","lastModifiedDate":"2021-10-26"},{"lineNumber":40,"author":{"gitId":"antrikshv"},"content":"        eventCatalog.clear();","lastModifiedDate":"2021-10-26"},{"lineNumber":41,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":42,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":43,"author":{"gitId":"antrikshv"},"content":"    @Test","lastModifiedDate":"2021-10-26"},{"lineNumber":44,"author":{"gitId":"crabnuggets"},"content":"    public void updateCommand_updateNameDateOfEvent_success() throws DukeException {","lastModifiedDate":"2021-10-26"},{"lineNumber":45,"author":{"gitId":"antrikshv"},"content":"        final InputStream sysInBackup \u003d System.in;","lastModifiedDate":"2021-10-26"},{"lineNumber":46,"author":{"gitId":"antrikshv"},"content":"        setInput(\"title/Charlie Puth Concert\u003e date/21-02-2022 2000\");","lastModifiedDate":"2021-10-26"},{"lineNumber":47,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":48,"author":{"gitId":"antrikshv"},"content":"        Command command1 \u003d Parser.parseCommand(\"update 2\");","lastModifiedDate":"2021-10-26"},{"lineNumber":49,"author":{"gitId":"antrikshv"},"content":"        command1.execute();","lastModifiedDate":"2021-10-26"},{"lineNumber":50,"author":{"gitId":"antrikshv"},"content":"        assertEquals(\"Charlie Puth Concert\", eventCatalog.get(1).getTitle());","lastModifiedDate":"2021-10-26"},{"lineNumber":51,"author":{"gitId":"antrikshv"},"content":"        assertEquals(\"21 Feb 2022 - 20:00\", eventCatalog.get(1).getStringDateTime());","lastModifiedDate":"2021-10-26"},{"lineNumber":52,"author":{"gitId":"antrikshv"},"content":"        System.setIn(sysInBackup);","lastModifiedDate":"2021-10-26"},{"lineNumber":53,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":54,"author":{"gitId":"antrikshv"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":55,"author":{"gitId":"antrikshv"},"content":"    void setUp() {","lastModifiedDate":"2021-10-26"},{"lineNumber":56,"author":{"gitId":"antrikshv"},"content":"        LocalDateTime event1DateTime \u003d Parser.convertDateTime(\"19-02-2022 2000\");","lastModifiedDate":"2021-10-26"},{"lineNumber":57,"author":{"gitId":"antrikshv"},"content":"        Event event1 \u003d new Event(\"Peppa Pig\u0027s Concert\",","lastModifiedDate":"2021-10-26"},{"lineNumber":58,"author":{"gitId":"antrikshv"},"content":"                \"Asia world tour\", event1DateTime,","lastModifiedDate":"2021-10-26"},{"lineNumber":59,"author":{"gitId":"antrikshv"},"content":"                \"Indoor Stadium\", 1000.90);","lastModifiedDate":"2021-10-26"},{"lineNumber":60,"author":{"gitId":"antrikshv"},"content":"        event1.markAsDone();","lastModifiedDate":"2021-10-26"},{"lineNumber":61,"author":{"gitId":"antrikshv"},"content":"        eventCatalog.add(event1);","lastModifiedDate":"2021-10-26"},{"lineNumber":62,"author":{"gitId":"antrikshv"},"content":"        LocalDateTime taskDeadline1 \u003d Parser.convertDateTime(\"19-02-2022 1930\");","lastModifiedDate":"2021-10-26"},{"lineNumber":63,"author":{"gitId":"antrikshv"},"content":"        Task task1 \u003d new Task(\"Buy Boost\", \"Need the boost for the concert\", taskDeadline1);","lastModifiedDate":"2021-10-26"},{"lineNumber":64,"author":{"gitId":"antrikshv"},"content":"        LocalDateTime taskDeadline2 \u003d Parser.convertDateTime(\"18-02-2022 1930\");","lastModifiedDate":"2021-10-26"},{"lineNumber":65,"author":{"gitId":"antrikshv"},"content":"        Task task2 \u003d new Task(\"Collect Tickets\", \"Collection point: Scape\", taskDeadline2);","lastModifiedDate":"2021-10-26"},{"lineNumber":66,"author":{"gitId":"antrikshv"},"content":"        LocalDateTime event2DateTime \u003d Parser.convertDateTime(\"20-02-2022 2030\");","lastModifiedDate":"2021-10-26"},{"lineNumber":67,"author":{"gitId":"antrikshv"},"content":"        Event event2 \u003d new Event(\"Funfair\",","lastModifiedDate":"2021-10-26"},{"lineNumber":68,"author":{"gitId":"antrikshv"},"content":"                \"For charity\", event2DateTime,","lastModifiedDate":"2021-10-26"},{"lineNumber":69,"author":{"gitId":"antrikshv"},"content":"                \"Parade square\", 2000.10);","lastModifiedDate":"2021-10-26"},{"lineNumber":70,"author":{"gitId":"antrikshv"},"content":"        eventCatalog.add(event2);","lastModifiedDate":"2021-10-26"},{"lineNumber":71,"author":{"gitId":"antrikshv"},"content":"        eventCatalog.get(0).addToTaskList(task1);","lastModifiedDate":"2021-10-26"},{"lineNumber":72,"author":{"gitId":"antrikshv"},"content":"        eventCatalog.get(0).addToTaskList(task2);","lastModifiedDate":"2021-10-26"},{"lineNumber":73,"author":{"gitId":"antrikshv"},"content":"        eventCatalog.sortCatalog();","lastModifiedDate":"2021-10-26"},{"lineNumber":74,"author":{"gitId":"antrikshv"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":75,"author":{"gitId":"antrikshv"},"content":"}","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"antrikshv":73,"crabnuggets":2}},{"path":"src/test/java/seedu/duke/storage/EventDecoderTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"crabnuggets"},"content":"package seedu.duke.storage;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"crabnuggets"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"crabnuggets"},"content":"import seedu.duke.items.Event;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"crabnuggets"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"crabnuggets"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"crabnuggets"},"content":"class EventDecoderTest {","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"crabnuggets"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"crabnuggets"},"content":"    void decodeEventFromString_stringValidFormat_expectOneEvent() {","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"crabnuggets"},"content":"        // Setting up","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"crabnuggets"},"content":"        String encodedEvent \u003d \"e | Peppa Pig\u0027s Concert | X | Asia world tour | 19-02-2022 2000 \"","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"crabnuggets"},"content":"                + \"| Indoor Stadium | 1000.9\";","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"crabnuggets"},"content":"        Event decodedEvent \u003d EventDecoder.decodeEventFromString(encodedEvent);","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"crabnuggets"},"content":"        String expectedTitle \u003d \"Peppa Pig\u0027s Concert\";","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"crabnuggets"},"content":"        assertEquals(expectedTitle, decodedEvent.getTitle());","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"crabnuggets"},"content":"        String expectedStatus \u003d \"X\";","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"crabnuggets"},"content":"        assertEquals(expectedStatus, decodedEvent.getStatusIcon());","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"crabnuggets"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"crabnuggets"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"crabnuggets":23}},{"path":"src/test/java/seedu/duke/storage/EventEncoderTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"crabnuggets"},"content":"package seedu.duke.storage;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"crabnuggets"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"crabnuggets"},"content":"import seedu.duke.items.characteristics.Member;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"crabnuggets"},"content":"import seedu.duke.parser.Parser;","lastModifiedDate":"2021-10-23"},{"lineNumber":6,"author":{"gitId":"crabnuggets"},"content":"import seedu.duke.items.Event;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"crabnuggets"},"content":"import seedu.duke.items.Task;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"crabnuggets"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"crabnuggets"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"crabnuggets"},"content":"import java.util.List;","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"crabnuggets"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"crabnuggets"},"content":"class EventEncoderTest {","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"crabnuggets"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"crabnuggets"},"content":"    void encodeEventsList_listOfTwoEvents_expectListOfTwoStrings() {","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"crabnuggets"},"content":"        // Setting up","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"crabnuggets"},"content":"        ArrayList\u003cEvent\u003e eventsList \u003d createEventsList();","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"crabnuggets"},"content":"        List\u003cString\u003e encodedEventsList \u003d EventEncoder.encodeEventsList(eventsList);","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"crabnuggets"},"content":"        // Check number of items in encodedEventsList","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"crabnuggets"},"content":"        assertEquals(4, encodedEventsList.size());","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"crabnuggets"},"content":"        // Check the event is saved in the correct String format","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"crabnuggets"},"content":"        String expectedEvent1 \u003d \"e | Peppa Pig\u0027s Concert | X | Asia world tour \"","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"crabnuggets"},"content":"                + \"| 19-02-2022 2000 | Indoor Stadium | 1000.9\";","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"crabnuggets"},"content":"        assertEquals(expectedEvent1, encodedEventsList.get(0));","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"crabnuggets"},"content":"        String expectedSubTask1 \u003d \"t | Hype myself up | X | Drink lots of sugar | 19-02-2022 1950 | Biggest_Fan\";","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"crabnuggets"},"content":"        assertEquals(expectedSubTask1, encodedEventsList.get(1));","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"crabnuggets"},"content":"        String expectedSubTask2 \u003d \"t | Enter venue |   |  | 19-02-2022 1955 | Biggest_Fan\";","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"crabnuggets"},"content":"        assertEquals(expectedSubTask2, encodedEventsList.get(2));","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"crabnuggets"},"content":"        String expectedEvent2 \u003d \"e | Funfair |   | For charity | 20-02-2022 2030 | Parade square | 2000.1\";","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"crabnuggets"},"content":"        assertEquals(expectedEvent2, encodedEventsList.get(3));","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"crabnuggets"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":37,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"crabnuggets"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"crabnuggets"},"content":"     * Generates a list of events for testing.","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"crabnuggets"},"content":"     * Event 1 contains 2 sub-tasks, the first contains all fields whilst","lastModifiedDate":"2021-10-19"},{"lineNumber":41,"author":{"gitId":"crabnuggets"},"content":"     * the second contains an empty description fields.","lastModifiedDate":"2021-10-19"},{"lineNumber":42,"author":{"gitId":"crabnuggets"},"content":"     * Event 2 contains no sub-tasks.","lastModifiedDate":"2021-10-19"},{"lineNumber":43,"author":{"gitId":"crabnuggets"},"content":"     *","lastModifiedDate":"2021-10-19"},{"lineNumber":44,"author":{"gitId":"crabnuggets"},"content":"     * @return The generated list of events for testing with 2 events and 2 tasks in total.","lastModifiedDate":"2021-10-19"},{"lineNumber":45,"author":{"gitId":"crabnuggets"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":46,"author":{"gitId":"crabnuggets"},"content":"    private ArrayList\u003cEvent\u003e createEventsList() {","lastModifiedDate":"2021-10-19"},{"lineNumber":47,"author":{"gitId":"crabnuggets"},"content":"        LocalDateTime event1DateTime \u003d Parser.convertDateTime(\"19-02-2022 2000\");","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"crabnuggets"},"content":"        Event event1 \u003d new Event(\"Peppa Pig\u0027s Concert\",","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"crabnuggets"},"content":"                \"Asia world tour\", event1DateTime,","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"crabnuggets"},"content":"                \"Indoor Stadium\", 1000.90);","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":52,"author":{"gitId":"crabnuggets"},"content":"        LocalDateTime task1DateTime \u003d Parser.convertDateTime(\"19-02-2022 1950\");","lastModifiedDate":"2021-10-19"},{"lineNumber":53,"author":{"gitId":"crabnuggets"},"content":"        Task task1 \u003d new Task(\"Hype myself up\", \"Drink lots of sugar\", task1DateTime);","lastModifiedDate":"2021-10-24"},{"lineNumber":54,"author":{"gitId":"crabnuggets"},"content":"        task1.memberList.add(new Member(\"Biggest Fan\"));","lastModifiedDate":"2021-10-24"},{"lineNumber":55,"author":{"gitId":"crabnuggets"},"content":"        task1.markAsDone();","lastModifiedDate":"2021-10-24"},{"lineNumber":56,"author":{"gitId":"crabnuggets"},"content":"        event1.addToTaskList(task1);","lastModifiedDate":"2021-10-24"},{"lineNumber":57,"author":{"gitId":"Alvinlj00"},"content":"        event1.getFromTaskList(0).markAsDone();","lastModifiedDate":"2021-10-21"},{"lineNumber":58,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":59,"author":{"gitId":"crabnuggets"},"content":"        LocalDateTime task2DateTime \u003d Parser.convertDateTime(\"19-02-2022 1955\");","lastModifiedDate":"2021-10-19"},{"lineNumber":60,"author":{"gitId":"crabnuggets"},"content":"        Task task2 \u003d new Task(\"Enter venue\", \"\", task2DateTime);","lastModifiedDate":"2021-10-24"},{"lineNumber":61,"author":{"gitId":"crabnuggets"},"content":"        task2.memberList.add(new Member(\"Biggest Fan\"));","lastModifiedDate":"2021-10-24"},{"lineNumber":62,"author":{"gitId":"crabnuggets"},"content":"        event1.addToTaskList(task2);","lastModifiedDate":"2021-10-24"},{"lineNumber":63,"author":{"gitId":"crabnuggets"},"content":"        event1.markAsDone();","lastModifiedDate":"2021-10-12"},{"lineNumber":64,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":65,"author":{"gitId":"crabnuggets"},"content":"        LocalDateTime event2DateTime \u003d Parser.convertDateTime(\"20-02-2022 2030\");","lastModifiedDate":"2021-10-12"},{"lineNumber":66,"author":{"gitId":"crabnuggets"},"content":"        Event event2 \u003d new Event(\"Funfair\",","lastModifiedDate":"2021-10-12"},{"lineNumber":67,"author":{"gitId":"crabnuggets"},"content":"                \"For charity\", event2DateTime,","lastModifiedDate":"2021-10-12"},{"lineNumber":68,"author":{"gitId":"crabnuggets"},"content":"                \"Parade square\", 2000.10);","lastModifiedDate":"2021-10-12"},{"lineNumber":69,"author":{"gitId":"crabnuggets"},"content":"        ArrayList\u003cEvent\u003e eventsList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-12"},{"lineNumber":70,"author":{"gitId":"crabnuggets"},"content":"        eventsList.add(event1);","lastModifiedDate":"2021-10-12"},{"lineNumber":71,"author":{"gitId":"crabnuggets"},"content":"        eventsList.add(event2);","lastModifiedDate":"2021-10-12"},{"lineNumber":72,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":73,"author":{"gitId":"crabnuggets"},"content":"        return eventsList;","lastModifiedDate":"2021-10-19"},{"lineNumber":74,"author":{"gitId":"crabnuggets"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":75,"author":{"gitId":"crabnuggets"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"Alvinlj00":1,"crabnuggets":74}},{"path":"src/test/java/seedu/duke/storage/MemberDecoderTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"crabnuggets"},"content":"package seedu.duke.storage;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"crabnuggets"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"crabnuggets"},"content":"import seedu.duke.items.characteristics.Member;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"crabnuggets"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"crabnuggets"},"content":"class MemberDecoderTest {","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"crabnuggets"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"crabnuggets"},"content":"    void decodeMemberFromString_stringValidFormat_expectOneMember() {","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"crabnuggets"},"content":"        // Setting up","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"crabnuggets"},"content":"        String encodedMember \u003d \"m | John_Doe\";","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"crabnuggets"},"content":"        Member decodedMember \u003d MemberDecoder.decodeMemberFromString(encodedMember);","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"crabnuggets"},"content":"        String expectedName \u003d \"John Doe\";","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"crabnuggets"},"content":"        assertEquals(expectedName, decodedMember.getName());","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"crabnuggets"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"crabnuggets"},"content":"}","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"crabnuggets":19}},{"path":"src/test/java/seedu/duke/storage/MemberEncoderTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"crabnuggets"},"content":"package seedu.duke.storage;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"crabnuggets"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"crabnuggets"},"content":"import seedu.duke.items.characteristics.Member;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"crabnuggets"},"content":"import seedu.duke.items.mainlists.MemberRoster;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"crabnuggets"},"content":"import java.util.List;","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"crabnuggets"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"crabnuggets"},"content":"class MemberEncoderTest {","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"crabnuggets"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"crabnuggets"},"content":"    void encodeMembersList_listOfTwoMembers_expectListOfTwoStrings() {","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"crabnuggets"},"content":"        // Setting up","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"crabnuggets"},"content":"        Member member1 \u003d new Member(\"John Doe\");","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"crabnuggets"},"content":"        Member member2 \u003d new Member(\"Jane Doe\");","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"crabnuggets"},"content":"        MemberRoster memberRoster \u003d MemberRoster.getInstance();","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"crabnuggets"},"content":"        memberRoster.add(member1);","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"crabnuggets"},"content":"        memberRoster.add(member2);","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"crabnuggets"},"content":"        List\u003cString\u003e encodedMemberRoster \u003d MemberEncoder.encodeMembersList(memberRoster);","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"crabnuggets"},"content":"        // Check number of items in encodedMemberList","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"crabnuggets"},"content":"        assertEquals(2, encodedMemberRoster.size());","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"crabnuggets"},"content":"        // Check the members are saved in the correct String format","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"crabnuggets"},"content":"        String expectedResult1 \u003d \"m | John_Doe\";","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"crabnuggets"},"content":"        assertEquals(expectedResult1, encodedMemberRoster.get(0));","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"crabnuggets"},"content":"        String expectedResult2 \u003d \"m | Jane_Doe\";","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"crabnuggets"},"content":"        assertEquals(expectedResult2, encodedMemberRoster.get(1));","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"crabnuggets"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"crabnuggets"},"content":"}","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"crabnuggets":32}},{"path":"src/test/java/seedu/duke/storage/TaskDecoderTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"crabnuggets"},"content":"package seedu.duke.storage;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"crabnuggets"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"crabnuggets"},"content":"import seedu.duke.items.Task;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"crabnuggets"},"content":"import seedu.duke.items.characteristics.Member;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"crabnuggets"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"crabnuggets"},"content":"class TaskDecoderTest {","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"crabnuggets"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"crabnuggets"},"content":"    void decodeTaskFromString_stringValidFormat_expectOneTask() {","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"crabnuggets"},"content":"        // Setting up","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"crabnuggets"},"content":"        String encodedTask \u003d \"t | Do homework | X | CS2113T tp V1.0 | 19-02-2022 2359 | John_Doe Jane_Doe\";","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"crabnuggets"},"content":"        Task decodedTask \u003d TaskDecoder.decodeTaskFromString(encodedTask);","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"crabnuggets"},"content":"        String expectedTitle \u003d \"Do homework\";","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"crabnuggets"},"content":"        assertEquals(expectedTitle, decodedTask.getTitle());","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"crabnuggets"},"content":"        Member expectedMember \u003d new Member(\"John Doe\");","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"crabnuggets"},"content":"        assertEquals(expectedMember.getName(), decodedTask.memberList.get(0).getName());","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"crabnuggets"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"crabnuggets"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"crabnuggets":22}},{"path":"src/test/java/seedu/duke/storage/TaskEncoderTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"crabnuggets"},"content":"package seedu.duke.storage;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"crabnuggets"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"crabnuggets"},"content":"import seedu.duke.items.Event;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"crabnuggets"},"content":"import seedu.duke.items.characteristics.Member;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"crabnuggets"},"content":"import seedu.duke.parser.Parser;","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"crabnuggets"},"content":"import seedu.duke.items.Task;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"crabnuggets"},"content":"import javax.swing.plaf.metal.MetalMenuBarUI;","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"crabnuggets"},"content":"import java.lang.reflect.Array;","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"crabnuggets"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"crabnuggets"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"crabnuggets"},"content":"import java.util.List;","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"crabnuggets"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"crabnuggets"},"content":"class TaskEncoderTest {","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"crabnuggets"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"crabnuggets"},"content":"    void encodeTasksList_listOfTwoTasks_expectListOfTwoStrings() {","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"crabnuggets"},"content":"        // Setting up","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"crabnuggets"},"content":"        ArrayList\u003cTask\u003e tasksList \u003d createTasksList();","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"crabnuggets"},"content":"        List\u003cString\u003e encodedTasksList \u003d TaskEncoder.encodeTasksList(tasksList);","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"crabnuggets"},"content":"        // Check number of items in encodedTasksList","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"crabnuggets"},"content":"        assertEquals(2, encodedTasksList.size());","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"crabnuggets"},"content":"        // Check the item is saved in the correct String format","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"crabnuggets"},"content":"        String expectedResult1 \u003d \"t | Do homework | X | CS2113T tp V1.0 | 19-02-2022 2359 | John_Doe Jane_Doe\";","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"crabnuggets"},"content":"        String expectedResult2 \u003d \"t | Waking up |   | This is difficult... | 19-02-2022 0800 | Jack_Doe\";","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"crabnuggets"},"content":"        assertEquals(expectedResult1, encodedTasksList.get(0));","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"crabnuggets"},"content":"        assertEquals(expectedResult2, encodedTasksList.get(1));","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"crabnuggets"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"crabnuggets"},"content":"    private ArrayList\u003cTask\u003e createTasksList() {","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"crabnuggets"},"content":"        LocalDateTime task1Deadline \u003d Parser.convertDateTime(\"19-02-2022 2359\");","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"crabnuggets"},"content":"        ArrayList\u003cMember\u003e memberList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-24"},{"lineNumber":38,"author":{"gitId":"crabnuggets"},"content":"        Task task1 \u003d new Task(\"Do homework\", \"CS2113T tp V1.0\", task1Deadline);","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"crabnuggets"},"content":"        task1.memberList.add(new Member(\"John Doe\"));","lastModifiedDate":"2021-10-24"},{"lineNumber":40,"author":{"gitId":"crabnuggets"},"content":"        task1.memberList.add(new Member(\"Jane Doe\"));","lastModifiedDate":"2021-10-24"},{"lineNumber":41,"author":{"gitId":"crabnuggets"},"content":"        task1.markAsDone();","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":43,"author":{"gitId":"crabnuggets"},"content":"        LocalDateTime task2Deadline \u003d Parser.convertDateTime(\"19-02-2022 0800\");","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"crabnuggets"},"content":"        Task task2 \u003d new Task(\"Waking up\", \"This is difficult...\", task2Deadline);","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"crabnuggets"},"content":"        task2.memberList.add(new Member(\"Jack Doe\"));","lastModifiedDate":"2021-10-24"},{"lineNumber":46,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":47,"author":{"gitId":"crabnuggets"},"content":"        ArrayList\u003cTask\u003e tasksList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"crabnuggets"},"content":"        tasksList.add(task1);","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"crabnuggets"},"content":"        tasksList.add(task2);","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"crabnuggets"},"content":"        return tasksList;","lastModifiedDate":"2021-10-24"},{"lineNumber":52,"author":{"gitId":"crabnuggets"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":54,"author":{"gitId":"crabnuggets"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":55,"author":{"gitId":"crabnuggets"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"crabnuggets":55}}]
