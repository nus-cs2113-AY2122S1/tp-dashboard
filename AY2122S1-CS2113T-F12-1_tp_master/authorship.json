[{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"astralum"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":29,"author":{"gitId":"astralum"},"content":"        systemProperty(\"junit.platform.output.capture.stdout\", true);","lastModifiedDate":"2021-10-14"},{"lineNumber":30,"author":{"gitId":"astralum"},"content":"        systemProperty(\"junit.platform.output.capture.stderr\", true);","lastModifiedDate":"2021-10-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    mainClassName \u003d \"seedu.duke.Duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.23\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"xkisxk"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2021-10-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"astralum":3,"xkisxk":1,"-":46}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# About us","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"Display | Name | Github Profile | Portfolio ","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"--------|:----:|:--------------:|:---------:","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"xRossKoh"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":6,"author":{"gitId":"xRossKoh"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Koh Meng Kiat, Kenneth | [Github](https://github.com/) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2021-10-01"},{"lineNumber":7,"author":{"gitId":"JWweiyin"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Joanne Wong Wei Yin | [Github](https://github.com/) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2021-10-01"},{"lineNumber":8,"author":{"gitId":"ThaddeusLim99"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Thaddeus Lim | [Github](https://github.com/) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2021-10-01"},{"lineNumber":9,"author":{"gitId":"xkisxk"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Jiang Xing Kai | [Github](https://github.com/) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2021-10-01"},{"lineNumber":10,"author":{"gitId":"astralum"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Jin Minyue | [Github](https://github.com/) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2021-10-01"}],"authorContributionMap":{"JWweiyin":1,"ThaddeusLim99":1,"astralum":1,"xRossKoh":2,"xkisxk":1,"-":4}},{"path":"src/main/java/seedu/duke/Answer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ThaddeusLim99"},"content":"package seedu.duke;","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"xRossKoh"},"content":"/**","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"xRossKoh"},"content":" * Represents information about a single user answer when test function is invoked.","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"xRossKoh"},"content":" */","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"ThaddeusLim99"},"content":"public class Answer {","lastModifiedDate":"2021-10-04"},{"lineNumber":7,"author":{"gitId":"ThaddeusLim99"},"content":"    private String answer;","lastModifiedDate":"2021-10-04"},{"lineNumber":8,"author":{"gitId":"ThaddeusLim99"},"content":"    private int questionIndex;","lastModifiedDate":"2021-10-04"},{"lineNumber":9,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":10,"author":{"gitId":"ThaddeusLim99"},"content":"    public Answer(String answer, int questionIndex) {","lastModifiedDate":"2021-10-04"},{"lineNumber":11,"author":{"gitId":"ThaddeusLim99"},"content":"        this.answer \u003d answer;","lastModifiedDate":"2021-10-04"},{"lineNumber":12,"author":{"gitId":"ThaddeusLim99"},"content":"        this.questionIndex \u003d questionIndex;","lastModifiedDate":"2021-10-04"},{"lineNumber":13,"author":{"gitId":"ThaddeusLim99"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":14,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":15,"author":{"gitId":"ThaddeusLim99"},"content":"    //getter for front","lastModifiedDate":"2021-10-04"},{"lineNumber":16,"author":{"gitId":"ThaddeusLim99"},"content":"    public String getAnswer() {","lastModifiedDate":"2021-10-04"},{"lineNumber":17,"author":{"gitId":"ThaddeusLim99"},"content":"        return this.answer;","lastModifiedDate":"2021-10-04"},{"lineNumber":18,"author":{"gitId":"ThaddeusLim99"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":19,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":20,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":21,"author":{"gitId":"ThaddeusLim99"},"content":"}","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"ThaddeusLim99":18,"xRossKoh":3}},{"path":"src/main/java/seedu/duke/CardLiUi.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xkisxk"},"content":"package seedu.duke;","lastModifiedDate":"2021-10-02"},{"lineNumber":2,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":3,"author":{"gitId":"xkisxk"},"content":"import java.io.InputStream;","lastModifiedDate":"2021-10-02"},{"lineNumber":4,"author":{"gitId":"xkisxk"},"content":"import java.io.PrintStream;","lastModifiedDate":"2021-10-02"},{"lineNumber":5,"author":{"gitId":"xkisxk"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-10-02"},{"lineNumber":6,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":7,"author":{"gitId":"xkisxk"},"content":"public class CardLiUi {","lastModifiedDate":"2021-10-02"},{"lineNumber":8,"author":{"gitId":"xkisxk"},"content":"    private final Scanner in;","lastModifiedDate":"2021-10-02"},{"lineNumber":9,"author":{"gitId":"xkisxk"},"content":"    private final PrintStream out;","lastModifiedDate":"2021-10-02"},{"lineNumber":10,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":11,"author":{"gitId":"xkisxk"},"content":"    public CardLiUi() {","lastModifiedDate":"2021-10-02"},{"lineNumber":12,"author":{"gitId":"xkisxk"},"content":"        this(System.in, System.out);","lastModifiedDate":"2021-10-02"},{"lineNumber":13,"author":{"gitId":"xkisxk"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":14,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":15,"author":{"gitId":"xkisxk"},"content":"    public CardLiUi(InputStream in, PrintStream out) {","lastModifiedDate":"2021-10-02"},{"lineNumber":16,"author":{"gitId":"xkisxk"},"content":"        this.in \u003d new Scanner(in);","lastModifiedDate":"2021-10-02"},{"lineNumber":17,"author":{"gitId":"xkisxk"},"content":"        this.out \u003d out;","lastModifiedDate":"2021-10-02"},{"lineNumber":18,"author":{"gitId":"xkisxk"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":19,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":20,"author":{"gitId":"xkisxk"},"content":"    public String getUserMessage() {","lastModifiedDate":"2021-10-02"},{"lineNumber":21,"author":{"gitId":"xkisxk"},"content":"        return in.nextLine();","lastModifiedDate":"2021-10-02"},{"lineNumber":22,"author":{"gitId":"xkisxk"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":23,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":24,"author":{"gitId":"xkisxk"},"content":"    public void printByeMessage() {","lastModifiedDate":"2021-10-02"},{"lineNumber":25,"author":{"gitId":"xkisxk"},"content":"        System.out.println(\"\\tYou did well today! Goodbye!\");","lastModifiedDate":"2021-10-02"},{"lineNumber":26,"author":{"gitId":"xkisxk"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":27,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":28,"author":{"gitId":"xkisxk"},"content":"    public void printGreetingMessage() {","lastModifiedDate":"2021-10-02"},{"lineNumber":29,"author":{"gitId":"xkisxk"},"content":"        String logo \u003d \"\\n\"","lastModifiedDate":"2021-10-02"},{"lineNumber":30,"author":{"gitId":"xkisxk"},"content":"                + \" .----------------.  .----------------.  .----------------.  .----------------. \"","lastModifiedDate":"2021-10-02"},{"lineNumber":31,"author":{"gitId":"xkisxk"},"content":"                + \" .----------------.  .----------------.\\n\"","lastModifiedDate":"2021-10-02"},{"lineNumber":32,"author":{"gitId":"xkisxk"},"content":"                + \"| .--------------. || .--------------. || .--------------. || .--------------. |\"","lastModifiedDate":"2021-10-02"},{"lineNumber":33,"author":{"gitId":"xkisxk"},"content":"                + \"| .--------------. || .--------------. |\\n\"","lastModifiedDate":"2021-10-02"},{"lineNumber":34,"author":{"gitId":"xkisxk"},"content":"                + \"| |     ______   | || |      __      | || |  _______     | || |  ________    | ||\"","lastModifiedDate":"2021-10-02"},{"lineNumber":35,"author":{"gitId":"xkisxk"},"content":"                + \" |   _____      | || |     _____    | |\\n\"","lastModifiedDate":"2021-10-02"},{"lineNumber":36,"author":{"gitId":"xkisxk"},"content":"                + \"| |   .\u0027 ___  |  | || |     /  \\\\     | || | |_   __ \\\\    | || | |_   ___ `.  | ||\"","lastModifiedDate":"2021-10-02"},{"lineNumber":37,"author":{"gitId":"xkisxk"},"content":"                + \" |  |_   _|     | || |    |_   _|   | |\\n\"","lastModifiedDate":"2021-10-02"},{"lineNumber":38,"author":{"gitId":"xkisxk"},"content":"                + \"| |  / .\u0027   \\\\_|  | || |    / /\\\\ \\\\    | || |   | |__) |   | || |   | |   `. \\\\ |\"","lastModifiedDate":"2021-10-02"},{"lineNumber":39,"author":{"gitId":"xkisxk"},"content":"                + \" || |    | |       | || |      | |     | |\\n\"","lastModifiedDate":"2021-10-02"},{"lineNumber":40,"author":{"gitId":"xkisxk"},"content":"                + \"| |  | |         | || |   / ____ \\\\   | || |   |  __ /    | || |   | |    | | | ||\"","lastModifiedDate":"2021-10-02"},{"lineNumber":41,"author":{"gitId":"xkisxk"},"content":"                + \" |    | |   _   | || |      | |     | |\\n\"","lastModifiedDate":"2021-10-02"},{"lineNumber":42,"author":{"gitId":"xkisxk"},"content":"                + \"| |  \\\\ `.___.\u0027\\\\  | || | _/ /    \\\\ \\\\_ | || |  _| |  \\\\ \\\\_  | || |  _| |___.\u0027 \"","lastModifiedDate":"2021-10-02"},{"lineNumber":43,"author":{"gitId":"xkisxk"},"content":"                + \"/ | || |   _| |__/ |  | || |     _| |_    | |\\n\"","lastModifiedDate":"2021-10-02"},{"lineNumber":44,"author":{"gitId":"xkisxk"},"content":"                + \"| |   `._____.\u0027  | || ||____|  |____|| || | |____| |___| | || | |________.\u0027  | || \"","lastModifiedDate":"2021-10-02"},{"lineNumber":45,"author":{"gitId":"xkisxk"},"content":"                + \"|  |________|  | || |    |_____|   | |\\n\"","lastModifiedDate":"2021-10-02"},{"lineNumber":46,"author":{"gitId":"xkisxk"},"content":"                + \"| |              | || |              | || |              | || |              | || \"","lastModifiedDate":"2021-10-02"},{"lineNumber":47,"author":{"gitId":"xkisxk"},"content":"                + \"|              | || |              | |\\n\"","lastModifiedDate":"2021-10-02"},{"lineNumber":48,"author":{"gitId":"xkisxk"},"content":"                + \"| \u0027--------------\u0027 || \u0027--------------\u0027 || \u0027--------------\u0027 || \u0027--------------\u0027 |\"","lastModifiedDate":"2021-10-02"},{"lineNumber":49,"author":{"gitId":"xkisxk"},"content":"                + \"| \u0027--------------\u0027 || \u0027--------------\u0027 |\\n\"","lastModifiedDate":"2021-10-02"},{"lineNumber":50,"author":{"gitId":"xkisxk"},"content":"                + \" \u0027----------------\u0027  \u0027----------------\u0027  \u0027----------------\u0027  \u0027----------------\u0027 \"","lastModifiedDate":"2021-10-02"},{"lineNumber":51,"author":{"gitId":"xkisxk"},"content":"                + \" \u0027----------------\u0027  \u0027----------------\u0027\\n\";","lastModifiedDate":"2021-10-02"},{"lineNumber":52,"author":{"gitId":"xkisxk"},"content":"        System.out.println(\"Welcome to\\n\" + logo);","lastModifiedDate":"2021-10-02"},{"lineNumber":53,"author":{"gitId":"xkisxk"},"content":"        System.out.println(\"Let\u0027s get started!\");","lastModifiedDate":"2021-10-02"},{"lineNumber":54,"author":{"gitId":"xkisxk"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":55,"author":{"gitId":"xkisxk"},"content":"}","lastModifiedDate":"2021-10-02"}],"authorContributionMap":{"xkisxk":55}},{"path":"src/main/java/seedu/duke/Duke.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.duke;","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"xRossKoh"},"content":"/**","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"xRossKoh"},"content":" * Represents CardLI application.","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"xRossKoh"},"content":" */","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":7,"author":{"gitId":"xkisxk"},"content":"    private static final CardLiUi ui \u003d new CardLiUi();","lastModifiedDate":"2021-10-02"},{"lineNumber":8,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"     * Main entry-point for the java.duke.Duke application.","lastModifiedDate":"2020-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":13,"author":{"gitId":"xkisxk"},"content":"        ui.printGreetingMessage();","lastModifiedDate":"2021-10-02"},{"lineNumber":14,"author":{"gitId":"JWweiyin"},"content":"        Parser.programLogic();","lastModifiedDate":"2021-10-02"},{"lineNumber":15,"author":{"gitId":"xkisxk"},"content":"        ui.printByeMessage();","lastModifiedDate":"2021-10-02"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"JWweiyin":1,"xRossKoh":3,"xkisxk":4,"-":9}},{"path":"src/main/java/seedu/duke/FlashCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JWweiyin"},"content":"package seedu.duke;","lastModifiedDate":"2021-10-02"},{"lineNumber":2,"author":{"gitId":"JWweiyin"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":3,"author":{"gitId":"JWweiyin"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-10-14"},{"lineNumber":4,"author":{"gitId":"JWweiyin"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-14"},{"lineNumber":5,"author":{"gitId":"JWweiyin"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":6,"author":{"gitId":"xRossKoh"},"content":"/**","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"xRossKoh"},"content":" * Represents information within a single flashcard.","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"xRossKoh"},"content":" */","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"JWweiyin"},"content":"public class FlashCard {","lastModifiedDate":"2021-10-02"},{"lineNumber":10,"author":{"gitId":"JWweiyin"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":11,"author":{"gitId":"JWweiyin"},"content":"    private static final Logger logger \u003d Logger.getLogger(\"Card\");","lastModifiedDate":"2021-10-14"},{"lineNumber":12,"author":{"gitId":"JWweiyin"},"content":"    private String front;","lastModifiedDate":"2021-10-02"},{"lineNumber":13,"author":{"gitId":"JWweiyin"},"content":"    private String back;","lastModifiedDate":"2021-10-02"},{"lineNumber":14,"author":{"gitId":"JWweiyin"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":15,"author":{"gitId":"JWweiyin"},"content":"    public FlashCard(String front, String back) {","lastModifiedDate":"2021-10-02"},{"lineNumber":16,"author":{"gitId":"ThaddeusLim99"},"content":"        logger.setLevel(Level.WARNING);","lastModifiedDate":"2021-10-14"},{"lineNumber":17,"author":{"gitId":"JWweiyin"},"content":"        assert front !\u003d null;","lastModifiedDate":"2021-10-14"},{"lineNumber":18,"author":{"gitId":"JWweiyin"},"content":"        assert back !\u003d null;","lastModifiedDate":"2021-10-14"},{"lineNumber":19,"author":{"gitId":"JWweiyin"},"content":"        this.front \u003d front;","lastModifiedDate":"2021-10-02"},{"lineNumber":20,"author":{"gitId":"JWweiyin"},"content":"        this.back \u003d back;","lastModifiedDate":"2021-10-02"},{"lineNumber":21,"author":{"gitId":"JWweiyin"},"content":"        logger.log(Level.INFO, \"Card front: \" + front);","lastModifiedDate":"2021-10-14"},{"lineNumber":22,"author":{"gitId":"JWweiyin"},"content":"        logger.log(Level.INFO, \"Card back: \" + back);","lastModifiedDate":"2021-10-14"},{"lineNumber":23,"author":{"gitId":"JWweiyin"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":24,"author":{"gitId":"JWweiyin"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":25,"author":{"gitId":"xRossKoh"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":26,"author":{"gitId":"xRossKoh"},"content":"     * Getter for String on front of flashcard.","lastModifiedDate":"2021-10-06"},{"lineNumber":27,"author":{"gitId":"xRossKoh"},"content":"     *","lastModifiedDate":"2021-10-06"},{"lineNumber":28,"author":{"gitId":"xRossKoh"},"content":"     * @return String on front of flashcard","lastModifiedDate":"2021-10-06"},{"lineNumber":29,"author":{"gitId":"xRossKoh"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":30,"author":{"gitId":"ThaddeusLim99"},"content":"    public String getFront() {","lastModifiedDate":"2021-10-04"},{"lineNumber":31,"author":{"gitId":"ThaddeusLim99"},"content":"        logger.setLevel(Level.WARNING);","lastModifiedDate":"2021-10-14"},{"lineNumber":32,"author":{"gitId":"astralum"},"content":"        assert this.front !\u003d null;","lastModifiedDate":"2021-10-14"},{"lineNumber":33,"author":{"gitId":"astralum"},"content":"        logger.log(Level.INFO, \"Getting card front: \" + front);","lastModifiedDate":"2021-10-14"},{"lineNumber":34,"author":{"gitId":"ThaddeusLim99"},"content":"        return this.front;","lastModifiedDate":"2021-10-04"},{"lineNumber":35,"author":{"gitId":"ThaddeusLim99"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":36,"author":{"gitId":"astralum"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"xRossKoh"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":38,"author":{"gitId":"xRossKoh"},"content":"     * Getter for String on back of flashcard.","lastModifiedDate":"2021-10-06"},{"lineNumber":39,"author":{"gitId":"xRossKoh"},"content":"     *","lastModifiedDate":"2021-10-06"},{"lineNumber":40,"author":{"gitId":"xRossKoh"},"content":"     * @return String on back of flashcard","lastModifiedDate":"2021-10-06"},{"lineNumber":41,"author":{"gitId":"xRossKoh"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":42,"author":{"gitId":"astralum"},"content":"    public String getBack() {","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"ThaddeusLim99"},"content":"        logger.setLevel(Level.WARNING);","lastModifiedDate":"2021-10-14"},{"lineNumber":44,"author":{"gitId":"astralum"},"content":"        assert this.back !\u003d null;","lastModifiedDate":"2021-10-14"},{"lineNumber":45,"author":{"gitId":"astralum"},"content":"        logger.log(Level.INFO, \"Getting card back: \" + back);","lastModifiedDate":"2021-10-14"},{"lineNumber":46,"author":{"gitId":"astralum"},"content":"        return this.back;","lastModifiedDate":"2021-10-07"},{"lineNumber":47,"author":{"gitId":"astralum"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":48,"author":{"gitId":"JWweiyin"},"content":"}","lastModifiedDate":"2021-10-02"}],"authorContributionMap":{"JWweiyin":21,"ThaddeusLim99":6,"astralum":8,"xRossKoh":13}},{"path":"src/main/java/seedu/duke/FlashCardManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JWweiyin"},"content":"package seedu.duke;","lastModifiedDate":"2021-10-02"},{"lineNumber":2,"author":{"gitId":"JWweiyin"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":3,"author":{"gitId":"xkisxk"},"content":"import seedu.duke.exceptions.CardLiException;","lastModifiedDate":"2021-10-04"},{"lineNumber":4,"author":{"gitId":"JWweiyin"},"content":"import seedu.duke.exceptions.FieldEmptyException;","lastModifiedDate":"2021-10-02"},{"lineNumber":5,"author":{"gitId":"JWweiyin"},"content":"import seedu.duke.exceptions.NoSlashException;","lastModifiedDate":"2021-10-02"},{"lineNumber":6,"author":{"gitId":"JWweiyin"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":7,"author":{"gitId":"JWweiyin"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-02"},{"lineNumber":8,"author":{"gitId":"xkisxk"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"xkisxk"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"JWweiyin"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":11,"author":{"gitId":"xRossKoh"},"content":"/**","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"xRossKoh"},"content":" * Implements the list of added flashcards.","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"xRossKoh"},"content":" */","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"JWweiyin"},"content":"public class FlashCardManager {","lastModifiedDate":"2021-10-02"},{"lineNumber":15,"author":{"gitId":"xRossKoh"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":16,"author":{"gitId":"ThaddeusLim99"},"content":"    public static ArrayList\u003cFlashCard\u003e cards \u003d new ArrayList\u003cFlashCard\u003e();","lastModifiedDate":"2021-10-04"},{"lineNumber":17,"author":{"gitId":"xkisxk"},"content":"    private static final Logger logger \u003d Logger.getLogger(FlashCardManager.class.getName());","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"JWweiyin"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":19,"author":{"gitId":"JWweiyin"},"content":"    public static void printNoSlashFoundError() {","lastModifiedDate":"2021-10-02"},{"lineNumber":20,"author":{"gitId":"JWweiyin"},"content":"        System.out.println(\"\\tRemember that a command must contain \\\"/def\\\"!\");","lastModifiedDate":"2021-10-02"},{"lineNumber":21,"author":{"gitId":"JWweiyin"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":22,"author":{"gitId":"JWweiyin"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":23,"author":{"gitId":"JWweiyin"},"content":"    public static void printFieldEmptyError() {","lastModifiedDate":"2021-10-02"},{"lineNumber":24,"author":{"gitId":"JWweiyin"},"content":"        System.out.println(\"\\tRemember that both sides of the flashcard must be filled in!\");","lastModifiedDate":"2021-10-02"},{"lineNumber":25,"author":{"gitId":"JWweiyin"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":26,"author":{"gitId":"JWweiyin"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":27,"author":{"gitId":"JWweiyin"},"content":"    private static void printInvalidAddFormat() {","lastModifiedDate":"2021-10-02"},{"lineNumber":28,"author":{"gitId":"JWweiyin"},"content":"        System.out.println(\"\\tHey, the command you printed is invalid.\");","lastModifiedDate":"2021-10-02"},{"lineNumber":29,"author":{"gitId":"JWweiyin"},"content":"        System.out.println(\"\\tThe correct command format to add a flash card is as follows:\");","lastModifiedDate":"2021-10-02"},{"lineNumber":30,"author":{"gitId":"JWweiyin"},"content":"        System.out.println(\"\\tadd \u003cword on front\u003e /def \u003cword on back\u003e\");","lastModifiedDate":"2021-10-02"},{"lineNumber":31,"author":{"gitId":"JWweiyin"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":32,"author":{"gitId":"JWweiyin"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":33,"author":{"gitId":"xkisxk"},"content":"    private static void printDoesNotExistError() {","lastModifiedDate":"2021-10-02"},{"lineNumber":34,"author":{"gitId":"xkisxk"},"content":"        System.out.println(\"\\tThe card you are trying to delete does not exist.\");","lastModifiedDate":"2021-10-02"},{"lineNumber":35,"author":{"gitId":"xkisxk"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":36,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":37,"author":{"gitId":"xkisxk"},"content":"    private static void printEmptyDescriptionError() {","lastModifiedDate":"2021-10-02"},{"lineNumber":38,"author":{"gitId":"xkisxk"},"content":"        System.out.println(\"\\tCan\u0027t delete a card with no description!\");","lastModifiedDate":"2021-10-02"},{"lineNumber":39,"author":{"gitId":"xkisxk"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":40,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":41,"author":{"gitId":"xkisxk"},"content":"    private static void printNewFlashCard(String front, String back) {","lastModifiedDate":"2021-10-02"},{"lineNumber":42,"author":{"gitId":"xkisxk"},"content":"        System.out.println(\"\\tAdded card:\");","lastModifiedDate":"2021-10-02"},{"lineNumber":43,"author":{"gitId":"xRossKoh"},"content":"        printCardInfo(front, back);","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"xRossKoh"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":45,"author":{"gitId":"xRossKoh"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":46,"author":{"gitId":"xRossKoh"},"content":"    private static void printCardInfo(String front, String back) {","lastModifiedDate":"2021-10-07"},{"lineNumber":47,"author":{"gitId":"xkisxk"},"content":"        System.out.println(\"\\tFront: \" + front);","lastModifiedDate":"2021-10-02"},{"lineNumber":48,"author":{"gitId":"xkisxk"},"content":"        System.out.println(\"\\tBack: \" + back);","lastModifiedDate":"2021-10-02"},{"lineNumber":49,"author":{"gitId":"xRossKoh"},"content":"        if (cards.size() \u003d\u003d 1) {","lastModifiedDate":"2021-10-07"},{"lineNumber":50,"author":{"gitId":"xRossKoh"},"content":"            System.out.println(\"\\tYou have \" + cards.size() + \" card in your card deck.\");","lastModifiedDate":"2021-10-07"},{"lineNumber":51,"author":{"gitId":"xkisxk"},"content":"        } else {","lastModifiedDate":"2021-10-02"},{"lineNumber":52,"author":{"gitId":"xRossKoh"},"content":"            System.out.println(\"\\tYou have \" + cards.size() + \" cards in your card deck.\");","lastModifiedDate":"2021-10-07"},{"lineNumber":53,"author":{"gitId":"xkisxk"},"content":"        }","lastModifiedDate":"2021-10-02"},{"lineNumber":54,"author":{"gitId":"xkisxk"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":55,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":56,"author":{"gitId":"xkisxk"},"content":"    private static void printDeletedFlashCardMessage(String front, String back) {","lastModifiedDate":"2021-10-02"},{"lineNumber":57,"author":{"gitId":"xkisxk"},"content":"        System.out.println(\"\\tDeleted card:\");","lastModifiedDate":"2021-10-02"},{"lineNumber":58,"author":{"gitId":"xRossKoh"},"content":"        printCardInfo(front, back);","lastModifiedDate":"2021-10-07"},{"lineNumber":59,"author":{"gitId":"xkisxk"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":60,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":61,"author":{"gitId":"JWweiyin"},"content":"    public static void prepareToAddFlashCard(String input) {","lastModifiedDate":"2021-10-02"},{"lineNumber":62,"author":{"gitId":"JWweiyin"},"content":"        try {","lastModifiedDate":"2021-10-02"},{"lineNumber":63,"author":{"gitId":"JWweiyin"},"content":"            String[] flashCardWords \u003d trimStrings(input);","lastModifiedDate":"2021-10-02"},{"lineNumber":64,"author":{"gitId":"JWweiyin"},"content":"            addFlashCard(flashCardWords[0], flashCardWords[1]);","lastModifiedDate":"2021-10-02"},{"lineNumber":65,"author":{"gitId":"JWweiyin"},"content":"            printNewFlashCard(flashCardWords[0], flashCardWords[1]);","lastModifiedDate":"2021-10-02"},{"lineNumber":66,"author":{"gitId":"JWweiyin"},"content":"        } catch (NoSlashException e) {","lastModifiedDate":"2021-10-02"},{"lineNumber":67,"author":{"gitId":"JWweiyin"},"content":"            printInvalidAddFormat();","lastModifiedDate":"2021-10-02"},{"lineNumber":68,"author":{"gitId":"JWweiyin"},"content":"            printNoSlashFoundError();","lastModifiedDate":"2021-10-02"},{"lineNumber":69,"author":{"gitId":"JWweiyin"},"content":"        } catch (FieldEmptyException e) {","lastModifiedDate":"2021-10-02"},{"lineNumber":70,"author":{"gitId":"JWweiyin"},"content":"            printInvalidAddFormat();","lastModifiedDate":"2021-10-02"},{"lineNumber":71,"author":{"gitId":"JWweiyin"},"content":"            printFieldEmptyError();","lastModifiedDate":"2021-10-02"},{"lineNumber":72,"author":{"gitId":"JWweiyin"},"content":"        }","lastModifiedDate":"2021-10-02"},{"lineNumber":73,"author":{"gitId":"JWweiyin"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":74,"author":{"gitId":"JWweiyin"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":75,"author":{"gitId":"xkisxk"},"content":"    /**","lastModifiedDate":"2021-10-04"},{"lineNumber":76,"author":{"gitId":"xkisxk"},"content":"     * Deletes the flash card given by the user\u0027s input.","lastModifiedDate":"2021-10-04"},{"lineNumber":77,"author":{"gitId":"xkisxk"},"content":"     * The card will only be deleted if the input matches","lastModifiedDate":"2021-10-04"},{"lineNumber":78,"author":{"gitId":"xkisxk"},"content":"     * exactly with FlashCard.front.","lastModifiedDate":"2021-10-04"},{"lineNumber":79,"author":{"gitId":"xkisxk"},"content":"     *","lastModifiedDate":"2021-10-04"},{"lineNumber":80,"author":{"gitId":"xkisxk"},"content":"     * @param input user\u0027s input in its entirety","lastModifiedDate":"2021-10-04"},{"lineNumber":81,"author":{"gitId":"xkisxk"},"content":"     */","lastModifiedDate":"2021-10-04"},{"lineNumber":82,"author":{"gitId":"xkisxk"},"content":"    public static void prepareToDeleteFlashCard(String input) {","lastModifiedDate":"2021-10-02"},{"lineNumber":83,"author":{"gitId":"xkisxk"},"content":"        logger.entering(FlashCardManager.class.getName(), \"prepareToDeleteFlashCard\");","lastModifiedDate":"2021-10-10"},{"lineNumber":84,"author":{"gitId":"ThaddeusLim99"},"content":"        logger.setLevel(Level.WARNING);","lastModifiedDate":"2021-10-14"},{"lineNumber":85,"author":{"gitId":"xkisxk"},"content":"        logger.log(Level.INFO, \"Starting delete process\");","lastModifiedDate":"2021-10-10"},{"lineNumber":86,"author":{"gitId":"xkisxk"},"content":"        try {","lastModifiedDate":"2021-10-02"},{"lineNumber":87,"author":{"gitId":"xkisxk"},"content":"            String description \u003d getDescription(input);","lastModifiedDate":"2021-10-02"},{"lineNumber":88,"author":{"gitId":"xkisxk"},"content":"            deleteFlashCard(description);","lastModifiedDate":"2021-10-02"},{"lineNumber":89,"author":{"gitId":"xkisxk"},"content":"        } catch (FieldEmptyException | ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2021-10-10"},{"lineNumber":90,"author":{"gitId":"xkisxk"},"content":"            printEmptyDescriptionError();","lastModifiedDate":"2021-10-02"},{"lineNumber":91,"author":{"gitId":"xkisxk"},"content":"            logger.log(Level.SEVERE, \"Empty field error, no description found after command term\");","lastModifiedDate":"2021-10-10"},{"lineNumber":92,"author":{"gitId":"xkisxk"},"content":"        } catch (CardLiException e) {","lastModifiedDate":"2021-10-04"},{"lineNumber":93,"author":{"gitId":"xkisxk"},"content":"            printDoesNotExistError();","lastModifiedDate":"2021-10-02"},{"lineNumber":94,"author":{"gitId":"xkisxk"},"content":"            logger.log(Level.SEVERE, \"CardLi error, query card does not exist\");","lastModifiedDate":"2021-10-10"},{"lineNumber":95,"author":{"gitId":"xkisxk"},"content":"        }","lastModifiedDate":"2021-10-02"},{"lineNumber":96,"author":{"gitId":"xkisxk"},"content":"        logger.log(Level.INFO, \"End of delete process\");","lastModifiedDate":"2021-10-10"},{"lineNumber":97,"author":{"gitId":"xkisxk"},"content":"        logger.exiting(FlashCardManager.class.getName(), \"prepareToDeleteFlashCard\");","lastModifiedDate":"2021-10-10"},{"lineNumber":98,"author":{"gitId":"xkisxk"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":99,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":100,"author":{"gitId":"JWweiyin"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":101,"author":{"gitId":"xRossKoh"},"content":"    // TODO find elegant implementation of delete using index","lastModifiedDate":"2021-10-07"},{"lineNumber":102,"author":{"gitId":"xRossKoh"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":103,"author":{"gitId":"xkisxk"},"content":"    /**","lastModifiedDate":"2021-10-04"},{"lineNumber":104,"author":{"gitId":"JWweiyin"},"content":"     * Returns all contents of the input after the command word.","lastModifiedDate":"2021-10-09"},{"lineNumber":105,"author":{"gitId":"xkisxk"},"content":"     *","lastModifiedDate":"2021-10-04"},{"lineNumber":106,"author":{"gitId":"xkisxk"},"content":"     * @param input user\u0027s input","lastModifiedDate":"2021-10-04"},{"lineNumber":107,"author":{"gitId":"xkisxk"},"content":"     * @return description of card","lastModifiedDate":"2021-10-04"},{"lineNumber":108,"author":{"gitId":"xkisxk"},"content":"     * @throws ArrayIndexOutOfBoundsException if description is empty","lastModifiedDate":"2021-10-10"},{"lineNumber":109,"author":{"gitId":"xkisxk"},"content":"     */","lastModifiedDate":"2021-10-04"},{"lineNumber":110,"author":{"gitId":"xkisxk"},"content":"    public static String getDescription(String input) throws ArrayIndexOutOfBoundsException {","lastModifiedDate":"2021-10-10"},{"lineNumber":111,"author":{"gitId":"xkisxk"},"content":"        assert input.length() \u003e 0 : \"input string should not be empty, at least have command word\";","lastModifiedDate":"2021-10-14"},{"lineNumber":112,"author":{"gitId":"xkisxk"},"content":"        return input.split(\" \", 2)[1];","lastModifiedDate":"2021-10-10"},{"lineNumber":113,"author":{"gitId":"xkisxk"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":114,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":115,"author":{"gitId":"xkisxk"},"content":"    /**","lastModifiedDate":"2021-10-04"},{"lineNumber":116,"author":{"gitId":"JWweiyin"},"content":"     * Deletes the flashcard with the given input.","lastModifiedDate":"2021-10-09"},{"lineNumber":117,"author":{"gitId":"xkisxk"},"content":"     *","lastModifiedDate":"2021-10-04"},{"lineNumber":118,"author":{"gitId":"JWweiyin"},"content":"     * @param input description of the card to delete","lastModifiedDate":"2021-10-09"},{"lineNumber":119,"author":{"gitId":"xkisxk"},"content":"     * @throws CardLiException if card does not exist","lastModifiedDate":"2021-10-04"},{"lineNumber":120,"author":{"gitId":"xkisxk"},"content":"     */","lastModifiedDate":"2021-10-04"},{"lineNumber":121,"author":{"gitId":"JWweiyin"},"content":"    public static void deleteFlashCard(String input) throws CardLiException {","lastModifiedDate":"2021-10-09"},{"lineNumber":122,"author":{"gitId":"ThaddeusLim99"},"content":"        logger.setLevel(Level.WARNING);","lastModifiedDate":"2021-10-14"},{"lineNumber":123,"author":{"gitId":"xkisxk"},"content":"        if (cards.size() \u003d\u003d 0) {","lastModifiedDate":"2021-10-02"},{"lineNumber":124,"author":{"gitId":"xkisxk"},"content":"            throw new CardLiException();","lastModifiedDate":"2021-10-04"},{"lineNumber":125,"author":{"gitId":"xkisxk"},"content":"        }","lastModifiedDate":"2021-10-02"},{"lineNumber":126,"author":{"gitId":"astralum"},"content":"        assert cards.size() \u003e 0 : \"cards.size() should be greater than 0\";","lastModifiedDate":"2021-10-14"},{"lineNumber":127,"author":{"gitId":"xkisxk"},"content":"        logger.log(Level.INFO, \"Detecting the type of input, ie word/phrase or index\");","lastModifiedDate":"2021-10-10"},{"lineNumber":128,"author":{"gitId":"JWweiyin"},"content":"        if (!isInteger(input)) {","lastModifiedDate":"2021-10-09"},{"lineNumber":129,"author":{"gitId":"JWweiyin"},"content":"            deleteFlashCardByDescription(input);","lastModifiedDate":"2021-10-09"},{"lineNumber":130,"author":{"gitId":"JWweiyin"},"content":"        } else {","lastModifiedDate":"2021-10-09"},{"lineNumber":131,"author":{"gitId":"JWweiyin"},"content":"            deleteFlashCardByIndex(input);","lastModifiedDate":"2021-10-09"},{"lineNumber":132,"author":{"gitId":"JWweiyin"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":133,"author":{"gitId":"JWweiyin"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":134,"author":{"gitId":"JWweiyin"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":135,"author":{"gitId":"JWweiyin"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":136,"author":{"gitId":"JWweiyin"},"content":"     * Deletes the flashcard with the given index.","lastModifiedDate":"2021-10-09"},{"lineNumber":137,"author":{"gitId":"JWweiyin"},"content":"     *","lastModifiedDate":"2021-10-09"},{"lineNumber":138,"author":{"gitId":"JWweiyin"},"content":"     * @param index user\u0027s input (index of the card to be deleted)","lastModifiedDate":"2021-10-09"},{"lineNumber":139,"author":{"gitId":"JWweiyin"},"content":"     * @throws CardLiException if the index of the card exceeds the number of flashcards in cards","lastModifiedDate":"2021-10-09"},{"lineNumber":140,"author":{"gitId":"ThaddeusLim99"},"content":"     *              or index of card is less than 1","lastModifiedDate":"2021-10-10"},{"lineNumber":141,"author":{"gitId":"JWweiyin"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":142,"author":{"gitId":"JWweiyin"},"content":"    private static void deleteFlashCardByIndex(String index) throws CardLiException {","lastModifiedDate":"2021-10-09"},{"lineNumber":143,"author":{"gitId":"ThaddeusLim99"},"content":"        logger.setLevel(Level.WARNING);","lastModifiedDate":"2021-10-14"},{"lineNumber":144,"author":{"gitId":"JWweiyin"},"content":"        int indexToBeRemoved \u003d Integer.parseInt(index) - 1;","lastModifiedDate":"2021-10-09"},{"lineNumber":145,"author":{"gitId":"astralum"},"content":"        if (!((indexToBeRemoved \u003c cards.size()) \u0026\u0026 (indexToBeRemoved \u003e\u003d 0))) {","lastModifiedDate":"2021-10-14"},{"lineNumber":146,"author":{"gitId":"astralum"},"content":"            throw new CardLiException();","lastModifiedDate":"2021-10-14"},{"lineNumber":147,"author":{"gitId":"astralum"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":148,"author":{"gitId":"astralum"},"content":"        assert cards.size() \u003e 0 : \"cards.size() should be greater than 0\";","lastModifiedDate":"2021-10-14"},{"lineNumber":149,"author":{"gitId":"astralum"},"content":"        logger.log(Level.INFO, \"Detecting the type of input, ie word/phrase or index\");","lastModifiedDate":"2021-10-14"},{"lineNumber":150,"author":{"gitId":"astralum"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":151,"author":{"gitId":"JWweiyin"},"content":"        FlashCard card \u003d cards.get(indexToBeRemoved);","lastModifiedDate":"2021-10-09"},{"lineNumber":152,"author":{"gitId":"JWweiyin"},"content":"        cards.remove(card);","lastModifiedDate":"2021-10-09"},{"lineNumber":153,"author":{"gitId":"JWweiyin"},"content":"        printDeletedFlashCardMessage(card.getFront(), card.getBack());","lastModifiedDate":"2021-10-09"},{"lineNumber":154,"author":{"gitId":"JWweiyin"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":155,"author":{"gitId":"JWweiyin"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":156,"author":{"gitId":"JWweiyin"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":157,"author":{"gitId":"JWweiyin"},"content":"     * Deletes the flashcard with the given description.","lastModifiedDate":"2021-10-09"},{"lineNumber":158,"author":{"gitId":"JWweiyin"},"content":"     *","lastModifiedDate":"2021-10-09"},{"lineNumber":159,"author":{"gitId":"JWweiyin"},"content":"     * @param description user\u0027s input (front of the card to be deleted)","lastModifiedDate":"2021-10-09"},{"lineNumber":160,"author":{"gitId":"JWweiyin"},"content":"     * @throws CardLiException if none of the front of the cards match the description input by user","lastModifiedDate":"2021-10-09"},{"lineNumber":161,"author":{"gitId":"JWweiyin"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":162,"author":{"gitId":"JWweiyin"},"content":"    private static void deleteFlashCardByDescription(String description) throws CardLiException {","lastModifiedDate":"2021-10-09"},{"lineNumber":163,"author":{"gitId":"astralum"},"content":"        assert cards.size() \u003e 0 : \"cards.size() should be greater than 0\";","lastModifiedDate":"2021-10-14"},{"lineNumber":164,"author":{"gitId":"xkisxk"},"content":"        for (int i \u003d 0; i \u003c cards.size(); i++) {","lastModifiedDate":"2021-10-02"},{"lineNumber":165,"author":{"gitId":"xkisxk"},"content":"            FlashCard card \u003d cards.get(i);","lastModifiedDate":"2021-10-02"},{"lineNumber":166,"author":{"gitId":"xkisxk"},"content":"            if (hasExactCard(description, card)) {","lastModifiedDate":"2021-10-02"},{"lineNumber":167,"author":{"gitId":"xkisxk"},"content":"                cards.remove(card);","lastModifiedDate":"2021-10-02"},{"lineNumber":168,"author":{"gitId":"xkisxk"},"content":"                printDeletedFlashCardMessage(card.getFront(), card.getBack());","lastModifiedDate":"2021-10-02"},{"lineNumber":169,"author":{"gitId":"xkisxk"},"content":"                return;","lastModifiedDate":"2021-10-02"},{"lineNumber":170,"author":{"gitId":"xkisxk"},"content":"            }","lastModifiedDate":"2021-10-02"},{"lineNumber":171,"author":{"gitId":"xkisxk"},"content":"        }","lastModifiedDate":"2021-10-02"},{"lineNumber":172,"author":{"gitId":"xkisxk"},"content":"        throw new CardLiException();","lastModifiedDate":"2021-10-04"},{"lineNumber":173,"author":{"gitId":"xkisxk"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":174,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":175,"author":{"gitId":"xkisxk"},"content":"    private static boolean hasExactCard(String query, FlashCard card) {","lastModifiedDate":"2021-10-02"},{"lineNumber":176,"author":{"gitId":"xkisxk"},"content":"        return card.getFront().equalsIgnoreCase(query);","lastModifiedDate":"2021-10-02"},{"lineNumber":177,"author":{"gitId":"xkisxk"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":178,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":179,"author":{"gitId":"JWweiyin"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":180,"author":{"gitId":"JWweiyin"},"content":"     * Checks if the given input is an integer or not.","lastModifiedDate":"2021-10-09"},{"lineNumber":181,"author":{"gitId":"JWweiyin"},"content":"     *","lastModifiedDate":"2021-10-09"},{"lineNumber":182,"author":{"gitId":"JWweiyin"},"content":"     * @param input input given by user","lastModifiedDate":"2021-10-09"},{"lineNumber":183,"author":{"gitId":"JWweiyin"},"content":"     * @return true if input is an integer, false otherwise","lastModifiedDate":"2021-10-09"},{"lineNumber":184,"author":{"gitId":"JWweiyin"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":185,"author":{"gitId":"JWweiyin"},"content":"    private static boolean isInteger(String input) {","lastModifiedDate":"2021-10-09"},{"lineNumber":186,"author":{"gitId":"JWweiyin"},"content":"        for (int i \u003d 0; i \u003c input.length(); i +\u003d 1) {","lastModifiedDate":"2021-10-09"},{"lineNumber":187,"author":{"gitId":"JWweiyin"},"content":"            if (!Character.isDigit(input.charAt(i))) {","lastModifiedDate":"2021-10-09"},{"lineNumber":188,"author":{"gitId":"JWweiyin"},"content":"                return false;","lastModifiedDate":"2021-10-09"},{"lineNumber":189,"author":{"gitId":"JWweiyin"},"content":"            }","lastModifiedDate":"2021-10-09"},{"lineNumber":190,"author":{"gitId":"JWweiyin"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":191,"author":{"gitId":"JWweiyin"},"content":"        return true;","lastModifiedDate":"2021-10-09"},{"lineNumber":192,"author":{"gitId":"JWweiyin"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":193,"author":{"gitId":"JWweiyin"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":194,"author":{"gitId":"JWweiyin"},"content":"    public static String[] trimStrings(String input) throws FieldEmptyException, NoSlashException {","lastModifiedDate":"2021-10-02"},{"lineNumber":195,"author":{"gitId":"JWweiyin"},"content":"        int slashIndex \u003d input.indexOf(\"/def\");","lastModifiedDate":"2021-10-02"},{"lineNumber":196,"author":{"gitId":"JWweiyin"},"content":"        String[] flashCardWords \u003d new String[2];","lastModifiedDate":"2021-10-02"},{"lineNumber":197,"author":{"gitId":"JWweiyin"},"content":"        if (slashIndex \u003c 3) {","lastModifiedDate":"2021-10-02"},{"lineNumber":198,"author":{"gitId":"JWweiyin"},"content":"            throw new NoSlashException();","lastModifiedDate":"2021-10-02"},{"lineNumber":199,"author":{"gitId":"JWweiyin"},"content":"        }","lastModifiedDate":"2021-10-02"},{"lineNumber":200,"author":{"gitId":"JWweiyin"},"content":"        flashCardWords[0] \u003d input.substring(3, slashIndex - 1).trim();","lastModifiedDate":"2021-10-02"},{"lineNumber":201,"author":{"gitId":"JWweiyin"},"content":"        flashCardWords[1] \u003d input.substring(slashIndex + 4).trim();","lastModifiedDate":"2021-10-02"},{"lineNumber":202,"author":{"gitId":"JWweiyin"},"content":"        if (flashCardWords[0].isEmpty() || flashCardWords[1].isEmpty()) {","lastModifiedDate":"2021-10-02"},{"lineNumber":203,"author":{"gitId":"JWweiyin"},"content":"            throw new FieldEmptyException();","lastModifiedDate":"2021-10-02"},{"lineNumber":204,"author":{"gitId":"JWweiyin"},"content":"        }","lastModifiedDate":"2021-10-02"},{"lineNumber":205,"author":{"gitId":"JWweiyin"},"content":"        return flashCardWords;","lastModifiedDate":"2021-10-02"},{"lineNumber":206,"author":{"gitId":"JWweiyin"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":207,"author":{"gitId":"JWweiyin"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":208,"author":{"gitId":"JWweiyin"},"content":"    public static void addFlashCard(String front, String back) {","lastModifiedDate":"2021-10-02"},{"lineNumber":209,"author":{"gitId":"JWweiyin"},"content":"        cards.add(new FlashCard(front, back));","lastModifiedDate":"2021-10-02"},{"lineNumber":210,"author":{"gitId":"JWweiyin"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":211,"author":{"gitId":"JWweiyin"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":212,"author":{"gitId":"ThaddeusLim99"},"content":"    //getter for index of a flashcard","lastModifiedDate":"2021-10-04"},{"lineNumber":213,"author":{"gitId":"ThaddeusLim99"},"content":"    public static int getCardIndex(FlashCard card) {","lastModifiedDate":"2021-10-04"},{"lineNumber":214,"author":{"gitId":"ThaddeusLim99"},"content":"        return cards.indexOf(card);","lastModifiedDate":"2021-10-04"},{"lineNumber":215,"author":{"gitId":"ThaddeusLim99"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":216,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":217,"author":{"gitId":"astralum"},"content":"    public static void viewAFlashCard(int cardIndex) {","lastModifiedDate":"2021-10-07"},{"lineNumber":218,"author":{"gitId":"astralum"},"content":"        System.out.println(\"*\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003dFRONT\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d* \"","lastModifiedDate":"2021-10-07"},{"lineNumber":219,"author":{"gitId":"astralum"},"content":"                + \"*\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003dBACK\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d*\");","lastModifiedDate":"2021-10-07"},{"lineNumber":220,"author":{"gitId":"astralum"},"content":"        System.out.println();","lastModifiedDate":"2021-10-07"},{"lineNumber":221,"author":{"gitId":"astralum"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":222,"author":{"gitId":"astralum"},"content":"        String front \u003d cards.get(cardIndex).getFront();","lastModifiedDate":"2021-10-07"},{"lineNumber":223,"author":{"gitId":"astralum"},"content":"        String frontSpaces \u003d \"\";","lastModifiedDate":"2021-10-07"},{"lineNumber":224,"author":{"gitId":"astralum"},"content":"        for (int i \u003d 0; i \u003c (39 - front.length()) / 2; i++) {","lastModifiedDate":"2021-10-07"},{"lineNumber":225,"author":{"gitId":"astralum"},"content":"            frontSpaces +\u003d \" \";","lastModifiedDate":"2021-10-07"},{"lineNumber":226,"author":{"gitId":"astralum"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":227,"author":{"gitId":"astralum"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":228,"author":{"gitId":"astralum"},"content":"        String back \u003d cards.get(cardIndex).getBack();","lastModifiedDate":"2021-10-07"},{"lineNumber":229,"author":{"gitId":"astralum"},"content":"        String backSpaces \u003d \"\";","lastModifiedDate":"2021-10-07"},{"lineNumber":230,"author":{"gitId":"astralum"},"content":"        for (int i \u003d 0; i \u003c (39 - back.length()) / 2; i++) {","lastModifiedDate":"2021-10-07"},{"lineNumber":231,"author":{"gitId":"astralum"},"content":"            backSpaces +\u003d \" \";","lastModifiedDate":"2021-10-07"},{"lineNumber":232,"author":{"gitId":"astralum"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":233,"author":{"gitId":"astralum"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":234,"author":{"gitId":"astralum"},"content":"        System.out.println(frontSpaces + front + frontSpaces + backSpaces + back);","lastModifiedDate":"2021-10-07"},{"lineNumber":235,"author":{"gitId":"astralum"},"content":"        System.out.println();","lastModifiedDate":"2021-10-07"},{"lineNumber":236,"author":{"gitId":"astralum"},"content":"        System.out.println(\"*\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d* \"","lastModifiedDate":"2021-10-07"},{"lineNumber":237,"author":{"gitId":"astralum"},"content":"                + \"*\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d*\");","lastModifiedDate":"2021-10-07"},{"lineNumber":238,"author":{"gitId":"astralum"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":239,"author":{"gitId":"astralum"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":240,"author":{"gitId":"astralum"},"content":"    public static void viewAllFlashCards() {","lastModifiedDate":"2021-10-07"},{"lineNumber":241,"author":{"gitId":"astralum"},"content":"        for (int i \u003d 0; i \u003c cards.size(); i++) {","lastModifiedDate":"2021-10-07"},{"lineNumber":242,"author":{"gitId":"astralum"},"content":"            System.out.println(\"Card \" + (i + 1) + \":\");","lastModifiedDate":"2021-10-07"},{"lineNumber":243,"author":{"gitId":"astralum"},"content":"            viewAFlashCard(i);","lastModifiedDate":"2021-10-07"},{"lineNumber":244,"author":{"gitId":"astralum"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":245,"author":{"gitId":"ThaddeusLim99"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":246,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":247,"author":{"gitId":"xRossKoh"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":248,"author":{"gitId":"xRossKoh"},"content":"     * Returns the String on the front of the flashCard.","lastModifiedDate":"2021-10-07"},{"lineNumber":249,"author":{"gitId":"xRossKoh"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":250,"author":{"gitId":"xRossKoh"},"content":"    public static String getFrontOfCard(int cardIndex) {","lastModifiedDate":"2021-10-06"},{"lineNumber":251,"author":{"gitId":"xRossKoh"},"content":"        return cards.get(cardIndex).getFront();","lastModifiedDate":"2021-10-06"},{"lineNumber":252,"author":{"gitId":"xRossKoh"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":253,"author":{"gitId":"xRossKoh"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":254,"author":{"gitId":"xRossKoh"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":255,"author":{"gitId":"xRossKoh"},"content":"     * Returns the String on the back of the flashCard.","lastModifiedDate":"2021-10-07"},{"lineNumber":256,"author":{"gitId":"xRossKoh"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":257,"author":{"gitId":"xRossKoh"},"content":"    public static String getBackOfCard(int cardIndex) {","lastModifiedDate":"2021-10-06"},{"lineNumber":258,"author":{"gitId":"xRossKoh"},"content":"        return cards.get(cardIndex).getBack();","lastModifiedDate":"2021-10-06"},{"lineNumber":259,"author":{"gitId":"ThaddeusLim99"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":260,"author":{"gitId":"JWweiyin"},"content":"}","lastModifiedDate":"2021-10-02"}],"authorContributionMap":{"JWweiyin":103,"ThaddeusLim99":13,"astralum":36,"xRossKoh":26,"xkisxk":82}},{"path":"src/main/java/seedu/duke/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JWweiyin"},"content":"package seedu.duke;","lastModifiedDate":"2021-10-02"},{"lineNumber":2,"author":{"gitId":"JWweiyin"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":3,"author":{"gitId":"JWweiyin"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-10-02"},{"lineNumber":4,"author":{"gitId":"xRossKoh"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-10-14"},{"lineNumber":5,"author":{"gitId":"xRossKoh"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-14"},{"lineNumber":6,"author":{"gitId":"JWweiyin"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":7,"author":{"gitId":"xRossKoh"},"content":"/**","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"xRossKoh"},"content":" * Deals with the parsing of user input at the command line.","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"xRossKoh"},"content":" */","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"JWweiyin"},"content":"public class Parser {","lastModifiedDate":"2021-10-02"},{"lineNumber":11,"author":{"gitId":"JWweiyin"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":12,"author":{"gitId":"xRossKoh"},"content":"    private static final Logger logger \u003d Logger.getLogger(Parser.class.getName());","lastModifiedDate":"2021-10-14"},{"lineNumber":13,"author":{"gitId":"xRossKoh"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":14,"author":{"gitId":"xRossKoh"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"xRossKoh"},"content":"     * Parses user input at the command line and invokes the necessary follow up actions.","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"xRossKoh"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"JWweiyin"},"content":"    static void programLogic() {","lastModifiedDate":"2021-10-02"},{"lineNumber":18,"author":{"gitId":"ThaddeusLim99"},"content":"        logger.setLevel(Level.WARNING);","lastModifiedDate":"2021-10-14"},{"lineNumber":19,"author":{"gitId":"JWweiyin"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2021-10-02"},{"lineNumber":20,"author":{"gitId":"xRossKoh"},"content":"        boolean exitProgram \u003d false;","lastModifiedDate":"2021-10-14"},{"lineNumber":21,"author":{"gitId":"xRossKoh"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":22,"author":{"gitId":"xRossKoh"},"content":"        while (!exitProgram) {","lastModifiedDate":"2021-10-14"},{"lineNumber":23,"author":{"gitId":"JWweiyin"},"content":"            String line \u003d in.nextLine();","lastModifiedDate":"2021-10-02"},{"lineNumber":24,"author":{"gitId":"astralum"},"content":"            String command \u003d line.trim().split(\" \")[0];","lastModifiedDate":"2021-10-14"},{"lineNumber":25,"author":{"gitId":"xRossKoh"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":26,"author":{"gitId":"xRossKoh"},"content":"            logger.log(Level.INFO, \"new user input detected\");","lastModifiedDate":"2021-10-14"},{"lineNumber":27,"author":{"gitId":"xRossKoh"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":28,"author":{"gitId":"xkisxk"},"content":"            switch (command) {","lastModifiedDate":"2021-10-02"},{"lineNumber":29,"author":{"gitId":"JWweiyin"},"content":"            case \"add\":","lastModifiedDate":"2021-10-02"},{"lineNumber":30,"author":{"gitId":"JWweiyin"},"content":"                FlashCardManager.prepareToAddFlashCard(line);","lastModifiedDate":"2021-10-02"},{"lineNumber":31,"author":{"gitId":"xRossKoh"},"content":"                logger.log(Level.INFO, \"add command parsed and executed\");","lastModifiedDate":"2021-10-14"},{"lineNumber":32,"author":{"gitId":"JWweiyin"},"content":"                break;","lastModifiedDate":"2021-10-02"},{"lineNumber":33,"author":{"gitId":"xkisxk"},"content":"            case \"delete\":","lastModifiedDate":"2021-10-02"},{"lineNumber":34,"author":{"gitId":"xkisxk"},"content":"                FlashCardManager.prepareToDeleteFlashCard(line);","lastModifiedDate":"2021-10-02"},{"lineNumber":35,"author":{"gitId":"xRossKoh"},"content":"                logger.log(Level.INFO, \"delete command parsed and executed\");","lastModifiedDate":"2021-10-14"},{"lineNumber":36,"author":{"gitId":"xkisxk"},"content":"                break;","lastModifiedDate":"2021-10-02"},{"lineNumber":37,"author":{"gitId":"astralum"},"content":"            case \"view\":","lastModifiedDate":"2021-10-07"},{"lineNumber":38,"author":{"gitId":"astralum"},"content":"                FlashCardManager.viewAllFlashCards();","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"xRossKoh"},"content":"                logger.log(Level.INFO, \"view command parsed and executed\");","lastModifiedDate":"2021-10-14"},{"lineNumber":40,"author":{"gitId":"astralum"},"content":"                break;","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"ThaddeusLim99"},"content":"            case \"test\":","lastModifiedDate":"2021-10-04"},{"lineNumber":42,"author":{"gitId":"ThaddeusLim99"},"content":"                TestManager.testAllCardsInOrder();","lastModifiedDate":"2021-10-04"},{"lineNumber":43,"author":{"gitId":"xRossKoh"},"content":"                logger.log(Level.INFO, \"test command parsed and executed\");","lastModifiedDate":"2021-10-14"},{"lineNumber":44,"author":{"gitId":"ThaddeusLim99"},"content":"                break;","lastModifiedDate":"2021-10-04"},{"lineNumber":45,"author":{"gitId":"xRossKoh"},"content":"            case \"bye\":","lastModifiedDate":"2021-10-14"},{"lineNumber":46,"author":{"gitId":"xRossKoh"},"content":"                exitProgram \u003d true;","lastModifiedDate":"2021-10-14"},{"lineNumber":47,"author":{"gitId":"xRossKoh"},"content":"                logger.log(Level.INFO, \"bye command parsed and executed, program will terminate\");","lastModifiedDate":"2021-10-14"},{"lineNumber":48,"author":{"gitId":"xRossKoh"},"content":"                break;","lastModifiedDate":"2021-10-14"},{"lineNumber":49,"author":{"gitId":"JWweiyin"},"content":"            default:","lastModifiedDate":"2021-10-02"},{"lineNumber":50,"author":{"gitId":"JWweiyin"},"content":"                System.out.println(\"\\tThat\u0027s not a command.\");","lastModifiedDate":"2021-10-02"},{"lineNumber":51,"author":{"gitId":"xRossKoh"},"content":"                logger.log(Level.INFO, \"command was unrecognised and could not be parsed\");","lastModifiedDate":"2021-10-14"},{"lineNumber":52,"author":{"gitId":"JWweiyin"},"content":"            }","lastModifiedDate":"2021-10-02"},{"lineNumber":53,"author":{"gitId":"JWweiyin"},"content":"        }","lastModifiedDate":"2021-10-02"},{"lineNumber":54,"author":{"gitId":"JWweiyin"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":55,"author":{"gitId":"JWweiyin"},"content":"}","lastModifiedDate":"2021-10-02"}],"authorContributionMap":{"JWweiyin":18,"ThaddeusLim99":4,"astralum":4,"xRossKoh":25,"xkisxk":4}},{"path":"src/main/java/seedu/duke/TestManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ThaddeusLim99"},"content":"package seedu.duke;","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"ThaddeusLim99"},"content":"import seedu.duke.exceptions.FieldEmptyException;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"ThaddeusLim99"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-04"},{"lineNumber":6,"author":{"gitId":"ThaddeusLim99"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-10-04"},{"lineNumber":7,"author":{"gitId":"ThaddeusLim99"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"ThaddeusLim99"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":10,"author":{"gitId":"xRossKoh"},"content":"import static seedu.duke.FlashCardManager.cards;","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"xRossKoh"},"content":"import static seedu.duke.FlashCardManager.getFrontOfCard;","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"xRossKoh"},"content":"import static seedu.duke.FlashCardManager.getBackOfCard;","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"xRossKoh"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":15,"author":{"gitId":"xRossKoh"},"content":"/**","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"xRossKoh"},"content":" * Implements the test function.","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"xRossKoh"},"content":" */","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"ThaddeusLim99"},"content":"public class TestManager {","lastModifiedDate":"2021-10-04"},{"lineNumber":19,"author":{"gitId":"xRossKoh"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"ThaddeusLim99"},"content":"    public static ArrayList\u003cAnswer\u003e answersResponse \u003d new ArrayList\u003cAnswer\u003e();","lastModifiedDate":"2021-10-04"},{"lineNumber":21,"author":{"gitId":"xRossKoh"},"content":"    private static int answersCount \u003d 0;","lastModifiedDate":"2021-10-14"},{"lineNumber":22,"author":{"gitId":"ThaddeusLim99"},"content":"    private static Logger logger \u003d Logger.getLogger(TestManager.class.getName());","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":24,"author":{"gitId":"xRossKoh"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":25,"author":{"gitId":"xRossKoh"},"content":"     * Goes through all the flashcards and stores the user\u0027s responses into answersResponse ArrayList.","lastModifiedDate":"2021-10-06"},{"lineNumber":26,"author":{"gitId":"xRossKoh"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":27,"author":{"gitId":"ThaddeusLim99"},"content":"    public static void testAllCardsInOrder() {","lastModifiedDate":"2021-10-04"},{"lineNumber":28,"author":{"gitId":"ThaddeusLim99"},"content":"        logger.setLevel(Level.WARNING);","lastModifiedDate":"2021-10-14"},{"lineNumber":29,"author":{"gitId":"ThaddeusLim99"},"content":"        logger.log(Level.INFO, \"starting test\");","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"xRossKoh"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":31,"author":{"gitId":"ThaddeusLim99"},"content":"        for (FlashCard question : cards) {","lastModifiedDate":"2021-10-04"},{"lineNumber":32,"author":{"gitId":"ThaddeusLim99"},"content":"            logger.log(Level.INFO, \"starting to test a new card\");","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"ThaddeusLim99"},"content":"            int questionNumber \u003d FlashCardManager.getCardIndex(question);","lastModifiedDate":"2021-10-04"},{"lineNumber":34,"author":{"gitId":"xRossKoh"},"content":"            printDividerLine();","lastModifiedDate":"2021-10-06"},{"lineNumber":35,"author":{"gitId":"ThaddeusLim99"},"content":"            System.out.println(\"Question \" + String.valueOf(questionNumber + 1) + \":\");","lastModifiedDate":"2021-10-04"},{"lineNumber":36,"author":{"gitId":"ThaddeusLim99"},"content":"            //display front of card so that user can understand question","lastModifiedDate":"2021-10-04"},{"lineNumber":37,"author":{"gitId":"xRossKoh"},"content":"            System.out.println(getFrontOfCard(questionNumber));","lastModifiedDate":"2021-10-06"},{"lineNumber":38,"author":{"gitId":"ThaddeusLim99"},"content":"            System.out.println(\"Your answer?\");","lastModifiedDate":"2021-10-04"},{"lineNumber":39,"author":{"gitId":"ThaddeusLim99"},"content":"            //get user\u0027s answer to the card shown(currently assume user inputs only his/her answer)","lastModifiedDate":"2021-10-04"},{"lineNumber":40,"author":{"gitId":"ThaddeusLim99"},"content":"            //later version to include question number and parsing to allow for randomised testing","lastModifiedDate":"2021-10-04"},{"lineNumber":41,"author":{"gitId":"ThaddeusLim99"},"content":"            logger.log(Level.INFO, \"getting user\u0027s answer to the question\");","lastModifiedDate":"2021-10-10"},{"lineNumber":42,"author":{"gitId":"ThaddeusLim99"},"content":"            String userResponse \u003d getInput();","lastModifiedDate":"2021-10-04"},{"lineNumber":43,"author":{"gitId":"ThaddeusLim99"},"content":"            try {","lastModifiedDate":"2021-10-05"},{"lineNumber":44,"author":{"gitId":"ThaddeusLim99"},"content":"                parseUserResponse(userResponse);","lastModifiedDate":"2021-10-05"},{"lineNumber":45,"author":{"gitId":"ThaddeusLim99"},"content":"            } catch (FieldEmptyException e) {","lastModifiedDate":"2021-10-05"},{"lineNumber":46,"author":{"gitId":"ThaddeusLim99"},"content":"                logger.log(Level.WARNING, \"No user input\");","lastModifiedDate":"2021-10-10"},{"lineNumber":47,"author":{"gitId":"ThaddeusLim99"},"content":"                userResponse \u003d \"NO ANSWER GIVEN :(\";","lastModifiedDate":"2021-10-05"},{"lineNumber":48,"author":{"gitId":"ThaddeusLim99"},"content":"                printAnswerEmptyError();","lastModifiedDate":"2021-10-05"},{"lineNumber":49,"author":{"gitId":"ThaddeusLim99"},"content":"            }","lastModifiedDate":"2021-10-05"},{"lineNumber":50,"author":{"gitId":"ThaddeusLim99"},"content":"            logger.log(Level.INFO, \"Saving answer\");","lastModifiedDate":"2021-10-10"},{"lineNumber":51,"author":{"gitId":"ThaddeusLim99"},"content":"            addAnswer(userResponse, questionNumber);","lastModifiedDate":"2021-10-04"},{"lineNumber":52,"author":{"gitId":"xRossKoh"},"content":"            assert !answersResponse.isEmpty();","lastModifiedDate":"2021-10-14"},{"lineNumber":53,"author":{"gitId":"xRossKoh"},"content":"            assert answersCount \u003e 0;","lastModifiedDate":"2021-10-14"},{"lineNumber":54,"author":{"gitId":"ThaddeusLim99"},"content":"            logger.log(Level.INFO, \"Finished this card\u0027s testing\");","lastModifiedDate":"2021-10-10"},{"lineNumber":55,"author":{"gitId":"ThaddeusLim99"},"content":"        }","lastModifiedDate":"2021-10-04"},{"lineNumber":56,"author":{"gitId":"xRossKoh"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":57,"author":{"gitId":"xRossKoh"},"content":"        printDividerLine();","lastModifiedDate":"2021-10-06"},{"lineNumber":58,"author":{"gitId":"ThaddeusLim99"},"content":"        logger.log(Level.INFO, \"Finished test\");","lastModifiedDate":"2021-10-10"},{"lineNumber":59,"author":{"gitId":"ThaddeusLim99"},"content":"        //let user know testing is over","lastModifiedDate":"2021-10-04"},{"lineNumber":60,"author":{"gitId":"ThaddeusLim99"},"content":"        System.out.println(\"Test Over\");","lastModifiedDate":"2021-10-04"},{"lineNumber":61,"author":{"gitId":"xRossKoh"},"content":"        viewTestResult();","lastModifiedDate":"2021-10-06"},{"lineNumber":62,"author":{"gitId":"ThaddeusLim99"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":63,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":64,"author":{"gitId":"ThaddeusLim99"},"content":"    public static String parseUserResponse(String userResponse) throws FieldEmptyException {","lastModifiedDate":"2021-10-05"},{"lineNumber":65,"author":{"gitId":"ThaddeusLim99"},"content":"        String input \u003d userResponse;","lastModifiedDate":"2021-10-05"},{"lineNumber":66,"author":{"gitId":"ThaddeusLim99"},"content":"        if (userResponse.isEmpty()) {","lastModifiedDate":"2021-10-05"},{"lineNumber":67,"author":{"gitId":"ThaddeusLim99"},"content":"            throw new FieldEmptyException();","lastModifiedDate":"2021-10-05"},{"lineNumber":68,"author":{"gitId":"ThaddeusLim99"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":69,"author":{"gitId":"ThaddeusLim99"},"content":"        return input;","lastModifiedDate":"2021-10-05"},{"lineNumber":70,"author":{"gitId":"ThaddeusLim99"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":71,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":72,"author":{"gitId":"ThaddeusLim99"},"content":"    public static int getAnswerIndex(Answer answer) {","lastModifiedDate":"2021-10-04"},{"lineNumber":73,"author":{"gitId":"ThaddeusLim99"},"content":"        return answersResponse.indexOf(answer);","lastModifiedDate":"2021-10-04"},{"lineNumber":74,"author":{"gitId":"ThaddeusLim99"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":75,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":76,"author":{"gitId":"ThaddeusLim99"},"content":"    //hopefully there is a ui class which i can put this in and access from this class","lastModifiedDate":"2021-10-04"},{"lineNumber":77,"author":{"gitId":"ThaddeusLim99"},"content":"    public static String getInput() {","lastModifiedDate":"2021-10-04"},{"lineNumber":78,"author":{"gitId":"ThaddeusLim99"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2021-10-04"},{"lineNumber":79,"author":{"gitId":"ThaddeusLim99"},"content":"        String input \u003d in.nextLine();","lastModifiedDate":"2021-10-04"},{"lineNumber":80,"author":{"gitId":"ThaddeusLim99"},"content":"        return input;","lastModifiedDate":"2021-10-04"},{"lineNumber":81,"author":{"gitId":"ThaddeusLim99"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":82,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":83,"author":{"gitId":"xRossKoh"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":84,"author":{"gitId":"xRossKoh"},"content":"     * Saves a new user answer to the current list of user answers.","lastModifiedDate":"2021-10-06"},{"lineNumber":85,"author":{"gitId":"xRossKoh"},"content":"     *","lastModifiedDate":"2021-10-06"},{"lineNumber":86,"author":{"gitId":"xRossKoh"},"content":"     * @param answer            String representation of user\u0027s answer","lastModifiedDate":"2021-10-06"},{"lineNumber":87,"author":{"gitId":"xRossKoh"},"content":"     * @param questionIndex     Question number for the question that the answer answers","lastModifiedDate":"2021-10-06"},{"lineNumber":88,"author":{"gitId":"xRossKoh"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":89,"author":{"gitId":"ThaddeusLim99"},"content":"    public static void addAnswer(String answer, int questionIndex) {","lastModifiedDate":"2021-10-04"},{"lineNumber":90,"author":{"gitId":"ThaddeusLim99"},"content":"        answersResponse.add(new Answer(answer, questionIndex));","lastModifiedDate":"2021-10-04"},{"lineNumber":91,"author":{"gitId":"xRossKoh"},"content":"        answersCount +\u003d 1;","lastModifiedDate":"2021-10-14"},{"lineNumber":92,"author":{"gitId":"ThaddeusLim99"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":93,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":94,"author":{"gitId":"xRossKoh"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":95,"author":{"gitId":"xRossKoh"},"content":"     * Prints user\u0027s answer for a specified question to the system output.","lastModifiedDate":"2021-10-06"},{"lineNumber":96,"author":{"gitId":"xRossKoh"},"content":"     *","lastModifiedDate":"2021-10-06"},{"lineNumber":97,"author":{"gitId":"xRossKoh"},"content":"     * @param answerIndex   Specified question number","lastModifiedDate":"2021-10-06"},{"lineNumber":98,"author":{"gitId":"xRossKoh"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":99,"author":{"gitId":"ThaddeusLim99"},"content":"    public static void viewAnswer(int answerIndex) {","lastModifiedDate":"2021-10-04"},{"lineNumber":100,"author":{"gitId":"ThaddeusLim99"},"content":"        System.out.println(answersResponse.get(answerIndex).getAnswer());","lastModifiedDate":"2021-10-04"},{"lineNumber":101,"author":{"gitId":"ThaddeusLim99"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":102,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":103,"author":{"gitId":"xRossKoh"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":104,"author":{"gitId":"xRossKoh"},"content":"     * Prints results of test to system output.","lastModifiedDate":"2021-10-07"},{"lineNumber":105,"author":{"gitId":"xRossKoh"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":106,"author":{"gitId":"xRossKoh"},"content":"    private static void viewTestResult() {","lastModifiedDate":"2021-10-06"},{"lineNumber":107,"author":{"gitId":"ThaddeusLim99"},"content":"        logger.setLevel(Level.WARNING);","lastModifiedDate":"2021-10-14"},{"lineNumber":108,"author":{"gitId":"xRossKoh"},"content":"        int score \u003d 0;","lastModifiedDate":"2021-10-06"},{"lineNumber":109,"author":{"gitId":"xRossKoh"},"content":"        logger.log(Level.INFO, \"starting test check\");","lastModifiedDate":"2021-10-14"},{"lineNumber":110,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":111,"author":{"gitId":"ThaddeusLim99"},"content":"        //there must be at least one response to start a test","lastModifiedDate":"2021-10-14"},{"lineNumber":112,"author":{"gitId":"ThaddeusLim99"},"content":"        assert answersResponse.size() \u003e 0;","lastModifiedDate":"2021-10-14"},{"lineNumber":113,"author":{"gitId":"ThaddeusLim99"},"content":"        for (Answer response : answersResponse) {","lastModifiedDate":"2021-10-04"},{"lineNumber":114,"author":{"gitId":"ThaddeusLim99"},"content":"            int responseNumber \u003d getAnswerIndex(response);","lastModifiedDate":"2021-10-04"},{"lineNumber":115,"author":{"gitId":"ThaddeusLim99"},"content":"            //display front of card so that user can understand question","lastModifiedDate":"2021-10-04"},{"lineNumber":116,"author":{"gitId":"xRossKoh"},"content":"            printDividerLine();","lastModifiedDate":"2021-10-06"},{"lineNumber":117,"author":{"gitId":"xRossKoh"},"content":"            System.out.println(\"Question \"","lastModifiedDate":"2021-10-06"},{"lineNumber":118,"author":{"gitId":"xRossKoh"},"content":"                    + String.valueOf(responseNumber + 1)","lastModifiedDate":"2021-10-06"},{"lineNumber":119,"author":{"gitId":"xRossKoh"},"content":"                    + \": \" + getFrontOfCard(responseNumber));","lastModifiedDate":"2021-10-06"},{"lineNumber":120,"author":{"gitId":"xRossKoh"},"content":"            System.out.println(\"Correct answer: \" + getBackOfCard(responseNumber));","lastModifiedDate":"2021-10-06"},{"lineNumber":121,"author":{"gitId":"xRossKoh"},"content":"            System.out.print(\"Your answer: \");","lastModifiedDate":"2021-10-06"},{"lineNumber":122,"author":{"gitId":"ThaddeusLim99"},"content":"            viewAnswer(responseNumber);","lastModifiedDate":"2021-10-04"},{"lineNumber":123,"author":{"gitId":"xRossKoh"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":124,"author":{"gitId":"xRossKoh"},"content":"            if (getBackOfCard(responseNumber).equals(answersResponse.get(responseNumber).getAnswer())) {","lastModifiedDate":"2021-10-06"},{"lineNumber":125,"author":{"gitId":"xRossKoh"},"content":"                score++;","lastModifiedDate":"2021-10-06"},{"lineNumber":126,"author":{"gitId":"xRossKoh"},"content":"                printCorrectAnsMessage();","lastModifiedDate":"2021-10-06"},{"lineNumber":127,"author":{"gitId":"xRossKoh"},"content":"                logger.log(Level.INFO, \"user answer is correct\");","lastModifiedDate":"2021-10-14"},{"lineNumber":128,"author":{"gitId":"xRossKoh"},"content":"            } else {","lastModifiedDate":"2021-10-06"},{"lineNumber":129,"author":{"gitId":"xRossKoh"},"content":"                printWrongAnsMessage();","lastModifiedDate":"2021-10-06"},{"lineNumber":130,"author":{"gitId":"xRossKoh"},"content":"                logger.log(Level.INFO, \"user answer is wrong\");","lastModifiedDate":"2021-10-14"},{"lineNumber":131,"author":{"gitId":"xRossKoh"},"content":"            }","lastModifiedDate":"2021-10-06"},{"lineNumber":132,"author":{"gitId":"ThaddeusLim99"},"content":"        }","lastModifiedDate":"2021-10-04"},{"lineNumber":133,"author":{"gitId":"xRossKoh"},"content":"        printDividerLine();","lastModifiedDate":"2021-10-06"},{"lineNumber":134,"author":{"gitId":"xRossKoh"},"content":"        assert score \u003c\u003d answersCount;","lastModifiedDate":"2021-10-14"},{"lineNumber":135,"author":{"gitId":"xRossKoh"},"content":"        System.out.println(\"Your scored \" + score + \" out of \" + answersCount + \" for this test\");","lastModifiedDate":"2021-10-14"},{"lineNumber":136,"author":{"gitId":"xRossKoh"},"content":"        logger.log(Level.INFO, \"all answers checked, score printed to system output\");","lastModifiedDate":"2021-10-14"},{"lineNumber":137,"author":{"gitId":"xRossKoh"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":138,"author":{"gitId":"xRossKoh"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":139,"author":{"gitId":"xRossKoh"},"content":"    private static void printDividerLine() {","lastModifiedDate":"2021-10-06"},{"lineNumber":140,"author":{"gitId":"ThaddeusLim99"},"content":"        System.out.println(\"--------------------------------------------------\");","lastModifiedDate":"2021-10-04"},{"lineNumber":141,"author":{"gitId":"ThaddeusLim99"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":142,"author":{"gitId":"xRossKoh"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":143,"author":{"gitId":"xRossKoh"},"content":"    private static void printCorrectAnsMessage() {","lastModifiedDate":"2021-10-06"},{"lineNumber":144,"author":{"gitId":"xRossKoh"},"content":"        System.out.println(\"Well done! You got this question correct\");","lastModifiedDate":"2021-10-06"},{"lineNumber":145,"author":{"gitId":"xRossKoh"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":146,"author":{"gitId":"xRossKoh"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":147,"author":{"gitId":"xRossKoh"},"content":"    private static void printWrongAnsMessage() {","lastModifiedDate":"2021-10-06"},{"lineNumber":148,"author":{"gitId":"xRossKoh"},"content":"        System.out.println(\"You got this question wrong! Take note of the correct answer!\");","lastModifiedDate":"2021-10-06"},{"lineNumber":149,"author":{"gitId":"xRossKoh"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":150,"author":{"gitId":"xRossKoh"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":151,"author":{"gitId":"xRossKoh"},"content":"    private static void printAnswerEmptyError() {","lastModifiedDate":"2021-10-14"},{"lineNumber":152,"author":{"gitId":"xRossKoh"},"content":"        System.out.println(\"Remember to provide an answer next time! Don\u0027t give up!\");","lastModifiedDate":"2021-10-14"},{"lineNumber":153,"author":{"gitId":"xRossKoh"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":154,"author":{"gitId":"ThaddeusLim99"},"content":"}","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"ThaddeusLim99":82,"xRossKoh":72}},{"path":"src/main/java/seedu/duke/exceptions/CardLiException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xkisxk"},"content":"package seedu.duke.exceptions;","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"xkisxk"},"content":"public class CardLiException extends Exception {","lastModifiedDate":"2021-10-04"},{"lineNumber":4,"author":{"gitId":"xkisxk"},"content":"}","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"xkisxk":4}},{"path":"src/main/java/seedu/duke/exceptions/FieldEmptyException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JWweiyin"},"content":"package seedu.duke.exceptions;","lastModifiedDate":"2021-10-02"},{"lineNumber":2,"author":{"gitId":"JWweiyin"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":3,"author":{"gitId":"xRossKoh"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"xRossKoh"},"content":"/**","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"xRossKoh"},"content":" * Represents exception thrown when a field that is expected to be filled is empty.","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"xRossKoh"},"content":" */","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"xRossKoh"},"content":"public class FieldEmptyException extends CardLiException {","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"JWweiyin"},"content":"}","lastModifiedDate":"2021-10-02"}],"authorContributionMap":{"JWweiyin":3,"xRossKoh":5}},{"path":"src/main/java/seedu/duke/exceptions/NoSlashException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JWweiyin"},"content":"package seedu.duke.exceptions;","lastModifiedDate":"2021-10-02"},{"lineNumber":2,"author":{"gitId":"JWweiyin"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":3,"author":{"gitId":"xRossKoh"},"content":"/**","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"xRossKoh"},"content":" * Represents exception thrown when user input does not contain \u0027/\u0027 character when invoking certain commands.","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"xRossKoh"},"content":" */","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"xRossKoh"},"content":"public class NoSlashException extends CardLiException{","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"JWweiyin"},"content":"}","lastModifiedDate":"2021-10-02"}],"authorContributionMap":{"JWweiyin":3,"xRossKoh":4}},{"path":"src/test/java/seedu/duke/AnswerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xRossKoh"},"content":"package seedu.duke;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"xRossKoh"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"xRossKoh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"xRossKoh"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"xRossKoh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"xRossKoh"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"xRossKoh"},"content":"public class AnswerTest {","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"xRossKoh"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"xRossKoh"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"xRossKoh"},"content":"    public void testGetAnswer() {","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"xRossKoh"},"content":"        assertEquals(\"testAnswer\",","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"xRossKoh"},"content":"                new Answer(\"testAnswer\", 1).getAnswer());","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"xRossKoh"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"xRossKoh"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"xRossKoh"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"xRossKoh":15}},{"path":"src/test/java/seedu/duke/FlashCardManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JWweiyin"},"content":"package seedu.duke;","lastModifiedDate":"2021-10-02"},{"lineNumber":2,"author":{"gitId":"JWweiyin"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":3,"author":{"gitId":"JWweiyin"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-02"},{"lineNumber":4,"author":{"gitId":"xkisxk"},"content":"import seedu.duke.exceptions.CardLiException;","lastModifiedDate":"2021-10-04"},{"lineNumber":5,"author":{"gitId":"JWweiyin"},"content":"import seedu.duke.exceptions.FieldEmptyException;","lastModifiedDate":"2021-10-02"},{"lineNumber":6,"author":{"gitId":"JWweiyin"},"content":"import seedu.duke.exceptions.NoSlashException;","lastModifiedDate":"2021-10-02"},{"lineNumber":7,"author":{"gitId":"JWweiyin"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":8,"author":{"gitId":"xkisxk"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-04"},{"lineNumber":9,"author":{"gitId":"ThaddeusLim99"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"JWweiyin"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":11,"author":{"gitId":"JWweiyin"},"content":"class FlashCardManagerTest {","lastModifiedDate":"2021-10-02"},{"lineNumber":12,"author":{"gitId":"JWweiyin"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":13,"author":{"gitId":"JWweiyin"},"content":"    @Test","lastModifiedDate":"2021-10-02"},{"lineNumber":14,"author":{"gitId":"JWweiyin"},"content":"    public void trimStrings_hasFrontHasBack_expectTwoParts() throws NoSlashException, FieldEmptyException {","lastModifiedDate":"2021-10-02"},{"lineNumber":15,"author":{"gitId":"JWweiyin"},"content":"        String input \u003d \"add good morning /def ohayou\";","lastModifiedDate":"2021-10-02"},{"lineNumber":16,"author":{"gitId":"JWweiyin"},"content":"        assertEquals(2, FlashCardManager.trimStrings(input).length);","lastModifiedDate":"2021-10-02"},{"lineNumber":17,"author":{"gitId":"JWweiyin"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":18,"author":{"gitId":"JWweiyin"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":19,"author":{"gitId":"JWweiyin"},"content":"    @Test","lastModifiedDate":"2021-10-02"},{"lineNumber":20,"author":{"gitId":"JWweiyin"},"content":"    public void trimStrings_hasNoSlash_expectNoSlashException() {","lastModifiedDate":"2021-10-02"},{"lineNumber":21,"author":{"gitId":"JWweiyin"},"content":"        String input \u003d \"add good morning ohayou\";","lastModifiedDate":"2021-10-02"},{"lineNumber":22,"author":{"gitId":"JWweiyin"},"content":"        assertThrows(NoSlashException.class, () -\u003e FlashCardManager.trimStrings(input));","lastModifiedDate":"2021-10-02"},{"lineNumber":23,"author":{"gitId":"JWweiyin"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":24,"author":{"gitId":"JWweiyin"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":25,"author":{"gitId":"JWweiyin"},"content":"    @Test","lastModifiedDate":"2021-10-02"},{"lineNumber":26,"author":{"gitId":"JWweiyin"},"content":"    public void trimStrings_emptyFront_expectFieldEmptyException() {","lastModifiedDate":"2021-10-02"},{"lineNumber":27,"author":{"gitId":"JWweiyin"},"content":"        String input \u003d \"add /def ohayou\";","lastModifiedDate":"2021-10-02"},{"lineNumber":28,"author":{"gitId":"JWweiyin"},"content":"        assertThrows(FieldEmptyException.class, () -\u003e FlashCardManager.trimStrings(input));","lastModifiedDate":"2021-10-02"},{"lineNumber":29,"author":{"gitId":"JWweiyin"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":30,"author":{"gitId":"JWweiyin"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":31,"author":{"gitId":"JWweiyin"},"content":"    @Test","lastModifiedDate":"2021-10-02"},{"lineNumber":32,"author":{"gitId":"JWweiyin"},"content":"    public void trimStrings_emptyBack_expectFieldEmptyException() {","lastModifiedDate":"2021-10-02"},{"lineNumber":33,"author":{"gitId":"JWweiyin"},"content":"        String input \u003d \"add good morning /def\";","lastModifiedDate":"2021-10-02"},{"lineNumber":34,"author":{"gitId":"JWweiyin"},"content":"        assertThrows(FieldEmptyException.class, () -\u003e FlashCardManager.trimStrings(input));","lastModifiedDate":"2021-10-02"},{"lineNumber":35,"author":{"gitId":"JWweiyin"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":36,"author":{"gitId":"JWweiyin"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":37,"author":{"gitId":"astralum"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":38,"author":{"gitId":"xkisxk"},"content":"    public void getDescription_noDescription_ArrayIndexOutOfBoundsException() {","lastModifiedDate":"2021-10-10"},{"lineNumber":39,"author":{"gitId":"JWweiyin"},"content":"        String input \u003d \"delete\";","lastModifiedDate":"2021-10-09"},{"lineNumber":40,"author":{"gitId":"xkisxk"},"content":"        assertThrows(ArrayIndexOutOfBoundsException.class, () -\u003e FlashCardManager.getDescription(input));","lastModifiedDate":"2021-10-10"},{"lineNumber":41,"author":{"gitId":"astralum"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"astralum"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"xkisxk"},"content":"    @Test","lastModifiedDate":"2021-10-02"},{"lineNumber":44,"author":{"gitId":"xkisxk"},"content":"    public void deleteFlashCard_cardNotExist_expectCardLiException() {","lastModifiedDate":"2021-10-04"},{"lineNumber":45,"author":{"gitId":"xkisxk"},"content":"        String input \u003d \"delete abcdef\";","lastModifiedDate":"2021-10-02"},{"lineNumber":46,"author":{"gitId":"xkisxk"},"content":"        assertThrows(CardLiException.class, () -\u003e FlashCardManager.deleteFlashCard(input));","lastModifiedDate":"2021-10-04"},{"lineNumber":47,"author":{"gitId":"xkisxk"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":48,"author":{"gitId":"JWweiyin"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":49,"author":{"gitId":"JWweiyin"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":50,"author":{"gitId":"JWweiyin"},"content":"    public void deleteFlashCard_provideDescription_expectDelete() throws CardLiException {","lastModifiedDate":"2021-10-09"},{"lineNumber":51,"author":{"gitId":"JWweiyin"},"content":"        String firstCard \u003d \"add illness /def byouki\";","lastModifiedDate":"2021-10-09"},{"lineNumber":52,"author":{"gitId":"JWweiyin"},"content":"        String secondCard \u003d \"add to lose /def nakushimasu\";","lastModifiedDate":"2021-10-09"},{"lineNumber":53,"author":{"gitId":"JWweiyin"},"content":"        FlashCardManager.prepareToAddFlashCard(firstCard);","lastModifiedDate":"2021-10-09"},{"lineNumber":54,"author":{"gitId":"JWweiyin"},"content":"        FlashCardManager.prepareToAddFlashCard(secondCard);","lastModifiedDate":"2021-10-09"},{"lineNumber":55,"author":{"gitId":"JWweiyin"},"content":"        FlashCardManager.deleteFlashCard(\"illness\");","lastModifiedDate":"2021-10-09"},{"lineNumber":56,"author":{"gitId":"JWweiyin"},"content":"        FlashCardManager.viewAllFlashCards();","lastModifiedDate":"2021-10-09"},{"lineNumber":57,"author":{"gitId":"JWweiyin"},"content":"        assertEquals(1, FlashCardManager.cards.size());","lastModifiedDate":"2021-10-09"},{"lineNumber":58,"author":{"gitId":"JWweiyin"},"content":"        FlashCardManager.deleteFlashCard(\"to lose\");","lastModifiedDate":"2021-10-09"},{"lineNumber":59,"author":{"gitId":"JWweiyin"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":60,"author":{"gitId":"JWweiyin"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":61,"author":{"gitId":"JWweiyin"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":62,"author":{"gitId":"JWweiyin"},"content":"    public void deleteFlashCard_provideIndex_expectDelete() throws CardLiException {","lastModifiedDate":"2021-10-09"},{"lineNumber":63,"author":{"gitId":"JWweiyin"},"content":"        String firstCard \u003d \"add illness /def byouki\";","lastModifiedDate":"2021-10-09"},{"lineNumber":64,"author":{"gitId":"JWweiyin"},"content":"        String secondCard \u003d \"add to lose /def nakushimasu\";","lastModifiedDate":"2021-10-09"},{"lineNumber":65,"author":{"gitId":"JWweiyin"},"content":"        FlashCardManager.prepareToAddFlashCard(firstCard);","lastModifiedDate":"2021-10-09"},{"lineNumber":66,"author":{"gitId":"JWweiyin"},"content":"        FlashCardManager.prepareToAddFlashCard(secondCard);","lastModifiedDate":"2021-10-09"},{"lineNumber":67,"author":{"gitId":"JWweiyin"},"content":"        FlashCardManager.deleteFlashCard(\"1\");","lastModifiedDate":"2021-10-09"},{"lineNumber":68,"author":{"gitId":"JWweiyin"},"content":"        FlashCardManager.viewAllFlashCards();","lastModifiedDate":"2021-10-09"},{"lineNumber":69,"author":{"gitId":"JWweiyin"},"content":"        assertEquals(1, FlashCardManager.cards.size());","lastModifiedDate":"2021-10-09"},{"lineNumber":70,"author":{"gitId":"JWweiyin"},"content":"        FlashCardManager.deleteFlashCard(\"1\");","lastModifiedDate":"2021-10-09"},{"lineNumber":71,"author":{"gitId":"JWweiyin"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":72,"author":{"gitId":"JWweiyin"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":73,"author":{"gitId":"JWweiyin"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":74,"author":{"gitId":"JWweiyin"},"content":"    public void deleteFlashCard_provideInvalidIndex_expectCardLiException() throws CardLiException {","lastModifiedDate":"2021-10-09"},{"lineNumber":75,"author":{"gitId":"JWweiyin"},"content":"        String firstCard \u003d \"add illness /def byouki\";","lastModifiedDate":"2021-10-09"},{"lineNumber":76,"author":{"gitId":"JWweiyin"},"content":"        String secondCard \u003d \"add to lose /def nakushimasu\";","lastModifiedDate":"2021-10-09"},{"lineNumber":77,"author":{"gitId":"JWweiyin"},"content":"        FlashCardManager.prepareToAddFlashCard(firstCard);","lastModifiedDate":"2021-10-09"},{"lineNumber":78,"author":{"gitId":"JWweiyin"},"content":"        FlashCardManager.prepareToAddFlashCard(secondCard);","lastModifiedDate":"2021-10-09"},{"lineNumber":79,"author":{"gitId":"JWweiyin"},"content":"        FlashCardManager.viewAllFlashCards();","lastModifiedDate":"2021-10-09"},{"lineNumber":80,"author":{"gitId":"JWweiyin"},"content":"        assertThrows(CardLiException.class, () -\u003e FlashCardManager.deleteFlashCard(\"6\"));","lastModifiedDate":"2021-10-09"},{"lineNumber":81,"author":{"gitId":"JWweiyin"},"content":"        FlashCardManager.deleteFlashCard(\"1\");","lastModifiedDate":"2021-10-09"},{"lineNumber":82,"author":{"gitId":"JWweiyin"},"content":"        FlashCardManager.deleteFlashCard(\"1\");","lastModifiedDate":"2021-10-09"},{"lineNumber":83,"author":{"gitId":"JWweiyin"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":84,"author":{"gitId":"JWweiyin"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":85,"author":{"gitId":"JWweiyin"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":86,"author":{"gitId":"JWweiyin"},"content":"    public void deleteFlashCard_provideNegativeIndex_expectCardLiException() throws CardLiException {","lastModifiedDate":"2021-10-11"},{"lineNumber":87,"author":{"gitId":"JWweiyin"},"content":"        String firstCard \u003d \"add illness /def byouki\";","lastModifiedDate":"2021-10-11"},{"lineNumber":88,"author":{"gitId":"JWweiyin"},"content":"        String secondCard \u003d \"add to lose /def nakushimasu\";","lastModifiedDate":"2021-10-11"},{"lineNumber":89,"author":{"gitId":"JWweiyin"},"content":"        FlashCardManager.prepareToAddFlashCard(firstCard);","lastModifiedDate":"2021-10-11"},{"lineNumber":90,"author":{"gitId":"JWweiyin"},"content":"        FlashCardManager.prepareToAddFlashCard(secondCard);","lastModifiedDate":"2021-10-11"},{"lineNumber":91,"author":{"gitId":"JWweiyin"},"content":"        FlashCardManager.viewAllFlashCards();","lastModifiedDate":"2021-10-11"},{"lineNumber":92,"author":{"gitId":"JWweiyin"},"content":"        assertThrows(CardLiException.class, () -\u003e FlashCardManager.deleteFlashCard(\"0\"));","lastModifiedDate":"2021-10-11"},{"lineNumber":93,"author":{"gitId":"JWweiyin"},"content":"        FlashCardManager.deleteFlashCard(\"1\");","lastModifiedDate":"2021-10-11"},{"lineNumber":94,"author":{"gitId":"JWweiyin"},"content":"        FlashCardManager.deleteFlashCard(\"1\");","lastModifiedDate":"2021-10-11"},{"lineNumber":95,"author":{"gitId":"JWweiyin"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":96,"author":{"gitId":"JWweiyin"},"content":"}","lastModifiedDate":"2021-10-02"}],"authorContributionMap":{"JWweiyin":83,"ThaddeusLim99":1,"astralum":3,"xkisxk":9}},{"path":"src/test/java/seedu/duke/FlashCardTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xRossKoh"},"content":"package seedu.duke;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"xRossKoh"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"xRossKoh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"xRossKoh"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"xRossKoh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"xRossKoh"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"xRossKoh"},"content":"public class FlashCardTest {","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"xRossKoh"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"xRossKoh"},"content":"    private FlashCard flashCard \u003d new FlashCard(\"testFront\", \"testBack\");","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"xRossKoh"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"xRossKoh"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"xRossKoh"},"content":"    public void testGetFront() {","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"xRossKoh"},"content":"        assertEquals(\"testFront\", flashCard.getFront());","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"xRossKoh"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"xRossKoh"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"xRossKoh"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"xRossKoh"},"content":"    public void testGetBack() {","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"xRossKoh"},"content":"        assertEquals(\"testBack\", flashCard.getBack());","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"xRossKoh"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"xRossKoh"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"xRossKoh":20}},{"path":"src/test/java/seedu/duke/ParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"astralum"},"content":"package seedu.duke;","lastModifiedDate":"2021-10-14"},{"lineNumber":2,"author":{"gitId":"astralum"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":3,"author":{"gitId":"astralum"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-14"},{"lineNumber":4,"author":{"gitId":"astralum"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":5,"author":{"gitId":"astralum"},"content":"import java.io.ByteArrayInputStream;","lastModifiedDate":"2021-10-14"},{"lineNumber":6,"author":{"gitId":"astralum"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2021-10-14"},{"lineNumber":7,"author":{"gitId":"astralum"},"content":"import java.io.InputStream;","lastModifiedDate":"2021-10-14"},{"lineNumber":8,"author":{"gitId":"astralum"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":9,"author":{"gitId":"astralum"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-14"},{"lineNumber":10,"author":{"gitId":"astralum"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":11,"author":{"gitId":"astralum"},"content":"public class ParserTest {","lastModifiedDate":"2021-10-14"},{"lineNumber":12,"author":{"gitId":"astralum"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":13,"author":{"gitId":"astralum"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":14,"author":{"gitId":"astralum"},"content":"    public void programLogic_hasFrontWhitespace_success() {","lastModifiedDate":"2021-10-14"},{"lineNumber":15,"author":{"gitId":"astralum"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2021-10-14"},{"lineNumber":16,"author":{"gitId":"astralum"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":17,"author":{"gitId":"astralum"},"content":"        String input \u003d \" bye\\n\";","lastModifiedDate":"2021-10-14"},{"lineNumber":18,"author":{"gitId":"astralum"},"content":"        InputStream in \u003d new ByteArrayInputStream(input.getBytes());","lastModifiedDate":"2021-10-14"},{"lineNumber":19,"author":{"gitId":"astralum"},"content":"        ByteArrayOutputStream out \u003d new ByteArrayOutputStream();","lastModifiedDate":"2021-10-14"},{"lineNumber":20,"author":{"gitId":"astralum"},"content":"        System.setIn(in);","lastModifiedDate":"2021-10-14"},{"lineNumber":21,"author":{"gitId":"astralum"},"content":"        parser.programLogic();","lastModifiedDate":"2021-10-14"},{"lineNumber":22,"author":{"gitId":"astralum"},"content":"        assertEquals(\"\", out.toString());","lastModifiedDate":"2021-10-14"},{"lineNumber":23,"author":{"gitId":"astralum"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":24,"author":{"gitId":"astralum"},"content":"}","lastModifiedDate":"2021-10-14"}],"authorContributionMap":{"astralum":24}},{"path":"src/test/java/seedu/duke/TestManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ThaddeusLim99"},"content":"package seedu.duke;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"ThaddeusLim99"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"ThaddeusLim99"},"content":"import seedu.duke.exceptions.FieldEmptyException;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"ThaddeusLim99"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"ThaddeusLim99"},"content":"public class TestManagerTest {","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"ThaddeusLim99"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"ThaddeusLim99"},"content":"    public void parseUserResponse_noInput_expectFieldEmptyException() {","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"ThaddeusLim99"},"content":"        String input \u003d \"\";","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"ThaddeusLim99"},"content":"        assertThrows(FieldEmptyException.class, () -\u003e TestManager.parseUserResponse(input));","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"ThaddeusLim99"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"ThaddeusLim99"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"ThaddeusLim99":15}}]
