[{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"shyamgj1900"},"content":"    implementation \u0027org.jetbrains:annotations:20.1.0\u0027","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"saravanamani1999"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.8.1\u0027","lastModifiedDate":"2021-10-04"},{"lineNumber":15,"author":{"gitId":"saravanamani1999"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.8.1\u0027","lastModifiedDate":"2021-10-04"},{"lineNumber":16,"author":{"gitId":"saravanamani1999"},"content":"    implementation group: \u0027com.google.code.gson\u0027, name: \u0027gson\u0027 , version: \u00272.8.8\u0027","lastModifiedDate":"2021-10-04"},{"lineNumber":17,"author":{"gitId":"giterator"},"content":"    implementation group: \u0027net.gcardone.junidecode\u0027, name: \u0027junidecode\u0027, version: \u00270.4.1\u0027","lastModifiedDate":"2021-11-02"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"powzx"},"content":"    mainClassName \u003d \"seedu.kolinux.Main\"","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"powzx"},"content":"    archiveBaseName \u003d \"Kolinux\"","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.23\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"run {","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"powzx"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2021-10-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"giterator":1,"shyamgj1900":1,"saravanamani1999":4,"powzx":3,"-":42}},{"path":"config/checkstyle/checkstyle.xml","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\"?\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"\u003c!DOCTYPE module PUBLIC","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"        \"-//Checkstyle//DTD Checkstyle Configuration 1.3//EN\"","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"        \"https://checkstyle.org/dtds/configuration_1_3.dtd\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c!--","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    Checkstyle configuration that checks the Google coding conventions from Google Java Style","lastModifiedDate":"2020-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    that can be found at https://google.github.io/styleguide/javaguide.html","lastModifiedDate":"2020-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    Checkstyle is very configurable. Be sure to read the documentation at","lastModifiedDate":"2020-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    http://checkstyle.sf.net (or in your downloaded distribution).","lastModifiedDate":"2020-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    To completely disable a check, just comment it out or delete it from the file.","lastModifiedDate":"2020-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    Authors: Max Vetrenko, Ruslan Diachenko, Roman Ivanov.","lastModifiedDate":"2020-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" --\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"\u003cmodule name \u003d \"Checker\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003cproperty name\u003d\"charset\" value\u003d\"UTF-8\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003cproperty name\u003d\"severity\" value\u003d\"error\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    \u003cproperty name\u003d\"fileExtensions\" value\u003d\"java, properties, xml\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    \u003c!-- Excludes all \u0027module-info.java\u0027 files              --\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    \u003c!-- See https://checkstyle.org/config_filefilters.html --\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"BeforeExecutionExclusionFileFilter\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        \u003cproperty name\u003d\"fileNamePattern\" value\u003d\"module\\-info\\.java$\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    \u003c!-- Checks for whitespace                               --\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    \u003c!-- See http://checkstyle.sf.net/config_whitespace.html --\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"FileTabCharacter\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        \u003cproperty name\u003d\"eachLine\" value\u003d\"true\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"TreeWalker\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"OuterTypeFilename\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"IllegalTokenText\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"tokens\" value\u003d\"STRING_LITERAL, CHAR_LITERAL\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"format\"","lastModifiedDate":"2020-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                      value\u003d\"\\\\u00(09|0(a|A)|0(c|C)|0(d|D)|22|27|5(C|c))|\\\\(0(10|11|12|14|15|42|47)|134)\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"message\"","lastModifiedDate":"2020-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                      value\u003d\"Consider using special escape sequence instead of octal value or Unicode escaped value.\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"AvoidEscapedUnicodeCharacters\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"allowEscapesForControlCharacters\" value\u003d\"true\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"allowByTailComment\" value\u003d\"true\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"allowNonPrintableEscapes\" value\u003d\"true\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"LineLength\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"max\" value\u003d\"120\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"ignorePattern\" value\u003d\"^package.*|^import.*|a href|href|http://|https://|ftp://\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"AvoidStarImport\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"OneTopLevelClass\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"NoLineWrap\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"EmptyBlock\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"option\" value\u003d\"TEXT\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"tokens\"","lastModifiedDate":"2020-05-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                      value\u003d\"LITERAL_TRY, LITERAL_FINALLY, LITERAL_IF, LITERAL_ELSE, LITERAL_SWITCH\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"NeedBraces\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"LeftCurly\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"RightCurly\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"id\" value\u003d\"RightCurlySame\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"tokens\"","lastModifiedDate":"2020-05-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                      value\u003d\"LITERAL_TRY, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_IF, LITERAL_ELSE,","lastModifiedDate":"2020-05-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                    LITERAL_DO\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"RightCurly\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"id\" value\u003d\"RightCurlyAlone\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"option\" value\u003d\"alone\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"tokens\"","lastModifiedDate":"2020-05-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                      value\u003d\"CLASS_DEF, METHOD_DEF, CTOR_DEF, LITERAL_FOR, LITERAL_WHILE, STATIC_INIT,","lastModifiedDate":"2020-05-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                    INSTANCE_INIT\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"WhitespaceAround\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"allowEmptyConstructors\" value\u003d\"true\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"allowEmptyLambdas\" value\u003d\"true\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"allowEmptyMethods\" value\u003d\"true\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"allowEmptyTypes\" value\u003d\"true\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"allowEmptyLoops\" value\u003d\"true\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            \u003cmessage key\u003d\"ws.notFollowed\"","lastModifiedDate":"2020-05-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                     value\u003d\"WhitespaceAround: \u0027\u0027{0}\u0027\u0027 is not followed by whitespace. Empty blocks may only be represented as \u0027{}\u0027 when not part of a multi-block statement (4.1.3)\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            \u003cmessage key\u003d\"ws.notPreceded\"","lastModifiedDate":"2020-05-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                     value\u003d\"WhitespaceAround: \u0027\u0027{0}\u0027\u0027 is not preceded with whitespace.\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"OneStatementPerLine\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"MultipleVariableDeclarations\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"ArrayTypeStyle\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"MissingSwitchDefault\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"FallThrough\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"UpperEll\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"ModifierOrder\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"EmptyLineSeparator\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"allowNoEmptyLineBetweenFields\" value\u003d\"true\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"SeparatorWrap\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"id\" value\u003d\"SeparatorWrapDot\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"tokens\" value\u003d\"DOT\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"option\" value\u003d\"nl\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"SeparatorWrap\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"id\" value\u003d\"SeparatorWrapComma\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"tokens\" value\u003d\"COMMA\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"option\" value\u003d\"EOL\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"SeparatorWrap\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            \u003c!-- ELLIPSIS is EOL until https://github.com/google/styleguide/issues/258 --\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"id\" value\u003d\"SeparatorWrapEllipsis\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"tokens\" value\u003d\"ELLIPSIS\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"option\" value\u003d\"EOL\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"SeparatorWrap\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            \u003c!-- ARRAY_DECLARATOR is EOL until https://github.com/google/styleguide/issues/259 --\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"id\" value\u003d\"SeparatorWrapArrayDeclarator\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"tokens\" value\u003d\"ARRAY_DECLARATOR\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"option\" value\u003d\"EOL\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"SeparatorWrap\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"id\" value\u003d\"SeparatorWrapMethodRef\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"tokens\" value\u003d\"METHOD_REF\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"option\" value\u003d\"nl\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"PackageName\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"format\" value\u003d\"^[a-z]+(\\.[a-z][a-z0-9]*)*$\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            \u003cmessage key\u003d\"name.invalidPattern\"","lastModifiedDate":"2020-05-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"                     value\u003d\"Package name \u0027\u0027{0}\u0027\u0027 must match pattern \u0027\u0027{1}\u0027\u0027.\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"TypeName\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            \u003cmessage key\u003d\"name.invalidPattern\"","lastModifiedDate":"2020-05-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"                     value\u003d\"Type name \u0027\u0027{0}\u0027\u0027 must match pattern \u0027\u0027{1}\u0027\u0027.\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"MemberName\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"format\" value\u003d\"^[a-z][a-z0-9][a-zA-Z0-9]*$\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            \u003cmessage key\u003d\"name.invalidPattern\"","lastModifiedDate":"2020-05-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"                     value\u003d\"Member name \u0027\u0027{0}\u0027\u0027 must match pattern \u0027\u0027{1}\u0027\u0027.\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"ParameterName\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"format\" value\u003d\"^[a-z]([a-z0-9][a-zA-Z0-9]*)?$\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            \u003cmessage key\u003d\"name.invalidPattern\"","lastModifiedDate":"2020-05-24"},{"lineNumber":138,"author":{"gitId":"-"},"content":"                     value\u003d\"Parameter name \u0027\u0027{0}\u0027\u0027 must match pattern \u0027\u0027{1}\u0027\u0027.\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"LambdaParameterName\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"format\" value\u003d\"^[a-z]([a-z0-9][a-zA-Z0-9]*)?$\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            \u003cmessage key\u003d\"name.invalidPattern\"","lastModifiedDate":"2020-05-24"},{"lineNumber":143,"author":{"gitId":"-"},"content":"                     value\u003d\"Lambda parameter name \u0027\u0027{0}\u0027\u0027 must match pattern \u0027\u0027{1}\u0027\u0027.\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"CatchParameterName\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"format\" value\u003d\"^[a-z]([a-z0-9][a-zA-Z0-9]*)?$\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            \u003cmessage key\u003d\"name.invalidPattern\"","lastModifiedDate":"2020-05-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"                     value\u003d\"Catch parameter name \u0027\u0027{0}\u0027\u0027 must match pattern \u0027\u0027{1}\u0027\u0027.\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"LocalVariableName\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"tokens\" value\u003d\"VARIABLE_DEF\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"format\" value\u003d\"^[a-z]([a-z0-9][a-zA-Z0-9]*)?$\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            \u003cmessage key\u003d\"name.invalidPattern\"","lastModifiedDate":"2020-05-24"},{"lineNumber":154,"author":{"gitId":"-"},"content":"                     value\u003d\"Local variable name \u0027\u0027{0}\u0027\u0027 must match pattern \u0027\u0027{1}\u0027\u0027.\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"ClassTypeParameterName\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"format\" value\u003d\"(^[A-Z][0-9]?)$|([A-Z][a-zA-Z0-9]*[T]$)\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            \u003cmessage key\u003d\"name.invalidPattern\"","lastModifiedDate":"2020-05-24"},{"lineNumber":159,"author":{"gitId":"-"},"content":"                     value\u003d\"Class type name \u0027\u0027{0}\u0027\u0027 must match pattern \u0027\u0027{1}\u0027\u0027.\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"MethodTypeParameterName\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"format\" value\u003d\"(^[A-Z][0-9]?)$|([A-Z][a-zA-Z0-9]*[T]$)\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            \u003cmessage key\u003d\"name.invalidPattern\"","lastModifiedDate":"2020-05-24"},{"lineNumber":164,"author":{"gitId":"-"},"content":"                     value\u003d\"Method type name \u0027\u0027{0}\u0027\u0027 must match pattern \u0027\u0027{1}\u0027\u0027.\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"InterfaceTypeParameterName\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"format\" value\u003d\"(^[A-Z][0-9]?)$|([A-Z][a-zA-Z0-9]*[T]$)\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            \u003cmessage key\u003d\"name.invalidPattern\"","lastModifiedDate":"2020-05-24"},{"lineNumber":169,"author":{"gitId":"-"},"content":"                     value\u003d\"Interface type name \u0027\u0027{0}\u0027\u0027 must match pattern \u0027\u0027{1}\u0027\u0027.\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"NoFinalizer\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"GenericWhitespace\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":173,"author":{"gitId":"-"},"content":"            \u003cmessage key\u003d\"ws.followed\"","lastModifiedDate":"2020-05-24"},{"lineNumber":174,"author":{"gitId":"-"},"content":"                     value\u003d\"GenericWhitespace \u0027\u0027{0}\u0027\u0027 is followed by whitespace.\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":175,"author":{"gitId":"-"},"content":"            \u003cmessage key\u003d\"ws.preceded\"","lastModifiedDate":"2020-05-24"},{"lineNumber":176,"author":{"gitId":"-"},"content":"                     value\u003d\"GenericWhitespace \u0027\u0027{0}\u0027\u0027 is preceded with whitespace.\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            \u003cmessage key\u003d\"ws.illegalFollow\"","lastModifiedDate":"2020-05-24"},{"lineNumber":178,"author":{"gitId":"-"},"content":"                     value\u003d\"GenericWhitespace \u0027\u0027{0}\u0027\u0027 should followed by whitespace.\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":179,"author":{"gitId":"-"},"content":"            \u003cmessage key\u003d\"ws.notPreceded\"","lastModifiedDate":"2020-05-24"},{"lineNumber":180,"author":{"gitId":"-"},"content":"                     value\u003d\"GenericWhitespace \u0027\u0027{0}\u0027\u0027 is not preceded with whitespace.\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"Indentation\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"basicOffset\" value\u003d\"4\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"braceAdjustment\" value\u003d\"0\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"caseIndent\" value\u003d\"0\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":186,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"throwsIndent\" value\u003d\"4\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":187,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"lineWrappingIndentation\" value\u003d\"4\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":188,"author":{"gitId":"saravanamani1999"},"content":"            \u003cproperty name\u003d\"arrayInitIndent\" value\u003d\"8\"/\u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"AbbreviationAsWordInName\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"ignoreFinal\" value\u003d\"false\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"allowedAbbreviationLength\" value\u003d\"1\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"OverloadMethodsDeclarationOrder\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"VariableDeclarationUsageDistance\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"MethodParamPad\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"NoWhitespaceBefore\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":198,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"tokens\"","lastModifiedDate":"2020-05-24"},{"lineNumber":199,"author":{"gitId":"-"},"content":"                      value\u003d\"COMMA, SEMI, POST_INC, POST_DEC, DOT, ELLIPSIS, METHOD_REF\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":200,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"allowLineBreaks\" value\u003d\"true\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"ParenPad\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"OperatorWrap\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":204,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"option\" value\u003d\"NL\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":205,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"tokens\"","lastModifiedDate":"2020-05-24"},{"lineNumber":206,"author":{"gitId":"-"},"content":"                      value\u003d\"BAND, BOR, BSR, BXOR, DIV, EQUAL, GE, GT, LAND, LE, LITERAL_INSTANCEOF, LOR,","lastModifiedDate":"2020-05-24"},{"lineNumber":207,"author":{"gitId":"-"},"content":"                    LT, MINUS, MOD, NOT_EQUAL, PLUS, QUESTION, SL, SR, STAR, METHOD_REF \"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"AnnotationLocation\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":210,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"id\" value\u003d\"AnnotationLocationMostCases\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":211,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"tokens\"","lastModifiedDate":"2020-05-24"},{"lineNumber":212,"author":{"gitId":"-"},"content":"                      value\u003d\"CLASS_DEF, INTERFACE_DEF, ENUM_DEF, METHOD_DEF, CTOR_DEF\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"AnnotationLocation\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":215,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"id\" value\u003d\"AnnotationLocationVariables\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":216,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"tokens\" value\u003d\"VARIABLE_DEF\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":217,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"allowSamelineMultipleAnnotations\" value\u003d\"true\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"NonEmptyAtclauseDescription\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"JavadocTagContinuationIndentation\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"SummaryJavadoc\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":222,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"forbiddenSummaryFragments\"","lastModifiedDate":"2020-05-24"},{"lineNumber":223,"author":{"gitId":"-"},"content":"                      value\u003d\"^@return the *|^This method returns |^A [{]@code [a-zA-Z0-9]+[}]( is a )\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"JavadocParagraph\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"AtclauseOrder\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":227,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"tagOrder\" value\u003d\"@param, @return, @throws, @deprecated\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":228,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"target\"","lastModifiedDate":"2020-05-24"},{"lineNumber":229,"author":{"gitId":"-"},"content":"                      value\u003d\"CLASS_DEF, INTERFACE_DEF, ENUM_DEF, METHOD_DEF, CTOR_DEF, VARIABLE_DEF\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":230,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"JavadocMethod\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":232,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"scope\" value\u003d\"public\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":233,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"allowMissingParamTags\" value\u003d\"true\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":234,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"allowMissingThrowsTags\" value\u003d\"true\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":235,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"allowMissingReturnTag\" value\u003d\"true\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":236,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"allowedAnnotations\" value\u003d\"Override, Test\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":237,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"allowThrowsTagsForSubclasses\" value\u003d\"true\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":238,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":239,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"MethodName\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":240,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"format\" value\u003d\"^[a-z][a-z0-9][a-zA-Z0-9_]*$\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":241,"author":{"gitId":"-"},"content":"            \u003cmessage key\u003d\"name.invalidPattern\"","lastModifiedDate":"2020-05-24"},{"lineNumber":242,"author":{"gitId":"-"},"content":"                     value\u003d\"Method name \u0027\u0027{0}\u0027\u0027 must match pattern \u0027\u0027{1}\u0027\u0027.\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":243,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":244,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"SingleLineJavadoc\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":245,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"ignoreInlineTags\" value\u003d\"false\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":246,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":247,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"EmptyCatchBlock\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":248,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"exceptionVariableName\" value\u003d\"expected\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":249,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":250,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"CommentsIndentation\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":252,"author":{"gitId":"-"},"content":"\u003c/module\u003e","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"saravanamani1999":1,"-":251}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# About us","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"Display | Name | Github Profile | Portfolio ","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"--------|:----:|:--------------:|:---------:","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"nonrnp"},"content":"\u003cimg alt\u003d\"Saravanamani\" height\u003d\"100\" src\u003d\"https://www.telegraph.co.uk/content/dam/films/2021/02/17/TELEMMGLPICT000251251643_trans_NvBQzQNjv4Bq0IuRDa4Lrk4eU47gzEymeKsnQ8KTs7S5BI2Xm5XRB4g.jpeg?imwidth\u003d960\" width\u003d\"150\"/\u003e | Saravanamani Ramalingam | [Github](https://github.com/saravanamani1999) | [Portfolio](team/saravanamani1999.md)","lastModifiedDate":"2021-11-03"},{"lineNumber":6,"author":{"gitId":"powzx"},"content":"\u003cimg height\u003d\"100\" src\u003d\"https://www.looper.com/img/gallery/the-ending-of-squid-game-season-1-explained/intro-1632168234.webp\" width\u003d\"150\"/\u003e | Pow Zhi Xiang | [Github](https://github.com/powzx) | [Portfolio](team/powzx.md)","lastModifiedDate":"2021-10-31"},{"lineNumber":7,"author":{"gitId":"nonrnp"},"content":"\u003cimg height\u003d\"100\" src\u003d\"https://encrypted-tbn0.gstatic.com/images?q\u003dtbn:ANd9GcSNU4uuzXoZ2XmXbMMpL3DcVZfmxv65HkrZdA\u0026usqp\u003dCAU\" width\u003d\"150\"/\u003e | Shyam Ganesh | [Github](https://github.com/shyamgj1900) | [Portfolio](team/shyamgj1900.md)","lastModifiedDate":"2021-11-03"},{"lineNumber":8,"author":{"gitId":"nonrnp"},"content":"\u003cimg height\u003d\"100\" src\u003d\"https://via.placeholder.com/100.png?text\u003dPhoto\" width\u003d\"150\"/\u003e | Pranav Venkatram | [Github](https://github.com/giterator) | [Portfolio](team/giterator.md)","lastModifiedDate":"2021-11-03"},{"lineNumber":9,"author":{"gitId":"nonrnp"},"content":"\u003cimg height\u003d\"100\" src\u003d\"https://via.placeholder.com/100.png?text\u003dPhoto\" width\u003d\"150\"/\u003e | Pichanon Rattanadilok Na Phuket | [Github](https://github.com/NonRNP) | [Portfolio](team/nonrnp.md)","lastModifiedDate":"2021-11-03"}],"authorContributionMap":{"nonrnp":4,"powzx":1,"-":4}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"powzx"},"content":"# Welcome to Kolinux Developer Guide 😎","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"powzx"},"content":"## Introduction","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":5,"author":{"gitId":"powzx"},"content":"This Developer Guide is designed for developers interested in working with _Kolinux_ in the following manner:","lastModifiedDate":"2021-10-23"},{"lineNumber":6,"author":{"gitId":"powzx"},"content":"1. Customise _Kolinux_ for specific operating needs","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"powzx"},"content":"2. Extend the functionality of _Kolinux_","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"powzx"},"content":"This guide will bring you through the [overall design](#design) of _Kolinux_, the various ","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"saravanamani1999"},"content":"[implementations](#implementation) and their mechanisms. We have also provided insights into our ","lastModifiedDate":"2021-10-30"},{"lineNumber":11,"author":{"gitId":"saravanamani1999"},"content":"[target users](#target-user-profile) to allow you to better understand the reasons behind the various methods ","lastModifiedDate":"2021-10-30"},{"lineNumber":12,"author":{"gitId":"saravanamani1999"},"content":"of implementations.","lastModifiedDate":"2021-10-30"},{"lineNumber":13,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":14,"author":{"gitId":"saravanamani1999"},"content":"## Table of Contents","lastModifiedDate":"2021-10-23"},{"lineNumber":15,"author":{"gitId":"saravanamani1999"},"content":"* [Acknowledgements](#acknowledgements)","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"saravanamani1999"},"content":"* [Setting up and Getting started](#setting-up-and-getting-started)","lastModifiedDate":"2021-10-23"},{"lineNumber":17,"author":{"gitId":"saravanamani1999"},"content":"* [Design](#design)","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"saravanamani1999"},"content":"* [Implementation](#implementation)","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"powzx"},"content":"  * [`timetable add`](#add-to-timetable-feature)","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"powzx"},"content":"  * [`planner add`](#add-to-planner-feature)","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"giterator"},"content":"  * [`module add/delete`](#add/delete-a-module-by-module-code-feature)","lastModifiedDate":"2021-11-02"},{"lineNumber":22,"author":{"gitId":"nonrnp"},"content":"  * [`cap code`](#cap-calculator-by-module-code-feature)","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"saravanamani1999"},"content":"  * [`bus`](#bus-routes-feature)","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"saravanamani1999"},"content":"* [Product Scope](#product-scope)","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"saravanamani1999"},"content":"  * [Target user profile](#target-user-profile)","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"saravanamani1999"},"content":"  * [Value proposition](#value-proposition)","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"saravanamani1999"},"content":"* [User Stories](#user-stories)","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"saravanamani1999"},"content":"* [Non-Functional Requirements](#non-functional-requirements)","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"saravanamani1999"},"content":"* [Glossary](#glossary)","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"saravanamani1999"},"content":"* [Instructions for manual testing](#instructions-for-manual-testing)","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"## Acknowledgements","lastModifiedDate":"2020-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":33,"author":{"gitId":"powzx"},"content":"* User Guide and Developer Guide of [AddressBook Level-3](https://se-education.org/addressbook-level3/)","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"saravanamani1999"},"content":"* [NUSMods API](https://api.nusmods.com/v2/) ","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"saravanamani1999"},"content":"* [GSON](https://github.com/google/gson)","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":37,"author":{"gitId":"saravanamani1999"},"content":"## Setting up and getting started","lastModifiedDate":"2021-10-23"},{"lineNumber":38,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":39,"author":{"gitId":"saravanamani1999"},"content":"### Setting up","lastModifiedDate":"2021-10-23"},{"lineNumber":40,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":41,"author":{"gitId":"powzx"},"content":"1. Fork our [repository](https://github.com/AY2122S1-CS2113T-W11-1/tp) and clone into your computer","lastModifiedDate":"2021-10-23"},{"lineNumber":42,"author":{"gitId":"saravanamani1999"},"content":"2. Configure JDK: Ensure your IDE is configured to JDK 11","lastModifiedDate":"2021-10-23"},{"lineNumber":43,"author":{"gitId":"saravanamani1999"},"content":"3. Import the project as a Gradle Project ","lastModifiedDate":"2021-10-23"},{"lineNumber":44,"author":{"gitId":"saravanamani1999"},"content":"4. Verify the setup by running `seedu.Kolinux.Main`","lastModifiedDate":"2021-10-23"},{"lineNumber":45,"author":{"gitId":"saravanamani1999"},"content":"   1. [Try out a few commands](#instructions-for-manual-testing) and ensure they\u0027re working properly","lastModifiedDate":"2021-10-30"},{"lineNumber":46,"author":{"gitId":"saravanamani1999"},"content":"   2. Run the tests and ensure all of them past the test cases","lastModifiedDate":"2021-10-23"},{"lineNumber":47,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":48,"author":{"gitId":"saravanamani1999"},"content":"### Before writing code","lastModifiedDate":"2021-10-23"},{"lineNumber":49,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":50,"author":{"gitId":"saravanamani1999"},"content":"1. Configure the code style","lastModifiedDate":"2021-10-23"},{"lineNumber":51,"author":{"gitId":"powzx"},"content":"   * Ensure that your coding style matches our coding style","lastModifiedDate":"2021-10-25"},{"lineNumber":52,"author":{"gitId":"powzx"},"content":"2. Set up Continuous Integration","lastModifiedDate":"2021-10-25"},{"lineNumber":53,"author":{"gitId":"powzx"},"content":"   * This project comes with a `gradle.yml` file so each time you push, Github will run the CI","lastModifiedDate":"2021-10-25"},{"lineNumber":54,"author":{"gitId":"powzx"},"content":"   for your project automatically.","lastModifiedDate":"2021-10-23"},{"lineNumber":55,"author":{"gitId":"saravanamani1999"},"content":"3. Learn the design","lastModifiedDate":"2021-10-23"},{"lineNumber":56,"author":{"gitId":"powzx"},"content":"   * Look through the overall design by looking through [Kolinux\u0027s overall architecture](#design)","lastModifiedDate":"2021-10-25"},{"lineNumber":57,"author":{"gitId":"saravanamani1999"},"content":"   ","lastModifiedDate":"2021-10-23"},{"lineNumber":58,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":59,"author":{"gitId":"saravanamani1999"},"content":"## Design","lastModifiedDate":"2021-10-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":61,"author":{"gitId":"powzx"},"content":"### Main Components of the Architecture","lastModifiedDate":"2021-10-21"},{"lineNumber":62,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":63,"author":{"gitId":"powzx"},"content":"This section describes the overall design architecture of _Kolinux_.","lastModifiedDate":"2021-10-23"},{"lineNumber":64,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":65,"author":{"gitId":"powzx"},"content":"The `Main` class is responsible for initializing the main components upon start-up of the application, and ","lastModifiedDate":"2021-10-22"},{"lineNumber":66,"author":{"gitId":"powzx"},"content":"deciding the execution path of the application through the main components based on reading the user inputs.","lastModifiedDate":"2021-10-21"},{"lineNumber":67,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":68,"author":{"gitId":"powzx"},"content":"The application consists of the following main components responsible for the high-level execution of a user input:","lastModifiedDate":"2021-10-21"},{"lineNumber":69,"author":{"gitId":"powzx"},"content":"1. `Kolinux`: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2021-10-22"},{"lineNumber":70,"author":{"gitId":"powzx"},"content":"2. `util`: Collection of utility classes.","lastModifiedDate":"2021-10-23"},{"lineNumber":71,"author":{"gitId":"powzx"},"content":"   * `util.Ui`: User interface of the application.","lastModifiedDate":"2021-10-23"},{"lineNumber":72,"author":{"gitId":"powzx"},"content":"   * `util.Parser`: Makes sense from the user input and decides which `Command` class to initialize.","lastModifiedDate":"2021-10-23"},{"lineNumber":73,"author":{"gitId":"powzx"},"content":"   * `util.DirectoryCreator`: Ensures the `/data` directory is created and present for data storage.","lastModifiedDate":"2021-10-23"},{"lineNumber":74,"author":{"gitId":"powzx"},"content":"   * `util.KolinuxLogger`: Logs the user activity into `data/logger.log`.","lastModifiedDate":"2021-10-23"},{"lineNumber":75,"author":{"gitId":"powzx"},"content":"   * `util.PromptHandler`: Handles prompts when user confirmation is required to perform certain operations.","lastModifiedDate":"2021-11-04"},{"lineNumber":76,"author":{"gitId":"powzx"},"content":"3. `commands`: Collection of user commands that determines execution.","lastModifiedDate":"2021-10-23"},{"lineNumber":77,"author":{"gitId":"powzx"},"content":"4. `routes`: Collection of classes used by Bus Route Finder feature.","lastModifiedDate":"2021-10-23"},{"lineNumber":78,"author":{"gitId":"powzx"},"content":"5. `module`: Collection of classes used by Module Manager feature.","lastModifiedDate":"2021-10-23"},{"lineNumber":79,"author":{"gitId":"powzx"},"content":"6. `timetable`: Collection of classes used by Timetable feature.","lastModifiedDate":"2021-10-23"},{"lineNumber":80,"author":{"gitId":"powzx"},"content":"7. `planner`: Collection of classes used by Planner feature.","lastModifiedDate":"2021-10-23"},{"lineNumber":81,"author":{"gitId":"powzx"},"content":"8. `capcalculator`: Collection of classes used by CAP Calculator feature.","lastModifiedDate":"2021-10-23"},{"lineNumber":82,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":83,"author":{"gitId":"powzx"},"content":"The architecture diagram below shows a high-level overview of the structure between different components. ","lastModifiedDate":"2021-10-29"},{"lineNumber":84,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":85,"author":{"gitId":"powzx"},"content":"❕ _Note: Each component is coded with a different colour and the same colour coding is applied to the rest of this ","lastModifiedDate":"2021-10-23"},{"lineNumber":86,"author":{"gitId":"powzx"},"content":"document._","lastModifiedDate":"2021-10-23"},{"lineNumber":87,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":88,"author":{"gitId":"powzx"},"content":"![Overview Architecture Diagram](assets/images/ArchitectureDiagram.png)","lastModifiedDate":"2021-10-23"},{"lineNumber":89,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":90,"author":{"gitId":"powzx"},"content":"#### Commands Component","lastModifiedDate":"2021-10-23"},{"lineNumber":91,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":92,"author":{"gitId":"powzx"},"content":"The class diagram below describes the structure of the `commands` component.","lastModifiedDate":"2021-10-29"},{"lineNumber":93,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":94,"author":{"gitId":"powzx"},"content":"❕ _Note: XYZCommand in this diagram represents HelpCommand, ExitCommand, and InvalidCommand._","lastModifiedDate":"2021-10-24"},{"lineNumber":95,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":96,"author":{"gitId":"powzx"},"content":"![Commands Class Diagram](assets/images/CommandsClassDiagram.png)","lastModifiedDate":"2021-10-24"},{"lineNumber":97,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":98,"author":{"gitId":"powzx"},"content":"All `Command` classes inherit from the abstract `Command` class, which has an association with `KolinuxLogger` so that","lastModifiedDate":"2021-10-29"},{"lineNumber":99,"author":{"gitId":"powzx"},"content":"every command execution has a corresponding log in `data/logger.log`. The structure between each individual command and other components are ","lastModifiedDate":"2021-11-04"},{"lineNumber":100,"author":{"gitId":"powzx"},"content":"also shown in the diagram above. These structures will be further elaborated in the sections below.","lastModifiedDate":"2021-10-29"},{"lineNumber":101,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":102,"author":{"gitId":"powzx"},"content":"#### Module Component","lastModifiedDate":"2021-10-23"},{"lineNumber":103,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":104,"author":{"gitId":"giterator"},"content":"The class diagram below models the structure of the `module` component","lastModifiedDate":"2021-11-01"},{"lineNumber":105,"author":{"gitId":"giterator"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":106,"author":{"gitId":"giterator"},"content":"\u003cimg src\u003d\"assets/images/ModuleClassDiagram.png\"\u003e","lastModifiedDate":"2021-11-02"},{"lineNumber":107,"author":{"gitId":"giterator"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":108,"author":{"gitId":"giterator"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":109,"author":{"gitId":"giterator"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":110,"author":{"gitId":"giterator"},"content":"The `ModuleCommand` class is responsible for the execution of all `module` related commands. It inherits references ","lastModifiedDate":"2021-10-25"},{"lineNumber":111,"author":{"gitId":"giterator"},"content":"to instances of `ModuleList` and `ModuleDb` from `Command`  which are utilized for maintaining a list of","lastModifiedDate":"2021-10-25"},{"lineNumber":112,"author":{"gitId":"giterator"},"content":"`ModuleDetails` instances and operating a database of `moduleDetails`( `ModuleDb`) respectively. `ModuleCommand` ","lastModifiedDate":"2021-10-25"},{"lineNumber":113,"author":{"gitId":"giterator"},"content":"also interacts with `ModuleListStorage` to facilitate the persistent storage of the contents of `ModuleList`. ","lastModifiedDate":"2021-10-25"},{"lineNumber":114,"author":{"gitId":"giterator"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":115,"author":{"gitId":"powzx"},"content":"#### Timetable Component","lastModifiedDate":"2021-10-23"},{"lineNumber":116,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":117,"author":{"gitId":"powzx"},"content":"The class diagram below describes the structure within in the `timetable` component","lastModifiedDate":"2021-10-29"},{"lineNumber":118,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":119,"author":{"gitId":"saravanamani1999"},"content":"![Timetable Class Diagram](assets/images/TimetableClassDiagram.png)","lastModifiedDate":"2021-10-25"},{"lineNumber":120,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":121,"author":{"gitId":"saravanamani1999"},"content":"The `Timetable` class is the main part in this component that is responsible for all `timetable` related command ","lastModifiedDate":"2021-10-25"},{"lineNumber":122,"author":{"gitId":"saravanamani1999"},"content":"executions. `Timetable` maintains a list of all `Lesson`s in `lessonStorage` and an association with","lastModifiedDate":"2021-10-25"},{"lineNumber":123,"author":{"gitId":"saravanamani1999"},"content":"`TimetableStorage` for storage of `Lesson` data in `data/timetable.txt`.`Lesson` has 3 types `Tutorial`, ","lastModifiedDate":"2021-10-25"},{"lineNumber":124,"author":{"gitId":"saravanamani1999"},"content":"`Lecture` and `Lab` which are specified by its lesson type, `TUT`, `LEC` and `LAB` respectively. ","lastModifiedDate":"2021-10-25"},{"lineNumber":125,"author":{"gitId":"saravanamani1999"},"content":"`AddSubCommand`, `DeleteSubCommand`, `UpdateSubCommand` and `ViewSubCommand` are called to execute ","lastModifiedDate":"2021-10-25"},{"lineNumber":126,"author":{"gitId":"saravanamani1999"},"content":"`timetable add`, `timetable delete`, `timetable update` and `timetable view` commands respectively.","lastModifiedDate":"2021-10-25"},{"lineNumber":127,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":128,"author":{"gitId":"powzx"},"content":"#### Planner Component","lastModifiedDate":"2021-10-23"},{"lineNumber":129,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":130,"author":{"gitId":"powzx"},"content":"The class diagram below describes the structure within the `planner` component.","lastModifiedDate":"2021-10-29"},{"lineNumber":131,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":132,"author":{"gitId":"powzx"},"content":"![Planner Class Diagram](assets/images/PlannerClassDiagram.png)","lastModifiedDate":"2021-10-23"},{"lineNumber":133,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":134,"author":{"gitId":"powzx"},"content":"The `Planner` class is the main part in this component that is responsible for all `planner` related command","lastModifiedDate":"2021-10-23"},{"lineNumber":135,"author":{"gitId":"powzx"},"content":"executions. The `Planner` maintains a list of all existing `Event`s, and an association with `PlannerStorage` for","lastModifiedDate":"2021-10-23"},{"lineNumber":136,"author":{"gitId":"powzx"},"content":"storage of `Event`s data in `data/planner.txt`. To communicate with other components such as `timetable` and `module`,","lastModifiedDate":"2021-10-23"},{"lineNumber":137,"author":{"gitId":"powzx"},"content":"the `ModuleSyncer` and `ExamsGetter` are the main bridges to fetch `Lesson`s and exams data for `Planner`.","lastModifiedDate":"2021-10-23"},{"lineNumber":138,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":139,"author":{"gitId":"powzx"},"content":"#### CAP Calculator Component","lastModifiedDate":"2021-10-23"},{"lineNumber":140,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":141,"author":{"gitId":"powzx"},"content":"The class diagram below describes the structure between `CapCalculator` and its subclasses.","lastModifiedDate":"2021-10-29"},{"lineNumber":142,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":143,"author":{"gitId":"nonrnp"},"content":"![CapCalculator Class Diagram](assets/images/CapCalculatorClassDiagram.png)","lastModifiedDate":"2021-10-26"},{"lineNumber":144,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":145,"author":{"gitId":"nonrnp"},"content":"The `CapCalculator` is an abstract representation of calculator which is inherited by every calculator classes.","lastModifiedDate":"2021-10-26"},{"lineNumber":146,"author":{"gitId":"nonrnp"},"content":"It contains the list of modules whose grade are being retrieved to calculate the overall cap within ","lastModifiedDate":"2021-10-26"},{"lineNumber":147,"author":{"gitId":"nonrnp"},"content":"`CalculatorModuleList`, which is a subclass of `ModuleList` designed specifically for `CapCalculator`. Its subclasses","lastModifiedDate":"2021-10-26"},{"lineNumber":148,"author":{"gitId":"nonrnp"},"content":"can be divided into two groups based on the module format, namely `CapCalculatorByMc` which calculates cap of modules","lastModifiedDate":"2021-10-26"},{"lineNumber":149,"author":{"gitId":"nonrnp"},"content":"containing only the modular credit and the corresponding grade, and `CapCalculatorByCode` and its subclasses which can","lastModifiedDate":"2021-10-26"},{"lineNumber":150,"author":{"gitId":"nonrnp"},"content":"retrieve modular credit of each module from `moduleDb` for the calculation.","lastModifiedDate":"2021-10-26"},{"lineNumber":151,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":152,"author":{"gitId":"powzx"},"content":"#### Bus Routes Finder Component","lastModifiedDate":"2021-10-23"},{"lineNumber":153,"author":{"gitId":"shyamgj1900"},"content":"The class diagram below describes the interaction between `Route` and its subclasses.","lastModifiedDate":"2021-10-30"},{"lineNumber":154,"author":{"gitId":"shyamgj1900"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":155,"author":{"gitId":"shyamgj1900"},"content":"![BusRoute Class Diagram](assets/images/BusRouteClassDiagram.png)","lastModifiedDate":"2021-10-30"},{"lineNumber":156,"author":{"gitId":"shyamgj1900"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":157,"author":{"gitId":"shyamgj1900"},"content":"The `Route` class is a higher level representation of the process to find routes. The `DirectRoute` and `IndirectRoute`","lastModifiedDate":"2021-10-30"},{"lineNumber":158,"author":{"gitId":"shyamgj1900"},"content":"classes inherit from the `Route` class. The `BusRouteCommand` instantiates `DirectRoute` and `IndirectRoute` objects.","lastModifiedDate":"2021-10-30"},{"lineNumber":159,"author":{"gitId":"shyamgj1900"},"content":"The `DirectRoute` class is responsible to check if there are any direct or direct alternate routes between the 2 user ","lastModifiedDate":"2021-10-30"},{"lineNumber":160,"author":{"gitId":"shyamgj1900"},"content":"given bus stops. The `IndirectRoute` class is responsible to find if there are any indirect routes between the 2 user ","lastModifiedDate":"2021-10-30"},{"lineNumber":161,"author":{"gitId":"shyamgj1900"},"content":"given bus stops, i.e a route wherein a user will need to switch buses at an intermediate bus stop. The process of checking","lastModifiedDate":"2021-10-30"},{"lineNumber":162,"author":{"gitId":"shyamgj1900"},"content":"whether 2 points on a graph are connected is facilitated by the `Graph` class and achieves this process by using BFS. A","lastModifiedDate":"2021-10-30"},{"lineNumber":163,"author":{"gitId":"shyamgj1900"},"content":"`Location` class object is instantiated by the `BusRouteCommand` class if the user wants to view the list of all bus stops","lastModifiedDate":"2021-10-30"},{"lineNumber":164,"author":{"gitId":"shyamgj1900"},"content":"in the network.","lastModifiedDate":"2021-10-30"},{"lineNumber":165,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":166,"author":{"gitId":"powzx"},"content":"### Command Execution","lastModifiedDate":"2021-10-25"},{"lineNumber":167,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":168,"author":{"gitId":"powzx"},"content":"The sequence diagram below shows a high-level overview of the interaction between entities during the execution","lastModifiedDate":"2021-10-21"},{"lineNumber":169,"author":{"gitId":"powzx"},"content":"of a user input _(XYZCommand represents any class that inherits from Command)_.","lastModifiedDate":"2021-10-21"},{"lineNumber":170,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":171,"author":{"gitId":"powzx"},"content":"![Overview Sequence Diagram](assets/images/OverviewSequenceDiagram.png)","lastModifiedDate":"2021-10-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":173,"author":{"gitId":"saravanamani1999"},"content":"## Implementation","lastModifiedDate":"2021-10-19"},{"lineNumber":174,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":175,"author":{"gitId":"powzx"},"content":"This section describes some noteworthy details on how some features are implemented along with more detailed","lastModifiedDate":"2021-10-22"},{"lineNumber":176,"author":{"gitId":"powzx"},"content":"representations of the interactions between components.","lastModifiedDate":"2021-10-22"},{"lineNumber":177,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":178,"author":{"gitId":"saravanamani1999"},"content":"### Add to timetable feature","lastModifiedDate":"2021-10-20"},{"lineNumber":179,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":180,"author":{"gitId":"saravanamani1999"},"content":"The timetable add mechanism is facilitated by `Timetable` where the format of the input is as such: ","lastModifiedDate":"2021-10-20"},{"lineNumber":181,"author":{"gitId":"saravanamani1999"},"content":"`timetable add MODULE_CODE/LESSON_TYPE/DAY/START_TIME/END_TIME`. The lessons added to `Timetable` ","lastModifiedDate":"2021-10-20"},{"lineNumber":182,"author":{"gitId":"saravanamani1999"},"content":"via `inputLesson(String[] lessonDetails)` is stored in the `lessonStorage` within the program via ","lastModifiedDate":"2021-10-22"},{"lineNumber":183,"author":{"gitId":"saravanamani1999"},"content":"the method `addLesson(Lesson lesson)` and locally in `TimetableStorage` which saves it ","lastModifiedDate":"2021-10-19"},{"lineNumber":184,"author":{"gitId":"saravanamani1999"},"content":"to `timetable.txt` file to constantly save the lessons\u0027 data. It implements the following operations:","lastModifiedDate":"2021-10-19"},{"lineNumber":185,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":186,"author":{"gitId":"saravanamani1999"},"content":"* `Timetable#inputLesson(String[] lessonDetail)` containing `Timetable#addLesson(Lesson lesson)` - Adds the lesson ","lastModifiedDate":"2021-10-22"},{"lineNumber":187,"author":{"gitId":"saravanamani1999"},"content":"to `timetableStorage` based on the type of lesson it is, which is included in the lessonDetail.","lastModifiedDate":"2021-10-19"},{"lineNumber":188,"author":{"gitId":"saravanamani1999"},"content":"* `TimetableStorage#writeToFile()` - Saves the lesson details to `timetable.txt` locally.","lastModifiedDate":"2021-10-25"},{"lineNumber":189,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":190,"author":{"gitId":"saravanamani1999"},"content":"#### ❕ Notes about the methods:","lastModifiedDate":"2021-10-20"},{"lineNumber":191,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":192,"author":{"gitId":"saravanamani1999"},"content":"* `String[] lessonDetails` consists of `MODULE_CODE`, `LESSON_TYPE` (`TUT` - tutorial, `LEC` - lecture or `LAB` - lab), ","lastModifiedDate":"2021-10-25"},{"lineNumber":193,"author":{"gitId":"saravanamani1999"},"content":"`DAY`, `START_TIME`, `END_TIME`. ","lastModifiedDate":"2021-10-25"},{"lineNumber":194,"author":{"gitId":"saravanamani1999"},"content":"* Lesson class is inherited by `Tutorial`, `Lecture` and `Lab` to add lessons based on the `LESSON_TYPE` as shown ","lastModifiedDate":"2021-10-25"},{"lineNumber":195,"author":{"gitId":"saravanamani1999"},"content":"in the example below.","lastModifiedDate":"2021-10-19"},{"lineNumber":196,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":197,"author":{"gitId":"saravanamani1999"},"content":"Given below are the examples of the usage of `timetable add` of lessons to the timetable.","lastModifiedDate":"2021-10-19"},{"lineNumber":198,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":199,"author":{"gitId":"saravanamani1999"},"content":"Example 1: Adding a tutorial to the `lessonStorage` ( lesson of type `TUT` )","lastModifiedDate":"2021-10-19"},{"lineNumber":200,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":201,"author":{"gitId":"saravanamani1999"},"content":"![Example 1](assets/images/timetableAdd1.png)","lastModifiedDate":"2021-10-19"},{"lineNumber":202,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":203,"author":{"gitId":"saravanamani1999"},"content":"Example 2: Adding a lecture to the `lessonStorage` ( lesson of type `LEC` )","lastModifiedDate":"2021-10-19"},{"lineNumber":204,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":205,"author":{"gitId":"saravanamani1999"},"content":"![Example 2](assets/images/timetableAdd2.png)","lastModifiedDate":"2021-10-19"},{"lineNumber":206,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":207,"author":{"gitId":"saravanamani1999"},"content":"Example 3: Adding a lab to the `lessonStorage` ( lesson of type `LAB` )","lastModifiedDate":"2021-10-19"},{"lineNumber":208,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":209,"author":{"gitId":"saravanamani1999"},"content":"![Example 3](assets/images/timetableAdd3.png)","lastModifiedDate":"2021-10-19"},{"lineNumber":210,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":211,"author":{"gitId":"saravanamani1999"},"content":"The following sequence diagrams shows the `timetable add` mechanism:","lastModifiedDate":"2021-10-23"},{"lineNumber":212,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":213,"author":{"gitId":"saravanamani1999"},"content":"❕Note: The sequence diagram for the add mechanism has been split into 2 parts for better readability:","lastModifiedDate":"2021-10-23"},{"lineNumber":214,"author":{"gitId":"saravanamani1999"},"content":"* The following diagram shows the sequence of parsing the user input and executing `TimetableCommand#addLesson()`","lastModifiedDate":"2021-10-23"},{"lineNumber":215,"author":{"gitId":"saravanamani1999"},"content":"for the `timetbale add` command","lastModifiedDate":"2021-10-23"},{"lineNumber":216,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":217,"author":{"gitId":"saravanamani1999"},"content":"![Sequence Diagram1](assets/images/TimetableAddSequenceDiagram1.png)","lastModifiedDate":"2021-10-23"},{"lineNumber":218,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":219,"author":{"gitId":"saravanamani1999"},"content":"* The following diagram shows the sequence of adding the specified lesson from the user input to the ","lastModifiedDate":"2021-10-23"},{"lineNumber":220,"author":{"gitId":"saravanamani1999"},"content":"timetable via `Timetable#executeAdd(lessonDetails)` which is then written to the `timetable.txt` storage ","lastModifiedDate":"2021-10-23"},{"lineNumber":221,"author":{"gitId":"saravanamani1999"},"content":"file via `TimetableStorage#writeToFile()`","lastModifiedDate":"2021-10-23"},{"lineNumber":222,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":223,"author":{"gitId":"saravanamani1999"},"content":"![Sequence Diagram2](assets/images/TimetableAddSequenceDiagram2.png)","lastModifiedDate":"2021-10-23"},{"lineNumber":224,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":225,"author":{"gitId":"saravanamani1999"},"content":"* There are checks done before adding to the timetable and one of them is the ","lastModifiedDate":"2021-10-25"},{"lineNumber":226,"author":{"gitId":"saravanamani1999"},"content":"`AddSubCommand#isLessonInModuleList(moduleList, moduleCode)`. This integrates `Timetable` and `ModuleList` which ","lastModifiedDate":"2021-10-23"},{"lineNumber":227,"author":{"gitId":"saravanamani1999"},"content":"ensures a module\u0027s lessons being added to the timetable has its `moduleCode` first added to the `ModuleList` ","lastModifiedDate":"2021-10-23"},{"lineNumber":228,"author":{"gitId":"saravanamani1999"},"content":"else it will throw an exception to add the module.","lastModifiedDate":"2021-10-23"},{"lineNumber":229,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":230,"author":{"gitId":"saravanamani1999"},"content":"```","lastModifiedDate":"2021-10-25"},{"lineNumber":231,"author":{"gitId":"saravanamani1999"},"content":"    private boolean isLessonInModuleList(ModuleList moduleList, String moduleCode) {","lastModifiedDate":"2021-10-25"},{"lineNumber":232,"author":{"gitId":"saravanamani1999"},"content":"        for (ModuleDetails module : moduleList.myModules) {","lastModifiedDate":"2021-10-25"},{"lineNumber":233,"author":{"gitId":"saravanamani1999"},"content":"            if (Objects.equals(module.moduleCode, moduleCode)) {","lastModifiedDate":"2021-10-25"},{"lineNumber":234,"author":{"gitId":"saravanamani1999"},"content":"                return true;","lastModifiedDate":"2021-10-25"},{"lineNumber":235,"author":{"gitId":"saravanamani1999"},"content":"            }","lastModifiedDate":"2021-10-25"},{"lineNumber":236,"author":{"gitId":"saravanamani1999"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":237,"author":{"gitId":"saravanamani1999"},"content":"        return false;","lastModifiedDate":"2021-10-25"},{"lineNumber":238,"author":{"gitId":"saravanamani1999"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":239,"author":{"gitId":"saravanamani1999"},"content":"```","lastModifiedDate":"2021-10-25"},{"lineNumber":240,"author":{"gitId":"saravanamani1999"},"content":"* Another check done is to check if the slot between `START_TIME` and `END_TIME` is not occupied by another lesson,","lastModifiedDate":"2021-10-23"},{"lineNumber":241,"author":{"gitId":"saravanamani1999"},"content":"likewise it will throw an exception.","lastModifiedDate":"2021-10-23"},{"lineNumber":242,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":243,"author":{"gitId":"saravanamani1999"},"content":"```","lastModifiedDate":"2021-10-25"},{"lineNumber":244,"author":{"gitId":"saravanamani1999"},"content":"    private boolean isPeriodFree(int startIndex, int endIndex, int dayIndex) throws KolinuxException {","lastModifiedDate":"2021-10-25"},{"lineNumber":245,"author":{"gitId":"saravanamani1999"},"content":"        try {","lastModifiedDate":"2021-10-25"},{"lineNumber":246,"author":{"gitId":"saravanamani1999"},"content":"            for (int i \u003d startIndex; i \u003c endIndex; i++) {","lastModifiedDate":"2021-10-25"},{"lineNumber":247,"author":{"gitId":"saravanamani1999"},"content":"                if (timetableData[i][dayIndex] !\u003d null) {","lastModifiedDate":"2021-10-25"},{"lineNumber":248,"author":{"gitId":"saravanamani1999"},"content":"                    return false;","lastModifiedDate":"2021-10-25"},{"lineNumber":249,"author":{"gitId":"saravanamani1999"},"content":"                }","lastModifiedDate":"2021-10-25"},{"lineNumber":250,"author":{"gitId":"saravanamani1999"},"content":"            }","lastModifiedDate":"2021-10-25"},{"lineNumber":251,"author":{"gitId":"saravanamani1999"},"content":"            return true;","lastModifiedDate":"2021-10-25"},{"lineNumber":252,"author":{"gitId":"saravanamani1999"},"content":"        } catch (ArrayIndexOutOfBoundsException exception) {","lastModifiedDate":"2021-10-25"},{"lineNumber":253,"author":{"gitId":"saravanamani1999"},"content":"            throw new KolinuxException(INVALID_HOURS_INPUT);","lastModifiedDate":"2021-10-25"},{"lineNumber":254,"author":{"gitId":"saravanamani1999"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":255,"author":{"gitId":"saravanamani1999"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":256,"author":{"gitId":"saravanamani1999"},"content":"```","lastModifiedDate":"2021-10-25"},{"lineNumber":257,"author":{"gitId":"saravanamani1999"},"content":"* The following sequence diagram illustrates both these checks.","lastModifiedDate":"2021-10-25"},{"lineNumber":258,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":259,"author":{"gitId":"saravanamani1999"},"content":"![Sequence Diagram2](assets/images/TimetableAddSequenceDiagram3.png)","lastModifiedDate":"2021-10-23"},{"lineNumber":260,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":261,"author":{"gitId":"powzx"},"content":"### Add to Planner feature","lastModifiedDate":"2021-10-20"},{"lineNumber":262,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":263,"author":{"gitId":"powzx"},"content":"The Add to Planner mechanism is mainly facilitated by `PlannerCommand`, `Planner`, and `PlannerPromptHandler`. After entering the appropriate","lastModifiedDate":"2021-11-04"},{"lineNumber":264,"author":{"gitId":"powzx"},"content":"input to add an `Event` to the `Planner`, `PlannerCommand` is constructed with `subCommand` `add` and the","lastModifiedDate":"2021-11-03"},{"lineNumber":265,"author":{"gitId":"powzx"},"content":"relevant `parsedArguments`. The constructor of `PlannerCommand` involves creation of `Planner` and `PlannerStorage`","lastModifiedDate":"2021-10-23"},{"lineNumber":266,"author":{"gitId":"powzx"},"content":"to initialize the adding and writing to file operations.","lastModifiedDate":"2021-10-23"},{"lineNumber":267,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":268,"author":{"gitId":"powzx"},"content":"Before the `Event` is added, it is first checked for any time conflicts with existing events/lessons/exams. `Event`s","lastModifiedDate":"2021-10-23"},{"lineNumber":269,"author":{"gitId":"powzx"},"content":"are only added if there are no time conflicts or the user allowed the addition of the conflicted `Event` through a","lastModifiedDate":"2021-10-23"},{"lineNumber":270,"author":{"gitId":"powzx"},"content":"prompt to get a confirmation from the user. `Event`s added to the `Planner` are stored in a list","lastModifiedDate":"2021-11-04"},{"lineNumber":271,"author":{"gitId":"powzx"},"content":"`scheduleOfAllDates` which contains all added `Event`s by the user. The data in this list is also written to the","lastModifiedDate":"2021-10-23"},{"lineNumber":272,"author":{"gitId":"powzx"},"content":"internal storage `data/planner.txt` through `PlannerStorage` which saves the user data locally.","lastModifiedDate":"2021-10-23"},{"lineNumber":273,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":274,"author":{"gitId":"powzx"},"content":"This mechanism is implemented by the following methods:","lastModifiedDate":"2021-10-23"},{"lineNumber":275,"author":{"gitId":"powzx"},"content":"* `Planner#addEvent(Event event, boolean allowConflict)`: Attempts to add `event` to `scheduleOfAllDates` by invoking","lastModifiedDate":"2021-10-23"},{"lineNumber":276,"author":{"gitId":"powzx"},"content":"the following methods:","lastModifiedDate":"2021-10-23"},{"lineNumber":277,"author":{"gitId":"powzx"},"content":"    * `Planner#hasTimeConflict(Event event)`: Checks for any time conflicts between `event` and any existing `Event`s","lastModifiedDate":"2021-10-23"},{"lineNumber":278,"author":{"gitId":"powzx"},"content":"      in `scheduleOfAllDates`, lessons, and exams.","lastModifiedDate":"2021-10-20"},{"lineNumber":279,"author":{"gitId":"powzx"},"content":"    * `PlannerStorage#writeFile(String data)`: Appends the data of the newly added `Event` to `data/planner.txt` for ","lastModifiedDate":"2021-10-23"},{"lineNumber":280,"author":{"gitId":"powzx"},"content":"      local storage.","lastModifiedDate":"2021-10-23"},{"lineNumber":281,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":282,"author":{"gitId":"powzx"},"content":"* `PlannerPromptHandler#getReplyFromPrompt()`: Gets user confirmation to allow or cancel the add operation","lastModifiedDate":"2021-11-04"},{"lineNumber":283,"author":{"gitId":"powzx"},"content":"in case of a time conflict.","lastModifiedDate":"2021-10-23"},{"lineNumber":284,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":285,"author":{"gitId":"powzx"},"content":"The figures below represent the sequence diagrams of the Add to Planner mechanism:","lastModifiedDate":"2021-10-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":287,"author":{"gitId":"powzx"},"content":"![Planner Sequence Diagram 1](assets/images/PlannerAddSequenceDiagram1.png)","lastModifiedDate":"2021-10-22"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":289,"author":{"gitId":"powzx"},"content":"![Planner_Sequence_Diagram_2](assets/images/PlannerAddSequenceDiagram2.png)","lastModifiedDate":"2021-10-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":291,"author":{"gitId":"powzx"},"content":"The `Planner#hasTimeConflict(Event event)` method is integrated with `Timetable` and `ModuleList` so that `Lesson`s and","lastModifiedDate":"2021-10-23"},{"lineNumber":292,"author":{"gitId":"powzx"},"content":"exams may be fetched in addition to `scheduleOfAllDates` containing the `Event`s to check time conflicts against. The","lastModifiedDate":"2021-10-23"},{"lineNumber":293,"author":{"gitId":"powzx"},"content":"integration in the method is mainly done via the `Planner#filterPlanner(String date)` call. The code snippet below","lastModifiedDate":"2021-10-21"},{"lineNumber":294,"author":{"gitId":"powzx"},"content":"shows how `Planner#hasTimeConflict(Event event)` invokes `Planner#filterPlanner(String date)`. The return value","lastModifiedDate":"2021-10-21"},{"lineNumber":295,"author":{"gitId":"powzx"},"content":"`filteredPlanner` will contain all the existing events/lessons/exams occurring on the date of the `event` that ","lastModifiedDate":"2021-10-21"},{"lineNumber":296,"author":{"gitId":"powzx"},"content":"is to be added.","lastModifiedDate":"2021-10-21"},{"lineNumber":297,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":298,"author":{"gitId":"powzx"},"content":"```","lastModifiedDate":"2021-10-21"},{"lineNumber":299,"author":{"gitId":"powzx"},"content":"    private boolean hasTimeConflict(Event eventToBeAdded) {","lastModifiedDate":"2021-10-21"},{"lineNumber":300,"author":{"gitId":"powzx"},"content":"        ArrayList\u003cEvent\u003e filteredPlanner \u003d filterPlanner(eventToBeAdded.getDate());","lastModifiedDate":"2021-10-21"},{"lineNumber":301,"author":{"gitId":"powzx"},"content":"        String startTime \u003d eventToBeAdded.getStartTime();","lastModifiedDate":"2021-10-21"},{"lineNumber":302,"author":{"gitId":"powzx"},"content":"        String endTime \u003d eventToBeAdded.getEndTime();","lastModifiedDate":"2021-10-21"},{"lineNumber":303,"author":{"gitId":"powzx"},"content":"        for (Event event : filteredPlanner) {","lastModifiedDate":"2021-10-21"},{"lineNumber":304,"author":{"gitId":"powzx"},"content":"            if (!(startTime.compareTo(event.getEndTime()) \u003e\u003d 0 || endTime.compareTo(event.getStartTime()) \u003c\u003d 0)) {","lastModifiedDate":"2021-10-21"},{"lineNumber":305,"author":{"gitId":"powzx"},"content":"                return true;","lastModifiedDate":"2021-10-21"},{"lineNumber":306,"author":{"gitId":"powzx"},"content":"            }","lastModifiedDate":"2021-10-21"},{"lineNumber":307,"author":{"gitId":"powzx"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":308,"author":{"gitId":"powzx"},"content":"        return false;","lastModifiedDate":"2021-10-21"},{"lineNumber":309,"author":{"gitId":"powzx"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":310,"author":{"gitId":"powzx"},"content":"```","lastModifiedDate":"2021-10-21"},{"lineNumber":311,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":312,"author":{"gitId":"powzx"},"content":"The main working mechanism of `Planner#filterPlanner(String date)` is as follows:","lastModifiedDate":"2021-10-21"},{"lineNumber":313,"author":{"gitId":"powzx"},"content":"1. Construct a `ModuleSyncer` object with the `date` specified. The object will populate a list of `Event`s that are","lastModifiedDate":"2021-10-23"},{"lineNumber":314,"author":{"gitId":"powzx"},"content":"constructed using the information of the lessons and exams occurring on `date` using the data fetched from `Timetable` ","lastModifiedDate":"2021-10-23"},{"lineNumber":315,"author":{"gitId":"powzx"},"content":"and `ModuleList`. Note that an `ExamsGetter` is used by `ModuleSyncer` to interact with `ModuleList` to get the exam ","lastModifiedDate":"2021-10-23"},{"lineNumber":316,"author":{"gitId":"powzx"},"content":"dates and times of the modules stored by `ModuleList`.","lastModifiedDate":"2021-10-23"},{"lineNumber":317,"author":{"gitId":"powzx"},"content":"2. Get a list of all `Event`s stored in `scheduleOfAllDates` that occur on `date`.","lastModifiedDate":"2021-11-03"},{"lineNumber":318,"author":{"gitId":"powzx"},"content":"3. Merge both lists.","lastModifiedDate":"2021-11-03"},{"lineNumber":319,"author":{"gitId":"powzx"},"content":"4. Sort the list by their start times, and return the list.","lastModifiedDate":"2021-11-03"},{"lineNumber":320,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":321,"author":{"gitId":"powzx"},"content":"The list returned will then be used to check for any time conflicts with `eventToBeAdded`.","lastModifiedDate":"2021-10-23"},{"lineNumber":322,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":323,"author":{"gitId":"powzx"},"content":"The object diagrams below show the object structure in the memory immediately before and after `Planner#filterPlanner(String date)` is invoked to ","lastModifiedDate":"2021-11-04"},{"lineNumber":324,"author":{"gitId":"powzx"},"content":"fetch `Lesson` and `ModuleDetails` from `Timetable` and `ModuleList` respectively. Assume there is only one `Lesson`, ","lastModifiedDate":"2021-11-04"},{"lineNumber":325,"author":{"gitId":"powzx"},"content":"one `ModuleDetails`, and one `Event` stored in `Timetable`, `ModuleList`, and `Planner` respectively, and they all occur on the same `date`.","lastModifiedDate":"2021-11-04"},{"lineNumber":326,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":327,"author":{"gitId":"powzx"},"content":"![Planner Before Object Diagram](assets/images/PlannerObjectDiagramBefore.png)","lastModifiedDate":"2021-10-25"},{"lineNumber":328,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":329,"author":{"gitId":"powzx"},"content":"![Planner After Object Diagram](assets/images/PlannerObjectDiagramAfter.png)","lastModifiedDate":"2021-10-25"},{"lineNumber":330,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":331,"author":{"gitId":"giterator"},"content":"### Add/delete a module by module code feature","lastModifiedDate":"2021-11-02"},{"lineNumber":332,"author":{"gitId":"giterator"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":333,"author":{"gitId":"giterator"},"content":"The `ModuleCommand` class extends the `Command` class and handles all module related commands. In the context of storage and deletion, operations are performed of a list of `ModuleDetails` encapsulated in an instance of  `ModuleList` (`moduleList`). The `ModuleList` class implements the following methods to achieve this:","lastModifiedDate":"2021-10-20"},{"lineNumber":334,"author":{"gitId":"giterator"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":335,"author":{"gitId":"giterator"},"content":"- `ModuleList#addModuleByCode(String code, ModuleDb moduleDb)`","lastModifiedDate":"2021-11-02"},{"lineNumber":336,"author":{"gitId":"giterator"},"content":"- `ModuleList#deleteModuleByCode(String code)`","lastModifiedDate":"2021-10-20"},{"lineNumber":337,"author":{"gitId":"giterator"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":338,"author":{"gitId":"giterator"},"content":"❕ Notes about the methods:","lastModifiedDate":"2021-10-20"},{"lineNumber":339,"author":{"gitId":"giterator"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":340,"author":{"gitId":"giterator"},"content":"`moduleDb` is an instance of `ModuleDb` that contains a hashmap, relating each module\u0027s code (key) to its respective `ModuleDetails` (value). For storing a module, a `ModuleDetails` instance corresponding to a module code is appended to list in `moduleList`","lastModifiedDate":"2021-10-21"},{"lineNumber":341,"author":{"gitId":"giterator"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":342,"author":{"gitId":"giterator"},"content":"The input format for storage and deletion of modules is as follows:","lastModifiedDate":"2021-10-20"},{"lineNumber":343,"author":{"gitId":"giterator"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":344,"author":{"gitId":"giterator"},"content":"- Storage: `module add MODULE_CODE`","lastModifiedDate":"2021-11-02"},{"lineNumber":345,"author":{"gitId":"giterator"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":346,"author":{"gitId":"giterator"},"content":"- Deletion: `module delete MODULE_CODE`","lastModifiedDate":"2021-10-20"},{"lineNumber":347,"author":{"gitId":"giterator"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":348,"author":{"gitId":"giterator"},"content":"  ","lastModifiedDate":"2021-10-20"},{"lineNumber":349,"author":{"gitId":"giterator"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":350,"author":{"gitId":"giterator"},"content":"Given below are examples of the usage of `module add/delete` and how the add/delete system behaves at each step.","lastModifiedDate":"2021-11-02"},{"lineNumber":351,"author":{"gitId":"giterator"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":352,"author":{"gitId":"giterator"},"content":"Step 1: The user launches the application. `myModules` , the list of `ModuleDetails` instances, is initialized with the latest saved modules from local storage. If no modules are stored, the resulting list will be empty.","lastModifiedDate":"2021-10-20"},{"lineNumber":353,"author":{"gitId":"giterator"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":354,"author":{"gitId":"giterator"},"content":"Example: `myModules` is initialized with single `ModuleDetails` instance corresponding to `CS2113T`","lastModifiedDate":"2021-10-20"},{"lineNumber":355,"author":{"gitId":"giterator"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":356,"author":{"gitId":"giterator"},"content":"\u003cimg src\u003d\"assets/images/moduleListInit.png\" width\u003d\"550\"\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":357,"author":{"gitId":"giterator"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":358,"author":{"gitId":"giterator"},"content":"Step 2: The user executes `module add CS2101` command to store information regarding `CS2101` in a new instance of `ModuleDetails` and append it to `myModules`. The `module add` prefix ensures `ModuleList#addModuleByCode(String code, ModuleDb moduleDb)` is called. ","lastModifiedDate":"2021-11-02"},{"lineNumber":359,"author":{"gitId":"giterator"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":360,"author":{"gitId":"giterator"},"content":"\u003cimg src\u003d\"assets/images/moduleStore.png\" width\u003d\"550\"\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":361,"author":{"gitId":"giterator"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":362,"author":{"gitId":"giterator"},"content":"Step 3: The user executes `module delete CS2101` command to delete the instance of `ModuleDetais` corresponding to `CS2101` from `myModules`. The `module delete` prefix ensures `ModuleList#deleteModuleByCode(String code)` is called. ","lastModifiedDate":"2021-10-21"},{"lineNumber":363,"author":{"gitId":"giterator"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":364,"author":{"gitId":"giterator"},"content":"\u003cimg src\u003d\"assets/images/moduleListInit.png\" width\u003d\"550\"\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":365,"author":{"gitId":"giterator"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":366,"author":{"gitId":"giterator"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":367,"author":{"gitId":"giterator"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":368,"author":{"gitId":"giterator"},"content":"The following sequence diagram models how the `module add` operation works:","lastModifiedDate":"2021-11-02"},{"lineNumber":369,"author":{"gitId":"giterator"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":370,"author":{"gitId":"giterator"},"content":"![Module Add Sequence Diagram](assets/images/ModuleAddSequenceDiagram.png)","lastModifiedDate":"2021-11-02"},{"lineNumber":371,"author":{"gitId":"giterator"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":372,"author":{"gitId":"giterator"},"content":"The `module delete` operation follows a similar sequence. Instead of calling the ModuleCommand#storeModule() method, the ModuleCommand#deleteModule() method is invoked. internally, this calls the `deleteModuleByCode` method from `moduleList`. All other steps remain the same. ","lastModifiedDate":"2021-10-21"},{"lineNumber":373,"author":{"gitId":"giterator"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":374,"author":{"gitId":"giterator"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":375,"author":{"gitId":"giterator"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":376,"author":{"gitId":"powzx"},"content":"### CAP Calculator by module code feature","lastModifiedDate":"2021-10-23"},{"lineNumber":377,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":378,"author":{"gitId":"nonrnp"},"content":"This cap calculation is managed using `CapCalculatorByCode`. It extends `CapCalculator` which stores","lastModifiedDate":"2021-10-20"},{"lineNumber":379,"author":{"gitId":"nonrnp"},"content":"the input modules and grades from user as a `CalculatorModuleList`, which is a subclass of `ModuleList` ","lastModifiedDate":"2021-10-25"},{"lineNumber":380,"author":{"gitId":"nonrnp"},"content":"dedicated for cap calculation. ","lastModifiedDate":"2021-10-25"},{"lineNumber":381,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":382,"author":{"gitId":"nonrnp"},"content":"When the command `cap code` is given by the user, the constructor is called to retrieve and store the modules ","lastModifiedDate":"2021-10-21"},{"lineNumber":383,"author":{"gitId":"nonrnp"},"content":"from the input. After the object construction is done, `CapCalculator#executeCapCalculator()` method is then ","lastModifiedDate":"2021-10-21"},{"lineNumber":384,"author":{"gitId":"nonrnp"},"content":"invoked for the cap calculation. ","lastModifiedDate":"2021-10-21"},{"lineNumber":385,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":386,"author":{"gitId":"nonrnp"},"content":"In order to achieve these functionalities, the following methods from `CapCalculatorByCode` are invoked.","lastModifiedDate":"2021-10-25"},{"lineNumber":387,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":388,"author":{"gitId":"nonrnp"},"content":"* `CapCalculatorByCode#getInputModules(String input)` — which retrieves the module codes and grades from String input","lastModifiedDate":"2021-10-21"},{"lineNumber":389,"author":{"gitId":"nonrnp"},"content":"and store them as `CalculatorModuleList`","lastModifiedDate":"2021-10-21"},{"lineNumber":390,"author":{"gitId":"nonrnp"},"content":"* `CapCalculatorByCode#getCap()` — which is the methods used to do all the cap calculation.","lastModifiedDate":"2021-10-21"},{"lineNumber":391,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":392,"author":{"gitId":"nonrnp"},"content":"In addition, the following methods implemented in `CapCalculator` are also invoked to ensure an error-free","lastModifiedDate":"2021-10-21"},{"lineNumber":393,"author":{"gitId":"nonrnp"},"content":"functionality.","lastModifiedDate":"2021-10-21"},{"lineNumber":394,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":395,"author":{"gitId":"nonrnp"},"content":"* `CapCalculator#executeCommand()` — which is an overridden method from `Command` is used to facilitate cap calculation","lastModifiedDate":"2021-10-21"},{"lineNumber":396,"author":{"gitId":"nonrnp"},"content":"and exception handling methods.","lastModifiedDate":"2021-10-21"},{"lineNumber":397,"author":{"gitId":"nonrnp"},"content":"* `CapCalculator#checkModulesNotEmpty()` — which ensures that the module list of the object is not empty.","lastModifiedDate":"2021-10-21"},{"lineNumber":398,"author":{"gitId":"nonrnp"},"content":"* `CapCalculator#checkInvalidModules()` — which checks if there are any invalid modules after the cap calculation.","lastModifiedDate":"2021-10-21"},{"lineNumber":399,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":400,"author":{"gitId":"nonrnp"},"content":"Below is the sequence diagrams showing important steps of how `cap code` operates:","lastModifiedDate":"2021-10-21"},{"lineNumber":401,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":402,"author":{"gitId":"nonrnp"},"content":"![Cap Code Sequence Diagram 1](assets/images/capCodeSeq1.png)","lastModifiedDate":"2021-10-21"},{"lineNumber":403,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":404,"author":{"gitId":"nonrnp"},"content":"![Cap Code Sequence Diagram 2](assets/images/capCodeSeq2.png)","lastModifiedDate":"2021-10-21"},{"lineNumber":405,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":406,"author":{"gitId":"nonrnp"},"content":"![Cap Code Sequence Diagram 3](assets/images/capCodeSeq3.png)","lastModifiedDate":"2021-10-24"},{"lineNumber":407,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":408,"author":{"gitId":"powzx"},"content":"### Bus routes feature","lastModifiedDate":"2021-10-23"},{"lineNumber":409,"author":{"gitId":"shyamgj1900"},"content":"The bus routes feature is facilitated by the `BusRouteCommand` class. The `BusRouteCommand` class extends the `Command` class. ","lastModifiedDate":"2021-10-20"},{"lineNumber":410,"author":{"gitId":"shyamgj1900"},"content":"When the user invokes and uses the bus routes feature the `BusRouteCommand` class instantiates either a `Location` class ","lastModifiedDate":"2021-10-30"},{"lineNumber":411,"author":{"gitId":"shyamgj1900"},"content":"object or `DirectRoute` and `IndirectRoute` class object depending on the user input. The operation is implemented in the ","lastModifiedDate":"2021-10-30"},{"lineNumber":412,"author":{"gitId":"shyamgj1900"},"content":"following way.","lastModifiedDate":"2021-10-30"},{"lineNumber":413,"author":{"gitId":"shyamgj1900"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":414,"author":{"gitId":"shyamgj1900"},"content":"* `Location#getBusStopList()` - Displays the list of all bus stops within the NUS internal bus service routes.","lastModifiedDate":"2021-10-30"},{"lineNumber":415,"author":{"gitId":"shyamgj1900"},"content":"* `DirectRoute#checkDirectRoutes(ArrayList\u003cString\u003e busNumbers)` - Checks whether there is a direct bus route between the 2 user given bus stops.","lastModifiedDate":"2021-10-30"},{"lineNumber":416,"author":{"gitId":"shyamgj1900"},"content":"* `IndirectRoute#checkIndirectRoutes(ArrayList\u003cString\u003e busOne, ArrayList\u003cString\u003e busTwo, ArrayList\u003cString\u003e midLoc)` - Checks whether there is an alternate route between the 2 user given bus stops which requires a single change of bus at an intermediate bus stop.","lastModifiedDate":"2021-10-30"},{"lineNumber":417,"author":{"gitId":"shyamgj1900"},"content":"* `DirectRoute#checkAlternateDirectRoutes(Arraylist\u003cString\u003e busNumbers)` - Checks whether there is a direct alternate route which involves finding a route from an opposite bus stop (if it exists) to the final location.","lastModifiedDate":"2021-10-30"},{"lineNumber":418,"author":{"gitId":"shyamgj1900"},"content":"* `Route#getBusStopNumber()` - Converts the user given bus stop name into the corresponding vertex number present in the graph route text file","lastModifiedDate":"2021-10-30"},{"lineNumber":419,"author":{"gitId":"shyamgj1900"},"content":"* `Graph#isConnected(int u, int v)` - Helps to check if 2 vertices in a graph are connected by a path using the BFS algorithm. All the methods which facilitates checking for routes call this method from the class `Graph`.","lastModifiedDate":"2021-10-30"},{"lineNumber":420,"author":{"gitId":"shyamgj1900"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":421,"author":{"gitId":"shyamgj1900"},"content":"❕ Some points about the graph. ","lastModifiedDate":"2021-10-30"},{"lineNumber":422,"author":{"gitId":"shyamgj1900"},"content":"* Each bus route has its own graph and the information is stored in text files and are loaded after the `Route` class constructor is called.","lastModifiedDate":"2021-10-30"},{"lineNumber":423,"author":{"gitId":"shyamgj1900"},"content":"* Graphs are modelled by taking each bus stop and assigning it a vertex number. ","lastModifiedDate":"2021-10-30"},{"lineNumber":424,"author":{"gitId":"shyamgj1900"},"content":"* A single bus stop may have different vertex numbers on different graphs.","lastModifiedDate":"2021-10-30"},{"lineNumber":425,"author":{"gitId":"shyamgj1900"},"content":"* Vertex numbers range from 0 to n - 1, where n is the total number of bus stops in the particular route","lastModifiedDate":"2021-10-30"},{"lineNumber":426,"author":{"gitId":"shyamgj1900"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":427,"author":{"gitId":"shyamgj1900"},"content":"The following sequence diagram gives an overview of the bus routes feature.","lastModifiedDate":"2021-10-30"},{"lineNumber":428,"author":{"gitId":"shyamgj1900"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":429,"author":{"gitId":"powzx"},"content":"![sequenceDiagram](assets/images/BusRouteSequenceDiagram.png)","lastModifiedDate":"2021-10-26"},{"lineNumber":430,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":431,"author":{"gitId":"-"},"content":"## Product scope","lastModifiedDate":"2020-05-24"},{"lineNumber":432,"author":{"gitId":"saravanamani1999"},"content":"### Target user profile:","lastModifiedDate":"2021-10-19"},{"lineNumber":433,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":434,"author":{"gitId":"saravanamani1999"},"content":"* needs help with adapting to university life by understanding the grading system, university bus routes etc.","lastModifiedDate":"2021-10-19"},{"lineNumber":435,"author":{"gitId":"saravanamani1999"},"content":"* has a need to manage their schedule along with the modules they are taking in the semester","lastModifiedDate":"2021-10-19"},{"lineNumber":436,"author":{"gitId":"saravanamani1999"},"content":"* can type fast","lastModifiedDate":"2021-10-19"},{"lineNumber":437,"author":{"gitId":"saravanamani1999"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2021-10-19"},{"lineNumber":438,"author":{"gitId":"saravanamani1999"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2021-10-19"},{"lineNumber":439,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":440,"author":{"gitId":"saravanamani1999"},"content":"### Value proposition:","lastModifiedDate":"2021-10-19"},{"lineNumber":441,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":442,"author":{"gitId":"powzx"},"content":"Users can manage all important university related tasks (Module Manager, Event Planner, Timetable, Bus Route Finder, ","lastModifiedDate":"2021-10-20"},{"lineNumber":443,"author":{"gitId":"powzx"},"content":"and CAP calculator) in a single integrated platform.","lastModifiedDate":"2021-10-20"},{"lineNumber":444,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":445,"author":{"gitId":"-"},"content":"## User Stories","lastModifiedDate":"2020-05-24"},{"lineNumber":446,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":447,"author":{"gitId":"saravanamani1999"},"content":"| Version \t| As a ...                     \t| I want to ...                                                                                                   \t| So that ...                                                \t|","lastModifiedDate":"2021-10-19"},{"lineNumber":448,"author":{"gitId":"saravanamani1999"},"content":"|---------\t|------------------------------\t|-----------------------------------------------------------------------------------------------------------------\t|------------------------------------------------------------\t|","lastModifiedDate":"2021-10-19"},{"lineNumber":449,"author":{"gitId":"saravanamani1999"},"content":"| v1.0    \t| As a NUS freshman            \t| be able to view all my modules in one local platform                                                            \t| I can save time                                            \t|","lastModifiedDate":"2021-10-19"},{"lineNumber":450,"author":{"gitId":"saravanamani1999"},"content":"| v1.0    \t| As a NUS freshman            \t| view the schedule that I created for myself everyday                                                            \t| I will not miss out on any important tasks for the day     \t|","lastModifiedDate":"2021-10-19"},{"lineNumber":451,"author":{"gitId":"saravanamani1999"},"content":"| v1.0    \t| As a NUS freshman            \t| add events to my schedule conveniently and ahead of time                                                        \t| I will not forget about them when the day comes            \t|","lastModifiedDate":"2021-10-19"},{"lineNumber":452,"author":{"gitId":"saravanamani1999"},"content":"| v1.0    \t| As a NUS freshman            \t| find which buses I could take to go from one location to another in campus                                      \t| I do not get lost within campus                            \t|","lastModifiedDate":"2021-10-19"},{"lineNumber":453,"author":{"gitId":"saravanamani1999"},"content":"| v1.0    \t| As a NUS student             \t| to view my timetable for the modules I\u0027m taking in the current semester                                         \t| I know what are my commitments of the week are like        \t|","lastModifiedDate":"2021-10-19"},{"lineNumber":454,"author":{"gitId":"saravanamani1999"},"content":"| v1.0    \t| As a NUS student             \t| add modules that I am interested in taking to my module list                                                    \t| I can start preparing for modreg ahead of time             \t|","lastModifiedDate":"2021-10-19"},{"lineNumber":455,"author":{"gitId":"saravanamani1999"},"content":"| v1.0    \t| As a NUS student             \t| remove modules that I am no longer interested in taking from my list                                            \t| I can focus on the modules which I\u0027m interested in         \t|","lastModifiedDate":"2021-10-19"},{"lineNumber":456,"author":{"gitId":"saravanamani1999"},"content":"| v2.0    \t| As a user                    \t| see my plan of the day in a chronological order                                                                 \t| I will not miss out any important events                   \t|","lastModifiedDate":"2021-10-19"},{"lineNumber":457,"author":{"gitId":"powzx"},"content":"| v2.0    \t| As an overwhelmed freshman   \t| be able to delete events from my Planner because of my unpredictable schedule                                   \t| I can remove cancelled events out of my list.                 |","lastModifiedDate":"2021-10-20"},{"lineNumber":458,"author":{"gitId":"saravanamani1999"},"content":"| v2.0    \t| As a user                    \t| see a list of my modules                                                                                        \t| I can plan my academic journey                             \t|","lastModifiedDate":"2021-10-19"},{"lineNumber":459,"author":{"gitId":"saravanamani1999"},"content":"| v2.0    \t| As a user                    \t| be able to add events even when it conflicts with another event                                                 \t| I can train my multitasking skills and be more productive. \t|","lastModifiedDate":"2021-10-19"},{"lineNumber":460,"author":{"gitId":"saravanamani1999"},"content":"| v2.0    \t| As a user                    \t| view my classes when using the Planner for more effective planning of events                                    \t| I can plan my schedule very precisely                      \t|","lastModifiedDate":"2021-10-19"},{"lineNumber":461,"author":{"gitId":"saravanamani1999"},"content":"| v2.0    \t| As a user                    \t| to modify my timetable                                                                                          \t| I can swap classes after several rounds of modreg          \t|","lastModifiedDate":"2021-10-19"},{"lineNumber":462,"author":{"gitId":"saravanamani1999"},"content":"| v2.0    \t| As a user                    \t| to add the lessons to the timetable based on the modules, in the module list, I\u0027m about to take in the semester \t| I only need to choose the day and start time of lesson     \t|","lastModifiedDate":"2021-10-19"},{"lineNumber":463,"author":{"gitId":"saravanamani1999"},"content":"| v2.0    \t| As a user                    \t| my module related data must be automatically saved                                                              \t| I can be access it at a later time                         \t|","lastModifiedDate":"2021-10-19"},{"lineNumber":464,"author":{"gitId":"saravanamani1999"},"content":"| v2.0    \t| As a user                    \t| continue my module planning where I left off                                                                    \t| I can refine my plan over time                             \t|","lastModifiedDate":"2021-10-19"},{"lineNumber":465,"author":{"gitId":"saravanamani1999"},"content":"| v2.0    \t| As a user                    \t| store grades for each of my module                                                                              \t| I can check my CAP                                         \t|","lastModifiedDate":"2021-10-19"},{"lineNumber":466,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":467,"author":{"gitId":"-"},"content":"## Non-Functional Requirements","lastModifiedDate":"2020-05-24"},{"lineNumber":468,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":469,"author":{"gitId":"saravanamani1999"},"content":"\u003col\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":470,"author":{"gitId":"saravanamani1999"},"content":"\u003cli\u003e Should work on any mainstream OS as long as it has Java 11 or above installed. \u003c/li\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":471,"author":{"gitId":"saravanamani1999"},"content":"\u003cli\u003e A user with above average typing speed for regular English text (i.e. not code, not system admin commands) ","lastModifiedDate":"2021-10-19"},{"lineNumber":472,"author":{"gitId":"saravanamani1999"},"content":"should be able to accomplish most of the tasks faster using commands than using the mouse.\u003c/li\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":473,"author":{"gitId":"powzx"},"content":"\u003cli\u003e Should be able to execute every command from the user within one second. \u003c/li\u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":474,"author":{"gitId":"saravanamani1999"},"content":"\u003c/ol\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":475,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":476,"author":{"gitId":"-"},"content":"## Glossary","lastModifiedDate":"2020-05-24"},{"lineNumber":477,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":478,"author":{"gitId":"saravanamani1999"},"content":"* *Mainstream OS*: Windows, Linux, Unix, OS-X","lastModifiedDate":"2021-10-19"},{"lineNumber":479,"author":{"gitId":"powzx"},"content":"* *Event*: Personal event added to the Planner by the user","lastModifiedDate":"2021-10-20"},{"lineNumber":480,"author":{"gitId":"powzx"},"content":"* *Lesson*: Class (Lecture, Tutorial, or Lab) for a particular module added to the Timetable by the user","lastModifiedDate":"2021-10-20"},{"lineNumber":481,"author":{"gitId":"powzx"},"content":"* *Exam*: Official final examination for a particular module","lastModifiedDate":"2021-10-20"},{"lineNumber":482,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":483,"author":{"gitId":"-"},"content":"## Instructions for manual testing","lastModifiedDate":"2020-05-24"},{"lineNumber":484,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":485,"author":{"gitId":"giterator"},"content":"### Storing a module by module code","lastModifiedDate":"2021-10-21"},{"lineNumber":486,"author":{"gitId":"giterator"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":487,"author":{"gitId":"giterator"},"content":"1. Storing a new module with a valid code","lastModifiedDate":"2021-10-21"},{"lineNumber":488,"author":{"gitId":"giterator"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":489,"author":{"gitId":"giterator"},"content":"   - Test case: `module add CS2113T`","lastModifiedDate":"2021-11-02"},{"lineNumber":490,"author":{"gitId":"giterator"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":491,"author":{"gitId":"giterator"},"content":"     Expected:  Initially the module list is empty. One module is added and a success message is printed to standard output.","lastModifiedDate":"2021-10-21"},{"lineNumber":492,"author":{"gitId":"giterator"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":493,"author":{"gitId":"giterator"},"content":"2. Storing a module with an invalid code (non-existent module)","lastModifiedDate":"2021-10-21"},{"lineNumber":494,"author":{"gitId":"giterator"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":495,"author":{"gitId":"giterator"},"content":"   - Test case: `module add invalid_module`","lastModifiedDate":"2021-11-02"},{"lineNumber":496,"author":{"gitId":"giterator"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":497,"author":{"gitId":"giterator"},"content":"     Expected:  There is no module in the database with a code `invalid_module`. An error message is shown, prompting the user to enter a valid module\u0027s code.","lastModifiedDate":"2021-10-21"},{"lineNumber":498,"author":{"gitId":"giterator"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":499,"author":{"gitId":"giterator"},"content":"3. Storing a pre-existing module in the list","lastModifiedDate":"2021-10-21"},{"lineNumber":500,"author":{"gitId":"giterator"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":501,"author":{"gitId":"giterator"},"content":"   - Test case: `module add CS2113T`","lastModifiedDate":"2021-11-02"},{"lineNumber":502,"author":{"gitId":"giterator"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":503,"author":{"gitId":"giterator"},"content":"     Expected:  The module list already contains `CS2113T`. Upon encountering a module with a duplicate code, an error message is shown, prompting the user to enter a new module\u0027s code.","lastModifiedDate":"2021-10-21"},{"lineNumber":504,"author":{"gitId":"giterator"},"content":"   ","lastModifiedDate":"2021-10-21"},{"lineNumber":505,"author":{"gitId":"giterator"},"content":"   ","lastModifiedDate":"2021-10-21"},{"lineNumber":506,"author":{"gitId":"giterator"},"content":"   ","lastModifiedDate":"2021-10-21"},{"lineNumber":507,"author":{"gitId":"giterator"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":508,"author":{"gitId":"powzx"},"content":"### Adding an event to Planner","lastModifiedDate":"2021-10-20"},{"lineNumber":509,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":510,"author":{"gitId":"powzx"},"content":"1. Adding an event with no time conflicts with any existing events, lessons, or exams to the Planner.","lastModifiedDate":"2021-10-20"},{"lineNumber":511,"author":{"gitId":"powzx"},"content":"   ","lastModifiedDate":"2021-10-20"},{"lineNumber":512,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":513,"author":{"gitId":"powzx"},"content":"   * Test case: `planner add watch movie/2021-10-20/1800/2100`","lastModifiedDate":"2021-10-20"},{"lineNumber":514,"author":{"gitId":"powzx"},"content":"   ","lastModifiedDate":"2021-10-20"},{"lineNumber":515,"author":{"gitId":"powzx"},"content":"      Expected: Event is added to the list. Success message printed as output.","lastModifiedDate":"2021-10-20"},{"lineNumber":516,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":517,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":518,"author":{"gitId":"powzx"},"content":"   * Test case: `planner add project meeting/20211020/0700/0800`","lastModifiedDate":"2021-10-20"},{"lineNumber":519,"author":{"gitId":"powzx"},"content":"     ","lastModifiedDate":"2021-10-20"},{"lineNumber":520,"author":{"gitId":"powzx"},"content":"      Expected: Event is not added to the list. Error message regarding date and time format printed as output.","lastModifiedDate":"2021-10-20"},{"lineNumber":521,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":522,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":523,"author":{"gitId":"powzx"},"content":"   * Test case: `planner add go back in time/2021-10-20/1400/1300`","lastModifiedDate":"2021-10-20"},{"lineNumber":524,"author":{"gitId":"powzx"},"content":"   ","lastModifiedDate":"2021-10-20"},{"lineNumber":525,"author":{"gitId":"powzx"},"content":"      Expected: Event is not added to the list. Error message regarding wrong time order printed as output.","lastModifiedDate":"2021-10-20"},{"lineNumber":526,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":527,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":528,"author":{"gitId":"powzx"},"content":"   * Other incorrect commands to try: `planner add something wrong//`, `planner add something amazing/ 3pm to 4pm`","lastModifiedDate":"2021-10-20"},{"lineNumber":529,"author":{"gitId":"powzx"},"content":"     ","lastModifiedDate":"2021-10-20"},{"lineNumber":530,"author":{"gitId":"powzx"},"content":"      Expected: Similar to previous cases where an error message regarding the format of command is printed as output.","lastModifiedDate":"2021-10-20"},{"lineNumber":531,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":532,"author":{"gitId":"powzx"},"content":"2. Adding an event with time conflicts with at least one existing event, lesson, or exam to the Planner.","lastModifiedDate":"2021-10-20"},{"lineNumber":533,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":534,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":535,"author":{"gitId":"powzx"},"content":"  * Prerequisites: Add the event by `planner add conflict test/2022-05-05/0800/1100`. Add the module","lastModifiedDate":"2021-10-20"},{"lineNumber":536,"author":{"gitId":"giterator"},"content":"    `module add cs2113t` and add a lesson `timetable add cs2113t/lec/thursday/1600/1800`.","lastModifiedDate":"2021-11-02"},{"lineNumber":537,"author":{"gitId":"powzx"},"content":"    _Do note 2021-05-05 is a Thursday._","lastModifiedDate":"2021-10-20"},{"lineNumber":538,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":539,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":540,"author":{"gitId":"powzx"},"content":"  * Test case: `planner list 2022-05-05`","lastModifiedDate":"2021-10-20"},{"lineNumber":541,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":542,"author":{"gitId":"powzx"},"content":"     Expected: The event `conflict test`, lesson `CS2113T LEC`, exam `CS2113T Exam` are displayed as output.","lastModifiedDate":"2021-10-20"},{"lineNumber":543,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":544,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":545,"author":{"gitId":"powzx"},"content":"  * Test case: `planner add love conflicts/2022-05-05/xxxx/yyyy` where `xxxx` and `yyyy` are start times and end","lastModifiedDate":"2021-10-20"},{"lineNumber":546,"author":{"gitId":"powzx"},"content":"    times respectively which overlaps with any of the events listed.","lastModifiedDate":"2021-10-20"},{"lineNumber":547,"author":{"gitId":"powzx"},"content":"   ","lastModifiedDate":"2021-10-20"},{"lineNumber":548,"author":{"gitId":"powzx"},"content":"       Expected: Event is not added to the list. A message will be shown seeking permission to proceed with the","lastModifiedDate":"2021-10-20"},{"lineNumber":549,"author":{"gitId":"powzx"},"content":"       operation. Entering `y` will lead to a success message, while entering \u0027n\u0027 will lead to the operation cancelled. Entering anything else will repeat the prompt.","lastModifiedDate":"2021-11-04"},{"lineNumber":550,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"giterator":81,"nonrnp":41,"powzx":206,"saravanamani1999":164,"shyamgj1900":32,"-":26}},{"path":"docs/README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"powzx"},"content":"![Kolinux Logo](assets/images/kolinux_logo.png)","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"powzx"},"content":"# Welcome to Kolinux!","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"powzx"},"content":"_Kolinux_ helps NUS freshmen to better integrate into university life by allowing them to","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"powzx"},"content":"**manage their work** and **learn more about NUS**, all in a **single integrated platform**. It is optimized for CLI","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"powzx"},"content":"users so that they can access the information that they require faster by typing in commands easily.","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":9,"author":{"gitId":"powzx"},"content":"Below are some useful links for you:","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"powzx"},"content":"* 📖 [User Guide](UserGuide.md)","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"powzx"},"content":"* 💡 [Developer Guide](DeveloperGuide.md)","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"powzx"},"content":"* 👨‍👦‍👦 [About Us](AboutUs.md)","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"powzx":9,"-":3}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"powzx"},"content":"# Welcome to Kolinux User Guide! 😃","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Introduction","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"powzx"},"content":"_Kolinux_ helps NUS freshmen to better integrate into university life by allowing them to ","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"powzx"},"content":"**manage their modules and schedule**, **familiarise with the NUS internal bus system**, and **receive grade","lastModifiedDate":"2021-10-28"},{"lineNumber":7,"author":{"gitId":"powzx"},"content":"suggestions based on their CAP** all in a **single integrated platform**. It is optimized for CLI ","lastModifiedDate":"2021-10-28"},{"lineNumber":8,"author":{"gitId":"powzx"},"content":"users so that they can access the information that they require faster by typing in commands easily.","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"powzx"},"content":"Hence, _Kolinux_ offers a wide range of features for freshmen. These features include a **module manager**","lastModifiedDate":"2021-10-28"},{"lineNumber":11,"author":{"gitId":"powzx"},"content":"for freshmen to manage their modules and view information about them, a **timetable** to view their classes, an ","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"powzx"},"content":"**event planner** for freshmen to organise their schedule for the day, a **CAP calculator**, and a **route finder** ","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"powzx"},"content":"for the NUS internal shuttle bus.","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"powzx"},"content":"This user guide brings you on a tour around _Kolinux_ and gives you step-by-step instructions on using its features.","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"powzx"},"content":"Alternatively, you may visit the [Table of Contents](#table-of-contents) for quick access to any of the features. You","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"powzx"},"content":"may also navigate to the [List of Commands](#2-list-of-commands) to view a summary of all our available commands and","lastModifiedDate":"2021-10-28"},{"lineNumber":18,"author":{"gitId":"powzx"},"content":"their usages.","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"powzx"},"content":"The following explains the use of different icons in this user guide:","lastModifiedDate":"2021-10-28"},{"lineNumber":21,"author":{"gitId":"saravanamani1999"},"content":"* ⚠️ - Notes about the feature.","lastModifiedDate":"2021-10-30"},{"lineNumber":22,"author":{"gitId":"powzx"},"content":"* ❗ - Important rules that you should follow when using the program.","lastModifiedDate":"2021-10-28"},{"lineNumber":23,"author":{"gitId":"powzx"},"content":"* 🔗 - Links to related sections in this user guide.","lastModifiedDate":"2021-10-28"},{"lineNumber":24,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":25,"author":{"gitId":"powzx"},"content":"### Latest Releases","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"powzx"},"content":"* 💥 `v2.1` _Coming soon_","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"powzx"},"content":"* 💥 [`v2.0`](https://github.com/AY2122S1-CS2113T-W11-1/tp/releases) Released on Oct 26, 2021.","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"powzx"},"content":"* 💥 `v1.0` Released on Oct 12, 2021.","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"powzx"},"content":"## Table of Contents","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"powzx"},"content":"* 1 [Quick Start](#1-quick-start)","lastModifiedDate":"2021-10-28"},{"lineNumber":34,"author":{"gitId":"powzx"},"content":"* 2 [List of Commands](#2-list-of-commands)","lastModifiedDate":"2021-10-28"},{"lineNumber":35,"author":{"gitId":"powzx"},"content":"* 3 [Features](#3-features)","lastModifiedDate":"2021-10-28"},{"lineNumber":36,"author":{"gitId":"powzx"},"content":"  * 3.1 [`module`](#31-module-manager-module)","lastModifiedDate":"2021-10-28"},{"lineNumber":37,"author":{"gitId":"giterator"},"content":"    * 3.1.1 [`module add`](#311-add-modules-to-module-list-by-code-module-add)","lastModifiedDate":"2021-11-02"},{"lineNumber":38,"author":{"gitId":"powzx"},"content":"    * 3.1.2 [`module delete`](#312-delete-modules-from-module-list-by-code-module-delete)","lastModifiedDate":"2021-10-28"},{"lineNumber":39,"author":{"gitId":"powzx"},"content":"    * 3.1.3 [`module list`](#313-list-modules-from-module-list-module-list)","lastModifiedDate":"2021-10-28"},{"lineNumber":40,"author":{"gitId":"powzx"},"content":"    * 3.1.4 [`module view`](#314-view-module-details-module-view)","lastModifiedDate":"2021-10-28"},{"lineNumber":41,"author":{"gitId":"powzx"},"content":"    * 3.1.5 [`module grade`](#315-set-a-modules-grade-in-module-list-module-grade)","lastModifiedDate":"2021-10-28"},{"lineNumber":42,"author":{"gitId":"powzx"},"content":"    * 3.1.6 [`module cap`](#316-calculate-overall-cap-from-modules-in-module-list-module-cap)","lastModifiedDate":"2021-10-28"},{"lineNumber":43,"author":{"gitId":"powzx"},"content":"  * 3.2 [`timetable`](#32-timetable-timetable)","lastModifiedDate":"2021-10-28"},{"lineNumber":44,"author":{"gitId":"powzx"},"content":"    * 3.2.1 [`timetable add`](#321-add-lessons-to-timetable--timetable-add)","lastModifiedDate":"2021-10-28"},{"lineNumber":45,"author":{"gitId":"powzx"},"content":"    * 3.2.2 [`timetable delete`](#322-delete-lessons-from-timetable--timetable-delete)","lastModifiedDate":"2021-10-28"},{"lineNumber":46,"author":{"gitId":"powzx"},"content":"    * 3.2.3 [`timetable view`](#323-view-timetable-on-cli--timetable-view)","lastModifiedDate":"2021-10-28"},{"lineNumber":47,"author":{"gitId":"powzx"},"content":"    * 3.2.4 [`timetable update`](#324-update-a-lesson-to-another-timing-your-timetable--timetable-update)","lastModifiedDate":"2021-10-28"},{"lineNumber":48,"author":{"gitId":"saravanamani1999"},"content":"    * 3.2.5 [`timetable list`](#325-list-the-lessons-and-their-timings-on-a-specific-day-timetable-list)","lastModifiedDate":"2021-11-03"},{"lineNumber":49,"author":{"gitId":"powzx"},"content":"  * 3.3 [`planner`](#33-event-planner-planner)","lastModifiedDate":"2021-10-28"},{"lineNumber":50,"author":{"gitId":"powzx"},"content":"    * 3.3.1 [`planner add`](#331-add-an-event-to-planner-planner-add)","lastModifiedDate":"2021-10-28"},{"lineNumber":51,"author":{"gitId":"powzx"},"content":"    * 3.3.2 [`planner list`](#332-list-events-on-a-specific-date-planner-list)","lastModifiedDate":"2021-10-28"},{"lineNumber":52,"author":{"gitId":"powzx"},"content":"    * 3.3.3 [`planner delete`](#333-delete-an-event-from-planner-planner-delete)","lastModifiedDate":"2021-10-28"},{"lineNumber":53,"author":{"gitId":"powzx"},"content":"  * 3.4 [`bus`](#34-nus-bus-route-finder-bus)","lastModifiedDate":"2021-10-28"},{"lineNumber":54,"author":{"gitId":"powzx"},"content":"    * 3.4.1 [`bus`](#341-bus-route-search-bus)","lastModifiedDate":"2021-10-28"},{"lineNumber":55,"author":{"gitId":"powzx"},"content":"    * 3.4.2 [`bus stop list`](#342-list-of-all-bus-stop-names-bus-stop-list)","lastModifiedDate":"2021-10-28"},{"lineNumber":56,"author":{"gitId":"powzx"},"content":"  * 3.5 [`cap`](#35-cap-calculator-cap)","lastModifiedDate":"2021-10-28"},{"lineNumber":57,"author":{"gitId":"powzx"},"content":"    * 3.5.1 [`cap mc`](#351-calculate-cap-using-modular-credit-cap-mc)","lastModifiedDate":"2021-10-28"},{"lineNumber":58,"author":{"gitId":"powzx"},"content":"    * 3.5.2 [`cap code`](#352-calculate-cap-using-module-code-cap-code)","lastModifiedDate":"2021-10-28"},{"lineNumber":59,"author":{"gitId":"powzx"},"content":"  * 3.6 [`help`](#36-view-menu-help)","lastModifiedDate":"2021-10-28"},{"lineNumber":60,"author":{"gitId":"powzx"},"content":"  * 3.7 [`bye`](#37-exit-bye)","lastModifiedDate":"2021-10-28"},{"lineNumber":61,"author":{"gitId":"saravanamani1999"},"content":"* 4 [Limitations](#4-current-limitations)","lastModifiedDate":"2021-11-03"},{"lineNumber":62,"author":{"gitId":"saravanamani1999"},"content":"* 5 [FAQ](#4-faq)","lastModifiedDate":"2021-11-03"},{"lineNumber":63,"author":{"gitId":"saravanamani1999"},"content":"* 6 [Data Storage](#5-data-storage)","lastModifiedDate":"2021-11-03"},{"lineNumber":64,"author":{"gitId":"saravanamani1999"},"content":"* 7 [Contact Us](#6-contact-us)","lastModifiedDate":"2021-11-03"},{"lineNumber":65,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":66,"author":{"gitId":"saravanamani1999"},"content":"## 1. Quick Start","lastModifiedDate":"2021-11-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":68,"author":{"gitId":"powzx"},"content":"### Installation and start-up","lastModifiedDate":"2021-10-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"1. Ensure that you have Java 11 or above installed.","lastModifiedDate":"2020-05-24"},{"lineNumber":71,"author":{"gitId":"powzx"},"content":"2. Download the latest version of `Kolinux.jar` from [here](https://github.com/AY2122S1-CS2113T-W11-1/tp/releases).","lastModifiedDate":"2021-10-10"},{"lineNumber":72,"author":{"gitId":"powzx"},"content":"3. Copy `Kolinux.jar` to an empty folder.","lastModifiedDate":"2021-10-10"},{"lineNumber":73,"author":{"gitId":"powzx"},"content":"4. Start the command prompt.","lastModifiedDate":"2021-10-21"},{"lineNumber":74,"author":{"gitId":"powzx"},"content":"5. Navigate to the folder `Kolinux.jar` is stored on the command prompt.","lastModifiedDate":"2021-10-21"},{"lineNumber":75,"author":{"gitId":"powzx"},"content":"6. Launch `Kolinux.jar` using `java -jar Kolinux.jar`.","lastModifiedDate":"2021-10-21"},{"lineNumber":76,"author":{"gitId":"powzx"},"content":"7. Enter commands to use _Kolinux_.","lastModifiedDate":"2021-10-21"},{"lineNumber":77,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":78,"author":{"gitId":"powzx"},"content":"The following is what you should expect to observe on the terminal upon start-up:","lastModifiedDate":"2021-10-28"},{"lineNumber":79,"author":{"gitId":"powzx"},"content":"```","lastModifiedDate":"2021-10-10"},{"lineNumber":80,"author":{"gitId":"powzx"},"content":"java -jar Kolinux.jar","lastModifiedDate":"2021-10-10"},{"lineNumber":81,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":82,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":83,"author":{"gitId":"powzx"},"content":"(_)   | |    | |(_)","lastModifiedDate":"2021-10-10"},{"lineNumber":84,"author":{"gitId":"powzx"},"content":" _____| |___ | | _ ____  _   _ _   _","lastModifiedDate":"2021-10-10"},{"lineNumber":85,"author":{"gitId":"powzx"},"content":"|  _   _) _ \\| || |  _ \\| | | ( \\ / )","lastModifiedDate":"2021-10-10"},{"lineNumber":86,"author":{"gitId":"powzx"},"content":"| |  \\ \\ |_| | || | | | | |_| |) X (","lastModifiedDate":"2021-10-10"},{"lineNumber":87,"author":{"gitId":"powzx"},"content":"|_|   \\_)___/ \\_)_|_| |_|____/(_/ \\_)","lastModifiedDate":"2021-10-10"},{"lineNumber":88,"author":{"gitId":"powzx"},"content":"Welcome to Kolinux! Enter \"help\" to view the list of commands","lastModifiedDate":"2021-10-10"},{"lineNumber":89,"author":{"gitId":"powzx"},"content":"....................................................................","lastModifiedDate":"2021-10-12"},{"lineNumber":90,"author":{"gitId":"powzx"},"content":"```","lastModifiedDate":"2021-10-10"},{"lineNumber":91,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":92,"author":{"gitId":"saravanamani1999"},"content":"## 2. List of Commands","lastModifiedDate":"2021-11-03"},{"lineNumber":93,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":94,"author":{"gitId":"saravanamani1999"},"content":"|    Command    \t|                     Action                     \t              |               Command Format               \t       |","lastModifiedDate":"2021-10-07"},{"lineNumber":95,"author":{"gitId":"saravanamani1999"},"content":"|:-------------:\t|:----------------------------------------------:\t              |:------------------------------------------:\t       |","lastModifiedDate":"2021-10-07"},{"lineNumber":96,"author":{"gitId":"giterator"},"content":"| [`module add`](#311-add-modules-to-module-list-by-code-module-add)\t| Store a module in the module list\t\t\t                      | `module add MODULE_CODE`\t\t\t               |","lastModifiedDate":"2021-11-02"},{"lineNumber":97,"author":{"gitId":"powzx"},"content":"| [`module delete`](#312-delete-modules-from-module-list-by-code-module-delete)\t| Delete a module from the module list\t\t\t                  | `module delete MODULE_CODE`\t\t\t               |","lastModifiedDate":"2021-10-28"},{"lineNumber":98,"author":{"gitId":"powzx"},"content":"| [`module list`](#313-list-modules-from-module-list-module-list)     | List all stored modules from the module list                    | `module list`                                      |","lastModifiedDate":"2021-10-28"},{"lineNumber":99,"author":{"gitId":"powzx"},"content":"| [`module view`](#314-view-module-details-module-view)     | View module information                                         | `module view MODULE_CODE`                          |","lastModifiedDate":"2021-10-28"},{"lineNumber":100,"author":{"gitId":"powzx"},"content":"| [`module grade`](#315-set-a-modules-grade-in-module-list-module-grade)    | Set the grade of a module in the module list by its module code | `module grade MODULE_CODE/GRADE`                          |","lastModifiedDate":"2021-10-28"},{"lineNumber":101,"author":{"gitId":"powzx"},"content":"| [`module cap`](#316-calculate-overall-cap-from-modules-in-module-list-module-cap)      | Calculate CAP given modules and grades in the module list       | `module cap`                                       |","lastModifiedDate":"2021-10-28"},{"lineNumber":102,"author":{"gitId":"powzx"},"content":"| [`module cap`](#316-calculate-overall-cap-from-modules-in-module-list-module-cap)      | Get average grade needed to get desired CAP from module list    | `module cap DESIRED_CAP`                           |","lastModifiedDate":"2021-10-28"},{"lineNumber":103,"author":{"gitId":"powzx"},"content":"| [`timetable add`](#321-add-lessons-to-timetable--timetable-add)   | Add a lesson to your timetable                                  | `timetable add MODULE_CODE/LESSON_TYPE/DAY/START_TIME/END_TIME`|","lastModifiedDate":"2021-10-28"},{"lineNumber":104,"author":{"gitId":"saravanamani1999"},"content":"| [`timetable delete`](#322-delete-lessons-from-timetable--timetable-delete)| Delete a lesson from your timetable                             | `timetable delete MODULE_CODE/LESSON_TYPE/DAY/START_TIME`     |","lastModifiedDate":"2021-11-03"},{"lineNumber":105,"author":{"gitId":"powzx"},"content":"| [`timetable view`](#323-view-timetable-on-cli--timetable-view)  | View timetable                                                  | `timetable view`                                   |","lastModifiedDate":"2021-10-28"},{"lineNumber":106,"author":{"gitId":"saravanamani1999"},"content":"| [`timetable update`](#324-update-a-lesson-to-another-timing-your-timetable--timetable-update)| Update a lesson to another timing on your timetable             | `timetable update MODULE_CODE/LESSON_TYPE/OLD_DAY/OLD_START_TIME/NEW_DAY/NEW_START_TIME`|","lastModifiedDate":"2021-11-03"},{"lineNumber":107,"author":{"gitId":"saravanamani1999"},"content":"| [`timetable list`](#325-list-the-lessons-and-their-timings-on-a-specific-day-timetable-list)| List all the lessons with their timings on a specified day of the week             | `timetable list DAY` |","lastModifiedDate":"2021-11-05"},{"lineNumber":108,"author":{"gitId":"powzx"},"content":"| [`planner add`](#331-add-an-event-to-planner-planner-add) \t| Add a new event to your planner on a particular date           | `planner add DESCRIPTION/DATE/START_TIME/END_TIME` |","lastModifiedDate":"2021-10-28"},{"lineNumber":109,"author":{"gitId":"powzx"},"content":"| [`planner list`](#332-list-events-on-a-specific-date-planner-list)\t| List the events in your planner on a particular date                            | `planner list DATE`                                |","lastModifiedDate":"2021-10-28"},{"lineNumber":110,"author":{"gitId":"powzx"},"content":"| [`planner delete`](#333-delete-an-event-from-planner-planner-delete) \t| Delete an event from your planner on a particular date                            | `planner delete DATE`                              |","lastModifiedDate":"2021-10-28"},{"lineNumber":111,"author":{"gitId":"powzx"},"content":"| [`bus`](#341-bus-route-search-bus)        \t| Check for an NUS bus route from one stop to another \t          | `bus /START_LOCATION /END_LOCATION`                |","lastModifiedDate":"2021-11-01"},{"lineNumber":112,"author":{"gitId":"powzx"},"content":"| [`bus stop list`](#342-list-of-all-bus-stop-names-bus-stop-list)   | Lists all the bus stops in the NUS shuttle bus routes           | `bus stop list`                                    |","lastModifiedDate":"2021-10-28"},{"lineNumber":113,"author":{"gitId":"powzx"},"content":"| [`cap mc`](#351-calculate-cap-using-modular-credit-cap-mc)         \t| Calculate CAP using a set of modular credits and grades         | `cap mc MC/GRADE`                            \t   |","lastModifiedDate":"2021-10-28"},{"lineNumber":114,"author":{"gitId":"powzx"},"content":"| [`cap code`](#352-calculate-cap-using-module-code-cap-code)        | Calculate CAP using a set of module codes and grades            | `cap code MODULE_CODE/GRADE`                              |","lastModifiedDate":"2021-10-28"},{"lineNumber":115,"author":{"gitId":"powzx"},"content":"| [`help`](#36-view-menu-help)       \t| View the different commands available          \t              | `help`                                     \t       |","lastModifiedDate":"2021-10-28"},{"lineNumber":116,"author":{"gitId":"powzx"},"content":"| [`bye`](#37-exit-bye)      \t| Exit _Kolinux_                                   \t              | `bye`                                      \t       |","lastModifiedDate":"2021-10-28"},{"lineNumber":117,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":118,"author":{"gitId":"powzx"},"content":"\u003e⚠️Note: Words in uppercase are parameters that you should supply to the program.","lastModifiedDate":"2021-11-01"},{"lineNumber":119,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":120,"author":{"gitId":"saravanamani1999"},"content":"## 3. Features ","lastModifiedDate":"2021-11-03"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":122,"author":{"gitId":"powzx"},"content":"_Kolinux_ provides a **single integrated platform** consisting of **5 core features**:","lastModifiedDate":"2021-10-28"},{"lineNumber":123,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":124,"author":{"gitId":"powzx"},"content":"1. `module` - Module Manager","lastModifiedDate":"2021-10-19"},{"lineNumber":125,"author":{"gitId":"powzx"},"content":"2. `timetable` - Timetable","lastModifiedDate":"2021-10-19"},{"lineNumber":126,"author":{"gitId":"powzx"},"content":"3. `planner` - Event Planner","lastModifiedDate":"2021-10-19"},{"lineNumber":127,"author":{"gitId":"powzx"},"content":"4. `bus` - Route Finder","lastModifiedDate":"2021-10-19"},{"lineNumber":128,"author":{"gitId":"powzx"},"content":"5. `cap` - CAP Calculator","lastModifiedDate":"2021-10-19"},{"lineNumber":129,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":130,"author":{"gitId":"powzx"},"content":"### 3.1 Module Manager: `module`","lastModifiedDate":"2021-10-28"},{"lineNumber":131,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":132,"author":{"gitId":"giterator"},"content":"The module manager allows you to [`add`](#311-add-modules-to-module-list-by-code-module-add), ","lastModifiedDate":"2021-11-02"},{"lineNumber":133,"author":{"gitId":"powzx"},"content":"[`delete`](#312-delete-modules-from-module-list-by-code-module-delete), and ","lastModifiedDate":"2021-10-28"},{"lineNumber":134,"author":{"gitId":"powzx"},"content":"[`list`](#313-list-modules-from-module-list-module-list) the modules you are taking for the semester. You ","lastModifiedDate":"2021-11-01"},{"lineNumber":135,"author":{"gitId":"powzx"},"content":"are also able to [`view`](#314-view-module-details-module-view) important information regarding a module, such as the ","lastModifiedDate":"2021-10-28"},{"lineNumber":136,"author":{"gitId":"powzx"},"content":"description and workload requirements. In addition, you are able to set a ","lastModifiedDate":"2021-11-01"},{"lineNumber":137,"author":{"gitId":"powzx"},"content":"[`grade`](#315-set-a-modules-grade-in-module-list-module-grade) on the modules in your list for the purpose of ","lastModifiedDate":"2021-11-01"},{"lineNumber":138,"author":{"gitId":"powzx"},"content":"[`cap`](#316-calculate-overall-cap-from-modules-in-module-list-module-cap) calculation and grades suggestion.","lastModifiedDate":"2021-10-28"},{"lineNumber":139,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":140,"author":{"gitId":"giterator"},"content":"#### 3.1.1 Add modules to module list by code: `module add`","lastModifiedDate":"2021-11-02"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":142,"author":{"gitId":"giterator"},"content":"**Format:** `module add MODULE_CODE `","lastModifiedDate":"2021-11-02"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":144,"author":{"gitId":"powzx"},"content":"- `MODULE_CODE` is not case-sensitive, hence `cs2113t` and `CS2113T` will give the same output.","lastModifiedDate":"2021-10-21"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":146,"author":{"gitId":"powzx"},"content":"**Example of usage:**","lastModifiedDate":"2021-10-28"},{"lineNumber":147,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":148,"author":{"gitId":"giterator"},"content":"- `module add CS2113T`","lastModifiedDate":"2021-11-02"},{"lineNumber":149,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":150,"author":{"gitId":"powzx"},"content":"This is what you should observe on the terminal after successfully storing a module:","lastModifiedDate":"2021-11-01"},{"lineNumber":151,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":152,"author":{"gitId":"powzx"},"content":"```","lastModifiedDate":"2021-10-10"},{"lineNumber":153,"author":{"gitId":"giterator"},"content":"Successfully added module: CS2113T","lastModifiedDate":"2021-11-02"},{"lineNumber":154,"author":{"gitId":"powzx"},"content":"....................................................................","lastModifiedDate":"2021-10-18"},{"lineNumber":155,"author":{"gitId":"powzx"},"content":"```","lastModifiedDate":"2021-10-10"},{"lineNumber":156,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":157,"author":{"gitId":"powzx"},"content":"#### 3.1.2 Delete modules from module list by code: `module delete`","lastModifiedDate":"2021-10-28"},{"lineNumber":158,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":159,"author":{"gitId":"powzx"},"content":"**Format:** `module delete MODULE_CODE `","lastModifiedDate":"2021-10-28"},{"lineNumber":160,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":161,"author":{"gitId":"powzx"},"content":"- `MODULE_CODE` is not case-sensitive, hence `cs2113t` and `CS2113T` will give the same output.","lastModifiedDate":"2021-10-21"},{"lineNumber":162,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":163,"author":{"gitId":"powzx"},"content":"**Example of usage:**","lastModifiedDate":"2021-10-28"},{"lineNumber":164,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":165,"author":{"gitId":"giterator"},"content":"- `module delete CS2113T`","lastModifiedDate":"2021-10-19"},{"lineNumber":166,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":167,"author":{"gitId":"powzx"},"content":"This is what you should observe on the terminal after successfully deleting a module:","lastModifiedDate":"2021-11-01"},{"lineNumber":168,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":169,"author":{"gitId":"powzx"},"content":"```","lastModifiedDate":"2021-10-10"},{"lineNumber":170,"author":{"gitId":"powzx"},"content":"Successfully deleted module: CS2113T","lastModifiedDate":"2021-10-19"},{"lineNumber":171,"author":{"gitId":"powzx"},"content":"....................................................................","lastModifiedDate":"2021-10-15"},{"lineNumber":172,"author":{"gitId":"powzx"},"content":"```","lastModifiedDate":"2021-10-15"},{"lineNumber":173,"author":{"gitId":"saravanamani1999"},"content":"\u003e⚠️ Note: When you delete a module from module list, all the data relating to this module will be deleted from ","lastModifiedDate":"2021-11-05"},{"lineNumber":174,"author":{"gitId":"saravanamani1999"},"content":"\u003e timetable as well","lastModifiedDate":"2021-11-05"},{"lineNumber":175,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":176,"author":{"gitId":"powzx"},"content":"#### 3.1.3 List modules from module list: `module list`","lastModifiedDate":"2021-10-28"},{"lineNumber":177,"author":{"gitId":"shyamgj1900"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":178,"author":{"gitId":"powzx"},"content":"**Format:** `module list `","lastModifiedDate":"2021-10-28"},{"lineNumber":179,"author":{"gitId":"shyamgj1900"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":180,"author":{"gitId":"powzx"},"content":"**Example of usage:**","lastModifiedDate":"2021-10-28"},{"lineNumber":181,"author":{"gitId":"shyamgj1900"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":182,"author":{"gitId":"powzx"},"content":"- `module list` when CS2113T is already stored in the list","lastModifiedDate":"2021-10-19"},{"lineNumber":183,"author":{"gitId":"shyamgj1900"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":184,"author":{"gitId":"powzx"},"content":"This is what you should observe on the terminal when you list your modules:","lastModifiedDate":"2021-11-01"},{"lineNumber":185,"author":{"gitId":"shyamgj1900"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":186,"author":{"gitId":"shyamgj1900"},"content":"```","lastModifiedDate":"2021-10-11"},{"lineNumber":187,"author":{"gitId":"powzx"},"content":"CS2113T Software Engineering \u0026 Object-Oriented Programming","lastModifiedDate":"2021-10-19"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":189,"author":{"gitId":"powzx"},"content":"Workload:","lastModifiedDate":"2021-10-19"},{"lineNumber":190,"author":{"gitId":"powzx"},"content":"Lecture: 2.0 hours","lastModifiedDate":"2021-10-19"},{"lineNumber":191,"author":{"gitId":"powzx"},"content":"Tutorial: 1.0 hours","lastModifiedDate":"2021-10-19"},{"lineNumber":192,"author":{"gitId":"powzx"},"content":"Project Work: 3.0 hours","lastModifiedDate":"2021-10-19"},{"lineNumber":193,"author":{"gitId":"powzx"},"content":"Preparation: 4.0 hours","lastModifiedDate":"2021-10-19"},{"lineNumber":194,"author":{"gitId":"powzx"},"content":"....................................................................","lastModifiedDate":"2021-10-19"},{"lineNumber":195,"author":{"gitId":"powzx"},"content":"Remember to add the module\u0027s lessons to the timetable based on the workload","lastModifiedDate":"2021-10-19"},{"lineNumber":196,"author":{"gitId":"powzx"},"content":"....................................................................","lastModifiedDate":"2021-10-12"},{"lineNumber":197,"author":{"gitId":"saravanamani1999"},"content":"```","lastModifiedDate":"2021-10-07"},{"lineNumber":198,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":199,"author":{"gitId":"powzx"},"content":"#### 3.1.4 View module details: `module view`","lastModifiedDate":"2021-10-28"},{"lineNumber":200,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":201,"author":{"gitId":"powzx"},"content":"**Format:** `module view MODULE_CODE`","lastModifiedDate":"2021-10-28"},{"lineNumber":202,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":203,"author":{"gitId":"powzx"},"content":"- `MODULE_CODE` is not case-sensitive, hence `cs2113t` and `CS2113T` will give the same output.","lastModifiedDate":"2021-10-26"},{"lineNumber":204,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":205,"author":{"gitId":"powzx"},"content":"**Example of usage:**","lastModifiedDate":"2021-10-28"},{"lineNumber":206,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":207,"author":{"gitId":"giterator"},"content":"* `module view CS1010`","lastModifiedDate":"2021-10-18"},{"lineNumber":208,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":209,"author":{"gitId":"powzx"},"content":"This is what you should observe on the terminal when you view the information of a module:","lastModifiedDate":"2021-11-01"},{"lineNumber":210,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":211,"author":{"gitId":"saravanamani1999"},"content":"```","lastModifiedDate":"2021-10-07"},{"lineNumber":212,"author":{"gitId":"nonrnp"},"content":"module view CS1010","lastModifiedDate":"2021-11-01"},{"lineNumber":213,"author":{"gitId":"saravanamani1999"},"content":"CS1010: Programming Methodology","lastModifiedDate":"2021-10-07"},{"lineNumber":214,"author":{"gitId":"saravanamani1999"},"content":"Department: Computer Science","lastModifiedDate":"2021-10-07"},{"lineNumber":215,"author":{"gitId":"saravanamani1999"},"content":"Faculty: Computing","lastModifiedDate":"2021-10-07"},{"lineNumber":216,"author":{"gitId":"saravanamani1999"},"content":"Credits: 4","lastModifiedDate":"2021-10-07"},{"lineNumber":217,"author":{"gitId":"nonrnp"},"content":"Grade: N/A","lastModifiedDate":"2021-11-01"},{"lineNumber":218,"author":{"gitId":"saravanamani1999"},"content":"This module introduces the fundamental concepts of","lastModifiedDate":"2021-10-07"},{"lineNumber":219,"author":{"gitId":"saravanamani1999"},"content":"problem solving by computing and programming using","lastModifiedDate":"2021-10-07"},{"lineNumber":220,"author":{"gitId":"saravanamani1999"},"content":"an imperative programming language. It is the first","lastModifiedDate":"2021-10-07"},{"lineNumber":221,"author":{"gitId":"saravanamani1999"},"content":"and foremost introductory course to computing.  Topics","lastModifiedDate":"2021-10-07"},{"lineNumber":222,"author":{"gitId":"saravanamani1999"},"content":"covered include computational thinking and computational","lastModifiedDate":"2021-10-07"},{"lineNumber":223,"author":{"gitId":"saravanamani1999"},"content":"problem solving, designing and specifying an algorithm,","lastModifiedDate":"2021-10-07"},{"lineNumber":224,"author":{"gitId":"saravanamani1999"},"content":"basic problem formulation and problem solving approaches,","lastModifiedDate":"2021-10-07"},{"lineNumber":225,"author":{"gitId":"saravanamani1999"},"content":"program development, coding, testing and debugging,","lastModifiedDate":"2021-10-07"},{"lineNumber":226,"author":{"gitId":"saravanamani1999"},"content":"fundamental programming constructs (variables, types,","lastModifiedDate":"2021-10-07"},{"lineNumber":227,"author":{"gitId":"saravanamani1999"},"content":"expressions, assignments, functions, control structures,","lastModifiedDate":"2021-10-07"},{"lineNumber":228,"author":{"gitId":"saravanamani1999"},"content":"etc.), fundamental data structures (arrays, strings,","lastModifiedDate":"2021-10-07"},{"lineNumber":229,"author":{"gitId":"saravanamani1999"},"content":"composite data types), basic sorting, and recursion.","lastModifiedDate":"2021-10-07"},{"lineNumber":230,"author":{"gitId":"powzx"},"content":"....................................................................","lastModifiedDate":"2021-10-12"},{"lineNumber":231,"author":{"gitId":"saravanamani1999"},"content":"```","lastModifiedDate":"2021-10-07"},{"lineNumber":232,"author":{"gitId":"giterator"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":233,"author":{"gitId":"powzx"},"content":"#### 3.1.5 Set a module\u0027s grade in module list: `module grade`","lastModifiedDate":"2021-10-28"},{"lineNumber":234,"author":{"gitId":"giterator"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":235,"author":{"gitId":"powzx"},"content":"**Format:** `module grade CODE/GRADE `","lastModifiedDate":"2021-10-28"},{"lineNumber":236,"author":{"gitId":"giterator"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":237,"author":{"gitId":"powzx"},"content":"- `MODULE_CODE` is not case-sensitive, hence `cs2113t` and `CS2113T` will give the same output.","lastModifiedDate":"2021-11-01"},{"lineNumber":238,"author":{"gitId":"powzx"},"content":"- `GRADE` is not case-sensitive, hence `a+` and `A+` will be treated as the same grade.","lastModifiedDate":"2021-11-01"},{"lineNumber":239,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":240,"author":{"gitId":"powzx"},"content":"**Example of usage:**","lastModifiedDate":"2021-10-28"},{"lineNumber":241,"author":{"gitId":"giterator"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":242,"author":{"gitId":"powzx"},"content":"- `module grade CS2113T/A` when CS2113T is already stored in the list","lastModifiedDate":"2021-10-19"},{"lineNumber":243,"author":{"gitId":"giterator"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":244,"author":{"gitId":"powzx"},"content":"This is what you should observe on the terminal when you set the grade of a module in your module list:","lastModifiedDate":"2021-11-01"},{"lineNumber":245,"author":{"gitId":"giterator"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":246,"author":{"gitId":"giterator"},"content":"```","lastModifiedDate":"2021-10-12"},{"lineNumber":247,"author":{"gitId":"nonrnp"},"content":"module grade CS2113T/A","lastModifiedDate":"2021-10-19"},{"lineNumber":248,"author":{"gitId":"powzx"},"content":"CS2113T grade set to A","lastModifiedDate":"2021-10-19"},{"lineNumber":249,"author":{"gitId":"powzx"},"content":"....................................................................","lastModifiedDate":"2021-10-12"},{"lineNumber":250,"author":{"gitId":"giterator"},"content":"```","lastModifiedDate":"2021-10-12"},{"lineNumber":251,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":252,"author":{"gitId":"nonrnp"},"content":"You can also enter `reset` or simply `0` in place of your grade to reset the module\u0027s grade.","lastModifiedDate":"2021-11-01"},{"lineNumber":253,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":254,"author":{"gitId":"nonrnp"},"content":"**Example of usage:**","lastModifiedDate":"2021-11-01"},{"lineNumber":255,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":256,"author":{"gitId":"nonrnp"},"content":"- `module grade CS2113T/reset` when CS2113T has its grade stored in the list","lastModifiedDate":"2021-11-01"},{"lineNumber":257,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":258,"author":{"gitId":"nonrnp"},"content":"This is what you should observe on the terminal when you reset the grade of a module in your module list:","lastModifiedDate":"2021-11-01"},{"lineNumber":259,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":260,"author":{"gitId":"nonrnp"},"content":"```","lastModifiedDate":"2021-11-01"},{"lineNumber":261,"author":{"gitId":"nonrnp"},"content":"module grade CS2113T/reset","lastModifiedDate":"2021-11-01"},{"lineNumber":262,"author":{"gitId":"nonrnp"},"content":"CS2113T grade reset","lastModifiedDate":"2021-11-01"},{"lineNumber":263,"author":{"gitId":"nonrnp"},"content":"....................................................................","lastModifiedDate":"2021-11-01"},{"lineNumber":264,"author":{"gitId":"nonrnp"},"content":"```","lastModifiedDate":"2021-11-01"},{"lineNumber":265,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":266,"author":{"gitId":"nonrnp"},"content":"\u003e⚠️ Note: For grades with plus (+) or minus (-) suffix, it is crucial to ensure that there is no empty space between ","lastModifiedDate":"2021-10-31"},{"lineNumber":267,"author":{"gitId":"nonrnp"},"content":"the grade letter and the suffix. E.g. `A+` instead of `A +`","lastModifiedDate":"2021-10-31"},{"lineNumber":268,"author":{"gitId":"giterator"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":269,"author":{"gitId":"powzx"},"content":"\u003e🔗 The grades set using this command will be used to calculate CAP based on your module list. ","lastModifiedDate":"2021-11-01"},{"lineNumber":270,"author":{"gitId":"powzx"},"content":"You may choose to enter real grades to calculate your current CAP and/or enter target grades to calculate a CAP goal.","lastModifiedDate":"2021-10-19"},{"lineNumber":271,"author":{"gitId":"powzx"},"content":"Visit [`module cap`](#316-calculate-overall-cap-from-modules-in-module-list-module-cap) to find out more!","lastModifiedDate":"2021-11-01"},{"lineNumber":272,"author":{"gitId":"giterator"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":273,"author":{"gitId":"powzx"},"content":"### 3.1.6 Calculate overall CAP from modules in module list: `module cap`","lastModifiedDate":"2021-10-28"},{"lineNumber":274,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":275,"author":{"gitId":"powzx"},"content":"**Format:** `module cap`","lastModifiedDate":"2021-10-28"},{"lineNumber":276,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":277,"author":{"gitId":"powzx"},"content":"**Example of usage:**","lastModifiedDate":"2021-10-28"},{"lineNumber":278,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":279,"author":{"gitId":"nonrnp"},"content":"- `module cap` when at least one module is already stored in the list with the module\u0027s grade","lastModifiedDate":"2021-10-19"},{"lineNumber":280,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":281,"author":{"gitId":"powzx"},"content":"This is what you should observe on the terminal when you calculate the CAP based on your module list:","lastModifiedDate":"2021-11-01"},{"lineNumber":282,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":283,"author":{"gitId":"nonrnp"},"content":"```","lastModifiedDate":"2021-10-19"},{"lineNumber":284,"author":{"gitId":"nonrnp"},"content":"module cap","lastModifiedDate":"2021-10-19"},{"lineNumber":285,"author":{"gitId":"nonrnp"},"content":"Based on your available grade, your overall CAP is 5.00","lastModifiedDate":"2021-11-01"},{"lineNumber":286,"author":{"gitId":"nonrnp"},"content":"....................................................................","lastModifiedDate":"2021-10-19"},{"lineNumber":287,"author":{"gitId":"nonrnp"},"content":"```","lastModifiedDate":"2021-10-19"},{"lineNumber":288,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":289,"author":{"gitId":"nonrnp"},"content":"This feature can also be used to show you the minimum grade to get for the other modules in order to achieve your ","lastModifiedDate":"2021-11-01"},{"lineNumber":290,"author":{"gitId":"nonrnp"},"content":"desired CAP by including the CAP at the end of the command.","lastModifiedDate":"2021-11-01"},{"lineNumber":291,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":292,"author":{"gitId":"powzx"},"content":"**Format:** `module cap DESIRED_CAP`","lastModifiedDate":"2021-10-28"},{"lineNumber":293,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":294,"author":{"gitId":"powzx"},"content":"**Example of usage:**","lastModifiedDate":"2021-10-28"},{"lineNumber":295,"author":{"gitId":"powzx"},"content":"- `module cap 4.0` when at least one module does not have the grade stored","lastModifiedDate":"2021-11-01"},{"lineNumber":296,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":297,"author":{"gitId":"powzx"},"content":"This is what you should observe on the terminal when you try to get grade suggestion based on a desired CAP:","lastModifiedDate":"2021-11-01"},{"lineNumber":298,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":299,"author":{"gitId":"nonrnp"},"content":"```","lastModifiedDate":"2021-10-19"},{"lineNumber":300,"author":{"gitId":"nonrnp"},"content":"module cap 4.0","lastModifiedDate":"2021-10-19"},{"lineNumber":301,"author":{"gitId":"nonrnp"},"content":"Based on your modules, you have to get an average grade of B+ or higher ","lastModifiedDate":"2021-10-19"},{"lineNumber":302,"author":{"gitId":"nonrnp"},"content":"in order to achieve your desired CAP","lastModifiedDate":"2021-10-19"},{"lineNumber":303,"author":{"gitId":"nonrnp"},"content":"....................................................................","lastModifiedDate":"2021-10-19"},{"lineNumber":304,"author":{"gitId":"nonrnp"},"content":"```","lastModifiedDate":"2021-10-19"},{"lineNumber":305,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":306,"author":{"gitId":"powzx"},"content":"\u003e🔗 Click [here](#2-list-of-commands) to return to the list of commands!","lastModifiedDate":"2021-11-01"},{"lineNumber":307,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":308,"author":{"gitId":"powzx"},"content":"### 3.2 Timetable: `timetable`","lastModifiedDate":"2021-10-28"},{"lineNumber":309,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":310,"author":{"gitId":"saravanamani1999"},"content":"This feature allows you to [`add`](#321-add-lessons-to-timetable--timetable-add) and ","lastModifiedDate":"2021-10-31"},{"lineNumber":311,"author":{"gitId":"saravanamani1999"},"content":"[`delete`](#322-delete-lessons-from-timetable--timetable-delete) lessons from your timetable based on the modules ","lastModifiedDate":"2021-10-31"},{"lineNumber":312,"author":{"gitId":"powzx"},"content":"added in the module manager. ","lastModifiedDate":"2021-10-21"},{"lineNumber":313,"author":{"gitId":"saravanamani1999"},"content":"You are also able to [`update`](#324-update-a-lesson-to-another-timing-your-timetable--timetable-update)","lastModifiedDate":"2021-10-31"},{"lineNumber":314,"author":{"gitId":"saravanamani1999"},"content":"your existing lessons to another time slot.","lastModifiedDate":"2021-10-31"},{"lineNumber":315,"author":{"gitId":"saravanamani1999"},"content":"It also provides you an aesthetic visual representation of your timetable for you to ","lastModifiedDate":"2021-10-31"},{"lineNumber":316,"author":{"gitId":"saravanamani1999"},"content":"[`view`](#323-view-timetable-on-cli--timetable-view) on the CLI.","lastModifiedDate":"2021-10-31"},{"lineNumber":317,"author":{"gitId":"saravanamani1999"},"content":"If you prefer only to see the lessons that are taking place for the day without the empty slots, you can make use of ","lastModifiedDate":"2021-11-03"},{"lineNumber":318,"author":{"gitId":"saravanamani1999"},"content":"[`list`](#325-list-the-lessons-and-their-timings-on-a-specific-day-timetable-list) to view the lesson details for ","lastModifiedDate":"2021-11-03"},{"lineNumber":319,"author":{"gitId":"saravanamani1999"},"content":"that day.","lastModifiedDate":"2021-11-03"},{"lineNumber":320,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":321,"author":{"gitId":"powzx"},"content":"#### 3.2.1 Add lessons to timetable : `timetable add`","lastModifiedDate":"2021-10-28"},{"lineNumber":322,"author":{"gitId":"giterator"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":323,"author":{"gitId":"powzx"},"content":"**Format:** `timetable add MODULE_CODE/LESSON_TYPE/DAY/START_TIME/END_TIME`","lastModifiedDate":"2021-10-28"},{"lineNumber":324,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":325,"author":{"gitId":"saravanamani1999"},"content":"* Ensure `MODULE_CODE` is stored in the module list using ","lastModifiedDate":"2021-10-20"},{"lineNumber":326,"author":{"gitId":"giterator"},"content":"[`module add`](#311-add-modules-to-module-list-by-code-module-add) first before adding to timetable","lastModifiedDate":"2021-11-02"},{"lineNumber":327,"author":{"gitId":"saravanamani1999"},"content":"* `LESSON_TYPE` needs to be one of the following: ","lastModifiedDate":"2021-10-20"},{"lineNumber":328,"author":{"gitId":"saravanamani1999"},"content":"  * `TUT` refers to tutorial","lastModifiedDate":"2021-10-20"},{"lineNumber":329,"author":{"gitId":"saravanamani1999"},"content":"  * `LEC` refers to lecture","lastModifiedDate":"2021-10-20"},{"lineNumber":330,"author":{"gitId":"saravanamani1999"},"content":"  * `LAB` refers to lab","lastModifiedDate":"2021-10-20"},{"lineNumber":331,"author":{"gitId":"saravanamani1999"},"content":"* `START_TIME` and `END_TIME` needs to follow the following format: `hhMM` and must be between the school hours ","lastModifiedDate":"2021-10-20"},{"lineNumber":332,"author":{"gitId":"saravanamani1999"},"content":"`0600` and `2100`","lastModifiedDate":"2021-10-20"},{"lineNumber":333,"author":{"gitId":"saravanamani1999"},"content":"* `DAY` must be from between `Monday` and `Friday`","lastModifiedDate":"2021-10-20"},{"lineNumber":334,"author":{"gitId":"saravanamani1999"},"content":"* `MODULE_CODE`,`LESSON_TYPE` and `DAY`  are not case-sensitive","lastModifiedDate":"2021-10-20"},{"lineNumber":335,"author":{"gitId":"saravanamani1999"},"content":"  * i.e. `CS1010` is the same as `cs1010`","lastModifiedDate":"2021-10-20"},{"lineNumber":336,"author":{"gitId":"saravanamani1999"},"content":"  * i.e. `TUT` is the same as `tut` or `Tut`","lastModifiedDate":"2021-10-20"},{"lineNumber":337,"author":{"gitId":"powzx"},"content":"  * i.e. `monday` is the same as `MONDAY`","lastModifiedDate":"2021-10-19"},{"lineNumber":338,"author":{"gitId":"giterator"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":339,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":340,"author":{"gitId":"powzx"},"content":"**Example of usage:**","lastModifiedDate":"2021-10-28"},{"lineNumber":341,"author":{"gitId":"giterator"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":342,"author":{"gitId":"saravanamani1999"},"content":"* `timetable add CS1010/TUT/Monday/1200/1300`","lastModifiedDate":"2021-10-31"},{"lineNumber":343,"author":{"gitId":"saravanamani1999"},"content":"* `timetable add CS2113T/LEC/friday/1600/1800`","lastModifiedDate":"2021-10-20"},{"lineNumber":344,"author":{"gitId":"giterator"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":345,"author":{"gitId":"saravanamani1999"},"content":"This is what you should observe on your terminal when adding a lesson to the timetable:","lastModifiedDate":"2021-10-31"},{"lineNumber":346,"author":{"gitId":"powzx"},"content":"```","lastModifiedDate":"2021-10-19"},{"lineNumber":347,"author":{"gitId":"saravanamani1999"},"content":"timetable add CS1010/TUT/Monday/1200/1300","lastModifiedDate":"2021-10-31"},{"lineNumber":348,"author":{"gitId":"powzx"},"content":"Lesson has been added to timetable","lastModifiedDate":"2021-10-19"},{"lineNumber":349,"author":{"gitId":"powzx"},"content":"....................................................................","lastModifiedDate":"2021-10-19"},{"lineNumber":350,"author":{"gitId":"powzx"},"content":"```","lastModifiedDate":"2021-10-19"},{"lineNumber":351,"author":{"gitId":"saravanamani1999"},"content":"\u003e⚠️ Note: Ensure `MODULE_CODE` is stored in the module list using","lastModifiedDate":"2021-10-30"},{"lineNumber":352,"author":{"gitId":"giterator"},"content":"[`module add`](#311-add-modules-to-module-list-by-code-module-add) first before adding to timetable as only","lastModifiedDate":"2021-11-02"},{"lineNumber":353,"author":{"gitId":"saravanamani1999"},"content":"the modules added to module list can be added to the timetable","lastModifiedDate":"2021-10-20"},{"lineNumber":354,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":355,"author":{"gitId":"saravanamani1999"},"content":"\u003e⚠️ ️Note: Please also note that the timetable has been built to take lesson of durations in multiples of 30 mins.","lastModifiedDate":"2021-11-03"},{"lineNumber":356,"author":{"gitId":"saravanamani1999"},"content":"\u003e This has been done to ensure readability of the timetable on CLI when you input","lastModifiedDate":"2021-10-31"},{"lineNumber":357,"author":{"gitId":"saravanamani1999"},"content":"\u003e [`timetable view`](#323-view-timetable-on-cli--timetable-view). So you will not be allowed to enter 15 min ","lastModifiedDate":"2021-11-01"},{"lineNumber":358,"author":{"gitId":"saravanamani1999"},"content":"\u003e slots of lessons onto the timetable like e.g. 1315 or 1245.","lastModifiedDate":"2021-11-01"},{"lineNumber":359,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":360,"author":{"gitId":"saravanamani1999"},"content":"\u003e⚠️ Note: Due to a few inaccuracies in the prescribed workload hours in NUSMods, you can now add lessons which exceed ","lastModifiedDate":"2021-11-05"},{"lineNumber":361,"author":{"gitId":"saravanamani1999"},"content":"\u003e the workload hours, but you will be given a warning and asked to confirm if you would like to carry out with adding ","lastModifiedDate":"2021-11-05"},{"lineNumber":362,"author":{"gitId":"saravanamani1999"},"content":"\u003e the lesson.","lastModifiedDate":"2021-11-05"},{"lineNumber":363,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":364,"author":{"gitId":"powzx"},"content":"\u003e🔗 Visit [`module`](#31-module-manager-module) for more information on the command formats.","lastModifiedDate":"2021-10-28"},{"lineNumber":365,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":366,"author":{"gitId":"powzx"},"content":"#### 3.2.2 Delete lessons from timetable : `timetable delete`","lastModifiedDate":"2021-10-28"},{"lineNumber":367,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":368,"author":{"gitId":"saravanamani1999"},"content":"**Format:** `timetable delete MODULE_CODE/LESSON_TYPE/DAY/START_TIME`","lastModifiedDate":"2021-10-31"},{"lineNumber":369,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":370,"author":{"gitId":"saravanamani1999"},"content":"* Ensure `MODULE_CODE` is stored in the module list using","lastModifiedDate":"2021-10-20"},{"lineNumber":371,"author":{"gitId":"giterator"},"content":"  [`module add`](#311-add-modules-to-module-list-by-code-module-add) first before adding to timetable","lastModifiedDate":"2021-11-02"},{"lineNumber":372,"author":{"gitId":"saravanamani1999"},"content":"* `LESSON_TYPE` needs to be one of the following:","lastModifiedDate":"2021-10-20"},{"lineNumber":373,"author":{"gitId":"saravanamani1999"},"content":"  * `TUT` refers to tutorial","lastModifiedDate":"2021-10-20"},{"lineNumber":374,"author":{"gitId":"saravanamani1999"},"content":"  * `LEC` refers to lecture","lastModifiedDate":"2021-10-20"},{"lineNumber":375,"author":{"gitId":"saravanamani1999"},"content":"  * `LAB` refers to lab","lastModifiedDate":"2021-10-20"},{"lineNumber":376,"author":{"gitId":"saravanamani1999"},"content":"* `DAY` must be from between `Monday` and `Friday`","lastModifiedDate":"2021-10-20"},{"lineNumber":377,"author":{"gitId":"saravanamani1999"},"content":"* `MODULE_CODE`,`LESSON_TYPE` and `DAY`  are not case-sensitive","lastModifiedDate":"2021-10-20"},{"lineNumber":378,"author":{"gitId":"saravanamani1999"},"content":"  * i.e. `CS1010` is the same as `cs1010`","lastModifiedDate":"2021-10-20"},{"lineNumber":379,"author":{"gitId":"saravanamani1999"},"content":"  * i.e. `TUT` is the same as `tut` or `Tut`","lastModifiedDate":"2021-10-20"},{"lineNumber":380,"author":{"gitId":"saravanamani1999"},"content":"  * i.e. `monday` is the same as `MONDAY`","lastModifiedDate":"2021-10-20"},{"lineNumber":381,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":382,"author":{"gitId":"powzx"},"content":"**Example of usage:**","lastModifiedDate":"2021-10-28"},{"lineNumber":383,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":384,"author":{"gitId":"saravanamani1999"},"content":"* `timetable delete cs1010/lec/tuesday/1200`","lastModifiedDate":"2021-10-31"},{"lineNumber":385,"author":{"gitId":"saravanamani1999"},"content":"* `timetable delete CS2113T/LEC/Friday/1800`","lastModifiedDate":"2021-10-31"},{"lineNumber":386,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":387,"author":{"gitId":"saravanamani1999"},"content":"This is what you should observe on your terminal when deleting a lesson from the timetable:","lastModifiedDate":"2021-10-31"},{"lineNumber":388,"author":{"gitId":"saravanamani1999"},"content":"```","lastModifiedDate":"2021-10-20"},{"lineNumber":389,"author":{"gitId":"saravanamani1999"},"content":"timetable delete cs1010/lec/tuesday/1800","lastModifiedDate":"2021-10-31"},{"lineNumber":390,"author":{"gitId":"saravanamani1999"},"content":"CS1010 LEC 1800 tuesday has been deleted from timetable","lastModifiedDate":"2021-10-31"},{"lineNumber":391,"author":{"gitId":"saravanamani1999"},"content":"....................................................................","lastModifiedDate":"2021-10-20"},{"lineNumber":392,"author":{"gitId":"saravanamani1999"},"content":"```","lastModifiedDate":"2021-10-20"},{"lineNumber":393,"author":{"gitId":"powzx"},"content":"#### 3.2.3 View timetable on CLI : `timetable view`","lastModifiedDate":"2021-10-28"},{"lineNumber":394,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":395,"author":{"gitId":"powzx"},"content":"**Format:** `timetable view`","lastModifiedDate":"2021-10-28"},{"lineNumber":396,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":397,"author":{"gitId":"powzx"},"content":"**Example of usage:**","lastModifiedDate":"2021-10-28"},{"lineNumber":398,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":399,"author":{"gitId":"saravanamani1999"},"content":"* `timetable add CS1010/LEC/monday/1900/2000` followed by `timetable view`","lastModifiedDate":"2021-10-20"},{"lineNumber":400,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":401,"author":{"gitId":"saravanamani1999"},"content":"This is what you should observe on your terminal when you want to view the timetable:","lastModifiedDate":"2021-10-31"},{"lineNumber":402,"author":{"gitId":"saravanamani1999"},"content":"```","lastModifiedDate":"2021-10-20"},{"lineNumber":403,"author":{"gitId":"saravanamani1999"},"content":"timetable add CS1010/lec/monday/1900/2000","lastModifiedDate":"2021-11-01"},{"lineNumber":404,"author":{"gitId":"saravanamani1999"},"content":"CS1010 LEC has been added to timetable","lastModifiedDate":"2021-10-20"},{"lineNumber":405,"author":{"gitId":"saravanamani1999"},"content":"....................................................................","lastModifiedDate":"2021-10-20"},{"lineNumber":406,"author":{"gitId":"saravanamani1999"},"content":"timetable view","lastModifiedDate":"2021-10-20"},{"lineNumber":407,"author":{"gitId":"saravanamani1999"},"content":"+-------------+--------------------+--------------------+--------------------+--------------------+--------------------+","lastModifiedDate":"2021-10-20"},{"lineNumber":408,"author":{"gitId":"saravanamani1999"},"content":"|             |       MONDAY       |       TUESDAY      |      WEDNESDAY     |      THURSDAY      |       FRIDAY       |","lastModifiedDate":"2021-10-20"},{"lineNumber":409,"author":{"gitId":"saravanamani1999"},"content":"+-------------+--------------------+--------------------+--------------------+--------------------+--------------------+","lastModifiedDate":"2021-10-20"},{"lineNumber":410,"author":{"gitId":"saravanamani1999"},"content":"|0600 - 0630  |                    |                    |                    |                    |                    |","lastModifiedDate":"2021-11-01"},{"lineNumber":411,"author":{"gitId":"saravanamani1999"},"content":"+-------------+--------------------+--------------------+--------------------+--------------------+--------------------+","lastModifiedDate":"2021-10-20"},{"lineNumber":412,"author":{"gitId":"saravanamani1999"},"content":"|0630 - 0700  |                    |                    |                    |                    |                    |","lastModifiedDate":"2021-11-01"},{"lineNumber":413,"author":{"gitId":"saravanamani1999"},"content":"+-------------+--------------------+--------------------+--------------------+--------------------+--------------------+","lastModifiedDate":"2021-10-20"},{"lineNumber":414,"author":{"gitId":"saravanamani1999"},"content":"|0700 - 0730  |                    |                    |                    |                    |                    |","lastModifiedDate":"2021-11-01"},{"lineNumber":415,"author":{"gitId":"saravanamani1999"},"content":"+-------------+--------------------+--------------------+--------------------+--------------------+--------------------+","lastModifiedDate":"2021-10-20"},{"lineNumber":416,"author":{"gitId":"saravanamani1999"},"content":"|0730 - 0800  |                    |                    |                    |                    |                    |","lastModifiedDate":"2021-11-01"},{"lineNumber":417,"author":{"gitId":"saravanamani1999"},"content":"+-------------+--------------------+--------------------+--------------------+--------------------+--------------------+","lastModifiedDate":"2021-10-20"},{"lineNumber":418,"author":{"gitId":"saravanamani1999"},"content":"|0800 - 0830  |                    |                    |                    |                    |                    |","lastModifiedDate":"2021-11-01"},{"lineNumber":419,"author":{"gitId":"saravanamani1999"},"content":"+-------------+--------------------+--------------------+--------------------+--------------------+--------------------+","lastModifiedDate":"2021-10-20"},{"lineNumber":420,"author":{"gitId":"saravanamani1999"},"content":"|0830 - 0900  |                    |                    |                    |                    |                    |","lastModifiedDate":"2021-11-01"},{"lineNumber":421,"author":{"gitId":"saravanamani1999"},"content":"+-------------+--------------------+--------------------+--------------------+--------------------+--------------------+","lastModifiedDate":"2021-10-20"},{"lineNumber":422,"author":{"gitId":"saravanamani1999"},"content":"|0900 - 0930  |                    |                    |                    |                    |                    |","lastModifiedDate":"2021-11-01"},{"lineNumber":423,"author":{"gitId":"saravanamani1999"},"content":"+-------------+--------------------+--------------------+--------------------+--------------------+--------------------+","lastModifiedDate":"2021-10-20"},{"lineNumber":424,"author":{"gitId":"saravanamani1999"},"content":"|0930 - 1000  |                    |                    |                    |                    |                    |","lastModifiedDate":"2021-11-01"},{"lineNumber":425,"author":{"gitId":"saravanamani1999"},"content":"+-------------+--------------------+--------------------+--------------------+--------------------+--------------------+","lastModifiedDate":"2021-10-20"},{"lineNumber":426,"author":{"gitId":"saravanamani1999"},"content":"|1000 - 1030  |                    |                    |                    |                    |                    |","lastModifiedDate":"2021-11-01"},{"lineNumber":427,"author":{"gitId":"saravanamani1999"},"content":"+-------------+--------------------+--------------------+--------------------+--------------------+--------------------+","lastModifiedDate":"2021-10-20"},{"lineNumber":428,"author":{"gitId":"saravanamani1999"},"content":"|1030 - 1100  |                    |                    |                    |                    |                    |","lastModifiedDate":"2021-11-01"},{"lineNumber":429,"author":{"gitId":"saravanamani1999"},"content":"+-------------+--------------------+--------------------+--------------------+--------------------+--------------------+","lastModifiedDate":"2021-10-20"},{"lineNumber":430,"author":{"gitId":"saravanamani1999"},"content":"|1100 - 1130  |                    |                    |                    |                    |                    |","lastModifiedDate":"2021-11-01"},{"lineNumber":431,"author":{"gitId":"saravanamani1999"},"content":"+-------------+--------------------+--------------------+--------------------+--------------------+--------------------+","lastModifiedDate":"2021-10-20"},{"lineNumber":432,"author":{"gitId":"saravanamani1999"},"content":"|1130 - 1200  |                    |                    |                    |                    |                    |","lastModifiedDate":"2021-11-01"},{"lineNumber":433,"author":{"gitId":"saravanamani1999"},"content":"+-------------+--------------------+--------------------+--------------------+--------------------+--------------------+","lastModifiedDate":"2021-10-20"},{"lineNumber":434,"author":{"gitId":"saravanamani1999"},"content":"|1200 - 1230  |                    |                    |                    |                    |                    |","lastModifiedDate":"2021-11-01"},{"lineNumber":435,"author":{"gitId":"saravanamani1999"},"content":"+-------------+--------------------+--------------------+--------------------+--------------------+--------------------+","lastModifiedDate":"2021-10-20"},{"lineNumber":436,"author":{"gitId":"saravanamani1999"},"content":"|1230 - 1300  |                    |                    |                    |                    |                    |","lastModifiedDate":"2021-11-01"},{"lineNumber":437,"author":{"gitId":"saravanamani1999"},"content":"+-------------+--------------------+--------------------+--------------------+--------------------+--------------------+","lastModifiedDate":"2021-10-20"},{"lineNumber":438,"author":{"gitId":"saravanamani1999"},"content":"|1300 - 1330  |                    |                    |                    |                    |                    |","lastModifiedDate":"2021-11-01"},{"lineNumber":439,"author":{"gitId":"saravanamani1999"},"content":"+-------------+--------------------+--------------------+--------------------+--------------------+--------------------+","lastModifiedDate":"2021-11-01"},{"lineNumber":440,"author":{"gitId":"saravanamani1999"},"content":"|1330 - 1400  |                    |                    |                    |                    |                    |","lastModifiedDate":"2021-11-01"},{"lineNumber":441,"author":{"gitId":"saravanamani1999"},"content":"+-------------+--------------------+--------------------+--------------------+--------------------+--------------------+","lastModifiedDate":"2021-11-01"},{"lineNumber":442,"author":{"gitId":"saravanamani1999"},"content":"|1400 - 1430  |                    |                    |                    |                    |                    |","lastModifiedDate":"2021-11-01"},{"lineNumber":443,"author":{"gitId":"saravanamani1999"},"content":"+-------------+--------------------+--------------------+--------------------+--------------------+--------------------+","lastModifiedDate":"2021-11-01"},{"lineNumber":444,"author":{"gitId":"saravanamani1999"},"content":"|1430 - 1500  |                    |                    |                    |                    |                    |","lastModifiedDate":"2021-11-01"},{"lineNumber":445,"author":{"gitId":"saravanamani1999"},"content":"+-------------+--------------------+--------------------+--------------------+--------------------+--------------------+","lastModifiedDate":"2021-11-01"},{"lineNumber":446,"author":{"gitId":"saravanamani1999"},"content":"|1500 - 1530  |                    |                    |                    |                    |                    |","lastModifiedDate":"2021-11-01"},{"lineNumber":447,"author":{"gitId":"saravanamani1999"},"content":"+-------------+--------------------+--------------------+--------------------+--------------------+--------------------+","lastModifiedDate":"2021-11-01"},{"lineNumber":448,"author":{"gitId":"saravanamani1999"},"content":"|1530 - 1600  |                    |                    |                    |                    |                    |","lastModifiedDate":"2021-11-01"},{"lineNumber":449,"author":{"gitId":"saravanamani1999"},"content":"+-------------+--------------------+--------------------+--------------------+--------------------+--------------------+","lastModifiedDate":"2021-11-01"},{"lineNumber":450,"author":{"gitId":"saravanamani1999"},"content":"|1600 - 1630  |                    |                    |                    |                    |                    |","lastModifiedDate":"2021-11-01"},{"lineNumber":451,"author":{"gitId":"saravanamani1999"},"content":"+-------------+--------------------+--------------------+--------------------+--------------------+--------------------+","lastModifiedDate":"2021-11-01"},{"lineNumber":452,"author":{"gitId":"saravanamani1999"},"content":"|1630 - 1700  |                    |                    |                    |                    |                    |","lastModifiedDate":"2021-11-01"},{"lineNumber":453,"author":{"gitId":"saravanamani1999"},"content":"+-------------+--------------------+--------------------+--------------------+--------------------+--------------------+","lastModifiedDate":"2021-11-01"},{"lineNumber":454,"author":{"gitId":"saravanamani1999"},"content":"|1700 - 1730  |                    |                    |                    |                    |                    |","lastModifiedDate":"2021-11-01"},{"lineNumber":455,"author":{"gitId":"saravanamani1999"},"content":"+-------------+--------------------+--------------------+--------------------+--------------------+--------------------+","lastModifiedDate":"2021-11-01"},{"lineNumber":456,"author":{"gitId":"saravanamani1999"},"content":"|1730 - 1800  |                    |                    |                    |                    |                    |","lastModifiedDate":"2021-11-01"},{"lineNumber":457,"author":{"gitId":"saravanamani1999"},"content":"+-------------+--------------------+--------------------+--------------------+--------------------+--------------------+","lastModifiedDate":"2021-11-01"},{"lineNumber":458,"author":{"gitId":"saravanamani1999"},"content":"|1800 - 1830  |                    |                    |                    |                    |                    |","lastModifiedDate":"2021-11-01"},{"lineNumber":459,"author":{"gitId":"saravanamani1999"},"content":"+-------------+--------------------+--------------------+--------------------+--------------------+--------------------+","lastModifiedDate":"2021-11-01"},{"lineNumber":460,"author":{"gitId":"saravanamani1999"},"content":"|1830 - 1900  |                    |                    |                    |                    |                    |","lastModifiedDate":"2021-11-01"},{"lineNumber":461,"author":{"gitId":"saravanamani1999"},"content":"+-------------+--------------------+--------------------+--------------------+--------------------+--------------------+","lastModifiedDate":"2021-11-01"},{"lineNumber":462,"author":{"gitId":"saravanamani1999"},"content":"|1900 - 1930  |     CS1010 LEC     |                    |                    |                    |                    |","lastModifiedDate":"2021-11-01"},{"lineNumber":463,"author":{"gitId":"saravanamani1999"},"content":"+-------------+--------------------+--------------------+--------------------+--------------------+--------------------+","lastModifiedDate":"2021-11-01"},{"lineNumber":464,"author":{"gitId":"saravanamani1999"},"content":"|1930 - 2000  |     CS1010 LEC     |                    |                    |                    |                    |","lastModifiedDate":"2021-11-01"},{"lineNumber":465,"author":{"gitId":"saravanamani1999"},"content":"+-------------+--------------------+--------------------+--------------------+--------------------+--------------------+","lastModifiedDate":"2021-11-01"},{"lineNumber":466,"author":{"gitId":"saravanamani1999"},"content":"|2000 - 2030  |                    |                    |                    |                    |                    |","lastModifiedDate":"2021-11-01"},{"lineNumber":467,"author":{"gitId":"saravanamani1999"},"content":"+-------------+--------------------+--------------------+--------------------+--------------------+--------------------+","lastModifiedDate":"2021-11-01"},{"lineNumber":468,"author":{"gitId":"saravanamani1999"},"content":"|2030 - 2100  |                    |                    |                    |                    |                    |","lastModifiedDate":"2021-11-01"},{"lineNumber":469,"author":{"gitId":"saravanamani1999"},"content":"+-------------+--------------------+--------------------+--------------------+--------------------+--------------------+","lastModifiedDate":"2021-10-20"},{"lineNumber":470,"author":{"gitId":"saravanamani1999"},"content":"Timetable has been printed above","lastModifiedDate":"2021-10-20"},{"lineNumber":471,"author":{"gitId":"saravanamani1999"},"content":"....................................................................","lastModifiedDate":"2021-10-20"},{"lineNumber":472,"author":{"gitId":"saravanamani1999"},"content":"```","lastModifiedDate":"2021-10-20"},{"lineNumber":473,"author":{"gitId":"saravanamani1999"},"content":"\u003e⚠️ Note: Please expand your CLI to view the timetable clearly if the timetable appears skewed.","lastModifiedDate":"2021-10-30"},{"lineNumber":474,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":475,"author":{"gitId":"powzx"},"content":"#### 3.2.4 Update a lesson to another timing your timetable : `timetable update`","lastModifiedDate":"2021-10-28"},{"lineNumber":476,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":477,"author":{"gitId":"saravanamani1999"},"content":"**Format:** `timetable update MODULE_CODE/LESSON_TYPE/OLD_DAY/OLD_START_TIME/NEW_DAY/NEW_START_TIME`","lastModifiedDate":"2021-10-31"},{"lineNumber":478,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":479,"author":{"gitId":"saravanamani1999"},"content":"* `LESSON_TYPE` needs to be one of the following:","lastModifiedDate":"2021-10-20"},{"lineNumber":480,"author":{"gitId":"saravanamani1999"},"content":"  * `TUT` refers to tutorial","lastModifiedDate":"2021-10-20"},{"lineNumber":481,"author":{"gitId":"saravanamani1999"},"content":"  * `LEC` refers to lecture","lastModifiedDate":"2021-10-20"},{"lineNumber":482,"author":{"gitId":"saravanamani1999"},"content":"  * `LAB` refers to lab","lastModifiedDate":"2021-10-20"},{"lineNumber":483,"author":{"gitId":"saravanamani1999"},"content":"* `START_TIME` and `END_TIME` needs to follow the following format: `hhMM` and must be between the school hours","lastModifiedDate":"2021-10-20"},{"lineNumber":484,"author":{"gitId":"saravanamani1999"},"content":"  `0600` and `2100`","lastModifiedDate":"2021-10-20"},{"lineNumber":485,"author":{"gitId":"saravanamani1999"},"content":"* `DAY` must be from between `Monday` and `Friday`","lastModifiedDate":"2021-10-20"},{"lineNumber":486,"author":{"gitId":"saravanamani1999"},"content":"* `MODULE_CODE`,`LESSON_TYPE` and `DAY`  are not case-sensitive","lastModifiedDate":"2021-10-20"},{"lineNumber":487,"author":{"gitId":"saravanamani1999"},"content":"  * i.e. `CS1010` is the same as `cs1010`","lastModifiedDate":"2021-10-20"},{"lineNumber":488,"author":{"gitId":"saravanamani1999"},"content":"  * i.e. `TUT` is the same as `tut` or `Tut`","lastModifiedDate":"2021-10-20"},{"lineNumber":489,"author":{"gitId":"saravanamani1999"},"content":"  * i.e. `monday` is the same as `MONDAY`","lastModifiedDate":"2021-10-20"},{"lineNumber":490,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":491,"author":{"gitId":"powzx"},"content":"**Example of usage:**","lastModifiedDate":"2021-10-28"},{"lineNumber":492,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":493,"author":{"gitId":"saravanamani1999"},"content":"* `timetable update cs1010/lec/tuesday/1100/monday/1200`","lastModifiedDate":"2021-10-31"},{"lineNumber":494,"author":{"gitId":"saravanamani1999"},"content":"* `timetable update CS2113T/LEC/Friday/1300/Monday/1300`","lastModifiedDate":"2021-10-31"},{"lineNumber":495,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":496,"author":{"gitId":"saravanamani1999"},"content":"This is what you should observe on your terminal when you update a lesson on the timetable:","lastModifiedDate":"2021-10-31"},{"lineNumber":497,"author":{"gitId":"giterator"},"content":"```","lastModifiedDate":"2021-10-12"},{"lineNumber":498,"author":{"gitId":"saravanamani1999"},"content":"timetable update cs1010/lec/tuesday/1300/monday/1200","lastModifiedDate":"2021-10-31"},{"lineNumber":499,"author":{"gitId":"saravanamani1999"},"content":"CS1010 LEC has been updated","lastModifiedDate":"2021-10-20"},{"lineNumber":500,"author":{"gitId":"powzx"},"content":"....................................................................","lastModifiedDate":"2021-10-12"},{"lineNumber":501,"author":{"gitId":"giterator"},"content":"```","lastModifiedDate":"2021-10-12"},{"lineNumber":502,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":503,"author":{"gitId":"saravanamani1999"},"content":"#### 3.2.5 List the lessons and their timings on a specific day: `timetable list`","lastModifiedDate":"2021-11-03"},{"lineNumber":504,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":505,"author":{"gitId":"saravanamani1999"},"content":"**Format:** `timetable list DAY`","lastModifiedDate":"2021-11-03"},{"lineNumber":506,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":507,"author":{"gitId":"saravanamani1999"},"content":"* `DAY` must be from between `Monday` and `Friday`","lastModifiedDate":"2021-11-03"},{"lineNumber":508,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":509,"author":{"gitId":"saravanamani1999"},"content":"**Example of usage:**","lastModifiedDate":"2021-11-03"},{"lineNumber":510,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":511,"author":{"gitId":"saravanamani1999"},"content":"* `timetable list monday`","lastModifiedDate":"2021-11-03"},{"lineNumber":512,"author":{"gitId":"saravanamani1999"},"content":"* `timetable list friday`","lastModifiedDate":"2021-11-03"},{"lineNumber":513,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":514,"author":{"gitId":"saravanamani1999"},"content":"This is what you should observe on your terminal when you list out the lessons for a specific day based on your ","lastModifiedDate":"2021-11-03"},{"lineNumber":515,"author":{"gitId":"saravanamani1999"},"content":"timetable","lastModifiedDate":"2021-11-03"},{"lineNumber":516,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":517,"author":{"gitId":"saravanamani1999"},"content":"```","lastModifiedDate":"2021-11-03"},{"lineNumber":518,"author":{"gitId":"saravanamani1999"},"content":"timetable list monday","lastModifiedDate":"2021-11-03"},{"lineNumber":519,"author":{"gitId":"saravanamani1999"},"content":"You have no lessons on monday","lastModifiedDate":"2021-11-03"},{"lineNumber":520,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":521,"author":{"gitId":"saravanamani1999"},"content":"Your lessons for monday has been listed above","lastModifiedDate":"2021-11-03"},{"lineNumber":522,"author":{"gitId":"saravanamani1999"},"content":"....................................................................","lastModifiedDate":"2021-11-03"},{"lineNumber":523,"author":{"gitId":"saravanamani1999"},"content":"timetable list friday","lastModifiedDate":"2021-11-03"},{"lineNumber":524,"author":{"gitId":"saravanamani1999"},"content":"CS1010 TUT 0700 - 0800","lastModifiedDate":"2021-11-03"},{"lineNumber":525,"author":{"gitId":"saravanamani1999"},"content":"CS1101S TUT 1600 - 1700","lastModifiedDate":"2021-11-03"},{"lineNumber":526,"author":{"gitId":"saravanamani1999"},"content":"CS1010 LEC 1900 - 2000","lastModifiedDate":"2021-11-03"},{"lineNumber":527,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":528,"author":{"gitId":"saravanamani1999"},"content":"Your lessons for friday has been listed above","lastModifiedDate":"2021-11-03"},{"lineNumber":529,"author":{"gitId":"saravanamani1999"},"content":"....................................................................","lastModifiedDate":"2021-11-03"},{"lineNumber":530,"author":{"gitId":"saravanamani1999"},"content":"```","lastModifiedDate":"2021-11-03"},{"lineNumber":531,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":532,"author":{"gitId":"powzx"},"content":"\u003e🔗 Click [here](#2-list-of-commands) to return to the list of commands!","lastModifiedDate":"2021-11-01"},{"lineNumber":533,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":534,"author":{"gitId":"powzx"},"content":"### 3.3 Event Planner: `planner`","lastModifiedDate":"2021-10-28"},{"lineNumber":535,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":536,"author":{"gitId":"powzx"},"content":"The event planner works by allowing you to [`add`](#331-add-an-event-to-planner-planner-add), ","lastModifiedDate":"2021-10-28"},{"lineNumber":537,"author":{"gitId":"powzx"},"content":"[`delete`](#333-delete-an-event-from-planner-planner-delete), and ","lastModifiedDate":"2021-10-28"},{"lineNumber":538,"author":{"gitId":"powzx"},"content":"[`list`](#332-list-events-on-a-specific-date-planner-list) any events happening on a specific date. ","lastModifiedDate":"2021-10-28"},{"lineNumber":539,"author":{"gitId":"powzx"},"content":"This is for you to manage your schedules daily. This feature is also integrated with the timetable and the module ","lastModifiedDate":"2021-10-28"},{"lineNumber":540,"author":{"gitId":"powzx"},"content":"manager so that you will also be able to view your lessons and exams on specific dates.","lastModifiedDate":"2021-10-28"},{"lineNumber":541,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":542,"author":{"gitId":"powzx"},"content":"#### 3.3.1 Add an event to Planner: `planner add`","lastModifiedDate":"2021-10-28"},{"lineNumber":543,"author":{"gitId":"giterator"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":544,"author":{"gitId":"powzx"},"content":"**Format:** `planner add DESCRIPTION/DATE/START_TIME/END_TIME`","lastModifiedDate":"2021-10-28"},{"lineNumber":545,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":546,"author":{"gitId":"powzx"},"content":"* The `DATE` needs to follow the following format: `yyyy-mm-dd`","lastModifiedDate":"2021-10-19"},{"lineNumber":547,"author":{"gitId":"powzx"},"content":"* `START_TIME` and `END_TIME` needs to follow the following format: `hhMM`","lastModifiedDate":"2021-10-19"},{"lineNumber":548,"author":{"gitId":"giterator"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":549,"author":{"gitId":"powzx"},"content":"**Example of usage:**","lastModifiedDate":"2021-10-28"},{"lineNumber":550,"author":{"gitId":"giterator"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":551,"author":{"gitId":"powzx"},"content":"* `planner add MA1508E quiz/2021-10-10/1700/1800`","lastModifiedDate":"2021-10-19"},{"lineNumber":552,"author":{"gitId":"giterator"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":553,"author":{"gitId":"powzx"},"content":"This is what you should observe on your terminal when adding an event to your planner:","lastModifiedDate":"2021-10-28"},{"lineNumber":554,"author":{"gitId":"giterator"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":555,"author":{"gitId":"giterator"},"content":"```","lastModifiedDate":"2021-10-18"},{"lineNumber":556,"author":{"gitId":"powzx"},"content":"planner add MA1508E quiz/2021-10-10/1700/1800","lastModifiedDate":"2021-10-19"},{"lineNumber":557,"author":{"gitId":"powzx"},"content":"An event has been added to your schedule successfully: 2021-10-10 17:00 - 18:00 MA1508E quiz","lastModifiedDate":"2021-11-01"},{"lineNumber":558,"author":{"gitId":"giterator"},"content":"....................................................................","lastModifiedDate":"2021-10-18"},{"lineNumber":559,"author":{"gitId":"powzx"},"content":"planner add Watch movie/2021-10-10/1530/1730","lastModifiedDate":"2021-10-19"},{"lineNumber":560,"author":{"gitId":"powzx"},"content":"You already have an event ongoing for that time period, do you still want to add?","lastModifiedDate":"2021-11-01"},{"lineNumber":561,"author":{"gitId":"powzx"},"content":"You may enter \u0027n\u0027 to cancel and proceed to list the events on the date to see what you already planned on that day","lastModifiedDate":"2021-11-01"},{"lineNumber":562,"author":{"gitId":"powzx"},"content":"Or you may enter \u0027y\u0027 to add the event","lastModifiedDate":"2021-11-01"},{"lineNumber":563,"author":{"gitId":"powzx"},"content":"y","lastModifiedDate":"2021-10-19"},{"lineNumber":564,"author":{"gitId":"powzx"},"content":"An event has been added to your schedule successfully: 2021-10-10 15:30 - 17:30 Watch movie","lastModifiedDate":"2021-11-01"},{"lineNumber":565,"author":{"gitId":"giterator"},"content":"....................................................................","lastModifiedDate":"2021-10-18"},{"lineNumber":566,"author":{"gitId":"giterator"},"content":"```","lastModifiedDate":"2021-10-18"},{"lineNumber":567,"author":{"gitId":"giterator"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":568,"author":{"gitId":"saravanamani1999"},"content":"\u003e⚠️ Note: If you attempt to add an event that has a time conflict with another event/lesson/exam, you will need to ","lastModifiedDate":"2021-10-30"},{"lineNumber":569,"author":{"gitId":"powzx"},"content":"give additional confirmation if you wish to proceed.","lastModifiedDate":"2021-10-28"},{"lineNumber":570,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":571,"author":{"gitId":"powzx"},"content":"#### 3.3.2 List events on a specific date: `planner list`","lastModifiedDate":"2021-10-28"},{"lineNumber":572,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":573,"author":{"gitId":"powzx"},"content":"**Format:** `planner list DATE`","lastModifiedDate":"2021-10-28"},{"lineNumber":574,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":575,"author":{"gitId":"powzx"},"content":"* The `DATE` needs to follow the following format: `yyyy-mm-dd`","lastModifiedDate":"2021-10-19"},{"lineNumber":576,"author":{"gitId":"giterator"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":577,"author":{"gitId":"powzx"},"content":"**Example of usage:**","lastModifiedDate":"2021-10-28"},{"lineNumber":578,"author":{"gitId":"giterator"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":579,"author":{"gitId":"powzx"},"content":"* `planner list 2021-10-10`","lastModifiedDate":"2021-10-19"},{"lineNumber":580,"author":{"gitId":"giterator"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":581,"author":{"gitId":"powzx"},"content":"This is what you should observe on the terminal when you list the events in your planner on a specific date:","lastModifiedDate":"2021-10-28"},{"lineNumber":582,"author":{"gitId":"giterator"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":583,"author":{"gitId":"giterator"},"content":"```","lastModifiedDate":"2021-10-19"},{"lineNumber":584,"author":{"gitId":"powzx"},"content":"planner list 2021-10-10","lastModifiedDate":"2021-10-19"},{"lineNumber":585,"author":{"gitId":"powzx"},"content":"2021-10-10 SUNDAY","lastModifiedDate":"2021-11-05"},{"lineNumber":586,"author":{"gitId":"powzx"},"content":"15:30 - 17:30 Watch movie","lastModifiedDate":"2021-10-19"},{"lineNumber":587,"author":{"gitId":"powzx"},"content":"17:00 - 18:00 MA1508E quiz","lastModifiedDate":"2021-10-19"},{"lineNumber":588,"author":{"gitId":"giterator"},"content":"....................................................................","lastModifiedDate":"2021-10-19"},{"lineNumber":589,"author":{"gitId":"giterator"},"content":"```","lastModifiedDate":"2021-10-19"},{"lineNumber":590,"author":{"gitId":"giterator"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":591,"author":{"gitId":"saravanamani1999"},"content":"\u003e⚠️ Note: The `list` will include all the events, lessons, and exams occurring on the `DATE` specified.","lastModifiedDate":"2021-10-30"},{"lineNumber":592,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":593,"author":{"gitId":"powzx"},"content":"\u003e🔗 Visit the section on [`timetable`](#32-timetable-timetable) for commands to add lessons.","lastModifiedDate":"2021-10-28"},{"lineNumber":594,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":595,"author":{"gitId":"powzx"},"content":"\u003e🔗 Exams are added to the list automatically as modules are stored in the [`module`](#31-module-manager-module) manager.","lastModifiedDate":"2021-10-28"},{"lineNumber":596,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":597,"author":{"gitId":"powzx"},"content":"#### 3.3.3 Delete an event from Planner: `planner delete`","lastModifiedDate":"2021-10-28"},{"lineNumber":598,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":599,"author":{"gitId":"powzx"},"content":"**Format:** `planner delete DATE`","lastModifiedDate":"2021-10-28"},{"lineNumber":600,"author":{"gitId":"giterator"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":601,"author":{"gitId":"powzx"},"content":"This command has two steps:","lastModifiedDate":"2021-10-19"},{"lineNumber":602,"author":{"gitId":"powzx"},"content":"1. Input the command as shown in the format above.","lastModifiedDate":"2021-10-19"},{"lineNumber":603,"author":{"gitId":"powzx"},"content":"2. Find the ID of the event you wish to delete from the schedule of events on `DATE` displayed.","lastModifiedDate":"2021-10-28"},{"lineNumber":604,"author":{"gitId":"powzx"},"content":"3. Input the ID to delete the event.","lastModifiedDate":"2021-10-19"},{"lineNumber":605,"author":{"gitId":"giterator"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":606,"author":{"gitId":"powzx"},"content":"* The `DATE` needs to follow the following format: `yyyy-mm-dd`","lastModifiedDate":"2021-10-19"},{"lineNumber":607,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":608,"author":{"gitId":"powzx"},"content":"This is what you should observe on the terminal when you delete an event on a specific date:","lastModifiedDate":"2021-10-28"},{"lineNumber":609,"author":{"gitId":"powzx"},"content":"```","lastModifiedDate":"2021-10-19"},{"lineNumber":610,"author":{"gitId":"powzx"},"content":"planner delete 2021-11-05","lastModifiedDate":"2021-10-19"},{"lineNumber":611,"author":{"gitId":"powzx"},"content":"Please enter the ID of the event you wish to delete (Enter \u0027n\u0027 to terminate this operation):","lastModifiedDate":"2021-10-19"},{"lineNumber":612,"author":{"gitId":"powzx"},"content":"07:00 - 07:30 10km run (id: 7)","lastModifiedDate":"2021-10-19"},{"lineNumber":613,"author":{"gitId":"powzx"},"content":"10:00 - 12:00 Attend career talk (id: 9)","lastModifiedDate":"2021-10-19"},{"lineNumber":614,"author":{"gitId":"powzx"},"content":"15:00 - 17:00 Watch movie (id: 1)","lastModifiedDate":"2021-10-19"},{"lineNumber":615,"author":{"gitId":"powzx"},"content":"9","lastModifiedDate":"2021-10-19"},{"lineNumber":616,"author":{"gitId":"powzx"},"content":"An event has been deleted from your schedule successfully: 2021-11-05 10:00 - 12:00 Attend career talk","lastModifiedDate":"2021-11-01"},{"lineNumber":617,"author":{"gitId":"powzx"},"content":"....................................................................","lastModifiedDate":"2021-10-19"},{"lineNumber":618,"author":{"gitId":"powzx"},"content":"planner list 2021-11-05","lastModifiedDate":"2021-10-19"},{"lineNumber":619,"author":{"gitId":"powzx"},"content":"2021-11-05 FRIDAY","lastModifiedDate":"2021-11-05"},{"lineNumber":620,"author":{"gitId":"powzx"},"content":"07:00 - 07:30 10km run","lastModifiedDate":"2021-10-19"},{"lineNumber":621,"author":{"gitId":"powzx"},"content":"15:00 - 17:00 Watch movie","lastModifiedDate":"2021-10-19"},{"lineNumber":622,"author":{"gitId":"powzx"},"content":"....................................................................","lastModifiedDate":"2021-10-19"},{"lineNumber":623,"author":{"gitId":"powzx"},"content":"```","lastModifiedDate":"2021-10-19"},{"lineNumber":624,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":625,"author":{"gitId":"saravanamani1999"},"content":"\u003e⚠️ Note: Only events added via the `planner` will be displayed on the list in step 2.","lastModifiedDate":"2021-10-30"},{"lineNumber":626,"author":{"gitId":"powzx"},"content":"Hence, you are not allowed to delete lessons added via the `timetable` and exams from the `planner`.","lastModifiedDate":"2021-10-28"},{"lineNumber":627,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":628,"author":{"gitId":"powzx"},"content":"\u003e🔗 Visit the section on [`timetable`](#32-timetable-timetable) for commands to delete lessons.","lastModifiedDate":"2021-10-28"},{"lineNumber":629,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":630,"author":{"gitId":"powzx"},"content":"\u003e🔗 Exams will be automatically deleted as modules are deleted from the [`module`](#31-module-manager-module) manager.","lastModifiedDate":"2021-10-28"},{"lineNumber":631,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":632,"author":{"gitId":"powzx"},"content":"\u003e🔗 Click [here](#2-list-of-commands) to return to the list of commands!","lastModifiedDate":"2021-11-01"},{"lineNumber":633,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":634,"author":{"gitId":"powzx"},"content":"### 3.4 NUS Bus Route Finder: `bus`","lastModifiedDate":"2021-10-28"},{"lineNumber":635,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":636,"author":{"gitId":"powzx"},"content":"The route finder helps you find if there are [`bus`](#341-bus-route-search-bus) routes between any two NUS shuttle ","lastModifiedDate":"2021-11-01"},{"lineNumber":637,"author":{"gitId":"powzx"},"content":"service bus stops. You will be recommended buses you can take to reach your destination. ","lastModifiedDate":"2021-11-01"},{"lineNumber":638,"author":{"gitId":"powzx"},"content":"You also have the ability to view the [`bus stop list`](#342-list-of-all-bus-stop-names-bus-stop-list) which contains ","lastModifiedDate":"2021-11-01"},{"lineNumber":639,"author":{"gitId":"powzx"},"content":"all the bus stop names which are covered by the NUS shuttle bus service. ","lastModifiedDate":"2021-10-21"},{"lineNumber":640,"author":{"gitId":"powzx"},"content":"This feature allows you to get familiarised with the NUS internal shuttle bus route.","lastModifiedDate":"2021-11-01"},{"lineNumber":641,"author":{"gitId":"shyamgj1900"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":642,"author":{"gitId":"powzx"},"content":"#### 3.4.1 Bus route search: `bus`","lastModifiedDate":"2021-10-28"},{"lineNumber":643,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":644,"author":{"gitId":"powzx"},"content":"**Format:** `bus /START_LOCATION /END_LOCATION`","lastModifiedDate":"2021-11-01"},{"lineNumber":645,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":646,"author":{"gitId":"powzx"},"content":"* Bus stop names are not case-sensitive","lastModifiedDate":"2021-10-21"},{"lineNumber":647,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":648,"author":{"gitId":"powzx"},"content":"**Example of usage:**","lastModifiedDate":"2021-10-28"},{"lineNumber":649,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":650,"author":{"gitId":"powzx"},"content":"* `bus /pgp /museum`","lastModifiedDate":"2021-10-19"},{"lineNumber":651,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":652,"author":{"gitId":"powzx"},"content":"This is what you should observe on the terminal when finding a bus route between 2 bus stops:","lastModifiedDate":"2021-11-01"},{"lineNumber":653,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":654,"author":{"gitId":"saravanamani1999"},"content":"```","lastModifiedDate":"2021-10-12"},{"lineNumber":655,"author":{"gitId":"powzx"},"content":"Bus [D2] goes from PGP to MUSEUM","lastModifiedDate":"2021-10-19"},{"lineNumber":656,"author":{"gitId":"powzx"},"content":"....................................................................","lastModifiedDate":"2021-10-12"},{"lineNumber":657,"author":{"gitId":"saravanamani1999"},"content":"```","lastModifiedDate":"2021-10-12"},{"lineNumber":658,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":659,"author":{"gitId":"powzx"},"content":"\u003e🔗 The naming convention of `START_LOCATION` and `END_LOCATION` should follow [`bus stop list`](#342-list-of-all-bus-stop-names-bus-stop-list).","lastModifiedDate":"2021-11-01"},{"lineNumber":660,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":661,"author":{"gitId":"powzx"},"content":"#### 3.4.2 List of all bus stop names: `bus stop list`","lastModifiedDate":"2021-10-28"},{"lineNumber":662,"author":{"gitId":"shyamgj1900"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":663,"author":{"gitId":"powzx"},"content":"**Format:** `bus stop list`","lastModifiedDate":"2021-10-28"},{"lineNumber":664,"author":{"gitId":"shyamgj1900"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":665,"author":{"gitId":"powzx"},"content":"**Example of usage:**","lastModifiedDate":"2021-10-28"},{"lineNumber":666,"author":{"gitId":"shyamgj1900"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":667,"author":{"gitId":"shyamgj1900"},"content":"* `bus stop list`","lastModifiedDate":"2021-10-21"},{"lineNumber":668,"author":{"gitId":"shyamgj1900"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":669,"author":{"gitId":"powzx"},"content":"This is what you should observe on the terminal when you list all the bus stop names in NUS:","lastModifiedDate":"2021-11-01"},{"lineNumber":670,"author":{"gitId":"shyamgj1900"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":671,"author":{"gitId":"shyamgj1900"},"content":"```","lastModifiedDate":"2021-10-21"},{"lineNumber":672,"author":{"gitId":"shyamgj1900"},"content":"._______________________________________________________________________________________________________.","lastModifiedDate":"2021-10-21"},{"lineNumber":673,"author":{"gitId":"shyamgj1900"},"content":"|_____BUS_A1_____|_____BUS_A2_____|_____BUS_D1_____|_____BUS_D2_____|_____BUS_E_____|_______BUS_K_______|","lastModifiedDate":"2021-10-21"},{"lineNumber":674,"author":{"gitId":"shyamgj1900"},"content":"|KR BUS TERMINAL |KR BUS TERMINAL |OPP HSSML       |PGP             |KENT VALE      |PGP                |","lastModifiedDate":"2021-10-21"},{"lineNumber":675,"author":{"gitId":"shyamgj1900"},"content":"|LT13            |IT              |OPP NUSS        |KR MRT          |EA             |KR MRT             |","lastModifiedDate":"2021-10-21"},{"lineNumber":676,"author":{"gitId":"shyamgj1900"},"content":"|AS 5            |OPP YIH         |COM 2           |LT27            |SDE 3          |LT27               |","lastModifiedDate":"2021-10-21"},{"lineNumber":677,"author":{"gitId":"shyamgj1900"},"content":"|COM 2           |MUSEUM          |VENTUS          |UHALL           |IT             |UHALL              |","lastModifiedDate":"2021-10-21"},{"lineNumber":678,"author":{"gitId":"shyamgj1900"},"content":"|BIZ 2           |UHC             |IT              |OPP UHC         |OPP YIH        |OPP UHC            |","lastModifiedDate":"2021-10-21"},{"lineNumber":679,"author":{"gitId":"shyamgj1900"},"content":"|OPP TCOMS       |OPP UHALL       |OPP YIH         |MUSEUM          |UTOWN          |YIH                |","lastModifiedDate":"2021-10-21"},{"lineNumber":680,"author":{"gitId":"shyamgj1900"},"content":"|PGP             |S 17            |MUSEUM          |UTOWN           |RAFFLES HALL   |CLB                |","lastModifiedDate":"2021-10-21"},{"lineNumber":681,"author":{"gitId":"shyamgj1900"},"content":"|KR MRT          |OPP KR MRT      |UTOWN           |UHC             |               |OPP SDE 3          |","lastModifiedDate":"2021-10-21"},{"lineNumber":682,"author":{"gitId":"shyamgj1900"},"content":"|LT27            |PGPR            |YIH             |OPP UHALL       |               |JAPANESE PRI SCHOOL|","lastModifiedDate":"2021-10-21"},{"lineNumber":683,"author":{"gitId":"shyamgj1900"},"content":"|UHALL           |TCOMS           |CLB             |S 17            |               |KENT VALE          |","lastModifiedDate":"2021-10-21"},{"lineNumber":684,"author":{"gitId":"shyamgj1900"},"content":"|OPP UHC         |OPP HSSML       |LT13            |OPP KR MRT      |               |MUSEUM             |","lastModifiedDate":"2021-10-21"},{"lineNumber":685,"author":{"gitId":"shyamgj1900"},"content":"|YIH             |OPP NUSS        |AS 5            |PGPR            |               |UHC                |","lastModifiedDate":"2021-10-21"},{"lineNumber":686,"author":{"gitId":"shyamgj1900"},"content":"|CLB             |COM 2           |BIZ 2           |                |               |OPP UHALL          |","lastModifiedDate":"2021-10-21"},{"lineNumber":687,"author":{"gitId":"shyamgj1900"},"content":"|                |VENTUS          |                |                |               |S 17               |","lastModifiedDate":"2021-10-21"},{"lineNumber":688,"author":{"gitId":"shyamgj1900"},"content":"|                |                |                |                |               |OPP KR MRT         |","lastModifiedDate":"2021-10-21"},{"lineNumber":689,"author":{"gitId":"shyamgj1900"},"content":"|________________|________________|________________|________________|_______________|PGPR_______________|","lastModifiedDate":"2021-10-21"},{"lineNumber":690,"author":{"gitId":"shyamgj1900"},"content":"....................................................................","lastModifiedDate":"2021-10-21"},{"lineNumber":691,"author":{"gitId":"shyamgj1900"},"content":"```","lastModifiedDate":"2021-10-21"},{"lineNumber":692,"author":{"gitId":"shyamgj1900"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":693,"author":{"gitId":"saravanamani1999"},"content":"\u003e⚠️ Note: Routes implemented cover Buses A1, A2, D1, D2, E and K. Also routes are recommended if there is direct route or an indirect route","lastModifiedDate":"2021-10-30"},{"lineNumber":694,"author":{"gitId":"shyamgj1900"},"content":"where the user needs to change and board another bus (only single change routes are recommended).","lastModifiedDate":"2021-10-21"},{"lineNumber":695,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":696,"author":{"gitId":"powzx"},"content":"\u003e🔗 Click [here](#2-list-of-commands) to return to the list of commands!","lastModifiedDate":"2021-11-01"},{"lineNumber":697,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":698,"author":{"gitId":"powzx"},"content":"### 3.5 CAP Calculator: `cap`","lastModifiedDate":"2021-10-28"},{"lineNumber":699,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":700,"author":{"gitId":"nonrnp"},"content":"The CAP calculator helps you to keep track on your CAP and set desired grades for your modules. ","lastModifiedDate":"2021-11-01"},{"lineNumber":701,"author":{"gitId":"nonrnp"},"content":"You can choose between different formats of module ","lastModifiedDate":"2021-11-01"},{"lineNumber":702,"author":{"gitId":"powzx"},"content":"([`cap mc`](#351-calculate-cap-using-modular-credit-cap-mc) or [`cap code`](#352-calculate-cap-using-module-code-cap-code)) ","lastModifiedDate":"2021-10-28"},{"lineNumber":703,"author":{"gitId":"powzx"},"content":"and the respective grade to allow more command flexibility.","lastModifiedDate":"2021-10-21"},{"lineNumber":704,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":705,"author":{"gitId":"powzx"},"content":"\u003e🔗 Visit [`module cap`](#316-calculate-overall-cap-from-modules-in-module-list-module-cap) to see how this feature can","lastModifiedDate":"2021-10-28"},{"lineNumber":706,"author":{"gitId":"powzx"},"content":"be used with the module manager.","lastModifiedDate":"2021-10-21"},{"lineNumber":707,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":708,"author":{"gitId":"powzx"},"content":"#### 3.5.1 Calculate CAP using modular credit: `cap mc`","lastModifiedDate":"2021-10-28"},{"lineNumber":709,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":710,"author":{"gitId":"powzx"},"content":"**Format:** `cap mc MC/GRADE`","lastModifiedDate":"2021-10-28"},{"lineNumber":711,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":712,"author":{"gitId":"powzx"},"content":"- `GRADE` is not case-sensitive, hence `a+` and `A+` will be treated as the same grade. ","lastModifiedDate":"2021-11-01"},{"lineNumber":713,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":714,"author":{"gitId":"powzx"},"content":"**Example of usage:**","lastModifiedDate":"2021-10-28"},{"lineNumber":715,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":716,"author":{"gitId":"nonrnp"},"content":"* `cap mc 4/A 6/B+ 4/B 4/B- 4/A+`","lastModifiedDate":"2021-10-19"},{"lineNumber":717,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":718,"author":{"gitId":"powzx"},"content":"This is what you should observe on the terminal when you calculate CAP using MCs and grades:","lastModifiedDate":"2021-11-01"},{"lineNumber":719,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":720,"author":{"gitId":"saravanamani1999"},"content":"```","lastModifiedDate":"2021-10-12"},{"lineNumber":721,"author":{"gitId":"nonrnp"},"content":"cap mc 4/A 6/B+ 4/B 4/B- 4/A+","lastModifiedDate":"2021-10-31"},{"lineNumber":722,"author":{"gitId":"nonrnp"},"content":"Your overall CAP will be 4.09 if you get your desired grades!","lastModifiedDate":"2021-11-01"},{"lineNumber":723,"author":{"gitId":"powzx"},"content":"....................................................................","lastModifiedDate":"2021-10-12"},{"lineNumber":724,"author":{"gitId":"nonrnp"},"content":"```","lastModifiedDate":"2021-10-20"},{"lineNumber":725,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":726,"author":{"gitId":"powzx"},"content":"\u003e⚠️ Note: For grades with plus (+) or minus (-) suffix, it is crucial to ensure that there is no empty space between","lastModifiedDate":"2021-11-01"},{"lineNumber":727,"author":{"gitId":"powzx"},"content":"the grade letter and the suffix. E.g. `A+` instead of `A +`","lastModifiedDate":"2021-11-01"},{"lineNumber":728,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":729,"author":{"gitId":"powzx"},"content":"#### 3.5.2 Calculate CAP using module code: `cap code`","lastModifiedDate":"2021-10-28"},{"lineNumber":730,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":731,"author":{"gitId":"powzx"},"content":"**Format:** `cap code CODE/GRADE`","lastModifiedDate":"2021-10-28"},{"lineNumber":732,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":733,"author":{"gitId":"powzx"},"content":"- `CODE` is not case-sensitive, hence `cs2113t` and `CS2113T` will give the same output.","lastModifiedDate":"2021-11-01"},{"lineNumber":734,"author":{"gitId":"powzx"},"content":"- `GRADE` is not case-sensitive, hence `a+` and `A+` will be treated as the same grade.","lastModifiedDate":"2021-11-01"},{"lineNumber":735,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":736,"author":{"gitId":"powzx"},"content":"**Example of usage:**","lastModifiedDate":"2021-10-28"},{"lineNumber":737,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":738,"author":{"gitId":"nonrnp"},"content":"* `cap code CS2113T/A CS2101/C CG2027/B-`","lastModifiedDate":"2021-10-20"},{"lineNumber":739,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":740,"author":{"gitId":"powzx"},"content":"This is what you should observe on the terminal when you calculate CAP using module code and grades:","lastModifiedDate":"2021-11-01"},{"lineNumber":741,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":742,"author":{"gitId":"nonrnp"},"content":"```","lastModifiedDate":"2021-10-20"},{"lineNumber":743,"author":{"gitId":"nonrnp"},"content":"cap code CS2113T/A CS2101/C CG2027/B-","lastModifiedDate":"2021-10-19"},{"lineNumber":744,"author":{"gitId":"nonrnp"},"content":"Your overall CAP will be 3.40 if you get your desired grades!","lastModifiedDate":"2021-11-01"},{"lineNumber":745,"author":{"gitId":"nonrnp"},"content":"....................................................................","lastModifiedDate":"2021-10-20"},{"lineNumber":746,"author":{"gitId":"saravanamani1999"},"content":"```","lastModifiedDate":"2021-10-12"},{"lineNumber":747,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":748,"author":{"gitId":"powzx"},"content":"\u003e⚠️ Note: For grades with plus (+) or minus (-) suffix, it is crucial to ensure that there is no empty space between","lastModifiedDate":"2021-11-01"},{"lineNumber":749,"author":{"gitId":"powzx"},"content":"the grade letter and the suffix. E.g. `A+` instead of `A +`","lastModifiedDate":"2021-11-01"},{"lineNumber":750,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":751,"author":{"gitId":"powzx"},"content":"\u003e🔗 Click [here](#2-list-of-commands) to return to the list of commands!","lastModifiedDate":"2021-11-01"},{"lineNumber":752,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":753,"author":{"gitId":"powzx"},"content":"### 3.6 View menu: `help`","lastModifiedDate":"2021-10-28"},{"lineNumber":754,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":755,"author":{"gitId":"powzx"},"content":"Views the different commands available.","lastModifiedDate":"2021-10-19"},{"lineNumber":756,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":757,"author":{"gitId":"powzx"},"content":"This is what you should observe on the terminal when you send a help command:","lastModifiedDate":"2021-10-28"},{"lineNumber":758,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":759,"author":{"gitId":"saravanamani1999"},"content":"```","lastModifiedDate":"2021-10-07"},{"lineNumber":760,"author":{"gitId":"saravanamani1999"},"content":"help","lastModifiedDate":"2021-10-07"},{"lineNumber":761,"author":{"gitId":"saravanamani1999"},"content":"Here are the list of commands:","lastModifiedDate":"2021-10-07"},{"lineNumber":762,"author":{"gitId":"nonrnp"},"content":"1. cap mc MC/GRADE - Calculates the overall cap from MC","lastModifiedDate":"2021-11-01"},{"lineNumber":763,"author":{"gitId":"nonrnp"},"content":"2. cap code MODULE_CODE/GRADE - Calculates the overall cap from MODULE_CODE","lastModifiedDate":"2021-11-01"},{"lineNumber":764,"author":{"gitId":"shyamgj1900"},"content":"3. bus /START_POINT /END_POINT - Check for a NUS bus route from stop to another","lastModifiedDate":"2021-10-12"},{"lineNumber":765,"author":{"gitId":"nonrnp"},"content":"4. bus stop list - List all the bus stop names","lastModifiedDate":"2021-10-20"},{"lineNumber":766,"author":{"gitId":"nonrnp"},"content":"5. module view MODULE_CODE - View the module details","lastModifiedDate":"2021-10-20"},{"lineNumber":767,"author":{"gitId":"giterator"},"content":"6. module add MODULE_CODE - Add a module to your module list","lastModifiedDate":"2021-11-02"},{"lineNumber":768,"author":{"gitId":"nonrnp"},"content":"7. module delete MODULE_CODE - Delete a module from your module list","lastModifiedDate":"2021-10-20"},{"lineNumber":769,"author":{"gitId":"nonrnp"},"content":"8. module list - List all modules stored in your module list","lastModifiedDate":"2021-10-20"},{"lineNumber":770,"author":{"gitId":"nonrnp"},"content":"9. module grade CODE/GRADE - Update the module CODE from your module list with a new grade GRADE","lastModifiedDate":"2021-10-20"},{"lineNumber":771,"author":{"gitId":"nonrnp"},"content":"10. module cap - Calculate the overall CAP of modules stored in your module list","lastModifiedDate":"2021-10-20"},{"lineNumber":772,"author":{"gitId":"nonrnp"},"content":"11. module cap DESIRED_CAP - Calculate the average minimum grade for the other modules needed","lastModifiedDate":"2021-10-20"},{"lineNumber":773,"author":{"gitId":"nonrnp"},"content":"    to achieve DESIRED_CAP","lastModifiedDate":"2021-10-20"},{"lineNumber":774,"author":{"gitId":"nonrnp"},"content":"12. planner add DESCRIPTION/DATE/START_TIME/END_TIME - Add an event to your schedule","lastModifiedDate":"2021-10-20"},{"lineNumber":775,"author":{"gitId":"nonrnp"},"content":"13. planner list DATE - Lists events on a certain date","lastModifiedDate":"2021-10-20"},{"lineNumber":776,"author":{"gitId":"nonrnp"},"content":"14. planner delete DATE - Delete an event on a certain date","lastModifiedDate":"2021-10-20"},{"lineNumber":777,"author":{"gitId":"nonrnp"},"content":"15. timetable add MODULE_CODE/LESSON_TYPE/DAY/START_TIME/END_TIME - Add lesson to timetable","lastModifiedDate":"2021-10-20"},{"lineNumber":778,"author":{"gitId":"saravanamani1999"},"content":"16. timetable update MODULE_CODE/LESSON_TYPE/OLD_DAY/OLD_START_TIME/NEW_DAY/NEW_START_TIME","lastModifiedDate":"2021-11-05"},{"lineNumber":779,"author":{"gitId":"saravanamani1999"},"content":"    - shift a lesson to another timing with the same duration","lastModifiedDate":"2021-11-05"},{"lineNumber":780,"author":{"gitId":"saravanamani1999"},"content":"17. timetable delete MODULE_CODE/LESSON_TYPE/DAY/START_TIME - delete a specific lesson","lastModifiedDate":"2021-11-05"},{"lineNumber":781,"author":{"gitId":"nonrnp"},"content":"18. timetable view - Print the timetable on CLI","lastModifiedDate":"2021-10-20"},{"lineNumber":782,"author":{"gitId":"saravanamani1999"},"content":"19. timetable list DAY - List the lessons taking place on a specific day with their timings","lastModifiedDate":"2021-11-05"},{"lineNumber":783,"author":{"gitId":"saravanamani1999"},"content":"20. help - View this menu again","lastModifiedDate":"2021-11-05"},{"lineNumber":784,"author":{"gitId":"saravanamani1999"},"content":"21. bye - Exit Kolinux","lastModifiedDate":"2021-11-05"},{"lineNumber":785,"author":{"gitId":"powzx"},"content":"....................................................................","lastModifiedDate":"2021-10-12"},{"lineNumber":786,"author":{"gitId":"saravanamani1999"},"content":"```","lastModifiedDate":"2021-10-07"},{"lineNumber":787,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":788,"author":{"gitId":"powzx"},"content":"\u003e🔗 Click [here](#2-list-of-commands) to return to the list of commands!","lastModifiedDate":"2021-11-01"},{"lineNumber":789,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":790,"author":{"gitId":"powzx"},"content":"### 3.7 Exit: `bye`","lastModifiedDate":"2021-10-28"},{"lineNumber":791,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":792,"author":{"gitId":"powzx"},"content":"Terminates _Kolinux_.","lastModifiedDate":"2021-10-28"},{"lineNumber":793,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":794,"author":{"gitId":"powzx"},"content":"This is what you should observe on the terminal upon termination:","lastModifiedDate":"2021-10-28"},{"lineNumber":795,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":796,"author":{"gitId":"powzx"},"content":"```","lastModifiedDate":"2021-10-10"},{"lineNumber":797,"author":{"gitId":"powzx"},"content":"bye","lastModifiedDate":"2021-10-10"},{"lineNumber":798,"author":{"gitId":"powzx"},"content":"Bye! Thank you for using Kolinux","lastModifiedDate":"2021-10-10"},{"lineNumber":799,"author":{"gitId":"powzx"},"content":"....................................................................","lastModifiedDate":"2021-10-12"},{"lineNumber":800,"author":{"gitId":"powzx"},"content":"```","lastModifiedDate":"2021-10-10"},{"lineNumber":801,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":802,"author":{"gitId":"powzx"},"content":"\u003e🔗 Click [here](#2-list-of-commands) to return to the list of commands!","lastModifiedDate":"2021-11-01"},{"lineNumber":803,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":804,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":805,"author":{"gitId":"saravanamani1999"},"content":"## 4. Current limitations ","lastModifiedDate":"2021-11-03"},{"lineNumber":806,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":807,"author":{"gitId":"saravanamani1999"},"content":"### NUSMods API","lastModifiedDate":"2021-11-03"},{"lineNumber":808,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":809,"author":{"gitId":"saravanamani1999"},"content":"1. Due to the limitations in the project where our application is expected to perform without the use of internet, we ","lastModifiedDate":"2021-11-03"},{"lineNumber":810,"author":{"gitId":"saravanamani1999"},"content":"are not able to get live updates from the api, and we have to work off the latest json file with relevant module ","lastModifiedDate":"2021-11-03"},{"lineNumber":811,"author":{"gitId":"saravanamani1999"},"content":"details.","lastModifiedDate":"2021-11-03"},{"lineNumber":812,"author":{"gitId":"saravanamani1999"},"content":"2. We did not extract the data for different timings for each lesson in a specific module as they are separated into ","lastModifiedDate":"2021-11-03"},{"lineNumber":813,"author":{"gitId":"saravanamani1999"},"content":"individual json files for each module in the NUSMods api, as we wanted to be space efficient and stay within the ","lastModifiedDate":"2021-11-03"},{"lineNumber":814,"author":{"gitId":"saravanamani1999"},"content":"memory space limits set we did not proceed with extracting this information. Also given that our product is expected ","lastModifiedDate":"2021-11-03"},{"lineNumber":815,"author":{"gitId":"saravanamani1999"},"content":"to function without internet connection, we couldn\u0027t implement making a http request to NUSMods api based on user input ","lastModifiedDate":"2021-11-03"},{"lineNumber":816,"author":{"gitId":"saravanamani1999"},"content":"to retrieve these timings. Which is why the timings of lessons are not yet available as it\u0027s out of the current ","lastModifiedDate":"2021-11-03"},{"lineNumber":817,"author":{"gitId":"saravanamani1999"},"content":"project\u0027s scope.","lastModifiedDate":"2021-11-03"},{"lineNumber":818,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":819,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":820,"author":{"gitId":"saravanamani1999"},"content":"## 5. FAQ","lastModifiedDate":"2021-11-03"},{"lineNumber":821,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":822,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another computer? ","lastModifiedDate":"2020-05-24"},{"lineNumber":823,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":824,"author":{"gitId":"powzx"},"content":"**A**: Locate the `/data` directory stored in the same folder as `Kolinux.jar`. Copy the directory to the other ","lastModifiedDate":"2021-10-12"},{"lineNumber":825,"author":{"gitId":"powzx"},"content":"computer, in the same folder as `Kolinux.jar`. The data will be automatically read upon starting up `Kolinux`.","lastModifiedDate":"2021-10-12"},{"lineNumber":826,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":827,"author":{"gitId":"saravanamani1999"},"content":"**Q**: Can I add recurring events to the `planner`?","lastModifiedDate":"2021-11-03"},{"lineNumber":828,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":829,"author":{"gitId":"saravanamani1999"},"content":"**A**: Our current version doesn\u0027t support this functionality as we wanted to expand push forward the wide ","lastModifiedDate":"2021-11-03"},{"lineNumber":830,"author":{"gitId":"saravanamani1999"},"content":"range of features before expanding each feature more in depth. For now, you would have to add the events to the ","lastModifiedDate":"2021-11-03"},{"lineNumber":831,"author":{"gitId":"saravanamani1999"},"content":"specified dates individually","lastModifiedDate":"2021-11-03"},{"lineNumber":832,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":833,"author":{"gitId":"saravanamani1999"},"content":"**Q**: Can I add 2 lessons to the same time slot in the `timetable`?","lastModifiedDate":"2021-11-03"},{"lineNumber":834,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":835,"author":{"gitId":"saravanamani1999"},"content":"**A**: Our current version doesn\u0027t support this as we want to keep our timetable as concise as possible ensuring the ","lastModifiedDate":"2021-11-03"},{"lineNumber":836,"author":{"gitId":"saravanamani1999"},"content":"readability of it on the CLI, thus what you might want to consider doing is to add the lessons directly to the `planner`","lastModifiedDate":"2021-11-03"},{"lineNumber":837,"author":{"gitId":"saravanamani1999"},"content":"as the `planner` allows for conflicting events","lastModifiedDate":"2021-11-03"},{"lineNumber":838,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":839,"author":{"gitId":"saravanamani1999"},"content":"## 6. Data Storage","lastModifiedDate":"2021-11-03"},{"lineNumber":840,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":841,"author":{"gitId":"powzx"},"content":"_Kolinux_ automatically creates a directory `/data` upon the first start up. The directory consists of the files:","lastModifiedDate":"2021-10-28"},{"lineNumber":842,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":843,"author":{"gitId":"powzx"},"content":"`logger.log` - User activity log of the most recent session.","lastModifiedDate":"2021-10-12"},{"lineNumber":844,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":845,"author":{"gitId":"powzx"},"content":"`moduleList.txt` - Your module manager data.","lastModifiedDate":"2021-10-28"},{"lineNumber":846,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":847,"author":{"gitId":"powzx"},"content":"`planner.txt` - Your planner data.","lastModifiedDate":"2021-10-28"},{"lineNumber":848,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":849,"author":{"gitId":"powzx"},"content":"`timetable.txt` - Your timetable data.","lastModifiedDate":"2021-10-28"},{"lineNumber":850,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":851,"author":{"gitId":"powzx"},"content":"\u003e❗ You are strongly advised not to modify these files as it can corrupt important user data and cause data loss.","lastModifiedDate":"2021-10-28"},{"lineNumber":852,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":853,"author":{"gitId":"saravanamani1999"},"content":"## 7. Contact Us","lastModifiedDate":"2021-11-03"},{"lineNumber":854,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":855,"author":{"gitId":"powzx"},"content":"Our team welcomes you to contact us when faced with issues that this user guide fails to cover. We are","lastModifiedDate":"2021-10-28"},{"lineNumber":856,"author":{"gitId":"powzx"},"content":"also open to any suggestions that you may have to improve _Kolinux_. 😃","lastModifiedDate":"2021-10-28"},{"lineNumber":857,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":858,"author":{"gitId":"powzx"},"content":"You may find our contact information [here](AboutUs.md).","lastModifiedDate":"2021-10-28"},{"lineNumber":859,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":860,"author":{"gitId":"powzx"},"content":"\u003e🔗 Click [here](#2-list-of-commands) to return to the list of commands!","lastModifiedDate":"2021-11-01"}],"authorContributionMap":{"giterator":49,"nonrnp":78,"powzx":376,"saravanamani1999":290,"shyamgj1900":37,"-":30}},{"path":"docs/assets/plantuml/ArchitectureDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"powzx"},"content":"@startuml","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"powzx"},"content":"\u0027https://plantuml.com/component-diagram","lastModifiedDate":"2021-10-23"},{"lineNumber":3,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":4,"author":{"gitId":"powzx"},"content":"!include Style.puml","lastModifiedDate":"2021-10-23"},{"lineNumber":5,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":6,"author":{"gitId":"powzx"},"content":"component Main MAIN_COLOR","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"powzx"},"content":"component Kolinux KOLINUX_COLOR","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"powzx"},"content":"package util UTIL_COLOR {","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"powzx"},"content":"    component Ui UTIL_COLOR","lastModifiedDate":"2021-10-23"},{"lineNumber":11,"author":{"gitId":"powzx"},"content":"    component Parser UTIL_COLOR","lastModifiedDate":"2021-10-23"},{"lineNumber":12,"author":{"gitId":"powzx"},"content":"    component DirectoryCreator UTIL_COLOR","lastModifiedDate":"2021-10-23"},{"lineNumber":13,"author":{"gitId":"powzx"},"content":"    component KolinuxLogger UTIL_COLOR","lastModifiedDate":"2021-10-23"},{"lineNumber":14,"author":{"gitId":"powzx"},"content":"    component PromptHandler UTIL_COLOR","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"powzx"},"content":"}","lastModifiedDate":"2021-10-23"},{"lineNumber":16,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":17,"author":{"gitId":"powzx"},"content":"package commands COMMANDS_COLOR {","lastModifiedDate":"2021-10-23"},{"lineNumber":18,"author":{"gitId":"powzx"},"content":"}","lastModifiedDate":"2021-10-23"},{"lineNumber":19,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":20,"author":{"gitId":"powzx"},"content":"package exceptions EXCEPTIONS_COLOR {","lastModifiedDate":"2021-10-23"},{"lineNumber":21,"author":{"gitId":"powzx"},"content":"    component KolinuxException EXCEPTIONS_COLOR","lastModifiedDate":"2021-10-23"},{"lineNumber":22,"author":{"gitId":"powzx"},"content":"}","lastModifiedDate":"2021-10-23"},{"lineNumber":23,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":24,"author":{"gitId":"powzx"},"content":"package module MODULE_COLOR {","lastModifiedDate":"2021-10-23"},{"lineNumber":25,"author":{"gitId":"powzx"},"content":"}","lastModifiedDate":"2021-10-23"},{"lineNumber":26,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":27,"author":{"gitId":"powzx"},"content":"package planner PLANNER_COLOR {","lastModifiedDate":"2021-10-23"},{"lineNumber":28,"author":{"gitId":"powzx"},"content":"}","lastModifiedDate":"2021-10-23"},{"lineNumber":29,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":30,"author":{"gitId":"powzx"},"content":"package routes ROUTES_COLOR {","lastModifiedDate":"2021-10-23"},{"lineNumber":31,"author":{"gitId":"powzx"},"content":"}","lastModifiedDate":"2021-10-23"},{"lineNumber":32,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":33,"author":{"gitId":"powzx"},"content":"package timetable TIMETABLE_COLOR {","lastModifiedDate":"2021-10-23"},{"lineNumber":34,"author":{"gitId":"powzx"},"content":"}","lastModifiedDate":"2021-10-23"},{"lineNumber":35,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":36,"author":{"gitId":"powzx"},"content":"package capcalculator CAPCALCULATOR_COLOR {","lastModifiedDate":"2021-10-23"},{"lineNumber":37,"author":{"gitId":"powzx"},"content":"}","lastModifiedDate":"2021-10-23"},{"lineNumber":38,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":39,"author":{"gitId":"powzx"},"content":"Main .up.\u003e Kolinux","lastModifiedDate":"2021-10-23"},{"lineNumber":40,"author":{"gitId":"powzx"},"content":"Kolinux -up-\u003e Ui","lastModifiedDate":"2021-10-23"},{"lineNumber":41,"author":{"gitId":"powzx"},"content":"Kolinux .up.\u003e Parser","lastModifiedDate":"2021-10-23"},{"lineNumber":42,"author":{"gitId":"powzx"},"content":"Kolinux -up-\u003e DirectoryCreator","lastModifiedDate":"2021-10-23"},{"lineNumber":43,"author":{"gitId":"powzx"},"content":"Kolinux -up-\u003e KolinuxLogger","lastModifiedDate":"2021-10-23"},{"lineNumber":44,"author":{"gitId":"powzx"},"content":"Kolinux -right-\u003e planner","lastModifiedDate":"2021-10-23"},{"lineNumber":45,"author":{"gitId":"powzx"},"content":"Kolinux .down.\u003e module","lastModifiedDate":"2021-10-23"},{"lineNumber":46,"author":{"gitId":"powzx"},"content":"Kolinux .down.\u003e timetable","lastModifiedDate":"2021-10-23"},{"lineNumber":47,"author":{"gitId":"powzx"},"content":"Kolinux .up.\u003e commands","lastModifiedDate":"2021-10-23"},{"lineNumber":48,"author":{"gitId":"powzx"},"content":"Parser .up.\u003e commands","lastModifiedDate":"2021-10-23"},{"lineNumber":49,"author":{"gitId":"powzx"},"content":"PromptHandler \u003c-right-\u003e Ui","lastModifiedDate":"2021-11-04"},{"lineNumber":50,"author":{"gitId":"powzx"},"content":"PromptHandler -left-\u003e KolinuxLogger","lastModifiedDate":"2021-11-04"},{"lineNumber":51,"author":{"gitId":"powzx"},"content":"Ui .up.\u003e commands","lastModifiedDate":"2021-10-23"},{"lineNumber":52,"author":{"gitId":"powzx"},"content":"commands .down.\u003e PromptHandler","lastModifiedDate":"2021-11-04"},{"lineNumber":53,"author":{"gitId":"powzx"},"content":"commands -down-\u003e KolinuxLogger","lastModifiedDate":"2021-10-23"},{"lineNumber":54,"author":{"gitId":"powzx"},"content":"commands -down-\u003e module","lastModifiedDate":"2021-10-23"},{"lineNumber":55,"author":{"gitId":"powzx"},"content":"commands -up-\u003e routes","lastModifiedDate":"2021-10-23"},{"lineNumber":56,"author":{"gitId":"powzx"},"content":"commands -up-\u003e capcalculator","lastModifiedDate":"2021-10-23"},{"lineNumber":57,"author":{"gitId":"powzx"},"content":"commands -up-\u003e timetable","lastModifiedDate":"2021-10-23"},{"lineNumber":58,"author":{"gitId":"powzx"},"content":"commands -down-\u003e planner","lastModifiedDate":"2021-10-23"},{"lineNumber":59,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":60,"author":{"gitId":"powzx"},"content":"@enduml","lastModifiedDate":"2021-10-23"}],"authorContributionMap":{"powzx":60}},{"path":"docs/assets/plantuml/BusRouteClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"shyamgj1900"},"content":"@startuml","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"shyamgj1900"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"shyamgj1900"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"shyamgj1900"},"content":"!include Style.puml","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"shyamgj1900"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"shyamgj1900"},"content":"skinparam classAttributeIconSize 0","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"shyamgj1900"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"shyamgj1900"},"content":"hide circle","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"shyamgj1900"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"shyamgj1900"},"content":"class BusRouteCommand","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"shyamgj1900"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"shyamgj1900"},"content":"package \"routes\" \u003c\u003crectangle\u003e\u003e {","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"shyamgj1900"},"content":"  class Location","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"shyamgj1900"},"content":"  class Route","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"shyamgj1900"},"content":"  class Graph","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"shyamgj1900"},"content":"  class DirectRoute","lastModifiedDate":"2021-10-30"},{"lineNumber":17,"author":{"gitId":"shyamgj1900"},"content":"  class IndirectRoute","lastModifiedDate":"2021-10-30"},{"lineNumber":18,"author":{"gitId":"shyamgj1900"},"content":"}","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"shyamgj1900"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"powzx"},"content":"class BusRouteCommand COMMANDS_COLOR {","lastModifiedDate":"2021-11-01"},{"lineNumber":21,"author":{"gitId":"shyamgj1900"},"content":"   -input: String","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"shyamgj1900"},"content":"   -splitinput: String[]","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"shyamgj1900"},"content":"   +getBusRoute(): String","lastModifiedDate":"2021-10-30"},{"lineNumber":24,"author":{"gitId":"shyamgj1900"},"content":"   +executeCommand(): CommandResult","lastModifiedDate":"2021-10-25"},{"lineNumber":25,"author":{"gitId":"shyamgj1900"},"content":"}","lastModifiedDate":"2021-10-25"},{"lineNumber":26,"author":{"gitId":"shyamgj1900"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":27,"author":{"gitId":"powzx"},"content":"class Location ROUTES_COLOR {","lastModifiedDate":"2021-11-01"},{"lineNumber":28,"author":{"gitId":"shyamgj1900"},"content":"   +getBusStopList(): String","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"shyamgj1900"},"content":"   +getStopNumberAOne(command: String): int","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"shyamgj1900"},"content":"   +getStopNumberATwo(command: String): int","lastModifiedDate":"2021-10-25"},{"lineNumber":31,"author":{"gitId":"shyamgj1900"},"content":"   +getStopNumberDOne(command: String): int","lastModifiedDate":"2021-10-25"},{"lineNumber":32,"author":{"gitId":"shyamgj1900"},"content":"   +getStopNumberDTwo(command: String): int","lastModifiedDate":"2021-10-25"},{"lineNumber":33,"author":{"gitId":"shyamgj1900"},"content":"   +getStopNumberE(command: String): int","lastModifiedDate":"2021-10-25"},{"lineNumber":34,"author":{"gitId":"shyamgj1900"},"content":"   +getStopNumberK(command: String): int","lastModifiedDate":"2021-10-25"},{"lineNumber":35,"author":{"gitId":"shyamgj1900"},"content":"}","lastModifiedDate":"2021-10-25"},{"lineNumber":36,"author":{"gitId":"shyamgj1900"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":37,"author":{"gitId":"powzx"},"content":"class Route ROUTES_COLOR {","lastModifiedDate":"2021-11-01"},{"lineNumber":38,"author":{"gitId":"shyamgj1900"},"content":"   -busStops: String[]","lastModifiedDate":"2021-10-25"},{"lineNumber":39,"author":{"gitId":"shyamgj1900"},"content":"   -startLocation: String","lastModifiedDate":"2021-10-25"},{"lineNumber":40,"author":{"gitId":"shyamgj1900"},"content":"   -endLocation: String","lastModifiedDate":"2021-10-25"},{"lineNumber":41,"author":{"gitId":"shyamgj1900"},"content":"   -vertexCodeA1: String[]","lastModifiedDate":"2021-10-25"},{"lineNumber":42,"author":{"gitId":"shyamgj1900"},"content":"   -vertexCodeA2: String[]","lastModifiedDate":"2021-10-25"},{"lineNumber":43,"author":{"gitId":"shyamgj1900"},"content":"   -vertexCodeD1: String[]","lastModifiedDate":"2021-10-25"},{"lineNumber":44,"author":{"gitId":"shyamgj1900"},"content":"   -vertexCodeD2: String[]","lastModifiedDate":"2021-10-25"},{"lineNumber":45,"author":{"gitId":"shyamgj1900"},"content":"   -vertexCodeE: String[]","lastModifiedDate":"2021-10-25"},{"lineNumber":46,"author":{"gitId":"shyamgj1900"},"content":"   -vertexCodeK: String[]","lastModifiedDate":"2021-10-25"},{"lineNumber":47,"author":{"gitId":"shyamgj1900"},"content":"   -graph: Graph[]","lastModifiedDate":"2021-10-30"},{"lineNumber":48,"author":{"gitId":"shyamgj1900"},"content":"   -vertices: Arraylist\u003cString\u003e[]","lastModifiedDate":"2021-10-25"},{"lineNumber":49,"author":{"gitId":"shyamgj1900"},"content":"   +setRoute(vertices: Arraylist\u003cString\u003e, graph: Graph): void","lastModifiedDate":"2021-10-25"},{"lineNumber":50,"author":{"gitId":"shyamgj1900"},"content":"   +getBusStopNumber(): void","lastModifiedDate":"2021-10-25"},{"lineNumber":51,"author":{"gitId":"shyamgj1900"},"content":"   {static} readFromFile(): void","lastModifiedDate":"2021-10-30"},{"lineNumber":52,"author":{"gitId":"shyamgj1900"},"content":"}","lastModifiedDate":"2021-10-30"},{"lineNumber":53,"author":{"gitId":"shyamgj1900"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":54,"author":{"gitId":"powzx"},"content":"class DirectRoute ROUTES_COLOR {","lastModifiedDate":"2021-11-01"},{"lineNumber":55,"author":{"gitId":"shyamgj1900"},"content":"   +checkDirectRoutes(busNumbers: Arraylist\u003cString\u003e): boolean","lastModifiedDate":"2021-10-25"},{"lineNumber":56,"author":{"gitId":"shyamgj1900"},"content":"   +checkDirectAlternateRoutes(busNumbers: Arraylist\u003cString\u003e): String","lastModifiedDate":"2021-10-30"},{"lineNumber":57,"author":{"gitId":"shyamgj1900"},"content":"}","lastModifiedDate":"2021-10-30"},{"lineNumber":58,"author":{"gitId":"shyamgj1900"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":59,"author":{"gitId":"powzx"},"content":"class IndirectRoute ROUTES_COLOR {","lastModifiedDate":"2021-11-01"},{"lineNumber":60,"author":{"gitId":"shyamgj1900"},"content":"   +checkIndirectRoutes(busOne: Arraylist\u003cString\u003e, busTwo: Arraylist\u003cString\u003e, midLoc: Arraylist\u003cString\u003e)","lastModifiedDate":"2021-10-30"},{"lineNumber":61,"author":{"gitId":"shyamgj1900"},"content":"}","lastModifiedDate":"2021-10-25"},{"lineNumber":62,"author":{"gitId":"shyamgj1900"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":63,"author":{"gitId":"powzx"},"content":"class Graph ROUTES_COLOR {","lastModifiedDate":"2021-11-01"},{"lineNumber":64,"author":{"gitId":"shyamgj1900"},"content":"   -vertex: int","lastModifiedDate":"2021-10-25"},{"lineNumber":65,"author":{"gitId":"shyamgj1900"},"content":"   -adj: Arraylist\u003cInteger\u003e[]","lastModifiedDate":"2021-10-25"},{"lineNumber":66,"author":{"gitId":"shyamgj1900"},"content":"   +addEdge(u: int, v: int): void","lastModifiedDate":"2021-10-25"},{"lineNumber":67,"author":{"gitId":"shyamgj1900"},"content":"   +isConnected(u: int, v: int): boolean","lastModifiedDate":"2021-10-25"},{"lineNumber":68,"author":{"gitId":"shyamgj1900"},"content":"}","lastModifiedDate":"2021-10-25"},{"lineNumber":69,"author":{"gitId":"shyamgj1900"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":70,"author":{"gitId":"shyamgj1900"},"content":"BusRouteCommand --\u003e \"0..1\" Location : location","lastModifiedDate":"2021-10-30"},{"lineNumber":71,"author":{"gitId":"shyamgj1900"},"content":"BusRouteCommand -\u003e \"0..1\" DirectRoute : directroute","lastModifiedDate":"2021-10-30"},{"lineNumber":72,"author":{"gitId":"shyamgj1900"},"content":"BusRouteCommand -\u003e \"0..1\" IndirectRoute : indirectroute","lastModifiedDate":"2021-10-30"},{"lineNumber":73,"author":{"gitId":"shyamgj1900"},"content":"Route -\u003e \"1\" Location : location","lastModifiedDate":"2021-10-25"},{"lineNumber":74,"author":{"gitId":"shyamgj1900"},"content":"Route -\u003e \"6\" Graph : graph","lastModifiedDate":"2021-10-30"},{"lineNumber":75,"author":{"gitId":"shyamgj1900"},"content":"Route \u003c|-- DirectRoute","lastModifiedDate":"2021-10-30"},{"lineNumber":76,"author":{"gitId":"shyamgj1900"},"content":"Route \u003c|-- IndirectRoute","lastModifiedDate":"2021-10-30"},{"lineNumber":77,"author":{"gitId":"shyamgj1900"},"content":"Location .\u003e Route","lastModifiedDate":"2021-10-30"},{"lineNumber":78,"author":{"gitId":"shyamgj1900"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":79,"author":{"gitId":"shyamgj1900"},"content":"@enduml","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"shyamgj1900":73,"powzx":6}},{"path":"docs/assets/plantuml/BusRouteSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"shyamgj1900"},"content":"@startuml","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"shyamgj1900"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"shyamgj1900"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"shyamgj1900"},"content":"!include Style.puml","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"shyamgj1900"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"shyamgj1900"},"content":"hide footbox","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"powzx"},"content":"participant \":Parser\" UTIL_COLOR","lastModifiedDate":"2021-11-01"},{"lineNumber":8,"author":{"gitId":"powzx"},"content":"participant \":BusRouteCommand\" COMMANDS_COLOR","lastModifiedDate":"2021-11-01"},{"lineNumber":9,"author":{"gitId":"powzx"},"content":"participant \":Location\" ROUTES_COLOR","lastModifiedDate":"2021-11-01"},{"lineNumber":10,"author":{"gitId":"powzx"},"content":"participant \":DirectRoute\" ROUTES_COLOR","lastModifiedDate":"2021-11-01"},{"lineNumber":11,"author":{"gitId":"powzx"},"content":"participant \":IndirectRoute\" ROUTES_COLOR","lastModifiedDate":"2021-11-01"},{"lineNumber":12,"author":{"gitId":"powzx"},"content":"-\u003e \":Parser\": parse input","lastModifiedDate":"2021-11-03"},{"lineNumber":13,"author":{"gitId":"shyamgj1900"},"content":"activate \":Parser\"","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"shyamgj1900"},"content":"create \":BusRouteCommand\"","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"powzx"},"content":"\":Parser\" -\u003e \":BusRouteCommand\" : create with input","lastModifiedDate":"2021-11-03"},{"lineNumber":16,"author":{"gitId":"shyamgj1900"},"content":"activate \":BusRouteCommand\"","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"shyamgj1900"},"content":"return command","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"shyamgj1900"},"content":"deactivate \":BusRouteCommand\"","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"shyamgj1900"},"content":"\u003c-- \":Parser\": command","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"shyamgj1900"},"content":"deactivate \":Parser\"","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"shyamgj1900"},"content":"-\u003e \":BusRouteCommand\": executeCommand()","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"shyamgj1900"},"content":"activate \":BusRouteCommand\"","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"shyamgj1900"},"content":"alt command \u003d\u003d bus stop list","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"shyamgj1900"},"content":"create \":Location\"","lastModifiedDate":"2021-10-25"},{"lineNumber":25,"author":{"gitId":"shyamgj1900"},"content":"\":BusRouteCommand\" -\u003e \":Location\"","lastModifiedDate":"2021-10-25"},{"lineNumber":26,"author":{"gitId":"shyamgj1900"},"content":"activate \":Location\"","lastModifiedDate":"2021-10-25"},{"lineNumber":27,"author":{"gitId":"shyamgj1900"},"content":"return","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"shyamgj1900"},"content":"deactivate \":Location\"","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"shyamgj1900"},"content":"\":BusRouteCommand\" -\u003e \":Location\": getBusStopList()","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"shyamgj1900"},"content":"activate \":Location\"","lastModifiedDate":"2021-10-25"},{"lineNumber":31,"author":{"gitId":"shyamgj1900"},"content":"\":Location\" --\u003e \":BusRouteCommand\": List of all stops","lastModifiedDate":"2021-10-25"},{"lineNumber":32,"author":{"gitId":"shyamgj1900"},"content":"deactivate \":Location\"","lastModifiedDate":"2021-10-25"},{"lineNumber":33,"author":{"gitId":"shyamgj1900"},"content":"else else","lastModifiedDate":"2021-10-25"},{"lineNumber":34,"author":{"gitId":"shyamgj1900"},"content":"\":BusRouteCommand\" -\u003e \":BusRouteCommand\": getBusRoutes()","lastModifiedDate":"2021-10-30"},{"lineNumber":35,"author":{"gitId":"shyamgj1900"},"content":"activate \":BusRouteCommand\"","lastModifiedDate":"2021-10-30"},{"lineNumber":36,"author":{"gitId":"shyamgj1900"},"content":"create \":DirectRoute\"","lastModifiedDate":"2021-10-30"},{"lineNumber":37,"author":{"gitId":"shyamgj1900"},"content":"\":BusRouteCommand\" -\u003e \":DirectRoute\": checkDirectRoute()","lastModifiedDate":"2021-10-30"},{"lineNumber":38,"author":{"gitId":"shyamgj1900"},"content":"activate \":DirectRoute\"","lastModifiedDate":"2021-10-30"},{"lineNumber":39,"author":{"gitId":"shyamgj1900"},"content":"\":DirectRoute\" -\u003e \":DirectRoute\": getBusStopNames()","lastModifiedDate":"2021-10-30"},{"lineNumber":40,"author":{"gitId":"shyamgj1900"},"content":"activate \":DirectRoute\"","lastModifiedDate":"2021-10-30"},{"lineNumber":41,"author":{"gitId":"shyamgj1900"},"content":"deactivate \":DirectRoute\"","lastModifiedDate":"2021-10-30"},{"lineNumber":42,"author":{"gitId":"shyamgj1900"},"content":"\":DirectRoute\" --\u003e \":BusRouteCommand\"","lastModifiedDate":"2021-10-30"},{"lineNumber":43,"author":{"gitId":"shyamgj1900"},"content":"deactivate \":DirectRoute\"","lastModifiedDate":"2021-10-30"},{"lineNumber":44,"author":{"gitId":"shyamgj1900"},"content":"create \":IndirectRoute\"","lastModifiedDate":"2021-10-30"},{"lineNumber":45,"author":{"gitId":"shyamgj1900"},"content":"\":BusRouteCommand\" -\u003e \":IndirectRoute\"","lastModifiedDate":"2021-10-30"},{"lineNumber":46,"author":{"gitId":"shyamgj1900"},"content":"activate \":IndirectRoute\"","lastModifiedDate":"2021-10-30"},{"lineNumber":47,"author":{"gitId":"shyamgj1900"},"content":"\":IndirectRoute\" -\u003e \":IndirectRoute\": getBusStopNames()","lastModifiedDate":"2021-10-30"},{"lineNumber":48,"author":{"gitId":"shyamgj1900"},"content":"activate \":IndirectRoute\"","lastModifiedDate":"2021-10-30"},{"lineNumber":49,"author":{"gitId":"shyamgj1900"},"content":"deactivate \":IndirectRoute\"","lastModifiedDate":"2021-10-30"},{"lineNumber":50,"author":{"gitId":"shyamgj1900"},"content":"\":IndirectRoute\" --\u003e \":BusRouteCommand\":","lastModifiedDate":"2021-10-30"},{"lineNumber":51,"author":{"gitId":"shyamgj1900"},"content":"deactivate \":IndirectRoute\"","lastModifiedDate":"2021-10-30"},{"lineNumber":52,"author":{"gitId":"shyamgj1900"},"content":"alt direct route","lastModifiedDate":"2021-10-30"},{"lineNumber":53,"author":{"gitId":"shyamgj1900"},"content":"\":BusRouteCommand\" -\u003e \":DirectRoute\": checkDirectRoute()","lastModifiedDate":"2021-10-30"},{"lineNumber":54,"author":{"gitId":"shyamgj1900"},"content":"activate \":DirectRoute\"","lastModifiedDate":"2021-10-30"},{"lineNumber":55,"author":{"gitId":"shyamgj1900"},"content":"\":DirectRoute\" --\u003e \":BusRouteCommand\"","lastModifiedDate":"2021-10-30"},{"lineNumber":56,"author":{"gitId":"shyamgj1900"},"content":"deactivate \":DirectRoute\"","lastModifiedDate":"2021-10-30"},{"lineNumber":57,"author":{"gitId":"shyamgj1900"},"content":"else indirect Route","lastModifiedDate":"2021-10-30"},{"lineNumber":58,"author":{"gitId":"shyamgj1900"},"content":"\":BusRouteCommand\" -\u003e \":IndirectRoute\": checkIndirectRoute()","lastModifiedDate":"2021-10-30"},{"lineNumber":59,"author":{"gitId":"shyamgj1900"},"content":"activate \":IndirectRoute\"","lastModifiedDate":"2021-10-30"},{"lineNumber":60,"author":{"gitId":"shyamgj1900"},"content":"\":IndirectRoute\" --\u003e \":BusRouteCommand\"","lastModifiedDate":"2021-10-30"},{"lineNumber":61,"author":{"gitId":"shyamgj1900"},"content":"deactivate \":IndirectRoute\"","lastModifiedDate":"2021-10-30"},{"lineNumber":62,"author":{"gitId":"shyamgj1900"},"content":"else else","lastModifiedDate":"2021-10-30"},{"lineNumber":63,"author":{"gitId":"shyamgj1900"},"content":"\":BusRouteCommand\" -\u003e \":DirectRoute\": checkAlternateRoute()","lastModifiedDate":"2021-10-30"},{"lineNumber":64,"author":{"gitId":"shyamgj1900"},"content":"activate \":DirectRoute\"","lastModifiedDate":"2021-10-30"},{"lineNumber":65,"author":{"gitId":"shyamgj1900"},"content":"\":DirectRoute\" --\u003e \":BusRouteCommand\"","lastModifiedDate":"2021-10-30"},{"lineNumber":66,"author":{"gitId":"shyamgj1900"},"content":"deactivate \":DirectRoute\"","lastModifiedDate":"2021-10-30"},{"lineNumber":67,"author":{"gitId":"shyamgj1900"},"content":"end","lastModifiedDate":"2021-10-30"},{"lineNumber":68,"author":{"gitId":"shyamgj1900"},"content":"\":BusRouteCommand\" --\u003e \":BusRouteCommand\": message","lastModifiedDate":"2021-10-30"},{"lineNumber":69,"author":{"gitId":"shyamgj1900"},"content":"deactivate \":BusRouteCommand\"","lastModifiedDate":"2021-10-30"},{"lineNumber":70,"author":{"gitId":"shyamgj1900"},"content":"end","lastModifiedDate":"2021-10-25"},{"lineNumber":71,"author":{"gitId":"shyamgj1900"},"content":"\u003c-- \":BusRouteCommand\": result","lastModifiedDate":"2021-10-25"},{"lineNumber":72,"author":{"gitId":"shyamgj1900"},"content":"deactivate \":BusRouteCommand\"","lastModifiedDate":"2021-10-25"},{"lineNumber":73,"author":{"gitId":"shyamgj1900"},"content":"@enduml","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"shyamgj1900":66,"powzx":7}},{"path":"docs/assets/plantuml/CapCalculatorByCodeSequenceDiagram1.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"nonrnp"},"content":"@startuml","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"nonrnp"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"nonrnp"},"content":"!include Style.puml","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"nonrnp"},"content":"hide footbox","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"nonrnp"},"content":"participant \":Parser\" as parser UTIL_COLOR","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"nonrnp"},"content":"participant \":CalculateCapCommand\" as command COMMANDS_COLOR","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"nonrnp"},"content":"participant \":CapCalculatorByCode\" as calculator CAPCALCULATOR_COLOR","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"nonrnp"},"content":"participant \":CommandResult\" as result COMMANDS_COLOR","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"powzx"},"content":"[-\u003eparser : parse input","lastModifiedDate":"2021-11-03"},{"lineNumber":14,"author":{"gitId":"nonrnp"},"content":"activate parser","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"powzx"},"content":"parser -\u003e parser : get subCommand","lastModifiedDate":"2021-11-03"},{"lineNumber":17,"author":{"gitId":"nonrnp"},"content":"activate parser","lastModifiedDate":"2021-10-31"},{"lineNumber":18,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":19,"author":{"gitId":"nonrnp"},"content":"create command","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"powzx"},"content":"parser -\u003e command : create with parsedArguments","lastModifiedDate":"2021-11-03"},{"lineNumber":21,"author":{"gitId":"nonrnp"},"content":"activate command","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"nonrnp"},"content":"create calculator","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"nonrnp"},"content":"command -\u003e calculator : new CapCalculatorByCode(parsedArguments)","lastModifiedDate":"2021-10-31"},{"lineNumber":25,"author":{"gitId":"nonrnp"},"content":"activate calculator","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"nonrnp"},"content":"ref over calculator : createCalculator","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"nonrnp"},"content":"calculator --\u003e command : calculator","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"nonrnp"},"content":"deactivate calculator","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"nonrnp"},"content":"command --\u003e parser : command","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"nonrnp"},"content":"deactivate command","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"nonrnp"},"content":"parser --\u003e parser : command","lastModifiedDate":"2021-10-31"},{"lineNumber":36,"author":{"gitId":"nonrnp"},"content":"deactivate parser","lastModifiedDate":"2021-10-31"},{"lineNumber":37,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":38,"author":{"gitId":"nonrnp"},"content":"parser --\u003e[ : command","lastModifiedDate":"2021-10-24"},{"lineNumber":39,"author":{"gitId":"nonrnp"},"content":"deactivate parser","lastModifiedDate":"2021-10-24"},{"lineNumber":40,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":41,"author":{"gitId":"nonrnp"},"content":"[-\u003ecommand : executeCommand()","lastModifiedDate":"2021-10-24"},{"lineNumber":42,"author":{"gitId":"nonrnp"},"content":"activate command","lastModifiedDate":"2021-10-24"},{"lineNumber":43,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":44,"author":{"gitId":"nonrnp"},"content":"command -\u003e calculator : executeCapCalculator()","lastModifiedDate":"2021-10-24"},{"lineNumber":45,"author":{"gitId":"nonrnp"},"content":"activate calculator","lastModifiedDate":"2021-10-24"},{"lineNumber":46,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":47,"author":{"gitId":"nonrnp"},"content":"calculator -\u003e calculator : checkModulesNotEmpty()","lastModifiedDate":"2021-10-24"},{"lineNumber":48,"author":{"gitId":"nonrnp"},"content":"activate calculator","lastModifiedDate":"2021-10-24"},{"lineNumber":49,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":50,"author":{"gitId":"nonrnp"},"content":"opt modules and invalidModules are empty","lastModifiedDate":"2021-10-24"},{"lineNumber":51,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":52,"author":{"gitId":"nonrnp"},"content":"calculator --\u003e[ : exception","lastModifiedDate":"2021-10-24"},{"lineNumber":53,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":54,"author":{"gitId":"nonrnp"},"content":"end","lastModifiedDate":"2021-10-24"},{"lineNumber":55,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":56,"author":{"gitId":"nonrnp"},"content":"calculator --\u003e calculator","lastModifiedDate":"2021-10-24"},{"lineNumber":57,"author":{"gitId":"nonrnp"},"content":"deactivate calculator","lastModifiedDate":"2021-10-24"},{"lineNumber":58,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":59,"author":{"gitId":"nonrnp"},"content":"calculator -\u003e calculator : getCap()","lastModifiedDate":"2021-10-24"},{"lineNumber":60,"author":{"gitId":"nonrnp"},"content":"activate calculator","lastModifiedDate":"2021-10-24"},{"lineNumber":61,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":62,"author":{"gitId":"nonrnp"},"content":"ref over calculator : capCalculation","lastModifiedDate":"2021-10-24"},{"lineNumber":63,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":64,"author":{"gitId":"nonrnp"},"content":"calculator --\u003e calculator : cap","lastModifiedDate":"2021-10-24"},{"lineNumber":65,"author":{"gitId":"nonrnp"},"content":"deactivate calculator","lastModifiedDate":"2021-10-24"},{"lineNumber":66,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":67,"author":{"gitId":"nonrnp"},"content":"calculator -\u003e calculator : checkInvalidModules()","lastModifiedDate":"2021-10-24"},{"lineNumber":68,"author":{"gitId":"nonrnp"},"content":"activate calculator","lastModifiedDate":"2021-10-24"},{"lineNumber":69,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":70,"author":{"gitId":"nonrnp"},"content":"opt invalidModules or repeatedModules is not empty ","lastModifiedDate":"2021-10-31"},{"lineNumber":71,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":72,"author":{"gitId":"nonrnp"},"content":"calculator --\u003e[ : exception","lastModifiedDate":"2021-10-24"},{"lineNumber":73,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":74,"author":{"gitId":"nonrnp"},"content":"end","lastModifiedDate":"2021-10-24"},{"lineNumber":75,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":76,"author":{"gitId":"nonrnp"},"content":"calculator --\u003e calculator","lastModifiedDate":"2021-10-24"},{"lineNumber":77,"author":{"gitId":"nonrnp"},"content":"deactivate calculator","lastModifiedDate":"2021-10-24"},{"lineNumber":78,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":79,"author":{"gitId":"nonrnp"},"content":"calculator --\u003e command : cap","lastModifiedDate":"2021-10-24"},{"lineNumber":80,"author":{"gitId":"nonrnp"},"content":"deactivate calculator","lastModifiedDate":"2021-10-24"},{"lineNumber":81,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":82,"author":{"gitId":"nonrnp"},"content":"create result","lastModifiedDate":"2021-10-24"},{"lineNumber":83,"author":{"gitId":"nonrnp"},"content":"command --\u003e result : new CommandResult(capMessage)","lastModifiedDate":"2021-10-24"},{"lineNumber":84,"author":{"gitId":"nonrnp"},"content":"activate result","lastModifiedDate":"2021-10-24"},{"lineNumber":85,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":86,"author":{"gitId":"nonrnp"},"content":"result --\u003e command : result","lastModifiedDate":"2021-10-24"},{"lineNumber":87,"author":{"gitId":"nonrnp"},"content":"deactivate result","lastModifiedDate":"2021-10-24"},{"lineNumber":88,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":89,"author":{"gitId":"nonrnp"},"content":"command --\u003e[ : result","lastModifiedDate":"2021-10-24"},{"lineNumber":90,"author":{"gitId":"nonrnp"},"content":"deactivate command","lastModifiedDate":"2021-10-24"},{"lineNumber":91,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":92,"author":{"gitId":"nonrnp"},"content":"@enduml","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"nonrnp":89,"powzx":3}},{"path":"docs/assets/plantuml/CapCalculatorByCodeSequenceDiagram2.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"nonrnp"},"content":"@startuml","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"nonrnp"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"nonrnp"},"content":"!include Style.puml","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"nonrnp"},"content":"hide footbox","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"nonrnp"},"content":"participant \":CapCalculatorByCode\" as calculator CAPCALCULATOR_COLOR","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"nonrnp"},"content":"participant \"modules:CalculatorModuleList\" as modules MODULE_COLOR","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"nonrnp"},"content":"participant \"invalidSuModules:ArrayList\" as invalidSuModules MODULE_COLOR","lastModifiedDate":"2021-11-05"},{"lineNumber":11,"author":{"gitId":"nonrnp"},"content":"participant \"invalidModules:ArrayList\" as invalidModules MODULE_COLOR","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"nonrnp"},"content":"participant \"repeatedModules:CalculatorModuleList\" as repeatedModules MODULE_COLOR","lastModifiedDate":"2021-10-31"},{"lineNumber":13,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"nonrnp"},"content":"group sd createCalculator","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"nonrnp"},"content":"create modules","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"nonrnp"},"content":"calculator -\u003e modules : new CalculatorModuleList()","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"nonrnp"},"content":"activate modules","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"nonrnp"},"content":"modules --\u003e calculator","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"nonrnp"},"content":"deactivate modules","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"nonrnp"},"content":"create invalidSuModules","lastModifiedDate":"2021-11-05"},{"lineNumber":24,"author":{"gitId":"nonrnp"},"content":"calculator -\u003e invalidSuModules : new ArrayList\u003c\u003e()","lastModifiedDate":"2021-11-05"},{"lineNumber":25,"author":{"gitId":"nonrnp"},"content":"activate invalidSuModules","lastModifiedDate":"2021-11-05"},{"lineNumber":26,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":27,"author":{"gitId":"nonrnp"},"content":"invalidSuModules --\u003e calculator","lastModifiedDate":"2021-11-05"},{"lineNumber":28,"author":{"gitId":"nonrnp"},"content":"deactivate invalidSuModules","lastModifiedDate":"2021-11-05"},{"lineNumber":29,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":30,"author":{"gitId":"nonrnp"},"content":"create invalidModules","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"nonrnp"},"content":"calculator -\u003e invalidModules : new ArrayList\u003c\u003e()","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"nonrnp"},"content":"activate invalidModules","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"nonrnp"},"content":"invalidModules --\u003e calculator","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"nonrnp"},"content":"deactivate invalidModules","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"nonrnp"},"content":"create repeatedModules","lastModifiedDate":"2021-10-31"},{"lineNumber":38,"author":{"gitId":"nonrnp"},"content":"calculator -\u003e repeatedModules : new CalculatorModuleList()","lastModifiedDate":"2021-10-31"},{"lineNumber":39,"author":{"gitId":"nonrnp"},"content":"activate repeatedModules","lastModifiedDate":"2021-10-31"},{"lineNumber":40,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":41,"author":{"gitId":"nonrnp"},"content":"repeatedModules --\u003e calculator","lastModifiedDate":"2021-10-31"},{"lineNumber":42,"author":{"gitId":"nonrnp"},"content":"deactivate repeatedModules","lastModifiedDate":"2021-10-31"},{"lineNumber":43,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":44,"author":{"gitId":"nonrnp"},"content":"calculator -\u003e calculator : getInputModules(input)","lastModifiedDate":"2021-10-24"},{"lineNumber":45,"author":{"gitId":"nonrnp"},"content":"activate calculator","lastModifiedDate":"2021-10-24"},{"lineNumber":46,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":47,"author":{"gitId":"nonrnp"},"content":"loop for all input modules","lastModifiedDate":"2021-10-24"},{"lineNumber":48,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":49,"author":{"gitId":"nonrnp"},"content":"alt contains invalid SU grade","lastModifiedDate":"2021-11-05"},{"lineNumber":50,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":51,"author":{"gitId":"nonrnp"},"content":"calculator -\u003e invalidSuModules : add(moduleDescription)","lastModifiedDate":"2021-11-05"},{"lineNumber":52,"author":{"gitId":"nonrnp"},"content":"activate invalidSuModules","lastModifiedDate":"2021-11-05"},{"lineNumber":53,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":54,"author":{"gitId":"nonrnp"},"content":"invalidSuModules --\u003e calculator","lastModifiedDate":"2021-11-05"},{"lineNumber":55,"author":{"gitId":"nonrnp"},"content":"deactivate invalidSuModules","lastModifiedDate":"2021-11-05"},{"lineNumber":56,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":57,"author":{"gitId":"nonrnp"},"content":"else contains invalid format/invalid code/invalid grade","lastModifiedDate":"2021-11-05"},{"lineNumber":58,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":59,"author":{"gitId":"nonrnp"},"content":"calculator -\u003e invalidModules : add(moduleDescription)","lastModifiedDate":"2021-11-05"},{"lineNumber":60,"author":{"gitId":"nonrnp"},"content":"activate invalidModules","lastModifiedDate":"2021-10-24"},{"lineNumber":61,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":62,"author":{"gitId":"nonrnp"},"content":"invalidModules --\u003e calculator","lastModifiedDate":"2021-10-24"},{"lineNumber":63,"author":{"gitId":"nonrnp"},"content":"deactivate invalidModules","lastModifiedDate":"2021-10-24"},{"lineNumber":64,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":65,"author":{"gitId":"nonrnp"},"content":"else module already in calculator module list","lastModifiedDate":"2021-10-31"},{"lineNumber":66,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":67,"author":{"gitId":"nonrnp"},"content":"calculator -\u003e repeatedModules : storeModuleCodeGrade(moduleCode, grade, moduleDb)","lastModifiedDate":"2021-10-31"},{"lineNumber":68,"author":{"gitId":"nonrnp"},"content":"activate repeatedModules","lastModifiedDate":"2021-10-31"},{"lineNumber":69,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":70,"author":{"gitId":"nonrnp"},"content":"repeatedModules --\u003e calculator","lastModifiedDate":"2021-10-31"},{"lineNumber":71,"author":{"gitId":"nonrnp"},"content":"deactivate repeatedModules","lastModifiedDate":"2021-10-31"},{"lineNumber":72,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":73,"author":{"gitId":"nonrnp"},"content":"else else","lastModifiedDate":"2021-10-24"},{"lineNumber":74,"author":{"gitId":"nonrnp"},"content":"calculator -\u003e modules : storeModuleCodeGrade(moduleCode, grade)","lastModifiedDate":"2021-10-24"},{"lineNumber":75,"author":{"gitId":"nonrnp"},"content":"activate modules","lastModifiedDate":"2021-10-24"},{"lineNumber":76,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":77,"author":{"gitId":"nonrnp"},"content":"modules --\u003e calculator","lastModifiedDate":"2021-10-24"},{"lineNumber":78,"author":{"gitId":"nonrnp"},"content":"deactivate modules","lastModifiedDate":"2021-10-24"},{"lineNumber":79,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":80,"author":{"gitId":"nonrnp"},"content":"end","lastModifiedDate":"2021-10-24"},{"lineNumber":81,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":82,"author":{"gitId":"nonrnp"},"content":"end","lastModifiedDate":"2021-10-24"},{"lineNumber":83,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":84,"author":{"gitId":"nonrnp"},"content":"calculator --\u003e calculator","lastModifiedDate":"2021-10-24"},{"lineNumber":85,"author":{"gitId":"nonrnp"},"content":"deactivate calculator","lastModifiedDate":"2021-10-24"},{"lineNumber":86,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":87,"author":{"gitId":"nonrnp"},"content":"end","lastModifiedDate":"2021-10-24"},{"lineNumber":88,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":89,"author":{"gitId":"nonrnp"},"content":"@enduml","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"nonrnp":89}},{"path":"docs/assets/plantuml/CapCalculatorByCodeSequenceDiagram3.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"nonrnp"},"content":"@startuml","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"nonrnp"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"nonrnp"},"content":"!include Style.puml","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"nonrnp"},"content":"hide footbox","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"nonrnp"},"content":"participant \":CapCalculatorByCode\" as calculator CAPCALCULATOR_COLOR","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"nonrnp"},"content":"participant \"module:ModuleDetails\" as module MODULE_COLOR","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"nonrnp"},"content":"participant \":ModuleDb\" as moduleDb MODULE_COLOR","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"nonrnp"},"content":"participant \"moduleInfo:ModuleDetails\" as moduleInfo MODULE_COLOR","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"nonrnp"},"content":"group sd capCalculation","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"nonrnp"},"content":"loop until all modules","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"nonrnp"},"content":"calculator -\u003e module : getGradePoint()","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"nonrnp"},"content":"activate module","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"nonrnp"},"content":"module --\u003e calculator : gradePoint","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"nonrnp"},"content":"deactivate module","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"nonrnp"},"content":"calculator -\u003e module : getModuleCode()","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"nonrnp"},"content":"activate module","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"nonrnp"},"content":"module --\u003e calculator : moduleCode","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"nonrnp"},"content":"deactivate module","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"nonrnp"},"content":"calculator -\u003e moduleDb : getModuleInfo(moduleCode)","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"nonrnp"},"content":"activate moduleDb","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"nonrnp"},"content":"moduleDb --\u003e calculator : moduleInfo","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"nonrnp"},"content":"deactivate moduleDb","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"nonrnp"},"content":"calculator -\u003e moduleInfo : getModuleCredit()","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"nonrnp"},"content":"activate moduleInfo","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":38,"author":{"gitId":"nonrnp"},"content":"moduleInfo --\u003e calculator : moduleCredit","lastModifiedDate":"2021-10-24"},{"lineNumber":39,"author":{"gitId":"nonrnp"},"content":"deactivate moduleInfo","lastModifiedDate":"2021-10-24"},{"lineNumber":40,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":41,"author":{"gitId":"nonrnp"},"content":"calculator -\u003e calculator : calculateCurrentCap(totalMc, cap, mc, gradePoint)","lastModifiedDate":"2021-10-24"},{"lineNumber":42,"author":{"gitId":"nonrnp"},"content":"activate calculator","lastModifiedDate":"2021-10-24"},{"lineNumber":43,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":44,"author":{"gitId":"nonrnp"},"content":"calculator --\u003e calculator : cap","lastModifiedDate":"2021-10-24"},{"lineNumber":45,"author":{"gitId":"nonrnp"},"content":"deactivate calculator","lastModifiedDate":"2021-10-24"},{"lineNumber":46,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":47,"author":{"gitId":"nonrnp"},"content":"end","lastModifiedDate":"2021-10-24"},{"lineNumber":48,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":49,"author":{"gitId":"nonrnp"},"content":"end","lastModifiedDate":"2021-10-24"},{"lineNumber":50,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":51,"author":{"gitId":"nonrnp"},"content":"@enduml","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"nonrnp":51}},{"path":"docs/assets/plantuml/CapCalculatorClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"nonrnp"},"content":"@startuml","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"nonrnp"},"content":"\u0027https://plantuml.com/class-diagram","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"nonrnp"},"content":"!include Style.puml","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"nonrnp"},"content":"hide circle","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"nonrnp"},"content":"class \"ABSTRACT \\n CapCalculator\" CAPCALCULATOR_COLOR {","lastModifiedDate":"2021-10-28"},{"lineNumber":9,"author":{"gitId":"nonrnp"},"content":"# invalidModules : ArrayList\u003cString\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"nonrnp"},"content":"+ CapCalculator()","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"nonrnp"},"content":"# checkModulesNotEmpty() : void","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"nonrnp"},"content":"# calculateCurrentCap(totalMc : double, cap : double, mc : int, gradePoint : double) : double","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"nonrnp"},"content":"# getCap() : String ABSTRACT","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"nonrnp"},"content":"# checkInvalidModules() : void","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"nonrnp"},"content":"+ executeCapCalculator() : String","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"nonrnp"},"content":"}","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"nonrnp"},"content":"class \"ModuleList\" MODULE_COLOR {","lastModifiedDate":"2021-10-28"},{"lineNumber":20,"author":{"gitId":"nonrnp"},"content":"+ myModules : ArrayList\u003cModuleDetails\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"nonrnp"},"content":"}","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"nonrnp"},"content":"class \"CapCalculatorByMc\" CAPCALCULATOR_COLOR {","lastModifiedDate":"2021-10-28"},{"lineNumber":24,"author":{"gitId":"nonrnp"},"content":"+ CapCalculatorByMc(input : String)","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"nonrnp"},"content":"# getCap() : String","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"nonrnp"},"content":"}","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"nonrnp"},"content":"class \"CapCalculatorByCode\" CAPCALCULATOR_COLOR {","lastModifiedDate":"2021-10-28"},{"lineNumber":29,"author":{"gitId":"nonrnp"},"content":"- moduleDb : ModuleDb","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"nonrnp"},"content":"+ CapCalculatorByCode(input : String)","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"nonrnp"},"content":"+ CapCalculatorByCode(modules : ModuleList)","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"nonrnp"},"content":"# getCap() : String","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"nonrnp"},"content":"}","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"nonrnp"},"content":"class \"ModuleListCapCalculator\" CAPCALCULATOR_COLOR {","lastModifiedDate":"2021-10-28"},{"lineNumber":37,"author":{"gitId":"nonrnp"},"content":"+ ModuleListCapCalculator(modules : ModuleList)","lastModifiedDate":"2021-10-24"},{"lineNumber":38,"author":{"gitId":"nonrnp"},"content":"+ executeCapCalculator() : String","lastModifiedDate":"2021-10-24"},{"lineNumber":39,"author":{"gitId":"nonrnp"},"content":"}","lastModifiedDate":"2021-10-24"},{"lineNumber":40,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":41,"author":{"gitId":"nonrnp"},"content":"class \"GradeSuggestionCalculator\" CAPCALCULATOR_COLOR {","lastModifiedDate":"2021-10-28"},{"lineNumber":42,"author":{"gitId":"nonrnp"},"content":"- userDesiredCap : String","lastModifiedDate":"2021-10-24"},{"lineNumber":43,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":44,"author":{"gitId":"nonrnp"},"content":"+ GradeSuggestionCalculator(modules : ModuleList, userDesiredCap : String)","lastModifiedDate":"2021-10-24"},{"lineNumber":45,"author":{"gitId":"nonrnp"},"content":"+ executeCapCalculator() : String","lastModifiedDate":"2021-10-24"},{"lineNumber":46,"author":{"gitId":"nonrnp"},"content":"}","lastModifiedDate":"2021-10-24"},{"lineNumber":47,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":48,"author":{"gitId":"nonrnp"},"content":"class \"CalculatorModuleList\" MODULE_COLOR {","lastModifiedDate":"2021-10-28"},{"lineNumber":49,"author":{"gitId":"nonrnp"},"content":"+ CalculatorModuleList()","lastModifiedDate":"2021-10-24"},{"lineNumber":50,"author":{"gitId":"nonrnp"},"content":"+ CalculatorModuleList(moduleList : ModuleList)","lastModifiedDate":"2021-10-24"},{"lineNumber":51,"author":{"gitId":"nonrnp"},"content":"+ storeModuleMcGrade(mc : int, grade : String) : void","lastModifiedDate":"2021-10-24"},{"lineNumber":52,"author":{"gitId":"nonrnp"},"content":"+ storeModuleCodeGrade(code : String, grade : String) : void","lastModifiedDate":"2021-10-24"},{"lineNumber":53,"author":{"gitId":"nonrnp"},"content":"}","lastModifiedDate":"2021-10-24"},{"lineNumber":54,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":55,"author":{"gitId":"nonrnp"},"content":"\"ABSTRACT \\n CapCalculator\" ^-- \"CapCalculatorByMc\"","lastModifiedDate":"2021-10-25"},{"lineNumber":56,"author":{"gitId":"nonrnp"},"content":"\"ABSTRACT \\n CapCalculator\" ^-- \"CapCalculatorByCode\"","lastModifiedDate":"2021-10-25"},{"lineNumber":57,"author":{"gitId":"nonrnp"},"content":"\"CapCalculatorByCode\" ^-- \"ModuleListCapCalculator\"","lastModifiedDate":"2021-10-25"},{"lineNumber":58,"author":{"gitId":"nonrnp"},"content":"\"CapCalculatorByCode\" ^-- \"GradeSuggestionCalculator\"","lastModifiedDate":"2021-10-25"},{"lineNumber":59,"author":{"gitId":"nonrnp"},"content":"\"ModuleList\" ^-- CalculatorModuleList","lastModifiedDate":"2021-10-25"},{"lineNumber":60,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":61,"author":{"gitId":"nonrnp"},"content":"\"ABSTRACT \\n CapCalculator\" --\u003e \"1\" \"CalculatorModuleList\"","lastModifiedDate":"2021-10-25"},{"lineNumber":62,"author":{"gitId":"nonrnp"},"content":"\"CapCalculatorByCode\" --\u003e \"1\" \"CalculatorModuleList\"","lastModifiedDate":"2021-11-05"},{"lineNumber":63,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":64,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":65,"author":{"gitId":"nonrnp"},"content":"@enduml","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"nonrnp":65}},{"path":"docs/assets/plantuml/CommandsClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"powzx"},"content":"@startuml","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"powzx"},"content":"\u0027https://plantuml.com/class-diagram","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"powzx"},"content":"!include Style.puml","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"powzx"},"content":"hide circle","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"powzx"},"content":"package commands \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"powzx"},"content":"    class \"ABSTRACT\\nCommand\"","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"powzx"},"content":"    class CommandResult","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"powzx"},"content":"    class BusRouteCommand","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"powzx"},"content":"    class CalculateCapCommand","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"powzx"},"content":"    class XYZCommand","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"powzx"},"content":"    class ModuleCommand","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"powzx"},"content":"    class ModuleListCapCommand","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"powzx"},"content":"    class PlannerCommand","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"powzx"},"content":"    class TimetableCommand","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"powzx"},"content":"}","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"powzx"},"content":"package util \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"powzx"},"content":"    class KolinuxLogger","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"powzx"},"content":"    class PromptHandler","lastModifiedDate":"2021-11-04"},{"lineNumber":23,"author":{"gitId":"powzx"},"content":"}","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"powzx"},"content":"package timetable \u003c\u003cRectangle\u003e\u003e TIMETABLE_COLOR {","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"powzx"},"content":"}","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"powzx"},"content":"package routes \u003c\u003cRectangle\u003e\u003e ROUTES_COLOR {","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"powzx"},"content":"}","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"powzx"},"content":"package capcalculator \u003c\u003cRectangle\u003e\u003e CAPCALCULATOR_COLOR {","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"powzx"},"content":"}","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"powzx"},"content":"package planner \u003c\u003cRectangle\u003e\u003e PLANNER_COLOR {","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"powzx"},"content":"}","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"powzx"},"content":"package module \u003c\u003cRectangle\u003e\u003e MODULE_COLOR {","lastModifiedDate":"2021-10-24"},{"lineNumber":38,"author":{"gitId":"powzx"},"content":"}","lastModifiedDate":"2021-10-24"},{"lineNumber":39,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":40,"author":{"gitId":"powzx"},"content":"class \"ABSTRACT\\nCommand\" COMMANDS_COLOR {","lastModifiedDate":"2021-10-25"},{"lineNumber":41,"author":{"gitId":"powzx"},"content":"    # argument: String","lastModifiedDate":"2021-10-24"},{"lineNumber":42,"author":{"gitId":"powzx"},"content":"    + executeCommand(): CommandResult ABSTRACT","lastModifiedDate":"2021-10-29"},{"lineNumber":43,"author":{"gitId":"powzx"},"content":"}","lastModifiedDate":"2021-10-24"},{"lineNumber":44,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":45,"author":{"gitId":"powzx"},"content":"class CommandResult COMMANDS_COLOR {","lastModifiedDate":"2021-10-24"},{"lineNumber":46,"author":{"gitId":"powzx"},"content":"    - feedbackToUser: String","lastModifiedDate":"2021-10-24"},{"lineNumber":47,"author":{"gitId":"powzx"},"content":"}","lastModifiedDate":"2021-10-24"},{"lineNumber":48,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":49,"author":{"gitId":"powzx"},"content":"class BusRouteCommand COMMANDS_COLOR {","lastModifiedDate":"2021-10-24"},{"lineNumber":50,"author":{"gitId":"powzx"},"content":"    + executeCommand(): CommandResult","lastModifiedDate":"2021-10-24"},{"lineNumber":51,"author":{"gitId":"powzx"},"content":"}","lastModifiedDate":"2021-10-24"},{"lineNumber":52,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":53,"author":{"gitId":"powzx"},"content":"class CalculateCapCommand COMMANDS_COLOR {","lastModifiedDate":"2021-10-24"},{"lineNumber":54,"author":{"gitId":"powzx"},"content":"    + executeCommand(): CommandResult","lastModifiedDate":"2021-10-24"},{"lineNumber":55,"author":{"gitId":"powzx"},"content":"}","lastModifiedDate":"2021-10-24"},{"lineNumber":56,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":57,"author":{"gitId":"powzx"},"content":"class XYZCommand COMMANDS_COLOR {","lastModifiedDate":"2021-10-24"},{"lineNumber":58,"author":{"gitId":"powzx"},"content":"    + executeCommand(): CommandResult","lastModifiedDate":"2021-10-24"},{"lineNumber":59,"author":{"gitId":"powzx"},"content":"}","lastModifiedDate":"2021-10-24"},{"lineNumber":60,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":61,"author":{"gitId":"powzx"},"content":"class ModuleCommand COMMANDS_COLOR {","lastModifiedDate":"2021-10-24"},{"lineNumber":62,"author":{"gitId":"powzx"},"content":"    + executeCommand(): CommandResult","lastModifiedDate":"2021-10-24"},{"lineNumber":63,"author":{"gitId":"powzx"},"content":"}","lastModifiedDate":"2021-10-24"},{"lineNumber":64,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":65,"author":{"gitId":"powzx"},"content":"class ModuleListCapCommand COMMANDS_COLOR {","lastModifiedDate":"2021-10-24"},{"lineNumber":66,"author":{"gitId":"powzx"},"content":"    + executeCommand(): CommandResult","lastModifiedDate":"2021-10-24"},{"lineNumber":67,"author":{"gitId":"powzx"},"content":"}","lastModifiedDate":"2021-10-24"},{"lineNumber":68,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":69,"author":{"gitId":"powzx"},"content":"class PlannerCommand COMMANDS_COLOR {","lastModifiedDate":"2021-10-24"},{"lineNumber":70,"author":{"gitId":"powzx"},"content":"    + executeCommand(): CommandResult","lastModifiedDate":"2021-10-24"},{"lineNumber":71,"author":{"gitId":"powzx"},"content":"}","lastModifiedDate":"2021-10-24"},{"lineNumber":72,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":73,"author":{"gitId":"powzx"},"content":"class TimetableCommand COMMANDS_COLOR {","lastModifiedDate":"2021-10-24"},{"lineNumber":74,"author":{"gitId":"powzx"},"content":"    + executeCommand(): CommandResult","lastModifiedDate":"2021-10-24"},{"lineNumber":75,"author":{"gitId":"powzx"},"content":"}","lastModifiedDate":"2021-10-24"},{"lineNumber":76,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":77,"author":{"gitId":"powzx"},"content":"class KolinuxLogger UTIL_COLOR {","lastModifiedDate":"2021-10-24"},{"lineNumber":78,"author":{"gitId":"powzx"},"content":"}","lastModifiedDate":"2021-10-24"},{"lineNumber":79,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":80,"author":{"gitId":"powzx"},"content":"class PromptHandler UTIL_COLOR {","lastModifiedDate":"2021-11-04"},{"lineNumber":81,"author":{"gitId":"powzx"},"content":"}","lastModifiedDate":"2021-10-24"},{"lineNumber":82,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":83,"author":{"gitId":"powzx"},"content":"BusRouteCommand --|\u003e \"ABSTRACT\\nCommand\"","lastModifiedDate":"2021-10-25"},{"lineNumber":84,"author":{"gitId":"powzx"},"content":"CalculateCapCommand -right-|\u003e \"ABSTRACT\\nCommand\"","lastModifiedDate":"2021-10-25"},{"lineNumber":85,"author":{"gitId":"powzx"},"content":"XYZCommand --|\u003e \"ABSTRACT\\nCommand\"","lastModifiedDate":"2021-10-25"},{"lineNumber":86,"author":{"gitId":"powzx"},"content":"\"ABSTRACT\\nCommand\" \u003c|-up- ModuleCommand","lastModifiedDate":"2021-10-25"},{"lineNumber":87,"author":{"gitId":"powzx"},"content":"\"ABSTRACT\\nCommand\" \u003c|-- ModuleListCapCommand","lastModifiedDate":"2021-10-25"},{"lineNumber":88,"author":{"gitId":"powzx"},"content":"\"ABSTRACT\\nCommand\" \u003c|-- PlannerCommand","lastModifiedDate":"2021-10-25"},{"lineNumber":89,"author":{"gitId":"powzx"},"content":"\"ABSTRACT\\nCommand\" \u003c|-- TimetableCommand","lastModifiedDate":"2021-10-25"},{"lineNumber":90,"author":{"gitId":"powzx"},"content":"\"ABSTRACT\\nCommand\" .\u003e \"0..1\" CommandResult : \"result \"","lastModifiedDate":"2021-10-25"},{"lineNumber":91,"author":{"gitId":"powzx"},"content":"\"ABSTRACT\\nCommand\" --\u003e \"1\" KolinuxLogger : logger","lastModifiedDate":"2021-10-25"},{"lineNumber":92,"author":{"gitId":"powzx"},"content":"\"ABSTRACT\\nCommand\" -right-\u003e module","lastModifiedDate":"2021-10-25"},{"lineNumber":93,"author":{"gitId":"powzx"},"content":"BusRouteCommand -up-\u003e routes","lastModifiedDate":"2021-10-24"},{"lineNumber":94,"author":{"gitId":"powzx"},"content":"PlannerCommand -down-\u003e planner","lastModifiedDate":"2021-10-24"},{"lineNumber":95,"author":{"gitId":"powzx"},"content":"TimetableCommand -down-\u003e timetable","lastModifiedDate":"2021-10-24"},{"lineNumber":96,"author":{"gitId":"powzx"},"content":"ModuleListCapCommand -left-\u003e capcalculator","lastModifiedDate":"2021-10-24"},{"lineNumber":97,"author":{"gitId":"powzx"},"content":"CalculateCapCommand -left-\u003e capcalculator","lastModifiedDate":"2021-10-24"},{"lineNumber":98,"author":{"gitId":"powzx"},"content":"PromptHandler -left-\u003e \"1\" KolinuxLogger","lastModifiedDate":"2021-11-04"},{"lineNumber":99,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":100,"author":{"gitId":"powzx"},"content":"@enduml","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"powzx":100}},{"path":"docs/assets/plantuml/ModuleAddSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"giterator"},"content":"@startuml","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"giterator"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"giterator"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"giterator"},"content":"!include Style.puml","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"giterator"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"giterator"},"content":"hide footbox","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"giterator"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"giterator"},"content":"participant \":Parser\" as parser UTIL_COLOR","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"giterator"},"content":"participant \":ModuleCommand\" as mlc COMMANDS_COLOR","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"giterator"},"content":"participant \"moduleList:ModuleList\" as mll MODULE_COLOR","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"giterator"},"content":"participant \"ModuleStorage\" as mls \u003c\u003cclass\u003e\u003e MODULE_COLOR","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"giterator"},"content":"participant \":CommandResult\" as res COMMANDS_COLOR","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"giterator"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"powzx"},"content":"[-\u003eparser : parse input","lastModifiedDate":"2021-11-03"},{"lineNumber":15,"author":{"gitId":"giterator"},"content":"activate parser","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"giterator"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"powzx"},"content":"parser -\u003e parser : get subCommand","lastModifiedDate":"2021-11-03"},{"lineNumber":18,"author":{"gitId":"giterator"},"content":"activate parser","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"giterator"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"giterator"},"content":"create mlc","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"powzx"},"content":"parser -\u003e mlc : create with parsedArguments","lastModifiedDate":"2021-11-03"},{"lineNumber":22,"author":{"gitId":"giterator"},"content":"activate mlc","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"giterator"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"giterator"},"content":"mlc --\u003e parser : command","lastModifiedDate":"2021-10-25"},{"lineNumber":25,"author":{"gitId":"giterator"},"content":"deactivate mlc","lastModifiedDate":"2021-10-25"},{"lineNumber":26,"author":{"gitId":"giterator"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":27,"author":{"gitId":"giterator"},"content":"parser --\u003e parser : command","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"giterator"},"content":"deactivate parser","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"giterator"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"giterator"},"content":"parser--\u003e[ : command","lastModifiedDate":"2021-10-25"},{"lineNumber":31,"author":{"gitId":"giterator"},"content":"deactivate parser","lastModifiedDate":"2021-10-25"},{"lineNumber":32,"author":{"gitId":"giterator"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":33,"author":{"gitId":"giterator"},"content":"[-\u003emlc : executeCommand()","lastModifiedDate":"2021-10-25"},{"lineNumber":34,"author":{"gitId":"giterator"},"content":"activate mlc","lastModifiedDate":"2021-10-25"},{"lineNumber":35,"author":{"gitId":"giterator"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":36,"author":{"gitId":"giterator"},"content":"mlc -\u003e mlc : storeModule()","lastModifiedDate":"2021-10-25"},{"lineNumber":37,"author":{"gitId":"giterator"},"content":"activate mlc","lastModifiedDate":"2021-10-25"},{"lineNumber":38,"author":{"gitId":"giterator"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":39,"author":{"gitId":"giterator"},"content":"mlc -\u003e mll : addModuleByCode(moduleCode, moduleDb)","lastModifiedDate":"2021-11-02"},{"lineNumber":40,"author":{"gitId":"giterator"},"content":"activate mll","lastModifiedDate":"2021-10-25"},{"lineNumber":41,"author":{"gitId":"giterator"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":42,"author":{"gitId":"giterator"},"content":"mll --\u003e mlc : message","lastModifiedDate":"2021-10-25"},{"lineNumber":43,"author":{"gitId":"giterator"},"content":"deactivate mll","lastModifiedDate":"2021-10-25"},{"lineNumber":44,"author":{"gitId":"giterator"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":45,"author":{"gitId":"giterator"},"content":"mlc -\u003e mls : writeToFile(data : String)","lastModifiedDate":"2021-10-25"},{"lineNumber":46,"author":{"gitId":"giterator"},"content":"activate mls","lastModifiedDate":"2021-10-25"},{"lineNumber":47,"author":{"gitId":"giterator"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":48,"author":{"gitId":"giterator"},"content":"mls --\u003e mlc","lastModifiedDate":"2021-10-25"},{"lineNumber":49,"author":{"gitId":"giterator"},"content":"deactivate mls","lastModifiedDate":"2021-10-25"},{"lineNumber":50,"author":{"gitId":"giterator"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":51,"author":{"gitId":"giterator"},"content":"create res","lastModifiedDate":"2021-10-25"},{"lineNumber":52,"author":{"gitId":"giterator"},"content":"mlc -\u003e res: new CommandResult(message)","lastModifiedDate":"2021-10-25"},{"lineNumber":53,"author":{"gitId":"giterator"},"content":"activate res","lastModifiedDate":"2021-10-25"},{"lineNumber":54,"author":{"gitId":"giterator"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":55,"author":{"gitId":"giterator"},"content":"res --\u003e mlc: result","lastModifiedDate":"2021-10-25"},{"lineNumber":56,"author":{"gitId":"giterator"},"content":"deactivate res","lastModifiedDate":"2021-10-25"},{"lineNumber":57,"author":{"gitId":"giterator"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":58,"author":{"gitId":"giterator"},"content":"mlc --\u003e mlc : result","lastModifiedDate":"2021-10-25"},{"lineNumber":59,"author":{"gitId":"giterator"},"content":"deactivate mlc","lastModifiedDate":"2021-10-25"},{"lineNumber":60,"author":{"gitId":"giterator"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":61,"author":{"gitId":"giterator"},"content":"mlc--\u003e[ : result","lastModifiedDate":"2021-10-25"},{"lineNumber":62,"author":{"gitId":"giterator"},"content":"deactivate mlc","lastModifiedDate":"2021-10-25"},{"lineNumber":63,"author":{"gitId":"giterator"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":64,"author":{"gitId":"giterator"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":65,"author":{"gitId":"giterator"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":66,"author":{"gitId":"giterator"},"content":"@enduml","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"giterator":63,"powzx":3}},{"path":"docs/assets/plantuml/ModuleClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"giterator"},"content":"@startuml","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"giterator"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"giterator"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"giterator"},"content":"!include Style.puml","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"giterator"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"giterator"},"content":"hide circle","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"giterator"},"content":"hide empty methods","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"giterator"},"content":"hide empty attributes","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"giterator"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"giterator"},"content":"\u0027left to right direction","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"giterator"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"giterator"},"content":"package module \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"giterator"},"content":"    class ModuleDb MODULE_COLOR","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"giterator"},"content":"    class ModuleListStorage MODULE_COLOR","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"giterator"},"content":"    class ModuleList MODULE_COLOR","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"giterator"},"content":"    class ModuleDetails MODULE_COLOR","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"giterator"},"content":"}","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"giterator"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"giterator"},"content":"package commands \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"giterator"},"content":"    class \"ABSTRACT\\nCommand\" COMMANDS_COLOR","lastModifiedDate":"2021-11-01"},{"lineNumber":21,"author":{"gitId":"giterator"},"content":"    class ModuleCommand COMMANDS_COLOR","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"giterator"},"content":"}","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"giterator"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"giterator"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":25,"author":{"gitId":"giterator"},"content":"\"ABSTRACT\\nCommand\" ^-- ModuleCommand","lastModifiedDate":"2021-11-01"},{"lineNumber":26,"author":{"gitId":"giterator"},"content":"\"ABSTRACT\\nCommand\" --\u003e \"1\" ModuleDb","lastModifiedDate":"2021-11-01"},{"lineNumber":27,"author":{"gitId":"giterator"},"content":"ModuleCommand ..\u003e \"1\" ModuleListStorage","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"giterator"},"content":"\"ABSTRACT\\nCommand\" -\u003e \"1\" ModuleList","lastModifiedDate":"2021-11-01"},{"lineNumber":29,"author":{"gitId":"giterator"},"content":"ModuleList -\u003e \"*\" ModuleDetails","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"giterator"},"content":"@enduml","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"giterator":30}},{"path":"docs/assets/plantuml/OverviewSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"powzx"},"content":"@startuml","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"powzx"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2021-10-23"},{"lineNumber":3,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":4,"author":{"gitId":"powzx"},"content":"!include Style.puml","lastModifiedDate":"2021-10-23"},{"lineNumber":5,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":6,"author":{"gitId":"powzx"},"content":"hide footbox","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"powzx"},"content":"actor User as user","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"powzx"},"content":"participant \":Ui\" as ui UTIL_COLOR","lastModifiedDate":"2021-10-29"},{"lineNumber":10,"author":{"gitId":"powzx"},"content":"participant \":Kolinux\" as kolinux KOLINUX_COLOR","lastModifiedDate":"2021-10-23"},{"lineNumber":11,"author":{"gitId":"powzx"},"content":"participant \":Parser\" as parser UTIL_COLOR","lastModifiedDate":"2021-10-23"},{"lineNumber":12,"author":{"gitId":"powzx"},"content":"participant \":XYZCommand\" as com COMMANDS_COLOR","lastModifiedDate":"2021-10-23"},{"lineNumber":13,"author":{"gitId":"powzx"},"content":"participant \":CommandResult\" as res COMMANDS_COLOR","lastModifiedDate":"2021-10-23"},{"lineNumber":14,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":15,"author":{"gitId":"powzx"},"content":"loop Command not instance of ExitCommand","lastModifiedDate":"2021-10-23"},{"lineNumber":16,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":17,"author":{"gitId":"powzx"},"content":"kolinux -\u003e ui : readUserInput()","lastModifiedDate":"2021-10-29"},{"lineNumber":18,"author":{"gitId":"powzx"},"content":"activate ui","lastModifiedDate":"2021-10-29"},{"lineNumber":19,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":20,"author":{"gitId":"powzx"},"content":"ui -\u003e user : read input","lastModifiedDate":"2021-10-29"},{"lineNumber":21,"author":{"gitId":"powzx"},"content":"user --\u003e ui : userInput","lastModifiedDate":"2021-10-29"},{"lineNumber":22,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":23,"author":{"gitId":"powzx"},"content":"ui --\u003e kolinux : userInput","lastModifiedDate":"2021-10-29"},{"lineNumber":24,"author":{"gitId":"powzx"},"content":"deactivate ui","lastModifiedDate":"2021-10-29"},{"lineNumber":25,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":26,"author":{"gitId":"powzx"},"content":"kolinux -\u003e parser : parseCommand(userInput)","lastModifiedDate":"2021-10-23"},{"lineNumber":27,"author":{"gitId":"powzx"},"content":"activate parser","lastModifiedDate":"2021-10-23"},{"lineNumber":28,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":29,"author":{"gitId":"powzx"},"content":"create com","lastModifiedDate":"2021-10-23"},{"lineNumber":30,"author":{"gitId":"powzx"},"content":"parser -\u003e com : new XYZCommand()","lastModifiedDate":"2021-10-23"},{"lineNumber":31,"author":{"gitId":"powzx"},"content":"activate com","lastModifiedDate":"2021-10-23"},{"lineNumber":32,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":33,"author":{"gitId":"powzx"},"content":"com --\u003e parser : command","lastModifiedDate":"2021-10-23"},{"lineNumber":34,"author":{"gitId":"powzx"},"content":"deactivate com","lastModifiedDate":"2021-10-23"},{"lineNumber":35,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":36,"author":{"gitId":"powzx"},"content":"parser --\u003e kolinux : command","lastModifiedDate":"2021-10-23"},{"lineNumber":37,"author":{"gitId":"powzx"},"content":"deactivate parser","lastModifiedDate":"2021-10-23"},{"lineNumber":38,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":39,"author":{"gitId":"powzx"},"content":"kolinux -\u003e com : executeCommand()","lastModifiedDate":"2021-10-23"},{"lineNumber":40,"author":{"gitId":"powzx"},"content":"activate com","lastModifiedDate":"2021-10-23"},{"lineNumber":41,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":42,"author":{"gitId":"powzx"},"content":"create res","lastModifiedDate":"2021-10-23"},{"lineNumber":43,"author":{"gitId":"powzx"},"content":"com -\u003e res : new CommandResult(feedbackToUser)","lastModifiedDate":"2021-10-23"},{"lineNumber":44,"author":{"gitId":"powzx"},"content":"activate res","lastModifiedDate":"2021-10-23"},{"lineNumber":45,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":46,"author":{"gitId":"powzx"},"content":"res --\u003e com : result","lastModifiedDate":"2021-10-23"},{"lineNumber":47,"author":{"gitId":"powzx"},"content":"deactivate res","lastModifiedDate":"2021-10-23"},{"lineNumber":48,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":49,"author":{"gitId":"powzx"},"content":"com --\u003e kolinux : result","lastModifiedDate":"2021-10-23"},{"lineNumber":50,"author":{"gitId":"powzx"},"content":"deactivate com","lastModifiedDate":"2021-10-23"},{"lineNumber":51,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":52,"author":{"gitId":"powzx"},"content":"kolinux -\u003e ui : showResultToUser(result)","lastModifiedDate":"2021-10-23"},{"lineNumber":53,"author":{"gitId":"powzx"},"content":"activate ui","lastModifiedDate":"2021-10-23"},{"lineNumber":54,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":55,"author":{"gitId":"powzx"},"content":"ui -\u003e user : print result","lastModifiedDate":"2021-10-29"},{"lineNumber":56,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":57,"author":{"gitId":"powzx"},"content":"ui --\u003e kolinux","lastModifiedDate":"2021-10-23"},{"lineNumber":58,"author":{"gitId":"powzx"},"content":"deactivate ui","lastModifiedDate":"2021-10-23"},{"lineNumber":59,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":60,"author":{"gitId":"powzx"},"content":"end","lastModifiedDate":"2021-10-23"},{"lineNumber":61,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":62,"author":{"gitId":"powzx"},"content":"@enduml","lastModifiedDate":"2021-10-23"}],"authorContributionMap":{"powzx":62}},{"path":"docs/assets/plantuml/PlannerAddSequenceDiagram1.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"powzx"},"content":"@startuml","lastModifiedDate":"2021-10-22"},{"lineNumber":2,"author":{"gitId":"powzx"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2021-10-22"},{"lineNumber":3,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":4,"author":{"gitId":"powzx"},"content":"!include Style.puml","lastModifiedDate":"2021-10-23"},{"lineNumber":5,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":6,"author":{"gitId":"powzx"},"content":"hide footbox","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"powzx"},"content":"participant \":Parser\" as parser UTIL_COLOR","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"powzx"},"content":"participant \":PlannerCommand\" as plc COMMANDS_COLOR","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"powzx"},"content":"participant \":Event\" as event PLANNER_COLOR","lastModifiedDate":"2021-10-23"},{"lineNumber":11,"author":{"gitId":"powzx"},"content":"participant \":Planner\" as planner PLANNER_COLOR","lastModifiedDate":"2021-10-23"},{"lineNumber":12,"author":{"gitId":"powzx"},"content":"participant \":PlannerStorage\" as pls PLANNER_COLOR","lastModifiedDate":"2021-10-23"},{"lineNumber":13,"author":{"gitId":"powzx"},"content":"participant \":CommandResult\" as res COMMANDS_COLOR","lastModifiedDate":"2021-10-23"},{"lineNumber":14,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"powzx"},"content":"[-\u003eparser : parse input","lastModifiedDate":"2021-11-03"},{"lineNumber":16,"author":{"gitId":"powzx"},"content":"activate parser","lastModifiedDate":"2021-10-22"},{"lineNumber":17,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":18,"author":{"gitId":"powzx"},"content":"parser -\u003e parser : get subCommand","lastModifiedDate":"2021-11-03"},{"lineNumber":19,"author":{"gitId":"powzx"},"content":"activate parser","lastModifiedDate":"2021-10-22"},{"lineNumber":20,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":21,"author":{"gitId":"powzx"},"content":"create plc","lastModifiedDate":"2021-10-22"},{"lineNumber":22,"author":{"gitId":"powzx"},"content":"parser -\u003e plc : create with parsedArguments","lastModifiedDate":"2021-11-03"},{"lineNumber":23,"author":{"gitId":"powzx"},"content":"activate plc","lastModifiedDate":"2021-10-22"},{"lineNumber":24,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":25,"author":{"gitId":"powzx"},"content":"create planner","lastModifiedDate":"2021-10-22"},{"lineNumber":26,"author":{"gitId":"powzx"},"content":"plc -\u003e planner : new Planner(moduleList)","lastModifiedDate":"2021-10-23"},{"lineNumber":27,"author":{"gitId":"powzx"},"content":"activate planner","lastModifiedDate":"2021-10-22"},{"lineNumber":28,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":29,"author":{"gitId":"powzx"},"content":"create pls","lastModifiedDate":"2021-10-22"},{"lineNumber":30,"author":{"gitId":"powzx"},"content":"planner -\u003e pls : new PlannerStorage()","lastModifiedDate":"2021-10-22"},{"lineNumber":31,"author":{"gitId":"powzx"},"content":"activate pls","lastModifiedDate":"2021-10-22"},{"lineNumber":32,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":33,"author":{"gitId":"powzx"},"content":"pls --\u003e planner : plannerStorage","lastModifiedDate":"2021-10-22"},{"lineNumber":34,"author":{"gitId":"powzx"},"content":"deactivate pls","lastModifiedDate":"2021-10-22"},{"lineNumber":35,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":36,"author":{"gitId":"powzx"},"content":"planner --\u003e plc : planner","lastModifiedDate":"2021-10-22"},{"lineNumber":37,"author":{"gitId":"powzx"},"content":"deactivate planner","lastModifiedDate":"2021-10-22"},{"lineNumber":38,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":39,"author":{"gitId":"powzx"},"content":"plc --\u003e parser : command","lastModifiedDate":"2021-10-22"},{"lineNumber":40,"author":{"gitId":"powzx"},"content":"deactivate plc","lastModifiedDate":"2021-10-22"},{"lineNumber":41,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":42,"author":{"gitId":"powzx"},"content":"parser --\u003e parser : command","lastModifiedDate":"2021-10-22"},{"lineNumber":43,"author":{"gitId":"powzx"},"content":"deactivate parser","lastModifiedDate":"2021-10-22"},{"lineNumber":44,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":45,"author":{"gitId":"powzx"},"content":"parser--\u003e[ : command","lastModifiedDate":"2021-10-22"},{"lineNumber":46,"author":{"gitId":"powzx"},"content":"deactivate parser","lastModifiedDate":"2021-10-22"},{"lineNumber":47,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":48,"author":{"gitId":"powzx"},"content":"[-\u003eplc : executeCommand()","lastModifiedDate":"2021-10-22"},{"lineNumber":49,"author":{"gitId":"powzx"},"content":"activate plc","lastModifiedDate":"2021-10-22"},{"lineNumber":50,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":51,"author":{"gitId":"powzx"},"content":"plc -\u003e plc : handleAddCommand()","lastModifiedDate":"2021-10-22"},{"lineNumber":52,"author":{"gitId":"powzx"},"content":"activate plc","lastModifiedDate":"2021-10-22"},{"lineNumber":53,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":54,"author":{"gitId":"powzx"},"content":"create event","lastModifiedDate":"2021-10-22"},{"lineNumber":55,"author":{"gitId":"powzx"},"content":"plc -\u003e event : new Event(parsedArguments)","lastModifiedDate":"2021-10-22"},{"lineNumber":56,"author":{"gitId":"powzx"},"content":"activate event","lastModifiedDate":"2021-10-22"},{"lineNumber":57,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":58,"author":{"gitId":"giterator"},"content":"event --\u003e plc : event","lastModifiedDate":"2021-10-25"},{"lineNumber":59,"author":{"gitId":"powzx"},"content":"deactivate event","lastModifiedDate":"2021-10-22"},{"lineNumber":60,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":61,"author":{"gitId":"powzx"},"content":"plc -\u003e planner : addEvent(event, false)","lastModifiedDate":"2021-10-23"},{"lineNumber":62,"author":{"gitId":"powzx"},"content":"activate planner","lastModifiedDate":"2021-10-22"},{"lineNumber":63,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":64,"author":{"gitId":"powzx"},"content":"ref over plc, planner, pls : handleConflict","lastModifiedDate":"2021-10-23"},{"lineNumber":65,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":66,"author":{"gitId":"powzx"},"content":"planner -\u003e pls : writeFile(event.toData())","lastModifiedDate":"2021-10-23"},{"lineNumber":67,"author":{"gitId":"powzx"},"content":"activate pls","lastModifiedDate":"2021-10-22"},{"lineNumber":68,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":69,"author":{"gitId":"powzx"},"content":"pls --\u003e planner","lastModifiedDate":"2021-10-23"},{"lineNumber":70,"author":{"gitId":"powzx"},"content":"deactivate pls","lastModifiedDate":"2021-10-22"},{"lineNumber":71,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":72,"author":{"gitId":"powzx"},"content":"planner --\u003e plc","lastModifiedDate":"2021-10-23"},{"lineNumber":73,"author":{"gitId":"powzx"},"content":"deactivate planner","lastModifiedDate":"2021-10-22"},{"lineNumber":74,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":75,"author":{"gitId":"powzx"},"content":"create res","lastModifiedDate":"2021-10-22"},{"lineNumber":76,"author":{"gitId":"powzx"},"content":"plc -\u003e res : new CommandResult(ADD_EVENT_MESSAGE)","lastModifiedDate":"2021-10-23"},{"lineNumber":77,"author":{"gitId":"powzx"},"content":"activate res","lastModifiedDate":"2021-10-22"},{"lineNumber":78,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":79,"author":{"gitId":"powzx"},"content":"res --\u003e plc : result","lastModifiedDate":"2021-10-22"},{"lineNumber":80,"author":{"gitId":"powzx"},"content":"deactivate res","lastModifiedDate":"2021-10-22"},{"lineNumber":81,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":82,"author":{"gitId":"powzx"},"content":"plc --\u003e plc : result","lastModifiedDate":"2021-10-22"},{"lineNumber":83,"author":{"gitId":"powzx"},"content":"deactivate plc","lastModifiedDate":"2021-10-22"},{"lineNumber":84,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":85,"author":{"gitId":"powzx"},"content":"plc--\u003e[ : result","lastModifiedDate":"2021-10-22"},{"lineNumber":86,"author":{"gitId":"powzx"},"content":"deactivate plc","lastModifiedDate":"2021-10-22"},{"lineNumber":87,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":88,"author":{"gitId":"powzx"},"content":"@enduml","lastModifiedDate":"2021-10-22"}],"authorContributionMap":{"giterator":1,"powzx":87}},{"path":"docs/assets/plantuml/PlannerAddSequenceDiagram2.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"powzx"},"content":"@startuml","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"powzx"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2021-10-23"},{"lineNumber":3,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":4,"author":{"gitId":"powzx"},"content":"!include Style.puml","lastModifiedDate":"2021-10-23"},{"lineNumber":5,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":6,"author":{"gitId":"powzx"},"content":"hide footbox","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"powzx"},"content":"participant \":PlannerCommand\" as plc COMMANDS_COLOR","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"powzx"},"content":"participant \":PlannerPromptHandler\" as prompt PLANNER_COLOR","lastModifiedDate":"2021-11-04"},{"lineNumber":10,"author":{"gitId":"powzx"},"content":"participant \":Planner\" as planner PLANNER_COLOR","lastModifiedDate":"2021-10-23"},{"lineNumber":11,"author":{"gitId":"powzx"},"content":"participant \":PlannerStorage\" as pls PLANNER_COLOR","lastModifiedDate":"2021-10-23"},{"lineNumber":12,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":13,"author":{"gitId":"powzx"},"content":"group sd handleConflict","lastModifiedDate":"2021-10-23"},{"lineNumber":14,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":15,"author":{"gitId":"powzx"},"content":"planner -\u003e planner : hasTimeConflict(event)","lastModifiedDate":"2021-10-23"},{"lineNumber":16,"author":{"gitId":"powzx"},"content":"activate planner","lastModifiedDate":"2021-10-23"},{"lineNumber":17,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":18,"author":{"gitId":"powzx"},"content":"planner --\u003e planner : hasConflict","lastModifiedDate":"2021-10-23"},{"lineNumber":19,"author":{"gitId":"powzx"},"content":"deactivate planner","lastModifiedDate":"2021-10-23"},{"lineNumber":20,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":21,"author":{"gitId":"powzx"},"content":"opt hasTimeConflict \u0026\u0026 !allowConflict","lastModifiedDate":"2021-10-23"},{"lineNumber":22,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":23,"author":{"gitId":"powzx"},"content":"planner --\u003e plc : exception","lastModifiedDate":"2021-10-23"},{"lineNumber":24,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":25,"author":{"gitId":"powzx"},"content":"create prompt","lastModifiedDate":"2021-10-23"},{"lineNumber":26,"author":{"gitId":"powzx"},"content":"plc -\u003e prompt : create with planner and message","lastModifiedDate":"2021-11-04"},{"lineNumber":27,"author":{"gitId":"powzx"},"content":"activate prompt","lastModifiedDate":"2021-10-23"},{"lineNumber":28,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":29,"author":{"gitId":"powzx"},"content":"prompt --\u003e plc","lastModifiedDate":"2021-11-04"},{"lineNumber":30,"author":{"gitId":"powzx"},"content":"deactivate prompt","lastModifiedDate":"2021-10-23"},{"lineNumber":31,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":32,"author":{"gitId":"powzx"},"content":"plc -\u003e prompt : handleEventConflict(event)","lastModifiedDate":"2021-11-04"},{"lineNumber":33,"author":{"gitId":"powzx"},"content":"activate prompt","lastModifiedDate":"2021-10-23"},{"lineNumber":34,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":35,"author":{"gitId":"powzx"},"content":"loop reply is not \"yes\" or \"no\"","lastModifiedDate":"2021-11-04"},{"lineNumber":36,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":37,"author":{"gitId":"powzx"},"content":"prompt -\u003e prompt : getReplyFromPrompt()","lastModifiedDate":"2021-11-04"},{"lineNumber":38,"author":{"gitId":"powzx"},"content":"activate prompt","lastModifiedDate":"2021-11-04"},{"lineNumber":39,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":40,"author":{"gitId":"powzx"},"content":"prompt --\u003e prompt : reply","lastModifiedDate":"2021-11-04"},{"lineNumber":41,"author":{"gitId":"powzx"},"content":"deactivate prompt","lastModifiedDate":"2021-11-04"},{"lineNumber":42,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":43,"author":{"gitId":"powzx"},"content":"alt reply is \"yes\"","lastModifiedDate":"2021-11-04"},{"lineNumber":44,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":45,"author":{"gitId":"powzx"},"content":"prompt -\u003e planner : addEvent(event, true)","lastModifiedDate":"2021-11-04"},{"lineNumber":46,"author":{"gitId":"powzx"},"content":"activate planner","lastModifiedDate":"2021-10-23"},{"lineNumber":47,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":48,"author":{"gitId":"powzx"},"content":"planner -\u003e pls : writeFile(event.toData())","lastModifiedDate":"2021-10-23"},{"lineNumber":49,"author":{"gitId":"powzx"},"content":"activate pls","lastModifiedDate":"2021-10-23"},{"lineNumber":50,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":51,"author":{"gitId":"powzx"},"content":"pls --\u003e planner","lastModifiedDate":"2021-10-23"},{"lineNumber":52,"author":{"gitId":"powzx"},"content":"deactivate pls","lastModifiedDate":"2021-10-23"},{"lineNumber":53,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":54,"author":{"gitId":"powzx"},"content":"planner --\u003e prompt","lastModifiedDate":"2021-11-04"},{"lineNumber":55,"author":{"gitId":"powzx"},"content":"deactivate planner","lastModifiedDate":"2021-10-23"},{"lineNumber":56,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":57,"author":{"gitId":"powzx"},"content":"prompt --\u003e plc","lastModifiedDate":"2021-11-04"},{"lineNumber":58,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":59,"author":{"gitId":"powzx"},"content":"else reply is \"no\"","lastModifiedDate":"2021-11-04"},{"lineNumber":60,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":61,"author":{"gitId":"powzx"},"content":"prompt --\u003e plc : exception","lastModifiedDate":"2021-11-04"},{"lineNumber":62,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":63,"author":{"gitId":"powzx"},"content":"else else","lastModifiedDate":"2021-10-23"},{"lineNumber":64,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":65,"author":{"gitId":"powzx"},"content":"prompt -\u003e prompt : changeMessage(INVALID_REPLY_ERROR)","lastModifiedDate":"2021-11-04"},{"lineNumber":66,"author":{"gitId":"powzx"},"content":"activate prompt","lastModifiedDate":"2021-11-04"},{"lineNumber":67,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":68,"author":{"gitId":"powzx"},"content":"prompt --\u003e prompt","lastModifiedDate":"2021-11-04"},{"lineNumber":69,"author":{"gitId":"powzx"},"content":"deactivate prompt","lastModifiedDate":"2021-11-04"},{"lineNumber":70,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":71,"author":{"gitId":"powzx"},"content":"end","lastModifiedDate":"2021-10-23"},{"lineNumber":72,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":73,"author":{"gitId":"powzx"},"content":"end","lastModifiedDate":"2021-10-23"},{"lineNumber":74,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":75,"author":{"gitId":"powzx"},"content":"deactivate prompt","lastModifiedDate":"2021-11-04"},{"lineNumber":76,"author":{"gitId":"powzx"},"content":"destroy prompt","lastModifiedDate":"2021-11-04"},{"lineNumber":77,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":78,"author":{"gitId":"powzx"},"content":"end","lastModifiedDate":"2021-10-23"},{"lineNumber":79,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":80,"author":{"gitId":"powzx"},"content":"@enduml","lastModifiedDate":"2021-10-23"}],"authorContributionMap":{"powzx":80}},{"path":"docs/assets/plantuml/PlannerClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"powzx"},"content":"@startuml","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"powzx"},"content":"\u0027https://plantuml.com/class-diagram","lastModifiedDate":"2021-10-23"},{"lineNumber":3,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":4,"author":{"gitId":"powzx"},"content":"!include Style.puml","lastModifiedDate":"2021-10-23"},{"lineNumber":5,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":6,"author":{"gitId":"powzx"},"content":"hide circle","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"powzx"},"content":"package planner \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"powzx"},"content":"    class Planner","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"powzx"},"content":"    class Event","lastModifiedDate":"2021-10-23"},{"lineNumber":11,"author":{"gitId":"powzx"},"content":"    class PlannerStorage","lastModifiedDate":"2021-10-23"},{"lineNumber":12,"author":{"gitId":"powzx"},"content":"    class ModuleSyncer","lastModifiedDate":"2021-10-23"},{"lineNumber":13,"author":{"gitId":"powzx"},"content":"    class ExamsGetter","lastModifiedDate":"2021-10-23"},{"lineNumber":14,"author":{"gitId":"powzx"},"content":"    class PlannerPromptHandler","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"powzx"},"content":"}","lastModifiedDate":"2021-10-23"},{"lineNumber":16,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":17,"author":{"gitId":"powzx"},"content":"package commands \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2021-10-23"},{"lineNumber":18,"author":{"gitId":"powzx"},"content":"    class PlannerCommand","lastModifiedDate":"2021-10-23"},{"lineNumber":19,"author":{"gitId":"powzx"},"content":"}","lastModifiedDate":"2021-10-23"},{"lineNumber":20,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":21,"author":{"gitId":"powzx"},"content":"package util \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2021-11-04"},{"lineNumber":22,"author":{"gitId":"powzx"},"content":"    class PromptHandler","lastModifiedDate":"2021-11-04"},{"lineNumber":23,"author":{"gitId":"powzx"},"content":"}","lastModifiedDate":"2021-11-04"},{"lineNumber":24,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":25,"author":{"gitId":"powzx"},"content":"class PromptHandler UTIL_COLOR {","lastModifiedDate":"2021-11-04"},{"lineNumber":26,"author":{"gitId":"powzx"},"content":"    # message : String","lastModifiedDate":"2021-11-04"},{"lineNumber":27,"author":{"gitId":"powzx"},"content":"    # getReplyFromPrompt() : String","lastModifiedDate":"2021-11-04"},{"lineNumber":28,"author":{"gitId":"powzx"},"content":"}","lastModifiedDate":"2021-11-04"},{"lineNumber":29,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":30,"author":{"gitId":"powzx"},"content":"class PlannerPromptHandler PLANNER_COLOR {","lastModifiedDate":"2021-11-04"},{"lineNumber":31,"author":{"gitId":"powzx"},"content":"    + handleEventConflict(event: Event): void","lastModifiedDate":"2021-11-04"},{"lineNumber":32,"author":{"gitId":"powzx"},"content":"    + promptForEventId(): String","lastModifiedDate":"2021-11-04"},{"lineNumber":33,"author":{"gitId":"powzx"},"content":"}","lastModifiedDate":"2021-11-04"},{"lineNumber":34,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":35,"author":{"gitId":"powzx"},"content":"class PlannerCommand COMMANDS_COLOR {","lastModifiedDate":"2021-10-23"},{"lineNumber":36,"author":{"gitId":"powzx"},"content":"    - subCommand: String","lastModifiedDate":"2021-10-23"},{"lineNumber":37,"author":{"gitId":"powzx"},"content":"    - parsedArguments : String[*]","lastModifiedDate":"2021-10-23"},{"lineNumber":38,"author":{"gitId":"powzx"},"content":"    + PlannerCommand(subCommand: String, parsedArguments: String[])","lastModifiedDate":"2021-10-23"},{"lineNumber":39,"author":{"gitId":"powzx"},"content":"    + executeCommand(): void","lastModifiedDate":"2021-10-23"},{"lineNumber":40,"author":{"gitId":"powzx"},"content":"}","lastModifiedDate":"2021-10-23"},{"lineNumber":41,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":42,"author":{"gitId":"powzx"},"content":"class Kolinux KOLINUX_COLOR {","lastModifiedDate":"2021-10-23"},{"lineNumber":43,"author":{"gitId":"powzx"},"content":"    + run(): void","lastModifiedDate":"2021-10-23"},{"lineNumber":44,"author":{"gitId":"powzx"},"content":"}","lastModifiedDate":"2021-10-23"},{"lineNumber":45,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":46,"author":{"gitId":"powzx"},"content":"class Planner PLANNER_COLOR {","lastModifiedDate":"2021-10-23"},{"lineNumber":47,"author":{"gitId":"powzx"},"content":"    - moduleList: ModuleList","lastModifiedDate":"2021-10-23"},{"lineNumber":48,"author":{"gitId":"powzx"},"content":"    + Planner(moduleList : ModuleList)","lastModifiedDate":"2021-10-23"},{"lineNumber":49,"author":{"gitId":"powzx"},"content":"    + initPlanner(): void","lastModifiedDate":"2021-10-23"},{"lineNumber":50,"author":{"gitId":"powzx"},"content":"    + addEvent(event: Event, allowConflict: boolean): void","lastModifiedDate":"2021-10-23"},{"lineNumber":51,"author":{"gitId":"powzx"},"content":"    + listEvents(date: String, withId: boolean): String","lastModifiedDate":"2021-10-23"},{"lineNumber":52,"author":{"gitId":"powzx"},"content":"    + deleteEvent(date: String): Event","lastModifiedDate":"2021-11-01"},{"lineNumber":53,"author":{"gitId":"powzx"},"content":"}","lastModifiedDate":"2021-10-23"},{"lineNumber":54,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":55,"author":{"gitId":"powzx"},"content":"class Event PLANNER_COLOR {","lastModifiedDate":"2021-10-23"},{"lineNumber":56,"author":{"gitId":"powzx"},"content":"    - description: String","lastModifiedDate":"2021-10-23"},{"lineNumber":57,"author":{"gitId":"powzx"},"content":"    - date: LocalDate","lastModifiedDate":"2021-10-23"},{"lineNumber":58,"author":{"gitId":"powzx"},"content":"    - startTime: LocalTime","lastModifiedDate":"2021-10-23"},{"lineNumber":59,"author":{"gitId":"powzx"},"content":"    - endTime: LocalTime","lastModifiedDate":"2021-10-23"},{"lineNumber":60,"author":{"gitId":"powzx"},"content":"    - id: int","lastModifiedDate":"2021-10-23"},{"lineNumber":61,"author":{"gitId":"powzx"},"content":"    - isLesson: boolean \u003d false","lastModifiedDate":"2021-10-23"},{"lineNumber":62,"author":{"gitId":"powzx"},"content":"    + Event(parsedArguments: String[])","lastModifiedDate":"2021-10-23"},{"lineNumber":63,"author":{"gitId":"powzx"},"content":"}","lastModifiedDate":"2021-10-23"},{"lineNumber":64,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":65,"author":{"gitId":"powzx"},"content":"class PlannerStorage PLANNER_COLOR {","lastModifiedDate":"2021-10-23"},{"lineNumber":66,"author":{"gitId":"powzx"},"content":"    - {static} file: File","lastModifiedDate":"2021-10-23"},{"lineNumber":67,"author":{"gitId":"powzx"},"content":"    + writeFile(eventData: String): void","lastModifiedDate":"2021-10-23"},{"lineNumber":68,"author":{"gitId":"powzx"},"content":"    + rewriteFile(eventDataStrings: ArrayList\u003cString\u003e): void","lastModifiedDate":"2021-10-23"},{"lineNumber":69,"author":{"gitId":"powzx"},"content":"    + readFIle(): ArrayList\u003cString\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":70,"author":{"gitId":"powzx"},"content":"}","lastModifiedDate":"2021-10-23"},{"lineNumber":71,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":72,"author":{"gitId":"powzx"},"content":"class ModuleSyncer PLANNER_COLOR {","lastModifiedDate":"2021-10-23"},{"lineNumber":73,"author":{"gitId":"powzx"},"content":"    - date: String","lastModifiedDate":"2021-10-23"},{"lineNumber":74,"author":{"gitId":"powzx"},"content":"    - lessonsOnDate: Lesson[*]","lastModifiedDate":"2021-10-23"},{"lineNumber":75,"author":{"gitId":"powzx"},"content":"    + ModuleSyncer(moduleList : ModuleList, date: String)","lastModifiedDate":"2021-10-23"},{"lineNumber":76,"author":{"gitId":"powzx"},"content":"    - getExamsOnDate(moduleList : ModuleList): void","lastModifiedDate":"2021-10-23"},{"lineNumber":77,"author":{"gitId":"powzx"},"content":"    - getLessonsOnDate(): void","lastModifiedDate":"2021-10-23"},{"lineNumber":78,"author":{"gitId":"powzx"},"content":"    - convertLessonListToEventList(): void","lastModifiedDate":"2021-10-23"},{"lineNumber":79,"author":{"gitId":"powzx"},"content":"}","lastModifiedDate":"2021-10-23"},{"lineNumber":80,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":81,"author":{"gitId":"powzx"},"content":"class ExamsGetter PLANNER_COLOR {","lastModifiedDate":"2021-10-23"},{"lineNumber":82,"author":{"gitId":"powzx"},"content":"    - moduleList: ModuleList","lastModifiedDate":"2021-10-23"},{"lineNumber":83,"author":{"gitId":"powzx"},"content":"    + ExamsGetter(moduleList: ModuleList)","lastModifiedDate":"2021-10-23"},{"lineNumber":84,"author":{"gitId":"powzx"},"content":"    - retrieveModuleExams(): void","lastModifiedDate":"2021-10-23"},{"lineNumber":85,"author":{"gitId":"powzx"},"content":"}","lastModifiedDate":"2021-10-23"},{"lineNumber":86,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":87,"author":{"gitId":"powzx"},"content":"PlannerPromptHandler -left-|\u003e PromptHandler","lastModifiedDate":"2021-11-04"},{"lineNumber":88,"author":{"gitId":"powzx"},"content":"PlannerPromptHandler -down-\u003e \"1\" Planner : planner","lastModifiedDate":"2021-11-04"},{"lineNumber":89,"author":{"gitId":"powzx"},"content":"PlannerCommand ..\u003e PlannerPromptHandler","lastModifiedDate":"2021-11-04"},{"lineNumber":90,"author":{"gitId":"powzx"},"content":"PlannerCommand --\u003e \"1\" Planner : planner","lastModifiedDate":"2021-10-23"},{"lineNumber":91,"author":{"gitId":"powzx"},"content":"Kolinux --\u003e \"1\" Planner : planner","lastModifiedDate":"2021-11-04"},{"lineNumber":92,"author":{"gitId":"powzx"},"content":"Planner --\u003e \"1\" PlannerStorage : plannerStorage","lastModifiedDate":"2021-10-23"},{"lineNumber":93,"author":{"gitId":"powzx"},"content":"Planner .\u003e \"0..1\" ModuleSyncer","lastModifiedDate":"2021-10-23"},{"lineNumber":94,"author":{"gitId":"powzx"},"content":"ModuleSyncer ..\u003e \"0..1\" ExamsGetter","lastModifiedDate":"2021-10-23"},{"lineNumber":95,"author":{"gitId":"powzx"},"content":"PlannerCommand .\u003e \"0..1\" Event","lastModifiedDate":"2021-10-23"},{"lineNumber":96,"author":{"gitId":"powzx"},"content":"Event \"*\" \u003c-- ModuleSyncer : lessonsAndExamsAsEventsOnDate","lastModifiedDate":"2021-10-23"},{"lineNumber":97,"author":{"gitId":"powzx"},"content":"Event \"*\" \u003c-- ExamsGetter : exams","lastModifiedDate":"2021-10-23"},{"lineNumber":98,"author":{"gitId":"powzx"},"content":"Event \"*\" \u003c- Planner : scheduleOfAllDates","lastModifiedDate":"2021-10-23"},{"lineNumber":99,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":100,"author":{"gitId":"powzx"},"content":"@enduml","lastModifiedDate":"2021-10-23"}],"authorContributionMap":{"powzx":100}},{"path":"docs/assets/plantuml/PlannerObjectDiagramAfter.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"powzx"},"content":"@startuml","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"powzx"},"content":"\u0027https://plantuml.com/object-diagram","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"powzx"},"content":"!include Style.puml","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"powzx"},"content":"object \"\u003cu\u003eplanner:Planner\" as planner PLANNER_COLOR","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"powzx"},"content":"object \"\u003cu\u003e:Event\" as event1 PLANNER_COLOR","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"powzx"},"content":"object \"\u003cu\u003e:Event\" as event2 PLANNER_COLOR","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"powzx"},"content":"object \"\u003cu\u003e:Event\" as lesson PLANNER_COLOR","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"powzx"},"content":"object \"\u003cu\u003e:Event\" as exam PLANNER_COLOR","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"powzx"},"content":"note \"Event constructed from lesson\" as N1","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"powzx"},"content":"note \"Event constructed from exam\" as N2","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"powzx"},"content":"note \"Event filtered from scheduleOfAllDates\" as N3","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"powzx"},"content":"lesson - N1","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"powzx"},"content":"exam -- N2","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"powzx"},"content":"event2 - N3","lastModifiedDate":"2021-11-04"},{"lineNumber":19,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"powzx"},"content":"planner -left-\u003e \"scheduleOfAllDates\" event1","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"powzx"},"content":"planner .up.\u003e \"filteredPlanner\" event2","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"powzx"},"content":"planner .right.\u003e \"filteredPlanner\" lesson","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"powzx"},"content":"planner .down.\u003e \"filteredPlanner\" exam","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":25,"author":{"gitId":"powzx"},"content":"@enduml","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"powzx":25}},{"path":"docs/assets/plantuml/PlannerObjectDiagramBefore.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"powzx"},"content":"@startuml","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"powzx"},"content":"\u0027https://plantuml.com/object-diagram","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"powzx"},"content":"!include Style.puml","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"powzx"},"content":"object \"\u003cu\u003eplanner:Planner\" as planner PLANNER_COLOR","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"powzx"},"content":"object \"\u003cu\u003e:Event\" as event PLANNER_COLOR","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"powzx"},"content":"object \"\u003cu\u003emoduleList:ModuleList\" as mod MODULE_COLOR","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"powzx"},"content":"object \"\u003cu\u003e:ModuleDetails\" as details MODULE_COLOR","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"powzx"},"content":"object \"\u003cu\u003etimetable:Timetable\" as timetable TIMETABLE_COLOR","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"powzx"},"content":"object \"\u003cu\u003e:Lesson\" as lesson TIMETABLE_COLOR","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"powzx"},"content":"planner -\u003e mod","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"powzx"},"content":"planner --\u003e \"scheduleOfAllDates\" event","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"powzx"},"content":"mod --\u003e \"myModules\" details","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"powzx"},"content":"mod \u003c- timetable","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"powzx"},"content":"timetable --\u003e \"lessonStorage\" lesson","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"powzx"},"content":"@enduml","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"powzx":19}},{"path":"docs/assets/plantuml/Style.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"powzx"},"content":"!define CAPCALCULATOR_COLOR #3333C4","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"powzx"},"content":"!define COMMANDS_COLOR #99D2FF","lastModifiedDate":"2021-10-23"},{"lineNumber":3,"author":{"gitId":"powzx"},"content":"!define EXCEPTIONS_COLOR #FFFFFF","lastModifiedDate":"2021-10-23"},{"lineNumber":4,"author":{"gitId":"powzx"},"content":"!define MODULE_COLOR #C90076","lastModifiedDate":"2021-10-23"},{"lineNumber":5,"author":{"gitId":"powzx"},"content":"!define PLANNER_COLOR #C5C900","lastModifiedDate":"2021-10-23"},{"lineNumber":6,"author":{"gitId":"powzx"},"content":"!define ROUTES_COLOR #00C9A6","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"powzx"},"content":"!define TIMETABLE_COLOR #C95A00","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"nonrnp"},"content":"!define CAPCALCULATOR_COLOR #FF7B00","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"powzx"},"content":"!define UTIL_COLOR #B7B1AC","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"powzx"},"content":"!define KOLINUX_COLOR #FF00E0","lastModifiedDate":"2021-10-23"},{"lineNumber":11,"author":{"gitId":"powzx"},"content":"!define MAIN_COLOR #FF0000","lastModifiedDate":"2021-10-23"},{"lineNumber":12,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":13,"author":{"gitId":"nonrnp"},"content":"!define ABSTRACT \u0026#123;abstract\u0026#125;","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"powzx"},"content":"skinparam defaultFontSize 15","lastModifiedDate":"2021-10-23"},{"lineNumber":16,"author":{"gitId":"powzx"},"content":"skinparam classAttributeIconSize 0","lastModifiedDate":"2021-10-23"},{"lineNumber":17,"author":{"gitId":"powzx"},"content":"skinparam nodesep 60","lastModifiedDate":"2021-10-23"},{"lineNumber":18,"author":{"gitId":"powzx"},"content":"skinparam componentStyle rectangle","lastModifiedDate":"2021-10-23"}],"authorContributionMap":{"nonrnp":3,"powzx":15}},{"path":"docs/assets/plantuml/TimetableAddSequenceDiagram1.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"saravanamani1999"},"content":"@startuml","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"saravanamani1999"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2021-10-23"},{"lineNumber":3,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":4,"author":{"gitId":"saravanamani1999"},"content":"!include Style.puml","lastModifiedDate":"2021-10-23"},{"lineNumber":5,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":6,"author":{"gitId":"saravanamani1999"},"content":"hide footbox","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"saravanamani1999"},"content":"participant \":Parser\" as parser UTIL_COLOR","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"saravanamani1999"},"content":"participant \":TimetableCommand\" as command COMMANDS_COLOR","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"saravanamani1999"},"content":"participant \":Timetable\" as table TIMETABLE_COLOR","lastModifiedDate":"2021-10-23"},{"lineNumber":11,"author":{"gitId":"saravanamani1999"},"content":"participant \":CommandResult\" as result COMMANDS_COLOR","lastModifiedDate":"2021-10-23"},{"lineNumber":12,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":13,"author":{"gitId":"powzx"},"content":"[-\u003e parser : parse input","lastModifiedDate":"2021-11-03"},{"lineNumber":14,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":15,"author":{"gitId":"saravanamani1999"},"content":"activate parser","lastModifiedDate":"2021-10-23"},{"lineNumber":16,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":17,"author":{"gitId":"powzx"},"content":"parser -\u003e parser : get subCommand","lastModifiedDate":"2021-11-03"},{"lineNumber":18,"author":{"gitId":"saravanamani1999"},"content":"activate parser","lastModifiedDate":"2021-10-23"},{"lineNumber":19,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":20,"author":{"gitId":"saravanamani1999"},"content":"create command","lastModifiedDate":"2021-10-23"},{"lineNumber":21,"author":{"gitId":"powzx"},"content":"parser -\u003e command : create with lessonDetails","lastModifiedDate":"2021-11-03"},{"lineNumber":22,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":23,"author":{"gitId":"saravanamani1999"},"content":"activate command","lastModifiedDate":"2021-10-23"},{"lineNumber":24,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":25,"author":{"gitId":"saravanamani1999"},"content":"command --\u003e parser : command","lastModifiedDate":"2021-10-23"},{"lineNumber":26,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":27,"author":{"gitId":"saravanamani1999"},"content":"deactivate command","lastModifiedDate":"2021-10-23"},{"lineNumber":28,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":29,"author":{"gitId":"saravanamani1999"},"content":"parser --\u003e parser : command","lastModifiedDate":"2021-10-23"},{"lineNumber":30,"author":{"gitId":"saravanamani1999"},"content":"deactivate parser","lastModifiedDate":"2021-10-23"},{"lineNumber":31,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":32,"author":{"gitId":"saravanamani1999"},"content":"parser --\u003e[ : command","lastModifiedDate":"2021-10-23"},{"lineNumber":33,"author":{"gitId":"saravanamani1999"},"content":"deactivate parser","lastModifiedDate":"2021-10-23"},{"lineNumber":34,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":35,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":36,"author":{"gitId":"saravanamani1999"},"content":"[-\u003e command : executeCommand()","lastModifiedDate":"2021-10-23"},{"lineNumber":37,"author":{"gitId":"saravanamani1999"},"content":"activate command","lastModifiedDate":"2021-10-23"},{"lineNumber":38,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":39,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":40,"author":{"gitId":"saravanamani1999"},"content":"command -\u003e command : addLesson()","lastModifiedDate":"2021-10-23"},{"lineNumber":41,"author":{"gitId":"saravanamani1999"},"content":"activate command","lastModifiedDate":"2021-10-23"},{"lineNumber":42,"author":{"gitId":"saravanamani1999"},"content":"create table","lastModifiedDate":"2021-10-23"},{"lineNumber":43,"author":{"gitId":"saravanamani1999"},"content":"command -\u003e table : new Timetable(moduleList)","lastModifiedDate":"2021-10-23"},{"lineNumber":44,"author":{"gitId":"saravanamani1999"},"content":"activate table","lastModifiedDate":"2021-10-23"},{"lineNumber":45,"author":{"gitId":"saravanamani1999"},"content":"table--\u003e command","lastModifiedDate":"2021-10-23"},{"lineNumber":46,"author":{"gitId":"saravanamani1999"},"content":"deactivate table","lastModifiedDate":"2021-10-23"},{"lineNumber":47,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":48,"author":{"gitId":"saravanamani1999"},"content":"ref over table : Timetable add operation","lastModifiedDate":"2021-10-23"},{"lineNumber":49,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":50,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":51,"author":{"gitId":"saravanamani1999"},"content":"create result","lastModifiedDate":"2021-10-23"},{"lineNumber":52,"author":{"gitId":"saravanamani1999"},"content":"command -\u003e result : new CommandResult(ADD_LESSON_MESSAGE)","lastModifiedDate":"2021-10-23"},{"lineNumber":53,"author":{"gitId":"saravanamani1999"},"content":"activate result","lastModifiedDate":"2021-10-23"},{"lineNumber":54,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":55,"author":{"gitId":"saravanamani1999"},"content":"result --\u003e command : result","lastModifiedDate":"2021-10-23"},{"lineNumber":56,"author":{"gitId":"saravanamani1999"},"content":"deactivate result","lastModifiedDate":"2021-10-23"},{"lineNumber":57,"author":{"gitId":"saravanamani1999"},"content":"command --\u003e command : result","lastModifiedDate":"2021-10-23"},{"lineNumber":58,"author":{"gitId":"saravanamani1999"},"content":"deactivate command","lastModifiedDate":"2021-10-23"},{"lineNumber":59,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":60,"author":{"gitId":"saravanamani1999"},"content":"command --\u003e[ : result","lastModifiedDate":"2021-10-23"},{"lineNumber":61,"author":{"gitId":"saravanamani1999"},"content":"deactivate command","lastModifiedDate":"2021-10-23"},{"lineNumber":62,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":63,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":64,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":65,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":66,"author":{"gitId":"saravanamani1999"},"content":"@enduml","lastModifiedDate":"2021-10-23"}],"authorContributionMap":{"saravanamani1999":63,"powzx":3}},{"path":"docs/assets/plantuml/TimetableAddSequenceDiagram2.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"saravanamani1999"},"content":"@startuml","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"saravanamani1999"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2021-10-23"},{"lineNumber":3,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":4,"author":{"gitId":"saravanamani1999"},"content":"hide footbox","lastModifiedDate":"2021-10-23"},{"lineNumber":5,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":6,"author":{"gitId":"saravanamani1999"},"content":"!include Style.puml","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"saravanamani1999"},"content":"participant \":Timetable\" as table TIMETABLE_COLOR","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"saravanamani1999"},"content":"participant \":AddSubCommand\" as subCommand TIMETABLE_COLOR","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"saravanamani1999"},"content":"participant \":TimetableStorage\" as storage TIMETABLE_COLOR","lastModifiedDate":"2021-10-23"},{"lineNumber":11,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":12,"author":{"gitId":"saravanamani1999"},"content":"group sd Timetable add operation","lastModifiedDate":"2021-10-23"},{"lineNumber":13,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":14,"author":{"gitId":"saravanamani1999"},"content":"table -\u003e table : executeAdd(lessonDetails)","lastModifiedDate":"2021-10-23"},{"lineNumber":15,"author":{"gitId":"saravanamani1999"},"content":"activate table","lastModifiedDate":"2021-10-23"},{"lineNumber":16,"author":{"gitId":"saravanamani1999"},"content":"create subCommand","lastModifiedDate":"2021-10-23"},{"lineNumber":17,"author":{"gitId":"saravanamani1999"},"content":"table -\u003e subCommand : new addSubCommand()","lastModifiedDate":"2021-10-23"},{"lineNumber":18,"author":{"gitId":"saravanamani1999"},"content":"activate subCommand","lastModifiedDate":"2021-10-23"},{"lineNumber":19,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":20,"author":{"gitId":"saravanamani1999"},"content":"subCommand --\u003e table","lastModifiedDate":"2021-10-23"},{"lineNumber":21,"author":{"gitId":"saravanamani1999"},"content":"deactivate subCommand","lastModifiedDate":"2021-10-23"},{"lineNumber":22,"author":{"gitId":"saravanamani1999"},"content":"table -\u003e table : executeAdd(lessonDetails)","lastModifiedDate":"2021-10-23"},{"lineNumber":23,"author":{"gitId":"saravanamani1999"},"content":"activate table","lastModifiedDate":"2021-10-23"},{"lineNumber":24,"author":{"gitId":"saravanamani1999"},"content":"activate subCommand","lastModifiedDate":"2021-10-23"},{"lineNumber":25,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":26,"author":{"gitId":"saravanamani1999"},"content":"create storage","lastModifiedDate":"2021-10-23"},{"lineNumber":27,"author":{"gitId":"saravanamani1999"},"content":"subCommand -\u003e storage","lastModifiedDate":"2021-10-23"},{"lineNumber":28,"author":{"gitId":"saravanamani1999"},"content":"activate storage","lastModifiedDate":"2021-10-23"},{"lineNumber":29,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":30,"author":{"gitId":"saravanamani1999"},"content":"storage --\u003e subCommand","lastModifiedDate":"2021-10-23"},{"lineNumber":31,"author":{"gitId":"saravanamani1999"},"content":"deactivate storage","lastModifiedDate":"2021-10-23"},{"lineNumber":32,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":33,"author":{"gitId":"saravanamani1999"},"content":"table -\u003e subCommand : inputLesson(lessonDetails)","lastModifiedDate":"2021-10-23"},{"lineNumber":34,"author":{"gitId":"saravanamani1999"},"content":"ref over subCommand, storage : Timetable checks before adding","lastModifiedDate":"2021-10-23"},{"lineNumber":35,"author":{"gitId":"saravanamani1999"},"content":"deactivate storage","lastModifiedDate":"2021-10-23"},{"lineNumber":36,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":37,"author":{"gitId":"saravanamani1999"},"content":"subCommand --\u003e table","lastModifiedDate":"2021-10-23"},{"lineNumber":38,"author":{"gitId":"saravanamani1999"},"content":"deactivate subCommand","lastModifiedDate":"2021-10-23"},{"lineNumber":39,"author":{"gitId":"saravanamani1999"},"content":"table --\u003e table","lastModifiedDate":"2021-10-23"},{"lineNumber":40,"author":{"gitId":"saravanamani1999"},"content":"deactivate table","lastModifiedDate":"2021-10-23"},{"lineNumber":41,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":42,"author":{"gitId":"saravanamani1999"},"content":"table --\u003e[","lastModifiedDate":"2021-10-23"},{"lineNumber":43,"author":{"gitId":"saravanamani1999"},"content":"deactivate table","lastModifiedDate":"2021-10-23"},{"lineNumber":44,"author":{"gitId":"saravanamani1999"},"content":"end","lastModifiedDate":"2021-10-23"},{"lineNumber":45,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":46,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":47,"author":{"gitId":"saravanamani1999"},"content":"@enduml","lastModifiedDate":"2021-10-23"}],"authorContributionMap":{"saravanamani1999":47}},{"path":"docs/assets/plantuml/TimetableAddSequenceDiagram3.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"saravanamani1999"},"content":"@startuml","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"saravanamani1999"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2021-10-23"},{"lineNumber":3,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":4,"author":{"gitId":"saravanamani1999"},"content":"!include Style.puml","lastModifiedDate":"2021-10-23"},{"lineNumber":5,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":6,"author":{"gitId":"saravanamani1999"},"content":"participant \":AddSubCommand\" as subCommand TIMETABLE_COLOR","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"saravanamani1999"},"content":"participant \":Lesson\" as lesson TIMETABLE_COLOR","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"saravanamani1999"},"content":"participant \":TimetableStorage\" as storage TIMETABLE_COLOR","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"saravanamani1999"},"content":"hide footbox","lastModifiedDate":"2021-10-23"},{"lineNumber":11,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":12,"author":{"gitId":"saravanamani1999"},"content":"group sd Timetable checks before adding","lastModifiedDate":"2021-10-23"},{"lineNumber":13,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":14,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":15,"author":{"gitId":"saravanamani1999"},"content":"alt isLessonInModuleList(moduleList, moduleCode) || \\n isPeriodFree(start, end, day)","lastModifiedDate":"2021-10-23"},{"lineNumber":16,"author":{"gitId":"saravanamani1999"},"content":"create lesson","lastModifiedDate":"2021-10-23"},{"lineNumber":17,"author":{"gitId":"saravanamani1999"},"content":"subCommand -\u003e lesson : new Lesson()","lastModifiedDate":"2021-10-23"},{"lineNumber":18,"author":{"gitId":"saravanamani1999"},"content":"activate lesson","lastModifiedDate":"2021-10-23"},{"lineNumber":19,"author":{"gitId":"saravanamani1999"},"content":"lesson --\u003e subCommand","lastModifiedDate":"2021-10-23"},{"lineNumber":20,"author":{"gitId":"saravanamani1999"},"content":"deactivate lesson","lastModifiedDate":"2021-10-23"},{"lineNumber":21,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":22,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":23,"author":{"gitId":"saravanamani1999"},"content":"subCommand -\u003e subCommand : addToTimetable(lesson)","lastModifiedDate":"2021-10-23"},{"lineNumber":24,"author":{"gitId":"saravanamani1999"},"content":"activate subCommand","lastModifiedDate":"2021-10-23"},{"lineNumber":25,"author":{"gitId":"saravanamani1999"},"content":"subCommand -\u003e storage : writeToFile()","lastModifiedDate":"2021-10-23"},{"lineNumber":26,"author":{"gitId":"saravanamani1999"},"content":"activate storage","lastModifiedDate":"2021-10-23"},{"lineNumber":27,"author":{"gitId":"saravanamani1999"},"content":"storage --\u003e subCommand","lastModifiedDate":"2021-10-23"},{"lineNumber":28,"author":{"gitId":"saravanamani1999"},"content":"deactivate storage","lastModifiedDate":"2021-10-23"},{"lineNumber":29,"author":{"gitId":"saravanamani1999"},"content":"subCommand --\u003e[","lastModifiedDate":"2021-10-23"},{"lineNumber":30,"author":{"gitId":"saravanamani1999"},"content":"deactivate subCommand","lastModifiedDate":"2021-10-23"},{"lineNumber":31,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":32,"author":{"gitId":"saravanamani1999"},"content":"else else","lastModifiedDate":"2021-10-23"},{"lineNumber":33,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":34,"author":{"gitId":"saravanamani1999"},"content":"subCommand --\u003e[ : exception","lastModifiedDate":"2021-10-23"},{"lineNumber":35,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":36,"author":{"gitId":"saravanamani1999"},"content":"end","lastModifiedDate":"2021-10-23"},{"lineNumber":37,"author":{"gitId":"saravanamani1999"},"content":"end","lastModifiedDate":"2021-10-23"},{"lineNumber":38,"author":{"gitId":"saravanamani1999"},"content":"@enduml","lastModifiedDate":"2021-10-23"}],"authorContributionMap":{"saravanamani1999":38}},{"path":"docs/assets/plantuml/TimetableClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"saravanamani1999"},"content":"@startuml","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"saravanamani1999"},"content":"\u0027https://plantuml.com/class-diagram","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"saravanamani1999"},"content":"!include Style.puml","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"saravanamani1999"},"content":"hide circle","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"saravanamani1999"},"content":"class UpdateSubCommand","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"saravanamani1999"},"content":"class ViewSubCommand","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"saravanamani1999"},"content":"class AddSubCommand","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"saravanamani1999"},"content":"class SubCommand","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"saravanamani1999"},"content":"class DeleteSubCommand","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"saravanamani1999"},"content":"class \"ABSTRACT \\n Lesson\"","lastModifiedDate":"2021-10-30"},{"lineNumber":15,"author":{"gitId":"saravanamani1999"},"content":"class Tutorial","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"saravanamani1999"},"content":"class Lecture","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"saravanamani1999"},"content":"class TimetableStorage","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"saravanamani1999"},"content":"class Timetable","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"saravanamani1999"},"content":"SubCommand ^-- DeleteSubCommand","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"saravanamani1999"},"content":"ViewSubCommand --^ SubCommand","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"saravanamani1999"},"content":"AddSubCommand --^ SubCommand","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"saravanamani1999"},"content":"UpdateSubCommand --^ SubCommand","lastModifiedDate":"2021-10-25"},{"lineNumber":25,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":26,"author":{"gitId":"saravanamani1999"},"content":"\"ABSTRACT \\n Lesson\" ^-- Lecture","lastModifiedDate":"2021-10-30"},{"lineNumber":27,"author":{"gitId":"saravanamani1999"},"content":"\"ABSTRACT \\n Lesson\" ^-- Tutorial","lastModifiedDate":"2021-10-30"},{"lineNumber":28,"author":{"gitId":"saravanamani1999"},"content":"\"ABSTRACT \\n Lesson\" ^-- Lab","lastModifiedDate":"2021-10-30"},{"lineNumber":29,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"saravanamani1999"},"content":"AddSubCommand ..\u003e \"1..*\" \"ABSTRACT \\n Lesson\" : lesson","lastModifiedDate":"2021-10-30"},{"lineNumber":31,"author":{"gitId":"saravanamani1999"},"content":"DeleteSubCommand ..\u003e \"1..*\" \"ABSTRACT \\n Lesson\" : lesson","lastModifiedDate":"2021-10-30"},{"lineNumber":32,"author":{"gitId":"saravanamani1999"},"content":"UpdateSubCommand ..\u003e \"1..*\" \"ABSTRACT \\n Lesson\" : lesson","lastModifiedDate":"2021-10-30"},{"lineNumber":33,"author":{"gitId":"saravanamani1999"},"content":"Timetable --\u003e \"1\" TimetableStorage : timetableStorage","lastModifiedDate":"2021-10-25"},{"lineNumber":34,"author":{"gitId":"saravanamani1999"},"content":"Timetable --\u003e \"*\" \"ABSTRACT \\n Lesson\" : lessonStorage","lastModifiedDate":"2021-10-30"},{"lineNumber":35,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":36,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":37,"author":{"gitId":"saravanamani1999"},"content":"TimetableStorage --\u003e \"*\" \"ABSTRACT \\n Lesson\" : lessonStorage","lastModifiedDate":"2021-10-30"},{"lineNumber":38,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":39,"author":{"gitId":"saravanamani1999"},"content":"class Timetable TIMETABLE_COLOR {","lastModifiedDate":"2021-10-25"},{"lineNumber":40,"author":{"gitId":"saravanamani1999"},"content":"    + {static} timetableData: String[][]","lastModifiedDate":"2021-10-25"},{"lineNumber":41,"author":{"gitId":"saravanamani1999"},"content":"    + {static} moduleList: ModuleList","lastModifiedDate":"2021-10-25"},{"lineNumber":42,"author":{"gitId":"saravanamani1999"},"content":"    - addSubCommand: AddSubCommand","lastModifiedDate":"2021-10-25"},{"lineNumber":43,"author":{"gitId":"saravanamani1999"},"content":"    - deleteSubCommand: DeleteSubCommand","lastModifiedDate":"2021-10-25"},{"lineNumber":44,"author":{"gitId":"saravanamani1999"},"content":"    - updateSubCommand: UpdateSubCommand","lastModifiedDate":"2021-10-25"},{"lineNumber":45,"author":{"gitId":"saravanamani1999"},"content":"    - viewSubCommand: ViewSubCommand","lastModifiedDate":"2021-10-25"},{"lineNumber":46,"author":{"gitId":"saravanamani1999"},"content":"    + initTimetable(): void","lastModifiedDate":"2021-10-25"},{"lineNumber":47,"author":{"gitId":"saravanamani1999"},"content":"    + public clearTimetable(): void","lastModifiedDate":"2021-10-25"},{"lineNumber":48,"author":{"gitId":"saravanamani1999"},"content":"}","lastModifiedDate":"2021-10-25"},{"lineNumber":49,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":50,"author":{"gitId":"saravanamani1999"},"content":"class TimetableStorage TIMETABLE_COLOR {","lastModifiedDate":"2021-10-25"},{"lineNumber":51,"author":{"gitId":"saravanamani1999"},"content":"\u0027    - lessonStorage: Lesson","lastModifiedDate":"2021-10-25"},{"lineNumber":52,"author":{"gitId":"saravanamani1999"},"content":"    + writeToFile(): void","lastModifiedDate":"2021-10-25"},{"lineNumber":53,"author":{"gitId":"saravanamani1999"},"content":"    + createFilePath(filePath:String): void","lastModifiedDate":"2021-10-25"},{"lineNumber":54,"author":{"gitId":"saravanamani1999"},"content":"    + clearFile(): void","lastModifiedDate":"2021-10-25"},{"lineNumber":55,"author":{"gitId":"saravanamani1999"},"content":"}","lastModifiedDate":"2021-10-25"},{"lineNumber":56,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":57,"author":{"gitId":"saravanamani1999"},"content":"class ViewSubCommand TIMETABLE_COLOR {","lastModifiedDate":"2021-10-25"},{"lineNumber":58,"author":{"gitId":"saravanamani1999"},"content":"+ viewTimetable(): void","lastModifiedDate":"2021-10-25"},{"lineNumber":59,"author":{"gitId":"saravanamani1999"},"content":"}","lastModifiedDate":"2021-10-25"},{"lineNumber":60,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":61,"author":{"gitId":"saravanamani1999"},"content":"class AddSubCommand TIMETABLE_COLOR {","lastModifiedDate":"2021-10-25"},{"lineNumber":62,"author":{"gitId":"saravanamani1999"},"content":"+ inputLesson(lessonDetails: String[]): void","lastModifiedDate":"2021-10-25"},{"lineNumber":63,"author":{"gitId":"saravanamani1999"},"content":"- addToTimetable(lesson: Lesson): void","lastModifiedDate":"2021-10-25"},{"lineNumber":64,"author":{"gitId":"saravanamani1999"},"content":"}","lastModifiedDate":"2021-10-25"},{"lineNumber":65,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":66,"author":{"gitId":"saravanamani1999"},"content":"class DeleteSubCommand TIMETABLE_COLOR {","lastModifiedDate":"2021-10-25"},{"lineNumber":67,"author":{"gitId":"saravanamani1999"},"content":"+ deleteLesson(lessonDetails : String[]): void","lastModifiedDate":"2021-10-25"},{"lineNumber":68,"author":{"gitId":"saravanamani1999"},"content":"- deleteFromTimetable(moduleCode: String,","lastModifiedDate":"2021-10-25"},{"lineNumber":69,"author":{"gitId":"saravanamani1999"},"content":"lessonType: String,dayIndex: int): void","lastModifiedDate":"2021-10-25"},{"lineNumber":70,"author":{"gitId":"saravanamani1999"},"content":"}","lastModifiedDate":"2021-10-25"},{"lineNumber":71,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":72,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":73,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":74,"author":{"gitId":"saravanamani1999"},"content":"class UpdateSubCommand TIMETABLE_COLOR {","lastModifiedDate":"2021-10-25"},{"lineNumber":75,"author":{"gitId":"saravanamani1999"},"content":"+ updateTimetable(lessonDetails: String[]): void","lastModifiedDate":"2021-10-25"},{"lineNumber":76,"author":{"gitId":"saravanamani1999"},"content":"+ isLessonInTimetable(moduleCode: String,","lastModifiedDate":"2021-10-25"},{"lineNumber":77,"author":{"gitId":"saravanamani1999"},"content":"lessonType: String,day: String): boolean","lastModifiedDate":"2021-10-25"},{"lineNumber":78,"author":{"gitId":"saravanamani1999"},"content":"}","lastModifiedDate":"2021-10-25"},{"lineNumber":79,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":80,"author":{"gitId":"saravanamani1999"},"content":"class \"ABSTRACT \\n Lesson\" TIMETABLE_COLOR {","lastModifiedDate":"2021-10-30"},{"lineNumber":81,"author":{"gitId":"saravanamani1999"},"content":"    # lessonType: String","lastModifiedDate":"2021-10-25"},{"lineNumber":82,"author":{"gitId":"saravanamani1999"},"content":"    # moduleCode: String","lastModifiedDate":"2021-10-25"},{"lineNumber":83,"author":{"gitId":"saravanamani1999"},"content":"    # day: String","lastModifiedDate":"2021-10-25"},{"lineNumber":84,"author":{"gitId":"saravanamani1999"},"content":"    # startTime: String","lastModifiedDate":"2021-10-25"},{"lineNumber":85,"author":{"gitId":"saravanamani1999"},"content":"    # endTime: String","lastModifiedDate":"2021-10-25"},{"lineNumber":86,"author":{"gitId":"saravanamani1999"},"content":"}","lastModifiedDate":"2021-10-25"},{"lineNumber":87,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":88,"author":{"gitId":"saravanamani1999"},"content":"class Tutorial TIMETABLE_COLOR {","lastModifiedDate":"2021-10-25"},{"lineNumber":89,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":90,"author":{"gitId":"saravanamani1999"},"content":"}","lastModifiedDate":"2021-10-25"},{"lineNumber":91,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":92,"author":{"gitId":"saravanamani1999"},"content":"class Lecture TIMETABLE_COLOR {","lastModifiedDate":"2021-10-25"},{"lineNumber":93,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":94,"author":{"gitId":"saravanamani1999"},"content":"}","lastModifiedDate":"2021-10-25"},{"lineNumber":95,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":96,"author":{"gitId":"saravanamani1999"},"content":"class Lab TIMETABLE_COLOR {","lastModifiedDate":"2021-10-25"},{"lineNumber":97,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":98,"author":{"gitId":"saravanamani1999"},"content":"}","lastModifiedDate":"2021-10-25"},{"lineNumber":99,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":100,"author":{"gitId":"saravanamani1999"},"content":"class SubCommand TIMETABLE_COLOR {","lastModifiedDate":"2021-10-25"},{"lineNumber":101,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":102,"author":{"gitId":"saravanamani1999"},"content":"}","lastModifiedDate":"2021-10-25"},{"lineNumber":103,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":104,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":105,"author":{"gitId":"saravanamani1999"},"content":"@enduml","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"saravanamani1999":105}},{"path":"docs/team/giterator.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"giterator"},"content":"# Pranav Venkatram\u0027s Project Portfolio Page","lastModifiedDate":"2021-11-02"},{"lineNumber":2,"author":{"gitId":"giterator"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":3,"author":{"gitId":"giterator"},"content":"## Project Overview","lastModifiedDate":"2021-11-02"},{"lineNumber":4,"author":{"gitId":"giterator"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":5,"author":{"gitId":"giterator"},"content":"Kolinux is an all-in-one application for NUS freshmen to manage their work and learn more about NUS through its","lastModifiedDate":"2021-11-02"},{"lineNumber":6,"author":{"gitId":"giterator"},"content":"integrated features such as the Module Manager, Timetable, Event Planner, CAP Calculator, and Bus Route Finder. ","lastModifiedDate":"2021-11-02"},{"lineNumber":7,"author":{"gitId":"giterator"},"content":"These features are powered by the NUSMods API. Written in Java, Kolinux and provides a CLI for users to interact with the app.","lastModifiedDate":"2021-11-02"},{"lineNumber":8,"author":{"gitId":"giterator"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":9,"author":{"gitId":"giterator"},"content":"## Summary of Contributions","lastModifiedDate":"2021-11-02"},{"lineNumber":10,"author":{"gitId":"giterator"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":11,"author":{"gitId":"powzx"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2113-ay2122s1.github.io/tp-dashboard/?search\u003dgiterator\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2021-09-25\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dgiterator\u0026tabRepo\u003dAY2122S1-CS2113T-W11-1%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code\u0026authorshipIsBinaryFileTypeChecked\u003dfalse)","lastModifiedDate":"2021-11-03"},{"lineNumber":12,"author":{"gitId":"giterator"},"content":"* **Main feature implemented**: Module Manager","lastModifiedDate":"2021-11-02"},{"lineNumber":13,"author":{"gitId":"giterator"},"content":"  ","lastModifiedDate":"2021-11-02"},{"lineNumber":14,"author":{"gitId":"giterator"},"content":"  * Ability to view module information for any module offered by NUS ","lastModifiedDate":"2021-11-02"},{"lineNumber":15,"author":{"gitId":"giterator"},"content":"  * Ability to add modules to the module list from a pre-existing repository of all modules offered at NUS.","lastModifiedDate":"2021-11-02"},{"lineNumber":16,"author":{"gitId":"giterator"},"content":"  * Ability to list all stored modules in the module list in lexicographic order (of modules\u0027 codes).","lastModifiedDate":"2021-11-02"},{"lineNumber":17,"author":{"gitId":"giterator"},"content":"  * Ability to delete modules from the module list using their module codes.","lastModifiedDate":"2021-11-02"},{"lineNumber":18,"author":{"gitId":"giterator"},"content":"  * Ability to set grades for each stored modules in the module list","lastModifiedDate":"2021-11-02"},{"lineNumber":19,"author":{"gitId":"giterator"},"content":"  * Ability to load/store the module list from/to a text file locally.","lastModifiedDate":"2021-11-02"},{"lineNumber":20,"author":{"gitId":"giterator"},"content":"* **Enhancement added**: Use of a HashMap to store all module details offered by NUS","lastModifiedDate":"2021-11-02"},{"lineNumber":21,"author":{"gitId":"giterator"},"content":"  ","lastModifiedDate":"2021-11-02"},{"lineNumber":22,"author":{"gitId":"giterator"},"content":"  * What it does: The HashMap enables fast querying of module related data for all features to use. It also allows fast insertion of module data from the NUSmods JSON while building the module repository.","lastModifiedDate":"2021-11-02"},{"lineNumber":23,"author":{"gitId":"giterator"},"content":"  ","lastModifiedDate":"2021-11-02"},{"lineNumber":24,"author":{"gitId":"giterator"},"content":"  * Justification: Module related information form the basis of Kolinux. The current architecture involves loading all modules\u0027 data from the NUSmods JSON upon startup and querying module data often. Due to the large number of modules offered by NUS, fast querying and loading is essential. Each module\u0027s data is stored in an instance of a ModuleDetails object. Each module\u0027s code is considered as a key and its associated ModuleDetails instance is considered as a value. These key-value pairs are inserted into the HashMap","lastModifiedDate":"2021-11-02"},{"lineNumber":25,"author":{"gitId":"giterator"},"content":"  ","lastModifiedDate":"2021-11-02"},{"lineNumber":26,"author":{"gitId":"giterator"},"content":"  * Highlights: This enhancement changes the way the repository of modules is stored and accessed. Given that all module and timetable related commands interact with module data through module codes, using module codes as keys was an intuitive design decision.","lastModifiedDate":"2021-11-02"},{"lineNumber":27,"author":{"gitId":"giterator"},"content":"  ","lastModifiedDate":"2021-11-02"},{"lineNumber":28,"author":{"gitId":"giterator"},"content":"    Since the HashMap data structure in Java provide common methods, our methods to insert/query data to/from the module repository are more concise. Further, when querying module data using any invalid module code (key), the HashMap always returns `null`. Thus, only one corner case needs to be accounted for when querying module data, improving testability.","lastModifiedDate":"2021-11-02"},{"lineNumber":29,"author":{"gitId":"giterator"},"content":"* **Enhancement added**: Converting module related data from Unicode to ASCII using the [JUnidecode library](https://github.com/gcardone/junidecode)","lastModifiedDate":"2021-11-02"},{"lineNumber":30,"author":{"gitId":"giterator"},"content":"  ","lastModifiedDate":"2021-11-02"},{"lineNumber":31,"author":{"gitId":"giterator"},"content":"  * What it does: When loading data from the NUSmods API, it may contain Unicode characters. The JUnidecode library is used to convert strings containing Unicode characters into their equivalent ASCII representation e.g. `résumé` is converted to `resume`. ","lastModifiedDate":"2021-11-02"},{"lineNumber":32,"author":{"gitId":"giterator"},"content":"  * Justification: Multiple modules stored in the NUSmods JSON have descriptions that contain Unicode characters. When users attempt to view such module data, unicode characters are not formatted properly in standard output e.g.  `’` is printed as `??`.  This enhancement ensures uniform formatting for all module related data using ASCII characters so that it can be viewed properly.","lastModifiedDate":"2021-11-02"},{"lineNumber":33,"author":{"gitId":"giterator"},"content":"  * Highlights: This enhancement involves transliteration i.e. transferring a word from the alphabet of one language to another. By integrating the JUnidecode library with Kolinux, this transliteration is performed by calling a single method on each string to be converted. Thus, the ModuleDetails code only required slight modification, reducing the risk of regressions.","lastModifiedDate":"2021-11-02"},{"lineNumber":34,"author":{"gitId":"giterator"},"content":"* **Contributions to UG**:","lastModifiedDate":"2021-11-02"},{"lineNumber":35,"author":{"gitId":"giterator"},"content":"  ","lastModifiedDate":"2021-11-02"},{"lineNumber":36,"author":{"gitId":"giterator"},"content":"  * Added documentation for the feature `module` which includes `module add`, `module delete`, `module list`, `module grade` and `module view`.","lastModifiedDate":"2021-11-02"},{"lineNumber":37,"author":{"gitId":"giterator"},"content":"  * Ensured the language used was consistent with the rest of the UG.","lastModifiedDate":"2021-11-02"},{"lineNumber":38,"author":{"gitId":"giterator"},"content":"* **Contributions to DG**:","lastModifiedDate":"2021-11-02"},{"lineNumber":39,"author":{"gitId":"giterator"},"content":"  * Added documentation for the design and architecture of the module component.","lastModifiedDate":"2021-11-02"},{"lineNumber":40,"author":{"gitId":"giterator"},"content":"  * Added documentation for implementation of add to module list feature.","lastModifiedDate":"2021-11-02"},{"lineNumber":41,"author":{"gitId":"giterator"},"content":"  * Added instructions for manual testing of the `module add` command.","lastModifiedDate":"2021-11-02"},{"lineNumber":42,"author":{"gitId":"giterator"},"content":"  * Added UML diagrams: `ModuleClassDiagram.puml`, `ModuleAddSequenceDiagram.puml`","lastModifiedDate":"2021-11-02"},{"lineNumber":43,"author":{"gitId":"giterator"},"content":"* **Contributions to team-based tasks**:","lastModifiedDate":"2021-11-02"},{"lineNumber":44,"author":{"gitId":"giterator"},"content":"  * Incorporated [JUnidecode library](https://github.com/gcardone/junidecode)","lastModifiedDate":"2021-11-02"},{"lineNumber":45,"author":{"gitId":"giterator"},"content":"  * Code Refactoring","lastModifiedDate":"2021-11-02"},{"lineNumber":46,"author":{"gitId":"giterator"},"content":"* **Review/mentoring contributions**:","lastModifiedDate":"2021-11-02"},{"lineNumber":47,"author":{"gitId":"giterator"},"content":"* **Contributions beyond the project team**:","lastModifiedDate":"2021-11-02"}],"authorContributionMap":{"giterator":46,"powzx":1}},{"path":"docs/team/nonrnp.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"nonrnp"},"content":"# Pichanon Rattanadilok Na Phuket\u0027s Project Portfolio Page","lastModifiedDate":"2021-11-03"},{"lineNumber":2,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":3,"author":{"gitId":"nonrnp"},"content":"## Project Overview","lastModifiedDate":"2021-11-03"},{"lineNumber":4,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":5,"author":{"gitId":"nonrnp"},"content":"Kolinux is an all-in-one application for NUS freshmen to manage their work and learn more about NUS through its","lastModifiedDate":"2021-11-03"},{"lineNumber":6,"author":{"gitId":"nonrnp"},"content":"integrated features such as the Module Manager, Timetable, Event Planner, CAP Calculator, and Bus Route Finder.","lastModifiedDate":"2021-11-03"},{"lineNumber":7,"author":{"gitId":"nonrnp"},"content":"These features are powered by the NUSMods API. Written in Java, Kolinux and provides a CLI for users to interact with the app.","lastModifiedDate":"2021-11-03"},{"lineNumber":8,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":9,"author":{"gitId":"nonrnp"},"content":"## Summary of Contributions","lastModifiedDate":"2021-11-03"},{"lineNumber":10,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":11,"author":{"gitId":"nonrnp"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2113-ay2122s1.github.io/tp-dashboard/?search\u003dnonrnp\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2021-09-25\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dfalse)","lastModifiedDate":"2021-11-03"},{"lineNumber":12,"author":{"gitId":"nonrnp"},"content":"* **Main feature implemented**: CAP Calculator","lastModifiedDate":"2021-11-03"},{"lineNumber":13,"author":{"gitId":"nonrnp"},"content":"  * Ability to calculate overall CAP from module credit and grade letter.","lastModifiedDate":"2021-11-03"},{"lineNumber":14,"author":{"gitId":"nonrnp"},"content":"  * Ability to calculate overall CAP from module code and grade letter.","lastModifiedDate":"2021-11-03"},{"lineNumber":15,"author":{"gitId":"nonrnp"},"content":"  * Ability to calculate CAP in presence of grades with no assigned point.","lastModifiedDate":"2021-11-03"},{"lineNumber":16,"author":{"gitId":"nonrnp"},"content":"  * Ability to store and show all the modules with invalid description format to the user.","lastModifiedDate":"2021-11-03"},{"lineNumber":17,"author":{"gitId":"nonrnp"},"content":"* **Enhancement added**: Integration with Module Manager feature","lastModifiedDate":"2021-11-03"},{"lineNumber":18,"author":{"gitId":"nonrnp"},"content":"  * What it does: Calculate the overall CAP directly from the stored modules and their respective grade within module manager without having to key in all the modules and grades in a separate command.","lastModifiedDate":"2021-11-03"},{"lineNumber":19,"author":{"gitId":"nonrnp"},"content":"  * Justification: This enhancement allows the user to conveniently calculate their overall CAP using a short, simple command without having to refer to another feature.","lastModifiedDate":"2021-11-03"},{"lineNumber":20,"author":{"gitId":"nonrnp"},"content":"  * Highlights: This feature has a different approach in retrieving the modules and grades from the user, thus making it necessary to introduce an additional class dedicated for extracting and calculating the overall CAP from module description with different data type than the basic calculator.","lastModifiedDate":"2021-11-03"},{"lineNumber":21,"author":{"gitId":"nonrnp"},"content":"* **Enhancement added**: Grade suggestion based on stored modules in Module Manager feature","lastModifiedDate":"2021-11-03"},{"lineNumber":22,"author":{"gitId":"nonrnp"},"content":"  * What it does: Calculate the overall CAP of the user\u0027s stored module and compare the value with the user\u0027s desired CAP. Then, based on the user\u0027s other modules with no assigned grade, calculate and suggest the minimum overall grade needed to achieve the desired CAP to the user.","lastModifiedDate":"2021-11-05"},{"lineNumber":23,"author":{"gitId":"nonrnp"},"content":"  * Justification: This allows the user to estimate their effort needed to achieve their desired result, which would allow the user to manage their study plan and get prepared for their upcoming modules.","lastModifiedDate":"2021-11-03"},{"lineNumber":24,"author":{"gitId":"nonrnp"},"content":"  * Highlights: Despite similar functionality with the cap calculator from module list, this functionality needs to be implemented using a different class in order to compare the grade point value back into a letter grade form to show to the user.","lastModifiedDate":"2021-11-03"},{"lineNumber":25,"author":{"gitId":"nonrnp"},"content":"* **Enhancement added**: Check whether if a module accept S/U grade","lastModifiedDate":"2021-11-05"},{"lineNumber":26,"author":{"gitId":"nonrnp"},"content":"  * What it does: Initially, the users was able to put in S/U grade for any modules, which should not be the case as most of the modules offered in NUS do not accept these grade. This enhancement checks for the validity of S/U grade with the input module from the user.","lastModifiedDate":"2021-11-05"},{"lineNumber":27,"author":{"gitId":"nonrnp"},"content":"  * Justification: If the S/U grade is allowed for every module, it can cause confusion to the users who do not understand the S/U system of NUS. Also, it can make the cap calculator become inaccurate.","lastModifiedDate":"2021-11-05"},{"lineNumber":28,"author":{"gitId":"nonrnp"},"content":"  * Highlights: This enhancement requires some adjustments to the way each module is stored as `ModuleDetails`, as the S/U-compatibility has to be stored as an additional attribute of the object.","lastModifiedDate":"2021-11-05"},{"lineNumber":29,"author":{"gitId":"nonrnp"},"content":"* **Contributions to UG**:","lastModifiedDate":"2021-11-03"},{"lineNumber":30,"author":{"gitId":"nonrnp"},"content":"  * Added documentation for the feature `cap` which includes `cap mc` and `cap code`","lastModifiedDate":"2021-11-03"},{"lineNumber":31,"author":{"gitId":"nonrnp"},"content":"  * Added documentation for the subcommand of `module` feature, which are `module cap` and `module cap DESIRED_CAP`","lastModifiedDate":"2021-11-03"},{"lineNumber":32,"author":{"gitId":"nonrnp"},"content":"  * Ensured the documentation format is consistent with the rest of the user guide.","lastModifiedDate":"2021-11-03"},{"lineNumber":33,"author":{"gitId":"nonrnp"},"content":"* **Contributions to DG**:","lastModifiedDate":"2021-11-03"},{"lineNumber":34,"author":{"gitId":"nonrnp"},"content":"  * Added documentation for the design architecture of cap calculator.","lastModifiedDate":"2021-11-03"},{"lineNumber":35,"author":{"gitId":"nonrnp"},"content":"  * Added documentation for implementation of `cap code` feature.","lastModifiedDate":"2021-11-03"},{"lineNumber":36,"author":{"gitId":"nonrnp"},"content":"  * Added UML diagrams: `CapCalculatorByCodeSequenceDiagram1.puml`, `CapCalculatorByCodeSequenceDiagram2.puml`, `CapCalculatorByCodeSequenceDiagram3.puml`, `CapCalculatorClassDiagram.puml`","lastModifiedDate":"2021-11-03"},{"lineNumber":37,"author":{"gitId":"nonrnp"},"content":"* **Contributions to team-based tasks**:","lastModifiedDate":"2021-11-03"},{"lineNumber":38,"author":{"gitId":"nonrnp"},"content":"  * PR reviews and merging to the main branch.","lastModifiedDate":"2021-11-03"}],"authorContributionMap":{"nonrnp":38}},{"path":"docs/team/powzx.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"powzx"},"content":"# Pow Zhi Xiang\u0027s Project Portfolio Page","lastModifiedDate":"2021-10-31"},{"lineNumber":2,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":3,"author":{"gitId":"powzx"},"content":"## Project Overview","lastModifiedDate":"2021-10-31"},{"lineNumber":4,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":5,"author":{"gitId":"powzx"},"content":"Kolinux is an all-in-one application for NUS freshmen to manage their work and learn more about NUS through its","lastModifiedDate":"2021-10-31"},{"lineNumber":6,"author":{"gitId":"powzx"},"content":"integrated features such as the Module Manager, Timetable, Event Planner, CAP Calculator, and Bus Route Finder.","lastModifiedDate":"2021-10-31"},{"lineNumber":7,"author":{"gitId":"powzx"},"content":"It is written in Java, and uses the NUSMods API. The user interacts with it using a CLI.","lastModifiedDate":"2021-10-31"},{"lineNumber":8,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":9,"author":{"gitId":"powzx"},"content":"## Summary of Contributions","lastModifiedDate":"2021-10-31"},{"lineNumber":10,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":11,"author":{"gitId":"powzx"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2113-ay2122s1.github.io/tp-dashboard/?search\u003dpowzx\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2021-09-25\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dfalse)","lastModifiedDate":"2021-11-03"},{"lineNumber":12,"author":{"gitId":"powzx"},"content":"* **Main feature implemented**: Event Planner","lastModifiedDate":"2021-10-31"},{"lineNumber":13,"author":{"gitId":"powzx"},"content":"  * Ability to add events to the planner on a specified date from a specified start time to end time.","lastModifiedDate":"2021-10-31"},{"lineNumber":14,"author":{"gitId":"powzx"},"content":"  * Ability to list events from the planner on a specified date in a sorted order by time.","lastModifiedDate":"2021-10-31"},{"lineNumber":15,"author":{"gitId":"powzx"},"content":"  * Ability to delete events on a specified date from the planner.","lastModifiedDate":"2021-10-31"},{"lineNumber":16,"author":{"gitId":"powzx"},"content":"  * Ability to store events list as a text file locally.","lastModifiedDate":"2021-10-31"},{"lineNumber":17,"author":{"gitId":"powzx"},"content":"* **Enhancement added**: Integration with the Timetable and Module Manager features","lastModifiedDate":"2021-10-31"},{"lineNumber":18,"author":{"gitId":"powzx"},"content":"  * What it does: Fetches lessons and exams data from the Timetable and Module Manager features respectively and allows users to view their lessons and exams on a specified date via the Event Planner.","lastModifiedDate":"2021-10-31"},{"lineNumber":19,"author":{"gitId":"powzx"},"content":"  * Justification: This enhancement allows users to view their lessons, exams and their own personal events in one integrated place, without the need to refer to multiple features or using other applications.","lastModifiedDate":"2021-10-31"},{"lineNumber":20,"author":{"gitId":"powzx"},"content":"  * Highlights: This enhancement introduces the need for additional classes to perform the work of bridging the gap among Event Planner, Timetable, and Module Manager, so that there will be minimal disruption to the initial structure of Event Planner. This enhancement is challenging to implement as it requires the conversion from lessons to events, and creation of events based on the exam information.","lastModifiedDate":"2021-10-31"},{"lineNumber":21,"author":{"gitId":"powzx"},"content":"* **Enhancement added**: Ability to detect conflicts when adding events to the Event Planner.","lastModifiedDate":"2021-10-31"},{"lineNumber":22,"author":{"gitId":"powzx"},"content":"  * What it does: Conflicts will be detected when users try to add events to a timeslot already occupied by another event, lesson, or exam. Subsequently, a confirmation prompt will be displayed to give users the choice to continue adding the conflicted event or cancel the operation.","lastModifiedDate":"2021-10-31"},{"lineNumber":23,"author":{"gitId":"powzx"},"content":"  * Justification: This enhancement improves the Event Planner significantly since users might forget what they have already planned for the day. This enhancement alerts users of an attempt to add conflicted events so that they can have a chance to rectify the mistake.","lastModifiedDate":"2021-10-31"},{"lineNumber":24,"author":{"gitId":"powzx"},"content":"  * Highlights: This enhancement changes the way events are added to the Event Planner as additional checks have to be implemented. Different design alternatives have been considered as the adding process needs to be interrupted by a confirmation prompt on the user interface, wait for the user reply, and go back to where it was interrupted to continue the process.","lastModifiedDate":"2021-10-31"},{"lineNumber":25,"author":{"gitId":"powzx"},"content":"* **Enhancement added**: Redesigned the structure of `PlannerCommand` and `PlannerPromptHandler`","lastModifiedDate":"2021-11-04"},{"lineNumber":26,"author":{"gitId":"powzx"},"content":"  * What it does: Initially, the handling of prompts (getting user replies) is a method in `Command`. However, this causes multiple levels of self invocation in `PlannerCommand` when a prompt is needed to resolve conflicts in event adding. Hence, the method to get user replies need to be separated out into `PlannerPromptHandler`, and it will be invoked only when a prompt is needed to resolve any process.","lastModifiedDate":"2021-11-04"},{"lineNumber":27,"author":{"gitId":"powzx"},"content":"  * Justification: This enhancement improves the overall design of the planner and prompt features by the Single Responsibility Principle, which reduces the need for multiple self invocations. It also helped to make unit testing easier since `Planner` and `PlannerPromptHandler` may be tested independently of each other.","lastModifiedDate":"2021-11-04"},{"lineNumber":28,"author":{"gitId":"powzx"},"content":"  * Highlights: This enhancement requires major revamp of the code design in `PlannerCommand` and `PlannerPromptHandler`.","lastModifiedDate":"2021-11-04"},{"lineNumber":29,"author":{"gitId":"powzx"},"content":"* **Contributions to UG**:","lastModifiedDate":"2021-10-31"},{"lineNumber":30,"author":{"gitId":"powzx"},"content":"  * Added documentation for the feature `planner` which includes `planner add`, `planner delete`, and `planner list`.","lastModifiedDate":"2021-10-31"},{"lineNumber":31,"author":{"gitId":"powzx"},"content":"  * Added documentation for other sections such as the Introduction, Quick Start, FAQ, and Data Storage.","lastModifiedDate":"2021-10-31"},{"lineNumber":32,"author":{"gitId":"powzx"},"content":"  * Ensured consistent use of words and icons and consistent formatting throughout the UG.","lastModifiedDate":"2021-11-04"},{"lineNumber":33,"author":{"gitId":"powzx"},"content":"  * Designed the Kolinux logo.","lastModifiedDate":"2021-11-04"},{"lineNumber":34,"author":{"gitId":"powzx"},"content":"* **Contributions to DG**:","lastModifiedDate":"2021-10-31"},{"lineNumber":35,"author":{"gitId":"powzx"},"content":"  * Added documentation for the overall design architecture, commands component, and planner component.","lastModifiedDate":"2021-10-31"},{"lineNumber":36,"author":{"gitId":"powzx"},"content":"  * Added documentation for implementation of add to planner feature.","lastModifiedDate":"2021-10-31"},{"lineNumber":37,"author":{"gitId":"powzx"},"content":"  * Added instructions for manual testing for planner.","lastModifiedDate":"2021-10-31"},{"lineNumber":38,"author":{"gitId":"powzx"},"content":"  * Added UML diagrams: `ArchitectureDiagram.puml`, `CommandsClassDiagram.puml`, `OverviewSequenceDiagram.puml`, `PlannerAddSequenceDiagram1.puml`, `PlannerAddSequenceDiagram2.puml`, `PlannerClassDiagram.puml`, `PlannerObjectDiagramAfter.puml`, `PlannerObjectDiagramBefore.puml`","lastModifiedDate":"2021-10-31"},{"lineNumber":39,"author":{"gitId":"powzx"},"content":"  * Ensured consistent use of colors throughout the DG using `Style.puml`.","lastModifiedDate":"2021-11-04"},{"lineNumber":40,"author":{"gitId":"powzx"},"content":"* **Contributions to team-based tasks**:","lastModifiedDate":"2021-10-31"},{"lineNumber":41,"author":{"gitId":"powzx"},"content":"  * Managed releases `v1.0` and `v2.0` on GitHub.","lastModifiedDate":"2021-10-31"},{"lineNumber":42,"author":{"gitId":"powzx"},"content":"  * Produced the skeletal code and high-level design to start Kolinux development.","lastModifiedDate":"2021-11-04"},{"lineNumber":43,"author":{"gitId":"powzx"},"content":"  * Produced and documented the code for `KolinuxLogger` for logging purposes when executing any command.","lastModifiedDate":"2021-11-04"},{"lineNumber":44,"author":{"gitId":"powzx"},"content":"  * Produced, maintained, and documented the code for general classes such as `Kolinux`, `DirectoryCreator`, `PromptHandler`, `Parser`, and `Ui`.","lastModifiedDate":"2021-11-04"},{"lineNumber":45,"author":{"gitId":"powzx"},"content":"  * Maintained the issue tracker.","lastModifiedDate":"2021-11-04"},{"lineNumber":46,"author":{"gitId":"powzx"},"content":"* **Review/mentoring contributions**: ","lastModifiedDate":"2021-10-31"},{"lineNumber":47,"author":{"gitId":"powzx"},"content":"  * Reviewed PRs and merged them to master branch.","lastModifiedDate":"2021-11-04"}],"authorContributionMap":{"powzx":47}},{"path":"docs/team/saravanamani1999.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"saravanamani1999"},"content":"# Ramalingam Saravanamani\u0027s Profile Portfolio Page","lastModifiedDate":"2021-10-31"},{"lineNumber":2,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":3,"author":{"gitId":"saravanamani1999"},"content":"## Project Overview","lastModifiedDate":"2021-10-31"},{"lineNumber":4,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":5,"author":{"gitId":"saravanamani1999"},"content":"Kolinux is an all-in-one application for NUS freshmen to manage their work and learn more about NUS through its","lastModifiedDate":"2021-10-31"},{"lineNumber":6,"author":{"gitId":"saravanamani1999"},"content":"integrated features such as the Module Manager, Timetable, Event Planner, CAP Calculator, and Bus Route Finder.","lastModifiedDate":"2021-10-31"},{"lineNumber":7,"author":{"gitId":"saravanamani1999"},"content":"Kolinux is written in Java and makes use of NusMods API. User can make use of Kolinux via CLI","lastModifiedDate":"2021-10-31"},{"lineNumber":8,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":9,"author":{"gitId":"saravanamani1999"},"content":"## Summary of Contributions","lastModifiedDate":"2021-10-31"},{"lineNumber":10,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":11,"author":{"gitId":"powzx"},"content":"* **Code contributed**: [ReposSense Link](https://nus-cs2113-ay2122s1.github.io/tp-dashboard/?search\u003dsaravanamani1999\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2021-09-25\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dfalse)","lastModifiedDate":"2021-11-03"},{"lineNumber":12,"author":{"gitId":"saravanamani1999"},"content":"* **Main feature implemented**: Timetable","lastModifiedDate":"2021-10-31"},{"lineNumber":13,"author":{"gitId":"saravanamani1999"},"content":"  * Ability to add lessons to timetable of lesson types lecture, tutorial and lab for specified weekday, start time and end time.","lastModifiedDate":"2021-10-31"},{"lineNumber":14,"author":{"gitId":"saravanamani1999"},"content":"  * Ability to view the lessons on an aesthetic timetable on CLI","lastModifiedDate":"2021-10-31"},{"lineNumber":15,"author":{"gitId":"saravanamani1999"},"content":"  * Ability to delete specific lesson slots from timetable ","lastModifiedDate":"2021-10-31"},{"lineNumber":16,"author":{"gitId":"saravanamani1999"},"content":"  * Ability update to update a specific lesson slot to different slot where the duration of the hour will be the same as the old lesson duration.","lastModifiedDate":"2021-10-31"},{"lineNumber":17,"author":{"gitId":"saravanamani1999"},"content":"* **Enhancement added**: Integration with Module Manager Feature","lastModifiedDate":"2021-10-31"},{"lineNumber":18,"author":{"gitId":"saravanamani1999"},"content":"  * What it does: It ensures that the user adds the modules they have to take during the semester to the module list in the module manager first before adding to the timetable. Also, when the user deletes a module from the module list, the lessons related to that specified module gets deleted from the timetable as well.","lastModifiedDate":"2021-10-31"},{"lineNumber":19,"author":{"gitId":"saravanamani1999"},"content":"  * Justification: This enhancement enhances the user interaction between the Timetable and Module Manager where the program ensures that the users have added the modules they would like to take for the semester ensuring an integrated flow of actions within the program.","lastModifiedDate":"2021-10-31"},{"lineNumber":20,"author":{"gitId":"saravanamani1999"},"content":"  * Highlights: This enhancement affects the user journey when interacting with the program with new introduced methods to check if the modules have been added to the Module Manager and automatically delete from the specific lesson data for the module deleted from the Module Manager.","lastModifiedDate":"2021-10-31"},{"lineNumber":21,"author":{"gitId":"saravanamani1999"},"content":"* **Contribution to other features**: Integration of NUSMods API to Module Manager Feature","lastModifiedDate":"2021-10-31"},{"lineNumber":22,"author":{"gitId":"saravanamani1999"},"content":"  * What it does: The information for NUS modules were extracted from the NUSMods API for Module Manager which depends heavily on this data.","lastModifiedDate":"2021-10-31"},{"lineNumber":23,"author":{"gitId":"saravanamani1999"},"content":"  * Justification: This ensures the information provided to the users are accurate by extracting relevant module data like module description, module credits, exam date and time, workload etc.","lastModifiedDate":"2021-10-31"},{"lineNumber":24,"author":{"gitId":"saravanamani1999"},"content":"  * Highlights: Made use of GSON to extract the relevant data from the json file retrieved from NUSMods API. (Made use of local JSON file as program is expected to work without internet) The implementation was challenging as some of the data in the JSON file were of varying types thus had to add methods and exception handlers to handle these anomalies.","lastModifiedDate":"2021-10-31"},{"lineNumber":25,"author":{"gitId":"saravanamani1999"},"content":"  * Credits: ","lastModifiedDate":"2021-10-31"},{"lineNumber":26,"author":{"gitId":"saravanamani1999"},"content":"    * [NUSMods API](https://api.nusmods.com/v2/) ","lastModifiedDate":"2021-10-31"},{"lineNumber":27,"author":{"gitId":"saravanamani1999"},"content":"    * [GSON](https://github.com/google/gson)","lastModifiedDate":"2021-10-31"},{"lineNumber":28,"author":{"gitId":"saravanamani1999"},"content":"* **Contributions to UG**:","lastModifiedDate":"2021-10-31"},{"lineNumber":29,"author":{"gitId":"saravanamani1999"},"content":"* Added documentation for the feature `timetable` which includes `timetable add`, `timetable delete`, `timetable update` and `timetable view`.","lastModifiedDate":"2021-10-31"},{"lineNumber":30,"author":{"gitId":"saravanamani1999"},"content":"* Added documentation for other sections such as the Introduction, Quick Start and Data Storage.","lastModifiedDate":"2021-10-31"},{"lineNumber":31,"author":{"gitId":"saravanamani1999"},"content":"* **Contributions to DG**:","lastModifiedDate":"2021-10-31"},{"lineNumber":32,"author":{"gitId":"saravanamani1999"},"content":"  * Added documentation for other sections such as the Introduction, Quick Start, Product Scope, User stories and Glossary.","lastModifiedDate":"2021-10-31"},{"lineNumber":33,"author":{"gitId":"saravanamani1999"},"content":"  * Added documentation for implementation of add to timetable feature.","lastModifiedDate":"2021-10-31"},{"lineNumber":34,"author":{"gitId":"saravanamani1999"},"content":"  * Added UML diagrams: `TimetableAddSequence1.puml`, `TimetableAddSequence2.puml`, `TimetableAddSequence3.puml` and `TimetableClassDiagram.puml`","lastModifiedDate":"2021-10-31"},{"lineNumber":35,"author":{"gitId":"saravanamani1999"},"content":"* **Contributions to team-based tasks**:","lastModifiedDate":"2021-10-31"},{"lineNumber":36,"author":{"gitId":"saravanamani1999"},"content":"  * Set up the Github team org and rep","lastModifiedDate":"2021-10-31"},{"lineNumber":37,"author":{"gitId":"saravanamani1999"},"content":"  * Incorporated GSON and NUSMods API","lastModifiedDate":"2021-10-31"},{"lineNumber":38,"author":{"gitId":"saravanamani1999"},"content":"* **Review/mentoring contributions**:","lastModifiedDate":"2021-10-31"},{"lineNumber":39,"author":{"gitId":"saravanamani1999"},"content":"* **Contributions beyond the project team**:","lastModifiedDate":"2021-10-31"}],"authorContributionMap":{"saravanamani1999":38,"powzx":1}},{"path":"docs/team/shyamgj1900.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"shyamgj1900"},"content":"# Shyam Ganesh - Project Portfolio Page","lastModifiedDate":"2021-11-02"},{"lineNumber":2,"author":{"gitId":"shyamgj1900"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":3,"author":{"gitId":"shyamgj1900"},"content":"## Project Overview","lastModifiedDate":"2021-11-02"},{"lineNumber":4,"author":{"gitId":"shyamgj1900"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":5,"author":{"gitId":"shyamgj1900"},"content":"Kolinux is an all-in-one application for NUS freshmen to manage their work and learn more about NUS through its","lastModifiedDate":"2021-11-02"},{"lineNumber":6,"author":{"gitId":"shyamgj1900"},"content":"integrated features such as the Module Manager, Timetable, Event Planner, CAP Calculator, and Bus Route Finder.","lastModifiedDate":"2021-11-02"},{"lineNumber":7,"author":{"gitId":"shyamgj1900"},"content":"It is written in Java, and uses the NUSMods API. The user interacts with it using a CLI.","lastModifiedDate":"2021-11-02"},{"lineNumber":8,"author":{"gitId":"shyamgj1900"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":9,"author":{"gitId":"shyamgj1900"},"content":"## Summary of Contributions","lastModifiedDate":"2021-11-02"},{"lineNumber":10,"author":{"gitId":"shyamgj1900"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2113-ay2122s1.github.io/tp-dashboard/?search\u003dshyamgj1900\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2021-09-25\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dshyamgj1900\u0026tabRepo\u003dAY2122S1-CS2113T-W11-1%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code~other\u0026authorshipIsBinaryFileTypeChecked\u003dfalse)","lastModifiedDate":"2021-11-02"},{"lineNumber":11,"author":{"gitId":"shyamgj1900"},"content":"* **Main feature implemented**: Bus Route Finder","lastModifiedDate":"2021-11-02"},{"lineNumber":12,"author":{"gitId":"shyamgj1900"},"content":"    * Ability to find a direct bus route from any 2 NUS bus stops.","lastModifiedDate":"2021-11-02"},{"lineNumber":13,"author":{"gitId":"shyamgj1900"},"content":"    * Use BFS to check if 2 points in a graph are connected.","lastModifiedDate":"2021-11-02"},{"lineNumber":14,"author":{"gitId":"shyamgj1900"},"content":"    * All graph vertices are read in from a text file when this feature is used.","lastModifiedDate":"2021-11-02"},{"lineNumber":15,"author":{"gitId":"shyamgj1900"},"content":"    * There are total of 6 bus routes which can be used to find if 2 bus stops are connected.","lastModifiedDate":"2021-11-02"},{"lineNumber":16,"author":{"gitId":"shyamgj1900"},"content":"    * Each bus route has its own seperate graph and corresponding vertices.","lastModifiedDate":"2021-11-02"},{"lineNumber":17,"author":{"gitId":"shyamgj1900"},"content":"* **Enhancement added**: Find indirect routes","lastModifiedDate":"2021-11-02"},{"lineNumber":18,"author":{"gitId":"shyamgj1900"},"content":"    * Functionality: With indirect routes, the program recommends users a bus route where they might need to change buses at a single intermediate location and board another bus to reach their final destination. Indirect routes are recommended whenever direct routes are not found.","lastModifiedDate":"2021-11-02"},{"lineNumber":19,"author":{"gitId":"shyamgj1900"},"content":"    * Justification: This feature allows the user to have more flexibility when it comes to finding routes as they are no longer bounded to looking for routes which require a single bus.","lastModifiedDate":"2021-11-02"},{"lineNumber":20,"author":{"gitId":"shyamgj1900"},"content":"* **Enhancement added**: Find direct alternate routes","lastModifiedDate":"2021-11-02"},{"lineNumber":21,"author":{"gitId":"shyamgj1900"},"content":"    * Functionality: With direct alternate routes, the program recommends users a bus route where they might need to change their starting location to reach their final destination. The new starting location is a bus stop which is opposite to their current starting location. The bus route recommended from the new bus stop to the final destination is always a direct route.","lastModifiedDate":"2021-11-02"},{"lineNumber":22,"author":{"gitId":"shyamgj1900"},"content":"    * Justification: This feature allows the user to find routes by changing their start location to a near by bus stop. Direct alternate routes are recommended as a last case scenario when neither direct nor indirect routes were to be found.","lastModifiedDate":"2021-11-02"},{"lineNumber":23,"author":{"gitId":"shyamgj1900"},"content":"* **Enhancement added**: List all bus stop names","lastModifiedDate":"2021-11-02"},{"lineNumber":24,"author":{"gitId":"shyamgj1900"},"content":"    * Functionality: Users will be able to view all the bus stops covered by the NUS bus services by using this feature. All corresponding bus stop names for each bus service are shown in a table format for easy view.","lastModifiedDate":"2021-11-02"},{"lineNumber":25,"author":{"gitId":"shyamgj1900"},"content":"    * Justification: This feature gives the user the ability to check for all bus stop names within any bus route and allows them to get familiarised with NUS internal bus stops.","lastModifiedDate":"2021-11-02"},{"lineNumber":26,"author":{"gitId":"shyamgj1900"},"content":"* **Contributions to UG**: ","lastModifiedDate":"2021-11-02"},{"lineNumber":27,"author":{"gitId":"shyamgj1900"},"content":"    * Added documentation for feature `bus` which includes `bus /start_location /end_location` and `bus stop list`.","lastModifiedDate":"2021-11-02"},{"lineNumber":28,"author":{"gitId":"shyamgj1900"},"content":"    * Ensured the documentation was consistent with the rest of the user guide.","lastModifiedDate":"2021-11-02"},{"lineNumber":29,"author":{"gitId":"shyamgj1900"},"content":"* **Contributions to DG**:","lastModifiedDate":"2021-11-02"},{"lineNumber":30,"author":{"gitId":"shyamgj1900"},"content":"    * Added documentation for the design architecture of bus route finder command.","lastModifiedDate":"2021-11-02"},{"lineNumber":31,"author":{"gitId":"shyamgj1900"},"content":"    * Added UML diagrams: `BusRouteClassDiagram.puml`, `BusRouteSequenceDiagram.puml`","lastModifiedDate":"2021-11-02"},{"lineNumber":32,"author":{"gitId":"shyamgj1900"},"content":"    * Added documentation for how various objects interact with each other.","lastModifiedDate":"2021-11-02"},{"lineNumber":33,"author":{"gitId":"shyamgj1900"},"content":"* **Contributions to team-based tasks**:","lastModifiedDate":"2021-11-02"},{"lineNumber":34,"author":{"gitId":"shyamgj1900"},"content":"    * Reviewed multiple PR\u0027s and merged them with the main branch.","lastModifiedDate":"2021-11-02"},{"lineNumber":35,"author":{"gitId":"shyamgj1900"},"content":"    * Contributed to user stories and value propositions.","lastModifiedDate":"2021-11-02"}],"authorContributionMap":{"shyamgj1900":35}},{"path":"src/main/java/seedu/kolinux/Kolinux.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"powzx"},"content":"package seedu.kolinux;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"powzx"},"content":"import seedu.kolinux.commands.Command;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"powzx"},"content":"import seedu.kolinux.commands.CommandResult;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"powzx"},"content":"import seedu.kolinux.commands.ExitCommand;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"powzx"},"content":"import seedu.kolinux.exceptions.KolinuxException;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"giterator"},"content":"import seedu.kolinux.module.ModuleListStorage;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"powzx"},"content":"import seedu.kolinux.planner.Planner;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"powzx"},"content":"import seedu.kolinux.util.KolinuxLogger;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"powzx"},"content":"import seedu.kolinux.util.Parser;","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"powzx"},"content":"import seedu.kolinux.util.DirectoryCreator;","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"powzx"},"content":"import seedu.kolinux.util.Ui;","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":14,"author":{"gitId":"shyamgj1900"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":16,"author":{"gitId":"saravanamani1999"},"content":"import static seedu.kolinux.commands.TimetableCommand.timetable;","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"powzx"},"content":"/** Represents the operations to start and run Kolinux. */","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"powzx"},"content":"public class Kolinux {","lastModifiedDate":"2021-10-04"},{"lineNumber":20,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":21,"author":{"gitId":"powzx"},"content":"    private Ui ui \u003d new Ui();","lastModifiedDate":"2021-10-04"},{"lineNumber":22,"author":{"gitId":"powzx"},"content":"    private DirectoryCreator directoryCreator \u003d new DirectoryCreator();","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"powzx"},"content":"    private KolinuxLogger kolinuxLogger \u003d new KolinuxLogger();","lastModifiedDate":"2021-10-14"},{"lineNumber":24,"author":{"gitId":"powzx"},"content":"    private Planner planner \u003d new Planner();","lastModifiedDate":"2021-10-14"},{"lineNumber":25,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":26,"author":{"gitId":"powzx"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"powzx"},"content":"     * Initializes Kolinux by starting the module information internal database, logger, timetable, and planner.","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"powzx"},"content":"     * It also initializes the \"/data\" directory in which user data files are stored.","lastModifiedDate":"2021-11-03"},{"lineNumber":29,"author":{"gitId":"powzx"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"powzx"},"content":"    private void initKolinux() {","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"powzx"},"content":"        directoryCreator.initDirectory();","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"powzx"},"content":"        kolinuxLogger.initLogger();","lastModifiedDate":"2021-10-14"},{"lineNumber":33,"author":{"gitId":"giterator"},"content":"        ModuleListStorage.setupStorage();","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":35,"author":{"gitId":"powzx"},"content":"        try {","lastModifiedDate":"2021-11-04"},{"lineNumber":36,"author":{"gitId":"saravanamani1999"},"content":"            timetable.initTimetable();","lastModifiedDate":"2021-10-31"},{"lineNumber":37,"author":{"gitId":"saravanamani1999"},"content":"        } catch (KolinuxException exception) {","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"saravanamani1999"},"content":"            ui.showErrorMessage(exception);","lastModifiedDate":"2021-10-11"},{"lineNumber":39,"author":{"gitId":"powzx"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":40,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":41,"author":{"gitId":"powzx"},"content":"        try {","lastModifiedDate":"2021-11-04"},{"lineNumber":42,"author":{"gitId":"powzx"},"content":"            planner.initPlanner();","lastModifiedDate":"2021-11-04"},{"lineNumber":43,"author":{"gitId":"powzx"},"content":"        } catch (KolinuxException exception) {","lastModifiedDate":"2021-11-04"},{"lineNumber":44,"author":{"gitId":"powzx"},"content":"            ui.showErrorMessage(exception);","lastModifiedDate":"2021-11-04"},{"lineNumber":45,"author":{"gitId":"powzx"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":46,"author":{"gitId":"powzx"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":47,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":48,"author":{"gitId":"powzx"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":49,"author":{"gitId":"powzx"},"content":"     * Infinite loop that executes user inputs repeatedly until the user prompts to exit the application.","lastModifiedDate":"2021-10-10"},{"lineNumber":50,"author":{"gitId":"powzx"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":51,"author":{"gitId":"powzx"},"content":"    private void runCommandInLoop() {","lastModifiedDate":"2021-10-04"},{"lineNumber":52,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":53,"author":{"gitId":"powzx"},"content":"        while (true) {","lastModifiedDate":"2021-10-04"},{"lineNumber":54,"author":{"gitId":"powzx"},"content":"            try {","lastModifiedDate":"2021-10-04"},{"lineNumber":55,"author":{"gitId":"powzx"},"content":"                String userInput \u003d ui.readUserInput();","lastModifiedDate":"2021-10-28"},{"lineNumber":56,"author":{"gitId":"giterator"},"content":"                Command command \u003d Parser.parseCommand(userInput);","lastModifiedDate":"2021-10-11"},{"lineNumber":57,"author":{"gitId":"powzx"},"content":"                CommandResult result \u003d command.executeCommand();","lastModifiedDate":"2021-10-04"},{"lineNumber":58,"author":{"gitId":"powzx"},"content":"                ui.showResultToUser(result);","lastModifiedDate":"2021-10-04"},{"lineNumber":59,"author":{"gitId":"powzx"},"content":"                if (command instanceof ExitCommand) {","lastModifiedDate":"2021-10-04"},{"lineNumber":60,"author":{"gitId":"powzx"},"content":"                    break;","lastModifiedDate":"2021-10-04"},{"lineNumber":61,"author":{"gitId":"powzx"},"content":"                }","lastModifiedDate":"2021-10-04"},{"lineNumber":62,"author":{"gitId":"saravanamani1999"},"content":"            } catch (KolinuxException | IOException exception) {","lastModifiedDate":"2021-10-11"},{"lineNumber":63,"author":{"gitId":"shyamgj1900"},"content":"                assert exception instanceof KolinuxException;","lastModifiedDate":"2021-10-05"},{"lineNumber":64,"author":{"gitId":"shyamgj1900"},"content":"                ui.showErrorMessage((KolinuxException) exception);","lastModifiedDate":"2021-10-05"},{"lineNumber":65,"author":{"gitId":"powzx"},"content":"            }","lastModifiedDate":"2021-10-04"},{"lineNumber":66,"author":{"gitId":"powzx"},"content":"        }","lastModifiedDate":"2021-10-04"},{"lineNumber":67,"author":{"gitId":"powzx"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":68,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":69,"author":{"gitId":"powzx"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":70,"author":{"gitId":"powzx"},"content":"     * Greets the user, initializes databases and features, and runs user inputs in a loop.","lastModifiedDate":"2021-11-03"},{"lineNumber":71,"author":{"gitId":"powzx"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":72,"author":{"gitId":"powzx"},"content":"    public void run() {","lastModifiedDate":"2021-10-04"},{"lineNumber":73,"author":{"gitId":"powzx"},"content":"        ui.greetUser();","lastModifiedDate":"2021-10-04"},{"lineNumber":74,"author":{"gitId":"powzx"},"content":"        initKolinux();","lastModifiedDate":"2021-10-08"},{"lineNumber":75,"author":{"gitId":"powzx"},"content":"        runCommandInLoop();","lastModifiedDate":"2021-10-04"},{"lineNumber":76,"author":{"gitId":"powzx"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":77,"author":{"gitId":"powzx"},"content":"}","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"giterator":3,"powzx":65,"shyamgj1900":3,"saravanamani1999":6}},{"path":"src/main/java/seedu/kolinux/Main.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"powzx"},"content":"package seedu.kolinux;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"powzx"},"content":"public class Main {","lastModifiedDate":"2021-10-04"},{"lineNumber":4,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":5,"author":{"gitId":"powzx"},"content":"    /**","lastModifiedDate":"2021-10-04"},{"lineNumber":6,"author":{"gitId":"powzx"},"content":"     * Main entry-point for the Kolinux application.","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"powzx"},"content":"     */","lastModifiedDate":"2021-10-04"},{"lineNumber":8,"author":{"gitId":"powzx"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-10-04"},{"lineNumber":9,"author":{"gitId":"powzx"},"content":"        new Kolinux().run();","lastModifiedDate":"2021-10-04"},{"lineNumber":10,"author":{"gitId":"powzx"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":11,"author":{"gitId":"powzx"},"content":"}","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"powzx":11}},{"path":"src/main/java/seedu/kolinux/capcalculator/CapCalculator.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nonrnp"},"content":"package seedu.kolinux.capcalculator;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":3,"author":{"gitId":"nonrnp"},"content":"import seedu.kolinux.exceptions.KolinuxException;","lastModifiedDate":"2021-10-15"},{"lineNumber":4,"author":{"gitId":"nonrnp"},"content":"import seedu.kolinux.module.CalculatorModuleList;","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":6,"author":{"gitId":"nonrnp"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-15"},{"lineNumber":7,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":8,"author":{"gitId":"nonrnp"},"content":"/**","lastModifiedDate":"2021-10-16"},{"lineNumber":9,"author":{"gitId":"nonrnp"},"content":" * Abstract representation of CAP calculator based on user input.","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"nonrnp"},"content":" */","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"nonrnp"},"content":"public abstract class CapCalculator {","lastModifiedDate":"2021-10-15"},{"lineNumber":12,"author":{"gitId":"nonrnp"},"content":"    ","lastModifiedDate":"2021-10-15"},{"lineNumber":13,"author":{"gitId":"nonrnp"},"content":"    private static final int CLASSNAME_POSITION \u003d 3;","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"nonrnp"},"content":"    ","lastModifiedDate":"2021-10-16"},{"lineNumber":15,"author":{"gitId":"nonrnp"},"content":"    protected static final int INVALID_STORED_GRADE \u003d -1;","lastModifiedDate":"2021-11-05"},{"lineNumber":16,"author":{"gitId":"nonrnp"},"content":"    ","lastModifiedDate":"2021-10-16"},{"lineNumber":17,"author":{"gitId":"nonrnp"},"content":"    protected static final double MAX_CAP \u003d 5.0;","lastModifiedDate":"2021-10-16"},{"lineNumber":18,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":19,"author":{"gitId":"nonrnp"},"content":"    protected static final String DIVIDER \u003d \"/\";","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"nonrnp"},"content":"    ","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"nonrnp"},"content":"    protected static final String TWO_DECIMAL_FORMAT \u003d \"%.2f\";","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"nonrnp"},"content":"    ","lastModifiedDate":"2021-10-16"},{"lineNumber":23,"author":{"gitId":"nonrnp"},"content":"    protected CalculatorModuleList modules;","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"nonrnp"},"content":"    protected ArrayList\u003cString\u003e invalidGradeModules;","lastModifiedDate":"2021-11-05"},{"lineNumber":25,"author":{"gitId":"nonrnp"},"content":"    protected ArrayList\u003cString\u003e invalidModules;","lastModifiedDate":"2021-10-16"},{"lineNumber":26,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":27,"author":{"gitId":"nonrnp"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"nonrnp"},"content":"     * Construct this object by initializing modules and invalidModules attributes.","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"nonrnp"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"nonrnp"},"content":"    public CapCalculator() {","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"nonrnp"},"content":"        modules \u003d new CalculatorModuleList();","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"nonrnp"},"content":"        invalidGradeModules \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-11-05"},{"lineNumber":33,"author":{"gitId":"nonrnp"},"content":"        invalidModules \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"nonrnp"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":35,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":36,"author":{"gitId":"nonrnp"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":37,"author":{"gitId":"nonrnp"},"content":"     * Check if the modules attribute in this object is empty.","lastModifiedDate":"2021-10-16"},{"lineNumber":38,"author":{"gitId":"nonrnp"},"content":"     * ","lastModifiedDate":"2021-10-16"},{"lineNumber":39,"author":{"gitId":"nonrnp"},"content":"     * @throws KolinuxException If the modules attribute is empty in order to show an error message to the user.","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"nonrnp"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":41,"author":{"gitId":"nonrnp"},"content":"    protected void checkModulesNotEmpty() throws KolinuxException {","lastModifiedDate":"2021-10-16"},{"lineNumber":42,"author":{"gitId":"nonrnp"},"content":"        if (modules.getMyModulesSize() \u003e 0 || !invalidModules.isEmpty()) {","lastModifiedDate":"2021-10-30"},{"lineNumber":43,"author":{"gitId":"nonrnp"},"content":"            return;","lastModifiedDate":"2021-10-30"},{"lineNumber":44,"author":{"gitId":"nonrnp"},"content":"        }","lastModifiedDate":"2021-10-30"},{"lineNumber":45,"author":{"gitId":"nonrnp"},"content":"        String errorMessage;","lastModifiedDate":"2021-10-16"},{"lineNumber":46,"author":{"gitId":"nonrnp"},"content":"        String className \u003d this.getClass().getName().split(\"\\\\.\")[CLASSNAME_POSITION];","lastModifiedDate":"2021-10-16"},{"lineNumber":47,"author":{"gitId":"nonrnp"},"content":"        switch (className) {","lastModifiedDate":"2021-10-16"},{"lineNumber":48,"author":{"gitId":"nonrnp"},"content":"        case \"CapCalculatorByCode\":","lastModifiedDate":"2021-10-16"},{"lineNumber":49,"author":{"gitId":"nonrnp"},"content":"            errorMessage \u003d \"Please enter valid module description. Example: CG2027/A+\";","lastModifiedDate":"2021-10-16"},{"lineNumber":50,"author":{"gitId":"nonrnp"},"content":"            throw new KolinuxException(errorMessage);","lastModifiedDate":"2021-10-16"},{"lineNumber":51,"author":{"gitId":"nonrnp"},"content":"        case \"CapCalculatorByMc\":","lastModifiedDate":"2021-10-16"},{"lineNumber":52,"author":{"gitId":"nonrnp"},"content":"            errorMessage \u003d \"Please enter valid module description. Example: 4/A+\";","lastModifiedDate":"2021-10-16"},{"lineNumber":53,"author":{"gitId":"nonrnp"},"content":"            throw new KolinuxException(errorMessage);","lastModifiedDate":"2021-10-16"},{"lineNumber":54,"author":{"gitId":"nonrnp"},"content":"        case \"ModuleListCapCalculator\":","lastModifiedDate":"2021-10-19"},{"lineNumber":55,"author":{"gitId":"nonrnp"},"content":"        case \"GradeSuggestionCalculator\":","lastModifiedDate":"2021-10-19"},{"lineNumber":56,"author":{"gitId":"nonrnp"},"content":"            errorMessage \u003d \"Please store modules using module store command\";","lastModifiedDate":"2021-10-19"},{"lineNumber":57,"author":{"gitId":"nonrnp"},"content":"            throw new KolinuxException(errorMessage);","lastModifiedDate":"2021-10-19"},{"lineNumber":58,"author":{"gitId":"nonrnp"},"content":"        default:","lastModifiedDate":"2021-10-16"},{"lineNumber":59,"author":{"gitId":"nonrnp"},"content":"            // Should not reach this case","lastModifiedDate":"2021-10-16"},{"lineNumber":60,"author":{"gitId":"nonrnp"},"content":"            assert false;","lastModifiedDate":"2021-10-16"},{"lineNumber":61,"author":{"gitId":"nonrnp"},"content":"            errorMessage \u003d \"Unexpected class name found\";","lastModifiedDate":"2021-10-16"},{"lineNumber":62,"author":{"gitId":"nonrnp"},"content":"            throw new KolinuxException(errorMessage);","lastModifiedDate":"2021-10-16"},{"lineNumber":63,"author":{"gitId":"nonrnp"},"content":"        }","lastModifiedDate":"2021-10-16"},{"lineNumber":64,"author":{"gitId":"nonrnp"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":65,"author":{"gitId":"nonrnp"},"content":"    ","lastModifiedDate":"2021-10-16"},{"lineNumber":66,"author":{"gitId":"nonrnp"},"content":"    /**","lastModifiedDate":"2021-10-15"},{"lineNumber":67,"author":{"gitId":"nonrnp"},"content":"     * Calculate CAP based on a previously calculated CAP and the current module.","lastModifiedDate":"2021-10-15"},{"lineNumber":68,"author":{"gitId":"nonrnp"},"content":"     *","lastModifiedDate":"2021-10-15"},{"lineNumber":69,"author":{"gitId":"nonrnp"},"content":"     * @param totalMc The total modular credit of the previously calculated CAP.","lastModifiedDate":"2021-10-15"},{"lineNumber":70,"author":{"gitId":"nonrnp"},"content":"     * @param cap The previously calculated CAP.","lastModifiedDate":"2021-10-15"},{"lineNumber":71,"author":{"gitId":"nonrnp"},"content":"     * @param mc The modular credit of the current module.","lastModifiedDate":"2021-10-15"},{"lineNumber":72,"author":{"gitId":"nonrnp"},"content":"     * @param gradePoint The grade point of the current module to be calculated into CAP.","lastModifiedDate":"2021-10-15"},{"lineNumber":73,"author":{"gitId":"nonrnp"},"content":"     * @return The overall CAP up to the current module.","lastModifiedDate":"2021-10-16"},{"lineNumber":74,"author":{"gitId":"nonrnp"},"content":"     */","lastModifiedDate":"2021-10-15"},{"lineNumber":75,"author":{"gitId":"nonrnp"},"content":"    protected double calculateCurrentCap(int totalMc, double cap, int mc, double gradePoint) {","lastModifiedDate":"2021-10-20"},{"lineNumber":76,"author":{"gitId":"nonrnp"},"content":"        return ((cap * totalMc) + (gradePoint * mc)) / (totalMc + mc);","lastModifiedDate":"2021-10-15"},{"lineNumber":77,"author":{"gitId":"nonrnp"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":78,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":79,"author":{"gitId":"nonrnp"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":80,"author":{"gitId":"nonrnp"},"content":"     * Calculate overall CAP based on input modules from user.","lastModifiedDate":"2021-10-16"},{"lineNumber":81,"author":{"gitId":"nonrnp"},"content":"     *","lastModifiedDate":"2021-10-16"},{"lineNumber":82,"author":{"gitId":"nonrnp"},"content":"     * @return The overall CAP formatted to two decimal places.","lastModifiedDate":"2021-10-16"},{"lineNumber":83,"author":{"gitId":"nonrnp"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":84,"author":{"gitId":"nonrnp"},"content":"    protected abstract String getCap();","lastModifiedDate":"2021-10-20"},{"lineNumber":85,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":86,"author":{"gitId":"nonrnp"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":87,"author":{"gitId":"nonrnp"},"content":"     * Check if this object detects any invalid input module description from user.","lastModifiedDate":"2021-10-16"},{"lineNumber":88,"author":{"gitId":"nonrnp"},"content":"     *","lastModifiedDate":"2021-10-16"},{"lineNumber":89,"author":{"gitId":"nonrnp"},"content":"     * @throws KolinuxException When invalid module descriptions are found. Show an error message to the user","lastModifiedDate":"2021-10-16"},{"lineNumber":90,"author":{"gitId":"nonrnp"},"content":"     *     containing all the invalid module descriptions.","lastModifiedDate":"2021-10-16"},{"lineNumber":91,"author":{"gitId":"nonrnp"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":92,"author":{"gitId":"nonrnp"},"content":"    protected void checkInvalidModules() throws KolinuxException {","lastModifiedDate":"2021-10-16"},{"lineNumber":93,"author":{"gitId":"nonrnp"},"content":"        if (!(invalidModules.isEmpty())) {","lastModifiedDate":"2021-10-20"},{"lineNumber":94,"author":{"gitId":"nonrnp"},"content":"            StringBuilder errorMessage \u003d new StringBuilder(\"Invalid module info format found: \");","lastModifiedDate":"2021-10-24"},{"lineNumber":95,"author":{"gitId":"nonrnp"},"content":"            for (String module : invalidModules) {","lastModifiedDate":"2021-10-16"},{"lineNumber":96,"author":{"gitId":"nonrnp"},"content":"                errorMessage.append(module).append(\" \");","lastModifiedDate":"2021-10-16"},{"lineNumber":97,"author":{"gitId":"nonrnp"},"content":"            }","lastModifiedDate":"2021-10-16"},{"lineNumber":98,"author":{"gitId":"nonrnp"},"content":"            throw new KolinuxException(errorMessage.toString());","lastModifiedDate":"2021-10-16"},{"lineNumber":99,"author":{"gitId":"nonrnp"},"content":"        }","lastModifiedDate":"2021-10-16"},{"lineNumber":100,"author":{"gitId":"nonrnp"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":101,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":102,"author":{"gitId":"nonrnp"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":103,"author":{"gitId":"nonrnp"},"content":"     * Calculate CAP based on modules stored in this calculator object.","lastModifiedDate":"2021-10-16"},{"lineNumber":104,"author":{"gitId":"nonrnp"},"content":"     *","lastModifiedDate":"2021-10-16"},{"lineNumber":105,"author":{"gitId":"nonrnp"},"content":"     * @return Overall CAP of the modules, formatted to two decimal places.","lastModifiedDate":"2021-10-16"},{"lineNumber":106,"author":{"gitId":"nonrnp"},"content":"     * @throws KolinuxException When a module description contains an invalid module or grade.","lastModifiedDate":"2021-10-16"},{"lineNumber":107,"author":{"gitId":"nonrnp"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":108,"author":{"gitId":"nonrnp"},"content":"    public String executeCapCalculator() throws KolinuxException {","lastModifiedDate":"2021-10-16"},{"lineNumber":109,"author":{"gitId":"nonrnp"},"content":"        checkModulesNotEmpty();","lastModifiedDate":"2021-10-16"},{"lineNumber":110,"author":{"gitId":"nonrnp"},"content":"        String cap \u003d getCap();","lastModifiedDate":"2021-10-16"},{"lineNumber":111,"author":{"gitId":"nonrnp"},"content":"        checkInvalidModules();","lastModifiedDate":"2021-10-16"},{"lineNumber":112,"author":{"gitId":"nonrnp"},"content":"        return cap;","lastModifiedDate":"2021-10-16"},{"lineNumber":113,"author":{"gitId":"nonrnp"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":114,"author":{"gitId":"nonrnp"},"content":"}","lastModifiedDate":"2021-10-15"}],"authorContributionMap":{"nonrnp":114}},{"path":"src/main/java/seedu/kolinux/capcalculator/CapCalculatorByCode.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nonrnp"},"content":"package seedu.kolinux.capcalculator;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":3,"author":{"gitId":"nonrnp"},"content":"import seedu.kolinux.exceptions.KolinuxException;","lastModifiedDate":"2021-10-31"},{"lineNumber":4,"author":{"gitId":"nonrnp"},"content":"import seedu.kolinux.module.CalculatorModuleList;","lastModifiedDate":"2021-10-31"},{"lineNumber":5,"author":{"gitId":"nonrnp"},"content":"import seedu.kolinux.module.ModuleDb;","lastModifiedDate":"2021-10-15"},{"lineNumber":6,"author":{"gitId":"nonrnp"},"content":"import seedu.kolinux.module.ModuleDetails;","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"nonrnp"},"content":"import seedu.kolinux.module.ModuleList;","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":9,"author":{"gitId":"giterator"},"content":"import static seedu.kolinux.module.Grade.A_PLUS_GRADE;","lastModifiedDate":"2021-11-02"},{"lineNumber":10,"author":{"gitId":"giterator"},"content":"import static seedu.kolinux.module.Grade.A_MINUS_GRADE;","lastModifiedDate":"2021-11-02"},{"lineNumber":11,"author":{"gitId":"giterator"},"content":"import static seedu.kolinux.module.Grade.A_GRADE;","lastModifiedDate":"2021-11-02"},{"lineNumber":12,"author":{"gitId":"giterator"},"content":"import static seedu.kolinux.module.Grade.B_PLUS_GRADE;","lastModifiedDate":"2021-11-02"},{"lineNumber":13,"author":{"gitId":"giterator"},"content":"import static seedu.kolinux.module.Grade.B_MINUS_GRADE;","lastModifiedDate":"2021-11-02"},{"lineNumber":14,"author":{"gitId":"giterator"},"content":"import static seedu.kolinux.module.Grade.B_GRADE;","lastModifiedDate":"2021-11-02"},{"lineNumber":15,"author":{"gitId":"giterator"},"content":"import static seedu.kolinux.module.Grade.C_PLUS_GRADE;","lastModifiedDate":"2021-11-02"},{"lineNumber":16,"author":{"gitId":"giterator"},"content":"import static seedu.kolinux.module.Grade.C_GRADE;","lastModifiedDate":"2021-11-02"},{"lineNumber":17,"author":{"gitId":"giterator"},"content":"import static seedu.kolinux.module.Grade.D_PLUS_GRADE;","lastModifiedDate":"2021-11-02"},{"lineNumber":18,"author":{"gitId":"giterator"},"content":"import static seedu.kolinux.module.Grade.D_GRADE;","lastModifiedDate":"2021-11-02"},{"lineNumber":19,"author":{"gitId":"giterator"},"content":"import static seedu.kolinux.module.Grade.F_GRADE;","lastModifiedDate":"2021-11-02"},{"lineNumber":20,"author":{"gitId":"giterator"},"content":"import static seedu.kolinux.module.Grade.S_GRADE;","lastModifiedDate":"2021-11-02"},{"lineNumber":21,"author":{"gitId":"giterator"},"content":"import static seedu.kolinux.module.Grade.U_GRADE;","lastModifiedDate":"2021-11-02"},{"lineNumber":22,"author":{"gitId":"giterator"},"content":"import static seedu.kolinux.module.Grade.CS_GRADE;","lastModifiedDate":"2021-11-02"},{"lineNumber":23,"author":{"gitId":"giterator"},"content":"import static seedu.kolinux.module.Grade.CU_GRADE;","lastModifiedDate":"2021-11-02"},{"lineNumber":24,"author":{"gitId":"nonrnp"},"content":"import static seedu.kolinux.module.Grade.EXE_GRADE;","lastModifiedDate":"2021-11-02"},{"lineNumber":25,"author":{"gitId":"nonrnp"},"content":"import static seedu.kolinux.module.Grade.IC_GRADE;","lastModifiedDate":"2021-11-02"},{"lineNumber":26,"author":{"gitId":"nonrnp"},"content":"import static seedu.kolinux.module.Grade.IP_GRADE;","lastModifiedDate":"2021-11-02"},{"lineNumber":27,"author":{"gitId":"nonrnp"},"content":"import static seedu.kolinux.module.Grade.W_GRADE;","lastModifiedDate":"2021-11-02"},{"lineNumber":28,"author":{"gitId":"giterator"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":29,"author":{"gitId":"giterator"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":30,"author":{"gitId":"nonrnp"},"content":"/**","lastModifiedDate":"2021-10-16"},{"lineNumber":31,"author":{"gitId":"nonrnp"},"content":" * Represents CAP calculator used when the user\u0027s input module descriptions are based on module code.","lastModifiedDate":"2021-10-16"},{"lineNumber":32,"author":{"gitId":"nonrnp"},"content":" */","lastModifiedDate":"2021-10-16"},{"lineNumber":33,"author":{"gitId":"nonrnp"},"content":"public class CapCalculatorByCode extends CapCalculator {","lastModifiedDate":"2021-10-15"},{"lineNumber":34,"author":{"gitId":"nonrnp"},"content":"    ","lastModifiedDate":"2021-10-15"},{"lineNumber":35,"author":{"gitId":"nonrnp"},"content":"    private static final int VALID_GRADE \u003d 0;","lastModifiedDate":"2021-11-05"},{"lineNumber":36,"author":{"gitId":"nonrnp"},"content":"    private static final int INVALID_SU_GRADE \u003d 1;","lastModifiedDate":"2021-11-05"},{"lineNumber":37,"author":{"gitId":"nonrnp"},"content":"    private static final int INVALID_GRADE \u003d 2;","lastModifiedDate":"2021-11-05"},{"lineNumber":38,"author":{"gitId":"nonrnp"},"content":"    private static final int INVALID_CSCU_MODULE_MESSAGE \u003d 3;","lastModifiedDate":"2021-11-05"},{"lineNumber":39,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":40,"author":{"gitId":"nonrnp"},"content":"    protected ModuleDb moduleDb;","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"nonrnp"},"content":"    ","lastModifiedDate":"2021-10-15"},{"lineNumber":42,"author":{"gitId":"nonrnp"},"content":"    private CalculatorModuleList repeatedModules;","lastModifiedDate":"2021-10-31"},{"lineNumber":43,"author":{"gitId":"nonrnp"},"content":"    ","lastModifiedDate":"2021-10-31"},{"lineNumber":44,"author":{"gitId":"nonrnp"},"content":"    private int containsValidGrade(String moduleCode, String moduleGrade) {","lastModifiedDate":"2021-11-05"},{"lineNumber":45,"author":{"gitId":"nonrnp"},"content":"        ModuleDetails module \u003d moduleDb.getModuleInfo(moduleCode);","lastModifiedDate":"2021-11-05"},{"lineNumber":46,"author":{"gitId":"nonrnp"},"content":"        if (module.isCsCuModule()) {","lastModifiedDate":"2021-11-05"},{"lineNumber":47,"author":{"gitId":"nonrnp"},"content":"            if (moduleGrade.equals(CS_GRADE) || moduleGrade.equals(CU_GRADE)) {","lastModifiedDate":"2021-11-05"},{"lineNumber":48,"author":{"gitId":"nonrnp"},"content":"                return VALID_GRADE;","lastModifiedDate":"2021-11-05"},{"lineNumber":49,"author":{"gitId":"nonrnp"},"content":"            }","lastModifiedDate":"2021-11-05"},{"lineNumber":50,"author":{"gitId":"nonrnp"},"content":"            return INVALID_CSCU_MODULE_MESSAGE;","lastModifiedDate":"2021-11-05"},{"lineNumber":51,"author":{"gitId":"nonrnp"},"content":"        }","lastModifiedDate":"2021-11-05"},{"lineNumber":52,"author":{"gitId":"nonrnp"},"content":"        if (moduleGrade.equals(A_PLUS_GRADE) || moduleGrade.equals(A_GRADE) || moduleGrade.equals(A_MINUS_GRADE)","lastModifiedDate":"2021-11-05"},{"lineNumber":53,"author":{"gitId":"giterator"},"content":"                || moduleGrade.equals(B_PLUS_GRADE) || moduleGrade.equals(B_GRADE) || moduleGrade.equals(B_MINUS_GRADE)","lastModifiedDate":"2021-11-02"},{"lineNumber":54,"author":{"gitId":"giterator"},"content":"                || moduleGrade.equals(C_PLUS_GRADE) || moduleGrade.equals(C_GRADE) || moduleGrade.equals(D_PLUS_GRADE)","lastModifiedDate":"2021-11-02"},{"lineNumber":55,"author":{"gitId":"nonrnp"},"content":"                || moduleGrade.equals(D_GRADE) || moduleGrade.equals(F_GRADE) || moduleGrade.equals(EXE_GRADE) ","lastModifiedDate":"2021-11-05"},{"lineNumber":56,"author":{"gitId":"nonrnp"},"content":"                || moduleGrade.equals(IC_GRADE) || moduleGrade.equals(IP_GRADE) || moduleGrade.equals(W_GRADE)) {","lastModifiedDate":"2021-11-05"},{"lineNumber":57,"author":{"gitId":"nonrnp"},"content":"            return VALID_GRADE;","lastModifiedDate":"2021-11-05"},{"lineNumber":58,"author":{"gitId":"nonrnp"},"content":"        }","lastModifiedDate":"2021-11-05"},{"lineNumber":59,"author":{"gitId":"nonrnp"},"content":"        if (moduleGrade.equals(S_GRADE) || moduleGrade.equals(U_GRADE)) {","lastModifiedDate":"2021-11-05"},{"lineNumber":60,"author":{"gitId":"nonrnp"},"content":"            return module.isSuAble() ? VALID_GRADE : INVALID_SU_GRADE;","lastModifiedDate":"2021-11-05"},{"lineNumber":61,"author":{"gitId":"nonrnp"},"content":"        }","lastModifiedDate":"2021-11-05"},{"lineNumber":62,"author":{"gitId":"nonrnp"},"content":"        return INVALID_GRADE;        ","lastModifiedDate":"2021-11-05"},{"lineNumber":63,"author":{"gitId":"nonrnp"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":64,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":65,"author":{"gitId":"nonrnp"},"content":"    /**","lastModifiedDate":"2021-10-30"},{"lineNumber":66,"author":{"gitId":"nonrnp"},"content":"     * Read and store the modules from user\u0027s input into this calculator.","lastModifiedDate":"2021-10-30"},{"lineNumber":67,"author":{"gitId":"nonrnp"},"content":"     * ","lastModifiedDate":"2021-10-30"},{"lineNumber":68,"author":{"gitId":"nonrnp"},"content":"     * @param parsedArguments Array of module descriptions from user.","lastModifiedDate":"2021-10-31"},{"lineNumber":69,"author":{"gitId":"nonrnp"},"content":"     */","lastModifiedDate":"2021-10-30"},{"lineNumber":70,"author":{"gitId":"nonrnp"},"content":"    private void getInputModules(String[] parsedArguments) {","lastModifiedDate":"2021-10-31"},{"lineNumber":71,"author":{"gitId":"nonrnp"},"content":"        if (parsedArguments.length \u003d\u003d 1 \u0026\u0026 parsedArguments[0].equals(\"\")) {","lastModifiedDate":"2021-10-31"},{"lineNumber":72,"author":{"gitId":"nonrnp"},"content":"            return;","lastModifiedDate":"2021-10-20"},{"lineNumber":73,"author":{"gitId":"nonrnp"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":74,"author":{"gitId":"nonrnp"},"content":"        for (String moduleDescription : parsedArguments) {","lastModifiedDate":"2021-10-31"},{"lineNumber":75,"author":{"gitId":"nonrnp"},"content":"            String inputModule \u003d moduleDescription.toUpperCase();","lastModifiedDate":"2021-10-31"},{"lineNumber":76,"author":{"gitId":"nonrnp"},"content":"            String[] moduleDescriptions \u003d inputModule.split(DIVIDER);","lastModifiedDate":"2021-10-24"},{"lineNumber":77,"author":{"gitId":"nonrnp"},"content":"            if (moduleDescriptions.length !\u003d 2) {","lastModifiedDate":"2021-10-20"},{"lineNumber":78,"author":{"gitId":"nonrnp"},"content":"                invalidModules.add(moduleDescription);","lastModifiedDate":"2021-10-31"},{"lineNumber":79,"author":{"gitId":"nonrnp"},"content":"                continue;","lastModifiedDate":"2021-10-20"},{"lineNumber":80,"author":{"gitId":"nonrnp"},"content":"            }","lastModifiedDate":"2021-10-20"},{"lineNumber":81,"author":{"gitId":"nonrnp"},"content":"            String moduleCode \u003d moduleDescriptions[0];","lastModifiedDate":"2021-10-20"},{"lineNumber":82,"author":{"gitId":"nonrnp"},"content":"            if (moduleDb.getModuleInfo(moduleCode) \u003d\u003d null) {","lastModifiedDate":"2021-10-20"},{"lineNumber":83,"author":{"gitId":"nonrnp"},"content":"                invalidModules.add(moduleDescription);","lastModifiedDate":"2021-10-31"},{"lineNumber":84,"author":{"gitId":"nonrnp"},"content":"                continue;","lastModifiedDate":"2021-10-20"},{"lineNumber":85,"author":{"gitId":"nonrnp"},"content":"            }","lastModifiedDate":"2021-10-20"},{"lineNumber":86,"author":{"gitId":"nonrnp"},"content":"            String grade \u003d moduleDescriptions[1];","lastModifiedDate":"2021-10-20"},{"lineNumber":87,"author":{"gitId":"nonrnp"},"content":"            int checkGradeResult \u003d containsValidGrade(moduleCode, grade);","lastModifiedDate":"2021-11-05"},{"lineNumber":88,"author":{"gitId":"nonrnp"},"content":"            if (checkGradeResult \u003d\u003d INVALID_SU_GRADE || checkGradeResult \u003d\u003d INVALID_CSCU_MODULE_MESSAGE) {","lastModifiedDate":"2021-11-05"},{"lineNumber":89,"author":{"gitId":"nonrnp"},"content":"                invalidGradeModules.add(moduleCode);","lastModifiedDate":"2021-11-05"},{"lineNumber":90,"author":{"gitId":"nonrnp"},"content":"            }","lastModifiedDate":"2021-11-05"},{"lineNumber":91,"author":{"gitId":"nonrnp"},"content":"            if (checkGradeResult \u003d\u003d INVALID_GRADE) {","lastModifiedDate":"2021-11-05"},{"lineNumber":92,"author":{"gitId":"nonrnp"},"content":"                invalidModules.add(moduleDescription);","lastModifiedDate":"2021-10-31"},{"lineNumber":93,"author":{"gitId":"nonrnp"},"content":"            }","lastModifiedDate":"2021-10-20"},{"lineNumber":94,"author":{"gitId":"nonrnp"},"content":"            if (!modules.storeModuleCodeGrade(moduleCode, grade, moduleDb)) {","lastModifiedDate":"2021-10-31"},{"lineNumber":95,"author":{"gitId":"nonrnp"},"content":"                repeatedModules.storeModuleCodeGrade(moduleCode, grade, moduleDb);","lastModifiedDate":"2021-10-31"},{"lineNumber":96,"author":{"gitId":"nonrnp"},"content":"            }","lastModifiedDate":"2021-10-31"},{"lineNumber":97,"author":{"gitId":"nonrnp"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":98,"author":{"gitId":"nonrnp"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":99,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":100,"author":{"gitId":"nonrnp"},"content":"    /**","lastModifiedDate":"2021-10-30"},{"lineNumber":101,"author":{"gitId":"nonrnp"},"content":"     * Get the stored modules from Kolinux\u0027s module list and store them in this calculator.","lastModifiedDate":"2021-10-30"},{"lineNumber":102,"author":{"gitId":"nonrnp"},"content":"     * ","lastModifiedDate":"2021-10-30"},{"lineNumber":103,"author":{"gitId":"nonrnp"},"content":"     * @param moduleList The list of modules stored in Kolinux.","lastModifiedDate":"2021-10-30"},{"lineNumber":104,"author":{"gitId":"nonrnp"},"content":"     */","lastModifiedDate":"2021-10-30"},{"lineNumber":105,"author":{"gitId":"nonrnp"},"content":"    private void getInputModules(ModuleList moduleList) {","lastModifiedDate":"2021-10-30"},{"lineNumber":106,"author":{"gitId":"nonrnp"},"content":"        for (ModuleDetails module : moduleList.getMyModules()) {","lastModifiedDate":"2021-10-30"},{"lineNumber":107,"author":{"gitId":"nonrnp"},"content":"            if (module.containsNullGrade()) {","lastModifiedDate":"2021-10-30"},{"lineNumber":108,"author":{"gitId":"nonrnp"},"content":"                invalidModules.add(module.getModuleCode() + DIVIDER + module.getGrade());","lastModifiedDate":"2021-10-30"},{"lineNumber":109,"author":{"gitId":"nonrnp"},"content":"                continue;","lastModifiedDate":"2021-10-30"},{"lineNumber":110,"author":{"gitId":"nonrnp"},"content":"            }","lastModifiedDate":"2021-10-30"},{"lineNumber":111,"author":{"gitId":"nonrnp"},"content":"            modules.storeModule(module);","lastModifiedDate":"2021-10-30"},{"lineNumber":112,"author":{"gitId":"nonrnp"},"content":"        }","lastModifiedDate":"2021-10-30"},{"lineNumber":113,"author":{"gitId":"nonrnp"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":114,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":115,"author":{"gitId":"nonrnp"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":116,"author":{"gitId":"nonrnp"},"content":"     * Construct the superclass of this object and initialize moduleDb in order to retrieve ","lastModifiedDate":"2021-10-21"},{"lineNumber":117,"author":{"gitId":"nonrnp"},"content":"     * module information from the database. Module details are then retrieved from input string.","lastModifiedDate":"2021-10-21"},{"lineNumber":118,"author":{"gitId":"nonrnp"},"content":"     * ","lastModifiedDate":"2021-10-21"},{"lineNumber":119,"author":{"gitId":"nonrnp"},"content":"     * @param parsedArguments Array of module descriptions from user which contains the module codes and their grade.","lastModifiedDate":"2021-10-31"},{"lineNumber":120,"author":{"gitId":"nonrnp"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":121,"author":{"gitId":"nonrnp"},"content":"    public CapCalculatorByCode(String[] parsedArguments) {","lastModifiedDate":"2021-10-31"},{"lineNumber":122,"author":{"gitId":"nonrnp"},"content":"        super();","lastModifiedDate":"2021-10-21"},{"lineNumber":123,"author":{"gitId":"nonrnp"},"content":"        repeatedModules \u003d new CalculatorModuleList();","lastModifiedDate":"2021-10-31"},{"lineNumber":124,"author":{"gitId":"nonrnp"},"content":"        moduleDb \u003d new ModuleDb().getPreInitModuleDb();","lastModifiedDate":"2021-10-21"},{"lineNumber":125,"author":{"gitId":"nonrnp"},"content":"        getInputModules(parsedArguments);","lastModifiedDate":"2021-10-31"},{"lineNumber":126,"author":{"gitId":"nonrnp"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":127,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":128,"author":{"gitId":"nonrnp"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":129,"author":{"gitId":"nonrnp"},"content":"     * Constructor used when module details are retrieved from moduleList of Kolinux instead of user\u0027s input.","lastModifiedDate":"2021-10-20"},{"lineNumber":130,"author":{"gitId":"nonrnp"},"content":"     * ","lastModifiedDate":"2021-10-20"},{"lineNumber":131,"author":{"gitId":"nonrnp"},"content":"     * @param moduleList List of modules stored in moduleList of Kolinux.","lastModifiedDate":"2021-10-30"},{"lineNumber":132,"author":{"gitId":"nonrnp"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":133,"author":{"gitId":"nonrnp"},"content":"    public CapCalculatorByCode(ModuleList moduleList) {","lastModifiedDate":"2021-10-30"},{"lineNumber":134,"author":{"gitId":"nonrnp"},"content":"        super();","lastModifiedDate":"2021-10-20"},{"lineNumber":135,"author":{"gitId":"nonrnp"},"content":"        moduleDb \u003d new ModuleDb().getPreInitModuleDb();","lastModifiedDate":"2021-10-20"},{"lineNumber":136,"author":{"gitId":"nonrnp"},"content":"        getInputModules(moduleList);","lastModifiedDate":"2021-10-30"},{"lineNumber":137,"author":{"gitId":"nonrnp"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":138,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":139,"author":{"gitId":"nonrnp"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":140,"author":{"gitId":"nonrnp"},"content":"    protected String getCap() {","lastModifiedDate":"2021-10-20"},{"lineNumber":141,"author":{"gitId":"nonrnp"},"content":"        int totalMc \u003d 0;","lastModifiedDate":"2021-10-20"},{"lineNumber":142,"author":{"gitId":"nonrnp"},"content":"        double cap \u003d 0;","lastModifiedDate":"2021-10-20"},{"lineNumber":143,"author":{"gitId":"nonrnp"},"content":"        for (ModuleDetails module : modules.getMyModules()) {","lastModifiedDate":"2021-10-20"},{"lineNumber":144,"author":{"gitId":"nonrnp"},"content":"            if (module.containsNonCalculatingGrade()) {","lastModifiedDate":"2021-11-02"},{"lineNumber":145,"author":{"gitId":"nonrnp"},"content":"                continue;","lastModifiedDate":"2021-10-20"},{"lineNumber":146,"author":{"gitId":"nonrnp"},"content":"            }","lastModifiedDate":"2021-10-20"},{"lineNumber":147,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":148,"author":{"gitId":"nonrnp"},"content":"            double gradePoint \u003d module.getGradePoint();","lastModifiedDate":"2021-10-20"},{"lineNumber":149,"author":{"gitId":"nonrnp"},"content":"            ","lastModifiedDate":"2021-10-21"},{"lineNumber":150,"author":{"gitId":"nonrnp"},"content":"            String moduleCode \u003d module.getModuleCode();","lastModifiedDate":"2021-10-21"},{"lineNumber":151,"author":{"gitId":"nonrnp"},"content":"            ModuleDetails moduleInfo \u003d moduleDb.getModuleInfo(moduleCode);","lastModifiedDate":"2021-10-21"},{"lineNumber":152,"author":{"gitId":"nonrnp"},"content":"            String moduleCredit \u003d moduleInfo.getModuleCredit();","lastModifiedDate":"2021-10-21"},{"lineNumber":153,"author":{"gitId":"nonrnp"},"content":"            int mc \u003d Integer.parseInt(moduleCredit);","lastModifiedDate":"2021-10-30"},{"lineNumber":154,"author":{"gitId":"nonrnp"},"content":"            ","lastModifiedDate":"2021-10-21"},{"lineNumber":155,"author":{"gitId":"nonrnp"},"content":"            cap \u003d calculateCurrentCap(totalMc, cap, mc, gradePoint);","lastModifiedDate":"2021-10-20"},{"lineNumber":156,"author":{"gitId":"nonrnp"},"content":"            totalMc +\u003d mc;","lastModifiedDate":"2021-10-20"},{"lineNumber":157,"author":{"gitId":"nonrnp"},"content":"            assert cap \u003c\u003d MAX_CAP;","lastModifiedDate":"2021-10-20"},{"lineNumber":158,"author":{"gitId":"nonrnp"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":159,"author":{"gitId":"nonrnp"},"content":"        return String.format(TWO_DECIMAL_FORMAT, cap);","lastModifiedDate":"2021-10-20"},{"lineNumber":160,"author":{"gitId":"nonrnp"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":161,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":162,"author":{"gitId":"nonrnp"},"content":"    @Override","lastModifiedDate":"2021-10-31"},{"lineNumber":163,"author":{"gitId":"nonrnp"},"content":"    protected void checkInvalidModules() throws KolinuxException {","lastModifiedDate":"2021-10-31"},{"lineNumber":164,"author":{"gitId":"nonrnp"},"content":"        StringBuilder invalidModulesMessage \u003d new StringBuilder(\"Invalid module info format found: \");","lastModifiedDate":"2021-10-31"},{"lineNumber":165,"author":{"gitId":"nonrnp"},"content":"        StringBuilder invalidSuModulesMessage \u003d ","lastModifiedDate":"2021-11-05"},{"lineNumber":166,"author":{"gitId":"nonrnp"},"content":"                new StringBuilder(\"The following module(s) contain invalid grading basis: \");","lastModifiedDate":"2021-11-05"},{"lineNumber":167,"author":{"gitId":"nonrnp"},"content":"        StringBuilder repeatedModulesMessage \u003d ","lastModifiedDate":"2021-11-05"},{"lineNumber":168,"author":{"gitId":"nonrnp"},"content":"                new StringBuilder(\"The following module(s) are entered multiple times: \");","lastModifiedDate":"2021-11-05"},{"lineNumber":169,"author":{"gitId":"nonrnp"},"content":"        boolean hasInvalidModules \u003d false;","lastModifiedDate":"2021-10-31"},{"lineNumber":170,"author":{"gitId":"nonrnp"},"content":"        boolean hasInvalidSuModules \u003d false;","lastModifiedDate":"2021-11-05"},{"lineNumber":171,"author":{"gitId":"nonrnp"},"content":"        boolean hasRepeatedModules \u003d false;","lastModifiedDate":"2021-10-31"},{"lineNumber":172,"author":{"gitId":"nonrnp"},"content":"        ","lastModifiedDate":"2021-10-31"},{"lineNumber":173,"author":{"gitId":"nonrnp"},"content":"        if (!invalidModules.isEmpty()) {","lastModifiedDate":"2021-10-31"},{"lineNumber":174,"author":{"gitId":"nonrnp"},"content":"            hasInvalidModules \u003d true;","lastModifiedDate":"2021-10-31"},{"lineNumber":175,"author":{"gitId":"nonrnp"},"content":"            for (String module : invalidModules) {","lastModifiedDate":"2021-10-31"},{"lineNumber":176,"author":{"gitId":"nonrnp"},"content":"                invalidModulesMessage.append(module).append(\" \");","lastModifiedDate":"2021-10-31"},{"lineNumber":177,"author":{"gitId":"nonrnp"},"content":"            }","lastModifiedDate":"2021-10-31"},{"lineNumber":178,"author":{"gitId":"nonrnp"},"content":"        }","lastModifiedDate":"2021-10-31"},{"lineNumber":179,"author":{"gitId":"nonrnp"},"content":"        if (!invalidGradeModules.isEmpty()) {","lastModifiedDate":"2021-11-05"},{"lineNumber":180,"author":{"gitId":"nonrnp"},"content":"            hasInvalidSuModules \u003d true;","lastModifiedDate":"2021-11-05"},{"lineNumber":181,"author":{"gitId":"nonrnp"},"content":"            for (String module : invalidGradeModules) {","lastModifiedDate":"2021-11-05"},{"lineNumber":182,"author":{"gitId":"nonrnp"},"content":"                invalidSuModulesMessage.append(module).append(\" \");","lastModifiedDate":"2021-11-05"},{"lineNumber":183,"author":{"gitId":"nonrnp"},"content":"            }","lastModifiedDate":"2021-11-05"},{"lineNumber":184,"author":{"gitId":"nonrnp"},"content":"        }","lastModifiedDate":"2021-11-05"},{"lineNumber":185,"author":{"gitId":"nonrnp"},"content":"        if (!(repeatedModules.getMyModulesSize() \u003d\u003d 0)) {","lastModifiedDate":"2021-10-31"},{"lineNumber":186,"author":{"gitId":"nonrnp"},"content":"            hasRepeatedModules \u003d true;","lastModifiedDate":"2021-10-31"},{"lineNumber":187,"author":{"gitId":"nonrnp"},"content":"            for (ModuleDetails module : repeatedModules.getMyModules()) {","lastModifiedDate":"2021-10-31"},{"lineNumber":188,"author":{"gitId":"nonrnp"},"content":"                repeatedModulesMessage.append(module.getModuleCode()).append(\" \");","lastModifiedDate":"2021-10-31"},{"lineNumber":189,"author":{"gitId":"nonrnp"},"content":"            }","lastModifiedDate":"2021-10-31"},{"lineNumber":190,"author":{"gitId":"nonrnp"},"content":"        }","lastModifiedDate":"2021-10-31"},{"lineNumber":191,"author":{"gitId":"nonrnp"},"content":"        ","lastModifiedDate":"2021-10-31"},{"lineNumber":192,"author":{"gitId":"nonrnp"},"content":"        if (hasInvalidModules || hasInvalidSuModules || hasRepeatedModules) {","lastModifiedDate":"2021-11-05"},{"lineNumber":193,"author":{"gitId":"nonrnp"},"content":"            String errorMessage \u003d (hasInvalidModules ? invalidModulesMessage.toString() + \"\\n\" : \"\")","lastModifiedDate":"2021-11-05"},{"lineNumber":194,"author":{"gitId":"nonrnp"},"content":"                    + (hasRepeatedModules ? repeatedModulesMessage.toString() + \"\\n\" : \"\")","lastModifiedDate":"2021-11-05"},{"lineNumber":195,"author":{"gitId":"nonrnp"},"content":"                    + (hasInvalidSuModules ? invalidSuModulesMessage.toString() : \"\");","lastModifiedDate":"2021-11-05"},{"lineNumber":196,"author":{"gitId":"nonrnp"},"content":"            throw new KolinuxException(errorMessage.trim());","lastModifiedDate":"2021-11-05"},{"lineNumber":197,"author":{"gitId":"nonrnp"},"content":"        }    ","lastModifiedDate":"2021-10-31"},{"lineNumber":198,"author":{"gitId":"nonrnp"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":199,"author":{"gitId":"nonrnp"},"content":"}","lastModifiedDate":"2021-10-15"}],"authorContributionMap":{"giterator":19,"nonrnp":180}},{"path":"src/main/java/seedu/kolinux/capcalculator/CapCalculatorByMc.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nonrnp"},"content":"package seedu.kolinux.capcalculator;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":3,"author":{"gitId":"nonrnp"},"content":"import seedu.kolinux.module.ModuleDetails;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"nonrnp"},"content":"/**","lastModifiedDate":"2021-10-16"},{"lineNumber":6,"author":{"gitId":"nonrnp"},"content":" * Represents CAP calculator used when the user\u0027s input module descriptions are based on modular credit.","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"nonrnp"},"content":" */","lastModifiedDate":"2021-10-16"},{"lineNumber":8,"author":{"gitId":"nonrnp"},"content":"public class CapCalculatorByMc extends CapCalculator {","lastModifiedDate":"2021-10-15"},{"lineNumber":9,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":10,"author":{"gitId":"nonrnp"},"content":"    /**","lastModifiedDate":"2021-10-31"},{"lineNumber":11,"author":{"gitId":"nonrnp"},"content":"     * Read and store the modules from user\u0027s input into this calculator.","lastModifiedDate":"2021-10-31"},{"lineNumber":12,"author":{"gitId":"nonrnp"},"content":"     *","lastModifiedDate":"2021-10-31"},{"lineNumber":13,"author":{"gitId":"nonrnp"},"content":"     * @param parsedArguments Array of module descriptions from user.","lastModifiedDate":"2021-10-31"},{"lineNumber":14,"author":{"gitId":"nonrnp"},"content":"     */","lastModifiedDate":"2021-10-31"},{"lineNumber":15,"author":{"gitId":"nonrnp"},"content":"    private void getInputModules(String[] parsedArguments) {","lastModifiedDate":"2021-10-31"},{"lineNumber":16,"author":{"gitId":"nonrnp"},"content":"        if (parsedArguments.length \u003d\u003d 1 \u0026\u0026 parsedArguments[0].equals(\"\")) {","lastModifiedDate":"2021-10-31"},{"lineNumber":17,"author":{"gitId":"nonrnp"},"content":"            return;","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"nonrnp"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"nonrnp"},"content":"        for (String moduleDescription : parsedArguments) {","lastModifiedDate":"2021-10-31"},{"lineNumber":20,"author":{"gitId":"nonrnp"},"content":"            try {","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"nonrnp"},"content":"                String inputModule \u003d moduleDescription.toUpperCase();","lastModifiedDate":"2021-10-31"},{"lineNumber":22,"author":{"gitId":"nonrnp"},"content":"                String[] moduleDescriptions \u003d inputModule.split(DIVIDER);","lastModifiedDate":"2021-10-31"},{"lineNumber":23,"author":{"gitId":"nonrnp"},"content":"                double moduleCredit \u003d Double.parseDouble(moduleDescriptions[0]);","lastModifiedDate":"2021-10-31"},{"lineNumber":24,"author":{"gitId":"nonrnp"},"content":"                if (moduleCredit !\u003d (int) moduleCredit) {","lastModifiedDate":"2021-10-31"},{"lineNumber":25,"author":{"gitId":"nonrnp"},"content":"                    invalidModules.add(moduleDescription);","lastModifiedDate":"2021-10-31"},{"lineNumber":26,"author":{"gitId":"nonrnp"},"content":"                    continue;","lastModifiedDate":"2021-10-31"},{"lineNumber":27,"author":{"gitId":"nonrnp"},"content":"                }","lastModifiedDate":"2021-10-31"},{"lineNumber":28,"author":{"gitId":"nonrnp"},"content":"                int mc \u003d (int) moduleCredit;","lastModifiedDate":"2021-10-31"},{"lineNumber":29,"author":{"gitId":"nonrnp"},"content":"                String grade \u003d moduleDescriptions[1];","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"nonrnp"},"content":"                modules.storeModuleMcGrade(mc, grade);","lastModifiedDate":"2021-10-31"},{"lineNumber":31,"author":{"gitId":"nonrnp"},"content":"            } catch (NumberFormatException | ArrayIndexOutOfBoundsException exception) {","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"nonrnp"},"content":"                invalidModules.add(moduleDescription);","lastModifiedDate":"2021-10-31"},{"lineNumber":33,"author":{"gitId":"nonrnp"},"content":"            }","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"nonrnp"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"nonrnp"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":36,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":37,"author":{"gitId":"nonrnp"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"nonrnp"},"content":"     * Construct the superclass of this object, then store the module details from user input.","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"nonrnp"},"content":"     * ","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"nonrnp"},"content":"     * @param parsedArguments Array of module descriptions from user which contains the module credits ","lastModifiedDate":"2021-10-31"},{"lineNumber":41,"author":{"gitId":"nonrnp"},"content":"     *                        and their respective grade.","lastModifiedDate":"2021-10-31"},{"lineNumber":42,"author":{"gitId":"nonrnp"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":43,"author":{"gitId":"nonrnp"},"content":"    public CapCalculatorByMc(String[] parsedArguments) {","lastModifiedDate":"2021-10-31"},{"lineNumber":44,"author":{"gitId":"nonrnp"},"content":"        super();","lastModifiedDate":"2021-10-21"},{"lineNumber":45,"author":{"gitId":"nonrnp"},"content":"        getInputModules(parsedArguments);","lastModifiedDate":"2021-10-31"},{"lineNumber":46,"author":{"gitId":"nonrnp"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":47,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":48,"author":{"gitId":"nonrnp"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":49,"author":{"gitId":"nonrnp"},"content":"    protected String getCap() {","lastModifiedDate":"2021-10-20"},{"lineNumber":50,"author":{"gitId":"nonrnp"},"content":"        int totalMc \u003d 0;","lastModifiedDate":"2021-10-20"},{"lineNumber":51,"author":{"gitId":"nonrnp"},"content":"        double cap \u003d 0;","lastModifiedDate":"2021-10-20"},{"lineNumber":52,"author":{"gitId":"nonrnp"},"content":"        for (ModuleDetails module : modules.getMyModules()) {","lastModifiedDate":"2021-10-20"},{"lineNumber":53,"author":{"gitId":"nonrnp"},"content":"            if (module.containsNonCalculatingGrade()) {","lastModifiedDate":"2021-11-02"},{"lineNumber":54,"author":{"gitId":"nonrnp"},"content":"                continue;","lastModifiedDate":"2021-10-20"},{"lineNumber":55,"author":{"gitId":"nonrnp"},"content":"            }","lastModifiedDate":"2021-10-20"},{"lineNumber":56,"author":{"gitId":"nonrnp"},"content":"            int mc \u003d Integer.parseInt(module.getModuleCredit());","lastModifiedDate":"2021-10-20"},{"lineNumber":57,"author":{"gitId":"nonrnp"},"content":"            double gradePoint \u003d module.getGradePoint();","lastModifiedDate":"2021-10-20"},{"lineNumber":58,"author":{"gitId":"nonrnp"},"content":"            if (gradePoint \u003d\u003d INVALID_STORED_GRADE || mc \u003c 1) {","lastModifiedDate":"2021-11-05"},{"lineNumber":59,"author":{"gitId":"nonrnp"},"content":"                invalidModules.add(module.getModuleCredit() + DIVIDER + module.getGrade());","lastModifiedDate":"2021-10-21"},{"lineNumber":60,"author":{"gitId":"nonrnp"},"content":"                continue;","lastModifiedDate":"2021-10-20"},{"lineNumber":61,"author":{"gitId":"nonrnp"},"content":"            }","lastModifiedDate":"2021-10-20"},{"lineNumber":62,"author":{"gitId":"nonrnp"},"content":"            cap \u003d calculateCurrentCap(totalMc, cap, mc, gradePoint);","lastModifiedDate":"2021-10-20"},{"lineNumber":63,"author":{"gitId":"nonrnp"},"content":"            totalMc +\u003d mc;","lastModifiedDate":"2021-10-20"},{"lineNumber":64,"author":{"gitId":"nonrnp"},"content":"            assert cap \u003c\u003d MAX_CAP;","lastModifiedDate":"2021-10-20"},{"lineNumber":65,"author":{"gitId":"nonrnp"},"content":"        }","lastModifiedDate":"2021-10-15"},{"lineNumber":66,"author":{"gitId":"nonrnp"},"content":"        return String.format(TWO_DECIMAL_FORMAT, cap);","lastModifiedDate":"2021-10-20"},{"lineNumber":67,"author":{"gitId":"nonrnp"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":68,"author":{"gitId":"nonrnp"},"content":"}","lastModifiedDate":"2021-10-15"}],"authorContributionMap":{"nonrnp":68}},{"path":"src/main/java/seedu/kolinux/capcalculator/GradeSuggestionCalculator.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nonrnp"},"content":"package seedu.kolinux.capcalculator;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"nonrnp"},"content":"import seedu.kolinux.exceptions.KolinuxException;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"nonrnp"},"content":"import seedu.kolinux.module.ModuleDetails;","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"nonrnp"},"content":"import seedu.kolinux.module.ModuleList;","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"giterator"},"content":"import static seedu.kolinux.module.Grade.A_MINUS_GRADE;","lastModifiedDate":"2021-11-02"},{"lineNumber":8,"author":{"gitId":"giterator"},"content":"import static seedu.kolinux.module.Grade.A_GRADE;","lastModifiedDate":"2021-11-02"},{"lineNumber":9,"author":{"gitId":"giterator"},"content":"import static seedu.kolinux.module.Grade.B_PLUS_GRADE;","lastModifiedDate":"2021-11-02"},{"lineNumber":10,"author":{"gitId":"giterator"},"content":"import static seedu.kolinux.module.Grade.B_MINUS_GRADE;","lastModifiedDate":"2021-11-02"},{"lineNumber":11,"author":{"gitId":"giterator"},"content":"import static seedu.kolinux.module.Grade.B_GRADE;","lastModifiedDate":"2021-11-02"},{"lineNumber":12,"author":{"gitId":"giterator"},"content":"import static seedu.kolinux.module.Grade.C_PLUS_GRADE;","lastModifiedDate":"2021-11-02"},{"lineNumber":13,"author":{"gitId":"giterator"},"content":"import static seedu.kolinux.module.Grade.C_GRADE;","lastModifiedDate":"2021-11-02"},{"lineNumber":14,"author":{"gitId":"giterator"},"content":"import static seedu.kolinux.module.Grade.D_PLUS_GRADE;","lastModifiedDate":"2021-11-02"},{"lineNumber":15,"author":{"gitId":"giterator"},"content":"import static seedu.kolinux.module.Grade.D_GRADE;","lastModifiedDate":"2021-11-02"},{"lineNumber":16,"author":{"gitId":"giterator"},"content":"import static seedu.kolinux.module.Grade.F_GRADE;","lastModifiedDate":"2021-11-02"},{"lineNumber":17,"author":{"gitId":"giterator"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":18,"author":{"gitId":"giterator"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":19,"author":{"gitId":"nonrnp"},"content":"/**","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"nonrnp"},"content":" * Represents CAP calculator used for suggesting grade based on stored modules in module list and desired CAP","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"nonrnp"},"content":" * from user input.","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"nonrnp"},"content":" */","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"nonrnp"},"content":"public class GradeSuggestionCalculator extends CapCalculatorByCode {","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"nonrnp"},"content":"    ","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"nonrnp"},"content":"    private String userDesiredCap;","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"nonrnp"},"content":"    ","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"nonrnp"},"content":"    public GradeSuggestionCalculator(ModuleList modules, String userDesiredCap) {","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"nonrnp"},"content":"        super(modules);","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"nonrnp"},"content":"        this.userDesiredCap \u003d userDesiredCap;","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"nonrnp"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"nonrnp"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"nonrnp"},"content":"     * Check if user\u0027s desired CAP is invalid or not.","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"nonrnp"},"content":"     * ","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"nonrnp"},"content":"     * @throws KolinuxException if desired CAP is invalid.","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"nonrnp"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":37,"author":{"gitId":"nonrnp"},"content":"    private void checkInvalidDesiredCap() throws KolinuxException {","lastModifiedDate":"2021-10-24"},{"lineNumber":38,"author":{"gitId":"nonrnp"},"content":"        double cap;","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"nonrnp"},"content":"        try {","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"nonrnp"},"content":"            cap \u003d Double.parseDouble(userDesiredCap);","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"nonrnp"},"content":"        } catch (NumberFormatException exception) {","lastModifiedDate":"2021-10-20"},{"lineNumber":42,"author":{"gitId":"nonrnp"},"content":"            String errorMessage \u003d \"CAP must be a number\";","lastModifiedDate":"2021-10-20"},{"lineNumber":43,"author":{"gitId":"nonrnp"},"content":"            throw new KolinuxException(errorMessage);","lastModifiedDate":"2021-10-20"},{"lineNumber":44,"author":{"gitId":"nonrnp"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":45,"author":{"gitId":"nonrnp"},"content":"        if (cap \u003e 5.0) {","lastModifiedDate":"2021-10-19"},{"lineNumber":46,"author":{"gitId":"nonrnp"},"content":"            String errorMessage \u003d \"CAP cannot exceed 5.0\";","lastModifiedDate":"2021-10-19"},{"lineNumber":47,"author":{"gitId":"nonrnp"},"content":"            throw new KolinuxException(errorMessage);","lastModifiedDate":"2021-10-19"},{"lineNumber":48,"author":{"gitId":"nonrnp"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":49,"author":{"gitId":"nonrnp"},"content":"        if (cap \u003c 0.0) {","lastModifiedDate":"2021-10-31"},{"lineNumber":50,"author":{"gitId":"nonrnp"},"content":"            String errorMessage \u003d \"CAP cannot be a negative number\";","lastModifiedDate":"2021-10-31"},{"lineNumber":51,"author":{"gitId":"nonrnp"},"content":"            throw new KolinuxException(errorMessage);","lastModifiedDate":"2021-10-31"},{"lineNumber":52,"author":{"gitId":"nonrnp"},"content":"        }","lastModifiedDate":"2021-10-31"},{"lineNumber":53,"author":{"gitId":"nonrnp"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":54,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":55,"author":{"gitId":"nonrnp"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":56,"author":{"gitId":"nonrnp"},"content":"     * Get the total number of MC of modules which already have their grade stored.","lastModifiedDate":"2021-10-19"},{"lineNumber":57,"author":{"gitId":"nonrnp"},"content":"     * ","lastModifiedDate":"2021-10-19"},{"lineNumber":58,"author":{"gitId":"nonrnp"},"content":"     * @return Total MC.","lastModifiedDate":"2021-10-19"},{"lineNumber":59,"author":{"gitId":"nonrnp"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":60,"author":{"gitId":"nonrnp"},"content":"    private double getMcModulesWithGrade() {","lastModifiedDate":"2021-10-19"},{"lineNumber":61,"author":{"gitId":"nonrnp"},"content":"        double totalMc \u003d 0.0;","lastModifiedDate":"2021-10-19"},{"lineNumber":62,"author":{"gitId":"nonrnp"},"content":"        for (ModuleDetails module : modules.getMyModules()) {","lastModifiedDate":"2021-10-20"},{"lineNumber":63,"author":{"gitId":"nonrnp"},"content":"            if (module.containsNonCalculatingGrade() || module.containsNullGrade()) {","lastModifiedDate":"2021-11-02"},{"lineNumber":64,"author":{"gitId":"nonrnp"},"content":"                continue;","lastModifiedDate":"2021-10-19"},{"lineNumber":65,"author":{"gitId":"nonrnp"},"content":"            }","lastModifiedDate":"2021-10-19"},{"lineNumber":66,"author":{"gitId":"nonrnp"},"content":"            totalMc +\u003d totalMc +\u003d Integer.parseInt(module.getModuleCredit());","lastModifiedDate":"2021-10-20"},{"lineNumber":67,"author":{"gitId":"nonrnp"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":68,"author":{"gitId":"nonrnp"},"content":"        return totalMc;","lastModifiedDate":"2021-10-19"},{"lineNumber":69,"author":{"gitId":"nonrnp"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":70,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":71,"author":{"gitId":"nonrnp"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":72,"author":{"gitId":"nonrnp"},"content":"     * Get the total number of MC of modules which do not have their grade stored.","lastModifiedDate":"2021-10-19"},{"lineNumber":73,"author":{"gitId":"nonrnp"},"content":"     * ","lastModifiedDate":"2021-10-19"},{"lineNumber":74,"author":{"gitId":"nonrnp"},"content":"     * @return Total MC.","lastModifiedDate":"2021-10-19"},{"lineNumber":75,"author":{"gitId":"nonrnp"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":76,"author":{"gitId":"nonrnp"},"content":"    private double getMcModulesWithoutGrade() throws KolinuxException {","lastModifiedDate":"2021-10-24"},{"lineNumber":77,"author":{"gitId":"nonrnp"},"content":"        double totalMc \u003d 0.0;","lastModifiedDate":"2021-10-19"},{"lineNumber":78,"author":{"gitId":"nonrnp"},"content":"        for (String module : invalidModules) {","lastModifiedDate":"2021-10-19"},{"lineNumber":79,"author":{"gitId":"nonrnp"},"content":"            String moduleCode \u003d module.split(DIVIDER)[0];","lastModifiedDate":"2021-10-21"},{"lineNumber":80,"author":{"gitId":"nonrnp"},"content":"            String moduleCredit \u003d moduleDb.getModuleInfo(moduleCode).getModuleCredit();","lastModifiedDate":"2021-10-30"},{"lineNumber":81,"author":{"gitId":"nonrnp"},"content":"            double mc \u003d Double.parseDouble(moduleCredit);","lastModifiedDate":"2021-10-30"},{"lineNumber":82,"author":{"gitId":"nonrnp"},"content":"            totalMc +\u003d mc;","lastModifiedDate":"2021-10-19"},{"lineNumber":83,"author":{"gitId":"nonrnp"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":84,"author":{"gitId":"nonrnp"},"content":"        if (totalMc \u003d\u003d 0) {","lastModifiedDate":"2021-10-24"},{"lineNumber":85,"author":{"gitId":"nonrnp"},"content":"            String errorMessage \u003d \"Grade suggestion is not available as \"","lastModifiedDate":"2021-10-24"},{"lineNumber":86,"author":{"gitId":"nonrnp"},"content":"                    + \"every modules already have their grade available\";","lastModifiedDate":"2021-10-24"},{"lineNumber":87,"author":{"gitId":"nonrnp"},"content":"            throw new KolinuxException(errorMessage);","lastModifiedDate":"2021-10-24"},{"lineNumber":88,"author":{"gitId":"nonrnp"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":89,"author":{"gitId":"nonrnp"},"content":"        return totalMc;","lastModifiedDate":"2021-10-19"},{"lineNumber":90,"author":{"gitId":"nonrnp"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":91,"author":{"gitId":"nonrnp"},"content":"    ","lastModifiedDate":"2021-10-19"},{"lineNumber":92,"author":{"gitId":"nonrnp"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":93,"author":{"gitId":"nonrnp"},"content":"     * Get the minimum grade that the user needs to achieve in order to get the desired CAP.","lastModifiedDate":"2021-10-19"},{"lineNumber":94,"author":{"gitId":"nonrnp"},"content":"     * ","lastModifiedDate":"2021-10-19"},{"lineNumber":95,"author":{"gitId":"nonrnp"},"content":"     * @param gradePoint The minimum grade point that the user needs.","lastModifiedDate":"2021-10-19"},{"lineNumber":96,"author":{"gitId":"nonrnp"},"content":"     * @return A letter grade which is equal to or higher than the minimum grade point.","lastModifiedDate":"2021-10-19"},{"lineNumber":97,"author":{"gitId":"nonrnp"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":98,"author":{"gitId":"nonrnp"},"content":"    private String getGradeLetter(double gradePoint) {","lastModifiedDate":"2021-10-19"},{"lineNumber":99,"author":{"gitId":"nonrnp"},"content":"        if (gradePoint \u003c\u003d 0.0) {","lastModifiedDate":"2021-10-19"},{"lineNumber":100,"author":{"gitId":"giterator"},"content":"            return F_GRADE;","lastModifiedDate":"2021-11-02"},{"lineNumber":101,"author":{"gitId":"nonrnp"},"content":"        } else if (gradePoint \u003c\u003d 1.0) {","lastModifiedDate":"2021-10-19"},{"lineNumber":102,"author":{"gitId":"giterator"},"content":"            return D_GRADE;","lastModifiedDate":"2021-11-02"},{"lineNumber":103,"author":{"gitId":"nonrnp"},"content":"        } else if (gradePoint \u003c\u003d 1.5) {","lastModifiedDate":"2021-10-19"},{"lineNumber":104,"author":{"gitId":"giterator"},"content":"            return D_PLUS_GRADE;","lastModifiedDate":"2021-11-02"},{"lineNumber":105,"author":{"gitId":"nonrnp"},"content":"        } else if (gradePoint \u003c\u003d 2.0) {","lastModifiedDate":"2021-10-19"},{"lineNumber":106,"author":{"gitId":"giterator"},"content":"            return C_GRADE;","lastModifiedDate":"2021-11-02"},{"lineNumber":107,"author":{"gitId":"nonrnp"},"content":"        } else if (gradePoint \u003c\u003d 2.5) {","lastModifiedDate":"2021-10-19"},{"lineNumber":108,"author":{"gitId":"giterator"},"content":"            return C_PLUS_GRADE;","lastModifiedDate":"2021-11-02"},{"lineNumber":109,"author":{"gitId":"nonrnp"},"content":"        } else if (gradePoint \u003c\u003d 3.0) {","lastModifiedDate":"2021-10-19"},{"lineNumber":110,"author":{"gitId":"giterator"},"content":"            return B_MINUS_GRADE;","lastModifiedDate":"2021-11-02"},{"lineNumber":111,"author":{"gitId":"nonrnp"},"content":"        } else if (gradePoint \u003c\u003d 3.5) {","lastModifiedDate":"2021-10-19"},{"lineNumber":112,"author":{"gitId":"giterator"},"content":"            return B_GRADE;","lastModifiedDate":"2021-11-02"},{"lineNumber":113,"author":{"gitId":"nonrnp"},"content":"        } else if (gradePoint \u003c\u003d 4.0) {","lastModifiedDate":"2021-10-19"},{"lineNumber":114,"author":{"gitId":"giterator"},"content":"            return B_PLUS_GRADE;","lastModifiedDate":"2021-11-02"},{"lineNumber":115,"author":{"gitId":"nonrnp"},"content":"        } else if (gradePoint \u003c\u003d 4.5) {","lastModifiedDate":"2021-10-19"},{"lineNumber":116,"author":{"gitId":"giterator"},"content":"            return A_MINUS_GRADE;","lastModifiedDate":"2021-11-02"},{"lineNumber":117,"author":{"gitId":"nonrnp"},"content":"        } else if (gradePoint \u003c\u003d 5.0) {","lastModifiedDate":"2021-10-19"},{"lineNumber":118,"author":{"gitId":"giterator"},"content":"            return A_GRADE;","lastModifiedDate":"2021-11-02"},{"lineNumber":119,"author":{"gitId":"nonrnp"},"content":"        } else {","lastModifiedDate":"2021-10-19"},{"lineNumber":120,"author":{"gitId":"nonrnp"},"content":"            return \"UNACHIEVABLE\";","lastModifiedDate":"2021-10-19"},{"lineNumber":121,"author":{"gitId":"nonrnp"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":122,"author":{"gitId":"nonrnp"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":123,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":124,"author":{"gitId":"nonrnp"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":125,"author":{"gitId":"nonrnp"},"content":"     * Calculate and retrieve the average minimum grade that the user needs to achieve in order to get the desired CAP.","lastModifiedDate":"2021-10-19"},{"lineNumber":126,"author":{"gitId":"nonrnp"},"content":"     * ","lastModifiedDate":"2021-10-19"},{"lineNumber":127,"author":{"gitId":"nonrnp"},"content":"     * @param currentCap CAP of the modules with available grade stored in module list.","lastModifiedDate":"2021-10-19"},{"lineNumber":128,"author":{"gitId":"nonrnp"},"content":"     * @param mcModuleWithGrade Total MC of modules with available grade.","lastModifiedDate":"2021-10-19"},{"lineNumber":129,"author":{"gitId":"nonrnp"},"content":"     * @param mcModuleWithoutGrade Total MC of modules without available grade.","lastModifiedDate":"2021-10-19"},{"lineNumber":130,"author":{"gitId":"nonrnp"},"content":"     * @return The average minimum grade that the user needs.","lastModifiedDate":"2021-10-19"},{"lineNumber":131,"author":{"gitId":"nonrnp"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":132,"author":{"gitId":"nonrnp"},"content":"    private String getMinimumGrade(double currentCap, double mcModuleWithGrade, double mcModuleWithoutGrade) {","lastModifiedDate":"2021-10-19"},{"lineNumber":133,"author":{"gitId":"nonrnp"},"content":"        double desiredCap \u003d Double.parseDouble(userDesiredCap);","lastModifiedDate":"2021-10-19"},{"lineNumber":134,"author":{"gitId":"nonrnp"},"content":"        double minimumCap \u003d ((desiredCap * mcModuleWithGrade) + (desiredCap * mcModuleWithoutGrade) ","lastModifiedDate":"2021-10-19"},{"lineNumber":135,"author":{"gitId":"nonrnp"},"content":"                - (currentCap * mcModuleWithGrade)) / mcModuleWithoutGrade;","lastModifiedDate":"2021-10-19"},{"lineNumber":136,"author":{"gitId":"nonrnp"},"content":"        return getGradeLetter(minimumCap);","lastModifiedDate":"2021-10-19"},{"lineNumber":137,"author":{"gitId":"nonrnp"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":138,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":139,"author":{"gitId":"nonrnp"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":140,"author":{"gitId":"nonrnp"},"content":"     * Get the average minimum grade that the user needs to achieve in order to get the desired CAP.","lastModifiedDate":"2021-10-19"},{"lineNumber":141,"author":{"gitId":"nonrnp"},"content":"     * ","lastModifiedDate":"2021-10-19"},{"lineNumber":142,"author":{"gitId":"nonrnp"},"content":"     * @return The average minimum grade that the user needs.","lastModifiedDate":"2021-10-19"},{"lineNumber":143,"author":{"gitId":"nonrnp"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":144,"author":{"gitId":"nonrnp"},"content":"    private String getExpectedGrades() throws KolinuxException {","lastModifiedDate":"2021-10-24"},{"lineNumber":145,"author":{"gitId":"nonrnp"},"content":"        double currentCap \u003d Double.parseDouble(getCap());","lastModifiedDate":"2021-10-19"},{"lineNumber":146,"author":{"gitId":"nonrnp"},"content":"        double mcModuleWithGrade \u003d getMcModulesWithGrade();","lastModifiedDate":"2021-10-19"},{"lineNumber":147,"author":{"gitId":"nonrnp"},"content":"        double mcModuleWithoutGrade \u003d getMcModulesWithoutGrade();","lastModifiedDate":"2021-10-19"},{"lineNumber":148,"author":{"gitId":"nonrnp"},"content":"        return getMinimumGrade(currentCap, mcModuleWithGrade, mcModuleWithoutGrade);","lastModifiedDate":"2021-10-19"},{"lineNumber":149,"author":{"gitId":"nonrnp"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":150,"author":{"gitId":"nonrnp"},"content":"     ","lastModifiedDate":"2021-10-19"},{"lineNumber":151,"author":{"gitId":"nonrnp"},"content":"    @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":152,"author":{"gitId":"nonrnp"},"content":"    public String executeCapCalculator() throws KolinuxException {","lastModifiedDate":"2021-10-19"},{"lineNumber":153,"author":{"gitId":"nonrnp"},"content":"        checkInvalidDesiredCap();","lastModifiedDate":"2021-10-19"},{"lineNumber":154,"author":{"gitId":"nonrnp"},"content":"        checkModulesNotEmpty();","lastModifiedDate":"2021-10-19"},{"lineNumber":155,"author":{"gitId":"nonrnp"},"content":"        return getExpectedGrades();","lastModifiedDate":"2021-10-19"},{"lineNumber":156,"author":{"gitId":"nonrnp"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":157,"author":{"gitId":"nonrnp"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"giterator":22,"nonrnp":135}},{"path":"src/main/java/seedu/kolinux/capcalculator/ModuleListCapCalculator.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nonrnp"},"content":"package seedu.kolinux.capcalculator;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"nonrnp"},"content":"import seedu.kolinux.exceptions.KolinuxException;","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"nonrnp"},"content":"import seedu.kolinux.module.ModuleDetails;","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"nonrnp"},"content":"import seedu.kolinux.module.ModuleList;","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"nonrnp"},"content":"/**","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"nonrnp"},"content":" * Represents CAP calculator used for calculation from stored modules in module list.","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"nonrnp"},"content":" */","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"nonrnp"},"content":"public class ModuleListCapCalculator extends CapCalculatorByCode {","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"nonrnp"},"content":"    private static final String UNAVAILABLE_GRADE \u003d \"0\";","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"nonrnp"},"content":"    ","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"nonrnp"},"content":"    public ModuleListCapCalculator(ModuleList modules) {","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"nonrnp"},"content":"        super(modules);","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"nonrnp"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"nonrnp"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"nonrnp"},"content":"     * Check if all the stored modules do not have available grade.","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"nonrnp"},"content":"     * ","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"nonrnp"},"content":"     * @throws KolinuxException if there is no module with available grade stored.","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"nonrnp"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"nonrnp"},"content":"    private void checkAllModulesNotAvailable() throws KolinuxException {","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"nonrnp"},"content":"        for (ModuleDetails module : modules.getMyModules()) {","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"nonrnp"},"content":"            if (!module.getGrade().equals(UNAVAILABLE_GRADE)) {","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"nonrnp"},"content":"                return;","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"nonrnp"},"content":"            }","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"nonrnp"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"nonrnp"},"content":"        String errorMessage \u003d \"There is no module with available grade at the moment\";","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"nonrnp"},"content":"        throw new KolinuxException(errorMessage);","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"nonrnp"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"nonrnp"},"content":"    @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"nonrnp"},"content":"    public String executeCapCalculator() throws KolinuxException {","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"nonrnp"},"content":"        checkModulesNotEmpty();","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"nonrnp"},"content":"        checkAllModulesNotAvailable();","lastModifiedDate":"2021-10-19"},{"lineNumber":37,"author":{"gitId":"nonrnp"},"content":"        return getCap();","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"nonrnp"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":39,"author":{"gitId":"nonrnp"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"nonrnp":39}},{"path":"src/main/java/seedu/kolinux/commands/BusRouteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"powzx"},"content":"package seedu.kolinux.commands;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"shyamgj1900"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"powzx"},"content":"import seedu.kolinux.exceptions.KolinuxException;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"shyamgj1900"},"content":"import seedu.kolinux.routes.DirectRoute;","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"shyamgj1900"},"content":"import seedu.kolinux.routes.IndirectRoute;","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"shyamgj1900"},"content":"import seedu.kolinux.routes.Location;","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"shyamgj1900"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"shyamgj1900"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"shyamgj1900"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"shyamgj1900"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-10-26"},{"lineNumber":11,"author":{"gitId":"shyamgj1900"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"shyamgj1900"},"content":"/** Represents the command which interacts with the bus command. **/","lastModifiedDate":"2021-10-15"},{"lineNumber":13,"author":{"gitId":"shyamgj1900"},"content":"public class BusRouteCommand extends Command {","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"shyamgj1900"},"content":"    public static final String COMMAND_LIST_STOPS \u003d \"bus stop list\";","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"shyamgj1900"},"content":"    public static final String USER_COMMAND_DELIMITER \u003d \" /\";","lastModifiedDate":"2021-10-22"},{"lineNumber":16,"author":{"gitId":"shyamgj1900"},"content":"    public static final String INCORRECT_FORMAT_MESSAGE \u003d \"Enter starting point and final destination.\\n\"","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"shyamgj1900"},"content":"            + \"In the format \\\"bus /start_location /end_location\\\"\";","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"shyamgj1900"},"content":"    public static final String SAME_LOCATION_ERROR_MESSAGE \u003d \"Start and end location cannot be same.\";","lastModifiedDate":"2021-10-31"},{"lineNumber":19,"author":{"gitId":"shyamgj1900"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":20,"author":{"gitId":"shyamgj1900"},"content":"    private String input;","lastModifiedDate":"2021-10-22"},{"lineNumber":21,"author":{"gitId":"shyamgj1900"},"content":"    private Location location;","lastModifiedDate":"2021-10-22"},{"lineNumber":22,"author":{"gitId":"shyamgj1900"},"content":"    private String[] splitInput;","lastModifiedDate":"2021-10-22"},{"lineNumber":23,"author":{"gitId":"shyamgj1900"},"content":"    private String startLocation;","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"shyamgj1900"},"content":"    private String endLocation;","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"shyamgj1900"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"shyamgj1900"},"content":"    public BusRouteCommand(String input) {","lastModifiedDate":"2021-10-22"},{"lineNumber":27,"author":{"gitId":"shyamgj1900"},"content":"        this.input \u003d input;","lastModifiedDate":"2021-10-22"},{"lineNumber":28,"author":{"gitId":"shyamgj1900"},"content":"        splitInput \u003d input.split(USER_COMMAND_DELIMITER);","lastModifiedDate":"2021-10-22"},{"lineNumber":29,"author":{"gitId":"shyamgj1900"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"shyamgj1900"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"shyamgj1900"},"content":"    private String getBusRoute() throws KolinuxException, IOException {","lastModifiedDate":"2021-10-26"},{"lineNumber":32,"author":{"gitId":"shyamgj1900"},"content":"        DirectRoute directRoute \u003d new DirectRoute(splitInput);","lastModifiedDate":"2021-10-26"},{"lineNumber":33,"author":{"gitId":"shyamgj1900"},"content":"        IndirectRoute indirectRoute \u003d new IndirectRoute(splitInput);","lastModifiedDate":"2021-10-26"},{"lineNumber":34,"author":{"gitId":"shyamgj1900"},"content":"        ArrayList\u003cString\u003e busNumbers \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-26"},{"lineNumber":35,"author":{"gitId":"shyamgj1900"},"content":"        if (directRoute.checkDirectRoutes(busNumbers)) {","lastModifiedDate":"2021-10-26"},{"lineNumber":36,"author":{"gitId":"shyamgj1900"},"content":"            logger.log(Level.INFO, \"Found Direct Route\");","lastModifiedDate":"2021-10-26"},{"lineNumber":37,"author":{"gitId":"shyamgj1900"},"content":"            return \"Bus \" + busNumbers + \" goes from \" + startLocation + \" to \" + endLocation;","lastModifiedDate":"2021-10-26"},{"lineNumber":38,"author":{"gitId":"shyamgj1900"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":39,"author":{"gitId":"shyamgj1900"},"content":"        ArrayList\u003cString\u003e busNumberOne \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-26"},{"lineNumber":40,"author":{"gitId":"shyamgj1900"},"content":"        ArrayList\u003cString\u003e busNumberTwo \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-26"},{"lineNumber":41,"author":{"gitId":"shyamgj1900"},"content":"        ArrayList\u003cString\u003e midLocation \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-26"},{"lineNumber":42,"author":{"gitId":"shyamgj1900"},"content":"        if (indirectRoute.checkIndirectRoutes(busNumberOne, busNumberTwo, midLocation)) {","lastModifiedDate":"2021-10-26"},{"lineNumber":43,"author":{"gitId":"shyamgj1900"},"content":"            logger.log(Level.INFO, \"Found Indirect Route\");","lastModifiedDate":"2021-10-26"},{"lineNumber":44,"author":{"gitId":"shyamgj1900"},"content":"            return \"Take bus \" + busNumberOne + \" then change to bus \" + busNumberTwo + \" at \" + midLocation.get(0);","lastModifiedDate":"2021-10-26"},{"lineNumber":45,"author":{"gitId":"shyamgj1900"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":46,"author":{"gitId":"shyamgj1900"},"content":"        logger.log(Level.INFO, \"Found direct alternate route or found no route\");","lastModifiedDate":"2021-10-26"},{"lineNumber":47,"author":{"gitId":"shyamgj1900"},"content":"        return directRoute.checkDirectAlternateRoutes(busNumbers);","lastModifiedDate":"2021-10-26"},{"lineNumber":48,"author":{"gitId":"shyamgj1900"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":49,"author":{"gitId":"shyamgj1900"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":50,"author":{"gitId":"shyamgj1900"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":51,"author":{"gitId":"shyamgj1900"},"content":"    public CommandResult executeCommand() throws KolinuxException, IOException {","lastModifiedDate":"2021-10-11"},{"lineNumber":52,"author":{"gitId":"shyamgj1900"},"content":"        if (input.equalsIgnoreCase(COMMAND_LIST_STOPS)) {","lastModifiedDate":"2021-10-22"},{"lineNumber":53,"author":{"gitId":"shyamgj1900"},"content":"            location \u003d new Location();","lastModifiedDate":"2021-10-25"},{"lineNumber":54,"author":{"gitId":"shyamgj1900"},"content":"            logger.log(Level.INFO, \"Show user bus stop list\");","lastModifiedDate":"2021-10-26"},{"lineNumber":55,"author":{"gitId":"shyamgj1900"},"content":"            return new CommandResult(location.getBusStopList());","lastModifiedDate":"2021-10-22"},{"lineNumber":56,"author":{"gitId":"shyamgj1900"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":57,"author":{"gitId":"shyamgj1900"},"content":"        if (splitInput.length !\u003d 3) {","lastModifiedDate":"2021-10-22"},{"lineNumber":58,"author":{"gitId":"shyamgj1900"},"content":"            logger.log(Level.WARNING, \"User entered wrong input format\");","lastModifiedDate":"2021-10-26"},{"lineNumber":59,"author":{"gitId":"shyamgj1900"},"content":"            throw new KolinuxException(INCORRECT_FORMAT_MESSAGE);","lastModifiedDate":"2021-10-26"},{"lineNumber":60,"author":{"gitId":"shyamgj1900"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":61,"author":{"gitId":"shyamgj1900"},"content":"        if (splitInput[1].equalsIgnoreCase(splitInput[2])) {","lastModifiedDate":"2021-10-31"},{"lineNumber":62,"author":{"gitId":"shyamgj1900"},"content":"            throw new KolinuxException(SAME_LOCATION_ERROR_MESSAGE);","lastModifiedDate":"2021-10-31"},{"lineNumber":63,"author":{"gitId":"shyamgj1900"},"content":"        }","lastModifiedDate":"2021-10-31"},{"lineNumber":64,"author":{"gitId":"shyamgj1900"},"content":"        logger.log(Level.INFO, \"Finding bus route\");","lastModifiedDate":"2021-10-26"},{"lineNumber":65,"author":{"gitId":"shyamgj1900"},"content":"        startLocation \u003d splitInput[1].trim().toUpperCase();","lastModifiedDate":"2021-10-26"},{"lineNumber":66,"author":{"gitId":"shyamgj1900"},"content":"        endLocation \u003d splitInput[2].trim().toUpperCase();","lastModifiedDate":"2021-10-26"},{"lineNumber":67,"author":{"gitId":"shyamgj1900"},"content":"        String message \u003d getBusRoute();","lastModifiedDate":"2021-10-26"},{"lineNumber":68,"author":{"gitId":"shyamgj1900"},"content":"        return new CommandResult(message);","lastModifiedDate":"2021-10-10"},{"lineNumber":69,"author":{"gitId":"shyamgj1900"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":70,"author":{"gitId":"shyamgj1900"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"powzx":2,"shyamgj1900":68}},{"path":"src/main/java/seedu/kolinux/commands/CalculateCapCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"powzx"},"content":"package seedu.kolinux.commands;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"nonrnp"},"content":"import seedu.kolinux.capcalculator.CapCalculator;","lastModifiedDate":"2021-10-15"},{"lineNumber":4,"author":{"gitId":"nonrnp"},"content":"import seedu.kolinux.capcalculator.CapCalculatorByCode;","lastModifiedDate":"2021-10-15"},{"lineNumber":5,"author":{"gitId":"nonrnp"},"content":"import seedu.kolinux.capcalculator.CapCalculatorByMc;","lastModifiedDate":"2021-10-15"},{"lineNumber":6,"author":{"gitId":"powzx"},"content":"import seedu.kolinux.exceptions.KolinuxException;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":8,"author":{"gitId":"nonrnp"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":10,"author":{"gitId":"nonrnp"},"content":"/**","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"nonrnp"},"content":" * Represents the command that calculate CAP from user input.","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"nonrnp"},"content":" */","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"nonrnp"},"content":"public class CalculateCapCommand extends Command {","lastModifiedDate":"2021-10-04"},{"lineNumber":14,"author":{"gitId":"nonrnp"},"content":"    ","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"nonrnp"},"content":"    private CapCalculator calculator;","lastModifiedDate":"2021-10-15"},{"lineNumber":16,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":17,"author":{"gitId":"nonrnp"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"nonrnp"},"content":"     * Constructs this object and initializes a calculator based on the input keyword.","lastModifiedDate":"2021-10-16"},{"lineNumber":19,"author":{"gitId":"nonrnp"},"content":"     * ","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"nonrnp"},"content":"     * @param subCommand The type of this calculator object.","lastModifiedDate":"2021-10-31"},{"lineNumber":21,"author":{"gitId":"nonrnp"},"content":"     * @param parsedArguments Array of module descriptions from user.","lastModifiedDate":"2021-10-31"},{"lineNumber":22,"author":{"gitId":"nonrnp"},"content":"     * @throws KolinuxException when an invalid input format is provided.","lastModifiedDate":"2021-10-16"},{"lineNumber":23,"author":{"gitId":"nonrnp"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"nonrnp"},"content":"    public CalculateCapCommand(String subCommand, String[] parsedArguments) throws KolinuxException {","lastModifiedDate":"2021-10-31"},{"lineNumber":25,"author":{"gitId":"nonrnp"},"content":"        if (subCommand.equals(\"\")) {","lastModifiedDate":"2021-10-31"},{"lineNumber":26,"author":{"gitId":"nonrnp"},"content":"            String errorMessage \u003d \"Please indicate your module description type\\n\"","lastModifiedDate":"2021-11-01"},{"lineNumber":27,"author":{"gitId":"nonrnp"},"content":"                    + ","lastModifiedDate":"2021-11-01"},{"lineNumber":28,"author":{"gitId":"nonrnp"},"content":"                    \"1. cap mc\\n\" ","lastModifiedDate":"2021-11-01"},{"lineNumber":29,"author":{"gitId":"nonrnp"},"content":"                    +","lastModifiedDate":"2021-11-01"},{"lineNumber":30,"author":{"gitId":"nonrnp"},"content":"                    \"2. cap code\";","lastModifiedDate":"2021-11-01"},{"lineNumber":31,"author":{"gitId":"nonrnp"},"content":"            throw new KolinuxException(errorMessage);","lastModifiedDate":"2021-10-16"},{"lineNumber":32,"author":{"gitId":"nonrnp"},"content":"        }","lastModifiedDate":"2021-10-16"},{"lineNumber":33,"author":{"gitId":"nonrnp"},"content":"        switch (subCommand) {","lastModifiedDate":"2021-10-31"},{"lineNumber":34,"author":{"gitId":"nonrnp"},"content":"        case \"mc\":","lastModifiedDate":"2021-10-15"},{"lineNumber":35,"author":{"gitId":"nonrnp"},"content":"            calculator \u003d new CapCalculatorByMc(parsedArguments);","lastModifiedDate":"2021-10-31"},{"lineNumber":36,"author":{"gitId":"nonrnp"},"content":"            logger.log(Level.INFO, \"User calculate CAP using modular credit\");","lastModifiedDate":"2021-10-16"},{"lineNumber":37,"author":{"gitId":"nonrnp"},"content":"            break;","lastModifiedDate":"2021-10-15"},{"lineNumber":38,"author":{"gitId":"nonrnp"},"content":"        case \"code\":","lastModifiedDate":"2021-10-15"},{"lineNumber":39,"author":{"gitId":"nonrnp"},"content":"            calculator \u003d new CapCalculatorByCode(parsedArguments);","lastModifiedDate":"2021-10-31"},{"lineNumber":40,"author":{"gitId":"nonrnp"},"content":"            logger.log(Level.INFO, \"User calculate CAP using module code\");","lastModifiedDate":"2021-10-16"},{"lineNumber":41,"author":{"gitId":"nonrnp"},"content":"            break;","lastModifiedDate":"2021-10-15"},{"lineNumber":42,"author":{"gitId":"nonrnp"},"content":"        default:","lastModifiedDate":"2021-10-15"},{"lineNumber":43,"author":{"gitId":"nonrnp"},"content":"            String errorMessage \u003d \"Invalid cap calculation command, \"","lastModifiedDate":"2021-11-02"},{"lineNumber":44,"author":{"gitId":"nonrnp"},"content":"                    + \"please ensure the command follow one of the following formats\\n\"","lastModifiedDate":"2021-11-02"},{"lineNumber":45,"author":{"gitId":"nonrnp"},"content":"                    + \"1. cap mc\\n\"","lastModifiedDate":"2021-11-02"},{"lineNumber":46,"author":{"gitId":"nonrnp"},"content":"                    + \"2. cap code\";","lastModifiedDate":"2021-11-02"},{"lineNumber":47,"author":{"gitId":"nonrnp"},"content":"            throw new KolinuxException(errorMessage);","lastModifiedDate":"2021-10-15"},{"lineNumber":48,"author":{"gitId":"nonrnp"},"content":"        }","lastModifiedDate":"2021-10-04"},{"lineNumber":49,"author":{"gitId":"nonrnp"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":50,"author":{"gitId":"nonrnp"},"content":"    ","lastModifiedDate":"2021-10-04"},{"lineNumber":51,"author":{"gitId":"nonrnp"},"content":"    @Override","lastModifiedDate":"2021-10-04"},{"lineNumber":52,"author":{"gitId":"nonrnp"},"content":"    public CommandResult executeCommand() throws KolinuxException {","lastModifiedDate":"2021-10-04"},{"lineNumber":53,"author":{"gitId":"nonrnp"},"content":"        String cap \u003d calculator.executeCapCalculator();","lastModifiedDate":"2021-10-16"},{"lineNumber":54,"author":{"gitId":"nonrnp"},"content":"        String capMessage \u003d \"Your overall CAP will be \" + cap + \" if you get your desired grades!\";","lastModifiedDate":"2021-11-01"},{"lineNumber":55,"author":{"gitId":"nonrnp"},"content":"        logger.log(Level.INFO, \"CAP is calculated from user\u0027s input\");","lastModifiedDate":"2021-10-16"},{"lineNumber":56,"author":{"gitId":"nonrnp"},"content":"        return new CommandResult(capMessage);","lastModifiedDate":"2021-10-04"},{"lineNumber":57,"author":{"gitId":"nonrnp"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":58,"author":{"gitId":"nonrnp"},"content":"}","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"nonrnp":56,"powzx":2}},{"path":"src/main/java/seedu/kolinux/commands/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"powzx"},"content":"package seedu.kolinux.commands;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"powzx"},"content":"import seedu.kolinux.exceptions.KolinuxException;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"giterator"},"content":"import seedu.kolinux.module.ModuleDb;","lastModifiedDate":"2021-10-14"},{"lineNumber":5,"author":{"gitId":"giterator"},"content":"import seedu.kolinux.module.ModuleList;","lastModifiedDate":"2021-10-14"},{"lineNumber":6,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":7,"author":{"gitId":"shyamgj1900"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"powzx"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"shyamgj1900"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"powzx"},"content":"/** Parent class of all commands available on Kolinux. This also contains class-level attributes such as","lastModifiedDate":"2021-11-03"},{"lineNumber":11,"author":{"gitId":"powzx"},"content":" * Logger, ModuleDb, and ModuleList, which are used by child classes. */","lastModifiedDate":"2021-11-03"},{"lineNumber":12,"author":{"gitId":"powzx"},"content":"public abstract class Command {","lastModifiedDate":"2021-10-04"},{"lineNumber":13,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":14,"author":{"gitId":"powzx"},"content":"    protected String argument;","lastModifiedDate":"2021-10-04"},{"lineNumber":15,"author":{"gitId":"powzx"},"content":"    protected static Logger logger \u003d Logger.getLogger(Logger.GLOBAL_LOGGER_NAME);","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"giterator"},"content":"    protected static ModuleDb moduleDb \u003d new ModuleDb().getPreInitModuleDb();","lastModifiedDate":"2021-10-14"},{"lineNumber":17,"author":{"gitId":"giterator"},"content":"    protected static ModuleList moduleList \u003d new ModuleList();","lastModifiedDate":"2021-10-14"},{"lineNumber":18,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":19,"author":{"gitId":"powzx"},"content":"    public Command() {","lastModifiedDate":"2021-10-04"},{"lineNumber":20,"author":{"gitId":"giterator"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":21,"author":{"gitId":"powzx"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":22,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":23,"author":{"gitId":"powzx"},"content":"    public Command(String argument) {","lastModifiedDate":"2021-10-04"},{"lineNumber":24,"author":{"gitId":"powzx"},"content":"        this.argument \u003d argument;","lastModifiedDate":"2021-10-04"},{"lineNumber":25,"author":{"gitId":"powzx"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":26,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":27,"author":{"gitId":"powzx"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"powzx"},"content":"     * Executes the command with the arguments given by the user input.","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"powzx"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"powzx"},"content":"     * @return Result of execution","lastModifiedDate":"2021-10-10"},{"lineNumber":31,"author":{"gitId":"powzx"},"content":"     * @throws KolinuxException If the arguments given are invalid","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"powzx"},"content":"     * @throws IOException If there are errors accessing the resource file","lastModifiedDate":"2021-11-03"},{"lineNumber":33,"author":{"gitId":"powzx"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":34,"author":{"gitId":"powzx"},"content":"    public abstract CommandResult executeCommand() throws KolinuxException, IOException;","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"powzx"},"content":"}","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"giterator":5,"powzx":28,"shyamgj1900":2}},{"path":"src/main/java/seedu/kolinux/commands/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"powzx"},"content":"package seedu.kolinux.commands;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"powzx"},"content":"/** Represents the result from the execution of a command. */","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"powzx"},"content":"public class CommandResult {","lastModifiedDate":"2021-10-04"},{"lineNumber":5,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":6,"author":{"gitId":"powzx"},"content":"    private String feedbackToUser;","lastModifiedDate":"2021-10-04"},{"lineNumber":7,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":8,"author":{"gitId":"powzx"},"content":"    public CommandResult(String feedbackToUser) {","lastModifiedDate":"2021-10-04"},{"lineNumber":9,"author":{"gitId":"powzx"},"content":"        this.feedbackToUser \u003d feedbackToUser;","lastModifiedDate":"2021-10-04"},{"lineNumber":10,"author":{"gitId":"powzx"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":11,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":12,"author":{"gitId":"powzx"},"content":"    public String getFeedbackToUser() {","lastModifiedDate":"2021-10-04"},{"lineNumber":13,"author":{"gitId":"powzx"},"content":"        return feedbackToUser;","lastModifiedDate":"2021-10-04"},{"lineNumber":14,"author":{"gitId":"powzx"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":15,"author":{"gitId":"powzx"},"content":"}","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"powzx":15}},{"path":"src/main/java/seedu/kolinux/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"powzx"},"content":"package seedu.kolinux.commands;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"powzx"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"powzx"},"content":"/** Represents the command to exit from the application. */","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"powzx"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2021-10-04"},{"lineNumber":7,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":8,"author":{"gitId":"powzx"},"content":"    private static final String EXIT_MESSAGE \u003d \"Bye! Thank you for using Kolinux\";","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"powzx"},"content":"    @Override","lastModifiedDate":"2021-10-04"},{"lineNumber":11,"author":{"gitId":"powzx"},"content":"    public CommandResult executeCommand() {","lastModifiedDate":"2021-10-04"},{"lineNumber":12,"author":{"gitId":"powzx"},"content":"        logger.log(Level.INFO, \"User exited Kolinux\");","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"powzx"},"content":"        return new CommandResult(EXIT_MESSAGE);","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"powzx"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":15,"author":{"gitId":"powzx"},"content":"}","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"powzx":15}},{"path":"src/main/java/seedu/kolinux/commands/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"powzx"},"content":"package seedu.kolinux.commands;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"shyamgj1900"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"powzx"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"powzx"},"content":"/** Represents the command to print the help menu to the user. */","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"shyamgj1900"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2021-10-04"},{"lineNumber":7,"author":{"gitId":"shyamgj1900"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":8,"author":{"gitId":"powzx"},"content":"    private static final String HELP_MESSAGE \u003d \"Here are the list of commands:\\n\"","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"nonrnp"},"content":"            + \"1. cap mc MC/GRADE - Calculates the overall cap from MC\\n\"","lastModifiedDate":"2021-11-01"},{"lineNumber":10,"author":{"gitId":"nonrnp"},"content":"            + \"2. cap code MODULE_CODE/GRADE - Calculates the overall cap from MODULE_CODE\\n\"","lastModifiedDate":"2021-11-01"},{"lineNumber":11,"author":{"gitId":"nonrnp"},"content":"            + \"3. bus /START_POINT /END_POINT - Check for a NUS bus route from stop to another\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"nonrnp"},"content":"            + \"4. bus stop list - List all the bus stop names\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"nonrnp"},"content":"            + \"5. module view MODULE_CODE - View the module details\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"giterator"},"content":"            + \"6. module add MODULE_CODE - Add a module to your module list\\n\"","lastModifiedDate":"2021-11-01"},{"lineNumber":15,"author":{"gitId":"nonrnp"},"content":"            + \"7. module delete MODULE_CODE - Delete a module from your module list\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"nonrnp"},"content":"            + \"8. module list - List all modules stored in your module list\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"nonrnp"},"content":"            + \"9. module grade CODE/GRADE - Update the module CODE from your module list with a new grade GRADE\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"nonrnp"},"content":"            + \"10. module cap - Calculate the overall CAP of modules stored in your module list\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"nonrnp"},"content":"            + \"11. module cap DESIRED_CAP - Calculate the average minimum grade for the other modules needed\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"nonrnp"},"content":"            + \"    to achieve DESIRED_CAP\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"nonrnp"},"content":"            + \"12. planner add DESCRIPTION/DATE/START_TIME/END_TIME - Add an event to your schedule\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"nonrnp"},"content":"            + \"13. planner list DATE - Lists events on a certain date\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"nonrnp"},"content":"            + \"14. planner delete DATE - Delete an event on a certain date\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"nonrnp"},"content":"            + \"15. timetable add MODULE_CODE/LESSON_TYPE/DAY/START_TIME/END_TIME - Add lesson to timetable\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"saravanamani1999"},"content":"            + \"16. timetable update MODULE_CODE/LESSON_TYPE/OLD_DAY/OLD_START_TIME/NEW_DAY/NEW_START_TIME\\n\"","lastModifiedDate":"2021-10-31"},{"lineNumber":26,"author":{"gitId":"saravanamani1999"},"content":"            + \"    - shift a lesson to another timing with the same duration\\n\"","lastModifiedDate":"2021-10-26"},{"lineNumber":27,"author":{"gitId":"saravanamani1999"},"content":"            + \"17. timetable delete MODULE_CODE/LESSON_TYPE/DAY/START_TIME - delete a specific lesson\\n\"","lastModifiedDate":"2021-10-31"},{"lineNumber":28,"author":{"gitId":"nonrnp"},"content":"            + \"18. timetable view - Print the timetable on CLI\\n\"","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"saravanamani1999"},"content":"            + \"19. timetable list DAY - List the lessons taking place on a specific day with their timings\\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":30,"author":{"gitId":"saravanamani1999"},"content":"            + \"20. help - View this menu again\\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":31,"author":{"gitId":"saravanamani1999"},"content":"            + \"21. bye - Exit Kolinux\";","lastModifiedDate":"2021-11-03"},{"lineNumber":32,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"powzx"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"powzx"},"content":"    public CommandResult executeCommand() {","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"powzx"},"content":"        logger.log(Level.INFO, \"User needed help\");","lastModifiedDate":"2021-10-10"},{"lineNumber":36,"author":{"gitId":"powzx"},"content":"        return new CommandResult(HELP_MESSAGE);","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"shyamgj1900"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":38,"author":{"gitId":"shyamgj1900"},"content":"}","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"giterator":1,"nonrnp":16,"powzx":10,"shyamgj1900":5,"saravanamani1999":6}},{"path":"src/main/java/seedu/kolinux/commands/InvalidCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"powzx"},"content":"package seedu.kolinux.commands;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"powzx"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"powzx"},"content":"/** Represents any command from the user input that is not recognised. */","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"powzx"},"content":"public class InvalidCommand extends Command {","lastModifiedDate":"2021-10-04"},{"lineNumber":7,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":8,"author":{"gitId":"powzx"},"content":"    private static final String INVALID_COMMAND_MESSAGE \u003d","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"powzx"},"content":"            \"This command is not recognised, please enter \\\"help\\\" for the list of commands...\";","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"powzx"},"content":"    @Override","lastModifiedDate":"2021-10-04"},{"lineNumber":12,"author":{"gitId":"powzx"},"content":"    public CommandResult executeCommand() {","lastModifiedDate":"2021-10-04"},{"lineNumber":13,"author":{"gitId":"powzx"},"content":"        logger.log(Level.INFO, \"User entered an invalid command\");","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"powzx"},"content":"        return new CommandResult(INVALID_COMMAND_MESSAGE);","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"powzx"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":16,"author":{"gitId":"powzx"},"content":"}","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"powzx":16}},{"path":"src/main/java/seedu/kolinux/commands/ModuleCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"giterator"},"content":"package seedu.kolinux.commands;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"giterator"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"giterator"},"content":"import seedu.kolinux.exceptions.KolinuxException;","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"giterator"},"content":"import seedu.kolinux.module.ModuleDetails;","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"giterator"},"content":"import seedu.kolinux.module.ModuleListStorage;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"giterator"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"giterator"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"giterator"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":9,"author":{"gitId":"giterator"},"content":"import static seedu.kolinux.module.Grade.A_PLUS_GRADE;","lastModifiedDate":"2021-11-02"},{"lineNumber":10,"author":{"gitId":"giterator"},"content":"import static seedu.kolinux.module.Grade.A_MINUS_GRADE;","lastModifiedDate":"2021-11-02"},{"lineNumber":11,"author":{"gitId":"giterator"},"content":"import static seedu.kolinux.module.Grade.A_GRADE;","lastModifiedDate":"2021-11-02"},{"lineNumber":12,"author":{"gitId":"giterator"},"content":"import static seedu.kolinux.module.Grade.B_PLUS_GRADE;","lastModifiedDate":"2021-11-02"},{"lineNumber":13,"author":{"gitId":"giterator"},"content":"import static seedu.kolinux.module.Grade.B_MINUS_GRADE;","lastModifiedDate":"2021-11-02"},{"lineNumber":14,"author":{"gitId":"giterator"},"content":"import static seedu.kolinux.module.Grade.B_GRADE;","lastModifiedDate":"2021-11-02"},{"lineNumber":15,"author":{"gitId":"giterator"},"content":"import static seedu.kolinux.module.Grade.C_PLUS_GRADE;","lastModifiedDate":"2021-11-02"},{"lineNumber":16,"author":{"gitId":"giterator"},"content":"import static seedu.kolinux.module.Grade.C_GRADE;","lastModifiedDate":"2021-11-02"},{"lineNumber":17,"author":{"gitId":"giterator"},"content":"import static seedu.kolinux.module.Grade.D_PLUS_GRADE;","lastModifiedDate":"2021-11-02"},{"lineNumber":18,"author":{"gitId":"giterator"},"content":"import static seedu.kolinux.module.Grade.D_GRADE;","lastModifiedDate":"2021-11-02"},{"lineNumber":19,"author":{"gitId":"giterator"},"content":"import static seedu.kolinux.module.Grade.F_GRADE;","lastModifiedDate":"2021-11-02"},{"lineNumber":20,"author":{"gitId":"giterator"},"content":"import static seedu.kolinux.module.Grade.S_GRADE;","lastModifiedDate":"2021-11-02"},{"lineNumber":21,"author":{"gitId":"giterator"},"content":"import static seedu.kolinux.module.Grade.U_GRADE;","lastModifiedDate":"2021-11-02"},{"lineNumber":22,"author":{"gitId":"giterator"},"content":"import static seedu.kolinux.module.Grade.CS_GRADE;","lastModifiedDate":"2021-11-02"},{"lineNumber":23,"author":{"gitId":"giterator"},"content":"import static seedu.kolinux.module.Grade.CU_GRADE;","lastModifiedDate":"2021-11-02"},{"lineNumber":24,"author":{"gitId":"nonrnp"},"content":"import static seedu.kolinux.module.Grade.EXE_GRADE;","lastModifiedDate":"2021-11-02"},{"lineNumber":25,"author":{"gitId":"nonrnp"},"content":"import static seedu.kolinux.module.Grade.IC_GRADE;","lastModifiedDate":"2021-11-02"},{"lineNumber":26,"author":{"gitId":"nonrnp"},"content":"import static seedu.kolinux.module.Grade.IP_GRADE;","lastModifiedDate":"2021-11-02"},{"lineNumber":27,"author":{"gitId":"nonrnp"},"content":"import static seedu.kolinux.module.Grade.W_GRADE;","lastModifiedDate":"2021-11-02"},{"lineNumber":28,"author":{"gitId":"giterator"},"content":"import static seedu.kolinux.module.Grade.RESET_GRADE;","lastModifiedDate":"2021-11-02"},{"lineNumber":29,"author":{"gitId":"giterator"},"content":"import static seedu.kolinux.module.Grade.RESET_GRADE_ARGUMENT;","lastModifiedDate":"2021-11-02"},{"lineNumber":30,"author":{"gitId":"giterator"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":31,"author":{"gitId":"giterator"},"content":"/**","lastModifiedDate":"2021-10-18"},{"lineNumber":32,"author":{"gitId":"giterator"},"content":" * Represents the command that interacts with the module list.","lastModifiedDate":"2021-10-18"},{"lineNumber":33,"author":{"gitId":"giterator"},"content":" */","lastModifiedDate":"2021-10-18"},{"lineNumber":34,"author":{"gitId":"giterator"},"content":"public class ModuleCommand extends Command {","lastModifiedDate":"2021-10-18"},{"lineNumber":35,"author":{"gitId":"giterator"},"content":"    private String subCommand;","lastModifiedDate":"2021-10-18"},{"lineNumber":36,"author":{"gitId":"giterator"},"content":"    private String[] parsedArguments;","lastModifiedDate":"2021-10-18"},{"lineNumber":37,"author":{"gitId":"giterator"},"content":"    private String moduleCode;","lastModifiedDate":"2021-10-18"},{"lineNumber":38,"author":{"gitId":"giterator"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"giterator"},"content":"    public static final String STORE_SUBCOMMAND \u003d \"add\";","lastModifiedDate":"2021-11-01"},{"lineNumber":40,"author":{"gitId":"giterator"},"content":"    public static final String DELETE_SUBCOMMAND \u003d \"delete\";","lastModifiedDate":"2021-10-19"},{"lineNumber":41,"author":{"gitId":"giterator"},"content":"    public static final String VIEW_SUBCOMMAND \u003d \"view\";","lastModifiedDate":"2021-10-19"},{"lineNumber":42,"author":{"gitId":"giterator"},"content":"    public static final String LIST_SUBCOMMAND \u003d \"list\";","lastModifiedDate":"2021-10-19"},{"lineNumber":43,"author":{"gitId":"giterator"},"content":"    public static final String SET_GRADE_SUBCOMMAND \u003d \"grade\";","lastModifiedDate":"2021-10-19"},{"lineNumber":44,"author":{"gitId":"nonrnp"},"content":"    private static final String CAP_SUBCOMMAND \u003d \"cap\";","lastModifiedDate":"2021-10-19"},{"lineNumber":45,"author":{"gitId":"nonrnp"},"content":"    ","lastModifiedDate":"2021-11-05"},{"lineNumber":46,"author":{"gitId":"nonrnp"},"content":"    public static final String INVALID_GRADE_FORMAT_MESSAGE \u003d \"Please use the format: module grade CODE/GRADE\";","lastModifiedDate":"2021-10-19"},{"lineNumber":47,"author":{"gitId":"nonrnp"},"content":"    public static final String INVALID_GRADE_LETTER_MESSAGE \u003d \"Please enter a valid grade\";","lastModifiedDate":"2021-10-19"},{"lineNumber":48,"author":{"gitId":"nonrnp"},"content":"    public static final String INVALID_SU_GRADE_MESSAGE \u003d \"This module doesn\u0027t allow S/U grade\";","lastModifiedDate":"2021-11-05"},{"lineNumber":49,"author":{"gitId":"nonrnp"},"content":"    public static final String INVALID_CSCU_MODULE_MESSAGE \u003d \"This module only accept CS or CU grade\";","lastModifiedDate":"2021-11-05"},{"lineNumber":50,"author":{"gitId":"giterator"},"content":"    public static final String INVALID_ARGUMENT_MESSAGE \u003d \"Ensure command has one of the following formats:\\n\"","lastModifiedDate":"2021-10-18"},{"lineNumber":51,"author":{"gitId":"giterator"},"content":"            + \"1. module add CODE\\n\"","lastModifiedDate":"2021-11-01"},{"lineNumber":52,"author":{"gitId":"giterator"},"content":"            + \"2. module delete CODE\\n\"","lastModifiedDate":"2021-11-01"},{"lineNumber":53,"author":{"gitId":"giterator"},"content":"            + \"3. module view CODE\\n\"","lastModifiedDate":"2021-11-01"},{"lineNumber":54,"author":{"gitId":"giterator"},"content":"            + \"4. module list\\n\"","lastModifiedDate":"2021-11-01"},{"lineNumber":55,"author":{"gitId":"giterator"},"content":"            + \"5. module grade CODE/GRADE\\n\"","lastModifiedDate":"2021-11-01"},{"lineNumber":56,"author":{"gitId":"nonrnp"},"content":"            + \"6. module cap\\n\"","lastModifiedDate":"2021-11-02"},{"lineNumber":57,"author":{"gitId":"nonrnp"},"content":"            + \"7. module cap DESIRED_CAP\";","lastModifiedDate":"2021-11-02"},{"lineNumber":58,"author":{"gitId":"giterator"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":59,"author":{"gitId":"giterator"},"content":"    public ModuleCommand(String subCommand, String[] parsedArguments) {","lastModifiedDate":"2021-10-18"},{"lineNumber":60,"author":{"gitId":"giterator"},"content":"        this.subCommand \u003d subCommand;","lastModifiedDate":"2021-10-18"},{"lineNumber":61,"author":{"gitId":"giterator"},"content":"        this.parsedArguments \u003d parsedArguments;","lastModifiedDate":"2021-10-18"},{"lineNumber":62,"author":{"gitId":"giterator"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":63,"author":{"gitId":"giterator"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":64,"author":{"gitId":"nonrnp"},"content":"    private String containsValidGrade(String moduleCode, String moduleGrade) {","lastModifiedDate":"2021-11-05"},{"lineNumber":65,"author":{"gitId":"nonrnp"},"content":"        ModuleDetails module \u003d moduleDb.getModuleInfo(moduleCode);","lastModifiedDate":"2021-11-05"},{"lineNumber":66,"author":{"gitId":"nonrnp"},"content":"        if (module.isCsCuModule()) {","lastModifiedDate":"2021-11-05"},{"lineNumber":67,"author":{"gitId":"nonrnp"},"content":"            if (moduleGrade.equals(CS_GRADE) || moduleGrade.equals(CU_GRADE) ","lastModifiedDate":"2021-11-05"},{"lineNumber":68,"author":{"gitId":"nonrnp"},"content":"                    || moduleGrade.equals(RESET_GRADE) || moduleGrade.equals(RESET_GRADE_ARGUMENT)) {","lastModifiedDate":"2021-11-05"},{"lineNumber":69,"author":{"gitId":"nonrnp"},"content":"                return null;","lastModifiedDate":"2021-11-05"},{"lineNumber":70,"author":{"gitId":"nonrnp"},"content":"            }","lastModifiedDate":"2021-11-05"},{"lineNumber":71,"author":{"gitId":"nonrnp"},"content":"            return INVALID_CSCU_MODULE_MESSAGE;","lastModifiedDate":"2021-11-05"},{"lineNumber":72,"author":{"gitId":"nonrnp"},"content":"        }","lastModifiedDate":"2021-11-05"},{"lineNumber":73,"author":{"gitId":"nonrnp"},"content":"        if (moduleGrade.equals(A_PLUS_GRADE) || moduleGrade.equals(A_GRADE) || moduleGrade.equals(A_MINUS_GRADE)","lastModifiedDate":"2021-11-05"},{"lineNumber":74,"author":{"gitId":"giterator"},"content":"                || moduleGrade.equals(B_PLUS_GRADE) || moduleGrade.equals(B_GRADE) || moduleGrade.equals(B_MINUS_GRADE)","lastModifiedDate":"2021-11-02"},{"lineNumber":75,"author":{"gitId":"giterator"},"content":"                || moduleGrade.equals(C_PLUS_GRADE) || moduleGrade.equals(C_GRADE) || moduleGrade.equals(D_PLUS_GRADE)","lastModifiedDate":"2021-11-02"},{"lineNumber":76,"author":{"gitId":"nonrnp"},"content":"                || moduleGrade.equals(D_GRADE) || moduleGrade.equals(F_GRADE) || moduleGrade.equals(EXE_GRADE)","lastModifiedDate":"2021-11-05"},{"lineNumber":77,"author":{"gitId":"nonrnp"},"content":"                || moduleGrade.equals(IC_GRADE) || moduleGrade.equals(IP_GRADE) || moduleGrade.equals(W_GRADE)","lastModifiedDate":"2021-11-05"},{"lineNumber":78,"author":{"gitId":"nonrnp"},"content":"                || moduleGrade.equals(RESET_GRADE) || moduleGrade.equals(RESET_GRADE_ARGUMENT)) {","lastModifiedDate":"2021-11-05"},{"lineNumber":79,"author":{"gitId":"nonrnp"},"content":"            return null;","lastModifiedDate":"2021-11-05"},{"lineNumber":80,"author":{"gitId":"nonrnp"},"content":"        }","lastModifiedDate":"2021-11-05"},{"lineNumber":81,"author":{"gitId":"nonrnp"},"content":"        if (moduleGrade.equals(S_GRADE) || moduleGrade.equals(U_GRADE)) {","lastModifiedDate":"2021-11-05"},{"lineNumber":82,"author":{"gitId":"nonrnp"},"content":"            return module.isSuAble() ? null : INVALID_SU_GRADE_MESSAGE;","lastModifiedDate":"2021-11-05"},{"lineNumber":83,"author":{"gitId":"nonrnp"},"content":"        }","lastModifiedDate":"2021-11-05"},{"lineNumber":84,"author":{"gitId":"nonrnp"},"content":"        return INVALID_GRADE_LETTER_MESSAGE;","lastModifiedDate":"2021-11-05"},{"lineNumber":85,"author":{"gitId":"nonrnp"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":86,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":87,"author":{"gitId":"giterator"},"content":"    private CommandResult setModuleGrade(String[] parsedArguments) throws KolinuxException {","lastModifiedDate":"2021-10-19"},{"lineNumber":88,"author":{"gitId":"nonrnp"},"content":"        String moduleCode;","lastModifiedDate":"2021-11-05"},{"lineNumber":89,"author":{"gitId":"giterator"},"content":"        String moduleGrade;","lastModifiedDate":"2021-10-19"},{"lineNumber":90,"author":{"gitId":"giterator"},"content":"        try {","lastModifiedDate":"2021-10-19"},{"lineNumber":91,"author":{"gitId":"nonrnp"},"content":"            moduleCode \u003d parsedArguments[0].toUpperCase();","lastModifiedDate":"2021-11-05"},{"lineNumber":92,"author":{"gitId":"giterator"},"content":"            moduleGrade \u003d parsedArguments[1].toUpperCase();","lastModifiedDate":"2021-10-19"},{"lineNumber":93,"author":{"gitId":"giterator"},"content":"        } catch (IndexOutOfBoundsException exception) {","lastModifiedDate":"2021-10-19"},{"lineNumber":94,"author":{"gitId":"nonrnp"},"content":"            throw new KolinuxException(INVALID_GRADE_FORMAT_MESSAGE);","lastModifiedDate":"2021-10-19"},{"lineNumber":95,"author":{"gitId":"nonrnp"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":96,"author":{"gitId":"nonrnp"},"content":"        String gradeResultMessage \u003d containsValidGrade(moduleCode, moduleGrade);","lastModifiedDate":"2021-11-05"},{"lineNumber":97,"author":{"gitId":"nonrnp"},"content":"        if (!(gradeResultMessage \u003d\u003d null)) {","lastModifiedDate":"2021-11-05"},{"lineNumber":98,"author":{"gitId":"nonrnp"},"content":"            throw new KolinuxException(gradeResultMessage);","lastModifiedDate":"2021-11-05"},{"lineNumber":99,"author":{"gitId":"giterator"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":100,"author":{"gitId":"giterator"},"content":"        String message \u003d moduleList.setModuleGrade(moduleCode, moduleGrade);","lastModifiedDate":"2021-10-19"},{"lineNumber":101,"author":{"gitId":"giterator"},"content":"        logger.log(Level.INFO, message);","lastModifiedDate":"2021-10-19"},{"lineNumber":102,"author":{"gitId":"giterator"},"content":"        ModuleListStorage.writeModulesToFile(moduleList);","lastModifiedDate":"2021-10-19"},{"lineNumber":103,"author":{"gitId":"giterator"},"content":"        return new CommandResult(message);","lastModifiedDate":"2021-10-19"},{"lineNumber":104,"author":{"gitId":"giterator"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":105,"author":{"gitId":"giterator"},"content":"    ","lastModifiedDate":"2021-10-19"},{"lineNumber":106,"author":{"gitId":"nonrnp"},"content":"    private CommandResult showModuleCap(String[] parsedArguments) throws KolinuxException {","lastModifiedDate":"2021-10-19"},{"lineNumber":107,"author":{"gitId":"nonrnp"},"content":"        ModuleListCapCommand command \u003d new ModuleListCapCommand(parsedArguments);","lastModifiedDate":"2021-10-19"},{"lineNumber":108,"author":{"gitId":"nonrnp"},"content":"        return command.executeCommand();","lastModifiedDate":"2021-10-19"},{"lineNumber":109,"author":{"gitId":"nonrnp"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":110,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":111,"author":{"gitId":"giterator"},"content":"    private CommandResult storeModule() {","lastModifiedDate":"2021-10-18"},{"lineNumber":112,"author":{"gitId":"giterator"},"content":"        String message \u003d moduleList.addModuleByCode(moduleCode, moduleDb);","lastModifiedDate":"2021-11-02"},{"lineNumber":113,"author":{"gitId":"giterator"},"content":"        logger.log(Level.INFO, message);","lastModifiedDate":"2021-10-19"},{"lineNumber":114,"author":{"gitId":"giterator"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":115,"author":{"gitId":"giterator"},"content":"        ModuleListStorage.writeModulesToFile(moduleList);","lastModifiedDate":"2021-10-19"},{"lineNumber":116,"author":{"gitId":"giterator"},"content":"        return new CommandResult(message);","lastModifiedDate":"2021-10-18"},{"lineNumber":117,"author":{"gitId":"giterator"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":118,"author":{"gitId":"giterator"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":119,"author":{"gitId":"giterator"},"content":"    private CommandResult deleteModule() {","lastModifiedDate":"2021-10-18"},{"lineNumber":120,"author":{"gitId":"giterator"},"content":"        String message \u003d moduleList.deleteModuleByCode(moduleCode);","lastModifiedDate":"2021-10-18"},{"lineNumber":121,"author":{"gitId":"giterator"},"content":"        logger.log(Level.INFO, message);","lastModifiedDate":"2021-10-19"},{"lineNumber":122,"author":{"gitId":"giterator"},"content":"        ModuleListStorage.writeModulesToFile(moduleList);","lastModifiedDate":"2021-10-19"},{"lineNumber":123,"author":{"gitId":"giterator"},"content":"        return new CommandResult(message);","lastModifiedDate":"2021-10-18"},{"lineNumber":124,"author":{"gitId":"giterator"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":125,"author":{"gitId":"giterator"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":126,"author":{"gitId":"giterator"},"content":"    private CommandResult viewModule() {","lastModifiedDate":"2021-10-18"},{"lineNumber":127,"author":{"gitId":"giterator"},"content":"        ModuleDetails module \u003d moduleDb.getModuleInfo(moduleCode);","lastModifiedDate":"2021-10-18"},{"lineNumber":128,"author":{"gitId":"giterator"},"content":"        if (module \u003d\u003d null) {","lastModifiedDate":"2021-10-18"},{"lineNumber":129,"author":{"gitId":"giterator"},"content":"            logger.log(Level.INFO, \"User queried invalid module code from ModuleDb for viewing\");","lastModifiedDate":"2021-10-18"},{"lineNumber":130,"author":{"gitId":"giterator"},"content":"            return new CommandResult(\"Please enter a valid module code\");","lastModifiedDate":"2021-10-18"},{"lineNumber":131,"author":{"gitId":"giterator"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":132,"author":{"gitId":"giterator"},"content":"        logger.log(Level.INFO, \"User queried valid module code from ModuleDb for viewing\");","lastModifiedDate":"2021-10-18"},{"lineNumber":133,"author":{"gitId":"giterator"},"content":"        return new CommandResult(module.toString());","lastModifiedDate":"2021-10-18"},{"lineNumber":134,"author":{"gitId":"giterator"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":135,"author":{"gitId":"giterator"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":136,"author":{"gitId":"giterator"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":137,"author":{"gitId":"giterator"},"content":"    private CommandResult listMyModules() {","lastModifiedDate":"2021-10-18"},{"lineNumber":138,"author":{"gitId":"giterator"},"content":"        moduleList.listMyModules();","lastModifiedDate":"2021-10-18"},{"lineNumber":139,"author":{"gitId":"giterator"},"content":"        logger.log(Level.INFO, \"User queried list of all stored modules\");","lastModifiedDate":"2021-10-18"},{"lineNumber":140,"author":{"gitId":"giterator"},"content":"        return new CommandResult(\"\");","lastModifiedDate":"2021-10-18"},{"lineNumber":141,"author":{"gitId":"giterator"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":142,"author":{"gitId":"giterator"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":143,"author":{"gitId":"giterator"},"content":"    private CommandResult displayError() {","lastModifiedDate":"2021-10-18"},{"lineNumber":144,"author":{"gitId":"giterator"},"content":"        logger.log(Level.INFO, \"User used invalid subCommand for timetable\");","lastModifiedDate":"2021-10-18"},{"lineNumber":145,"author":{"gitId":"giterator"},"content":"        return new CommandResult(INVALID_ARGUMENT_MESSAGE);","lastModifiedDate":"2021-10-18"},{"lineNumber":146,"author":{"gitId":"giterator"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":147,"author":{"gitId":"giterator"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":148,"author":{"gitId":"giterator"},"content":"    @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":149,"author":{"gitId":"giterator"},"content":"    public CommandResult executeCommand() throws KolinuxException {","lastModifiedDate":"2021-10-18"},{"lineNumber":150,"author":{"gitId":"giterator"},"content":"        moduleCode \u003d parsedArguments[0].toUpperCase();","lastModifiedDate":"2021-10-19"},{"lineNumber":151,"author":{"gitId":"giterator"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":152,"author":{"gitId":"giterator"},"content":"        switch (subCommand) {","lastModifiedDate":"2021-10-18"},{"lineNumber":153,"author":{"gitId":"giterator"},"content":"        case STORE_SUBCOMMAND:","lastModifiedDate":"2021-10-18"},{"lineNumber":154,"author":{"gitId":"giterator"},"content":"            return storeModule();","lastModifiedDate":"2021-10-18"},{"lineNumber":155,"author":{"gitId":"giterator"},"content":"        case DELETE_SUBCOMMAND:","lastModifiedDate":"2021-10-18"},{"lineNumber":156,"author":{"gitId":"giterator"},"content":"            return deleteModule();","lastModifiedDate":"2021-10-18"},{"lineNumber":157,"author":{"gitId":"giterator"},"content":"        case VIEW_SUBCOMMAND:","lastModifiedDate":"2021-10-18"},{"lineNumber":158,"author":{"gitId":"giterator"},"content":"            return viewModule();","lastModifiedDate":"2021-10-18"},{"lineNumber":159,"author":{"gitId":"giterator"},"content":"        case LIST_SUBCOMMAND:","lastModifiedDate":"2021-10-18"},{"lineNumber":160,"author":{"gitId":"giterator"},"content":"            return listMyModules();","lastModifiedDate":"2021-10-18"},{"lineNumber":161,"author":{"gitId":"giterator"},"content":"        case SET_GRADE_SUBCOMMAND:","lastModifiedDate":"2021-10-19"},{"lineNumber":162,"author":{"gitId":"giterator"},"content":"            return setModuleGrade(parsedArguments);","lastModifiedDate":"2021-10-19"},{"lineNumber":163,"author":{"gitId":"nonrnp"},"content":"        case CAP_SUBCOMMAND:","lastModifiedDate":"2021-10-19"},{"lineNumber":164,"author":{"gitId":"nonrnp"},"content":"            return showModuleCap(parsedArguments);","lastModifiedDate":"2021-10-19"},{"lineNumber":165,"author":{"gitId":"giterator"},"content":"        default:","lastModifiedDate":"2021-10-18"},{"lineNumber":166,"author":{"gitId":"giterator"},"content":"            return displayError();","lastModifiedDate":"2021-10-18"},{"lineNumber":167,"author":{"gitId":"giterator"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":168,"author":{"gitId":"giterator"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":169,"author":{"gitId":"giterator"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"giterator":122,"nonrnp":47}},{"path":"src/main/java/seedu/kolinux/commands/ModuleListCapCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nonrnp"},"content":"package seedu.kolinux.commands;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"nonrnp"},"content":"import seedu.kolinux.capcalculator.CapCalculatorByCode;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"nonrnp"},"content":"import seedu.kolinux.capcalculator.GradeSuggestionCalculator;","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"nonrnp"},"content":"import seedu.kolinux.capcalculator.ModuleListCapCalculator;","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"nonrnp"},"content":"import seedu.kolinux.exceptions.KolinuxException;","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"nonrnp"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"nonrnp"},"content":"/**","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"nonrnp"},"content":" * Represents the command that calculate CAP from stored modules.","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"nonrnp"},"content":" */","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"nonrnp"},"content":"public class ModuleListCapCommand extends Command {","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"nonrnp"},"content":"    ","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"nonrnp"},"content":"    private CapCalculatorByCode calculator;","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"nonrnp"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"nonrnp"},"content":"     * Constructor of this object. Format the modules and grades stored in module list and pass it to the","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"nonrnp"},"content":"     * respective calculator.","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"nonrnp"},"content":"     * ","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"nonrnp"},"content":"     * @param commandDescriptions Command input from user which is used to determine the calculator type.","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"nonrnp"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"nonrnp"},"content":"    public ModuleListCapCommand(String[] commandDescriptions) {","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"nonrnp"},"content":"        if (!commandDescriptions[0].equals(\"\")) {","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"nonrnp"},"content":"            this.calculator \u003d new GradeSuggestionCalculator(moduleList, commandDescriptions[0]);","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"nonrnp"},"content":"        } else {","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"nonrnp"},"content":"            this.calculator \u003d new ModuleListCapCalculator(moduleList);","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"nonrnp"},"content":"        } ","lastModifiedDate":"2021-10-18"},{"lineNumber":29,"author":{"gitId":"nonrnp"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"nonrnp"},"content":"    ","lastModifiedDate":"2021-10-18"},{"lineNumber":31,"author":{"gitId":"nonrnp"},"content":"    @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":32,"author":{"gitId":"nonrnp"},"content":"    public CommandResult executeCommand() throws KolinuxException {","lastModifiedDate":"2021-10-18"},{"lineNumber":33,"author":{"gitId":"nonrnp"},"content":"        String result \u003d calculator.executeCapCalculator();","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"nonrnp"},"content":"        String message;","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"nonrnp"},"content":"        if (calculator instanceof GradeSuggestionCalculator) {","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"nonrnp"},"content":"            if (result.equals(\"UNACHIEVABLE\")) {","lastModifiedDate":"2021-10-19"},{"lineNumber":37,"author":{"gitId":"nonrnp"},"content":"                message \u003d \"It is impossible to achieve your desired CAP with the current modules\";","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"nonrnp"},"content":"            } else {","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"nonrnp"},"content":"                message \u003d \"Based on your modules, you have to get an average grade of \" + result + \"\\n\"","lastModifiedDate":"2021-10-30"},{"lineNumber":40,"author":{"gitId":"nonrnp"},"content":"                        + \"or higher in order to achieve your desired CAP\";","lastModifiedDate":"2021-10-30"},{"lineNumber":41,"author":{"gitId":"nonrnp"},"content":"            }","lastModifiedDate":"2021-10-19"},{"lineNumber":42,"author":{"gitId":"nonrnp"},"content":"            logger.log(Level.INFO, \"Suggested grade is calculated from module list\");","lastModifiedDate":"2021-10-19"},{"lineNumber":43,"author":{"gitId":"nonrnp"},"content":"        } else {","lastModifiedDate":"2021-10-19"},{"lineNumber":44,"author":{"gitId":"nonrnp"},"content":"            message \u003d \"Based on your available grade, your overall CAP is \" + result;","lastModifiedDate":"2021-11-01"},{"lineNumber":45,"author":{"gitId":"nonrnp"},"content":"            logger.log(Level.INFO, \"CAP is calculated from module list\");","lastModifiedDate":"2021-10-19"},{"lineNumber":46,"author":{"gitId":"nonrnp"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":47,"author":{"gitId":"nonrnp"},"content":"        return new CommandResult(message);","lastModifiedDate":"2021-10-19"},{"lineNumber":48,"author":{"gitId":"nonrnp"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":49,"author":{"gitId":"nonrnp"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"nonrnp":49}},{"path":"src/main/java/seedu/kolinux/commands/PlannerCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"powzx"},"content":"package seedu.kolinux.commands;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"powzx"},"content":"import seedu.kolinux.exceptions.KolinuxException;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"powzx"},"content":"import seedu.kolinux.planner.Event;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"powzx"},"content":"import seedu.kolinux.planner.Planner;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"powzx"},"content":"import seedu.kolinux.planner.PlannerPromptHandler;","lastModifiedDate":"2021-11-03"},{"lineNumber":7,"author":{"gitId":"powzx"},"content":"import seedu.kolinux.util.Parser;","lastModifiedDate":"2021-11-05"},{"lineNumber":8,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"powzx"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"powzx"},"content":"/** Represents the command that interacts with the Planner. */","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"powzx"},"content":"public class PlannerCommand extends Command {","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"powzx"},"content":"    private Planner planner \u003d new Planner(moduleList);","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":16,"author":{"gitId":"powzx"},"content":"    private String subCommand;","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"powzx"},"content":"    private String[] parsedArguments;","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"powzx"},"content":"    // subcommands of planner","lastModifiedDate":"2021-11-04"},{"lineNumber":20,"author":{"gitId":"powzx"},"content":"    private static final String ADD_SUBCOMMAND \u003d \"add\";","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"powzx"},"content":"    private static final String LIST_SUBCOMMAND \u003d \"list\";","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"powzx"},"content":"    private static final String DELETE_SUBCOMMAND \u003d \"delete\";","lastModifiedDate":"2021-10-15"},{"lineNumber":23,"author":{"gitId":"powzx"},"content":"    private static final String CLEAR_SUBCOMMAND \u003d \"clear\";","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"powzx"},"content":"    // feedback messages upon successful execution of subcommands","lastModifiedDate":"2021-11-04"},{"lineNumber":26,"author":{"gitId":"powzx"},"content":"    private static final String ADD_EVENT_MESSAGE \u003d \"An event has been added to your schedule successfully: \";","lastModifiedDate":"2021-11-01"},{"lineNumber":27,"author":{"gitId":"powzx"},"content":"    private static final String DELETE_EVENT_MESSAGE \u003d \"An event has been deleted from your schedule successfully: \";","lastModifiedDate":"2021-11-01"},{"lineNumber":28,"author":{"gitId":"powzx"},"content":"    private static final String CLEAR_EVENT_MESSAGE \u003d \"All the events in your schedule has been cleared.\";","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":30,"author":{"gitId":"powzx"},"content":"    // prompts","lastModifiedDate":"2021-11-04"},{"lineNumber":31,"author":{"gitId":"powzx"},"content":"    private static final String TIME_CONFLICT_PROMPT \u003d","lastModifiedDate":"2021-10-16"},{"lineNumber":32,"author":{"gitId":"powzx"},"content":"            \"You already have an event ongoing for that time period, do you still want to add?\\n\"","lastModifiedDate":"2021-11-01"},{"lineNumber":33,"author":{"gitId":"powzx"},"content":"                    + \"You may enter \u0027n\u0027 to cancel and proceed to list the events on the date to see what you already \"","lastModifiedDate":"2021-11-01"},{"lineNumber":34,"author":{"gitId":"powzx"},"content":"                    + \"planned on that day\\n\"","lastModifiedDate":"2021-11-01"},{"lineNumber":35,"author":{"gitId":"powzx"},"content":"                    + \"Or you may enter \u0027y\u0027 to add the event\";","lastModifiedDate":"2021-11-01"},{"lineNumber":36,"author":{"gitId":"powzx"},"content":"    private static final String ENTER_ID_PROMPT \u003d","lastModifiedDate":"2021-10-15"},{"lineNumber":37,"author":{"gitId":"powzx"},"content":"            \"Please enter the ID of the event you wish to delete (Enter \u0027n\u0027 to terminate this operation):\";","lastModifiedDate":"2021-10-15"},{"lineNumber":38,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":39,"author":{"gitId":"powzx"},"content":"    // when invalid subcommand is recognised","lastModifiedDate":"2021-11-04"},{"lineNumber":40,"author":{"gitId":"powzx"},"content":"    private static final String INVALID_ARGUMENT_MESSAGE \u003d","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"powzx"},"content":"            \"This command is not recognised, you can try:\\n\"","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"powzx"},"content":"                    + \"planner add DESCRIPTION/DATE/START_TIME/END_TIME\\n\"","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"powzx"},"content":"                    + \"planner list DATE\\n\"","lastModifiedDate":"2021-10-26"},{"lineNumber":44,"author":{"gitId":"powzx"},"content":"                    + \"planner delete DATE\";","lastModifiedDate":"2021-10-26"},{"lineNumber":45,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":46,"author":{"gitId":"powzx"},"content":"    public PlannerCommand(String subCommand, String[] parsedArguments) {","lastModifiedDate":"2021-10-05"},{"lineNumber":47,"author":{"gitId":"powzx"},"content":"        this.subCommand \u003d subCommand;","lastModifiedDate":"2021-10-05"},{"lineNumber":48,"author":{"gitId":"powzx"},"content":"        this.parsedArguments \u003d parsedArguments;","lastModifiedDate":"2021-10-05"},{"lineNumber":49,"author":{"gitId":"powzx"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":50,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":51,"author":{"gitId":"powzx"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":52,"author":{"gitId":"powzx"},"content":"     * Invoked if the subcommand is \"add\". This method tries to add the event, and if a time conflict","lastModifiedDate":"2021-10-16"},{"lineNumber":53,"author":{"gitId":"powzx"},"content":"     * occurs, it will hand over the control to PlannerPromptHandler. If the user approves the conflict,","lastModifiedDate":"2021-11-04"},{"lineNumber":54,"author":{"gitId":"powzx"},"content":"     * the event will be added, else if the user denies, an exception is thrown. If the user does not","lastModifiedDate":"2021-11-04"},{"lineNumber":55,"author":{"gitId":"powzx"},"content":"     * provide a valid reply, the prompt will continue asking for permission.","lastModifiedDate":"2021-11-04"},{"lineNumber":56,"author":{"gitId":"powzx"},"content":"     *","lastModifiedDate":"2021-10-16"},{"lineNumber":57,"author":{"gitId":"powzx"},"content":"     * @return Result containing success message","lastModifiedDate":"2021-11-04"},{"lineNumber":58,"author":{"gitId":"powzx"},"content":"     * @throws KolinuxException If the event cannot be created due to incorrect arguments, or the user","lastModifiedDate":"2021-10-16"},{"lineNumber":59,"author":{"gitId":"powzx"},"content":"     *     cancels the operation due to conflict.","lastModifiedDate":"2021-11-04"},{"lineNumber":60,"author":{"gitId":"powzx"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":61,"author":{"gitId":"powzx"},"content":"    private CommandResult handleAddCommand() throws KolinuxException {","lastModifiedDate":"2021-10-16"},{"lineNumber":62,"author":{"gitId":"powzx"},"content":"        Event event \u003d new Event(parsedArguments);","lastModifiedDate":"2021-10-05"},{"lineNumber":63,"author":{"gitId":"powzx"},"content":"        try {","lastModifiedDate":"2021-10-16"},{"lineNumber":64,"author":{"gitId":"powzx"},"content":"            planner.addEvent(event, false);","lastModifiedDate":"2021-10-16"},{"lineNumber":65,"author":{"gitId":"powzx"},"content":"            logger.log(Level.INFO, \"User added an event to planner: \" + event);","lastModifiedDate":"2021-11-03"},{"lineNumber":66,"author":{"gitId":"powzx"},"content":"        } catch (KolinuxException exception) {","lastModifiedDate":"2021-10-16"},{"lineNumber":67,"author":{"gitId":"powzx"},"content":"            // in case of time conflict","lastModifiedDate":"2021-11-04"},{"lineNumber":68,"author":{"gitId":"powzx"},"content":"            assert exception.getMessage().equals(TIME_CONFLICT_PROMPT);","lastModifiedDate":"2021-10-16"},{"lineNumber":69,"author":{"gitId":"powzx"},"content":"            new PlannerPromptHandler(planner, TIME_CONFLICT_PROMPT).handleEventConflict(event);","lastModifiedDate":"2021-11-03"},{"lineNumber":70,"author":{"gitId":"powzx"},"content":"        }","lastModifiedDate":"2021-10-16"},{"lineNumber":71,"author":{"gitId":"powzx"},"content":"        return new CommandResult(ADD_EVENT_MESSAGE + event.getDate() + \" \" + event);","lastModifiedDate":"2021-11-01"},{"lineNumber":72,"author":{"gitId":"powzx"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":73,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":74,"author":{"gitId":"powzx"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":75,"author":{"gitId":"powzx"},"content":"     * Invoked if the subcommand is \"list\". This method lists the events happening on a particular date.","lastModifiedDate":"2021-10-16"},{"lineNumber":76,"author":{"gitId":"powzx"},"content":"     *","lastModifiedDate":"2021-10-16"},{"lineNumber":77,"author":{"gitId":"powzx"},"content":"     * @return Result containing the list of events","lastModifiedDate":"2021-10-16"},{"lineNumber":78,"author":{"gitId":"powzx"},"content":"     * @throws KolinuxException If the arguments are invalid or there are no events happening on the date","lastModifiedDate":"2021-10-16"},{"lineNumber":79,"author":{"gitId":"powzx"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":80,"author":{"gitId":"powzx"},"content":"    private CommandResult handleListCommand() throws KolinuxException {","lastModifiedDate":"2021-10-16"},{"lineNumber":81,"author":{"gitId":"powzx"},"content":"        Parser.verifyDate(parsedArguments[0]);","lastModifiedDate":"2021-11-05"},{"lineNumber":82,"author":{"gitId":"powzx"},"content":"        String dayOfWeek \u003d Parser.getDayOfWeek(parsedArguments[0]);","lastModifiedDate":"2021-11-05"},{"lineNumber":83,"author":{"gitId":"powzx"},"content":"        String eventList \u003d planner.listEvents(parsedArguments[0], false);","lastModifiedDate":"2021-10-16"},{"lineNumber":84,"author":{"gitId":"powzx"},"content":"        logger.log(Level.INFO, \"User listed events on \" + parsedArguments[0]);","lastModifiedDate":"2021-10-16"},{"lineNumber":85,"author":{"gitId":"powzx"},"content":"        return new CommandResult(parsedArguments[0] + \" \" + dayOfWeek + eventList);","lastModifiedDate":"2021-11-05"},{"lineNumber":86,"author":{"gitId":"powzx"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":87,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":88,"author":{"gitId":"powzx"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":89,"author":{"gitId":"powzx"},"content":"     * Invoked if the subcommand is \"delete\". This method deletes an event on a particular date. It starts by","lastModifiedDate":"2021-10-16"},{"lineNumber":90,"author":{"gitId":"powzx"},"content":"     * displaying the list of events with their id to the user, prompting the user to key in the id of the event","lastModifiedDate":"2021-10-16"},{"lineNumber":91,"author":{"gitId":"powzx"},"content":"     * to be deleted. If the id is not recognised, an exception is thrown.","lastModifiedDate":"2021-10-16"},{"lineNumber":92,"author":{"gitId":"powzx"},"content":"     *","lastModifiedDate":"2021-10-16"},{"lineNumber":93,"author":{"gitId":"powzx"},"content":"     * @return Result containing the message","lastModifiedDate":"2021-10-16"},{"lineNumber":94,"author":{"gitId":"powzx"},"content":"     * @throws KolinuxException If the id is not recognised or the user cancels the operation","lastModifiedDate":"2021-10-16"},{"lineNumber":95,"author":{"gitId":"powzx"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":96,"author":{"gitId":"powzx"},"content":"    private CommandResult handleDeleteCommand() throws KolinuxException {","lastModifiedDate":"2021-10-16"},{"lineNumber":97,"author":{"gitId":"powzx"},"content":"        Parser.verifyDate(parsedArguments[0]);","lastModifiedDate":"2021-11-05"},{"lineNumber":98,"author":{"gitId":"powzx"},"content":"        String idList \u003d planner.listEvents(parsedArguments[0], true);","lastModifiedDate":"2021-10-16"},{"lineNumber":99,"author":{"gitId":"powzx"},"content":"        String id \u003d new PlannerPromptHandler(planner, ENTER_ID_PROMPT + idList).promptForEventId();","lastModifiedDate":"2021-11-03"},{"lineNumber":100,"author":{"gitId":"powzx"},"content":"        Event deletedEvent \u003d planner.deleteEvent(id);","lastModifiedDate":"2021-11-01"},{"lineNumber":101,"author":{"gitId":"powzx"},"content":"        logger.log(Level.INFO, \"User deleted an event: \" + deletedEvent);","lastModifiedDate":"2021-11-03"},{"lineNumber":102,"author":{"gitId":"powzx"},"content":"        return new CommandResult(DELETE_EVENT_MESSAGE + deletedEvent.getDate() + \" \" + deletedEvent);","lastModifiedDate":"2021-11-01"},{"lineNumber":103,"author":{"gitId":"powzx"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":104,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":105,"author":{"gitId":"powzx"},"content":"    /**","lastModifiedDate":"2021-11-03"},{"lineNumber":106,"author":{"gitId":"powzx"},"content":"     * Clears all events stored in scheduleOfAllDates in Planner. This is only used when the subcommand is \"clear\",","lastModifiedDate":"2021-11-03"},{"lineNumber":107,"author":{"gitId":"powzx"},"content":"     * which is not known to the user. This is only used for convenience while developing this feature.","lastModifiedDate":"2021-11-03"},{"lineNumber":108,"author":{"gitId":"powzx"},"content":"     *","lastModifiedDate":"2021-11-03"},{"lineNumber":109,"author":{"gitId":"powzx"},"content":"     * @return Result stating all events have been cleared.","lastModifiedDate":"2021-11-03"},{"lineNumber":110,"author":{"gitId":"powzx"},"content":"     */","lastModifiedDate":"2021-11-03"},{"lineNumber":111,"author":{"gitId":"powzx"},"content":"    private CommandResult handleClearCommand() {","lastModifiedDate":"2021-10-16"},{"lineNumber":112,"author":{"gitId":"powzx"},"content":"        planner.clearEvents();","lastModifiedDate":"2021-10-14"},{"lineNumber":113,"author":{"gitId":"powzx"},"content":"        return new CommandResult(CLEAR_EVENT_MESSAGE);","lastModifiedDate":"2021-10-07"},{"lineNumber":114,"author":{"gitId":"powzx"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":115,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":116,"author":{"gitId":"powzx"},"content":"    @Override","lastModifiedDate":"2021-10-16"},{"lineNumber":117,"author":{"gitId":"powzx"},"content":"    public CommandResult executeCommand() throws KolinuxException {","lastModifiedDate":"2021-10-16"},{"lineNumber":118,"author":{"gitId":"powzx"},"content":"        switch (subCommand) {","lastModifiedDate":"2021-10-16"},{"lineNumber":119,"author":{"gitId":"powzx"},"content":"        case ADD_SUBCOMMAND:","lastModifiedDate":"2021-10-16"},{"lineNumber":120,"author":{"gitId":"powzx"},"content":"            return handleAddCommand();","lastModifiedDate":"2021-10-16"},{"lineNumber":121,"author":{"gitId":"powzx"},"content":"        case LIST_SUBCOMMAND:","lastModifiedDate":"2021-10-16"},{"lineNumber":122,"author":{"gitId":"powzx"},"content":"            return handleListCommand();","lastModifiedDate":"2021-10-16"},{"lineNumber":123,"author":{"gitId":"powzx"},"content":"        case DELETE_SUBCOMMAND:","lastModifiedDate":"2021-10-16"},{"lineNumber":124,"author":{"gitId":"powzx"},"content":"            return handleDeleteCommand();","lastModifiedDate":"2021-10-16"},{"lineNumber":125,"author":{"gitId":"powzx"},"content":"        case CLEAR_SUBCOMMAND:","lastModifiedDate":"2021-10-16"},{"lineNumber":126,"author":{"gitId":"powzx"},"content":"            // Command only for testing purposes, not known to the user.","lastModifiedDate":"2021-10-16"},{"lineNumber":127,"author":{"gitId":"powzx"},"content":"            return handleClearCommand();","lastModifiedDate":"2021-10-16"},{"lineNumber":128,"author":{"gitId":"powzx"},"content":"        default:","lastModifiedDate":"2021-10-05"},{"lineNumber":129,"author":{"gitId":"powzx"},"content":"            logger.log(Level.INFO, \"User entered an invalid sub-command of Planner\");","lastModifiedDate":"2021-10-10"},{"lineNumber":130,"author":{"gitId":"powzx"},"content":"            throw new KolinuxException(INVALID_ARGUMENT_MESSAGE);","lastModifiedDate":"2021-10-07"},{"lineNumber":131,"author":{"gitId":"powzx"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":132,"author":{"gitId":"powzx"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":133,"author":{"gitId":"powzx"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"powzx":133}},{"path":"src/main/java/seedu/kolinux/commands/TimetableCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"powzx"},"content":"package seedu.kolinux.commands;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"saravanamani1999"},"content":"import seedu.kolinux.exceptions.ExceedWorkloadException;","lastModifiedDate":"2021-11-04"},{"lineNumber":4,"author":{"gitId":"powzx"},"content":"import seedu.kolinux.exceptions.KolinuxException;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"saravanamani1999"},"content":"import seedu.kolinux.timetable.Timetable;","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"saravanamani1999"},"content":"import seedu.kolinux.timetable.TimetablePromptHandler;","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"saravanamani1999"},"content":"import seedu.kolinux.util.PromptHandler;","lastModifiedDate":"2021-11-04"},{"lineNumber":8,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":9,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"saravanamani1999"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"saravanamani1999"},"content":"/** Represents the command that interacts with the timetable. */","lastModifiedDate":"2021-10-14"},{"lineNumber":13,"author":{"gitId":"saravanamani1999"},"content":"public class TimetableCommand extends Command {","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"saravanamani1999"},"content":"    public static Timetable timetable \u003d new Timetable(moduleList);","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"saravanamani1999"},"content":"    private String subCommand;","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"saravanamani1999"},"content":"    private String[] parsedArguments;","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"saravanamani1999"},"content":"    public static final String INVALID_TIMETABLE_ARGUMENT_MESSAGE \u003d \"Ensure command has one of the \"","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-10-16"},{"lineNumber":20,"author":{"gitId":"saravanamani1999"},"content":"            \"following formats:\\n1. timetable add LESSON_TYPE/MODULE_CODE/DAY/START_TIME\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-10-16"},{"lineNumber":22,"author":{"gitId":"saravanamani1999"},"content":"            \"2. timetable view\\n\"","lastModifiedDate":"2021-10-16"},{"lineNumber":23,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-10-16"},{"lineNumber":24,"author":{"gitId":"saravanamani1999"},"content":"            \"3. timetable update MODULE_CODE/LESSON_TYPE/OLD_DAY/OLD_START_TIME/NEW_DAY/NEW_START_TIME\\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":25,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-10-17"},{"lineNumber":26,"author":{"gitId":"saravanamani1999"},"content":"            \"4. timetable delete MODULE_CODE/LESSON_TYPE/DAY/START_TIME\\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":27,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-10-17"},{"lineNumber":28,"author":{"gitId":"saravanamani1999"},"content":"            \"5. timetable list DAY\";","lastModifiedDate":"2021-11-03"},{"lineNumber":29,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":30,"author":{"gitId":"saravanamani1999"},"content":"    private static final String ADD_SUBCOMMAND \u003d \"add\";","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"saravanamani1999"},"content":"    private static final String CLEAR_SUBCOMMAND \u003d \"clear\";","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"saravanamani1999"},"content":"    private static final String UPDATE_SUBCOMMAND \u003d \"update\";","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"saravanamani1999"},"content":"    private static final String DELETE_SUBCOMMAND \u003d \"delete\";","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"saravanamani1999"},"content":"    private static final String VIEW_SUBCOMMAND \u003d \"view\";","lastModifiedDate":"2021-10-23"},{"lineNumber":35,"author":{"gitId":"saravanamani1999"},"content":"    private static final String LIST_SUBCOMMAND \u003d \"list\";","lastModifiedDate":"2021-11-01"},{"lineNumber":36,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"saravanamani1999"},"content":"    public TimetableCommand(String subCommand, String[] parsedArguments) {","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"saravanamani1999"},"content":"        this.subCommand \u003d subCommand;","lastModifiedDate":"2021-10-11"},{"lineNumber":39,"author":{"gitId":"saravanamani1999"},"content":"        this.parsedArguments \u003d parsedArguments;","lastModifiedDate":"2021-10-11"},{"lineNumber":40,"author":{"gitId":"saravanamani1999"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"saravanamani1999"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":43,"author":{"gitId":"saravanamani1999"},"content":"     * Carries out the operation of adding to the timetable.","lastModifiedDate":"2021-11-05"},{"lineNumber":44,"author":{"gitId":"saravanamani1999"},"content":"     *","lastModifiedDate":"2021-11-05"},{"lineNumber":45,"author":{"gitId":"saravanamani1999"},"content":"     * @return The acknowledgment message after adding to timetable","lastModifiedDate":"2021-11-05"},{"lineNumber":46,"author":{"gitId":"saravanamani1999"},"content":"     * @throws KolinuxException If the lesson details are invalid","lastModifiedDate":"2021-11-05"},{"lineNumber":47,"author":{"gitId":"saravanamani1999"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":48,"author":{"gitId":"saravanamani1999"},"content":"    private CommandResult addLesson() throws KolinuxException {","lastModifiedDate":"2021-10-19"},{"lineNumber":49,"author":{"gitId":"saravanamani1999"},"content":"        try {","lastModifiedDate":"2021-11-04"},{"lineNumber":50,"author":{"gitId":"saravanamani1999"},"content":"            timetable.executeAdd(parsedArguments, false);","lastModifiedDate":"2021-11-04"},{"lineNumber":51,"author":{"gitId":"saravanamani1999"},"content":"        } catch (ExceedWorkloadException exception) {","lastModifiedDate":"2021-11-04"},{"lineNumber":52,"author":{"gitId":"saravanamani1999"},"content":"            new TimetablePromptHandler(exception.getMessage(), timetable).handleExceedWorkload(parsedArguments);","lastModifiedDate":"2021-11-04"},{"lineNumber":53,"author":{"gitId":"saravanamani1999"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":54,"author":{"gitId":"saravanamani1999"},"content":"        logger.log(Level.INFO, \"User added a module to timetable\");","lastModifiedDate":"2021-10-11"},{"lineNumber":55,"author":{"gitId":"saravanamani1999"},"content":"        return new CommandResult(parsedArguments[0].toUpperCase() + \" \"","lastModifiedDate":"2021-10-17"},{"lineNumber":56,"author":{"gitId":"saravanamani1999"},"content":"                +","lastModifiedDate":"2021-10-17"},{"lineNumber":57,"author":{"gitId":"saravanamani1999"},"content":"                parsedArguments[1].toUpperCase() + \" has been added to timetable\");","lastModifiedDate":"2021-10-17"},{"lineNumber":58,"author":{"gitId":"saravanamani1999"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":59,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":60,"author":{"gitId":"saravanamani1999"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":61,"author":{"gitId":"saravanamani1999"},"content":"     * Carries out the operation of deleting from the timetable.","lastModifiedDate":"2021-11-05"},{"lineNumber":62,"author":{"gitId":"saravanamani1999"},"content":"     *","lastModifiedDate":"2021-11-05"},{"lineNumber":63,"author":{"gitId":"saravanamani1999"},"content":"     * @return The acknowledgment message after deleting from timetable","lastModifiedDate":"2021-11-05"},{"lineNumber":64,"author":{"gitId":"saravanamani1999"},"content":"     * @throws KolinuxException If the lesson details are invalid","lastModifiedDate":"2021-11-05"},{"lineNumber":65,"author":{"gitId":"saravanamani1999"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":66,"author":{"gitId":"saravanamani1999"},"content":"    private CommandResult deleteLesson() throws KolinuxException {","lastModifiedDate":"2021-10-19"},{"lineNumber":67,"author":{"gitId":"saravanamani1999"},"content":"        timetable.executeDelete(parsedArguments);","lastModifiedDate":"2021-10-23"},{"lineNumber":68,"author":{"gitId":"saravanamani1999"},"content":"        logger.log(Level.INFO, \"User has deleted\" + parsedArguments[0].toUpperCase()","lastModifiedDate":"2021-10-17"},{"lineNumber":69,"author":{"gitId":"saravanamani1999"},"content":"                +","lastModifiedDate":"2021-10-17"},{"lineNumber":70,"author":{"gitId":"saravanamani1999"},"content":"                \" from the timetable.\");","lastModifiedDate":"2021-10-17"},{"lineNumber":71,"author":{"gitId":"saravanamani1999"},"content":"        return new CommandResult(parsedArguments[0].toUpperCase()","lastModifiedDate":"2021-10-17"},{"lineNumber":72,"author":{"gitId":"saravanamani1999"},"content":"                +","lastModifiedDate":"2021-10-17"},{"lineNumber":73,"author":{"gitId":"saravanamani1999"},"content":"                \" \" + parsedArguments[1].toUpperCase() + \" \" + parsedArguments[3] + \" \"","lastModifiedDate":"2021-10-31"},{"lineNumber":74,"author":{"gitId":"saravanamani1999"},"content":"                +","lastModifiedDate":"2021-10-31"},{"lineNumber":75,"author":{"gitId":"saravanamani1999"},"content":"                parsedArguments[2].toLowerCase()","lastModifiedDate":"2021-10-31"},{"lineNumber":76,"author":{"gitId":"saravanamani1999"},"content":"                +","lastModifiedDate":"2021-10-17"},{"lineNumber":77,"author":{"gitId":"saravanamani1999"},"content":"                \" has been deleted from timetable\");","lastModifiedDate":"2021-10-17"},{"lineNumber":78,"author":{"gitId":"saravanamani1999"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":79,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":80,"author":{"gitId":"saravanamani1999"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":81,"author":{"gitId":"saravanamani1999"},"content":"     * Carries out the operation of viewing the timetable on CLI.","lastModifiedDate":"2021-11-05"},{"lineNumber":82,"author":{"gitId":"saravanamani1999"},"content":"     *","lastModifiedDate":"2021-11-05"},{"lineNumber":83,"author":{"gitId":"saravanamani1999"},"content":"     * @return The acknowledgment message after printing the timetable to CLI","lastModifiedDate":"2021-11-05"},{"lineNumber":84,"author":{"gitId":"saravanamani1999"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":85,"author":{"gitId":"saravanamani1999"},"content":"    private CommandResult viewTimetable() {","lastModifiedDate":"2021-10-23"},{"lineNumber":86,"author":{"gitId":"saravanamani1999"},"content":"        timetable.executeView();","lastModifiedDate":"2021-10-23"},{"lineNumber":87,"author":{"gitId":"saravanamani1999"},"content":"        logger.log(Level.INFO, \"User has printed timetable\");","lastModifiedDate":"2021-10-19"},{"lineNumber":88,"author":{"gitId":"saravanamani1999"},"content":"        return new CommandResult(\"Timetable has been printed above\");","lastModifiedDate":"2021-10-19"},{"lineNumber":89,"author":{"gitId":"saravanamani1999"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":90,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":91,"author":{"gitId":"saravanamani1999"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":92,"author":{"gitId":"saravanamani1999"},"content":"     * Carries out the operation of clearing all lessons from the timetable.","lastModifiedDate":"2021-11-05"},{"lineNumber":93,"author":{"gitId":"saravanamani1999"},"content":"     *","lastModifiedDate":"2021-11-05"},{"lineNumber":94,"author":{"gitId":"saravanamani1999"},"content":"     * @return The acknowledgment message after clearing all lessons from the timetable","lastModifiedDate":"2021-11-05"},{"lineNumber":95,"author":{"gitId":"saravanamani1999"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":96,"author":{"gitId":"saravanamani1999"},"content":"    private CommandResult clearAllLessons() {","lastModifiedDate":"2021-10-19"},{"lineNumber":97,"author":{"gitId":"saravanamani1999"},"content":"        timetable.clearTimetable();","lastModifiedDate":"2021-10-20"},{"lineNumber":98,"author":{"gitId":"saravanamani1999"},"content":"        logger.log(Level.INFO, \"User has cleared timetable\");","lastModifiedDate":"2021-10-19"},{"lineNumber":99,"author":{"gitId":"saravanamani1999"},"content":"        return new CommandResult(\"Timetable has been cleared completely\");","lastModifiedDate":"2021-10-19"},{"lineNumber":100,"author":{"gitId":"saravanamani1999"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":101,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":102,"author":{"gitId":"saravanamani1999"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":103,"author":{"gitId":"saravanamani1999"},"content":"     * Carries out the operation of updating a lesson\u0027s timing on the timetable.","lastModifiedDate":"2021-11-05"},{"lineNumber":104,"author":{"gitId":"saravanamani1999"},"content":"     *","lastModifiedDate":"2021-11-05"},{"lineNumber":105,"author":{"gitId":"saravanamani1999"},"content":"     * @return The acknowledgment message after updating the timetable","lastModifiedDate":"2021-11-05"},{"lineNumber":106,"author":{"gitId":"saravanamani1999"},"content":"     * @throws KolinuxException If the lesson details to update are invalid","lastModifiedDate":"2021-11-05"},{"lineNumber":107,"author":{"gitId":"saravanamani1999"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":108,"author":{"gitId":"saravanamani1999"},"content":"    private CommandResult updateLesson() throws KolinuxException {","lastModifiedDate":"2021-10-19"},{"lineNumber":109,"author":{"gitId":"saravanamani1999"},"content":"        timetable.executeUpdate(parsedArguments);","lastModifiedDate":"2021-10-23"},{"lineNumber":110,"author":{"gitId":"saravanamani1999"},"content":"        logger.log(Level.INFO, \"User has updated the timetable.\");","lastModifiedDate":"2021-10-17"},{"lineNumber":111,"author":{"gitId":"saravanamani1999"},"content":"        return new CommandResult(parsedArguments[0].toUpperCase() + \" \"","lastModifiedDate":"2021-10-17"},{"lineNumber":112,"author":{"gitId":"saravanamani1999"},"content":"                +","lastModifiedDate":"2021-10-17"},{"lineNumber":113,"author":{"gitId":"saravanamani1999"},"content":"                parsedArguments[1].toUpperCase() + \" has been updated\");","lastModifiedDate":"2021-10-17"},{"lineNumber":114,"author":{"gitId":"saravanamani1999"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":115,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":116,"author":{"gitId":"saravanamani1999"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":117,"author":{"gitId":"saravanamani1999"},"content":"     * Carries out the operation of listing the lessons on a specific weekday.","lastModifiedDate":"2021-11-05"},{"lineNumber":118,"author":{"gitId":"saravanamani1999"},"content":"     *","lastModifiedDate":"2021-11-05"},{"lineNumber":119,"author":{"gitId":"saravanamani1999"},"content":"     * @return The acknowledgment message after listing the lessons on a specific day","lastModifiedDate":"2021-11-05"},{"lineNumber":120,"author":{"gitId":"saravanamani1999"},"content":"     * @throws KolinuxException If the specified day is invalid","lastModifiedDate":"2021-11-05"},{"lineNumber":121,"author":{"gitId":"saravanamani1999"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":122,"author":{"gitId":"saravanamani1999"},"content":"    private CommandResult listLesson() throws KolinuxException {","lastModifiedDate":"2021-11-03"},{"lineNumber":123,"author":{"gitId":"saravanamani1999"},"content":"        try {","lastModifiedDate":"2021-11-03"},{"lineNumber":124,"author":{"gitId":"saravanamani1999"},"content":"            timetable.listTimetable(parsedArguments[0]);","lastModifiedDate":"2021-11-03"},{"lineNumber":125,"author":{"gitId":"saravanamani1999"},"content":"            logger.log(Level.INFO, \"User has listed the timetable.\");","lastModifiedDate":"2021-11-03"},{"lineNumber":126,"author":{"gitId":"saravanamani1999"},"content":"            return new CommandResult(\"\\nYour lessons for \" + parsedArguments[0].toLowerCase()","lastModifiedDate":"2021-11-03"},{"lineNumber":127,"author":{"gitId":"saravanamani1999"},"content":"                    + \" has been listed above\");","lastModifiedDate":"2021-11-03"},{"lineNumber":128,"author":{"gitId":"saravanamani1999"},"content":"        } catch (IndexOutOfBoundsException exception) {","lastModifiedDate":"2021-11-03"},{"lineNumber":129,"author":{"gitId":"saravanamani1999"},"content":"            throw new KolinuxException(\"Please ensure the format of timetable list:\\ntimetable list DAY\");","lastModifiedDate":"2021-11-03"},{"lineNumber":130,"author":{"gitId":"saravanamani1999"},"content":"        }","lastModifiedDate":"2021-11-03"},{"lineNumber":131,"author":{"gitId":"saravanamani1999"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":132,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":133,"author":{"gitId":"saravanamani1999"},"content":"    @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":134,"author":{"gitId":"saravanamani1999"},"content":"    public CommandResult executeCommand() throws KolinuxException {","lastModifiedDate":"2021-10-19"},{"lineNumber":135,"author":{"gitId":"saravanamani1999"},"content":"        switch (subCommand) {","lastModifiedDate":"2021-10-19"},{"lineNumber":136,"author":{"gitId":"saravanamani1999"},"content":"        case ADD_SUBCOMMAND:","lastModifiedDate":"2021-10-19"},{"lineNumber":137,"author":{"gitId":"saravanamani1999"},"content":"            return addLesson();","lastModifiedDate":"2021-10-19"},{"lineNumber":138,"author":{"gitId":"saravanamani1999"},"content":"        case CLEAR_SUBCOMMAND:","lastModifiedDate":"2021-10-19"},{"lineNumber":139,"author":{"gitId":"saravanamani1999"},"content":"            return clearAllLessons();","lastModifiedDate":"2021-10-19"},{"lineNumber":140,"author":{"gitId":"saravanamani1999"},"content":"        case VIEW_SUBCOMMAND:","lastModifiedDate":"2021-10-19"},{"lineNumber":141,"author":{"gitId":"saravanamani1999"},"content":"            return viewTimetable();","lastModifiedDate":"2021-10-23"},{"lineNumber":142,"author":{"gitId":"saravanamani1999"},"content":"        case DELETE_SUBCOMMAND:","lastModifiedDate":"2021-10-19"},{"lineNumber":143,"author":{"gitId":"saravanamani1999"},"content":"            return deleteLesson();","lastModifiedDate":"2021-10-19"},{"lineNumber":144,"author":{"gitId":"saravanamani1999"},"content":"        case UPDATE_SUBCOMMAND:","lastModifiedDate":"2021-10-19"},{"lineNumber":145,"author":{"gitId":"saravanamani1999"},"content":"            return updateLesson();","lastModifiedDate":"2021-10-19"},{"lineNumber":146,"author":{"gitId":"saravanamani1999"},"content":"        case LIST_SUBCOMMAND:","lastModifiedDate":"2021-11-03"},{"lineNumber":147,"author":{"gitId":"saravanamani1999"},"content":"            return listLesson();","lastModifiedDate":"2021-11-03"},{"lineNumber":148,"author":{"gitId":"saravanamani1999"},"content":"        default:","lastModifiedDate":"2021-10-11"},{"lineNumber":149,"author":{"gitId":"saravanamani1999"},"content":"            logger.log(Level.INFO, \"User used invalid subCommand for timetable\");","lastModifiedDate":"2021-10-11"},{"lineNumber":150,"author":{"gitId":"giterator"},"content":"            return new CommandResult(INVALID_TIMETABLE_ARGUMENT_MESSAGE);","lastModifiedDate":"2021-10-18"},{"lineNumber":151,"author":{"gitId":"saravanamani1999"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":152,"author":{"gitId":"saravanamani1999"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":153,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":154,"author":{"gitId":"saravanamani1999"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"giterator":1,"powzx":2,"saravanamani1999":151}},{"path":"src/main/java/seedu/kolinux/exceptions/ExceedWorkloadException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"saravanamani1999"},"content":"package seedu.kolinux.exceptions;","lastModifiedDate":"2021-11-04"},{"lineNumber":2,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":3,"author":{"gitId":"saravanamani1999"},"content":"public class ExceedWorkloadException extends KolinuxException {","lastModifiedDate":"2021-11-04"},{"lineNumber":4,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"saravanamani1999"},"content":"    public ExceedWorkloadException(String message) {","lastModifiedDate":"2021-11-04"},{"lineNumber":6,"author":{"gitId":"saravanamani1999"},"content":"        super(message);","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"saravanamani1999"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":8,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"saravanamani1999"},"content":"}","lastModifiedDate":"2021-11-04"}],"authorContributionMap":{"saravanamani1999":9}},{"path":"src/main/java/seedu/kolinux/exceptions/KolinuxException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"powzx"},"content":"package seedu.kolinux.exceptions;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"powzx"},"content":"/** Represents the exception thrown when a problem is encountered on Kolinux. */","lastModifiedDate":"2021-11-03"},{"lineNumber":4,"author":{"gitId":"powzx"},"content":"public class KolinuxException extends Exception {","lastModifiedDate":"2021-10-04"},{"lineNumber":5,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":6,"author":{"gitId":"powzx"},"content":"    public KolinuxException(String message) {","lastModifiedDate":"2021-10-04"},{"lineNumber":7,"author":{"gitId":"powzx"},"content":"        super(message);","lastModifiedDate":"2021-10-04"},{"lineNumber":8,"author":{"gitId":"powzx"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":9,"author":{"gitId":"powzx"},"content":"}","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"powzx":9}},{"path":"src/main/java/seedu/kolinux/module/CalculatorModuleList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nonrnp"},"content":"package seedu.kolinux.module;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"nonrnp"},"content":"/**","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"nonrnp"},"content":" * Used for storing module list specifically for cap calculation operations.","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"nonrnp"},"content":" */","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"nonrnp"},"content":"public class CalculatorModuleList extends ModuleList {","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"nonrnp"},"content":"    /**","lastModifiedDate":"2021-10-30"},{"lineNumber":9,"author":{"gitId":"nonrnp"},"content":"     * Store a module in myModules.","lastModifiedDate":"2021-10-30"},{"lineNumber":10,"author":{"gitId":"nonrnp"},"content":"     * ","lastModifiedDate":"2021-10-30"},{"lineNumber":11,"author":{"gitId":"nonrnp"},"content":"     * @param module The module to be stored.","lastModifiedDate":"2021-10-30"},{"lineNumber":12,"author":{"gitId":"nonrnp"},"content":"     */","lastModifiedDate":"2021-10-30"},{"lineNumber":13,"author":{"gitId":"nonrnp"},"content":"    public void storeModule(ModuleDetails module) {","lastModifiedDate":"2021-10-30"},{"lineNumber":14,"author":{"gitId":"nonrnp"},"content":"        myModules.add(module);","lastModifiedDate":"2021-10-30"},{"lineNumber":15,"author":{"gitId":"nonrnp"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":16,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":17,"author":{"gitId":"nonrnp"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"nonrnp"},"content":"     * Store a module in myModules when only the modular credit and its grade are given.","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"nonrnp"},"content":"     * This method is only used CapCalculator object.","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"nonrnp"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"nonrnp"},"content":"     * @param mc Modular credit which will be stored","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"nonrnp"},"content":"     * @param grade The corresponding grade to be stored","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"nonrnp"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"nonrnp"},"content":"    public void storeModuleMcGrade(int mc, String grade) {","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"nonrnp"},"content":"        ModuleDetails mod \u003d new ModuleDetails(mc, grade);","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"nonrnp"},"content":"        myModules.add(mod);","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"nonrnp"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"nonrnp"},"content":"    /**","lastModifiedDate":"2021-10-31"},{"lineNumber":30,"author":{"gitId":"nonrnp"},"content":"     * Store a module with grade into myModules.","lastModifiedDate":"2021-10-31"},{"lineNumber":31,"author":{"gitId":"nonrnp"},"content":"     * ","lastModifiedDate":"2021-10-31"},{"lineNumber":32,"author":{"gitId":"nonrnp"},"content":"     * @param code Module code which will be stored.","lastModifiedDate":"2021-10-31"},{"lineNumber":33,"author":{"gitId":"nonrnp"},"content":"     * @param grade The corresponding grade to be stored.","lastModifiedDate":"2021-10-31"},{"lineNumber":34,"author":{"gitId":"nonrnp"},"content":"     * @param moduleDb Module database.","lastModifiedDate":"2021-10-31"},{"lineNumber":35,"author":{"gitId":"nonrnp"},"content":"     * @return true if the module is successfully stored, false otherwise.","lastModifiedDate":"2021-10-31"},{"lineNumber":36,"author":{"gitId":"nonrnp"},"content":"     */","lastModifiedDate":"2021-10-31"},{"lineNumber":37,"author":{"gitId":"nonrnp"},"content":"    public boolean storeModuleCodeGrade(String code, String grade, ModuleDb moduleDb) {","lastModifiedDate":"2021-10-31"},{"lineNumber":38,"author":{"gitId":"nonrnp"},"content":"        ModuleDetails mod \u003d moduleDb.getModuleInfo(code);","lastModifiedDate":"2021-10-31"},{"lineNumber":39,"author":{"gitId":"nonrnp"},"content":"        if (myModules.contains(mod)) {","lastModifiedDate":"2021-10-31"},{"lineNumber":40,"author":{"gitId":"nonrnp"},"content":"            return false;","lastModifiedDate":"2021-10-31"},{"lineNumber":41,"author":{"gitId":"nonrnp"},"content":"        }","lastModifiedDate":"2021-10-31"},{"lineNumber":42,"author":{"gitId":"nonrnp"},"content":"        myModules.add(mod);","lastModifiedDate":"2021-10-20"},{"lineNumber":43,"author":{"gitId":"nonrnp"},"content":"        mod.setGrade(grade);","lastModifiedDate":"2021-10-31"},{"lineNumber":44,"author":{"gitId":"nonrnp"},"content":"        return true;","lastModifiedDate":"2021-10-31"},{"lineNumber":45,"author":{"gitId":"nonrnp"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":46,"author":{"gitId":"nonrnp"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"nonrnp":46}},{"path":"src/main/java/seedu/kolinux/module/Grade.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"giterator"},"content":"package seedu.kolinux.module;","lastModifiedDate":"2021-11-02"},{"lineNumber":2,"author":{"gitId":"giterator"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":3,"author":{"gitId":"giterator"},"content":"public class Grade {","lastModifiedDate":"2021-11-02"},{"lineNumber":4,"author":{"gitId":"giterator"},"content":"    public static final String A_PLUS_GRADE \u003d \"A+\";","lastModifiedDate":"2021-11-02"},{"lineNumber":5,"author":{"gitId":"giterator"},"content":"    public static final String A_MINUS_GRADE \u003d \"A-\";","lastModifiedDate":"2021-11-02"},{"lineNumber":6,"author":{"gitId":"giterator"},"content":"    public static final String A_GRADE \u003d \"A\";","lastModifiedDate":"2021-11-02"},{"lineNumber":7,"author":{"gitId":"giterator"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":8,"author":{"gitId":"giterator"},"content":"    public static final String B_PLUS_GRADE \u003d \"B+\";","lastModifiedDate":"2021-11-02"},{"lineNumber":9,"author":{"gitId":"giterator"},"content":"    public static final String B_MINUS_GRADE \u003d \"B-\";","lastModifiedDate":"2021-11-02"},{"lineNumber":10,"author":{"gitId":"giterator"},"content":"    public static final String B_GRADE \u003d \"B\";","lastModifiedDate":"2021-11-02"},{"lineNumber":11,"author":{"gitId":"giterator"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":12,"author":{"gitId":"giterator"},"content":"    public static final String C_PLUS_GRADE \u003d \"C+\";","lastModifiedDate":"2021-11-02"},{"lineNumber":13,"author":{"gitId":"giterator"},"content":"    public static final String C_GRADE \u003d \"C\";","lastModifiedDate":"2021-11-02"},{"lineNumber":14,"author":{"gitId":"giterator"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":15,"author":{"gitId":"giterator"},"content":"    public static final String D_PLUS_GRADE \u003d \"D+\";","lastModifiedDate":"2021-11-02"},{"lineNumber":16,"author":{"gitId":"giterator"},"content":"    public static final String D_GRADE \u003d \"D\";","lastModifiedDate":"2021-11-02"},{"lineNumber":17,"author":{"gitId":"giterator"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":18,"author":{"gitId":"giterator"},"content":"    public static final String F_GRADE \u003d \"F\";","lastModifiedDate":"2021-11-02"},{"lineNumber":19,"author":{"gitId":"giterator"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":20,"author":{"gitId":"giterator"},"content":"    public static final String CS_GRADE \u003d \"CS\";","lastModifiedDate":"2021-11-02"},{"lineNumber":21,"author":{"gitId":"giterator"},"content":"    public static final String CU_GRADE \u003d \"CU\";","lastModifiedDate":"2021-11-02"},{"lineNumber":22,"author":{"gitId":"giterator"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":23,"author":{"gitId":"giterator"},"content":"    public static final String S_GRADE \u003d \"S\";","lastModifiedDate":"2021-11-02"},{"lineNumber":24,"author":{"gitId":"giterator"},"content":"    public static final String U_GRADE \u003d \"U\";","lastModifiedDate":"2021-11-02"},{"lineNumber":25,"author":{"gitId":"giterator"},"content":"    ","lastModifiedDate":"2021-11-02"},{"lineNumber":26,"author":{"gitId":"nonrnp"},"content":"    public static final String EXE_GRADE \u003d \"EXE\";","lastModifiedDate":"2021-11-02"},{"lineNumber":27,"author":{"gitId":"nonrnp"},"content":"    public static final String IC_GRADE \u003d \"IC\";","lastModifiedDate":"2021-11-02"},{"lineNumber":28,"author":{"gitId":"nonrnp"},"content":"    public static final String IP_GRADE \u003d \"IP\";","lastModifiedDate":"2021-11-02"},{"lineNumber":29,"author":{"gitId":"nonrnp"},"content":"    public static final String W_GRADE \u003d \"W\";","lastModifiedDate":"2021-11-02"},{"lineNumber":30,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":31,"author":{"gitId":"giterator"},"content":"    public static final String RESET_GRADE \u003d \"0\";","lastModifiedDate":"2021-11-02"},{"lineNumber":32,"author":{"gitId":"giterator"},"content":"    public static final String RESET_GRADE_ARGUMENT \u003d \"RESET\";","lastModifiedDate":"2021-11-02"},{"lineNumber":33,"author":{"gitId":"giterator"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":34,"author":{"gitId":"giterator"},"content":"}","lastModifiedDate":"2021-11-02"}],"authorContributionMap":{"giterator":29,"nonrnp":5}},{"path":"src/main/java/seedu/kolinux/module/JsonReader.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"powzx"},"content":"package seedu.kolinux.module;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"saravanamani1999"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"saravanamani1999"},"content":"import java.io.InputStream;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"saravanamani1999"},"content":"import java.io.InputStreamReader;","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"saravanamani1999"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"giterator"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":9,"author":{"gitId":"saravanamani1999"},"content":"import com.google.gson.Gson;","lastModifiedDate":"2021-10-04"},{"lineNumber":10,"author":{"gitId":"saravanamani1999"},"content":"import com.google.gson.reflect.TypeToken;","lastModifiedDate":"2021-10-04"},{"lineNumber":11,"author":{"gitId":"powzx"},"content":"import seedu.kolinux.Main;","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":13,"author":{"gitId":"giterator"},"content":"import static seedu.kolinux.module.Grade.RESET_GRADE;","lastModifiedDate":"2021-11-02"},{"lineNumber":14,"author":{"gitId":"giterator"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":15,"author":{"gitId":"giterator"},"content":"import java.nio.charset.StandardCharsets;","lastModifiedDate":"2021-11-02"},{"lineNumber":16,"author":{"gitId":"giterator"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":17,"author":{"gitId":"giterator"},"content":"/**","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"giterator"},"content":" * JsonReader class facilitates reading module data from stored JSON files.","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"giterator"},"content":" */","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"saravanamani1999"},"content":"public class JsonReader {","lastModifiedDate":"2021-10-04"},{"lineNumber":21,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":22,"author":{"gitId":"giterator"},"content":"    public InputStream inputStream \u003d Main.class.getResourceAsStream(\"/moduleDetails.json\");","lastModifiedDate":"2021-10-14"},{"lineNumber":23,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":24,"author":{"gitId":"giterator"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"giterator"},"content":"     * Reads module data from a JSON into an ArrayList.","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"giterator"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"giterator"},"content":"     * @return Returns an ArrayList of ModuleDetails objects","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"giterator"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"giterator"},"content":"    public ArrayList\u003cModuleDetails\u003e readJsonData() {","lastModifiedDate":"2021-10-14"},{"lineNumber":30,"author":{"gitId":"giterator"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":31,"author":{"gitId":"saravanamani1999"},"content":"        Gson gson \u003d new Gson();","lastModifiedDate":"2021-10-04"},{"lineNumber":32,"author":{"gitId":"giterator"},"content":"        BufferedReader reader \u003d new BufferedReader(new InputStreamReader(inputStream, StandardCharsets.UTF_8));","lastModifiedDate":"2021-11-02"},{"lineNumber":33,"author":{"gitId":"saravanamani1999"},"content":"        ArrayList\u003cModuleDetails\u003e modules \u003d gson.fromJson(reader, new TypeToken\u003cArrayList\u003cModuleDetails\u003e\u003e() {","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"giterator"},"content":"        }.getType());","lastModifiedDate":"2021-10-05"},{"lineNumber":35,"author":{"gitId":"giterator"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":36,"author":{"gitId":"giterator"},"content":"        for (ModuleDetails module : modules) {","lastModifiedDate":"2021-10-19"},{"lineNumber":37,"author":{"gitId":"giterator"},"content":"            module.setGrade(RESET_GRADE);","lastModifiedDate":"2021-11-01"},{"lineNumber":38,"author":{"gitId":"giterator"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"giterator"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"saravanamani1999"},"content":"        return modules;","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"saravanamani1999"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"giterator"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":44,"author":{"gitId":"giterator"},"content":"     * Reads module data from a JSON into a HashMap where each module\u0027s code is a key and its","lastModifiedDate":"2021-10-11"},{"lineNumber":45,"author":{"gitId":"giterator"},"content":"     * ModuleDetails instance is the corresponding value.","lastModifiedDate":"2021-10-11"},{"lineNumber":46,"author":{"gitId":"giterator"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":47,"author":{"gitId":"giterator"},"content":"     * @return Returns a HashMap of ModuleDetails objects","lastModifiedDate":"2021-10-11"},{"lineNumber":48,"author":{"gitId":"giterator"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":49,"author":{"gitId":"giterator"},"content":"    public HashMap\u003cString, ModuleDetails\u003e readModuleDb() {","lastModifiedDate":"2021-10-11"},{"lineNumber":50,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":51,"author":{"gitId":"saravanamani1999"},"content":"        ArrayList\u003cModuleDetails\u003e modules \u003d readJsonData();","lastModifiedDate":"2021-10-07"},{"lineNumber":52,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":53,"author":{"gitId":"giterator"},"content":"        HashMap\u003cString, ModuleDetails\u003e moduleDetailsMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-10-11"},{"lineNumber":54,"author":{"gitId":"saravanamani1999"},"content":"        if (modules !\u003d null) {","lastModifiedDate":"2021-10-07"},{"lineNumber":55,"author":{"gitId":"giterator"},"content":"            for (ModuleDetails module : modules) {","lastModifiedDate":"2021-10-05"},{"lineNumber":56,"author":{"gitId":"giterator"},"content":"                moduleDetailsMap.put(module.getModuleCode(), module);","lastModifiedDate":"2021-10-05"},{"lineNumber":57,"author":{"gitId":"giterator"},"content":"            }","lastModifiedDate":"2021-10-05"},{"lineNumber":58,"author":{"gitId":"saravanamani1999"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":59,"author":{"gitId":"giterator"},"content":"        return moduleDetailsMap;","lastModifiedDate":"2021-10-05"},{"lineNumber":60,"author":{"gitId":"saravanamani1999"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":61,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":62,"author":{"gitId":"saravanamani1999"},"content":"}","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"giterator":35,"powzx":2,"saravanamani1999":25}},{"path":"src/main/java/seedu/kolinux/module/ModuleDb.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"powzx"},"content":"package seedu.kolinux.module;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"giterator"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"giterator"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"giterator"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"giterator"},"content":"/**","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"giterator"},"content":" * ModuleDb class contains a HashMap that associates every module\u0027s code (key) with its modular information (value).","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"giterator"},"content":" */","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"giterator"},"content":"public class ModuleDb {","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"giterator"},"content":"    private JsonReader jsonReader \u003d new JsonReader();","lastModifiedDate":"2021-10-14"},{"lineNumber":10,"author":{"gitId":"giterator"},"content":"    private HashMap\u003cString, ModuleDetails\u003e moduleDetailsMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-10-14"},{"lineNumber":11,"author":{"gitId":"giterator"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"giterator"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":13,"author":{"gitId":"giterator"},"content":"     * Returns a pre-initialized ModuleDb object.","lastModifiedDate":"2021-10-14"},{"lineNumber":14,"author":{"gitId":"giterator"},"content":"     *","lastModifiedDate":"2021-10-14"},{"lineNumber":15,"author":{"gitId":"giterator"},"content":"     * @return Returns a ModuleDb object containing a moduleDetailsMap of all modules","lastModifiedDate":"2021-10-14"},{"lineNumber":16,"author":{"gitId":"giterator"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":17,"author":{"gitId":"giterator"},"content":"    public ModuleDb getPreInitModuleDb() {","lastModifiedDate":"2021-10-14"},{"lineNumber":18,"author":{"gitId":"giterator"},"content":"        ModuleDb moduleDb \u003d new ModuleDb();","lastModifiedDate":"2021-10-14"},{"lineNumber":19,"author":{"gitId":"giterator"},"content":"        moduleDb.initModuleDb();","lastModifiedDate":"2021-10-14"},{"lineNumber":20,"author":{"gitId":"giterator"},"content":"        return moduleDb;","lastModifiedDate":"2021-10-14"},{"lineNumber":21,"author":{"gitId":"giterator"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":22,"author":{"gitId":"giterator"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":23,"author":{"gitId":"giterator"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"giterator"},"content":"     * Loads module information stored in a JSON file into a HashMap.","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"giterator"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"giterator"},"content":"    public void initModuleDb() {","lastModifiedDate":"2021-10-14"},{"lineNumber":27,"author":{"gitId":"giterator"},"content":"        assert moduleDetailsMap.isEmpty() : \"moduleDetailsMap is already initialized\";","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"powzx"},"content":"        moduleDetailsMap \u003d jsonReader.readModuleDb();","lastModifiedDate":"2021-10-06"},{"lineNumber":29,"author":{"gitId":"giterator"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":30,"author":{"gitId":"giterator"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":31,"author":{"gitId":"giterator"},"content":"    public ModuleDetails getModuleInfo(String code) {","lastModifiedDate":"2021-10-14"},{"lineNumber":32,"author":{"gitId":"giterator"},"content":"        return moduleDetailsMap.get(code);","lastModifiedDate":"2021-10-05"},{"lineNumber":33,"author":{"gitId":"giterator"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":34,"author":{"gitId":"giterator"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"giterator":32,"powzx":2}},{"path":"src/main/java/seedu/kolinux/module/ModuleDetails.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"powzx"},"content":"package seedu.kolinux.module;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"saravanamani1999"},"content":"import com.google.gson.JsonArray;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"nonrnp"},"content":"import com.google.gson.JsonObject;","lastModifiedDate":"2021-11-05"},{"lineNumber":5,"author":{"gitId":"giterator"},"content":"import net.gcardone.junidecode.Junidecode;","lastModifiedDate":"2021-11-02"},{"lineNumber":6,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"giterator"},"content":"import static seedu.kolinux.module.Grade.A_PLUS_GRADE;","lastModifiedDate":"2021-11-02"},{"lineNumber":8,"author":{"gitId":"giterator"},"content":"import static seedu.kolinux.module.Grade.A_MINUS_GRADE;","lastModifiedDate":"2021-11-02"},{"lineNumber":9,"author":{"gitId":"giterator"},"content":"import static seedu.kolinux.module.Grade.A_GRADE;","lastModifiedDate":"2021-11-02"},{"lineNumber":10,"author":{"gitId":"giterator"},"content":"import static seedu.kolinux.module.Grade.B_PLUS_GRADE;","lastModifiedDate":"2021-11-02"},{"lineNumber":11,"author":{"gitId":"giterator"},"content":"import static seedu.kolinux.module.Grade.B_MINUS_GRADE;","lastModifiedDate":"2021-11-02"},{"lineNumber":12,"author":{"gitId":"giterator"},"content":"import static seedu.kolinux.module.Grade.B_GRADE;","lastModifiedDate":"2021-11-02"},{"lineNumber":13,"author":{"gitId":"giterator"},"content":"import static seedu.kolinux.module.Grade.C_PLUS_GRADE;","lastModifiedDate":"2021-11-02"},{"lineNumber":14,"author":{"gitId":"giterator"},"content":"import static seedu.kolinux.module.Grade.C_GRADE;","lastModifiedDate":"2021-11-02"},{"lineNumber":15,"author":{"gitId":"giterator"},"content":"import static seedu.kolinux.module.Grade.D_PLUS_GRADE;","lastModifiedDate":"2021-11-02"},{"lineNumber":16,"author":{"gitId":"giterator"},"content":"import static seedu.kolinux.module.Grade.D_GRADE;","lastModifiedDate":"2021-11-02"},{"lineNumber":17,"author":{"gitId":"giterator"},"content":"import static seedu.kolinux.module.Grade.F_GRADE;","lastModifiedDate":"2021-11-02"},{"lineNumber":18,"author":{"gitId":"giterator"},"content":"import static seedu.kolinux.module.Grade.S_GRADE;","lastModifiedDate":"2021-11-02"},{"lineNumber":19,"author":{"gitId":"giterator"},"content":"import static seedu.kolinux.module.Grade.U_GRADE;","lastModifiedDate":"2021-11-02"},{"lineNumber":20,"author":{"gitId":"giterator"},"content":"import static seedu.kolinux.module.Grade.CS_GRADE;","lastModifiedDate":"2021-11-02"},{"lineNumber":21,"author":{"gitId":"giterator"},"content":"import static seedu.kolinux.module.Grade.CU_GRADE;","lastModifiedDate":"2021-11-02"},{"lineNumber":22,"author":{"gitId":"nonrnp"},"content":"import static seedu.kolinux.module.Grade.EXE_GRADE;","lastModifiedDate":"2021-11-02"},{"lineNumber":23,"author":{"gitId":"nonrnp"},"content":"import static seedu.kolinux.module.Grade.IC_GRADE;","lastModifiedDate":"2021-11-02"},{"lineNumber":24,"author":{"gitId":"nonrnp"},"content":"import static seedu.kolinux.module.Grade.IP_GRADE;","lastModifiedDate":"2021-11-02"},{"lineNumber":25,"author":{"gitId":"nonrnp"},"content":"import static seedu.kolinux.module.Grade.W_GRADE;","lastModifiedDate":"2021-11-02"},{"lineNumber":26,"author":{"gitId":"giterator"},"content":"import static seedu.kolinux.module.Grade.RESET_GRADE;","lastModifiedDate":"2021-11-02"},{"lineNumber":27,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"giterator"},"content":"/**","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"giterator"},"content":" * ModuleDetails class that stores all attributes of each module.","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"giterator"},"content":" */","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"saravanamani1999"},"content":"public class ModuleDetails {","lastModifiedDate":"2021-10-04"},{"lineNumber":32,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":33,"author":{"gitId":"saravanamani1999"},"content":"    public String moduleCode;","lastModifiedDate":"2021-10-17"},{"lineNumber":34,"author":{"gitId":"saravanamani1999"},"content":"    private String title;","lastModifiedDate":"2021-10-04"},{"lineNumber":35,"author":{"gitId":"saravanamani1999"},"content":"    private String description;","lastModifiedDate":"2021-10-04"},{"lineNumber":36,"author":{"gitId":"saravanamani1999"},"content":"    private String department;","lastModifiedDate":"2021-10-04"},{"lineNumber":37,"author":{"gitId":"saravanamani1999"},"content":"    private String moduleCredit;","lastModifiedDate":"2021-10-04"},{"lineNumber":38,"author":{"gitId":"saravanamani1999"},"content":"    private String faculty;","lastModifiedDate":"2021-10-04"},{"lineNumber":39,"author":{"gitId":"giterator"},"content":"    private String grade;","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"saravanamani1999"},"content":"    private double[] workload;","lastModifiedDate":"2021-10-15"},{"lineNumber":41,"author":{"gitId":"saravanamani1999"},"content":"    private double lectureHours;","lastModifiedDate":"2021-10-15"},{"lineNumber":42,"author":{"gitId":"saravanamani1999"},"content":"    private double tutorialHours;","lastModifiedDate":"2021-10-15"},{"lineNumber":43,"author":{"gitId":"saravanamani1999"},"content":"    private double labHours;","lastModifiedDate":"2021-10-15"},{"lineNumber":44,"author":{"gitId":"saravanamani1999"},"content":"    private double projectHours;","lastModifiedDate":"2021-10-15"},{"lineNumber":45,"author":{"gitId":"saravanamani1999"},"content":"    private double preparationHours;","lastModifiedDate":"2021-10-15"},{"lineNumber":46,"author":{"gitId":"saravanamani1999"},"content":"    private JsonArray semesterData;","lastModifiedDate":"2021-10-19"},{"lineNumber":47,"author":{"gitId":"nonrnp"},"content":"    private JsonObject attributes;","lastModifiedDate":"2021-11-05"},{"lineNumber":48,"author":{"gitId":"saravanamani1999"},"content":"    private static final int OFFSET \u003d 8;","lastModifiedDate":"2021-10-19"},{"lineNumber":49,"author":{"gitId":"saravanamani1999"},"content":"    private static final int SEMESTER_1 \u003d 0;","lastModifiedDate":"2021-10-20"},{"lineNumber":50,"author":{"gitId":"saravanamani1999"},"content":"    private static final int SEMESTER_2 \u003d 1;","lastModifiedDate":"2021-10-20"},{"lineNumber":51,"author":{"gitId":"saravanamani1999"},"content":"    private static final int WORD_LIMIT \u003d 50;","lastModifiedDate":"2021-10-22"},{"lineNumber":52,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":53,"author":{"gitId":"saravanamani1999"},"content":"    public ModuleDetails(String moduleCode, String moduleCredit, String faculty, String description,","lastModifiedDate":"2021-10-30"},{"lineNumber":54,"author":{"gitId":"nonrnp"},"content":"            String title, String department, double[] workload, JsonArray semesterData, JsonObject attributes) {","lastModifiedDate":"2021-11-05"},{"lineNumber":55,"author":{"gitId":"giterator"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":56,"author":{"gitId":"giterator"},"content":"        /*Attributes read from the NUSmods JSON may contain unicode characters. For proper printing in standard output,","lastModifiedDate":"2021-11-02"},{"lineNumber":57,"author":{"gitId":"giterator"},"content":"        these characters are converted to their ASCII equivalent.*/","lastModifiedDate":"2021-11-02"},{"lineNumber":58,"author":{"gitId":"giterator"},"content":"        this.moduleCode \u003d Junidecode.unidecode(moduleCode);","lastModifiedDate":"2021-11-02"},{"lineNumber":59,"author":{"gitId":"giterator"},"content":"        this.moduleCredit \u003d Junidecode.unidecode(moduleCredit);","lastModifiedDate":"2021-11-02"},{"lineNumber":60,"author":{"gitId":"giterator"},"content":"        this.faculty \u003d Junidecode.unidecode(faculty);","lastModifiedDate":"2021-11-02"},{"lineNumber":61,"author":{"gitId":"giterator"},"content":"        this.description \u003d Junidecode.unidecode(description);","lastModifiedDate":"2021-11-02"},{"lineNumber":62,"author":{"gitId":"giterator"},"content":"        this.title \u003d Junidecode.unidecode(title);","lastModifiedDate":"2021-11-02"},{"lineNumber":63,"author":{"gitId":"giterator"},"content":"        this.department \u003d Junidecode.unidecode(department);","lastModifiedDate":"2021-11-02"},{"lineNumber":64,"author":{"gitId":"saravanamani1999"},"content":"        this.workload \u003d workload;","lastModifiedDate":"2021-10-15"},{"lineNumber":65,"author":{"gitId":"saravanamani1999"},"content":"        this.semesterData \u003d semesterData;","lastModifiedDate":"2021-10-19"},{"lineNumber":66,"author":{"gitId":"giterator"},"content":"        this.grade \u003d RESET_GRADE;","lastModifiedDate":"2021-11-01"},{"lineNumber":67,"author":{"gitId":"nonrnp"},"content":"        this.attributes \u003d attributes;","lastModifiedDate":"2021-11-05"},{"lineNumber":68,"author":{"gitId":"giterator"},"content":"        assert Integer.parseInt(this.moduleCredit) \u003e 0 : \"Modular Credits must be positive\";","lastModifiedDate":"2021-10-11"},{"lineNumber":69,"author":{"gitId":"saravanamani1999"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":70,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":71,"author":{"gitId":"nonrnp"},"content":"    public ModuleDetails(int moduleCredit, String grade) {","lastModifiedDate":"2021-10-20"},{"lineNumber":72,"author":{"gitId":"nonrnp"},"content":"        String mc \u003d Integer.toString(moduleCredit);","lastModifiedDate":"2021-10-20"},{"lineNumber":73,"author":{"gitId":"nonrnp"},"content":"        ","lastModifiedDate":"2021-10-20"},{"lineNumber":74,"author":{"gitId":"nonrnp"},"content":"        this.moduleCode \u003d null;","lastModifiedDate":"2021-10-20"},{"lineNumber":75,"author":{"gitId":"nonrnp"},"content":"        this.moduleCredit \u003d mc;","lastModifiedDate":"2021-10-20"},{"lineNumber":76,"author":{"gitId":"nonrnp"},"content":"        this.faculty \u003d null;","lastModifiedDate":"2021-10-20"},{"lineNumber":77,"author":{"gitId":"nonrnp"},"content":"        this.description \u003d null;","lastModifiedDate":"2021-10-20"},{"lineNumber":78,"author":{"gitId":"nonrnp"},"content":"        this.title \u003d null;","lastModifiedDate":"2021-10-20"},{"lineNumber":79,"author":{"gitId":"nonrnp"},"content":"        this.department \u003d null;","lastModifiedDate":"2021-10-20"},{"lineNumber":80,"author":{"gitId":"nonrnp"},"content":"        this.workload \u003d null;","lastModifiedDate":"2021-10-20"},{"lineNumber":81,"author":{"gitId":"nonrnp"},"content":"        this.semesterData \u003d null;","lastModifiedDate":"2021-10-20"},{"lineNumber":82,"author":{"gitId":"nonrnp"},"content":"        this.grade \u003d grade;","lastModifiedDate":"2021-10-20"},{"lineNumber":83,"author":{"gitId":"nonrnp"},"content":"        this.attributes \u003d null;","lastModifiedDate":"2021-11-05"},{"lineNumber":84,"author":{"gitId":"nonrnp"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":85,"author":{"gitId":"nonrnp"},"content":"    ","lastModifiedDate":"2021-10-20"},{"lineNumber":86,"author":{"gitId":"nonrnp"},"content":"    public ModuleDetails(String moduleCode, String grade) {","lastModifiedDate":"2021-10-20"},{"lineNumber":87,"author":{"gitId":"nonrnp"},"content":"        this.moduleCode \u003d moduleCode;","lastModifiedDate":"2021-10-20"},{"lineNumber":88,"author":{"gitId":"nonrnp"},"content":"        this.moduleCredit \u003d null;","lastModifiedDate":"2021-10-20"},{"lineNumber":89,"author":{"gitId":"nonrnp"},"content":"        this.faculty \u003d null;","lastModifiedDate":"2021-10-20"},{"lineNumber":90,"author":{"gitId":"nonrnp"},"content":"        this.description \u003d null;","lastModifiedDate":"2021-10-20"},{"lineNumber":91,"author":{"gitId":"nonrnp"},"content":"        this.title \u003d null;","lastModifiedDate":"2021-10-20"},{"lineNumber":92,"author":{"gitId":"nonrnp"},"content":"        this.department \u003d null;","lastModifiedDate":"2021-10-20"},{"lineNumber":93,"author":{"gitId":"nonrnp"},"content":"        this.workload \u003d null;","lastModifiedDate":"2021-10-20"},{"lineNumber":94,"author":{"gitId":"nonrnp"},"content":"        this.semesterData \u003d null;","lastModifiedDate":"2021-10-20"},{"lineNumber":95,"author":{"gitId":"nonrnp"},"content":"        this.grade \u003d grade;","lastModifiedDate":"2021-10-20"},{"lineNumber":96,"author":{"gitId":"nonrnp"},"content":"        this.attributes \u003d null;","lastModifiedDate":"2021-11-05"},{"lineNumber":97,"author":{"gitId":"nonrnp"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":98,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":99,"author":{"gitId":"giterator"},"content":"    public void setGrade(String newGrade) {","lastModifiedDate":"2021-10-19"},{"lineNumber":100,"author":{"gitId":"giterator"},"content":"        grade \u003d newGrade;","lastModifiedDate":"2021-10-19"},{"lineNumber":101,"author":{"gitId":"giterator"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":102,"author":{"gitId":"giterator"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":103,"author":{"gitId":"giterator"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":104,"author":{"gitId":"giterator"},"content":"    public String getGrade() {","lastModifiedDate":"2021-10-19"},{"lineNumber":105,"author":{"gitId":"giterator"},"content":"        return grade;","lastModifiedDate":"2021-10-19"},{"lineNumber":106,"author":{"gitId":"giterator"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":107,"author":{"gitId":"giterator"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":108,"author":{"gitId":"saravanamani1999"},"content":"    public String getModuleCredit() {","lastModifiedDate":"2021-10-04"},{"lineNumber":109,"author":{"gitId":"saravanamani1999"},"content":"        return moduleCredit;","lastModifiedDate":"2021-10-04"},{"lineNumber":110,"author":{"gitId":"saravanamani1999"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":111,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":112,"author":{"gitId":"saravanamani1999"},"content":"    public String getModuleCode() {","lastModifiedDate":"2021-10-04"},{"lineNumber":113,"author":{"gitId":"saravanamani1999"},"content":"        return moduleCode;","lastModifiedDate":"2021-10-04"},{"lineNumber":114,"author":{"gitId":"saravanamani1999"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":115,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":116,"author":{"gitId":"saravanamani1999"},"content":"    public String getDescription() {","lastModifiedDate":"2021-10-04"},{"lineNumber":117,"author":{"gitId":"saravanamani1999"},"content":"        return description;","lastModifiedDate":"2021-10-04"},{"lineNumber":118,"author":{"gitId":"saravanamani1999"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":119,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":120,"author":{"gitId":"saravanamani1999"},"content":"    public String getTitle() {","lastModifiedDate":"2021-10-04"},{"lineNumber":121,"author":{"gitId":"saravanamani1999"},"content":"        return title;","lastModifiedDate":"2021-10-04"},{"lineNumber":122,"author":{"gitId":"saravanamani1999"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":123,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":124,"author":{"gitId":"saravanamani1999"},"content":"    public String getDepartment() {","lastModifiedDate":"2021-10-04"},{"lineNumber":125,"author":{"gitId":"saravanamani1999"},"content":"        return department;","lastModifiedDate":"2021-10-04"},{"lineNumber":126,"author":{"gitId":"saravanamani1999"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":127,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":128,"author":{"gitId":"saravanamani1999"},"content":"    public String getFaculty() {","lastModifiedDate":"2021-10-04"},{"lineNumber":129,"author":{"gitId":"saravanamani1999"},"content":"        return faculty;","lastModifiedDate":"2021-10-04"},{"lineNumber":130,"author":{"gitId":"saravanamani1999"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":131,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":132,"author":{"gitId":"saravanamani1999"},"content":"    public double getTutorialHours() {","lastModifiedDate":"2021-10-15"},{"lineNumber":133,"author":{"gitId":"saravanamani1999"},"content":"        try {","lastModifiedDate":"2021-10-24"},{"lineNumber":134,"author":{"gitId":"saravanamani1999"},"content":"            tutorialHours \u003d workload[1];","lastModifiedDate":"2021-10-15"},{"lineNumber":135,"author":{"gitId":"saravanamani1999"},"content":"            return tutorialHours;","lastModifiedDate":"2021-10-15"},{"lineNumber":136,"author":{"gitId":"saravanamani1999"},"content":"        } catch (NullPointerException | IndexOutOfBoundsException exception) {","lastModifiedDate":"2021-10-26"},{"lineNumber":137,"author":{"gitId":"saravanamani1999"},"content":"            return -1;","lastModifiedDate":"2021-10-24"},{"lineNumber":138,"author":{"gitId":"saravanamani1999"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":139,"author":{"gitId":"saravanamani1999"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":140,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":141,"author":{"gitId":"saravanamani1999"},"content":"    public double getLectureHours() {","lastModifiedDate":"2021-10-15"},{"lineNumber":142,"author":{"gitId":"saravanamani1999"},"content":"        try {","lastModifiedDate":"2021-10-24"},{"lineNumber":143,"author":{"gitId":"saravanamani1999"},"content":"            lectureHours \u003d workload[0];","lastModifiedDate":"2021-10-15"},{"lineNumber":144,"author":{"gitId":"saravanamani1999"},"content":"            return lectureHours;","lastModifiedDate":"2021-10-15"},{"lineNumber":145,"author":{"gitId":"saravanamani1999"},"content":"        } catch (NullPointerException | IndexOutOfBoundsException exception) {","lastModifiedDate":"2021-10-26"},{"lineNumber":146,"author":{"gitId":"saravanamani1999"},"content":"            return -1;","lastModifiedDate":"2021-10-24"},{"lineNumber":147,"author":{"gitId":"saravanamani1999"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":148,"author":{"gitId":"saravanamani1999"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":149,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":150,"author":{"gitId":"saravanamani1999"},"content":"    public double getLabHours() {","lastModifiedDate":"2021-10-15"},{"lineNumber":151,"author":{"gitId":"saravanamani1999"},"content":"        try {","lastModifiedDate":"2021-10-24"},{"lineNumber":152,"author":{"gitId":"saravanamani1999"},"content":"            labHours \u003d workload[2];","lastModifiedDate":"2021-10-15"},{"lineNumber":153,"author":{"gitId":"saravanamani1999"},"content":"            return labHours;","lastModifiedDate":"2021-10-15"},{"lineNumber":154,"author":{"gitId":"saravanamani1999"},"content":"        } catch (NullPointerException | IndexOutOfBoundsException exception) {","lastModifiedDate":"2021-10-26"},{"lineNumber":155,"author":{"gitId":"saravanamani1999"},"content":"            return -1;","lastModifiedDate":"2021-10-24"},{"lineNumber":156,"author":{"gitId":"saravanamani1999"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":157,"author":{"gitId":"saravanamani1999"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":158,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":159,"author":{"gitId":"saravanamani1999"},"content":"    public double getProjectHours() {","lastModifiedDate":"2021-10-15"},{"lineNumber":160,"author":{"gitId":"saravanamani1999"},"content":"        try {","lastModifiedDate":"2021-10-24"},{"lineNumber":161,"author":{"gitId":"saravanamani1999"},"content":"            projectHours \u003d workload[3];","lastModifiedDate":"2021-10-15"},{"lineNumber":162,"author":{"gitId":"saravanamani1999"},"content":"            return projectHours;","lastModifiedDate":"2021-10-15"},{"lineNumber":163,"author":{"gitId":"saravanamani1999"},"content":"        } catch (NullPointerException | IndexOutOfBoundsException exception) {","lastModifiedDate":"2021-10-26"},{"lineNumber":164,"author":{"gitId":"saravanamani1999"},"content":"            return -1;","lastModifiedDate":"2021-10-24"},{"lineNumber":165,"author":{"gitId":"saravanamani1999"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":166,"author":{"gitId":"saravanamani1999"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":167,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":168,"author":{"gitId":"saravanamani1999"},"content":"    public double getPreparationHours() {","lastModifiedDate":"2021-10-15"},{"lineNumber":169,"author":{"gitId":"saravanamani1999"},"content":"        try {","lastModifiedDate":"2021-10-24"},{"lineNumber":170,"author":{"gitId":"saravanamani1999"},"content":"            preparationHours \u003d workload[4];","lastModifiedDate":"2021-10-15"},{"lineNumber":171,"author":{"gitId":"saravanamani1999"},"content":"            return preparationHours;","lastModifiedDate":"2021-10-15"},{"lineNumber":172,"author":{"gitId":"saravanamani1999"},"content":"        } catch (NullPointerException | IndexOutOfBoundsException exception) {","lastModifiedDate":"2021-10-26"},{"lineNumber":173,"author":{"gitId":"saravanamani1999"},"content":"            return -1;","lastModifiedDate":"2021-10-24"},{"lineNumber":174,"author":{"gitId":"saravanamani1999"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":175,"author":{"gitId":"saravanamani1999"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":176,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":177,"author":{"gitId":"saravanamani1999"},"content":"    public String[] getExamDateTime() {","lastModifiedDate":"2021-10-19"},{"lineNumber":178,"author":{"gitId":"saravanamani1999"},"content":"        try {","lastModifiedDate":"2021-10-19"},{"lineNumber":179,"author":{"gitId":"saravanamani1999"},"content":"            String examDate \u003d semesterData.get(SEMESTER_1).getAsJsonObject().get(\"examDate\").getAsString();","lastModifiedDate":"2021-10-20"},{"lineNumber":180,"author":{"gitId":"saravanamani1999"},"content":"            String newTimeFormat \u003d examDate.replace(\":00.000Z\", \"\");","lastModifiedDate":"2021-10-19"},{"lineNumber":181,"author":{"gitId":"saravanamani1999"},"content":"            String[] dateTime \u003d newTimeFormat.split(\"T\");","lastModifiedDate":"2021-10-19"},{"lineNumber":182,"author":{"gitId":"saravanamani1999"},"content":"            return dateTime;","lastModifiedDate":"2021-10-19"},{"lineNumber":183,"author":{"gitId":"saravanamani1999"},"content":"        } catch (NullPointerException | IndexOutOfBoundsException exception) {","lastModifiedDate":"2021-10-26"},{"lineNumber":184,"author":{"gitId":"saravanamani1999"},"content":"            return null;","lastModifiedDate":"2021-10-19"},{"lineNumber":185,"author":{"gitId":"saravanamani1999"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":186,"author":{"gitId":"saravanamani1999"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":187,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":188,"author":{"gitId":"saravanamani1999"},"content":"    public String getDate() {","lastModifiedDate":"2021-10-19"},{"lineNumber":189,"author":{"gitId":"saravanamani1999"},"content":"        try {","lastModifiedDate":"2021-10-19"},{"lineNumber":190,"author":{"gitId":"saravanamani1999"},"content":"            String[] dateTime \u003d getExamDateTime();","lastModifiedDate":"2021-10-19"},{"lineNumber":191,"author":{"gitId":"saravanamani1999"},"content":"            return dateTime[0];","lastModifiedDate":"2021-10-19"},{"lineNumber":192,"author":{"gitId":"saravanamani1999"},"content":"        } catch (NullPointerException | IndexOutOfBoundsException exception) {","lastModifiedDate":"2021-10-26"},{"lineNumber":193,"author":{"gitId":"saravanamani1999"},"content":"            return null;","lastModifiedDate":"2021-10-19"},{"lineNumber":194,"author":{"gitId":"saravanamani1999"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":195,"author":{"gitId":"saravanamani1999"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":196,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":197,"author":{"gitId":"saravanamani1999"},"content":"    public String getStartTime() {","lastModifiedDate":"2021-10-19"},{"lineNumber":198,"author":{"gitId":"saravanamani1999"},"content":"        try {","lastModifiedDate":"2021-10-19"},{"lineNumber":199,"author":{"gitId":"saravanamani1999"},"content":"            String[] dateTime \u003d getExamDateTime();","lastModifiedDate":"2021-10-19"},{"lineNumber":200,"author":{"gitId":"saravanamani1999"},"content":"            String time \u003d dateTime[1];","lastModifiedDate":"2021-10-19"},{"lineNumber":201,"author":{"gitId":"saravanamani1999"},"content":"            String[] timings \u003d time.split(\":\");","lastModifiedDate":"2021-10-19"},{"lineNumber":202,"author":{"gitId":"saravanamani1999"},"content":"            int offsetTime \u003d Integer.parseInt(timings[0]) + OFFSET;","lastModifiedDate":"2021-10-19"},{"lineNumber":203,"author":{"gitId":"saravanamani1999"},"content":"            String finalTime;","lastModifiedDate":"2021-10-19"},{"lineNumber":204,"author":{"gitId":"saravanamani1999"},"content":"            if (offsetTime \u003c 10) {","lastModifiedDate":"2021-10-19"},{"lineNumber":205,"author":{"gitId":"saravanamani1999"},"content":"                finalTime \u003d \"0\" + offsetTime + \":00\";","lastModifiedDate":"2021-10-19"},{"lineNumber":206,"author":{"gitId":"saravanamani1999"},"content":"            } else {","lastModifiedDate":"2021-10-19"},{"lineNumber":207,"author":{"gitId":"saravanamani1999"},"content":"                finalTime \u003d offsetTime + \":00\";","lastModifiedDate":"2021-10-19"},{"lineNumber":208,"author":{"gitId":"saravanamani1999"},"content":"            }","lastModifiedDate":"2021-10-19"},{"lineNumber":209,"author":{"gitId":"saravanamani1999"},"content":"            return finalTime;","lastModifiedDate":"2021-10-19"},{"lineNumber":210,"author":{"gitId":"saravanamani1999"},"content":"        } catch (NullPointerException | IndexOutOfBoundsException exception) {","lastModifiedDate":"2021-10-26"},{"lineNumber":211,"author":{"gitId":"saravanamani1999"},"content":"            return null;","lastModifiedDate":"2021-10-19"},{"lineNumber":212,"author":{"gitId":"saravanamani1999"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":213,"author":{"gitId":"saravanamani1999"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":214,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":215,"author":{"gitId":"saravanamani1999"},"content":"    public String getEndTime() {","lastModifiedDate":"2021-10-19"},{"lineNumber":216,"author":{"gitId":"saravanamani1999"},"content":"        try {","lastModifiedDate":"2021-10-19"},{"lineNumber":217,"author":{"gitId":"saravanamani1999"},"content":"            int examHours \u003d 0;","lastModifiedDate":"2021-10-19"},{"lineNumber":218,"author":{"gitId":"saravanamani1999"},"content":"            examHours \u003d (semesterData.get(SEMESTER_1).getAsJsonObject().get(\"examDuration\").getAsInt()) / 60;","lastModifiedDate":"2021-10-20"},{"lineNumber":219,"author":{"gitId":"saravanamani1999"},"content":"            String time \u003d getStartTime();","lastModifiedDate":"2021-10-19"},{"lineNumber":220,"author":{"gitId":"saravanamani1999"},"content":"            String[] timings \u003d time.split(\":\");","lastModifiedDate":"2021-10-19"},{"lineNumber":221,"author":{"gitId":"saravanamani1999"},"content":"            int endTiming \u003d Integer.parseInt(timings[0]) + examHours;","lastModifiedDate":"2021-10-19"},{"lineNumber":222,"author":{"gitId":"saravanamani1999"},"content":"            String endTime;","lastModifiedDate":"2021-10-19"},{"lineNumber":223,"author":{"gitId":"saravanamani1999"},"content":"            if (endTiming \u003c 10) {","lastModifiedDate":"2021-10-19"},{"lineNumber":224,"author":{"gitId":"saravanamani1999"},"content":"                endTime \u003d \"0\" + endTiming + \":00\";","lastModifiedDate":"2021-10-19"},{"lineNumber":225,"author":{"gitId":"saravanamani1999"},"content":"            } else {","lastModifiedDate":"2021-10-19"},{"lineNumber":226,"author":{"gitId":"saravanamani1999"},"content":"                endTime \u003d endTiming + \":00\";","lastModifiedDate":"2021-10-19"},{"lineNumber":227,"author":{"gitId":"saravanamani1999"},"content":"            }","lastModifiedDate":"2021-10-19"},{"lineNumber":228,"author":{"gitId":"saravanamani1999"},"content":"            return endTime;","lastModifiedDate":"2021-10-19"},{"lineNumber":229,"author":{"gitId":"saravanamani1999"},"content":"        } catch (NullPointerException | IndexOutOfBoundsException exception) {","lastModifiedDate":"2021-10-26"},{"lineNumber":230,"author":{"gitId":"saravanamani1999"},"content":"            return null;","lastModifiedDate":"2021-10-19"},{"lineNumber":231,"author":{"gitId":"saravanamani1999"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":232,"author":{"gitId":"saravanamani1999"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":233,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":234,"author":{"gitId":"giterator"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":235,"author":{"gitId":"giterator"},"content":"     * Returns a String object representing the ModuleDetails in a format that can be used to read and write","lastModifiedDate":"2021-10-19"},{"lineNumber":236,"author":{"gitId":"giterator"},"content":"     * the ModuleDetails from/to file.","lastModifiedDate":"2021-10-19"},{"lineNumber":237,"author":{"gitId":"giterator"},"content":"     *","lastModifiedDate":"2021-10-19"},{"lineNumber":238,"author":{"gitId":"giterator"},"content":"     * @return The String representation of the ModuleDetails that be used to read and write from/to file.","lastModifiedDate":"2021-10-19"},{"lineNumber":239,"author":{"gitId":"giterator"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":240,"author":{"gitId":"giterator"},"content":"    public String getEncodedFormat() {","lastModifiedDate":"2021-10-19"},{"lineNumber":241,"author":{"gitId":"giterator"},"content":"        return moduleCode + \"/\" + grade;","lastModifiedDate":"2021-10-19"},{"lineNumber":242,"author":{"gitId":"giterator"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":243,"author":{"gitId":"giterator"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":244,"author":{"gitId":"nonrnp"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":245,"author":{"gitId":"nonrnp"},"content":"     * Return a grade point corresponding to the grade of this object.","lastModifiedDate":"2021-10-20"},{"lineNumber":246,"author":{"gitId":"nonrnp"},"content":"     * ","lastModifiedDate":"2021-10-20"},{"lineNumber":247,"author":{"gitId":"nonrnp"},"content":"     * @return Grade point in double type","lastModifiedDate":"2021-10-20"},{"lineNumber":248,"author":{"gitId":"nonrnp"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":249,"author":{"gitId":"nonrnp"},"content":"    public double getGradePoint() {","lastModifiedDate":"2021-10-20"},{"lineNumber":250,"author":{"gitId":"nonrnp"},"content":"        switch (grade) {","lastModifiedDate":"2021-10-20"},{"lineNumber":251,"author":{"gitId":"giterator"},"content":"        case A_PLUS_GRADE: // Fallthrough, is equivalent grade point to \"A\"","lastModifiedDate":"2021-11-02"},{"lineNumber":252,"author":{"gitId":"giterator"},"content":"        case A_GRADE:","lastModifiedDate":"2021-11-02"},{"lineNumber":253,"author":{"gitId":"nonrnp"},"content":"            return 5.0;","lastModifiedDate":"2021-10-20"},{"lineNumber":254,"author":{"gitId":"giterator"},"content":"        case A_MINUS_GRADE:","lastModifiedDate":"2021-11-02"},{"lineNumber":255,"author":{"gitId":"nonrnp"},"content":"            return 4.5;","lastModifiedDate":"2021-10-20"},{"lineNumber":256,"author":{"gitId":"giterator"},"content":"        case B_PLUS_GRADE:","lastModifiedDate":"2021-11-02"},{"lineNumber":257,"author":{"gitId":"nonrnp"},"content":"            return 4.0;","lastModifiedDate":"2021-10-20"},{"lineNumber":258,"author":{"gitId":"giterator"},"content":"        case B_GRADE:","lastModifiedDate":"2021-11-02"},{"lineNumber":259,"author":{"gitId":"nonrnp"},"content":"            return 3.5;","lastModifiedDate":"2021-10-20"},{"lineNumber":260,"author":{"gitId":"giterator"},"content":"        case B_MINUS_GRADE:","lastModifiedDate":"2021-11-02"},{"lineNumber":261,"author":{"gitId":"nonrnp"},"content":"            return 3.0;","lastModifiedDate":"2021-10-20"},{"lineNumber":262,"author":{"gitId":"giterator"},"content":"        case C_PLUS_GRADE:","lastModifiedDate":"2021-11-02"},{"lineNumber":263,"author":{"gitId":"nonrnp"},"content":"            return 2.5;","lastModifiedDate":"2021-10-20"},{"lineNumber":264,"author":{"gitId":"giterator"},"content":"        case C_GRADE:","lastModifiedDate":"2021-11-02"},{"lineNumber":265,"author":{"gitId":"nonrnp"},"content":"            return 2.0;","lastModifiedDate":"2021-10-20"},{"lineNumber":266,"author":{"gitId":"giterator"},"content":"        case D_PLUS_GRADE:","lastModifiedDate":"2021-11-02"},{"lineNumber":267,"author":{"gitId":"nonrnp"},"content":"            return 1.5;","lastModifiedDate":"2021-10-20"},{"lineNumber":268,"author":{"gitId":"giterator"},"content":"        case D_GRADE:","lastModifiedDate":"2021-11-02"},{"lineNumber":269,"author":{"gitId":"nonrnp"},"content":"            return 1.0;","lastModifiedDate":"2021-10-20"},{"lineNumber":270,"author":{"gitId":"giterator"},"content":"        case F_GRADE:","lastModifiedDate":"2021-11-02"},{"lineNumber":271,"author":{"gitId":"nonrnp"},"content":"            return 0.0;","lastModifiedDate":"2021-10-20"},{"lineNumber":272,"author":{"gitId":"nonrnp"},"content":"        default:","lastModifiedDate":"2021-10-20"},{"lineNumber":273,"author":{"gitId":"nonrnp"},"content":"            return -1; // Invalid grade","lastModifiedDate":"2021-10-20"},{"lineNumber":274,"author":{"gitId":"nonrnp"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":275,"author":{"gitId":"nonrnp"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":276,"author":{"gitId":"nonrnp"},"content":"    ","lastModifiedDate":"2021-10-20"},{"lineNumber":277,"author":{"gitId":"nonrnp"},"content":"    public boolean containsNonCalculatingGrade() {","lastModifiedDate":"2021-11-02"},{"lineNumber":278,"author":{"gitId":"nonrnp"},"content":"        return grade.equals(S_GRADE) || grade.equals(CS_GRADE) || grade.equals(U_GRADE) || grade.equals(CU_GRADE)","lastModifiedDate":"2021-11-02"},{"lineNumber":279,"author":{"gitId":"nonrnp"},"content":"                || grade.equals(EXE_GRADE) || grade.equals(IC_GRADE) || grade.equals(IP_GRADE) || grade.equals(W_GRADE);","lastModifiedDate":"2021-11-02"},{"lineNumber":280,"author":{"gitId":"nonrnp"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":281,"author":{"gitId":"nonrnp"},"content":"    ","lastModifiedDate":"2021-10-20"},{"lineNumber":282,"author":{"gitId":"nonrnp"},"content":"    public boolean containsNullGrade() {","lastModifiedDate":"2021-10-20"},{"lineNumber":283,"author":{"gitId":"giterator"},"content":"        return grade.equals(RESET_GRADE);","lastModifiedDate":"2021-11-01"},{"lineNumber":284,"author":{"gitId":"nonrnp"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":285,"author":{"gitId":"nonrnp"},"content":"    ","lastModifiedDate":"2021-11-01"},{"lineNumber":286,"author":{"gitId":"nonrnp"},"content":"    public String resetGrade() {","lastModifiedDate":"2021-11-01"},{"lineNumber":287,"author":{"gitId":"giterator"},"content":"        if (grade.equals(RESET_GRADE)) {","lastModifiedDate":"2021-11-01"},{"lineNumber":288,"author":{"gitId":"nonrnp"},"content":"            return moduleCode + \" does not have final grade stored\";","lastModifiedDate":"2021-11-01"},{"lineNumber":289,"author":{"gitId":"nonrnp"},"content":"        }","lastModifiedDate":"2021-11-01"},{"lineNumber":290,"author":{"gitId":"giterator"},"content":"        grade \u003d RESET_GRADE;","lastModifiedDate":"2021-11-01"},{"lineNumber":291,"author":{"gitId":"nonrnp"},"content":"        return moduleCode + \" grade reset\";","lastModifiedDate":"2021-11-01"},{"lineNumber":292,"author":{"gitId":"nonrnp"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":293,"author":{"gitId":"nonrnp"},"content":"    ","lastModifiedDate":"2021-10-20"},{"lineNumber":294,"author":{"gitId":"nonrnp"},"content":"    public boolean isSuAble() {","lastModifiedDate":"2021-11-05"},{"lineNumber":295,"author":{"gitId":"nonrnp"},"content":"        try {","lastModifiedDate":"2021-11-05"},{"lineNumber":296,"author":{"gitId":"nonrnp"},"content":"            return attributes.get(\"su\").getAsBoolean();","lastModifiedDate":"2021-11-05"},{"lineNumber":297,"author":{"gitId":"nonrnp"},"content":"        } catch (NullPointerException exception) {","lastModifiedDate":"2021-11-05"},{"lineNumber":298,"author":{"gitId":"nonrnp"},"content":"            return false;","lastModifiedDate":"2021-11-05"},{"lineNumber":299,"author":{"gitId":"nonrnp"},"content":"        }","lastModifiedDate":"2021-11-05"},{"lineNumber":300,"author":{"gitId":"nonrnp"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":301,"author":{"gitId":"nonrnp"},"content":"    ","lastModifiedDate":"2021-11-05"},{"lineNumber":302,"author":{"gitId":"nonrnp"},"content":"    public boolean isCsCuModule() {","lastModifiedDate":"2021-11-05"},{"lineNumber":303,"author":{"gitId":"nonrnp"},"content":"        return description.contains(\"CS/CU\") || moduleCode.contains(\"GEQ1000\") || moduleCode.contains(\"DMX\")","lastModifiedDate":"2021-11-05"},{"lineNumber":304,"author":{"gitId":"nonrnp"},"content":"                || moduleCode.equals(\"CP2106\") || moduleCode.equals(\"CFG1002\");","lastModifiedDate":"2021-11-05"},{"lineNumber":305,"author":{"gitId":"nonrnp"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":306,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":307,"author":{"gitId":"giterator"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":308,"author":{"gitId":"giterator"},"content":"     * Returns a String object that is formatted for printing in CLI.","lastModifiedDate":"2021-10-11"},{"lineNumber":309,"author":{"gitId":"giterator"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":310,"author":{"gitId":"giterator"},"content":"     * @return The String representation of a module\u0027s details","lastModifiedDate":"2021-10-11"},{"lineNumber":311,"author":{"gitId":"giterator"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":312,"author":{"gitId":"giterator"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":313,"author":{"gitId":"giterator"},"content":"    public String toString() {","lastModifiedDate":"2021-10-05"},{"lineNumber":314,"author":{"gitId":"saravanamani1999"},"content":"        int i \u003d WORD_LIMIT;","lastModifiedDate":"2021-10-22"},{"lineNumber":315,"author":{"gitId":"saravanamani1999"},"content":"        String newDescription \u003d description.replaceAll(\"\\n\", \" \");","lastModifiedDate":"2021-10-30"},{"lineNumber":316,"author":{"gitId":"saravanamani1999"},"content":"        StringBuilder descriptionSequence \u003d new StringBuilder(newDescription);","lastModifiedDate":"2021-10-30"},{"lineNumber":317,"author":{"gitId":"saravanamani1999"},"content":"        while (i \u003c newDescription.length()) {","lastModifiedDate":"2021-10-30"},{"lineNumber":318,"author":{"gitId":"saravanamani1999"},"content":"            if ((newDescription.charAt(i) \u003d\u003d \u0027 \u0027) \u0026\u0026 (newDescription.charAt(i + 1) !\u003d \u0027\\n\u0027)) {","lastModifiedDate":"2021-10-30"},{"lineNumber":319,"author":{"gitId":"saravanamani1999"},"content":"                descriptionSequence.setCharAt(i, \u0027\\n\u0027);","lastModifiedDate":"2021-10-30"},{"lineNumber":320,"author":{"gitId":"saravanamani1999"},"content":"                i +\u003d WORD_LIMIT;","lastModifiedDate":"2021-10-22"},{"lineNumber":321,"author":{"gitId":"saravanamani1999"},"content":"            } else {","lastModifiedDate":"2021-10-07"},{"lineNumber":322,"author":{"gitId":"saravanamani1999"},"content":"                i++;","lastModifiedDate":"2021-10-07"},{"lineNumber":323,"author":{"gitId":"saravanamani1999"},"content":"            }","lastModifiedDate":"2021-10-07"},{"lineNumber":324,"author":{"gitId":"saravanamani1999"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":325,"author":{"gitId":"saravanamani1999"},"content":"        String formattedDescription \u003d descriptionSequence.toString();","lastModifiedDate":"2021-10-30"},{"lineNumber":326,"author":{"gitId":"giterator"},"content":"        return moduleCode + \": \" + title + \"\\n\" + \"Department: \" + department + \"\\n\" + \"Faculty: \" + faculty + \"\\n\"","lastModifiedDate":"2021-10-05"},{"lineNumber":327,"author":{"gitId":"giterator"},"content":"                + \"Credits: \" + moduleCredit + \"\\n\" + \"Grade: \" + (grade.equals(RESET_GRADE) ? \"N/A\" : grade) + \"\\n\"","lastModifiedDate":"2021-11-01"},{"lineNumber":328,"author":{"gitId":"nonrnp"},"content":"                + \"Has S/U option: \" + (isSuAble() ? \"Yes\" : \"No\") + \"\\n\" + formattedDescription;","lastModifiedDate":"2021-11-05"},{"lineNumber":329,"author":{"gitId":"giterator"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":330,"author":{"gitId":"giterator"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":331,"author":{"gitId":"saravanamani1999"},"content":"}","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"giterator":76,"nonrnp":86,"powzx":1,"saravanamani1999":168}},{"path":"src/main/java/seedu/kolinux/module/ModuleList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"powzx"},"content":"package seedu.kolinux.module;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"giterator"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"giterator"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"giterator"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"saravanamani1999"},"content":"import static seedu.kolinux.commands.TimetableCommand.timetable;","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"giterator"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":7,"author":{"gitId":"giterator"},"content":"import static seedu.kolinux.module.Grade.RESET_GRADE;","lastModifiedDate":"2021-11-02"},{"lineNumber":8,"author":{"gitId":"giterator"},"content":"import static seedu.kolinux.module.Grade.RESET_GRADE_ARGUMENT;","lastModifiedDate":"2021-11-02"},{"lineNumber":9,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"giterator"},"content":"/**","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"giterator"},"content":" * ModuleList class contains and facilitate operations on the myModules list.","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"giterator"},"content":" */","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"giterator"},"content":"public class ModuleList {","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"giterator"},"content":"    public final String horizontalLine;","lastModifiedDate":"2021-11-01"},{"lineNumber":15,"author":{"gitId":"saravanamani1999"},"content":"    public ArrayList\u003cModuleDetails\u003e myModules \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-17"},{"lineNumber":16,"author":{"gitId":"giterator"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":17,"author":{"gitId":"giterator"},"content":"    public ArrayList\u003cModuleDetails\u003e getMyModules() {","lastModifiedDate":"2021-10-14"},{"lineNumber":18,"author":{"gitId":"giterator"},"content":"        return myModules;","lastModifiedDate":"2021-10-14"},{"lineNumber":19,"author":{"gitId":"giterator"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":20,"author":{"gitId":"giterator"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":21,"author":{"gitId":"giterator"},"content":"    public int getMyModulesSize() {","lastModifiedDate":"2021-10-14"},{"lineNumber":22,"author":{"gitId":"giterator"},"content":"        return myModules.size();","lastModifiedDate":"2021-10-14"},{"lineNumber":23,"author":{"gitId":"giterator"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":24,"author":{"gitId":"giterator"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":25,"author":{"gitId":"giterator"},"content":"    public void clear() {","lastModifiedDate":"2021-10-14"},{"lineNumber":26,"author":{"gitId":"giterator"},"content":"        myModules.clear();","lastModifiedDate":"2021-10-14"},{"lineNumber":27,"author":{"gitId":"giterator"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":28,"author":{"gitId":"giterator"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"giterator"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"giterator"},"content":"    public ModuleList() {","lastModifiedDate":"2021-11-01"},{"lineNumber":31,"author":{"gitId":"giterator"},"content":"        horizontalLine \u003d \"....................................................................\";","lastModifiedDate":"2021-11-01"},{"lineNumber":32,"author":{"gitId":"giterator"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":33,"author":{"gitId":"giterator"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":34,"author":{"gitId":"giterator"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"giterator"},"content":"     * Searches the myModules list for a module corresponding to the give moduleCode and returns its grade.","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"giterator"},"content":"     *","lastModifiedDate":"2021-11-01"},{"lineNumber":37,"author":{"gitId":"giterator"},"content":"     * @param moduleCode Module whose grade is to be returned","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"giterator"},"content":"     * @return Returns the grade of the module whose code is moduleCode if it exists in myModules. Returns null if the","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"giterator"},"content":"     *      module is not stored.","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"giterator"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":41,"author":{"gitId":"giterator"},"content":"    public String getModuleGrade(String moduleCode) {","lastModifiedDate":"2021-10-19"},{"lineNumber":42,"author":{"gitId":"giterator"},"content":"        for (ModuleDetails module : myModules) {","lastModifiedDate":"2021-10-19"},{"lineNumber":43,"author":{"gitId":"giterator"},"content":"            if (module.getModuleCode().equals(moduleCode)) {","lastModifiedDate":"2021-10-19"},{"lineNumber":44,"author":{"gitId":"giterator"},"content":"                return module.getGrade();","lastModifiedDate":"2021-10-19"},{"lineNumber":45,"author":{"gitId":"giterator"},"content":"            }","lastModifiedDate":"2021-10-19"},{"lineNumber":46,"author":{"gitId":"giterator"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":47,"author":{"gitId":"giterator"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":48,"author":{"gitId":"giterator"},"content":"        return null;","lastModifiedDate":"2021-10-19"},{"lineNumber":49,"author":{"gitId":"giterator"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":50,"author":{"gitId":"giterator"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":51,"author":{"gitId":"giterator"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":52,"author":{"gitId":"giterator"},"content":"     * Searches the myModules list for a module corresponding to the give moduleCode and updates its grade to the given","lastModifiedDate":"2021-10-19"},{"lineNumber":53,"author":{"gitId":"giterator"},"content":"     * grade.","lastModifiedDate":"2021-10-19"},{"lineNumber":54,"author":{"gitId":"giterator"},"content":"     *","lastModifiedDate":"2021-11-01"},{"lineNumber":55,"author":{"gitId":"giterator"},"content":"     * @param moduleCode Module whose grade is to be updated","lastModifiedDate":"2021-10-19"},{"lineNumber":56,"author":{"gitId":"giterator"},"content":"     * @param grade      New grade for the module whose code is moduleCode","lastModifiedDate":"2021-10-19"},{"lineNumber":57,"author":{"gitId":"giterator"},"content":"     * @return Returns an acknowledgement message if the grade is updated. Returns an error message if the moduleCode is","lastModifiedDate":"2021-10-19"},{"lineNumber":58,"author":{"gitId":"giterator"},"content":"     *      invalid","lastModifiedDate":"2021-10-19"},{"lineNumber":59,"author":{"gitId":"giterator"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":60,"author":{"gitId":"giterator"},"content":"    public String setModuleGrade(String moduleCode, String grade) {","lastModifiedDate":"2021-10-19"},{"lineNumber":61,"author":{"gitId":"giterator"},"content":"        for (ModuleDetails module : myModules) {","lastModifiedDate":"2021-10-19"},{"lineNumber":62,"author":{"gitId":"giterator"},"content":"            if (module.getModuleCode().equals(moduleCode)) {","lastModifiedDate":"2021-10-19"},{"lineNumber":63,"author":{"gitId":"giterator"},"content":"                if (grade.equals(RESET_GRADE_ARGUMENT) || grade.equals(RESET_GRADE)) {","lastModifiedDate":"2021-11-01"},{"lineNumber":64,"author":{"gitId":"nonrnp"},"content":"                    return module.resetGrade();","lastModifiedDate":"2021-11-01"},{"lineNumber":65,"author":{"gitId":"nonrnp"},"content":"                }","lastModifiedDate":"2021-11-01"},{"lineNumber":66,"author":{"gitId":"nonrnp"},"content":"                if (module.getGrade().equals(grade)) {","lastModifiedDate":"2021-11-03"},{"lineNumber":67,"author":{"gitId":"nonrnp"},"content":"                    return moduleCode + \" grade is already set to \" + grade;","lastModifiedDate":"2021-11-03"},{"lineNumber":68,"author":{"gitId":"nonrnp"},"content":"                }","lastModifiedDate":"2021-11-03"},{"lineNumber":69,"author":{"gitId":"giterator"},"content":"                module.setGrade(grade);","lastModifiedDate":"2021-10-19"},{"lineNumber":70,"author":{"gitId":"giterator"},"content":"                return moduleCode + \" grade set to \" + grade;","lastModifiedDate":"2021-10-19"},{"lineNumber":71,"author":{"gitId":"giterator"},"content":"            }","lastModifiedDate":"2021-10-19"},{"lineNumber":72,"author":{"gitId":"giterator"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":73,"author":{"gitId":"giterator"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":74,"author":{"gitId":"giterator"},"content":"        return moduleCode + \" not found in the list\";","lastModifiedDate":"2021-10-19"},{"lineNumber":75,"author":{"gitId":"giterator"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":76,"author":{"gitId":"giterator"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":77,"author":{"gitId":"giterator"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":78,"author":{"gitId":"giterator"},"content":"     * Stores the moduleDetails corresponding to a given module code in the myModules list.","lastModifiedDate":"2021-10-11"},{"lineNumber":79,"author":{"gitId":"giterator"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":80,"author":{"gitId":"giterator"},"content":"     * @param code Module code whose details will be stored","lastModifiedDate":"2021-10-11"},{"lineNumber":81,"author":{"gitId":"giterator"},"content":"     * @return Returns an acknowledgement message if store is successful. Returns an error message if the code is","lastModifiedDate":"2021-10-11"},{"lineNumber":82,"author":{"gitId":"giterator"},"content":"     *      invalid, or if it already exists in the list","lastModifiedDate":"2021-10-11"},{"lineNumber":83,"author":{"gitId":"giterator"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":84,"author":{"gitId":"giterator"},"content":"    public String addModuleByCode(String code, ModuleDb moduleDb) {","lastModifiedDate":"2021-11-02"},{"lineNumber":85,"author":{"gitId":"giterator"},"content":"        ModuleDetails mod \u003d moduleDb.getModuleInfo(code);","lastModifiedDate":"2021-10-14"},{"lineNumber":86,"author":{"gitId":"giterator"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":87,"author":{"gitId":"giterator"},"content":"        if (mod \u003d\u003d null) {","lastModifiedDate":"2021-10-11"},{"lineNumber":88,"author":{"gitId":"giterator"},"content":"            return \"Please enter a valid module code\";","lastModifiedDate":"2021-10-11"},{"lineNumber":89,"author":{"gitId":"giterator"},"content":"        } else if (myModules.contains(mod)) {","lastModifiedDate":"2021-10-11"},{"lineNumber":90,"author":{"gitId":"giterator"},"content":"            return mod.getModuleCode() + \" is already in the module list\";","lastModifiedDate":"2021-10-11"},{"lineNumber":91,"author":{"gitId":"giterator"},"content":"        } else {","lastModifiedDate":"2021-10-11"},{"lineNumber":92,"author":{"gitId":"giterator"},"content":"            myModules.add(mod);","lastModifiedDate":"2021-10-11"},{"lineNumber":93,"author":{"gitId":"giterator"},"content":"            return \"Successfully added module: \" + mod.getModuleCode();","lastModifiedDate":"2021-11-01"},{"lineNumber":94,"author":{"gitId":"giterator"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":95,"author":{"gitId":"giterator"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":96,"author":{"gitId":"giterator"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":97,"author":{"gitId":"giterator"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":98,"author":{"gitId":"giterator"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":99,"author":{"gitId":"giterator"},"content":"     * Deletes the moduleDetails corresponding to a given module code from the myModules list.","lastModifiedDate":"2021-10-11"},{"lineNumber":100,"author":{"gitId":"giterator"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":101,"author":{"gitId":"giterator"},"content":"     * @param code Module code whose details will be deleted","lastModifiedDate":"2021-10-11"},{"lineNumber":102,"author":{"gitId":"giterator"},"content":"     * @return Returns an acknowledgement message if deletion is successful. Returns an error message if the code is","lastModifiedDate":"2021-10-11"},{"lineNumber":103,"author":{"gitId":"giterator"},"content":"     *      invalid, or if it is not found in the list","lastModifiedDate":"2021-10-11"},{"lineNumber":104,"author":{"gitId":"giterator"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":105,"author":{"gitId":"giterator"},"content":"    public String deleteModuleByCode(String code) {","lastModifiedDate":"2021-10-14"},{"lineNumber":106,"author":{"gitId":"giterator"},"content":"        for (int i \u003d 0; i \u003c myModules.size(); i++) {","lastModifiedDate":"2021-10-11"},{"lineNumber":107,"author":{"gitId":"giterator"},"content":"            if (myModules.get(i).getModuleCode().equals(code)) {","lastModifiedDate":"2021-10-11"},{"lineNumber":108,"author":{"gitId":"giterator"},"content":"                myModules.get(i).setGrade(RESET_GRADE);","lastModifiedDate":"2021-11-01"},{"lineNumber":109,"author":{"gitId":"giterator"},"content":"                myModules.remove(i);","lastModifiedDate":"2021-10-11"},{"lineNumber":110,"author":{"gitId":"saravanamani1999"},"content":"                timetable.deleteByModuleList(code);","lastModifiedDate":"2021-10-22"},{"lineNumber":111,"author":{"gitId":"giterator"},"content":"                return \"Successfully deleted module: \" + code;","lastModifiedDate":"2021-10-11"},{"lineNumber":112,"author":{"gitId":"giterator"},"content":"            }","lastModifiedDate":"2021-10-11"},{"lineNumber":113,"author":{"gitId":"giterator"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":114,"author":{"gitId":"giterator"},"content":"        return code + \" not found in the module list\";","lastModifiedDate":"2021-10-11"},{"lineNumber":115,"author":{"gitId":"giterator"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":116,"author":{"gitId":"giterator"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":117,"author":{"gitId":"saravanamani1999"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":118,"author":{"gitId":"saravanamani1999"},"content":"     * Gets the exam date and time for a module.","lastModifiedDate":"2021-11-05"},{"lineNumber":119,"author":{"gitId":"saravanamani1999"},"content":"     *","lastModifiedDate":"2021-11-05"},{"lineNumber":120,"author":{"gitId":"saravanamani1999"},"content":"     * @param module Module details containing all module information","lastModifiedDate":"2021-11-05"},{"lineNumber":121,"author":{"gitId":"saravanamani1999"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":122,"author":{"gitId":"saravanamani1999"},"content":"    public void getExamDateTime(ModuleDetails module) {","lastModifiedDate":"2021-10-30"},{"lineNumber":123,"author":{"gitId":"saravanamani1999"},"content":"        String examDate \u003d module.getDate();","lastModifiedDate":"2021-10-30"},{"lineNumber":124,"author":{"gitId":"saravanamani1999"},"content":"        String examStartTime \u003d module.getStartTime();","lastModifiedDate":"2021-10-30"},{"lineNumber":125,"author":{"gitId":"saravanamani1999"},"content":"        String examEndTime \u003d module.getEndTime();","lastModifiedDate":"2021-10-30"},{"lineNumber":126,"author":{"gitId":"saravanamani1999"},"content":"        if (examDate !\u003d null \u0026\u0026 examStartTime !\u003d null \u0026\u0026 examEndTime !\u003d null) {","lastModifiedDate":"2021-10-30"},{"lineNumber":127,"author":{"gitId":"saravanamani1999"},"content":"            System.out.println(\"Exam date: \" + examDate);","lastModifiedDate":"2021-10-30"},{"lineNumber":128,"author":{"gitId":"saravanamani1999"},"content":"            System.out.println(\"Exam time: \" + examStartTime + \" - \" + examEndTime);","lastModifiedDate":"2021-10-30"},{"lineNumber":129,"author":{"gitId":"saravanamani1999"},"content":"        } else {","lastModifiedDate":"2021-10-30"},{"lineNumber":130,"author":{"gitId":"saravanamani1999"},"content":"            System.out.println(\"No exam\");","lastModifiedDate":"2021-10-30"},{"lineNumber":131,"author":{"gitId":"saravanamani1999"},"content":"        }","lastModifiedDate":"2021-10-30"},{"lineNumber":132,"author":{"gitId":"saravanamani1999"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":133,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":134,"author":{"gitId":"saravanamani1999"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":135,"author":{"gitId":"saravanamani1999"},"content":"     * Gets the workload for each specific lesson type of module code.","lastModifiedDate":"2021-11-05"},{"lineNumber":136,"author":{"gitId":"saravanamani1999"},"content":"     *","lastModifiedDate":"2021-11-05"},{"lineNumber":137,"author":{"gitId":"saravanamani1999"},"content":"     * @param module Module details containing all module information","lastModifiedDate":"2021-11-05"},{"lineNumber":138,"author":{"gitId":"saravanamani1999"},"content":"     * @param code Module code of module","lastModifiedDate":"2021-11-05"},{"lineNumber":139,"author":{"gitId":"saravanamani1999"},"content":"     * @param title Title of module","lastModifiedDate":"2021-11-05"},{"lineNumber":140,"author":{"gitId":"saravanamani1999"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":141,"author":{"gitId":"saravanamani1999"},"content":"    public void getWorkload(ModuleDetails module, String code, String title) {","lastModifiedDate":"2021-10-30"},{"lineNumber":142,"author":{"gitId":"saravanamani1999"},"content":"        double lectureHours \u003d module.getLectureHours();","lastModifiedDate":"2021-10-15"},{"lineNumber":143,"author":{"gitId":"saravanamani1999"},"content":"        System.out.println(code + \" \" + title + \"\\n\\nWorkload:\");","lastModifiedDate":"2021-10-15"},{"lineNumber":144,"author":{"gitId":"saravanamani1999"},"content":"        if (lectureHours \u003e 0) {","lastModifiedDate":"2021-10-24"},{"lineNumber":145,"author":{"gitId":"saravanamani1999"},"content":"            System.out.println(\"Lecture: \" + lectureHours + \" hours\");","lastModifiedDate":"2021-10-15"},{"lineNumber":146,"author":{"gitId":"giterator"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":147,"author":{"gitId":"saravanamani1999"},"content":"        double tutorialHours \u003d module.getTutorialHours();","lastModifiedDate":"2021-10-16"},{"lineNumber":148,"author":{"gitId":"saravanamani1999"},"content":"        if (tutorialHours \u003e 0) {","lastModifiedDate":"2021-10-24"},{"lineNumber":149,"author":{"gitId":"saravanamani1999"},"content":"            System.out.println(\"Tutorial: \" + tutorialHours + \" hours\");","lastModifiedDate":"2021-10-15"},{"lineNumber":150,"author":{"gitId":"saravanamani1999"},"content":"        }","lastModifiedDate":"2021-10-15"},{"lineNumber":151,"author":{"gitId":"saravanamani1999"},"content":"        double labHours \u003d module.getLabHours();","lastModifiedDate":"2021-10-16"},{"lineNumber":152,"author":{"gitId":"saravanamani1999"},"content":"        if (labHours \u003e 0) {","lastModifiedDate":"2021-10-24"},{"lineNumber":153,"author":{"gitId":"saravanamani1999"},"content":"            System.out.println(\"Lab: \" + labHours + \" hours\");","lastModifiedDate":"2021-10-15"},{"lineNumber":154,"author":{"gitId":"saravanamani1999"},"content":"        }","lastModifiedDate":"2021-10-15"},{"lineNumber":155,"author":{"gitId":"saravanamani1999"},"content":"        double projectHours \u003d module.getProjectHours();","lastModifiedDate":"2021-10-16"},{"lineNumber":156,"author":{"gitId":"saravanamani1999"},"content":"        if (projectHours \u003e 0) {","lastModifiedDate":"2021-10-24"},{"lineNumber":157,"author":{"gitId":"saravanamani1999"},"content":"            System.out.println(\"Project Work: \" + projectHours + \" hours\");","lastModifiedDate":"2021-10-15"},{"lineNumber":158,"author":{"gitId":"saravanamani1999"},"content":"        }","lastModifiedDate":"2021-10-15"},{"lineNumber":159,"author":{"gitId":"saravanamani1999"},"content":"        double preparationHours \u003d module.getPreparationHours();","lastModifiedDate":"2021-10-16"},{"lineNumber":160,"author":{"gitId":"saravanamani1999"},"content":"        if (preparationHours \u003e 0) {","lastModifiedDate":"2021-10-24"},{"lineNumber":161,"author":{"gitId":"saravanamani1999"},"content":"            System.out.println(\"Preparation: \" + preparationHours + \" hours\");","lastModifiedDate":"2021-10-15"},{"lineNumber":162,"author":{"gitId":"saravanamani1999"},"content":"        }","lastModifiedDate":"2021-10-15"},{"lineNumber":163,"author":{"gitId":"saravanamani1999"},"content":"        if (preparationHours \u003c 0 \u0026\u0026 projectHours \u003c 0 \u0026\u0026 labHours \u003c 0 \u0026\u0026 tutorialHours \u003c 0 \u0026\u0026 lectureHours \u003c 0) {","lastModifiedDate":"2021-10-26"},{"lineNumber":164,"author":{"gitId":"saravanamani1999"},"content":"            System.out.println(\"No workload information available for \" + code);","lastModifiedDate":"2021-10-26"},{"lineNumber":165,"author":{"gitId":"saravanamani1999"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":166,"author":{"gitId":"saravanamani1999"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":167,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":168,"author":{"gitId":"saravanamani1999"},"content":"    /**","lastModifiedDate":"2021-10-30"},{"lineNumber":169,"author":{"gitId":"saravanamani1999"},"content":"     * Prints codes and titles of each module stored in the myModules list.","lastModifiedDate":"2021-10-30"},{"lineNumber":170,"author":{"gitId":"saravanamani1999"},"content":"     */","lastModifiedDate":"2021-10-30"},{"lineNumber":171,"author":{"gitId":"saravanamani1999"},"content":"    public void listMyModules() {","lastModifiedDate":"2021-10-30"},{"lineNumber":172,"author":{"gitId":"saravanamani1999"},"content":"        for (ModuleDetails module : myModules) {","lastModifiedDate":"2021-10-30"},{"lineNumber":173,"author":{"gitId":"saravanamani1999"},"content":"            String code \u003d module.getModuleCode();","lastModifiedDate":"2021-10-30"},{"lineNumber":174,"author":{"gitId":"saravanamani1999"},"content":"            String title \u003d module.getTitle();","lastModifiedDate":"2021-10-30"},{"lineNumber":175,"author":{"gitId":"saravanamani1999"},"content":"            getWorkload(module, code, title);","lastModifiedDate":"2021-10-30"},{"lineNumber":176,"author":{"gitId":"saravanamani1999"},"content":"            getExamDateTime(module);","lastModifiedDate":"2021-10-30"},{"lineNumber":177,"author":{"gitId":"nonrnp"},"content":"            String grade \u003d module.getGrade();","lastModifiedDate":"2021-10-20"},{"lineNumber":178,"author":{"gitId":"giterator"},"content":"            if (grade.equals(RESET_GRADE)) {","lastModifiedDate":"2021-11-01"},{"lineNumber":179,"author":{"gitId":"nonrnp"},"content":"                System.out.println(\"Final grade: N/A\");","lastModifiedDate":"2021-10-20"},{"lineNumber":180,"author":{"gitId":"nonrnp"},"content":"            } else {","lastModifiedDate":"2021-10-20"},{"lineNumber":181,"author":{"gitId":"nonrnp"},"content":"                System.out.println(\"Final grade: \" + grade);","lastModifiedDate":"2021-10-20"},{"lineNumber":182,"author":{"gitId":"nonrnp"},"content":"            }","lastModifiedDate":"2021-10-20"},{"lineNumber":183,"author":{"gitId":"giterator"},"content":"            System.out.println(horizontalLine);","lastModifiedDate":"2021-10-25"},{"lineNumber":184,"author":{"gitId":"saravanamani1999"},"content":"        }","lastModifiedDate":"2021-10-15"},{"lineNumber":185,"author":{"gitId":"saravanamani1999"},"content":"        System.out.print(\"Remember to add the module\u0027s lessons to the timetable based on the workload\");","lastModifiedDate":"2021-10-15"},{"lineNumber":186,"author":{"gitId":"giterator"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":187,"author":{"gitId":"giterator"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"giterator":111,"nonrnp":10,"powzx":1,"saravanamani1999":65}},{"path":"src/main/java/seedu/kolinux/module/ModuleListStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"giterator"},"content":"package seedu.kolinux.module;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"giterator"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"giterator"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"giterator"},"content":"import seedu.kolinux.commands.ModuleCommand;","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"giterator"},"content":"import seedu.kolinux.exceptions.KolinuxException;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"giterator"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"giterator"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"giterator"},"content":"import java.io.File;","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"giterator"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"giterator"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"giterator"},"content":"import java.util.NoSuchElementException;","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"giterator"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"giterator"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"giterator"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"giterator"},"content":"import static seedu.kolinux.commands.ModuleCommand.STORE_SUBCOMMAND;","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"giterator"},"content":"import static seedu.kolinux.commands.ModuleCommand.SET_GRADE_SUBCOMMAND;","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"giterator"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"giterator"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"giterator"},"content":"/**","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"giterator"},"content":" * ModuleListStorage class facilitates loading tasks from the file and saving tasks in the file.","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"giterator"},"content":" */","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"giterator"},"content":"public class ModuleListStorage {","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"giterator"},"content":"    private static final String STORAGE_PATH \u003d \"./data/moduleList.txt\";","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"giterator"},"content":"    private static final int FILE_ERROR_EXIT_CODE \u003d 0;","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"giterator"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"giterator"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"giterator"},"content":"     * Loads stored modules from file.","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"giterator"},"content":"     *","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"giterator"},"content":"     * @param storedModules File at STORAGE_PATH","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"giterator"},"content":"     * @throws FileNotFoundException If the file at STORAGE_PATH does not exist","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"giterator"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"giterator"},"content":"    private static void loadStoredModules(File storedModules)","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"giterator"},"content":"            throws FileNotFoundException {","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"giterator"},"content":"        Scanner scanner \u003d new Scanner(storedModules);","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"giterator"},"content":"        try {","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"giterator"},"content":"            scanner.nextLine();","lastModifiedDate":"2021-10-19"},{"lineNumber":37,"author":{"gitId":"giterator"},"content":"        } catch (NoSuchElementException e) {","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"giterator"},"content":"            System.out.println(STORAGE_PATH + \" is empty\");","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"giterator"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"giterator"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":41,"author":{"gitId":"giterator"},"content":"        while (scanner.hasNextLine()) {","lastModifiedDate":"2021-10-19"},{"lineNumber":42,"author":{"gitId":"giterator"},"content":"            String line \u003d scanner.nextLine();","lastModifiedDate":"2021-10-19"},{"lineNumber":43,"author":{"gitId":"giterator"},"content":"            String[] parsedArguments \u003d line.split(\"/\");","lastModifiedDate":"2021-10-19"},{"lineNumber":44,"author":{"gitId":"giterator"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":45,"author":{"gitId":"giterator"},"content":"            try {","lastModifiedDate":"2021-10-19"},{"lineNumber":46,"author":{"gitId":"giterator"},"content":"                ModuleCommand storeCommand \u003d new ModuleCommand(STORE_SUBCOMMAND, parsedArguments);","lastModifiedDate":"2021-10-19"},{"lineNumber":47,"author":{"gitId":"giterator"},"content":"                storeCommand.executeCommand();","lastModifiedDate":"2021-10-19"},{"lineNumber":48,"author":{"gitId":"giterator"},"content":"                ModuleCommand gradeCommand \u003d new ModuleCommand(SET_GRADE_SUBCOMMAND, parsedArguments);","lastModifiedDate":"2021-10-19"},{"lineNumber":49,"author":{"gitId":"giterator"},"content":"                gradeCommand.executeCommand();","lastModifiedDate":"2021-10-19"},{"lineNumber":50,"author":{"gitId":"giterator"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":51,"author":{"gitId":"giterator"},"content":"            } catch (KolinuxException exception) {","lastModifiedDate":"2021-10-19"},{"lineNumber":52,"author":{"gitId":"giterator"},"content":"                System.out.println(STORAGE_PATH + \" is corrupted. Please delete moduleList.txt and restart \"","lastModifiedDate":"2021-10-19"},{"lineNumber":53,"author":{"gitId":"giterator"},"content":"                        + \"the program.\");","lastModifiedDate":"2021-10-19"},{"lineNumber":54,"author":{"gitId":"giterator"},"content":"                System.exit(FILE_ERROR_EXIT_CODE);","lastModifiedDate":"2021-10-19"},{"lineNumber":55,"author":{"gitId":"giterator"},"content":"            }","lastModifiedDate":"2021-10-19"},{"lineNumber":56,"author":{"gitId":"giterator"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":57,"author":{"gitId":"giterator"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":58,"author":{"gitId":"giterator"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":59,"author":{"gitId":"giterator"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":60,"author":{"gitId":"giterator"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":61,"author":{"gitId":"giterator"},"content":"     * Loads pre-existing modules from file at STORAGE_PATH or creates a new file if it does not exist.","lastModifiedDate":"2021-10-19"},{"lineNumber":62,"author":{"gitId":"giterator"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":63,"author":{"gitId":"giterator"},"content":"    public static void setupStorage() {","lastModifiedDate":"2021-10-19"},{"lineNumber":64,"author":{"gitId":"giterator"},"content":"        try {","lastModifiedDate":"2021-10-19"},{"lineNumber":65,"author":{"gitId":"giterator"},"content":"            File storedModules \u003d new File(STORAGE_PATH);","lastModifiedDate":"2021-10-19"},{"lineNumber":66,"author":{"gitId":"giterator"},"content":"            if (!storedModules.createNewFile()) {","lastModifiedDate":"2021-10-19"},{"lineNumber":67,"author":{"gitId":"nonrnp"},"content":"                System.out.println(\"Data loaded from \" + STORAGE_PATH);","lastModifiedDate":"2021-10-24"},{"lineNumber":68,"author":{"gitId":"giterator"},"content":"                loadStoredModules(storedModules);","lastModifiedDate":"2021-10-19"},{"lineNumber":69,"author":{"gitId":"giterator"},"content":"            }","lastModifiedDate":"2021-10-19"},{"lineNumber":70,"author":{"gitId":"giterator"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-10-19"},{"lineNumber":71,"author":{"gitId":"giterator"},"content":"            System.out.println(\"An error in reading \" + STORAGE_PATH + \" occurred.\");","lastModifiedDate":"2021-10-19"},{"lineNumber":72,"author":{"gitId":"giterator"},"content":"            System.exit(FILE_ERROR_EXIT_CODE);","lastModifiedDate":"2021-10-19"},{"lineNumber":73,"author":{"gitId":"giterator"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-10-19"},{"lineNumber":74,"author":{"gitId":"giterator"},"content":"            System.out.println(\"An error in creating \" + STORAGE_PATH + \" occurred.\");","lastModifiedDate":"2021-10-19"},{"lineNumber":75,"author":{"gitId":"giterator"},"content":"            System.exit(FILE_ERROR_EXIT_CODE);","lastModifiedDate":"2021-10-19"},{"lineNumber":76,"author":{"gitId":"giterator"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":77,"author":{"gitId":"giterator"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":78,"author":{"gitId":"giterator"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":79,"author":{"gitId":"giterator"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":80,"author":{"gitId":"giterator"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":81,"author":{"gitId":"giterator"},"content":"     * Overwrites the file at STORAGE_PATH with the ModuleDetails from the myModules list in the given ModuleList class.","lastModifiedDate":"2021-10-19"},{"lineNumber":82,"author":{"gitId":"giterator"},"content":"     *","lastModifiedDate":"2021-10-19"},{"lineNumber":83,"author":{"gitId":"giterator"},"content":"     * @param moduleList List of ModuleDetails to be stored in STORAGE_PATH","lastModifiedDate":"2021-10-19"},{"lineNumber":84,"author":{"gitId":"giterator"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":85,"author":{"gitId":"giterator"},"content":"    public static void writeModulesToFile(ModuleList moduleList) {","lastModifiedDate":"2021-10-19"},{"lineNumber":86,"author":{"gitId":"giterator"},"content":"        try {","lastModifiedDate":"2021-10-19"},{"lineNumber":87,"author":{"gitId":"giterator"},"content":"            FileWriter fw \u003d new FileWriter(STORAGE_PATH, false);","lastModifiedDate":"2021-10-19"},{"lineNumber":88,"author":{"gitId":"giterator"},"content":"            ArrayList\u003cModuleDetails\u003e inputModules \u003d moduleList.getMyModules();","lastModifiedDate":"2021-10-19"},{"lineNumber":89,"author":{"gitId":"giterator"},"content":"            for (ModuleDetails module : inputModules) {","lastModifiedDate":"2021-10-19"},{"lineNumber":90,"author":{"gitId":"giterator"},"content":"                fw.write(\u0027\\n\u0027 + module.getEncodedFormat());","lastModifiedDate":"2021-10-19"},{"lineNumber":91,"author":{"gitId":"giterator"},"content":"            }","lastModifiedDate":"2021-10-19"},{"lineNumber":92,"author":{"gitId":"giterator"},"content":"            fw.close();","lastModifiedDate":"2021-10-19"},{"lineNumber":93,"author":{"gitId":"giterator"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-10-19"},{"lineNumber":94,"author":{"gitId":"giterator"},"content":"            System.out.println(STORAGE_PATH + \" can\u0027t be overwritten. Changes will be lost when the program is closed\");","lastModifiedDate":"2021-10-19"},{"lineNumber":95,"author":{"gitId":"giterator"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":96,"author":{"gitId":"giterator"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":97,"author":{"gitId":"giterator"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":98,"author":{"gitId":"giterator"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"giterator":97,"nonrnp":1}},{"path":"src/main/java/seedu/kolinux/planner/Event.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"powzx"},"content":"package seedu.kolinux.planner;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"powzx"},"content":"import seedu.kolinux.exceptions.KolinuxException;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"powzx"},"content":"import seedu.kolinux.util.Parser;","lastModifiedDate":"2021-11-05"},{"lineNumber":5,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"powzx"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"powzx"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"powzx"},"content":"/** Represents an event in the schedule. */","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"powzx"},"content":"public class Event {","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"powzx"},"content":"    private static final String COLON \u003d \":\";","lastModifiedDate":"2021-10-14"},{"lineNumber":13,"author":{"gitId":"powzx"},"content":"    private static final String EMPTY_STRING \u003d \"\";","lastModifiedDate":"2021-10-14"},{"lineNumber":14,"author":{"gitId":"powzx"},"content":"    // Pipe character padded with any number of white spaces","lastModifiedDate":"2021-11-03"},{"lineNumber":15,"author":{"gitId":"powzx"},"content":"    private static final String DATA_DELIMITER_REGEX \u003d \"\\\\s*\\\\|\\\\s*\";","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"powzx"},"content":"    private static final String PIPE \u003d \"|\";","lastModifiedDate":"2021-10-14"},{"lineNumber":17,"author":{"gitId":"powzx"},"content":"    private static final int EVENT_ARGUMENTS_LENGTH \u003d 4;","lastModifiedDate":"2021-10-30"},{"lineNumber":18,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":19,"author":{"gitId":"powzx"},"content":"    private static int currentEventId \u003d 0;","lastModifiedDate":"2021-10-15"},{"lineNumber":20,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":21,"author":{"gitId":"powzx"},"content":"    private String description;","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"powzx"},"content":"    private LocalDate date;","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"powzx"},"content":"    private LocalTime startTime;","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"powzx"},"content":"    private LocalTime endTime;","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"powzx"},"content":"    private int id;","lastModifiedDate":"2021-10-15"},{"lineNumber":26,"author":{"gitId":"powzx"},"content":"    private boolean isLesson \u003d false;","lastModifiedDate":"2021-10-18"},{"lineNumber":27,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"powzx"},"content":"    private static final String EMPTY_DESCRIPTION_ERROR \u003d","lastModifiedDate":"2021-10-28"},{"lineNumber":29,"author":{"gitId":"powzx"},"content":"            \"Please provide a description for your event!\";","lastModifiedDate":"2021-10-28"},{"lineNumber":30,"author":{"gitId":"powzx"},"content":"    private static final String TIME_ORDER_ERROR \u003d","lastModifiedDate":"2021-10-14"},{"lineNumber":31,"author":{"gitId":"powzx"},"content":"            \"Please check the format of the time! The end time is earlier than the start time...\";","lastModifiedDate":"2021-10-14"},{"lineNumber":32,"author":{"gitId":"powzx"},"content":"    private static final String TIME_SAME_ERROR \u003d","lastModifiedDate":"2021-10-30"},{"lineNumber":33,"author":{"gitId":"powzx"},"content":"            \"Your event cannot start and end at the same time!\";","lastModifiedDate":"2021-10-30"},{"lineNumber":34,"author":{"gitId":"powzx"},"content":"    private static final String FORMAT_ERROR \u003d","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"powzx"},"content":"            \"Please check the format of your input! Format: planner add DESCRIPTION/DATE/START_TIME/END_TIME\";","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"powzx"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":38,"author":{"gitId":"powzx"},"content":"     * Constructs an event using the arguments given in the user input.","lastModifiedDate":"2021-10-10"},{"lineNumber":39,"author":{"gitId":"powzx"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":40,"author":{"gitId":"powzx"},"content":"     * @param parsedArguments Array of information of an event","lastModifiedDate":"2021-10-10"},{"lineNumber":41,"author":{"gitId":"powzx"},"content":"     * @throws KolinuxException If any of the information required is missing or in incorrect format.","lastModifiedDate":"2021-10-10"},{"lineNumber":42,"author":{"gitId":"powzx"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":43,"author":{"gitId":"powzx"},"content":"    public Event(String[] parsedArguments) throws KolinuxException {","lastModifiedDate":"2021-10-05"},{"lineNumber":44,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":45,"author":{"gitId":"powzx"},"content":"        if (parsedArguments.length !\u003d EVENT_ARGUMENTS_LENGTH) {","lastModifiedDate":"2021-10-30"},{"lineNumber":46,"author":{"gitId":"powzx"},"content":"            throw new KolinuxException(FORMAT_ERROR);","lastModifiedDate":"2021-10-30"},{"lineNumber":47,"author":{"gitId":"powzx"},"content":"        }","lastModifiedDate":"2021-10-30"},{"lineNumber":48,"author":{"gitId":"powzx"},"content":"        if (parsedArguments[0].isEmpty()) {","lastModifiedDate":"2021-11-05"},{"lineNumber":49,"author":{"gitId":"powzx"},"content":"            throw new KolinuxException(EMPTY_DESCRIPTION_ERROR);","lastModifiedDate":"2021-11-05"},{"lineNumber":50,"author":{"gitId":"powzx"},"content":"        }","lastModifiedDate":"2021-11-05"},{"lineNumber":51,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":52,"author":{"gitId":"powzx"},"content":"        this.description \u003d parsedArguments[0];","lastModifiedDate":"2021-10-05"},{"lineNumber":53,"author":{"gitId":"powzx"},"content":"        this.date \u003d Parser.verifyDate(parsedArguments[1]);","lastModifiedDate":"2021-11-05"},{"lineNumber":54,"author":{"gitId":"powzx"},"content":"        this.startTime \u003d Parser.verifyTime(parsedArguments[2]);","lastModifiedDate":"2021-11-05"},{"lineNumber":55,"author":{"gitId":"powzx"},"content":"        this.endTime \u003d Parser.verifyTime(parsedArguments[3]);","lastModifiedDate":"2021-11-05"},{"lineNumber":56,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":57,"author":{"gitId":"powzx"},"content":"        if (startTime.compareTo(endTime) \u003e 0) {","lastModifiedDate":"2021-10-14"},{"lineNumber":58,"author":{"gitId":"powzx"},"content":"            throw new KolinuxException(TIME_ORDER_ERROR);","lastModifiedDate":"2021-10-14"},{"lineNumber":59,"author":{"gitId":"powzx"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":60,"author":{"gitId":"powzx"},"content":"        if (startTime.equals(endTime)) {","lastModifiedDate":"2021-10-30"},{"lineNumber":61,"author":{"gitId":"powzx"},"content":"            throw new KolinuxException(TIME_SAME_ERROR);","lastModifiedDate":"2021-10-30"},{"lineNumber":62,"author":{"gitId":"powzx"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":63,"author":{"gitId":"powzx"},"content":"        this.id \u003d currentEventId++;","lastModifiedDate":"2021-10-30"},{"lineNumber":64,"author":{"gitId":"powzx"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":65,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":66,"author":{"gitId":"powzx"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":67,"author":{"gitId":"powzx"},"content":"     * Constructs an event using the data read from planner.txt. This constructor is only called to","lastModifiedDate":"2021-10-10"},{"lineNumber":68,"author":{"gitId":"powzx"},"content":"     * add previously saved events in planner.txt to the current active list.","lastModifiedDate":"2021-10-10"},{"lineNumber":69,"author":{"gitId":"powzx"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":70,"author":{"gitId":"powzx"},"content":"     * @param data Data line read from the file","lastModifiedDate":"2021-10-10"},{"lineNumber":71,"author":{"gitId":"powzx"},"content":"     * @throws KolinuxException If the data line is corrupted","lastModifiedDate":"2021-10-10"},{"lineNumber":72,"author":{"gitId":"powzx"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":73,"author":{"gitId":"powzx"},"content":"    public Event(String data) throws KolinuxException {","lastModifiedDate":"2021-10-08"},{"lineNumber":74,"author":{"gitId":"powzx"},"content":"        this(data.split(DATA_DELIMITER_REGEX));","lastModifiedDate":"2021-10-26"},{"lineNumber":75,"author":{"gitId":"powzx"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":76,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":77,"author":{"gitId":"powzx"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":78,"author":{"gitId":"powzx"},"content":"     * This method is called only when constructing an Event from a given Lesson. Otherwise, the","lastModifiedDate":"2021-10-18"},{"lineNumber":79,"author":{"gitId":"powzx"},"content":"     * default value of isLesson is false upon construction of this object.","lastModifiedDate":"2021-10-18"},{"lineNumber":80,"author":{"gitId":"powzx"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":81,"author":{"gitId":"powzx"},"content":"    public void setIsLesson() {","lastModifiedDate":"2021-10-18"},{"lineNumber":82,"author":{"gitId":"powzx"},"content":"        this.isLesson \u003d true;","lastModifiedDate":"2021-10-18"},{"lineNumber":83,"author":{"gitId":"powzx"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":84,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":85,"author":{"gitId":"powzx"},"content":"    public boolean getIsLesson() {","lastModifiedDate":"2021-10-18"},{"lineNumber":86,"author":{"gitId":"powzx"},"content":"        return this.isLesson;","lastModifiedDate":"2021-10-18"},{"lineNumber":87,"author":{"gitId":"powzx"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":88,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":89,"author":{"gitId":"powzx"},"content":"    public String getDate() {","lastModifiedDate":"2021-10-06"},{"lineNumber":90,"author":{"gitId":"powzx"},"content":"        return date.toString();","lastModifiedDate":"2021-10-06"},{"lineNumber":91,"author":{"gitId":"powzx"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":92,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":93,"author":{"gitId":"powzx"},"content":"    public String getStartTime() {","lastModifiedDate":"2021-10-14"},{"lineNumber":94,"author":{"gitId":"powzx"},"content":"        return startTime.toString().replace(COLON, EMPTY_STRING);","lastModifiedDate":"2021-10-14"},{"lineNumber":95,"author":{"gitId":"powzx"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":96,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":97,"author":{"gitId":"powzx"},"content":"    public String getEndTime() {","lastModifiedDate":"2021-10-14"},{"lineNumber":98,"author":{"gitId":"powzx"},"content":"        return endTime.toString().replace(COLON, EMPTY_STRING);","lastModifiedDate":"2021-10-14"},{"lineNumber":99,"author":{"gitId":"powzx"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":100,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":101,"author":{"gitId":"powzx"},"content":"    public String getId() {","lastModifiedDate":"2021-10-15"},{"lineNumber":102,"author":{"gitId":"powzx"},"content":"        return Integer.toString(id);","lastModifiedDate":"2021-10-15"},{"lineNumber":103,"author":{"gitId":"powzx"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":104,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":105,"author":{"gitId":"powzx"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":106,"author":{"gitId":"powzx"},"content":"     * Converts the event to a data string that is stored in planner.txt.","lastModifiedDate":"2021-10-10"},{"lineNumber":107,"author":{"gitId":"powzx"},"content":"     * Note: This string is different from the one displayed to the user on the user interface.","lastModifiedDate":"2021-10-10"},{"lineNumber":108,"author":{"gitId":"powzx"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":109,"author":{"gitId":"powzx"},"content":"     * @return Data string","lastModifiedDate":"2021-10-10"},{"lineNumber":110,"author":{"gitId":"powzx"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":111,"author":{"gitId":"powzx"},"content":"    public String toData() {","lastModifiedDate":"2021-10-05"},{"lineNumber":112,"author":{"gitId":"powzx"},"content":"        return description + PIPE + date.toString() + PIPE + getStartTime() + PIPE + getEndTime();","lastModifiedDate":"2021-10-15"},{"lineNumber":113,"author":{"gitId":"powzx"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":114,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":115,"author":{"gitId":"powzx"},"content":"    public String toString() {","lastModifiedDate":"2021-10-06"},{"lineNumber":116,"author":{"gitId":"powzx"},"content":"        assert startTime.compareTo(endTime) \u003c 0;","lastModifiedDate":"2021-11-04"},{"lineNumber":117,"author":{"gitId":"powzx"},"content":"        return startTime + \" - \" + endTime + \" \" + description;","lastModifiedDate":"2021-10-06"},{"lineNumber":118,"author":{"gitId":"powzx"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":119,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":120,"author":{"gitId":"powzx"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":121,"author":{"gitId":"powzx"},"content":"     * Prints the string representation of this object with ID.","lastModifiedDate":"2021-10-18"},{"lineNumber":122,"author":{"gitId":"powzx"},"content":"     *","lastModifiedDate":"2021-10-18"},{"lineNumber":123,"author":{"gitId":"powzx"},"content":"     * @return String representation with ID","lastModifiedDate":"2021-10-18"},{"lineNumber":124,"author":{"gitId":"powzx"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":125,"author":{"gitId":"powzx"},"content":"    public String toStringWithId() {","lastModifiedDate":"2021-10-15"},{"lineNumber":126,"author":{"gitId":"powzx"},"content":"        return this + \" (id: \" + id + \")\";","lastModifiedDate":"2021-10-15"},{"lineNumber":127,"author":{"gitId":"powzx"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":128,"author":{"gitId":"powzx"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"powzx":128}},{"path":"src/main/java/seedu/kolinux/planner/ExamsGetter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"powzx"},"content":"package seedu.kolinux.planner;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"powzx"},"content":"import seedu.kolinux.exceptions.KolinuxException;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"powzx"},"content":"import seedu.kolinux.module.ModuleDetails;","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"powzx"},"content":"import seedu.kolinux.module.ModuleList;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"powzx"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"powzx"},"content":"/** Represents the methods to fetch exams data from the module list. */","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"powzx"},"content":"public class ExamsGetter {","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"powzx"},"content":"    private ArrayList\u003cEvent\u003e exams \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"powzx"},"content":"    private ModuleList moduleList;","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"powzx"},"content":"    private static final int EVENT_ARGUMENTS \u003d 4;","lastModifiedDate":"2021-11-03"},{"lineNumber":16,"author":{"gitId":"powzx"},"content":"    private static final String FATAL_ERROR \u003d \"Fatal error occurred, please restart Kolinux.\";","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"powzx"},"content":"    private static final String COLON \u003d \":\";","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"powzx"},"content":"    private static final String EMPTY_STRING \u003d \"\";","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"powzx"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"powzx"},"content":"     * Constructed when user needs to perform add, list, or delete operations in planner. Hence, the","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"powzx"},"content":"     * module list will always be updated with the latest version.","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"powzx"},"content":"     *","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"powzx"},"content":"     * @param moduleList Module list stored by the user","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"powzx"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"powzx"},"content":"    public ExamsGetter(ModuleList moduleList) {","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"powzx"},"content":"        this.moduleList \u003d moduleList;","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"powzx"},"content":"        retrieveModuleExams();","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"powzx"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"powzx"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"powzx"},"content":"     * Iterates through the module list stored by the user and creates an event from each exam information found","lastModifiedDate":"2021-11-04"},{"lineNumber":33,"author":{"gitId":"powzx"},"content":"     * if any. This event is added to the exams list. Hence, at the end of this method, exams will be populated","lastModifiedDate":"2021-11-04"},{"lineNumber":34,"author":{"gitId":"powzx"},"content":"     * with events that are created by the exam information of all modules stored by the user.","lastModifiedDate":"2021-11-04"},{"lineNumber":35,"author":{"gitId":"powzx"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"powzx"},"content":"    private void retrieveModuleExams() {","lastModifiedDate":"2021-10-19"},{"lineNumber":37,"author":{"gitId":"powzx"},"content":"        String[] arguments \u003d new String[EVENT_ARGUMENTS];","lastModifiedDate":"2021-11-03"},{"lineNumber":38,"author":{"gitId":"powzx"},"content":"        for (ModuleDetails module : moduleList.getMyModules()) {","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"powzx"},"content":"            // for modules that do not have an official final exam","lastModifiedDate":"2021-11-04"},{"lineNumber":40,"author":{"gitId":"powzx"},"content":"            if (module.getExamDateTime() \u003d\u003d null) {","lastModifiedDate":"2021-10-19"},{"lineNumber":41,"author":{"gitId":"powzx"},"content":"                continue;","lastModifiedDate":"2021-10-19"},{"lineNumber":42,"author":{"gitId":"powzx"},"content":"            }","lastModifiedDate":"2021-10-19"},{"lineNumber":43,"author":{"gitId":"powzx"},"content":"            arguments[0] \u003d module.getModuleCode() + \" Exam\";","lastModifiedDate":"2021-10-19"},{"lineNumber":44,"author":{"gitId":"powzx"},"content":"            arguments[1] \u003d module.getDate();","lastModifiedDate":"2021-10-19"},{"lineNumber":45,"author":{"gitId":"powzx"},"content":"            arguments[2] \u003d module.getStartTime().replaceFirst(COLON, EMPTY_STRING);","lastModifiedDate":"2021-10-19"},{"lineNumber":46,"author":{"gitId":"powzx"},"content":"            arguments[3] \u003d module.getEndTime().replaceFirst(COLON, EMPTY_STRING);","lastModifiedDate":"2021-10-19"},{"lineNumber":47,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":48,"author":{"gitId":"powzx"},"content":"            try {","lastModifiedDate":"2021-10-19"},{"lineNumber":49,"author":{"gitId":"powzx"},"content":"                Event event \u003d new Event(arguments);","lastModifiedDate":"2021-10-19"},{"lineNumber":50,"author":{"gitId":"powzx"},"content":"                event.setIsLesson();","lastModifiedDate":"2021-10-19"},{"lineNumber":51,"author":{"gitId":"powzx"},"content":"                exams.add(event);","lastModifiedDate":"2021-10-19"},{"lineNumber":52,"author":{"gitId":"powzx"},"content":"            } catch (KolinuxException exception) {","lastModifiedDate":"2021-10-19"},{"lineNumber":53,"author":{"gitId":"powzx"},"content":"                // Should not execute this","lastModifiedDate":"2021-10-19"},{"lineNumber":54,"author":{"gitId":"powzx"},"content":"                System.out.println(FATAL_ERROR);","lastModifiedDate":"2021-10-19"},{"lineNumber":55,"author":{"gitId":"powzx"},"content":"            }","lastModifiedDate":"2021-10-19"},{"lineNumber":56,"author":{"gitId":"powzx"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":57,"author":{"gitId":"powzx"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":58,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":59,"author":{"gitId":"powzx"},"content":"    public ArrayList\u003cEvent\u003e getExams() {","lastModifiedDate":"2021-10-19"},{"lineNumber":60,"author":{"gitId":"powzx"},"content":"        return exams;","lastModifiedDate":"2021-10-19"},{"lineNumber":61,"author":{"gitId":"powzx"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":62,"author":{"gitId":"powzx"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"powzx":62}},{"path":"src/main/java/seedu/kolinux/planner/ModuleSyncer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"powzx"},"content":"package seedu.kolinux.planner;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":3,"author":{"gitId":"powzx"},"content":"import seedu.kolinux.exceptions.KolinuxException;","lastModifiedDate":"2021-10-17"},{"lineNumber":4,"author":{"gitId":"powzx"},"content":"import seedu.kolinux.module.ModuleList;","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"saravanamani1999"},"content":"import seedu.kolinux.timetable.lesson.Lesson;","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"saravanamani1999"},"content":"import seedu.kolinux.timetable.Timetable;","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"powzx"},"content":"import seedu.kolinux.util.Parser;","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":9,"author":{"gitId":"powzx"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-17"},{"lineNumber":10,"author":{"gitId":"powzx"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-10-17"},{"lineNumber":11,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":12,"author":{"gitId":"powzx"},"content":"/** Represents the methods needed to sync with the module list to fetch lessons and exams data. */","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"powzx"},"content":"public class ModuleSyncer {","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":15,"author":{"gitId":"powzx"},"content":"    private String date;","lastModifiedDate":"2021-10-17"},{"lineNumber":16,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":17,"author":{"gitId":"powzx"},"content":"    private static final int EVENT_ARGUMENTS \u003d 4;","lastModifiedDate":"2021-11-03"},{"lineNumber":18,"author":{"gitId":"powzx"},"content":"    private static final String FATAL_ERROR \u003d \"Fatal error occurred, please restart Kolinux.\";","lastModifiedDate":"2021-10-18"},{"lineNumber":19,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":20,"author":{"gitId":"powzx"},"content":"    private ArrayList\u003cLesson\u003e lessonsOnDate \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-17"},{"lineNumber":21,"author":{"gitId":"powzx"},"content":"    private ArrayList\u003cEvent\u003e lessonsAndExamsAsEventsOnDate \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":23,"author":{"gitId":"powzx"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":24,"author":{"gitId":"powzx"},"content":"     * The list of Lesson and the corresponding Event on a specified date will be populated upon the","lastModifiedDate":"2021-10-18"},{"lineNumber":25,"author":{"gitId":"powzx"},"content":"     * construction of this object. Events will also be created using the exam data, and added to the","lastModifiedDate":"2021-11-04"},{"lineNumber":26,"author":{"gitId":"powzx"},"content":"     * list if they occur on the date specified.","lastModifiedDate":"2021-11-04"},{"lineNumber":27,"author":{"gitId":"powzx"},"content":"     *","lastModifiedDate":"2021-10-18"},{"lineNumber":28,"author":{"gitId":"powzx"},"content":"     * @param date Date to get the list of lessons and exams","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"powzx"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":30,"author":{"gitId":"powzx"},"content":"    public ModuleSyncer(ModuleList moduleList, String date) {","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"powzx"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-10-17"},{"lineNumber":32,"author":{"gitId":"powzx"},"content":"        getLessonsOnDate();","lastModifiedDate":"2021-10-17"},{"lineNumber":33,"author":{"gitId":"powzx"},"content":"        convertLessonListToEventList();","lastModifiedDate":"2021-10-18"},{"lineNumber":34,"author":{"gitId":"powzx"},"content":"        getExamsOnDate(moduleList);","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"powzx"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":36,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":37,"author":{"gitId":"powzx"},"content":"    public ArrayList\u003cEvent\u003e getLessonsAndExamsAsEventsOnDate() {","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"powzx"},"content":"        return lessonsAndExamsAsEventsOnDate;","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"powzx"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":40,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":41,"author":{"gitId":"powzx"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":42,"author":{"gitId":"powzx"},"content":"     * Constructs an ExamsGetter to get the exam dates and times of the modules in the module list. The","lastModifiedDate":"2021-10-19"},{"lineNumber":43,"author":{"gitId":"powzx"},"content":"     * exams occurring on the date specified will be filtered out and will be added to","lastModifiedDate":"2021-11-04"},{"lineNumber":44,"author":{"gitId":"powzx"},"content":"     * lessonsAndExamsAdEventsOnDate. The module list will always be updated with the latest version.","lastModifiedDate":"2021-11-04"},{"lineNumber":45,"author":{"gitId":"powzx"},"content":"     *","lastModifiedDate":"2021-10-19"},{"lineNumber":46,"author":{"gitId":"powzx"},"content":"     * @param moduleList Module list stored by the user","lastModifiedDate":"2021-10-19"},{"lineNumber":47,"author":{"gitId":"powzx"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":48,"author":{"gitId":"powzx"},"content":"    private void getExamsOnDate(ModuleList moduleList) {","lastModifiedDate":"2021-10-21"},{"lineNumber":49,"author":{"gitId":"powzx"},"content":"        ExamsGetter examsGetter \u003d new ExamsGetter(moduleList);","lastModifiedDate":"2021-10-19"},{"lineNumber":50,"author":{"gitId":"powzx"},"content":"        ArrayList\u003cEvent\u003e examsOnDate \u003d examsGetter.getExams();","lastModifiedDate":"2021-10-19"},{"lineNumber":51,"author":{"gitId":"powzx"},"content":"        for (Event exam : examsOnDate) {","lastModifiedDate":"2021-10-19"},{"lineNumber":52,"author":{"gitId":"powzx"},"content":"            if (exam.getDate().equals(this.date)) {","lastModifiedDate":"2021-10-21"},{"lineNumber":53,"author":{"gitId":"powzx"},"content":"                lessonsAndExamsAsEventsOnDate.add(exam);","lastModifiedDate":"2021-10-19"},{"lineNumber":54,"author":{"gitId":"powzx"},"content":"            }","lastModifiedDate":"2021-10-19"},{"lineNumber":55,"author":{"gitId":"powzx"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":56,"author":{"gitId":"powzx"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":57,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":58,"author":{"gitId":"powzx"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":59,"author":{"gitId":"powzx"},"content":"     * Populates the lessonsOnDate array list by the list of lessons occurring on a date, specified by","lastModifiedDate":"2021-10-18"},{"lineNumber":60,"author":{"gitId":"powzx"},"content":"     * the date attribute of this class.","lastModifiedDate":"2021-10-18"},{"lineNumber":61,"author":{"gitId":"powzx"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":62,"author":{"gitId":"powzx"},"content":"    private void getLessonsOnDate() {","lastModifiedDate":"2021-10-18"},{"lineNumber":63,"author":{"gitId":"powzx"},"content":"        String day \u003d Parser.getDayOfWeek(date);","lastModifiedDate":"2021-11-05"},{"lineNumber":64,"author":{"gitId":"saravanamani1999"},"content":"        lessonsOnDate \u003d (ArrayList\u003cLesson\u003e) Timetable.lessonStorage","lastModifiedDate":"2021-10-23"},{"lineNumber":65,"author":{"gitId":"powzx"},"content":"                .stream()","lastModifiedDate":"2021-10-17"},{"lineNumber":66,"author":{"gitId":"powzx"},"content":"                .filter(lesson -\u003e day.equalsIgnoreCase(lesson.getDay()))","lastModifiedDate":"2021-10-17"},{"lineNumber":67,"author":{"gitId":"powzx"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2021-10-17"},{"lineNumber":68,"author":{"gitId":"powzx"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":69,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":70,"author":{"gitId":"powzx"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":71,"author":{"gitId":"powzx"},"content":"     * Constructs an Event object from a Lesson object.","lastModifiedDate":"2021-10-18"},{"lineNumber":72,"author":{"gitId":"powzx"},"content":"     *","lastModifiedDate":"2021-10-18"},{"lineNumber":73,"author":{"gitId":"powzx"},"content":"     * @param lesson Lesson to be converted","lastModifiedDate":"2021-10-18"},{"lineNumber":74,"author":{"gitId":"powzx"},"content":"     * @return Event corresponding to the lesson","lastModifiedDate":"2021-10-18"},{"lineNumber":75,"author":{"gitId":"powzx"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":76,"author":{"gitId":"powzx"},"content":"    private Event convertLessonToEvent(Lesson lesson) {","lastModifiedDate":"2021-10-18"},{"lineNumber":77,"author":{"gitId":"powzx"},"content":"        String[] arguments \u003d new String[EVENT_ARGUMENTS];","lastModifiedDate":"2021-11-03"},{"lineNumber":78,"author":{"gitId":"powzx"},"content":"        arguments[0] \u003d lesson.getModuleCode() + \" \" + lesson.getLessonType();","lastModifiedDate":"2021-10-18"},{"lineNumber":79,"author":{"gitId":"powzx"},"content":"        arguments[1] \u003d date;","lastModifiedDate":"2021-10-18"},{"lineNumber":80,"author":{"gitId":"powzx"},"content":"        arguments[2] \u003d lesson.getStartTime();","lastModifiedDate":"2021-10-18"},{"lineNumber":81,"author":{"gitId":"powzx"},"content":"        arguments[3] \u003d lesson.getEndTime();","lastModifiedDate":"2021-10-18"},{"lineNumber":82,"author":{"gitId":"powzx"},"content":"        Event event \u003d null;","lastModifiedDate":"2021-10-18"},{"lineNumber":83,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":84,"author":{"gitId":"powzx"},"content":"        try {","lastModifiedDate":"2021-10-18"},{"lineNumber":85,"author":{"gitId":"powzx"},"content":"            event \u003d new Event(arguments);","lastModifiedDate":"2021-10-18"},{"lineNumber":86,"author":{"gitId":"powzx"},"content":"            event.setIsLesson();","lastModifiedDate":"2021-10-18"},{"lineNumber":87,"author":{"gitId":"powzx"},"content":"        } catch (KolinuxException exception) {","lastModifiedDate":"2021-10-18"},{"lineNumber":88,"author":{"gitId":"powzx"},"content":"            // Should not be executed since the necessary checks of the arguments were done before constructing","lastModifiedDate":"2021-10-18"},{"lineNumber":89,"author":{"gitId":"powzx"},"content":"            // the Lesson object.","lastModifiedDate":"2021-10-18"},{"lineNumber":90,"author":{"gitId":"powzx"},"content":"            System.out.println(FATAL_ERROR);","lastModifiedDate":"2021-10-18"},{"lineNumber":91,"author":{"gitId":"powzx"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":92,"author":{"gitId":"powzx"},"content":"        return event;","lastModifiedDate":"2021-10-18"},{"lineNumber":93,"author":{"gitId":"powzx"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":94,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":95,"author":{"gitId":"powzx"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":96,"author":{"gitId":"powzx"},"content":"     * Constructs list of Event objects from the list of Lesson objects in lessonsOnDate.","lastModifiedDate":"2021-10-18"},{"lineNumber":97,"author":{"gitId":"powzx"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":98,"author":{"gitId":"powzx"},"content":"    private void convertLessonListToEventList() {","lastModifiedDate":"2021-10-18"},{"lineNumber":99,"author":{"gitId":"powzx"},"content":"        lessonsAndExamsAsEventsOnDate \u003d (ArrayList\u003cEvent\u003e) lessonsOnDate","lastModifiedDate":"2021-10-19"},{"lineNumber":100,"author":{"gitId":"powzx"},"content":"                .stream()","lastModifiedDate":"2021-10-18"},{"lineNumber":101,"author":{"gitId":"powzx"},"content":"                .map(lesson -\u003e convertLessonToEvent(lesson))","lastModifiedDate":"2021-10-18"},{"lineNumber":102,"author":{"gitId":"powzx"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2021-10-18"},{"lineNumber":103,"author":{"gitId":"powzx"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":104,"author":{"gitId":"powzx"},"content":"}","lastModifiedDate":"2021-10-17"}],"authorContributionMap":{"powzx":101,"saravanamani1999":3}},{"path":"src/main/java/seedu/kolinux/planner/Planner.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"powzx"},"content":"package seedu.kolinux.planner;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"powzx"},"content":"import seedu.kolinux.exceptions.KolinuxException;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"powzx"},"content":"import seedu.kolinux.module.ModuleList;","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"powzx"},"content":"import seedu.kolinux.util.Parser;","lastModifiedDate":"2021-10-16"},{"lineNumber":6,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"powzx"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"powzx"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-10-14"},{"lineNumber":9,"author":{"gitId":"powzx"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"powzx"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"powzx"},"content":"/** Represents the operations to interact with the user schedule. */","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"powzx"},"content":"public class Planner {","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"powzx"},"content":"    private PlannerStorage plannerStorage \u003d new PlannerStorage();","lastModifiedDate":"2021-10-14"},{"lineNumber":16,"author":{"gitId":"powzx"},"content":"    private ModuleList moduleList;","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":18,"author":{"gitId":"powzx"},"content":"    private static ArrayList\u003cEvent\u003e scheduleOfAllDates \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"powzx"},"content":"    private static final String PLANNER_CORRUPTED_ERROR \u003d","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"powzx"},"content":"            \"Some of your planner events are corrupted, they will be removed from your planner!\";","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"powzx"},"content":"    private static final String TIME_CONFLICT_PROMPT \u003d","lastModifiedDate":"2021-10-16"},{"lineNumber":23,"author":{"gitId":"powzx"},"content":"            \"You already have an event ongoing for that time period, do you still want to add?\\n\"","lastModifiedDate":"2021-11-01"},{"lineNumber":24,"author":{"gitId":"powzx"},"content":"                    + \"You may enter \u0027n\u0027 to cancel and proceed to list the events on the date to see what you already \"","lastModifiedDate":"2021-11-01"},{"lineNumber":25,"author":{"gitId":"powzx"},"content":"                    + \"planned on that day\\n\"","lastModifiedDate":"2021-11-01"},{"lineNumber":26,"author":{"gitId":"powzx"},"content":"                    + \"Or you may enter \u0027y\u0027 to add the event\";","lastModifiedDate":"2021-11-01"},{"lineNumber":27,"author":{"gitId":"powzx"},"content":"    private static final String EMPTY_LIST_MESSAGE \u003d \"There are no events planned for this date yet!\";","lastModifiedDate":"2021-10-16"},{"lineNumber":28,"author":{"gitId":"powzx"},"content":"    private static final String INVALID_ID_ERROR \u003d \"Invalid ID given, no events were deleted.\";","lastModifiedDate":"2021-10-15"},{"lineNumber":29,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":30,"author":{"gitId":"powzx"},"content":"    private static final String DATE_PATTERN \u003d \"\\\\d\\\\d\\\\d\\\\d-\\\\d\\\\d-\\\\d\\\\d\";","lastModifiedDate":"2021-11-04"},{"lineNumber":31,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":32,"author":{"gitId":"powzx"},"content":"    public Planner() {","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"powzx"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"powzx"},"content":"    public Planner(ModuleList moduleList) {","lastModifiedDate":"2021-10-19"},{"lineNumber":37,"author":{"gitId":"powzx"},"content":"        this.moduleList \u003d moduleList;","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"powzx"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"powzx"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":41,"author":{"gitId":"powzx"},"content":"     * Filters all the events including the lessons and exams in the planner by a particular date.","lastModifiedDate":"2021-10-19"},{"lineNumber":42,"author":{"gitId":"powzx"},"content":"     *","lastModifiedDate":"2021-10-14"},{"lineNumber":43,"author":{"gitId":"powzx"},"content":"     * @param date Date","lastModifiedDate":"2021-10-14"},{"lineNumber":44,"author":{"gitId":"powzx"},"content":"     * @return List of events, lessons, and exams happening on the given date","lastModifiedDate":"2021-10-19"},{"lineNumber":45,"author":{"gitId":"powzx"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":46,"author":{"gitId":"powzx"},"content":"    private ArrayList\u003cEvent\u003e filterPlanner(String date) {","lastModifiedDate":"2021-10-14"},{"lineNumber":47,"author":{"gitId":"powzx"},"content":"        assert (moduleList !\u003d null);","lastModifiedDate":"2021-10-19"},{"lineNumber":48,"author":{"gitId":"powzx"},"content":"        // Get lessons and exams from Timetable and ModuleList respectively on date","lastModifiedDate":"2021-11-01"},{"lineNumber":49,"author":{"gitId":"powzx"},"content":"        ArrayList\u003cEvent\u003e lessonsAndExamsAsEventsOnDate","lastModifiedDate":"2021-11-01"},{"lineNumber":50,"author":{"gitId":"powzx"},"content":"                \u003d new ModuleSyncer(moduleList, date).getLessonsAndExamsAsEventsOnDate();","lastModifiedDate":"2021-11-01"},{"lineNumber":51,"author":{"gitId":"powzx"},"content":"        // Get all events stored in planner on date","lastModifiedDate":"2021-11-01"},{"lineNumber":52,"author":{"gitId":"powzx"},"content":"        ArrayList\u003cEvent\u003e eventsOnDate","lastModifiedDate":"2021-11-01"},{"lineNumber":53,"author":{"gitId":"powzx"},"content":"                \u003d (ArrayList\u003cEvent\u003e) scheduleOfAllDates","lastModifiedDate":"2021-11-01"},{"lineNumber":54,"author":{"gitId":"powzx"},"content":"                .stream()","lastModifiedDate":"2021-11-01"},{"lineNumber":55,"author":{"gitId":"powzx"},"content":"                .filter(event -\u003e date.equals(event.getDate()))","lastModifiedDate":"2021-11-01"},{"lineNumber":56,"author":{"gitId":"powzx"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2021-11-01"},{"lineNumber":57,"author":{"gitId":"powzx"},"content":"        // Merge both lists","lastModifiedDate":"2021-11-01"},{"lineNumber":58,"author":{"gitId":"powzx"},"content":"        eventsOnDate.addAll(lessonsAndExamsAsEventsOnDate);","lastModifiedDate":"2021-11-01"},{"lineNumber":59,"author":{"gitId":"powzx"},"content":"        // Return a list that is sorted by their start time","lastModifiedDate":"2021-11-01"},{"lineNumber":60,"author":{"gitId":"powzx"},"content":"        return (ArrayList\u003cEvent\u003e) eventsOnDate","lastModifiedDate":"2021-11-01"},{"lineNumber":61,"author":{"gitId":"powzx"},"content":"                .stream()","lastModifiedDate":"2021-10-18"},{"lineNumber":62,"author":{"gitId":"powzx"},"content":"                .sorted(Comparator.comparing(Event::getStartTime))","lastModifiedDate":"2021-10-18"},{"lineNumber":63,"author":{"gitId":"powzx"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2021-10-18"},{"lineNumber":64,"author":{"gitId":"powzx"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":65,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":66,"author":{"gitId":"powzx"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":67,"author":{"gitId":"powzx"},"content":"     * Checks if an event has time conflict with an existing event on the same date.","lastModifiedDate":"2021-10-14"},{"lineNumber":68,"author":{"gitId":"powzx"},"content":"     *","lastModifiedDate":"2021-10-14"},{"lineNumber":69,"author":{"gitId":"powzx"},"content":"     * @param eventToBeAdded The event to be added","lastModifiedDate":"2021-10-14"},{"lineNumber":70,"author":{"gitId":"powzx"},"content":"     * @return true if there is time conflict, false otherwise.","lastModifiedDate":"2021-10-14"},{"lineNumber":71,"author":{"gitId":"powzx"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":72,"author":{"gitId":"powzx"},"content":"    private boolean hasTimeConflict(Event eventToBeAdded) {","lastModifiedDate":"2021-10-14"},{"lineNumber":73,"author":{"gitId":"powzx"},"content":"        ArrayList\u003cEvent\u003e filteredPlanner \u003d filterPlanner(eventToBeAdded.getDate());","lastModifiedDate":"2021-10-14"},{"lineNumber":74,"author":{"gitId":"powzx"},"content":"        String startTime \u003d eventToBeAdded.getStartTime();","lastModifiedDate":"2021-10-14"},{"lineNumber":75,"author":{"gitId":"powzx"},"content":"        String endTime \u003d eventToBeAdded.getEndTime();","lastModifiedDate":"2021-10-15"},{"lineNumber":76,"author":{"gitId":"powzx"},"content":"        for (Event event : filteredPlanner) {","lastModifiedDate":"2021-10-14"},{"lineNumber":77,"author":{"gitId":"powzx"},"content":"            if (!(startTime.compareTo(event.getEndTime()) \u003e\u003d 0 || endTime.compareTo(event.getStartTime()) \u003c\u003d 0)) {","lastModifiedDate":"2021-10-15"},{"lineNumber":78,"author":{"gitId":"powzx"},"content":"                return true;","lastModifiedDate":"2021-10-14"},{"lineNumber":79,"author":{"gitId":"powzx"},"content":"            }","lastModifiedDate":"2021-10-14"},{"lineNumber":80,"author":{"gitId":"powzx"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":81,"author":{"gitId":"powzx"},"content":"        return false;","lastModifiedDate":"2021-10-14"},{"lineNumber":82,"author":{"gitId":"powzx"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":83,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":84,"author":{"gitId":"powzx"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":85,"author":{"gitId":"powzx"},"content":"     * Returns a list of data strings generated from the list of events, to be used to rewrite planner.txt.","lastModifiedDate":"2021-10-16"},{"lineNumber":86,"author":{"gitId":"powzx"},"content":"     *","lastModifiedDate":"2021-10-16"},{"lineNumber":87,"author":{"gitId":"powzx"},"content":"     * @return List of data strings corresponding to all the events","lastModifiedDate":"2021-10-16"},{"lineNumber":88,"author":{"gitId":"powzx"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":89,"author":{"gitId":"powzx"},"content":"    private ArrayList\u003cString\u003e returnDataStrings() {","lastModifiedDate":"2021-10-15"},{"lineNumber":90,"author":{"gitId":"powzx"},"content":"        return (ArrayList\u003cString\u003e) scheduleOfAllDates.stream()","lastModifiedDate":"2021-10-15"},{"lineNumber":91,"author":{"gitId":"powzx"},"content":"                .map(event -\u003e event.toData())","lastModifiedDate":"2021-10-15"},{"lineNumber":92,"author":{"gitId":"powzx"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2021-10-15"},{"lineNumber":93,"author":{"gitId":"powzx"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":94,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":95,"author":{"gitId":"powzx"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":96,"author":{"gitId":"powzx"},"content":"     * Initializes the planner by loading the previously saved schedule in planner.txt. File lines","lastModifiedDate":"2021-10-27"},{"lineNumber":97,"author":{"gitId":"powzx"},"content":"     * that are not able to construct an Event will be removed, and the new file lines will be","lastModifiedDate":"2021-10-27"},{"lineNumber":98,"author":{"gitId":"powzx"},"content":"     * rewritten back to the storage. Hence, only corrupted lines will be removed while the rest of","lastModifiedDate":"2021-10-27"},{"lineNumber":99,"author":{"gitId":"powzx"},"content":"     * the file data can still be added as Events to the planner.","lastModifiedDate":"2021-10-27"},{"lineNumber":100,"author":{"gitId":"powzx"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":101,"author":{"gitId":"powzx"},"content":"     * @throws KolinuxException If the file cannot be read properly due to corruption","lastModifiedDate":"2021-10-10"},{"lineNumber":102,"author":{"gitId":"powzx"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":103,"author":{"gitId":"powzx"},"content":"    public void initPlanner() throws KolinuxException {","lastModifiedDate":"2021-10-14"},{"lineNumber":104,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":105,"author":{"gitId":"powzx"},"content":"        boolean isCorrupted \u003d false;","lastModifiedDate":"2021-10-27"},{"lineNumber":106,"author":{"gitId":"powzx"},"content":"        ArrayList\u003cString\u003e fileLines;","lastModifiedDate":"2021-10-06"},{"lineNumber":107,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":108,"author":{"gitId":"powzx"},"content":"        if ((fileLines \u003d plannerStorage.readFile()) \u003d\u003d null) {","lastModifiedDate":"2021-10-14"},{"lineNumber":109,"author":{"gitId":"powzx"},"content":"            assert scheduleOfAllDates.isEmpty();","lastModifiedDate":"2021-10-10"},{"lineNumber":110,"author":{"gitId":"powzx"},"content":"            return;","lastModifiedDate":"2021-10-06"},{"lineNumber":111,"author":{"gitId":"powzx"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":112,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":113,"author":{"gitId":"powzx"},"content":"        Event event;","lastModifiedDate":"2021-10-06"},{"lineNumber":114,"author":{"gitId":"powzx"},"content":"        int i \u003d 0;","lastModifiedDate":"2021-10-27"},{"lineNumber":115,"author":{"gitId":"powzx"},"content":"        while (i \u003c fileLines.size()) {","lastModifiedDate":"2021-10-27"},{"lineNumber":116,"author":{"gitId":"powzx"},"content":"            try {","lastModifiedDate":"2021-10-27"},{"lineNumber":117,"author":{"gitId":"powzx"},"content":"                event \u003d new Event(fileLines.get(i));","lastModifiedDate":"2021-10-27"},{"lineNumber":118,"author":{"gitId":"powzx"},"content":"                scheduleOfAllDates.add(event);","lastModifiedDate":"2021-10-07"},{"lineNumber":119,"author":{"gitId":"powzx"},"content":"                i++;","lastModifiedDate":"2021-10-27"},{"lineNumber":120,"author":{"gitId":"powzx"},"content":"            } catch (KolinuxException exception) {","lastModifiedDate":"2021-10-08"},{"lineNumber":121,"author":{"gitId":"powzx"},"content":"                isCorrupted \u003d true;","lastModifiedDate":"2021-10-27"},{"lineNumber":122,"author":{"gitId":"powzx"},"content":"                fileLines.remove(i);","lastModifiedDate":"2021-10-27"},{"lineNumber":123,"author":{"gitId":"powzx"},"content":"                plannerStorage.rewriteFile(fileLines);","lastModifiedDate":"2021-10-27"},{"lineNumber":124,"author":{"gitId":"powzx"},"content":"            }","lastModifiedDate":"2021-10-27"},{"lineNumber":125,"author":{"gitId":"powzx"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":126,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":127,"author":{"gitId":"powzx"},"content":"        if (isCorrupted) {","lastModifiedDate":"2021-10-27"},{"lineNumber":128,"author":{"gitId":"powzx"},"content":"            throw new KolinuxException(PLANNER_CORRUPTED_ERROR);","lastModifiedDate":"2021-10-08"},{"lineNumber":129,"author":{"gitId":"powzx"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":130,"author":{"gitId":"powzx"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":131,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":132,"author":{"gitId":"powzx"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":133,"author":{"gitId":"powzx"},"content":"     * Adds an event to the schedule list. This method also checks if there are conflicts between the","lastModifiedDate":"2021-10-18"},{"lineNumber":134,"author":{"gitId":"powzx"},"content":"     * added event and the existing events, lessons, and exams.","lastModifiedDate":"2021-10-19"},{"lineNumber":135,"author":{"gitId":"powzx"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":136,"author":{"gitId":"powzx"},"content":"     * @param event Event","lastModifiedDate":"2021-10-10"},{"lineNumber":137,"author":{"gitId":"powzx"},"content":"     * @param allowConflict true if the user allows the time conflict to be ignored","lastModifiedDate":"2021-10-16"},{"lineNumber":138,"author":{"gitId":"powzx"},"content":"     * @throws KolinuxException If there is a time conflict, and it is not allowed to be ignored.","lastModifiedDate":"2021-10-16"},{"lineNumber":139,"author":{"gitId":"powzx"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":140,"author":{"gitId":"powzx"},"content":"    public void addEvent(Event event, boolean allowConflict) throws KolinuxException {","lastModifiedDate":"2021-10-16"},{"lineNumber":141,"author":{"gitId":"powzx"},"content":"        if (hasTimeConflict(event) \u0026\u0026 !allowConflict) {","lastModifiedDate":"2021-10-16"},{"lineNumber":142,"author":{"gitId":"powzx"},"content":"            throw new KolinuxException(TIME_CONFLICT_PROMPT);","lastModifiedDate":"2021-10-16"},{"lineNumber":143,"author":{"gitId":"powzx"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":144,"author":{"gitId":"powzx"},"content":"        scheduleOfAllDates.add(event);","lastModifiedDate":"2021-10-07"},{"lineNumber":145,"author":{"gitId":"powzx"},"content":"        plannerStorage.writeFile(event.toData());","lastModifiedDate":"2021-10-14"},{"lineNumber":146,"author":{"gitId":"powzx"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":147,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":148,"author":{"gitId":"powzx"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":149,"author":{"gitId":"powzx"},"content":"     * Lists the events on a particular date. This method first obtains the list of events, lessons, and exams","lastModifiedDate":"2021-10-19"},{"lineNumber":150,"author":{"gitId":"powzx"},"content":"     * on the date specified. If listing with ID is required, only the added events are listed with their","lastModifiedDate":"2021-10-18"},{"lineNumber":151,"author":{"gitId":"powzx"},"content":"     * respective IDs. Else, all the events, lessons, and exams are listed without their IDs. This method is used","lastModifiedDate":"2021-10-19"},{"lineNumber":152,"author":{"gitId":"powzx"},"content":"     * when the user executes the planner list and delete operations, where the IDs are only printed if","lastModifiedDate":"2021-10-18"},{"lineNumber":153,"author":{"gitId":"powzx"},"content":"     * the user needs to delete an event. Hence, users are not allowed to delete lessons stored in the","lastModifiedDate":"2021-10-18"},{"lineNumber":154,"author":{"gitId":"powzx"},"content":"     * timetable and exams.","lastModifiedDate":"2021-10-19"},{"lineNumber":155,"author":{"gitId":"powzx"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":156,"author":{"gitId":"powzx"},"content":"     * @param date Date","lastModifiedDate":"2021-10-10"},{"lineNumber":157,"author":{"gitId":"powzx"},"content":"     * @param withId true if the list is needed to display the id of the events, false otherwise.","lastModifiedDate":"2021-10-15"},{"lineNumber":158,"author":{"gitId":"powzx"},"content":"     * @return All the events on the date in a single concatenated string","lastModifiedDate":"2021-10-10"},{"lineNumber":159,"author":{"gitId":"powzx"},"content":"     * @throws KolinuxException If the date specified is invalid or if there are no events planned","lastModifiedDate":"2021-10-16"},{"lineNumber":160,"author":{"gitId":"powzx"},"content":"     *     on the date specified","lastModifiedDate":"2021-10-16"},{"lineNumber":161,"author":{"gitId":"powzx"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":162,"author":{"gitId":"powzx"},"content":"    public String listEvents(String date, boolean withId) throws KolinuxException {","lastModifiedDate":"2021-10-15"},{"lineNumber":163,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":164,"author":{"gitId":"powzx"},"content":"        assert Pattern.matches(DATE_PATTERN, date);","lastModifiedDate":"2021-10-14"},{"lineNumber":165,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":166,"author":{"gitId":"powzx"},"content":"        ArrayList\u003cString\u003e filteredEventStrings;","lastModifiedDate":"2021-10-29"},{"lineNumber":167,"author":{"gitId":"powzx"},"content":"        if (withId) {","lastModifiedDate":"2021-10-29"},{"lineNumber":168,"author":{"gitId":"powzx"},"content":"            filteredEventStrings \u003d (ArrayList\u003cString\u003e) filterPlanner(date)","lastModifiedDate":"2021-11-03"},{"lineNumber":169,"author":{"gitId":"powzx"},"content":"                    .stream()","lastModifiedDate":"2021-10-06"},{"lineNumber":170,"author":{"gitId":"powzx"},"content":"                    .filter(event -\u003e !event.getIsLesson())","lastModifiedDate":"2021-10-29"},{"lineNumber":171,"author":{"gitId":"powzx"},"content":"                    .map(event -\u003e event.toStringWithId())","lastModifiedDate":"2021-10-29"},{"lineNumber":172,"author":{"gitId":"powzx"},"content":"                    .collect(Collectors.toList());","lastModifiedDate":"2021-10-15"},{"lineNumber":173,"author":{"gitId":"powzx"},"content":"        } else {","lastModifiedDate":"2021-10-29"},{"lineNumber":174,"author":{"gitId":"powzx"},"content":"            filteredEventStrings \u003d (ArrayList\u003cString\u003e) filterPlanner(date)","lastModifiedDate":"2021-11-03"},{"lineNumber":175,"author":{"gitId":"powzx"},"content":"                    .stream()","lastModifiedDate":"2021-10-29"},{"lineNumber":176,"author":{"gitId":"powzx"},"content":"                    .map(event -\u003e event.toString())","lastModifiedDate":"2021-10-29"},{"lineNumber":177,"author":{"gitId":"powzx"},"content":"                    .collect(Collectors.toList());","lastModifiedDate":"2021-10-29"},{"lineNumber":178,"author":{"gitId":"powzx"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":179,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":180,"author":{"gitId":"powzx"},"content":"        String eventsInOneString \u003d Parser.concatenateStrings(filteredEventStrings);","lastModifiedDate":"2021-10-16"},{"lineNumber":181,"author":{"gitId":"powzx"},"content":"        if (eventsInOneString.isEmpty()) {","lastModifiedDate":"2021-10-15"},{"lineNumber":182,"author":{"gitId":"powzx"},"content":"            throw new KolinuxException(EMPTY_LIST_MESSAGE);","lastModifiedDate":"2021-10-15"},{"lineNumber":183,"author":{"gitId":"powzx"},"content":"        }","lastModifiedDate":"2021-10-15"},{"lineNumber":184,"author":{"gitId":"powzx"},"content":"        return eventsInOneString;","lastModifiedDate":"2021-10-15"},{"lineNumber":185,"author":{"gitId":"powzx"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":186,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":187,"author":{"gitId":"powzx"},"content":"    /**","lastModifiedDate":"2021-10-15"},{"lineNumber":188,"author":{"gitId":"powzx"},"content":"     * Deletes an event given its corresponding unique ID.","lastModifiedDate":"2021-10-15"},{"lineNumber":189,"author":{"gitId":"powzx"},"content":"     *","lastModifiedDate":"2021-10-15"},{"lineNumber":190,"author":{"gitId":"powzx"},"content":"     * @param id Unique identifier of the event","lastModifiedDate":"2021-10-15"},{"lineNumber":191,"author":{"gitId":"powzx"},"content":"     * @return Deleted event","lastModifiedDate":"2021-11-01"},{"lineNumber":192,"author":{"gitId":"powzx"},"content":"     * @throws KolinuxException If the id does not match any events","lastModifiedDate":"2021-10-16"},{"lineNumber":193,"author":{"gitId":"powzx"},"content":"     */","lastModifiedDate":"2021-10-15"},{"lineNumber":194,"author":{"gitId":"powzx"},"content":"    public Event deleteEvent(String id) throws KolinuxException {","lastModifiedDate":"2021-11-01"},{"lineNumber":195,"author":{"gitId":"powzx"},"content":"        Event eventToBeRemoved \u003d null;","lastModifiedDate":"2021-11-01"},{"lineNumber":196,"author":{"gitId":"powzx"},"content":"        for (Event event : scheduleOfAllDates) {","lastModifiedDate":"2021-11-01"},{"lineNumber":197,"author":{"gitId":"powzx"},"content":"            if (id.equals(event.getId())) {","lastModifiedDate":"2021-11-01"},{"lineNumber":198,"author":{"gitId":"powzx"},"content":"                eventToBeRemoved \u003d event;","lastModifiedDate":"2021-11-01"},{"lineNumber":199,"author":{"gitId":"powzx"},"content":"            }","lastModifiedDate":"2021-11-01"},{"lineNumber":200,"author":{"gitId":"powzx"},"content":"        }","lastModifiedDate":"2021-11-01"},{"lineNumber":201,"author":{"gitId":"powzx"},"content":"        if (eventToBeRemoved \u003d\u003d null) {","lastModifiedDate":"2021-11-01"},{"lineNumber":202,"author":{"gitId":"powzx"},"content":"            throw new KolinuxException(INVALID_ID_ERROR);","lastModifiedDate":"2021-10-15"},{"lineNumber":203,"author":{"gitId":"powzx"},"content":"        }","lastModifiedDate":"2021-10-15"},{"lineNumber":204,"author":{"gitId":"powzx"},"content":"        scheduleOfAllDates.remove(eventToBeRemoved);","lastModifiedDate":"2021-11-01"},{"lineNumber":205,"author":{"gitId":"powzx"},"content":"        plannerStorage.rewriteFile(returnDataStrings());","lastModifiedDate":"2021-11-01"},{"lineNumber":206,"author":{"gitId":"powzx"},"content":"        return eventToBeRemoved;","lastModifiedDate":"2021-11-01"},{"lineNumber":207,"author":{"gitId":"powzx"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":208,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":209,"author":{"gitId":"powzx"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":210,"author":{"gitId":"powzx"},"content":"     * Clears all events in the schedule.","lastModifiedDate":"2021-10-10"},{"lineNumber":211,"author":{"gitId":"powzx"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":212,"author":{"gitId":"powzx"},"content":"    public void clearEvents() {","lastModifiedDate":"2021-10-14"},{"lineNumber":213,"author":{"gitId":"powzx"},"content":"        scheduleOfAllDates.clear();","lastModifiedDate":"2021-10-07"},{"lineNumber":214,"author":{"gitId":"powzx"},"content":"        plannerStorage.clearFile();","lastModifiedDate":"2021-10-14"},{"lineNumber":215,"author":{"gitId":"powzx"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":216,"author":{"gitId":"powzx"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"powzx":216}},{"path":"src/main/java/seedu/kolinux/planner/PlannerPromptHandler.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"powzx"},"content":"package seedu.kolinux.planner;","lastModifiedDate":"2021-11-03"},{"lineNumber":2,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":3,"author":{"gitId":"powzx"},"content":"import seedu.kolinux.exceptions.KolinuxException;","lastModifiedDate":"2021-11-03"},{"lineNumber":4,"author":{"gitId":"powzx"},"content":"import seedu.kolinux.util.PromptHandler;","lastModifiedDate":"2021-11-03"},{"lineNumber":5,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":6,"author":{"gitId":"powzx"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-11-03"},{"lineNumber":7,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":8,"author":{"gitId":"powzx"},"content":"/** Represents the operations related to prompting the user while using the Planner feature. */","lastModifiedDate":"2021-11-03"},{"lineNumber":9,"author":{"gitId":"powzx"},"content":"public class PlannerPromptHandler extends PromptHandler {","lastModifiedDate":"2021-11-03"},{"lineNumber":10,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":11,"author":{"gitId":"powzx"},"content":"    private Planner planner;","lastModifiedDate":"2021-11-03"},{"lineNumber":12,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":13,"author":{"gitId":"powzx"},"content":"    private static final String YES \u003d \"y\";","lastModifiedDate":"2021-11-03"},{"lineNumber":14,"author":{"gitId":"powzx"},"content":"    private static final String NO \u003d \"n\";","lastModifiedDate":"2021-11-03"},{"lineNumber":15,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":16,"author":{"gitId":"powzx"},"content":"    private static final String CANCEL_ADD_ERROR \u003d \"Operation cancelled, no events were added.\";","lastModifiedDate":"2021-11-03"},{"lineNumber":17,"author":{"gitId":"powzx"},"content":"    private static final String INVALID_REPLY_ERROR \u003d \"Invalid key entered! Please enter \u0027y\u0027 or \u0027n\u0027.\";","lastModifiedDate":"2021-11-03"},{"lineNumber":18,"author":{"gitId":"powzx"},"content":"    private static final String CANCEL_DELETE_ERROR \u003d \"Operation cancelled, no events were deleted.\";","lastModifiedDate":"2021-11-03"},{"lineNumber":19,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":20,"author":{"gitId":"powzx"},"content":"    public PlannerPromptHandler(Planner planner, String message) {","lastModifiedDate":"2021-11-03"},{"lineNumber":21,"author":{"gitId":"powzx"},"content":"        super(message);","lastModifiedDate":"2021-11-03"},{"lineNumber":22,"author":{"gitId":"powzx"},"content":"        this.planner \u003d planner;","lastModifiedDate":"2021-11-03"},{"lineNumber":23,"author":{"gitId":"powzx"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":24,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":25,"author":{"gitId":"powzx"},"content":"    /**","lastModifiedDate":"2021-11-03"},{"lineNumber":26,"author":{"gitId":"powzx"},"content":"     * Infinite loop of posting prompt to the user to handle time conflicts in events when adding.","lastModifiedDate":"2021-11-03"},{"lineNumber":27,"author":{"gitId":"powzx"},"content":"     * The loop only exits if the user provides a valid answer \u0027y\u0027 or \u0027n\u0027.","lastModifiedDate":"2021-11-03"},{"lineNumber":28,"author":{"gitId":"powzx"},"content":"     *","lastModifiedDate":"2021-11-03"},{"lineNumber":29,"author":{"gitId":"powzx"},"content":"     * @param event Conflicted event","lastModifiedDate":"2021-11-03"},{"lineNumber":30,"author":{"gitId":"powzx"},"content":"     * @throws KolinuxException If the user cancels the add operation","lastModifiedDate":"2021-11-03"},{"lineNumber":31,"author":{"gitId":"powzx"},"content":"     */","lastModifiedDate":"2021-11-03"},{"lineNumber":32,"author":{"gitId":"powzx"},"content":"    public void handleEventConflict(Event event) throws KolinuxException {","lastModifiedDate":"2021-11-03"},{"lineNumber":33,"author":{"gitId":"powzx"},"content":"        while (true) {","lastModifiedDate":"2021-11-03"},{"lineNumber":34,"author":{"gitId":"powzx"},"content":"            String reply \u003d getReplyFromPrompt();","lastModifiedDate":"2021-11-03"},{"lineNumber":35,"author":{"gitId":"powzx"},"content":"            if (reply.equalsIgnoreCase(YES)) {","lastModifiedDate":"2021-11-03"},{"lineNumber":36,"author":{"gitId":"powzx"},"content":"                planner.addEvent(event, true);","lastModifiedDate":"2021-11-03"},{"lineNumber":37,"author":{"gitId":"powzx"},"content":"                logger.log(Level.INFO, \"User added an event to planner with conflict: \" + event);","lastModifiedDate":"2021-11-03"},{"lineNumber":38,"author":{"gitId":"powzx"},"content":"                break;","lastModifiedDate":"2021-11-03"},{"lineNumber":39,"author":{"gitId":"powzx"},"content":"            } else if (reply.equalsIgnoreCase(NO)) {","lastModifiedDate":"2021-11-03"},{"lineNumber":40,"author":{"gitId":"powzx"},"content":"                logger.log(Level.INFO, \"User cancelled the planner add operation.\");","lastModifiedDate":"2021-11-03"},{"lineNumber":41,"author":{"gitId":"powzx"},"content":"                throw new KolinuxException(CANCEL_ADD_ERROR);","lastModifiedDate":"2021-11-03"},{"lineNumber":42,"author":{"gitId":"powzx"},"content":"            } else {","lastModifiedDate":"2021-11-03"},{"lineNumber":43,"author":{"gitId":"powzx"},"content":"                this.changeMessage(INVALID_REPLY_ERROR);","lastModifiedDate":"2021-11-03"},{"lineNumber":44,"author":{"gitId":"powzx"},"content":"            }","lastModifiedDate":"2021-11-03"},{"lineNumber":45,"author":{"gitId":"powzx"},"content":"        }","lastModifiedDate":"2021-11-03"},{"lineNumber":46,"author":{"gitId":"powzx"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":47,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":48,"author":{"gitId":"powzx"},"content":"    /**","lastModifiedDate":"2021-11-03"},{"lineNumber":49,"author":{"gitId":"powzx"},"content":"     * Posts a prompt to ask for the ID of the event to be deleted.","lastModifiedDate":"2021-11-03"},{"lineNumber":50,"author":{"gitId":"powzx"},"content":"     *","lastModifiedDate":"2021-11-03"},{"lineNumber":51,"author":{"gitId":"powzx"},"content":"     * @return ID of the event","lastModifiedDate":"2021-11-03"},{"lineNumber":52,"author":{"gitId":"powzx"},"content":"     * @throws KolinuxException If the user enters \u0027n\u0027 to cancel the delete operation","lastModifiedDate":"2021-11-03"},{"lineNumber":53,"author":{"gitId":"powzx"},"content":"     */","lastModifiedDate":"2021-11-03"},{"lineNumber":54,"author":{"gitId":"powzx"},"content":"    public String promptForEventId() throws KolinuxException {","lastModifiedDate":"2021-11-03"},{"lineNumber":55,"author":{"gitId":"powzx"},"content":"        String id \u003d getReplyFromPrompt();","lastModifiedDate":"2021-11-03"},{"lineNumber":56,"author":{"gitId":"powzx"},"content":"        if (id.equalsIgnoreCase(NO)) {","lastModifiedDate":"2021-11-03"},{"lineNumber":57,"author":{"gitId":"powzx"},"content":"            logger.log(Level.INFO, \"User cancelled the planner delete operation.\");","lastModifiedDate":"2021-11-03"},{"lineNumber":58,"author":{"gitId":"powzx"},"content":"            throw new KolinuxException(CANCEL_DELETE_ERROR);","lastModifiedDate":"2021-11-03"},{"lineNumber":59,"author":{"gitId":"powzx"},"content":"        }","lastModifiedDate":"2021-11-03"},{"lineNumber":60,"author":{"gitId":"powzx"},"content":"        return id;","lastModifiedDate":"2021-11-03"},{"lineNumber":61,"author":{"gitId":"powzx"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":62,"author":{"gitId":"powzx"},"content":"}","lastModifiedDate":"2021-11-03"}],"authorContributionMap":{"powzx":62}},{"path":"src/main/java/seedu/kolinux/planner/PlannerStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"powzx"},"content":"package seedu.kolinux.planner;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"powzx"},"content":"import java.io.File;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"powzx"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"powzx"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"powzx"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"powzx"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"powzx"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"powzx"},"content":"/** Represents the operations to interact with planner.txt. */","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"powzx"},"content":"public class PlannerStorage {","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"powzx"},"content":"    private static final String PLANNER_FILE_PATH \u003d \"./data/planner.txt\";","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"powzx"},"content":"    private static final String EMPTY_STRING \u003d \"\";","lastModifiedDate":"2021-10-30"},{"lineNumber":15,"author":{"gitId":"powzx"},"content":"    private static File file \u003d new File(PLANNER_FILE_PATH);","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"powzx"},"content":"    private ArrayList\u003cString\u003e fileLines \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-30"},{"lineNumber":18,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":19,"author":{"gitId":"powzx"},"content":"    /**","lastModifiedDate":"2021-10-30"},{"lineNumber":20,"author":{"gitId":"powzx"},"content":"     * Adds the content of planner.txt into an array list of strings, if the string is not empty. Empty strings","lastModifiedDate":"2021-10-30"},{"lineNumber":21,"author":{"gitId":"powzx"},"content":"     * are ignored.","lastModifiedDate":"2021-10-30"},{"lineNumber":22,"author":{"gitId":"powzx"},"content":"     *","lastModifiedDate":"2021-10-30"},{"lineNumber":23,"author":{"gitId":"powzx"},"content":"     * @param fileLine String in planner.txt to be added","lastModifiedDate":"2021-10-30"},{"lineNumber":24,"author":{"gitId":"powzx"},"content":"     */","lastModifiedDate":"2021-10-30"},{"lineNumber":25,"author":{"gitId":"powzx"},"content":"    private void addToFileLines(String fileLine) {","lastModifiedDate":"2021-10-30"},{"lineNumber":26,"author":{"gitId":"powzx"},"content":"        if (!fileLine.isEmpty()) {","lastModifiedDate":"2021-10-30"},{"lineNumber":27,"author":{"gitId":"powzx"},"content":"            fileLines.add(fileLine);","lastModifiedDate":"2021-10-30"},{"lineNumber":28,"author":{"gitId":"powzx"},"content":"        }","lastModifiedDate":"2021-10-30"},{"lineNumber":29,"author":{"gitId":"powzx"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":30,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":31,"author":{"gitId":"powzx"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"powzx"},"content":"     * Creates a file with the name planner.txt","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"powzx"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":34,"author":{"gitId":"powzx"},"content":"    private void createFile() {","lastModifiedDate":"2021-10-14"},{"lineNumber":35,"author":{"gitId":"powzx"},"content":"        try {","lastModifiedDate":"2021-10-06"},{"lineNumber":36,"author":{"gitId":"powzx"},"content":"            file.createNewFile();","lastModifiedDate":"2021-10-06"},{"lineNumber":37,"author":{"gitId":"powzx"},"content":"        } catch (IOException exception) {","lastModifiedDate":"2021-10-07"},{"lineNumber":38,"author":{"gitId":"powzx"},"content":"            exception.printStackTrace();","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"powzx"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":40,"author":{"gitId":"powzx"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":41,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":42,"author":{"gitId":"powzx"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":43,"author":{"gitId":"powzx"},"content":"     * Writes to the file with the name planner.txt.","lastModifiedDate":"2021-10-10"},{"lineNumber":44,"author":{"gitId":"powzx"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":45,"author":{"gitId":"powzx"},"content":"     * @param eventData String to write to the file","lastModifiedDate":"2021-10-10"},{"lineNumber":46,"author":{"gitId":"powzx"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":47,"author":{"gitId":"powzx"},"content":"    public void writeFile(String eventData) {","lastModifiedDate":"2021-10-14"},{"lineNumber":48,"author":{"gitId":"powzx"},"content":"        try {","lastModifiedDate":"2021-10-05"},{"lineNumber":49,"author":{"gitId":"powzx"},"content":"            FileWriter writer \u003d new FileWriter(file, true);","lastModifiedDate":"2021-10-05"},{"lineNumber":50,"author":{"gitId":"powzx"},"content":"            writer.append(eventData + \"\\n\");","lastModifiedDate":"2021-10-05"},{"lineNumber":51,"author":{"gitId":"powzx"},"content":"            writer.close();","lastModifiedDate":"2021-10-05"},{"lineNumber":52,"author":{"gitId":"powzx"},"content":"        } catch (IOException exception) {","lastModifiedDate":"2021-10-07"},{"lineNumber":53,"author":{"gitId":"powzx"},"content":"            exception.printStackTrace();","lastModifiedDate":"2021-10-15"},{"lineNumber":54,"author":{"gitId":"powzx"},"content":"        }","lastModifiedDate":"2021-10-15"},{"lineNumber":55,"author":{"gitId":"powzx"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":56,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":57,"author":{"gitId":"powzx"},"content":"    /**","lastModifiedDate":"2021-10-15"},{"lineNumber":58,"author":{"gitId":"powzx"},"content":"     * Rewrites the planner.txt file with the list of planned events.","lastModifiedDate":"2021-10-15"},{"lineNumber":59,"author":{"gitId":"powzx"},"content":"     *","lastModifiedDate":"2021-10-15"},{"lineNumber":60,"author":{"gitId":"powzx"},"content":"     * @param eventDataStrings Arraylist of data strings to write to the file","lastModifiedDate":"2021-10-15"},{"lineNumber":61,"author":{"gitId":"powzx"},"content":"     */","lastModifiedDate":"2021-10-15"},{"lineNumber":62,"author":{"gitId":"powzx"},"content":"    public void rewriteFile(ArrayList\u003cString\u003e eventDataStrings) {","lastModifiedDate":"2021-10-15"},{"lineNumber":63,"author":{"gitId":"powzx"},"content":"        clearFile();","lastModifiedDate":"2021-10-15"},{"lineNumber":64,"author":{"gitId":"powzx"},"content":"        try {","lastModifiedDate":"2021-10-15"},{"lineNumber":65,"author":{"gitId":"powzx"},"content":"            FileWriter writer \u003d new FileWriter(file, true);","lastModifiedDate":"2021-10-15"},{"lineNumber":66,"author":{"gitId":"powzx"},"content":"            for (String eventDataString : eventDataStrings) {","lastModifiedDate":"2021-10-15"},{"lineNumber":67,"author":{"gitId":"powzx"},"content":"                writer.append(eventDataString + \"\\n\");","lastModifiedDate":"2021-10-15"},{"lineNumber":68,"author":{"gitId":"powzx"},"content":"            }","lastModifiedDate":"2021-10-15"},{"lineNumber":69,"author":{"gitId":"powzx"},"content":"            writer.close();","lastModifiedDate":"2021-10-15"},{"lineNumber":70,"author":{"gitId":"powzx"},"content":"        } catch (IOException exception) {","lastModifiedDate":"2021-10-15"},{"lineNumber":71,"author":{"gitId":"powzx"},"content":"            exception.printStackTrace();","lastModifiedDate":"2021-10-07"},{"lineNumber":72,"author":{"gitId":"powzx"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":73,"author":{"gitId":"powzx"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":74,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":75,"author":{"gitId":"powzx"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":76,"author":{"gitId":"powzx"},"content":"     * Reads from the file with the name planner.txt. Empty lines will be ignored and skipped.","lastModifiedDate":"2021-10-27"},{"lineNumber":77,"author":{"gitId":"powzx"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":78,"author":{"gitId":"powzx"},"content":"     * @return Array list where each entry is a line from the file, null if the file does not exist.","lastModifiedDate":"2021-10-10"},{"lineNumber":79,"author":{"gitId":"powzx"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":80,"author":{"gitId":"powzx"},"content":"    public ArrayList\u003cString\u003e readFile() {","lastModifiedDate":"2021-10-14"},{"lineNumber":81,"author":{"gitId":"powzx"},"content":"        String fileLine;","lastModifiedDate":"2021-10-27"},{"lineNumber":82,"author":{"gitId":"powzx"},"content":"        try {","lastModifiedDate":"2021-10-06"},{"lineNumber":83,"author":{"gitId":"powzx"},"content":"            Scanner scanner \u003d new Scanner(file);","lastModifiedDate":"2021-10-06"},{"lineNumber":84,"author":{"gitId":"powzx"},"content":"            while (scanner.hasNext()) {","lastModifiedDate":"2021-10-06"},{"lineNumber":85,"author":{"gitId":"powzx"},"content":"                fileLine \u003d scanner.nextLine();","lastModifiedDate":"2021-10-27"},{"lineNumber":86,"author":{"gitId":"powzx"},"content":"                addToFileLines(fileLine);","lastModifiedDate":"2021-10-30"},{"lineNumber":87,"author":{"gitId":"powzx"},"content":"            }","lastModifiedDate":"2021-10-06"},{"lineNumber":88,"author":{"gitId":"powzx"},"content":"            return fileLines;","lastModifiedDate":"2021-10-06"},{"lineNumber":89,"author":{"gitId":"powzx"},"content":"        } catch (FileNotFoundException exception) {","lastModifiedDate":"2021-10-07"},{"lineNumber":90,"author":{"gitId":"powzx"},"content":"            createFile();","lastModifiedDate":"2021-10-06"},{"lineNumber":91,"author":{"gitId":"powzx"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":92,"author":{"gitId":"powzx"},"content":"        return null;","lastModifiedDate":"2021-10-06"},{"lineNumber":93,"author":{"gitId":"powzx"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":94,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":95,"author":{"gitId":"powzx"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":96,"author":{"gitId":"powzx"},"content":"     * Clears the contents of the file with the name planner.txt.","lastModifiedDate":"2021-10-10"},{"lineNumber":97,"author":{"gitId":"powzx"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":98,"author":{"gitId":"powzx"},"content":"    public void clearFile() {","lastModifiedDate":"2021-10-14"},{"lineNumber":99,"author":{"gitId":"powzx"},"content":"        try {","lastModifiedDate":"2021-10-06"},{"lineNumber":100,"author":{"gitId":"powzx"},"content":"            FileWriter writer \u003d new FileWriter(file);","lastModifiedDate":"2021-10-06"},{"lineNumber":101,"author":{"gitId":"powzx"},"content":"            writer.write(EMPTY_STRING);","lastModifiedDate":"2021-10-27"},{"lineNumber":102,"author":{"gitId":"powzx"},"content":"            writer.close();","lastModifiedDate":"2021-10-06"},{"lineNumber":103,"author":{"gitId":"powzx"},"content":"        } catch (IOException exception) {","lastModifiedDate":"2021-10-07"},{"lineNumber":104,"author":{"gitId":"powzx"},"content":"            exception.printStackTrace();","lastModifiedDate":"2021-10-07"},{"lineNumber":105,"author":{"gitId":"powzx"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":106,"author":{"gitId":"powzx"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":107,"author":{"gitId":"powzx"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"powzx":107}},{"path":"src/main/java/seedu/kolinux/routes/DirectRoute.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"shyamgj1900"},"content":"package seedu.kolinux.routes;","lastModifiedDate":"2021-10-26"},{"lineNumber":2,"author":{"gitId":"shyamgj1900"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":3,"author":{"gitId":"shyamgj1900"},"content":"import seedu.kolinux.exceptions.KolinuxException;","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"shyamgj1900"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"shyamgj1900"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"shyamgj1900"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"shyamgj1900"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"shyamgj1900"},"content":"public class DirectRoute extends Route {","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"shyamgj1900"},"content":"    public static final int TOTAL_OPP_STOPS \u003d 12;","lastModifiedDate":"2021-10-30"},{"lineNumber":10,"author":{"gitId":"shyamgj1900"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":11,"author":{"gitId":"shyamgj1900"},"content":"    public DirectRoute(String[] splitInput) throws KolinuxException, IOException {","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"shyamgj1900"},"content":"        super(splitInput);","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"shyamgj1900"},"content":"        getBusStopNumber();","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"shyamgj1900"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"shyamgj1900"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"shyamgj1900"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"shyamgj1900"},"content":"     * Checks if 2 vertices are directly connected by the same route.","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"shyamgj1900"},"content":"     *","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"shyamgj1900"},"content":"     * @param busNumbers buses of the connected bus stops","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"shyamgj1900"},"content":"     * @return true if connected, false otherwise","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"shyamgj1900"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"shyamgj1900"},"content":"    public boolean checkDirectRoutes(ArrayList\u003cString\u003e busNumbers) {","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"shyamgj1900"},"content":"        boolean flag \u003d false;","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"shyamgj1900"},"content":"        if (graph[0].isConnected(vertexCodeA1[0], vertexCodeA1[1])) {","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"shyamgj1900"},"content":"            busNumbers.add(BUS_A1);","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"shyamgj1900"},"content":"            flag \u003d true;","lastModifiedDate":"2021-10-26"},{"lineNumber":27,"author":{"gitId":"shyamgj1900"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"shyamgj1900"},"content":"        if (graph[1].isConnected(vertexCodeA2[0], vertexCodeA2[1])) {","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"shyamgj1900"},"content":"            busNumbers.add(BUS_A2);","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"shyamgj1900"},"content":"            flag \u003d true;","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"shyamgj1900"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":32,"author":{"gitId":"shyamgj1900"},"content":"        if (graph[2].isConnected(vertexCodeD1[0], vertexCodeD1[1])) {","lastModifiedDate":"2021-10-26"},{"lineNumber":33,"author":{"gitId":"shyamgj1900"},"content":"            busNumbers.add(BUS_D1);","lastModifiedDate":"2021-10-26"},{"lineNumber":34,"author":{"gitId":"shyamgj1900"},"content":"            flag \u003d true;","lastModifiedDate":"2021-10-26"},{"lineNumber":35,"author":{"gitId":"shyamgj1900"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":36,"author":{"gitId":"shyamgj1900"},"content":"        if (graph[3].isConnected(vertexCodeD2[0], vertexCodeD2[1])) {","lastModifiedDate":"2021-10-26"},{"lineNumber":37,"author":{"gitId":"shyamgj1900"},"content":"            busNumbers.add(BUS_D2);","lastModifiedDate":"2021-10-26"},{"lineNumber":38,"author":{"gitId":"shyamgj1900"},"content":"            flag \u003d true;","lastModifiedDate":"2021-10-26"},{"lineNumber":39,"author":{"gitId":"shyamgj1900"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":40,"author":{"gitId":"shyamgj1900"},"content":"        if (graph[4].isConnected(vertexCodeE[0], vertexCodeE[1])) {","lastModifiedDate":"2021-10-26"},{"lineNumber":41,"author":{"gitId":"shyamgj1900"},"content":"            busNumbers.add(BUS_E);","lastModifiedDate":"2021-10-26"},{"lineNumber":42,"author":{"gitId":"shyamgj1900"},"content":"            flag \u003d true;","lastModifiedDate":"2021-10-26"},{"lineNumber":43,"author":{"gitId":"shyamgj1900"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":44,"author":{"gitId":"shyamgj1900"},"content":"        if (graph[5].isConnected(vertexCodeK[0], vertexCodeK[1])) {","lastModifiedDate":"2021-10-26"},{"lineNumber":45,"author":{"gitId":"shyamgj1900"},"content":"            busNumbers.add(BUS_K);","lastModifiedDate":"2021-10-26"},{"lineNumber":46,"author":{"gitId":"shyamgj1900"},"content":"            flag \u003d true;","lastModifiedDate":"2021-10-26"},{"lineNumber":47,"author":{"gitId":"shyamgj1900"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":48,"author":{"gitId":"shyamgj1900"},"content":"        return flag;","lastModifiedDate":"2021-10-26"},{"lineNumber":49,"author":{"gitId":"shyamgj1900"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":50,"author":{"gitId":"shyamgj1900"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":51,"author":{"gitId":"shyamgj1900"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":52,"author":{"gitId":"shyamgj1900"},"content":"     * Checks if there is an alternate route from the opposite bus stop of the","lastModifiedDate":"2021-10-26"},{"lineNumber":53,"author":{"gitId":"shyamgj1900"},"content":"     * starting location.","lastModifiedDate":"2021-10-26"},{"lineNumber":54,"author":{"gitId":"shyamgj1900"},"content":"     *","lastModifiedDate":"2021-10-26"},{"lineNumber":55,"author":{"gitId":"shyamgj1900"},"content":"     * @param busNumbers bus number which connects the two locations","lastModifiedDate":"2021-10-26"},{"lineNumber":56,"author":{"gitId":"shyamgj1900"},"content":"     * @return Message which specifies if any alternate routes are found","lastModifiedDate":"2021-10-26"},{"lineNumber":57,"author":{"gitId":"shyamgj1900"},"content":"     * @throws KolinuxException if the user command is not in the correct format","lastModifiedDate":"2021-10-26"},{"lineNumber":58,"author":{"gitId":"shyamgj1900"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":59,"author":{"gitId":"shyamgj1900"},"content":"    public String checkDirectAlternateRoutes(ArrayList\u003cString\u003e busNumbers) throws KolinuxException {","lastModifiedDate":"2021-10-26"},{"lineNumber":60,"author":{"gitId":"shyamgj1900"},"content":"        boolean flag;","lastModifiedDate":"2021-10-26"},{"lineNumber":61,"author":{"gitId":"shyamgj1900"},"content":"        for (int i \u003d 0; i \u003c TOTAL_OPP_STOPS; i++) {","lastModifiedDate":"2021-10-30"},{"lineNumber":62,"author":{"gitId":"shyamgj1900"},"content":"            if (startLocation.equalsIgnoreCase(oppositeStops[i][0])) {","lastModifiedDate":"2021-10-26"},{"lineNumber":63,"author":{"gitId":"shyamgj1900"},"content":"                busStops[0] \u003d oppositeStops[i][1];","lastModifiedDate":"2021-10-26"},{"lineNumber":64,"author":{"gitId":"shyamgj1900"},"content":"                getBusStopNumber();","lastModifiedDate":"2021-10-26"},{"lineNumber":65,"author":{"gitId":"shyamgj1900"},"content":"                flag \u003d checkDirectRoutes(busNumbers);","lastModifiedDate":"2021-10-26"},{"lineNumber":66,"author":{"gitId":"shyamgj1900"},"content":"                if (flag) {","lastModifiedDate":"2021-10-26"},{"lineNumber":67,"author":{"gitId":"shyamgj1900"},"content":"                    return \"There are no viable bus services from \" + startLocation + \" to \" + endLocation","lastModifiedDate":"2021-10-26"},{"lineNumber":68,"author":{"gitId":"shyamgj1900"},"content":"                            + \". But you can take bus \" + busNumbers + \" from \" + oppositeStops[i][1] + \" to \"","lastModifiedDate":"2021-10-26"},{"lineNumber":69,"author":{"gitId":"shyamgj1900"},"content":"                            + endLocation;","lastModifiedDate":"2021-10-26"},{"lineNumber":70,"author":{"gitId":"shyamgj1900"},"content":"                }","lastModifiedDate":"2021-10-26"},{"lineNumber":71,"author":{"gitId":"shyamgj1900"},"content":"            } else if (startLocation.equalsIgnoreCase(oppositeStops[i][1])) {","lastModifiedDate":"2021-10-26"},{"lineNumber":72,"author":{"gitId":"shyamgj1900"},"content":"                busStops[0] \u003d oppositeStops[i][0];","lastModifiedDate":"2021-10-26"},{"lineNumber":73,"author":{"gitId":"shyamgj1900"},"content":"                getBusStopNumber();","lastModifiedDate":"2021-10-26"},{"lineNumber":74,"author":{"gitId":"shyamgj1900"},"content":"                flag \u003d checkDirectRoutes(busNumbers);","lastModifiedDate":"2021-10-26"},{"lineNumber":75,"author":{"gitId":"shyamgj1900"},"content":"                if (flag) {","lastModifiedDate":"2021-10-26"},{"lineNumber":76,"author":{"gitId":"shyamgj1900"},"content":"                    return \"There are no viable bus services from \" + startLocation + \" to \" + endLocation","lastModifiedDate":"2021-10-26"},{"lineNumber":77,"author":{"gitId":"shyamgj1900"},"content":"                            + \". But you can take bus \" + busNumbers + \" from \" + oppositeStops[i][0] + \" to \"","lastModifiedDate":"2021-10-26"},{"lineNumber":78,"author":{"gitId":"shyamgj1900"},"content":"                            + endLocation;","lastModifiedDate":"2021-10-26"},{"lineNumber":79,"author":{"gitId":"shyamgj1900"},"content":"                }","lastModifiedDate":"2021-10-26"},{"lineNumber":80,"author":{"gitId":"shyamgj1900"},"content":"            }","lastModifiedDate":"2021-10-26"},{"lineNumber":81,"author":{"gitId":"shyamgj1900"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":82,"author":{"gitId":"shyamgj1900"},"content":"        return \"There are no viable bus services from \" + startLocation + \" to \" + endLocation;","lastModifiedDate":"2021-10-26"},{"lineNumber":83,"author":{"gitId":"shyamgj1900"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":84,"author":{"gitId":"shyamgj1900"},"content":"}","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"shyamgj1900":84}},{"path":"src/main/java/seedu/kolinux/routes/Graph.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"powzx"},"content":"package seedu.kolinux.routes;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"shyamgj1900"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"shyamgj1900"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"shyamgj1900"},"content":"import java.util.Iterator;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"shyamgj1900"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"shyamgj1900"},"content":"public class Graph {","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"shyamgj1900"},"content":"    private int vertex;","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"shyamgj1900"},"content":"    private ArrayList\u003cInteger\u003e[] adj;  //adjacency list","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"shyamgj1900"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"shyamgj1900"},"content":"    public Graph(int vertex) {","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"shyamgj1900"},"content":"        this.vertex \u003d vertex;","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"shyamgj1900"},"content":"        adj \u003d new ArrayList[vertex];","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"shyamgj1900"},"content":"        for (int i \u003d 0; i \u003c vertex; i++) {","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"shyamgj1900"},"content":"            adj[i] \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"shyamgj1900"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"shyamgj1900"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"shyamgj1900"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"shyamgj1900"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":19,"author":{"gitId":"shyamgj1900"},"content":"     * Forms the edge between to connected vertices.","lastModifiedDate":"2021-10-14"},{"lineNumber":20,"author":{"gitId":"shyamgj1900"},"content":"     *","lastModifiedDate":"2021-10-14"},{"lineNumber":21,"author":{"gitId":"shyamgj1900"},"content":"     * @param u start vertex","lastModifiedDate":"2021-10-14"},{"lineNumber":22,"author":{"gitId":"shyamgj1900"},"content":"     * @param v end vertex","lastModifiedDate":"2021-10-14"},{"lineNumber":23,"author":{"gitId":"shyamgj1900"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":24,"author":{"gitId":"shyamgj1900"},"content":"    public void addEdge(int u, int v) {","lastModifiedDate":"2021-10-14"},{"lineNumber":25,"author":{"gitId":"shyamgj1900"},"content":"        adj[u].add(v);","lastModifiedDate":"2021-10-14"},{"lineNumber":26,"author":{"gitId":"shyamgj1900"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"shyamgj1900"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"shyamgj1900"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"shyamgj1900"},"content":"     * Uses BFS to check if 2 nodes in a graph are connected with","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"shyamgj1900"},"content":"     * each other.","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"shyamgj1900"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"shyamgj1900"},"content":"     * @param u start vertex","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"shyamgj1900"},"content":"     * @param v final vertex","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"shyamgj1900"},"content":"     * @return true if connected, false otherwise","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"shyamgj1900"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"shyamgj1900"},"content":"    public Boolean isConnected(int u, int v) {","lastModifiedDate":"2021-10-05"},{"lineNumber":37,"author":{"gitId":"shyamgj1900"},"content":"        if (u \u003c 0 || v \u003c 0) {","lastModifiedDate":"2021-10-14"},{"lineNumber":38,"author":{"gitId":"shyamgj1900"},"content":"            return false;","lastModifiedDate":"2021-10-14"},{"lineNumber":39,"author":{"gitId":"shyamgj1900"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":40,"author":{"gitId":"shyamgj1900"},"content":"        int vertex;","lastModifiedDate":"2021-10-05"},{"lineNumber":41,"author":{"gitId":"shyamgj1900"},"content":"        boolean[] visited \u003d new boolean[this.vertex];","lastModifiedDate":"2021-10-18"},{"lineNumber":42,"author":{"gitId":"shyamgj1900"},"content":"        ArrayList\u003cInteger\u003e queue \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-06"},{"lineNumber":43,"author":{"gitId":"shyamgj1900"},"content":"        visited[u] \u003d true;","lastModifiedDate":"2021-10-05"},{"lineNumber":44,"author":{"gitId":"shyamgj1900"},"content":"        queue.add(u);","lastModifiedDate":"2021-10-05"},{"lineNumber":45,"author":{"gitId":"shyamgj1900"},"content":"        Iterator\u003cInteger\u003e i;","lastModifiedDate":"2021-10-05"},{"lineNumber":46,"author":{"gitId":"shyamgj1900"},"content":"        while (queue.size() !\u003d 0) {","lastModifiedDate":"2021-10-05"},{"lineNumber":47,"author":{"gitId":"shyamgj1900"},"content":"            u \u003d queue.get(0);","lastModifiedDate":"2021-10-06"},{"lineNumber":48,"author":{"gitId":"shyamgj1900"},"content":"            queue.remove(0);","lastModifiedDate":"2021-10-06"},{"lineNumber":49,"author":{"gitId":"shyamgj1900"},"content":"            i \u003d adj[u].listIterator();","lastModifiedDate":"2021-10-05"},{"lineNumber":50,"author":{"gitId":"shyamgj1900"},"content":"            while (i.hasNext()) {","lastModifiedDate":"2021-10-05"},{"lineNumber":51,"author":{"gitId":"shyamgj1900"},"content":"                vertex \u003d i.next();","lastModifiedDate":"2021-10-05"},{"lineNumber":52,"author":{"gitId":"shyamgj1900"},"content":"                if (vertex \u003d\u003d v) {","lastModifiedDate":"2021-10-05"},{"lineNumber":53,"author":{"gitId":"shyamgj1900"},"content":"                    return true;","lastModifiedDate":"2021-10-05"},{"lineNumber":54,"author":{"gitId":"shyamgj1900"},"content":"                } else if (!visited[vertex]) {","lastModifiedDate":"2021-10-05"},{"lineNumber":55,"author":{"gitId":"shyamgj1900"},"content":"                    visited[vertex] \u003d true;","lastModifiedDate":"2021-10-05"},{"lineNumber":56,"author":{"gitId":"shyamgj1900"},"content":"                    queue.add(vertex);","lastModifiedDate":"2021-10-05"},{"lineNumber":57,"author":{"gitId":"shyamgj1900"},"content":"                }","lastModifiedDate":"2021-10-05"},{"lineNumber":58,"author":{"gitId":"shyamgj1900"},"content":"            }","lastModifiedDate":"2021-10-05"},{"lineNumber":59,"author":{"gitId":"shyamgj1900"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":60,"author":{"gitId":"shyamgj1900"},"content":"        return false;","lastModifiedDate":"2021-10-05"},{"lineNumber":61,"author":{"gitId":"shyamgj1900"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":62,"author":{"gitId":"shyamgj1900"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"powzx":1,"shyamgj1900":61}},{"path":"src/main/java/seedu/kolinux/routes/IndirectRoute.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"shyamgj1900"},"content":"package seedu.kolinux.routes;","lastModifiedDate":"2021-10-26"},{"lineNumber":2,"author":{"gitId":"shyamgj1900"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":3,"author":{"gitId":"shyamgj1900"},"content":"import seedu.kolinux.exceptions.KolinuxException;","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"shyamgj1900"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"shyamgj1900"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"shyamgj1900"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"shyamgj1900"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"shyamgj1900"},"content":"public class IndirectRoute extends Route {","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"shyamgj1900"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"shyamgj1900"},"content":"    public IndirectRoute(String[] splitInput) throws KolinuxException, IOException {","lastModifiedDate":"2021-10-26"},{"lineNumber":11,"author":{"gitId":"shyamgj1900"},"content":"        super(splitInput);","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"shyamgj1900"},"content":"        getBusStopNumber();","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"shyamgj1900"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"shyamgj1900"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"shyamgj1900"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"shyamgj1900"},"content":"     * Checks if any 2 vertices are connected by an indirect path which","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"shyamgj1900"},"content":"     * requires a change of bus.","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"shyamgj1900"},"content":"     *","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"shyamgj1900"},"content":"     * @param busOne bus number which connects to the intermediate bus stop","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"shyamgj1900"},"content":"     * @param busTwo bus number which connects from the intermediate bus stop","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"shyamgj1900"},"content":"     *               to the final location","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"shyamgj1900"},"content":"     * @param midLoc is the intermediate bus stop","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"shyamgj1900"},"content":"     * @return true if connected, false otherwise","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"shyamgj1900"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"shyamgj1900"},"content":"    public boolean checkIndirectRoutes(ArrayList\u003cString\u003e busOne, ArrayList\u003cString\u003e busTwo, ArrayList\u003cString\u003e midLoc) {","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"shyamgj1900"},"content":"        if (vertexCodeA1[0] \u003e\u003d 0 \u0026\u0026 checkIndirectAOne(busOne, busTwo, midLoc)) {","lastModifiedDate":"2021-10-30"},{"lineNumber":27,"author":{"gitId":"shyamgj1900"},"content":"            return true;","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"shyamgj1900"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"shyamgj1900"},"content":"        if (vertexCodeA2[0] \u003e\u003d 0 \u0026\u0026 checkIndirectATwo(busOne, busTwo, midLoc)) {","lastModifiedDate":"2021-10-30"},{"lineNumber":30,"author":{"gitId":"shyamgj1900"},"content":"            return true;","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"shyamgj1900"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":32,"author":{"gitId":"shyamgj1900"},"content":"        if (vertexCodeD1[0] \u003e\u003d 0 \u0026\u0026 graph[2].isConnected(vertexCodeD1[0], location.getStopNumberDOne(STOP_UTOWN))","lastModifiedDate":"2021-10-30"},{"lineNumber":33,"author":{"gitId":"shyamgj1900"},"content":"                \u0026\u0026 checkIndirectDOne(busOne, busTwo, midLoc)) { //extra condition because D1 is not a loop service","lastModifiedDate":"2021-10-30"},{"lineNumber":34,"author":{"gitId":"shyamgj1900"},"content":"            return true;","lastModifiedDate":"2021-10-26"},{"lineNumber":35,"author":{"gitId":"shyamgj1900"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":36,"author":{"gitId":"shyamgj1900"},"content":"        if (vertexCodeD2[0] \u003e\u003d 0 \u0026\u0026 graph[3].isConnected(vertexCodeD2[0], location.getStopNumberDTwo(STOP_UTOWN))","lastModifiedDate":"2021-10-30"},{"lineNumber":37,"author":{"gitId":"shyamgj1900"},"content":"                \u0026\u0026 checkIndirectDTwo(busOne, busTwo, midLoc)) { //extra condition because D2 is not a loop service","lastModifiedDate":"2021-10-30"},{"lineNumber":38,"author":{"gitId":"shyamgj1900"},"content":"            return true;","lastModifiedDate":"2021-10-26"},{"lineNumber":39,"author":{"gitId":"shyamgj1900"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":40,"author":{"gitId":"shyamgj1900"},"content":"        if (vertexCodeE[0] \u003e\u003d 0 \u0026\u0026 checkIndirectE(busOne, busTwo, midLoc)) {","lastModifiedDate":"2021-10-30"},{"lineNumber":41,"author":{"gitId":"shyamgj1900"},"content":"            return true;","lastModifiedDate":"2021-10-26"},{"lineNumber":42,"author":{"gitId":"shyamgj1900"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":43,"author":{"gitId":"shyamgj1900"},"content":"        if (vertexCodeK[0] \u003e\u003d 0 \u0026\u0026 graph[5].isConnected(vertexCodeK[0], location.getStopNumberK(STOP_KENT_VALE))","lastModifiedDate":"2021-10-30"},{"lineNumber":44,"author":{"gitId":"shyamgj1900"},"content":"                \u0026\u0026 checkIndirectK(busOne, busTwo, midLoc)) { //extra condition because K is not a loop service","lastModifiedDate":"2021-10-30"},{"lineNumber":45,"author":{"gitId":"shyamgj1900"},"content":"            return true;","lastModifiedDate":"2021-10-26"},{"lineNumber":46,"author":{"gitId":"shyamgj1900"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":47,"author":{"gitId":"shyamgj1900"},"content":"        if (vertexCodeD2[0] \u003d\u003d STOP_NUMBER_UTOWN_D2 \u0026\u0026 checkIndirectDTwo(busOne, busTwo, midLoc)) {","lastModifiedDate":"2021-10-31"},{"lineNumber":48,"author":{"gitId":"shyamgj1900"},"content":"            return true;","lastModifiedDate":"2021-10-31"},{"lineNumber":49,"author":{"gitId":"shyamgj1900"},"content":"        }","lastModifiedDate":"2021-10-31"},{"lineNumber":50,"author":{"gitId":"shyamgj1900"},"content":"        if (vertexCodeK[0] \u003d\u003d STOP_NUMBER_KENT_VALE_K \u0026\u0026 checkIndirectK(busOne, busTwo, midLoc)) {","lastModifiedDate":"2021-10-31"},{"lineNumber":51,"author":{"gitId":"shyamgj1900"},"content":"            return true;","lastModifiedDate":"2021-10-31"},{"lineNumber":52,"author":{"gitId":"shyamgj1900"},"content":"        }","lastModifiedDate":"2021-10-31"},{"lineNumber":53,"author":{"gitId":"shyamgj1900"},"content":"        return false;","lastModifiedDate":"2021-10-26"},{"lineNumber":54,"author":{"gitId":"shyamgj1900"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":55,"author":{"gitId":"shyamgj1900"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":56,"author":{"gitId":"shyamgj1900"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":57,"author":{"gitId":"shyamgj1900"},"content":"     * Checks for indirect route in bus route A1.","lastModifiedDate":"2021-10-26"},{"lineNumber":58,"author":{"gitId":"shyamgj1900"},"content":"     *","lastModifiedDate":"2021-10-26"},{"lineNumber":59,"author":{"gitId":"shyamgj1900"},"content":"     * @param busOne bus number which connects to the intermediate bus stop","lastModifiedDate":"2021-10-26"},{"lineNumber":60,"author":{"gitId":"shyamgj1900"},"content":"     * @param busTwo bus number which connects from the intermediate bus stop","lastModifiedDate":"2021-10-26"},{"lineNumber":61,"author":{"gitId":"shyamgj1900"},"content":"     *               to the final location","lastModifiedDate":"2021-10-26"},{"lineNumber":62,"author":{"gitId":"shyamgj1900"},"content":"     * @param midLoc is the intermediate bus stop","lastModifiedDate":"2021-10-26"},{"lineNumber":63,"author":{"gitId":"shyamgj1900"},"content":"     * @return true if connected, false otherwise","lastModifiedDate":"2021-10-26"},{"lineNumber":64,"author":{"gitId":"shyamgj1900"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":65,"author":{"gitId":"shyamgj1900"},"content":"    private boolean checkIndirectAOne(ArrayList\u003cString\u003e busOne, ArrayList\u003cString\u003e busTwo, ArrayList\u003cString\u003e midLoc) {","lastModifiedDate":"2021-10-26"},{"lineNumber":66,"author":{"gitId":"shyamgj1900"},"content":"        boolean flag \u003d false;","lastModifiedDate":"2021-10-26"},{"lineNumber":67,"author":{"gitId":"shyamgj1900"},"content":"        if (graph[3].isConnected(location.getStopNumberDTwo(STOP_PGP), vertexCodeD2[1])) {","lastModifiedDate":"2021-10-26"},{"lineNumber":68,"author":{"gitId":"shyamgj1900"},"content":"            busTwo.add(BUS_D2);","lastModifiedDate":"2021-10-26"},{"lineNumber":69,"author":{"gitId":"shyamgj1900"},"content":"            flag \u003d true;","lastModifiedDate":"2021-10-26"},{"lineNumber":70,"author":{"gitId":"shyamgj1900"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":71,"author":{"gitId":"shyamgj1900"},"content":"        if (graph[5].isConnected(location.getStopNumberK(STOP_PGP), vertexCodeK[1])) {","lastModifiedDate":"2021-10-26"},{"lineNumber":72,"author":{"gitId":"shyamgj1900"},"content":"            busTwo.add(BUS_K);","lastModifiedDate":"2021-10-26"},{"lineNumber":73,"author":{"gitId":"shyamgj1900"},"content":"            flag \u003d true;","lastModifiedDate":"2021-10-26"},{"lineNumber":74,"author":{"gitId":"shyamgj1900"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":75,"author":{"gitId":"shyamgj1900"},"content":"        if (flag) {","lastModifiedDate":"2021-10-26"},{"lineNumber":76,"author":{"gitId":"shyamgj1900"},"content":"            busOne.add(BUS_A1);","lastModifiedDate":"2021-10-26"},{"lineNumber":77,"author":{"gitId":"shyamgj1900"},"content":"            midLoc.add(STOP_PGP);","lastModifiedDate":"2021-10-26"},{"lineNumber":78,"author":{"gitId":"shyamgj1900"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":79,"author":{"gitId":"shyamgj1900"},"content":"        return flag;","lastModifiedDate":"2021-10-26"},{"lineNumber":80,"author":{"gitId":"shyamgj1900"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":81,"author":{"gitId":"shyamgj1900"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":82,"author":{"gitId":"shyamgj1900"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":83,"author":{"gitId":"shyamgj1900"},"content":"     * Checks for indirect route in bus route A2.","lastModifiedDate":"2021-10-26"},{"lineNumber":84,"author":{"gitId":"shyamgj1900"},"content":"     *","lastModifiedDate":"2021-10-26"},{"lineNumber":85,"author":{"gitId":"shyamgj1900"},"content":"     * @param busOne bus number which connects to the intermediate bus stop","lastModifiedDate":"2021-10-26"},{"lineNumber":86,"author":{"gitId":"shyamgj1900"},"content":"     * @param busTwo bus number which connects from the intermediate bus stop","lastModifiedDate":"2021-10-26"},{"lineNumber":87,"author":{"gitId":"shyamgj1900"},"content":"     *               to the final location","lastModifiedDate":"2021-10-26"},{"lineNumber":88,"author":{"gitId":"shyamgj1900"},"content":"     * @param midLoc is the intermediate bus stop","lastModifiedDate":"2021-10-26"},{"lineNumber":89,"author":{"gitId":"shyamgj1900"},"content":"     * @return true if connected, false otherwise","lastModifiedDate":"2021-10-26"},{"lineNumber":90,"author":{"gitId":"shyamgj1900"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":91,"author":{"gitId":"shyamgj1900"},"content":"    private boolean checkIndirectATwo(ArrayList\u003cString\u003e busOne, ArrayList\u003cString\u003e busTwo, ArrayList\u003cString\u003e midLoc) {","lastModifiedDate":"2021-10-26"},{"lineNumber":92,"author":{"gitId":"shyamgj1900"},"content":"        boolean flag \u003d false;","lastModifiedDate":"2021-10-26"},{"lineNumber":93,"author":{"gitId":"shyamgj1900"},"content":"        if (graph[2].isConnected(location.getStopNumberDOne(STOP_IT), vertexCodeD1[1])) {","lastModifiedDate":"2021-10-26"},{"lineNumber":94,"author":{"gitId":"shyamgj1900"},"content":"            busTwo.add(BUS_D1);","lastModifiedDate":"2021-10-26"},{"lineNumber":95,"author":{"gitId":"shyamgj1900"},"content":"            flag \u003d true;","lastModifiedDate":"2021-10-26"},{"lineNumber":96,"author":{"gitId":"shyamgj1900"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":97,"author":{"gitId":"shyamgj1900"},"content":"        if (graph[4].isConnected(location.getStopNumberE(STOP_IT), vertexCodeE[1])) {","lastModifiedDate":"2021-10-26"},{"lineNumber":98,"author":{"gitId":"shyamgj1900"},"content":"            busTwo.add(BUS_E);","lastModifiedDate":"2021-10-26"},{"lineNumber":99,"author":{"gitId":"shyamgj1900"},"content":"            flag \u003d true;","lastModifiedDate":"2021-10-26"},{"lineNumber":100,"author":{"gitId":"shyamgj1900"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":101,"author":{"gitId":"shyamgj1900"},"content":"        if (flag) {","lastModifiedDate":"2021-10-26"},{"lineNumber":102,"author":{"gitId":"shyamgj1900"},"content":"            busOne.add(BUS_A2);","lastModifiedDate":"2021-10-26"},{"lineNumber":103,"author":{"gitId":"shyamgj1900"},"content":"            midLoc.add(STOP_IT);","lastModifiedDate":"2021-10-26"},{"lineNumber":104,"author":{"gitId":"shyamgj1900"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":105,"author":{"gitId":"shyamgj1900"},"content":"        return flag;","lastModifiedDate":"2021-10-26"},{"lineNumber":106,"author":{"gitId":"shyamgj1900"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":107,"author":{"gitId":"shyamgj1900"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":108,"author":{"gitId":"shyamgj1900"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":109,"author":{"gitId":"shyamgj1900"},"content":"     * Checks for indirect route in bus route D1.","lastModifiedDate":"2021-10-26"},{"lineNumber":110,"author":{"gitId":"shyamgj1900"},"content":"     *","lastModifiedDate":"2021-10-26"},{"lineNumber":111,"author":{"gitId":"shyamgj1900"},"content":"     * @param busOne bus number which connects to the intermediate bus stop","lastModifiedDate":"2021-10-26"},{"lineNumber":112,"author":{"gitId":"shyamgj1900"},"content":"     * @param busTwo bus number which connects from the intermediate bus stop","lastModifiedDate":"2021-10-26"},{"lineNumber":113,"author":{"gitId":"shyamgj1900"},"content":"     *               to the final location","lastModifiedDate":"2021-10-26"},{"lineNumber":114,"author":{"gitId":"shyamgj1900"},"content":"     * @param midLoc is the intermediate bus stop","lastModifiedDate":"2021-10-26"},{"lineNumber":115,"author":{"gitId":"shyamgj1900"},"content":"     * @return true if connected, false otherwise","lastModifiedDate":"2021-10-26"},{"lineNumber":116,"author":{"gitId":"shyamgj1900"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":117,"author":{"gitId":"shyamgj1900"},"content":"    private boolean checkIndirectDOne(ArrayList\u003cString\u003e busOne, ArrayList\u003cString\u003e busTwo, ArrayList\u003cString\u003e midLoc) {","lastModifiedDate":"2021-10-26"},{"lineNumber":118,"author":{"gitId":"shyamgj1900"},"content":"        boolean flag \u003d false;","lastModifiedDate":"2021-10-26"},{"lineNumber":119,"author":{"gitId":"shyamgj1900"},"content":"        if (graph[3].isConnected(location.getStopNumberDTwo(STOP_UTOWN), vertexCodeD2[1])) {","lastModifiedDate":"2021-10-26"},{"lineNumber":120,"author":{"gitId":"shyamgj1900"},"content":"            busTwo.add(BUS_D2);","lastModifiedDate":"2021-10-26"},{"lineNumber":121,"author":{"gitId":"shyamgj1900"},"content":"            flag \u003d true;","lastModifiedDate":"2021-10-26"},{"lineNumber":122,"author":{"gitId":"shyamgj1900"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":123,"author":{"gitId":"shyamgj1900"},"content":"        if (graph[4].isConnected(location.getStopNumberE(STOP_UTOWN), vertexCodeE[1])) {","lastModifiedDate":"2021-10-26"},{"lineNumber":124,"author":{"gitId":"shyamgj1900"},"content":"            busTwo.add(BUS_E);","lastModifiedDate":"2021-10-26"},{"lineNumber":125,"author":{"gitId":"shyamgj1900"},"content":"            flag \u003d true;","lastModifiedDate":"2021-10-26"},{"lineNumber":126,"author":{"gitId":"shyamgj1900"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":127,"author":{"gitId":"shyamgj1900"},"content":"        if (flag) {","lastModifiedDate":"2021-10-26"},{"lineNumber":128,"author":{"gitId":"shyamgj1900"},"content":"            busOne.add(BUS_D1);","lastModifiedDate":"2021-10-26"},{"lineNumber":129,"author":{"gitId":"shyamgj1900"},"content":"            midLoc.add(STOP_UTOWN);","lastModifiedDate":"2021-10-26"},{"lineNumber":130,"author":{"gitId":"shyamgj1900"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":131,"author":{"gitId":"shyamgj1900"},"content":"        return flag;","lastModifiedDate":"2021-10-26"},{"lineNumber":132,"author":{"gitId":"shyamgj1900"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":133,"author":{"gitId":"shyamgj1900"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":134,"author":{"gitId":"shyamgj1900"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":135,"author":{"gitId":"shyamgj1900"},"content":"     * Checks for indirect route in bus route D2.","lastModifiedDate":"2021-10-26"},{"lineNumber":136,"author":{"gitId":"shyamgj1900"},"content":"     *","lastModifiedDate":"2021-10-26"},{"lineNumber":137,"author":{"gitId":"shyamgj1900"},"content":"     * @param busOne bus number which connects to the intermediate bus stop","lastModifiedDate":"2021-10-26"},{"lineNumber":138,"author":{"gitId":"shyamgj1900"},"content":"     * @param busTwo bus number which connects from the intermediate bus stop","lastModifiedDate":"2021-10-26"},{"lineNumber":139,"author":{"gitId":"shyamgj1900"},"content":"     *               to the final location","lastModifiedDate":"2021-10-26"},{"lineNumber":140,"author":{"gitId":"shyamgj1900"},"content":"     * @param midLoc is the intermediate bus stop","lastModifiedDate":"2021-10-26"},{"lineNumber":141,"author":{"gitId":"shyamgj1900"},"content":"     * @return true if connected, false otherwise","lastModifiedDate":"2021-10-26"},{"lineNumber":142,"author":{"gitId":"shyamgj1900"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":143,"author":{"gitId":"shyamgj1900"},"content":"    private boolean checkIndirectDTwo(ArrayList\u003cString\u003e busOne, ArrayList\u003cString\u003e busTwo, ArrayList\u003cString\u003e midLoc) {","lastModifiedDate":"2021-10-26"},{"lineNumber":144,"author":{"gitId":"shyamgj1900"},"content":"        boolean flag \u003d false;","lastModifiedDate":"2021-10-26"},{"lineNumber":145,"author":{"gitId":"shyamgj1900"},"content":"        if (vertexCodeD2[0] \u003d\u003d STOP_NUMBER_UTOWN_D2) {","lastModifiedDate":"2021-10-31"},{"lineNumber":146,"author":{"gitId":"shyamgj1900"},"content":"            if (graph[1].isConnected(location.getStopNumberATwo(STOP_PGPR), vertexCodeA2[1])) {","lastModifiedDate":"2021-10-31"},{"lineNumber":147,"author":{"gitId":"shyamgj1900"},"content":"                busOne.add(BUS_D2);","lastModifiedDate":"2021-10-31"},{"lineNumber":148,"author":{"gitId":"shyamgj1900"},"content":"                busTwo.add(BUS_A2);","lastModifiedDate":"2021-10-31"},{"lineNumber":149,"author":{"gitId":"shyamgj1900"},"content":"                midLoc.add(STOP_PGPR);","lastModifiedDate":"2021-10-31"},{"lineNumber":150,"author":{"gitId":"shyamgj1900"},"content":"                return true;","lastModifiedDate":"2021-10-31"},{"lineNumber":151,"author":{"gitId":"shyamgj1900"},"content":"            }","lastModifiedDate":"2021-10-31"},{"lineNumber":152,"author":{"gitId":"shyamgj1900"},"content":"        }","lastModifiedDate":"2021-10-31"},{"lineNumber":153,"author":{"gitId":"shyamgj1900"},"content":"        if (graph[2].isConnected(location.getStopNumberDOne(STOP_UTOWN), vertexCodeD1[1])) {","lastModifiedDate":"2021-10-26"},{"lineNumber":154,"author":{"gitId":"shyamgj1900"},"content":"            busTwo.add(BUS_D1);","lastModifiedDate":"2021-10-26"},{"lineNumber":155,"author":{"gitId":"shyamgj1900"},"content":"            flag \u003d true;","lastModifiedDate":"2021-10-26"},{"lineNumber":156,"author":{"gitId":"shyamgj1900"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":157,"author":{"gitId":"shyamgj1900"},"content":"        if (graph[4].isConnected(location.getStopNumberE(STOP_UTOWN), vertexCodeE[1])) {","lastModifiedDate":"2021-10-26"},{"lineNumber":158,"author":{"gitId":"shyamgj1900"},"content":"            busTwo.add(BUS_E);","lastModifiedDate":"2021-10-26"},{"lineNumber":159,"author":{"gitId":"shyamgj1900"},"content":"            flag \u003d true;","lastModifiedDate":"2021-10-26"},{"lineNumber":160,"author":{"gitId":"shyamgj1900"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":161,"author":{"gitId":"shyamgj1900"},"content":"        if (flag) {","lastModifiedDate":"2021-10-26"},{"lineNumber":162,"author":{"gitId":"shyamgj1900"},"content":"            busOne.add(BUS_D2);","lastModifiedDate":"2021-10-26"},{"lineNumber":163,"author":{"gitId":"shyamgj1900"},"content":"            midLoc.add(STOP_UTOWN);","lastModifiedDate":"2021-10-26"},{"lineNumber":164,"author":{"gitId":"shyamgj1900"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":165,"author":{"gitId":"shyamgj1900"},"content":"        return flag;","lastModifiedDate":"2021-10-26"},{"lineNumber":166,"author":{"gitId":"shyamgj1900"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":167,"author":{"gitId":"shyamgj1900"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":168,"author":{"gitId":"shyamgj1900"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":169,"author":{"gitId":"shyamgj1900"},"content":"     * Checks for indirect route in bus route E.","lastModifiedDate":"2021-10-26"},{"lineNumber":170,"author":{"gitId":"shyamgj1900"},"content":"     *","lastModifiedDate":"2021-10-26"},{"lineNumber":171,"author":{"gitId":"shyamgj1900"},"content":"     * @param busOne bus number which connects to the intermediate bus stop","lastModifiedDate":"2021-10-26"},{"lineNumber":172,"author":{"gitId":"shyamgj1900"},"content":"     * @param busTwo bus number which connects from the intermediate bus stop","lastModifiedDate":"2021-10-26"},{"lineNumber":173,"author":{"gitId":"shyamgj1900"},"content":"     *               to the final location","lastModifiedDate":"2021-10-26"},{"lineNumber":174,"author":{"gitId":"shyamgj1900"},"content":"     * @param midLoc is the intermediate bus stop","lastModifiedDate":"2021-10-26"},{"lineNumber":175,"author":{"gitId":"shyamgj1900"},"content":"     * @return true if connected, false otherwise","lastModifiedDate":"2021-10-26"},{"lineNumber":176,"author":{"gitId":"shyamgj1900"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":177,"author":{"gitId":"shyamgj1900"},"content":"    private boolean checkIndirectE(ArrayList\u003cString\u003e busOne, ArrayList\u003cString\u003e busTwo, ArrayList\u003cString\u003e midLoc) {","lastModifiedDate":"2021-10-26"},{"lineNumber":178,"author":{"gitId":"shyamgj1900"},"content":"        boolean flag \u003d false;","lastModifiedDate":"2021-10-26"},{"lineNumber":179,"author":{"gitId":"shyamgj1900"},"content":"        if (vertexCodeE[0] \u003d\u003d STOP_NUMBER_RAFFLES_HALL_E) {","lastModifiedDate":"2021-10-31"},{"lineNumber":180,"author":{"gitId":"shyamgj1900"},"content":"            if (graph[5].isConnected(location.getStopNumberK(STOP_KENT_VALE), vertexCodeK[1])) {","lastModifiedDate":"2021-10-26"},{"lineNumber":181,"author":{"gitId":"shyamgj1900"},"content":"                busTwo.add(BUS_K);","lastModifiedDate":"2021-10-26"},{"lineNumber":182,"author":{"gitId":"shyamgj1900"},"content":"                flag \u003d true;","lastModifiedDate":"2021-10-26"},{"lineNumber":183,"author":{"gitId":"shyamgj1900"},"content":"            }","lastModifiedDate":"2021-10-26"},{"lineNumber":184,"author":{"gitId":"shyamgj1900"},"content":"            if (flag) {","lastModifiedDate":"2021-10-26"},{"lineNumber":185,"author":{"gitId":"shyamgj1900"},"content":"                busOne.add(BUS_E);","lastModifiedDate":"2021-10-26"},{"lineNumber":186,"author":{"gitId":"shyamgj1900"},"content":"                midLoc.add(STOP_KENT_VALE);","lastModifiedDate":"2021-10-26"},{"lineNumber":187,"author":{"gitId":"shyamgj1900"},"content":"            }","lastModifiedDate":"2021-10-26"},{"lineNumber":188,"author":{"gitId":"shyamgj1900"},"content":"        } else {","lastModifiedDate":"2021-10-26"},{"lineNumber":189,"author":{"gitId":"shyamgj1900"},"content":"            if (graph[2].isConnected(location.getStopNumberDOne(STOP_UTOWN), vertexCodeD1[1])) {","lastModifiedDate":"2021-10-26"},{"lineNumber":190,"author":{"gitId":"shyamgj1900"},"content":"                busTwo.add(BUS_D1);","lastModifiedDate":"2021-10-26"},{"lineNumber":191,"author":{"gitId":"shyamgj1900"},"content":"                flag \u003d true;","lastModifiedDate":"2021-10-26"},{"lineNumber":192,"author":{"gitId":"shyamgj1900"},"content":"            }","lastModifiedDate":"2021-10-26"},{"lineNumber":193,"author":{"gitId":"shyamgj1900"},"content":"            if (graph[3].isConnected(location.getStopNumberDTwo(STOP_UTOWN), vertexCodeD2[1])) {","lastModifiedDate":"2021-10-26"},{"lineNumber":194,"author":{"gitId":"shyamgj1900"},"content":"                busTwo.add(BUS_D2);","lastModifiedDate":"2021-10-26"},{"lineNumber":195,"author":{"gitId":"shyamgj1900"},"content":"                flag \u003d true;","lastModifiedDate":"2021-10-26"},{"lineNumber":196,"author":{"gitId":"shyamgj1900"},"content":"            }","lastModifiedDate":"2021-10-26"},{"lineNumber":197,"author":{"gitId":"shyamgj1900"},"content":"            if (flag) {","lastModifiedDate":"2021-10-26"},{"lineNumber":198,"author":{"gitId":"shyamgj1900"},"content":"                busOne.add(BUS_E);","lastModifiedDate":"2021-10-26"},{"lineNumber":199,"author":{"gitId":"shyamgj1900"},"content":"                midLoc.add(STOP_UTOWN);","lastModifiedDate":"2021-10-26"},{"lineNumber":200,"author":{"gitId":"shyamgj1900"},"content":"            }","lastModifiedDate":"2021-10-26"},{"lineNumber":201,"author":{"gitId":"shyamgj1900"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":202,"author":{"gitId":"shyamgj1900"},"content":"        return flag;","lastModifiedDate":"2021-10-26"},{"lineNumber":203,"author":{"gitId":"shyamgj1900"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":204,"author":{"gitId":"shyamgj1900"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":205,"author":{"gitId":"shyamgj1900"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":206,"author":{"gitId":"shyamgj1900"},"content":"     * Checks for indirect route in bus route K.","lastModifiedDate":"2021-10-26"},{"lineNumber":207,"author":{"gitId":"shyamgj1900"},"content":"     *","lastModifiedDate":"2021-10-26"},{"lineNumber":208,"author":{"gitId":"shyamgj1900"},"content":"     * @param busOne bus number which connects to the intermediate bus stop","lastModifiedDate":"2021-10-26"},{"lineNumber":209,"author":{"gitId":"shyamgj1900"},"content":"     * @param busTwo bus number which connects from the intermediate bus stop","lastModifiedDate":"2021-10-26"},{"lineNumber":210,"author":{"gitId":"shyamgj1900"},"content":"     *               to the final location","lastModifiedDate":"2021-10-26"},{"lineNumber":211,"author":{"gitId":"shyamgj1900"},"content":"     * @param midLoc is the intermediate bus stop","lastModifiedDate":"2021-10-26"},{"lineNumber":212,"author":{"gitId":"shyamgj1900"},"content":"     * @return true if connected, false otherwise","lastModifiedDate":"2021-10-26"},{"lineNumber":213,"author":{"gitId":"shyamgj1900"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":214,"author":{"gitId":"shyamgj1900"},"content":"    private boolean checkIndirectK(ArrayList\u003cString\u003e busOne, ArrayList\u003cString\u003e busTwo, ArrayList\u003cString\u003e midLoc) {","lastModifiedDate":"2021-10-26"},{"lineNumber":215,"author":{"gitId":"shyamgj1900"},"content":"        boolean flag \u003d false;","lastModifiedDate":"2021-10-26"},{"lineNumber":216,"author":{"gitId":"shyamgj1900"},"content":"        if (vertexCodeK[0] \u003d\u003d STOP_NUMBER_KENT_VALE_K) {","lastModifiedDate":"2021-10-31"},{"lineNumber":217,"author":{"gitId":"shyamgj1900"},"content":"            if (graph[1].isConnected(location.getStopNumberATwo(STOP_PGPR), vertexCodeA2[1])) {","lastModifiedDate":"2021-10-31"},{"lineNumber":218,"author":{"gitId":"shyamgj1900"},"content":"                busOne.add(BUS_K);","lastModifiedDate":"2021-10-26"},{"lineNumber":219,"author":{"gitId":"shyamgj1900"},"content":"                busTwo.add(BUS_A2);","lastModifiedDate":"2021-10-31"},{"lineNumber":220,"author":{"gitId":"shyamgj1900"},"content":"                midLoc.add(STOP_PGPR);","lastModifiedDate":"2021-10-31"},{"lineNumber":221,"author":{"gitId":"shyamgj1900"},"content":"                return true;","lastModifiedDate":"2021-10-31"},{"lineNumber":222,"author":{"gitId":"shyamgj1900"},"content":"            }","lastModifiedDate":"2021-10-31"},{"lineNumber":223,"author":{"gitId":"shyamgj1900"},"content":"        }","lastModifiedDate":"2021-10-31"},{"lineNumber":224,"author":{"gitId":"shyamgj1900"},"content":"        if (graph[4].isConnected(location.getStopNumberE(STOP_KENT_VALE), vertexCodeE[1])) {","lastModifiedDate":"2021-10-26"},{"lineNumber":225,"author":{"gitId":"shyamgj1900"},"content":"            busTwo.add(BUS_E);","lastModifiedDate":"2021-10-26"},{"lineNumber":226,"author":{"gitId":"shyamgj1900"},"content":"            midLoc.add(STOP_KENT_VALE);","lastModifiedDate":"2021-10-31"},{"lineNumber":227,"author":{"gitId":"shyamgj1900"},"content":"            flag \u003d true;","lastModifiedDate":"2021-10-26"},{"lineNumber":228,"author":{"gitId":"shyamgj1900"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":229,"author":{"gitId":"shyamgj1900"},"content":"        if (graph[1].isConnected(location.getStopNumberATwo(STOP_PGPR), vertexCodeA2[1])) {","lastModifiedDate":"2021-10-31"},{"lineNumber":230,"author":{"gitId":"shyamgj1900"},"content":"            busTwo.add(BUS_A2);","lastModifiedDate":"2021-10-31"},{"lineNumber":231,"author":{"gitId":"shyamgj1900"},"content":"            midLoc.add(STOP_PGPR);","lastModifiedDate":"2021-10-31"},{"lineNumber":232,"author":{"gitId":"shyamgj1900"},"content":"            flag \u003d true;","lastModifiedDate":"2021-10-31"},{"lineNumber":233,"author":{"gitId":"shyamgj1900"},"content":"        }","lastModifiedDate":"2021-10-31"},{"lineNumber":234,"author":{"gitId":"shyamgj1900"},"content":"        if (flag) {","lastModifiedDate":"2021-10-31"},{"lineNumber":235,"author":{"gitId":"shyamgj1900"},"content":"            busOne.add(BUS_K);","lastModifiedDate":"2021-10-31"},{"lineNumber":236,"author":{"gitId":"shyamgj1900"},"content":"        }","lastModifiedDate":"2021-10-31"},{"lineNumber":237,"author":{"gitId":"shyamgj1900"},"content":"        return flag;","lastModifiedDate":"2021-10-26"},{"lineNumber":238,"author":{"gitId":"shyamgj1900"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":239,"author":{"gitId":"shyamgj1900"},"content":"}","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"shyamgj1900":239}},{"path":"src/main/java/seedu/kolinux/routes/Location.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"shyamgj1900"},"content":"package seedu.kolinux.routes;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"shyamgj1900"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"shyamgj1900"},"content":"import seedu.kolinux.exceptions.KolinuxException;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"shyamgj1900"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"shyamgj1900"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"shyamgj1900"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"shyamgj1900"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"shyamgj1900"},"content":"public class Location {","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"shyamgj1900"},"content":"    public static final String FILEPATH_STOP_NAMES \u003d \"/busStopNames.txt\";","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"shyamgj1900"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"shyamgj1900"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"shyamgj1900"},"content":"     * Reads the list of bus stops from the file and returns the contents","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"shyamgj1900"},"content":"     * of the file.","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"shyamgj1900"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"shyamgj1900"},"content":"     * @return the bus stop names present in the file","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"shyamgj1900"},"content":"     * @throws KolinuxException if the user command is not in the correct format","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"shyamgj1900"},"content":"     * @throws IOException if the there any IO errors","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"shyamgj1900"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"shyamgj1900"},"content":"    public String getBusStopList() throws KolinuxException, IOException {","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"shyamgj1900"},"content":"        ArrayList\u003cString\u003e lines \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"shyamgj1900"},"content":"        Route.readFromFile(lines, FILEPATH_STOP_NAMES);","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"shyamgj1900"},"content":"        return String.join(\"\\n\", lines);","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"shyamgj1900"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"shyamgj1900"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"shyamgj1900"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"shyamgj1900"},"content":"     * Checks the given bus stop name with the corresponding bus stop","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"shyamgj1900"},"content":"     * number in the graph A1 if any.","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"shyamgj1900"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"shyamgj1900"},"content":"     * @param command the bus stop name","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"shyamgj1900"},"content":"     * @return the corresponding bus stop number","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"shyamgj1900"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"shyamgj1900"},"content":"    public int getStopNumberAOne(String command) {","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"shyamgj1900"},"content":"        assert command !\u003d null;","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"shyamgj1900"},"content":"        switch (command.trim().toLowerCase()) {","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"shyamgj1900"},"content":"        case \"kr bus terminal\":","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"shyamgj1900"},"content":"            return 0;","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"shyamgj1900"},"content":"        case \"lt13\":","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"shyamgj1900"},"content":"            return 1;","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"shyamgj1900"},"content":"        case \"as 5\":","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"shyamgj1900"},"content":"            return 2;","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"shyamgj1900"},"content":"        case \"com 2\":","lastModifiedDate":"2021-10-20"},{"lineNumber":42,"author":{"gitId":"shyamgj1900"},"content":"            return 3;","lastModifiedDate":"2021-10-20"},{"lineNumber":43,"author":{"gitId":"shyamgj1900"},"content":"        case \"biz 2\":","lastModifiedDate":"2021-10-20"},{"lineNumber":44,"author":{"gitId":"shyamgj1900"},"content":"            return 4;","lastModifiedDate":"2021-10-20"},{"lineNumber":45,"author":{"gitId":"shyamgj1900"},"content":"        case \"opp tcoms\":","lastModifiedDate":"2021-10-20"},{"lineNumber":46,"author":{"gitId":"shyamgj1900"},"content":"            return 5;","lastModifiedDate":"2021-10-20"},{"lineNumber":47,"author":{"gitId":"shyamgj1900"},"content":"        case \"pgp\":","lastModifiedDate":"2021-10-20"},{"lineNumber":48,"author":{"gitId":"shyamgj1900"},"content":"            return 6;","lastModifiedDate":"2021-10-20"},{"lineNumber":49,"author":{"gitId":"shyamgj1900"},"content":"        case \"kr mrt\":","lastModifiedDate":"2021-10-20"},{"lineNumber":50,"author":{"gitId":"shyamgj1900"},"content":"            return 7;","lastModifiedDate":"2021-10-20"},{"lineNumber":51,"author":{"gitId":"shyamgj1900"},"content":"        case \"lt27\":","lastModifiedDate":"2021-10-20"},{"lineNumber":52,"author":{"gitId":"shyamgj1900"},"content":"            return 8;","lastModifiedDate":"2021-10-20"},{"lineNumber":53,"author":{"gitId":"shyamgj1900"},"content":"        case \"uhall\":","lastModifiedDate":"2021-10-20"},{"lineNumber":54,"author":{"gitId":"shyamgj1900"},"content":"            return 9;","lastModifiedDate":"2021-10-20"},{"lineNumber":55,"author":{"gitId":"shyamgj1900"},"content":"        case \"opp uhc\":","lastModifiedDate":"2021-10-20"},{"lineNumber":56,"author":{"gitId":"shyamgj1900"},"content":"            return 10;","lastModifiedDate":"2021-10-20"},{"lineNumber":57,"author":{"gitId":"shyamgj1900"},"content":"        case \"yih\":","lastModifiedDate":"2021-10-20"},{"lineNumber":58,"author":{"gitId":"shyamgj1900"},"content":"            return 11;","lastModifiedDate":"2021-10-20"},{"lineNumber":59,"author":{"gitId":"shyamgj1900"},"content":"        case \"clb\":","lastModifiedDate":"2021-10-20"},{"lineNumber":60,"author":{"gitId":"shyamgj1900"},"content":"            return 12;","lastModifiedDate":"2021-10-20"},{"lineNumber":61,"author":{"gitId":"shyamgj1900"},"content":"        default:","lastModifiedDate":"2021-10-20"},{"lineNumber":62,"author":{"gitId":"shyamgj1900"},"content":"            return -1;","lastModifiedDate":"2021-10-20"},{"lineNumber":63,"author":{"gitId":"shyamgj1900"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":64,"author":{"gitId":"shyamgj1900"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":65,"author":{"gitId":"shyamgj1900"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":66,"author":{"gitId":"shyamgj1900"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":67,"author":{"gitId":"shyamgj1900"},"content":"     * Checks the given bus stop name with the corresponding bus stop","lastModifiedDate":"2021-10-20"},{"lineNumber":68,"author":{"gitId":"shyamgj1900"},"content":"     * number in the graph A2 if any.","lastModifiedDate":"2021-10-20"},{"lineNumber":69,"author":{"gitId":"shyamgj1900"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":70,"author":{"gitId":"shyamgj1900"},"content":"     * @param command the bus stop name","lastModifiedDate":"2021-10-20"},{"lineNumber":71,"author":{"gitId":"shyamgj1900"},"content":"     * @return the corresponding bus stop number","lastModifiedDate":"2021-10-20"},{"lineNumber":72,"author":{"gitId":"shyamgj1900"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":73,"author":{"gitId":"shyamgj1900"},"content":"    public int getStopNumberATwo(String command) {","lastModifiedDate":"2021-10-20"},{"lineNumber":74,"author":{"gitId":"shyamgj1900"},"content":"        assert command !\u003d null;","lastModifiedDate":"2021-10-20"},{"lineNumber":75,"author":{"gitId":"shyamgj1900"},"content":"        switch (command.trim().toLowerCase()) {","lastModifiedDate":"2021-10-20"},{"lineNumber":76,"author":{"gitId":"shyamgj1900"},"content":"        case \"kr bus terminal\":","lastModifiedDate":"2021-10-20"},{"lineNumber":77,"author":{"gitId":"shyamgj1900"},"content":"            return 0;","lastModifiedDate":"2021-10-20"},{"lineNumber":78,"author":{"gitId":"shyamgj1900"},"content":"        case \"it\":","lastModifiedDate":"2021-10-20"},{"lineNumber":79,"author":{"gitId":"shyamgj1900"},"content":"            return 1;","lastModifiedDate":"2021-10-20"},{"lineNumber":80,"author":{"gitId":"shyamgj1900"},"content":"        case \"opp yih\":","lastModifiedDate":"2021-10-20"},{"lineNumber":81,"author":{"gitId":"shyamgj1900"},"content":"            return 2;","lastModifiedDate":"2021-10-20"},{"lineNumber":82,"author":{"gitId":"shyamgj1900"},"content":"        case \"museum\":","lastModifiedDate":"2021-10-20"},{"lineNumber":83,"author":{"gitId":"shyamgj1900"},"content":"            return 3;","lastModifiedDate":"2021-10-20"},{"lineNumber":84,"author":{"gitId":"shyamgj1900"},"content":"        case \"uhc\":","lastModifiedDate":"2021-10-20"},{"lineNumber":85,"author":{"gitId":"shyamgj1900"},"content":"            return 4;","lastModifiedDate":"2021-10-20"},{"lineNumber":86,"author":{"gitId":"shyamgj1900"},"content":"        case \"opp uhall\":","lastModifiedDate":"2021-10-20"},{"lineNumber":87,"author":{"gitId":"shyamgj1900"},"content":"            return 5;","lastModifiedDate":"2021-10-20"},{"lineNumber":88,"author":{"gitId":"shyamgj1900"},"content":"        case \"s 17\":","lastModifiedDate":"2021-10-20"},{"lineNumber":89,"author":{"gitId":"shyamgj1900"},"content":"            return 6;","lastModifiedDate":"2021-10-20"},{"lineNumber":90,"author":{"gitId":"shyamgj1900"},"content":"        case \"opp kr mrt\":","lastModifiedDate":"2021-10-20"},{"lineNumber":91,"author":{"gitId":"shyamgj1900"},"content":"            return 7;","lastModifiedDate":"2021-10-20"},{"lineNumber":92,"author":{"gitId":"shyamgj1900"},"content":"        case \"pgpr\":","lastModifiedDate":"2021-10-20"},{"lineNumber":93,"author":{"gitId":"shyamgj1900"},"content":"            return 8;","lastModifiedDate":"2021-10-20"},{"lineNumber":94,"author":{"gitId":"shyamgj1900"},"content":"        case \"tcoms\":","lastModifiedDate":"2021-10-20"},{"lineNumber":95,"author":{"gitId":"shyamgj1900"},"content":"            return 9;","lastModifiedDate":"2021-10-20"},{"lineNumber":96,"author":{"gitId":"shyamgj1900"},"content":"        case \"opp hssml\":","lastModifiedDate":"2021-10-20"},{"lineNumber":97,"author":{"gitId":"shyamgj1900"},"content":"            return 10;","lastModifiedDate":"2021-10-20"},{"lineNumber":98,"author":{"gitId":"shyamgj1900"},"content":"        case \"opp nuss\":","lastModifiedDate":"2021-10-20"},{"lineNumber":99,"author":{"gitId":"shyamgj1900"},"content":"            return 11;","lastModifiedDate":"2021-10-20"},{"lineNumber":100,"author":{"gitId":"shyamgj1900"},"content":"        case \"com 2\":","lastModifiedDate":"2021-10-20"},{"lineNumber":101,"author":{"gitId":"shyamgj1900"},"content":"            return 12;","lastModifiedDate":"2021-10-20"},{"lineNumber":102,"author":{"gitId":"shyamgj1900"},"content":"        case \"ventus\":","lastModifiedDate":"2021-10-20"},{"lineNumber":103,"author":{"gitId":"shyamgj1900"},"content":"            return 13;","lastModifiedDate":"2021-10-20"},{"lineNumber":104,"author":{"gitId":"shyamgj1900"},"content":"        default:","lastModifiedDate":"2021-10-20"},{"lineNumber":105,"author":{"gitId":"shyamgj1900"},"content":"            return -1;","lastModifiedDate":"2021-10-20"},{"lineNumber":106,"author":{"gitId":"shyamgj1900"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":107,"author":{"gitId":"shyamgj1900"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":108,"author":{"gitId":"shyamgj1900"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":109,"author":{"gitId":"shyamgj1900"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":110,"author":{"gitId":"shyamgj1900"},"content":"     * Checks the given bus stop name with the corresponding bus stop","lastModifiedDate":"2021-10-20"},{"lineNumber":111,"author":{"gitId":"shyamgj1900"},"content":"     * number in the graph D1 if any.","lastModifiedDate":"2021-10-20"},{"lineNumber":112,"author":{"gitId":"shyamgj1900"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":113,"author":{"gitId":"shyamgj1900"},"content":"     * @param command the bus stop name","lastModifiedDate":"2021-10-20"},{"lineNumber":114,"author":{"gitId":"shyamgj1900"},"content":"     * @return the corresponding bus stop number","lastModifiedDate":"2021-10-20"},{"lineNumber":115,"author":{"gitId":"shyamgj1900"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":116,"author":{"gitId":"shyamgj1900"},"content":"    public int getStopNumberDOne(String command) {","lastModifiedDate":"2021-10-20"},{"lineNumber":117,"author":{"gitId":"shyamgj1900"},"content":"        assert command !\u003d null;","lastModifiedDate":"2021-10-20"},{"lineNumber":118,"author":{"gitId":"shyamgj1900"},"content":"        switch (command.trim().toLowerCase()) {","lastModifiedDate":"2021-10-20"},{"lineNumber":119,"author":{"gitId":"shyamgj1900"},"content":"        case \"opp hssml\":","lastModifiedDate":"2021-10-20"},{"lineNumber":120,"author":{"gitId":"shyamgj1900"},"content":"            return 0;","lastModifiedDate":"2021-10-20"},{"lineNumber":121,"author":{"gitId":"shyamgj1900"},"content":"        case \"opp nuss\":","lastModifiedDate":"2021-10-20"},{"lineNumber":122,"author":{"gitId":"shyamgj1900"},"content":"            return 1;","lastModifiedDate":"2021-10-20"},{"lineNumber":123,"author":{"gitId":"shyamgj1900"},"content":"        case \"com 2\":","lastModifiedDate":"2021-10-20"},{"lineNumber":124,"author":{"gitId":"shyamgj1900"},"content":"            return 2;","lastModifiedDate":"2021-10-20"},{"lineNumber":125,"author":{"gitId":"shyamgj1900"},"content":"        case \"ventus\":","lastModifiedDate":"2021-10-20"},{"lineNumber":126,"author":{"gitId":"shyamgj1900"},"content":"            return 3;","lastModifiedDate":"2021-10-20"},{"lineNumber":127,"author":{"gitId":"shyamgj1900"},"content":"        case \"it\":","lastModifiedDate":"2021-10-20"},{"lineNumber":128,"author":{"gitId":"shyamgj1900"},"content":"            return 4;","lastModifiedDate":"2021-10-20"},{"lineNumber":129,"author":{"gitId":"shyamgj1900"},"content":"        case \"opp yih\":","lastModifiedDate":"2021-10-20"},{"lineNumber":130,"author":{"gitId":"shyamgj1900"},"content":"            return 5;","lastModifiedDate":"2021-10-20"},{"lineNumber":131,"author":{"gitId":"shyamgj1900"},"content":"        case \"museum\":","lastModifiedDate":"2021-10-20"},{"lineNumber":132,"author":{"gitId":"shyamgj1900"},"content":"            return 6;","lastModifiedDate":"2021-10-20"},{"lineNumber":133,"author":{"gitId":"shyamgj1900"},"content":"        case \"utown\":","lastModifiedDate":"2021-10-20"},{"lineNumber":134,"author":{"gitId":"shyamgj1900"},"content":"            return 7;","lastModifiedDate":"2021-10-20"},{"lineNumber":135,"author":{"gitId":"shyamgj1900"},"content":"        case \"yih\":","lastModifiedDate":"2021-10-20"},{"lineNumber":136,"author":{"gitId":"shyamgj1900"},"content":"            return 8;","lastModifiedDate":"2021-10-20"},{"lineNumber":137,"author":{"gitId":"shyamgj1900"},"content":"        case \"clb\":","lastModifiedDate":"2021-10-20"},{"lineNumber":138,"author":{"gitId":"shyamgj1900"},"content":"            return 9;","lastModifiedDate":"2021-10-20"},{"lineNumber":139,"author":{"gitId":"shyamgj1900"},"content":"        case \"lt13\":","lastModifiedDate":"2021-10-20"},{"lineNumber":140,"author":{"gitId":"shyamgj1900"},"content":"            return 10;","lastModifiedDate":"2021-10-20"},{"lineNumber":141,"author":{"gitId":"shyamgj1900"},"content":"        case \"as 5\":","lastModifiedDate":"2021-10-20"},{"lineNumber":142,"author":{"gitId":"shyamgj1900"},"content":"            return 11;","lastModifiedDate":"2021-10-20"},{"lineNumber":143,"author":{"gitId":"shyamgj1900"},"content":"        case \"biz 2\":","lastModifiedDate":"2021-10-20"},{"lineNumber":144,"author":{"gitId":"shyamgj1900"},"content":"            return 12;","lastModifiedDate":"2021-10-20"},{"lineNumber":145,"author":{"gitId":"shyamgj1900"},"content":"        default:","lastModifiedDate":"2021-10-20"},{"lineNumber":146,"author":{"gitId":"shyamgj1900"},"content":"            return -1;","lastModifiedDate":"2021-10-20"},{"lineNumber":147,"author":{"gitId":"shyamgj1900"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":148,"author":{"gitId":"shyamgj1900"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":149,"author":{"gitId":"shyamgj1900"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":150,"author":{"gitId":"shyamgj1900"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":151,"author":{"gitId":"shyamgj1900"},"content":"     * Checks the given bus stop name with the corresponding bus stop","lastModifiedDate":"2021-10-20"},{"lineNumber":152,"author":{"gitId":"shyamgj1900"},"content":"     * number in the graph D2 if any.","lastModifiedDate":"2021-10-20"},{"lineNumber":153,"author":{"gitId":"shyamgj1900"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":154,"author":{"gitId":"shyamgj1900"},"content":"     * @param command the bus stop name","lastModifiedDate":"2021-10-20"},{"lineNumber":155,"author":{"gitId":"shyamgj1900"},"content":"     * @return the corresponding bus stop number","lastModifiedDate":"2021-10-20"},{"lineNumber":156,"author":{"gitId":"shyamgj1900"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":157,"author":{"gitId":"shyamgj1900"},"content":"    public int getStopNumberDTwo(String command) {","lastModifiedDate":"2021-10-20"},{"lineNumber":158,"author":{"gitId":"shyamgj1900"},"content":"        assert command !\u003d null;","lastModifiedDate":"2021-10-20"},{"lineNumber":159,"author":{"gitId":"shyamgj1900"},"content":"        switch (command.trim().toLowerCase()) {","lastModifiedDate":"2021-10-20"},{"lineNumber":160,"author":{"gitId":"shyamgj1900"},"content":"        case \"pgp\":","lastModifiedDate":"2021-10-20"},{"lineNumber":161,"author":{"gitId":"shyamgj1900"},"content":"            return 0;","lastModifiedDate":"2021-10-20"},{"lineNumber":162,"author":{"gitId":"shyamgj1900"},"content":"        case \"kr mrt\":","lastModifiedDate":"2021-10-20"},{"lineNumber":163,"author":{"gitId":"shyamgj1900"},"content":"            return 1;","lastModifiedDate":"2021-10-20"},{"lineNumber":164,"author":{"gitId":"shyamgj1900"},"content":"        case \"lt27\":","lastModifiedDate":"2021-10-20"},{"lineNumber":165,"author":{"gitId":"shyamgj1900"},"content":"            return 2;","lastModifiedDate":"2021-10-20"},{"lineNumber":166,"author":{"gitId":"shyamgj1900"},"content":"        case \"uhall\":","lastModifiedDate":"2021-10-20"},{"lineNumber":167,"author":{"gitId":"shyamgj1900"},"content":"            return 3;","lastModifiedDate":"2021-10-20"},{"lineNumber":168,"author":{"gitId":"shyamgj1900"},"content":"        case \"opp uhc\":","lastModifiedDate":"2021-10-20"},{"lineNumber":169,"author":{"gitId":"shyamgj1900"},"content":"            return 4;","lastModifiedDate":"2021-10-20"},{"lineNumber":170,"author":{"gitId":"shyamgj1900"},"content":"        case \"museum\":","lastModifiedDate":"2021-10-20"},{"lineNumber":171,"author":{"gitId":"shyamgj1900"},"content":"            return 5;","lastModifiedDate":"2021-10-20"},{"lineNumber":172,"author":{"gitId":"shyamgj1900"},"content":"        case \"utown\":","lastModifiedDate":"2021-10-20"},{"lineNumber":173,"author":{"gitId":"shyamgj1900"},"content":"            return 6;","lastModifiedDate":"2021-10-20"},{"lineNumber":174,"author":{"gitId":"shyamgj1900"},"content":"        case \"uhc\":","lastModifiedDate":"2021-10-20"},{"lineNumber":175,"author":{"gitId":"shyamgj1900"},"content":"            return 7;","lastModifiedDate":"2021-10-20"},{"lineNumber":176,"author":{"gitId":"shyamgj1900"},"content":"        case \"opp uhall\":","lastModifiedDate":"2021-10-20"},{"lineNumber":177,"author":{"gitId":"shyamgj1900"},"content":"            return 8;","lastModifiedDate":"2021-10-20"},{"lineNumber":178,"author":{"gitId":"shyamgj1900"},"content":"        case \"s 17\":","lastModifiedDate":"2021-10-20"},{"lineNumber":179,"author":{"gitId":"shyamgj1900"},"content":"            return 9;","lastModifiedDate":"2021-10-20"},{"lineNumber":180,"author":{"gitId":"shyamgj1900"},"content":"        case \"opp kr mrt\":","lastModifiedDate":"2021-10-20"},{"lineNumber":181,"author":{"gitId":"shyamgj1900"},"content":"            return 10;","lastModifiedDate":"2021-10-20"},{"lineNumber":182,"author":{"gitId":"shyamgj1900"},"content":"        case \"pgpr\":","lastModifiedDate":"2021-10-20"},{"lineNumber":183,"author":{"gitId":"shyamgj1900"},"content":"            return 11;","lastModifiedDate":"2021-10-20"},{"lineNumber":184,"author":{"gitId":"shyamgj1900"},"content":"        default:","lastModifiedDate":"2021-10-20"},{"lineNumber":185,"author":{"gitId":"shyamgj1900"},"content":"            return -1;","lastModifiedDate":"2021-10-20"},{"lineNumber":186,"author":{"gitId":"shyamgj1900"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":187,"author":{"gitId":"shyamgj1900"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":188,"author":{"gitId":"shyamgj1900"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":189,"author":{"gitId":"shyamgj1900"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":190,"author":{"gitId":"shyamgj1900"},"content":"     * Checks the given bus stop name with the corresponding bus stop","lastModifiedDate":"2021-10-20"},{"lineNumber":191,"author":{"gitId":"shyamgj1900"},"content":"     * number in the graph E if any.","lastModifiedDate":"2021-10-20"},{"lineNumber":192,"author":{"gitId":"shyamgj1900"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":193,"author":{"gitId":"shyamgj1900"},"content":"     * @param command the bus stop name","lastModifiedDate":"2021-10-20"},{"lineNumber":194,"author":{"gitId":"shyamgj1900"},"content":"     * @return the corresponding bus stop number","lastModifiedDate":"2021-10-20"},{"lineNumber":195,"author":{"gitId":"shyamgj1900"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":196,"author":{"gitId":"shyamgj1900"},"content":"    public int getStopNumberE(String command) {","lastModifiedDate":"2021-10-20"},{"lineNumber":197,"author":{"gitId":"shyamgj1900"},"content":"        assert command !\u003d null;","lastModifiedDate":"2021-10-20"},{"lineNumber":198,"author":{"gitId":"shyamgj1900"},"content":"        switch (command.trim().toLowerCase()) {","lastModifiedDate":"2021-10-20"},{"lineNumber":199,"author":{"gitId":"shyamgj1900"},"content":"        case \"kent vale\":","lastModifiedDate":"2021-10-20"},{"lineNumber":200,"author":{"gitId":"shyamgj1900"},"content":"            return 0;","lastModifiedDate":"2021-10-20"},{"lineNumber":201,"author":{"gitId":"shyamgj1900"},"content":"        case \"ea\":","lastModifiedDate":"2021-10-20"},{"lineNumber":202,"author":{"gitId":"shyamgj1900"},"content":"            return 1;","lastModifiedDate":"2021-10-20"},{"lineNumber":203,"author":{"gitId":"shyamgj1900"},"content":"        case \"sde 3\":","lastModifiedDate":"2021-10-20"},{"lineNumber":204,"author":{"gitId":"shyamgj1900"},"content":"            return 2;","lastModifiedDate":"2021-10-20"},{"lineNumber":205,"author":{"gitId":"shyamgj1900"},"content":"        case \"it\":","lastModifiedDate":"2021-10-20"},{"lineNumber":206,"author":{"gitId":"shyamgj1900"},"content":"            return 3;","lastModifiedDate":"2021-10-20"},{"lineNumber":207,"author":{"gitId":"shyamgj1900"},"content":"        case \"opp yih\":","lastModifiedDate":"2021-10-20"},{"lineNumber":208,"author":{"gitId":"shyamgj1900"},"content":"            return 4;","lastModifiedDate":"2021-10-20"},{"lineNumber":209,"author":{"gitId":"shyamgj1900"},"content":"        case \"utown\":","lastModifiedDate":"2021-10-20"},{"lineNumber":210,"author":{"gitId":"shyamgj1900"},"content":"            return 5;","lastModifiedDate":"2021-10-20"},{"lineNumber":211,"author":{"gitId":"shyamgj1900"},"content":"        case \"raffles hall\":","lastModifiedDate":"2021-10-20"},{"lineNumber":212,"author":{"gitId":"shyamgj1900"},"content":"            return 6;","lastModifiedDate":"2021-10-20"},{"lineNumber":213,"author":{"gitId":"shyamgj1900"},"content":"        default:","lastModifiedDate":"2021-10-20"},{"lineNumber":214,"author":{"gitId":"shyamgj1900"},"content":"            return -1;","lastModifiedDate":"2021-10-20"},{"lineNumber":215,"author":{"gitId":"shyamgj1900"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":216,"author":{"gitId":"shyamgj1900"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":217,"author":{"gitId":"shyamgj1900"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":218,"author":{"gitId":"shyamgj1900"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":219,"author":{"gitId":"shyamgj1900"},"content":"     * Checks the given bus stop name with the corresponding bus stop","lastModifiedDate":"2021-10-20"},{"lineNumber":220,"author":{"gitId":"shyamgj1900"},"content":"     * number in the graph K if any.","lastModifiedDate":"2021-10-20"},{"lineNumber":221,"author":{"gitId":"shyamgj1900"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":222,"author":{"gitId":"shyamgj1900"},"content":"     * @param command the bus stop name","lastModifiedDate":"2021-10-20"},{"lineNumber":223,"author":{"gitId":"shyamgj1900"},"content":"     * @return the corresponding bus stop number","lastModifiedDate":"2021-10-20"},{"lineNumber":224,"author":{"gitId":"shyamgj1900"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":225,"author":{"gitId":"shyamgj1900"},"content":"    public int getStopNumberK(String command) {","lastModifiedDate":"2021-10-20"},{"lineNumber":226,"author":{"gitId":"shyamgj1900"},"content":"        assert command !\u003d null;","lastModifiedDate":"2021-10-20"},{"lineNumber":227,"author":{"gitId":"shyamgj1900"},"content":"        switch (command.trim().toLowerCase()) {","lastModifiedDate":"2021-10-20"},{"lineNumber":228,"author":{"gitId":"shyamgj1900"},"content":"        case \"pgp\":","lastModifiedDate":"2021-10-20"},{"lineNumber":229,"author":{"gitId":"shyamgj1900"},"content":"            return 0;","lastModifiedDate":"2021-10-20"},{"lineNumber":230,"author":{"gitId":"shyamgj1900"},"content":"        case \"kr mrt\":","lastModifiedDate":"2021-10-20"},{"lineNumber":231,"author":{"gitId":"shyamgj1900"},"content":"            return 1;","lastModifiedDate":"2021-10-20"},{"lineNumber":232,"author":{"gitId":"shyamgj1900"},"content":"        case \"lt27\":","lastModifiedDate":"2021-10-20"},{"lineNumber":233,"author":{"gitId":"shyamgj1900"},"content":"            return 2;","lastModifiedDate":"2021-10-20"},{"lineNumber":234,"author":{"gitId":"shyamgj1900"},"content":"        case \"uhall\":","lastModifiedDate":"2021-10-20"},{"lineNumber":235,"author":{"gitId":"shyamgj1900"},"content":"            return 3;","lastModifiedDate":"2021-10-20"},{"lineNumber":236,"author":{"gitId":"shyamgj1900"},"content":"        case \"opp uhc\":","lastModifiedDate":"2021-10-20"},{"lineNumber":237,"author":{"gitId":"shyamgj1900"},"content":"            return 4;","lastModifiedDate":"2021-10-20"},{"lineNumber":238,"author":{"gitId":"shyamgj1900"},"content":"        case \"yih\":","lastModifiedDate":"2021-10-20"},{"lineNumber":239,"author":{"gitId":"shyamgj1900"},"content":"            return 5;","lastModifiedDate":"2021-10-20"},{"lineNumber":240,"author":{"gitId":"shyamgj1900"},"content":"        case \"clb\":","lastModifiedDate":"2021-10-20"},{"lineNumber":241,"author":{"gitId":"shyamgj1900"},"content":"            return 6;","lastModifiedDate":"2021-10-20"},{"lineNumber":242,"author":{"gitId":"shyamgj1900"},"content":"        case \"opp sde 3\":","lastModifiedDate":"2021-10-20"},{"lineNumber":243,"author":{"gitId":"shyamgj1900"},"content":"            return 7;","lastModifiedDate":"2021-10-20"},{"lineNumber":244,"author":{"gitId":"shyamgj1900"},"content":"        case \"japanese pri school\":","lastModifiedDate":"2021-10-20"},{"lineNumber":245,"author":{"gitId":"shyamgj1900"},"content":"            return 8;","lastModifiedDate":"2021-10-20"},{"lineNumber":246,"author":{"gitId":"shyamgj1900"},"content":"        case \"kent vale\":","lastModifiedDate":"2021-10-20"},{"lineNumber":247,"author":{"gitId":"shyamgj1900"},"content":"            return 9;","lastModifiedDate":"2021-10-20"},{"lineNumber":248,"author":{"gitId":"shyamgj1900"},"content":"        case \"museum\":","lastModifiedDate":"2021-10-20"},{"lineNumber":249,"author":{"gitId":"shyamgj1900"},"content":"            return 10;","lastModifiedDate":"2021-10-20"},{"lineNumber":250,"author":{"gitId":"shyamgj1900"},"content":"        case \"uhc\":","lastModifiedDate":"2021-10-20"},{"lineNumber":251,"author":{"gitId":"shyamgj1900"},"content":"            return 11;","lastModifiedDate":"2021-10-20"},{"lineNumber":252,"author":{"gitId":"shyamgj1900"},"content":"        case \"opp uhall\":","lastModifiedDate":"2021-10-20"},{"lineNumber":253,"author":{"gitId":"shyamgj1900"},"content":"            return 12;","lastModifiedDate":"2021-10-20"},{"lineNumber":254,"author":{"gitId":"shyamgj1900"},"content":"        case \"s 17\":","lastModifiedDate":"2021-10-20"},{"lineNumber":255,"author":{"gitId":"shyamgj1900"},"content":"            return 13;","lastModifiedDate":"2021-10-20"},{"lineNumber":256,"author":{"gitId":"shyamgj1900"},"content":"        case \"opp kr mrt\":","lastModifiedDate":"2021-10-20"},{"lineNumber":257,"author":{"gitId":"shyamgj1900"},"content":"            return 14;","lastModifiedDate":"2021-10-20"},{"lineNumber":258,"author":{"gitId":"shyamgj1900"},"content":"        case \"pgpr\":","lastModifiedDate":"2021-10-20"},{"lineNumber":259,"author":{"gitId":"shyamgj1900"},"content":"            return 15;","lastModifiedDate":"2021-10-20"},{"lineNumber":260,"author":{"gitId":"shyamgj1900"},"content":"        default:","lastModifiedDate":"2021-10-20"},{"lineNumber":261,"author":{"gitId":"shyamgj1900"},"content":"            return -1;","lastModifiedDate":"2021-10-20"},{"lineNumber":262,"author":{"gitId":"shyamgj1900"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":263,"author":{"gitId":"shyamgj1900"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":264,"author":{"gitId":"shyamgj1900"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"shyamgj1900":264}},{"path":"src/main/java/seedu/kolinux/routes/Route.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"powzx"},"content":"package seedu.kolinux.routes;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"shyamgj1900"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"powzx"},"content":"import seedu.kolinux.Main;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"powzx"},"content":"import seedu.kolinux.exceptions.KolinuxException;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"shyamgj1900"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"shyamgj1900"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"shyamgj1900"},"content":"import java.io.InputStream;","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"shyamgj1900"},"content":"import java.io.InputStreamReader;","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"shyamgj1900"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"shyamgj1900"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"shyamgj1900"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"shyamgj1900"},"content":"public class Route {","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"shyamgj1900"},"content":"    public static final String BUS_A1 \u003d \"A1\";","lastModifiedDate":"2021-10-17"},{"lineNumber":14,"author":{"gitId":"shyamgj1900"},"content":"    public static final String BUS_A2 \u003d \"A2\";","lastModifiedDate":"2021-10-17"},{"lineNumber":15,"author":{"gitId":"shyamgj1900"},"content":"    public static final String BUS_D1 \u003d \"D1\";","lastModifiedDate":"2021-10-17"},{"lineNumber":16,"author":{"gitId":"shyamgj1900"},"content":"    public static final String BUS_D2 \u003d \"D2\";","lastModifiedDate":"2021-10-17"},{"lineNumber":17,"author":{"gitId":"shyamgj1900"},"content":"    public static final String BUS_E \u003d \"E\";","lastModifiedDate":"2021-10-17"},{"lineNumber":18,"author":{"gitId":"shyamgj1900"},"content":"    public static final String BUS_K \u003d \"K\";","lastModifiedDate":"2021-10-17"},{"lineNumber":19,"author":{"gitId":"shyamgj1900"},"content":"    public static final String STOP_PGP \u003d \"PGP\";","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"shyamgj1900"},"content":"    public static final String STOP_IT \u003d \"IT\";","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"shyamgj1900"},"content":"    public static final String STOP_UTOWN \u003d \"UTOWN\";","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"shyamgj1900"},"content":"    public static final String STOP_KENT_VALE \u003d \"KENT VALE\";","lastModifiedDate":"2021-10-18"},{"lineNumber":23,"author":{"gitId":"shyamgj1900"},"content":"    public static final String STOP_PGPR \u003d \"PGPR\";","lastModifiedDate":"2021-10-31"},{"lineNumber":24,"author":{"gitId":"shyamgj1900"},"content":"    public static final String FILE_NOT_FOUND_MESSAGE \u003d \"File not found.\";","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"shyamgj1900"},"content":"    public static final String FILEPATH_A1 \u003d \"/routeA1.txt\";","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"shyamgj1900"},"content":"    public static final String FILEPATH_A2 \u003d \"/routeA2.txt\";","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"shyamgj1900"},"content":"    public static final String FILEPATH_D1 \u003d \"/routeD1.txt\";","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"shyamgj1900"},"content":"    public static final String FILEPATH_D2 \u003d \"/routeD2.txt\";","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"shyamgj1900"},"content":"    public static final String FILEPATH_E \u003d \"/routeE.txt\";","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"shyamgj1900"},"content":"    public static final String FILEPATH_K \u003d \"/routeK.txt\";","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"shyamgj1900"},"content":"    public static final int TOTAL_VERTICES_A1 \u003d 13;","lastModifiedDate":"2021-10-18"},{"lineNumber":32,"author":{"gitId":"shyamgj1900"},"content":"    public static final int TOTAL_VERTICES_A2 \u003d 14;","lastModifiedDate":"2021-10-18"},{"lineNumber":33,"author":{"gitId":"shyamgj1900"},"content":"    public static final int TOTAL_VERTICES_D1 \u003d 13;","lastModifiedDate":"2021-10-18"},{"lineNumber":34,"author":{"gitId":"shyamgj1900"},"content":"    public static final int TOTAL_VERTICES_D2 \u003d 12;","lastModifiedDate":"2021-10-18"},{"lineNumber":35,"author":{"gitId":"shyamgj1900"},"content":"    public static final int TOTAL_VERTICES_E \u003d 7;","lastModifiedDate":"2021-10-18"},{"lineNumber":36,"author":{"gitId":"shyamgj1900"},"content":"    public static final int TOTAL_VERTICES_K \u003d 16;","lastModifiedDate":"2021-10-18"},{"lineNumber":37,"author":{"gitId":"shyamgj1900"},"content":"    public static final int STOP_NUMBER_RAFFLES_HALL_E \u003d 6;","lastModifiedDate":"2021-10-31"},{"lineNumber":38,"author":{"gitId":"shyamgj1900"},"content":"    public static final int STOP_NUMBER_UTOWN_D2 \u003d 6;","lastModifiedDate":"2021-10-31"},{"lineNumber":39,"author":{"gitId":"shyamgj1900"},"content":"    public static final int STOP_NUMBER_KENT_VALE_K \u003d 9;","lastModifiedDate":"2021-10-31"},{"lineNumber":40,"author":{"gitId":"shyamgj1900"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":41,"author":{"gitId":"shyamgj1900"},"content":"    protected String[] busStops;","lastModifiedDate":"2021-10-26"},{"lineNumber":42,"author":{"gitId":"shyamgj1900"},"content":"    protected String startLocation;","lastModifiedDate":"2021-10-26"},{"lineNumber":43,"author":{"gitId":"shyamgj1900"},"content":"    protected String endLocation;","lastModifiedDate":"2021-10-26"},{"lineNumber":44,"author":{"gitId":"shyamgj1900"},"content":"    protected int[] vertexCodeA1;","lastModifiedDate":"2021-10-26"},{"lineNumber":45,"author":{"gitId":"shyamgj1900"},"content":"    protected int[] vertexCodeA2;","lastModifiedDate":"2021-10-26"},{"lineNumber":46,"author":{"gitId":"shyamgj1900"},"content":"    protected int[] vertexCodeD1;","lastModifiedDate":"2021-10-26"},{"lineNumber":47,"author":{"gitId":"shyamgj1900"},"content":"    protected int[] vertexCodeD2;","lastModifiedDate":"2021-10-26"},{"lineNumber":48,"author":{"gitId":"shyamgj1900"},"content":"    protected int[] vertexCodeE;","lastModifiedDate":"2021-10-26"},{"lineNumber":49,"author":{"gitId":"shyamgj1900"},"content":"    protected int[] vertexCodeK;","lastModifiedDate":"2021-10-26"},{"lineNumber":50,"author":{"gitId":"shyamgj1900"},"content":"    protected Graph[] graph;","lastModifiedDate":"2021-10-26"},{"lineNumber":51,"author":{"gitId":"shyamgj1900"},"content":"    protected Location location;","lastModifiedDate":"2021-10-26"},{"lineNumber":52,"author":{"gitId":"shyamgj1900"},"content":"    protected ArrayList\u003cString\u003e[] vertices;","lastModifiedDate":"2021-10-26"},{"lineNumber":53,"author":{"gitId":"shyamgj1900"},"content":"    protected String[][] oppositeStops \u003d {{\"KR MRT\", \"OPP KR MRT\"}, {\"LT27\", \"S 17\"}, {\"UHALL\", \"OPP UHALL\"},","lastModifiedDate":"2021-10-26"},{"lineNumber":54,"author":{"gitId":"shyamgj1900"},"content":"            {\"OPP UHC\", \"UHC\"}, {\"YIH\", \"OPP YIH\"}, {\"CLB\", \"IT\"}, {\"EA\", \"JAPANESE PRI SCHOOL\"}, {\"PGP\", \"PGPR\"},","lastModifiedDate":"2021-10-21"},{"lineNumber":55,"author":{"gitId":"shyamgj1900"},"content":"            {\"SDE 3\", \"OPP SDE 3\"}, {\"VENTUS\", \"LT13\"}, {\"OPP HSSML\", \"BIZ 2\"}, {\"TCOMS\", \"OPP TCOMS\"}};","lastModifiedDate":"2021-10-21"},{"lineNumber":56,"author":{"gitId":"shyamgj1900"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":57,"author":{"gitId":"shyamgj1900"},"content":"    public Route(String[] splitInput) throws KolinuxException, IOException {","lastModifiedDate":"2021-10-22"},{"lineNumber":58,"author":{"gitId":"shyamgj1900"},"content":"        busStops \u003d new String[2];","lastModifiedDate":"2021-10-20"},{"lineNumber":59,"author":{"gitId":"shyamgj1900"},"content":"        System.arraycopy(splitInput, 1, busStops, 0, 2);","lastModifiedDate":"2021-10-21"},{"lineNumber":60,"author":{"gitId":"shyamgj1900"},"content":"        startLocation \u003d busStops[0].trim().toUpperCase();","lastModifiedDate":"2021-10-21"},{"lineNumber":61,"author":{"gitId":"shyamgj1900"},"content":"        endLocation \u003d busStops[1].trim().toUpperCase();","lastModifiedDate":"2021-10-21"},{"lineNumber":62,"author":{"gitId":"shyamgj1900"},"content":"        vertexCodeA1 \u003d new int[2];","lastModifiedDate":"2021-10-18"},{"lineNumber":63,"author":{"gitId":"shyamgj1900"},"content":"        vertexCodeA2 \u003d new int[2];","lastModifiedDate":"2021-10-18"},{"lineNumber":64,"author":{"gitId":"shyamgj1900"},"content":"        vertexCodeD1 \u003d new int[2];","lastModifiedDate":"2021-10-18"},{"lineNumber":65,"author":{"gitId":"shyamgj1900"},"content":"        vertexCodeD2 \u003d new int[2];","lastModifiedDate":"2021-10-18"},{"lineNumber":66,"author":{"gitId":"shyamgj1900"},"content":"        vertexCodeE \u003d new int[2];","lastModifiedDate":"2021-10-14"},{"lineNumber":67,"author":{"gitId":"shyamgj1900"},"content":"        vertexCodeK \u003d new int[2];","lastModifiedDate":"2021-10-14"},{"lineNumber":68,"author":{"gitId":"shyamgj1900"},"content":"        graph \u003d new Graph[6];","lastModifiedDate":"2021-10-25"},{"lineNumber":69,"author":{"gitId":"shyamgj1900"},"content":"        graph[0] \u003d new Graph(TOTAL_VERTICES_A1);","lastModifiedDate":"2021-10-25"},{"lineNumber":70,"author":{"gitId":"shyamgj1900"},"content":"        graph[1] \u003d new Graph(TOTAL_VERTICES_A2);","lastModifiedDate":"2021-10-25"},{"lineNumber":71,"author":{"gitId":"shyamgj1900"},"content":"        graph[2] \u003d new Graph(TOTAL_VERTICES_D1);","lastModifiedDate":"2021-10-25"},{"lineNumber":72,"author":{"gitId":"shyamgj1900"},"content":"        graph[3] \u003d new Graph(TOTAL_VERTICES_D2);","lastModifiedDate":"2021-10-25"},{"lineNumber":73,"author":{"gitId":"shyamgj1900"},"content":"        graph[4] \u003d new Graph(TOTAL_VERTICES_E);","lastModifiedDate":"2021-10-25"},{"lineNumber":74,"author":{"gitId":"shyamgj1900"},"content":"        graph[5] \u003d new Graph(TOTAL_VERTICES_K);","lastModifiedDate":"2021-10-25"},{"lineNumber":75,"author":{"gitId":"shyamgj1900"},"content":"        location \u003d new Location();","lastModifiedDate":"2021-10-20"},{"lineNumber":76,"author":{"gitId":"shyamgj1900"},"content":"        vertices \u003d new ArrayList[6];","lastModifiedDate":"2021-10-25"},{"lineNumber":77,"author":{"gitId":"shyamgj1900"},"content":"        for (int i \u003d 0; i \u003c 6; i++) {","lastModifiedDate":"2021-10-25"},{"lineNumber":78,"author":{"gitId":"shyamgj1900"},"content":"            vertices[i] \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-25"},{"lineNumber":79,"author":{"gitId":"shyamgj1900"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":80,"author":{"gitId":"shyamgj1900"},"content":"        readFromFile(vertices[0], FILEPATH_A1);","lastModifiedDate":"2021-10-26"},{"lineNumber":81,"author":{"gitId":"shyamgj1900"},"content":"        readFromFile(vertices[1], FILEPATH_A2);","lastModifiedDate":"2021-10-26"},{"lineNumber":82,"author":{"gitId":"shyamgj1900"},"content":"        readFromFile(vertices[2], FILEPATH_D1);","lastModifiedDate":"2021-10-26"},{"lineNumber":83,"author":{"gitId":"shyamgj1900"},"content":"        readFromFile(vertices[3], FILEPATH_D2);","lastModifiedDate":"2021-10-26"},{"lineNumber":84,"author":{"gitId":"shyamgj1900"},"content":"        readFromFile(vertices[4], FILEPATH_E);","lastModifiedDate":"2021-10-26"},{"lineNumber":85,"author":{"gitId":"shyamgj1900"},"content":"        readFromFile(vertices[5], FILEPATH_K);","lastModifiedDate":"2021-10-26"},{"lineNumber":86,"author":{"gitId":"shyamgj1900"},"content":"        for (int i \u003d 0; i \u003c 6; i++) {","lastModifiedDate":"2021-10-25"},{"lineNumber":87,"author":{"gitId":"shyamgj1900"},"content":"            setRoute(vertices[i], graph[i]);","lastModifiedDate":"2021-10-25"},{"lineNumber":88,"author":{"gitId":"shyamgj1900"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":89,"author":{"gitId":"shyamgj1900"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":90,"author":{"gitId":"shyamgj1900"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":91,"author":{"gitId":"shyamgj1900"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":92,"author":{"gitId":"shyamgj1900"},"content":"     * Reads the contents from the file which consists of the path","lastModifiedDate":"2021-10-14"},{"lineNumber":93,"author":{"gitId":"shyamgj1900"},"content":"     * of the graph.","lastModifiedDate":"2021-10-14"},{"lineNumber":94,"author":{"gitId":"shyamgj1900"},"content":"     *","lastModifiedDate":"2021-10-14"},{"lineNumber":95,"author":{"gitId":"shyamgj1900"},"content":"     * @param lines contains the nodes which connect the graph","lastModifiedDate":"2021-10-23"},{"lineNumber":96,"author":{"gitId":"shyamgj1900"},"content":"     * @param filePath the path of the input file","lastModifiedDate":"2021-10-14"},{"lineNumber":97,"author":{"gitId":"shyamgj1900"},"content":"     * @throws KolinuxException if the user command is not in the correct format","lastModifiedDate":"2021-10-14"},{"lineNumber":98,"author":{"gitId":"shyamgj1900"},"content":"     * @throws IOException if the there any IO errors","lastModifiedDate":"2021-10-14"},{"lineNumber":99,"author":{"gitId":"shyamgj1900"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":100,"author":{"gitId":"shyamgj1900"},"content":"    protected static void readFromFile(ArrayList\u003cString\u003e lines, String filePath) throws KolinuxException, IOException {","lastModifiedDate":"2021-10-26"},{"lineNumber":101,"author":{"gitId":"shyamgj1900"},"content":"        try {","lastModifiedDate":"2021-10-06"},{"lineNumber":102,"author":{"gitId":"shyamgj1900"},"content":"            InputStream inputStream \u003d Main.class.getResourceAsStream(filePath);","lastModifiedDate":"2021-10-06"},{"lineNumber":103,"author":{"gitId":"shyamgj1900"},"content":"            if (inputStream \u003d\u003d null) {","lastModifiedDate":"2021-10-11"},{"lineNumber":104,"author":{"gitId":"shyamgj1900"},"content":"                throw new KolinuxException(FILE_NOT_FOUND_MESSAGE);","lastModifiedDate":"2021-10-26"},{"lineNumber":105,"author":{"gitId":"shyamgj1900"},"content":"            }","lastModifiedDate":"2021-10-11"},{"lineNumber":106,"author":{"gitId":"shyamgj1900"},"content":"            BufferedReader reader \u003d new BufferedReader(new InputStreamReader(inputStream));","lastModifiedDate":"2021-10-06"},{"lineNumber":107,"author":{"gitId":"shyamgj1900"},"content":"            String line;","lastModifiedDate":"2021-10-06"},{"lineNumber":108,"author":{"gitId":"shyamgj1900"},"content":"            while ((line \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2021-10-06"},{"lineNumber":109,"author":{"gitId":"shyamgj1900"},"content":"                lines.add(line);","lastModifiedDate":"2021-10-23"},{"lineNumber":110,"author":{"gitId":"shyamgj1900"},"content":"            }","lastModifiedDate":"2021-10-06"},{"lineNumber":111,"author":{"gitId":"shyamgj1900"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-10-06"},{"lineNumber":112,"author":{"gitId":"shyamgj1900"},"content":"            throw new IOException();","lastModifiedDate":"2021-10-11"},{"lineNumber":113,"author":{"gitId":"shyamgj1900"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":114,"author":{"gitId":"shyamgj1900"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":115,"author":{"gitId":"shyamgj1900"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":116,"author":{"gitId":"shyamgj1900"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":117,"author":{"gitId":"shyamgj1900"},"content":"     * Forms the bus route. This is done in the form of an unweighted graph.","lastModifiedDate":"2021-10-14"},{"lineNumber":118,"author":{"gitId":"shyamgj1900"},"content":"     *","lastModifiedDate":"2021-10-14"},{"lineNumber":119,"author":{"gitId":"shyamgj1900"},"content":"     * @param vertices contains the nodes which connect the graph","lastModifiedDate":"2021-10-14"},{"lineNumber":120,"author":{"gitId":"shyamgj1900"},"content":"     * @param graph is the graph which forms the bus route","lastModifiedDate":"2021-10-14"},{"lineNumber":121,"author":{"gitId":"shyamgj1900"},"content":"     * @throws KolinuxException if the user command is not in the correct format","lastModifiedDate":"2021-10-14"},{"lineNumber":122,"author":{"gitId":"shyamgj1900"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":123,"author":{"gitId":"shyamgj1900"},"content":"    private void setRoute(ArrayList\u003cString\u003e vertices, Graph graph) {","lastModifiedDate":"2021-10-24"},{"lineNumber":124,"author":{"gitId":"shyamgj1900"},"content":"        assert vertices.size() !\u003d 0;","lastModifiedDate":"2021-10-24"},{"lineNumber":125,"author":{"gitId":"shyamgj1900"},"content":"        for (String v : vertices) {","lastModifiedDate":"2021-10-06"},{"lineNumber":126,"author":{"gitId":"shyamgj1900"},"content":"            String[] vertex \u003d v.split(\" \");","lastModifiedDate":"2021-10-06"},{"lineNumber":127,"author":{"gitId":"shyamgj1900"},"content":"            graph.addEdge(Integer.parseInt(vertex[0]), Integer.parseInt((vertex[1])));","lastModifiedDate":"2021-10-06"},{"lineNumber":128,"author":{"gitId":"shyamgj1900"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":129,"author":{"gitId":"shyamgj1900"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":130,"author":{"gitId":"shyamgj1900"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":131,"author":{"gitId":"shyamgj1900"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":132,"author":{"gitId":"shyamgj1900"},"content":"     * Converts the bus stop locations into bus stop numbers.","lastModifiedDate":"2021-10-14"},{"lineNumber":133,"author":{"gitId":"shyamgj1900"},"content":"     *","lastModifiedDate":"2021-10-14"},{"lineNumber":134,"author":{"gitId":"shyamgj1900"},"content":"     * @throws KolinuxException if the user command is not in the correct format","lastModifiedDate":"2021-10-14"},{"lineNumber":135,"author":{"gitId":"shyamgj1900"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":136,"author":{"gitId":"shyamgj1900"},"content":"    public void getBusStopNumber() throws KolinuxException {","lastModifiedDate":"2021-10-20"},{"lineNumber":137,"author":{"gitId":"shyamgj1900"},"content":"        for (int i \u003d 0; i \u003c 2; i++) {","lastModifiedDate":"2021-10-14"},{"lineNumber":138,"author":{"gitId":"shyamgj1900"},"content":"            vertexCodeA1[i] \u003d location.getStopNumberAOne(busStops[i]);","lastModifiedDate":"2021-10-20"},{"lineNumber":139,"author":{"gitId":"shyamgj1900"},"content":"            vertexCodeA2[i] \u003d location.getStopNumberATwo(busStops[i]);","lastModifiedDate":"2021-10-20"},{"lineNumber":140,"author":{"gitId":"shyamgj1900"},"content":"            vertexCodeD1[i] \u003d location.getStopNumberDOne(busStops[i]);","lastModifiedDate":"2021-10-20"},{"lineNumber":141,"author":{"gitId":"shyamgj1900"},"content":"            vertexCodeD2[i] \u003d location.getStopNumberDTwo(busStops[i]);","lastModifiedDate":"2021-10-20"},{"lineNumber":142,"author":{"gitId":"shyamgj1900"},"content":"            vertexCodeE[i] \u003d location.getStopNumberE(busStops[i]);","lastModifiedDate":"2021-10-20"},{"lineNumber":143,"author":{"gitId":"shyamgj1900"},"content":"            vertexCodeK[i] \u003d location.getStopNumberK(busStops[i]);","lastModifiedDate":"2021-10-20"},{"lineNumber":144,"author":{"gitId":"shyamgj1900"},"content":"            if (vertexCodeA1[i] \u003c 0 \u0026\u0026 vertexCodeA2[i] \u003c 0 \u0026\u0026 vertexCodeD1[i] \u003c 0","lastModifiedDate":"2021-10-18"},{"lineNumber":145,"author":{"gitId":"shyamgj1900"},"content":"                    \u0026\u0026 vertexCodeE[i] \u003c 0 \u0026\u0026 vertexCodeD2[i] \u003c 0 \u0026\u0026 vertexCodeK[i] \u003c 0) {","lastModifiedDate":"2021-10-18"},{"lineNumber":146,"author":{"gitId":"shyamgj1900"},"content":"                throw new KolinuxException(busStops[i].trim() + \" is not a valid bus stop name.\");","lastModifiedDate":"2021-10-20"},{"lineNumber":147,"author":{"gitId":"shyamgj1900"},"content":"            }","lastModifiedDate":"2021-10-17"},{"lineNumber":148,"author":{"gitId":"shyamgj1900"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":149,"author":{"gitId":"shyamgj1900"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":150,"author":{"gitId":"shyamgj1900"},"content":"}","lastModifiedDate":"2021-10-06"},{"lineNumber":151,"author":{"gitId":"shyamgj1900"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":152,"author":{"gitId":"shyamgj1900"},"content":"","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"powzx":3,"shyamgj1900":149}},{"path":"src/main/java/seedu/kolinux/timetable/Timetable.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"saravanamani1999"},"content":"package seedu.kolinux.timetable;","lastModifiedDate":"2021-10-22"},{"lineNumber":2,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":3,"author":{"gitId":"saravanamani1999"},"content":"import seedu.kolinux.exceptions.KolinuxException;","lastModifiedDate":"2021-10-22"},{"lineNumber":4,"author":{"gitId":"saravanamani1999"},"content":"import seedu.kolinux.module.ModuleList;","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"saravanamani1999"},"content":"import seedu.kolinux.timetable.lesson.Lesson;","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"saravanamani1999"},"content":"import seedu.kolinux.timetable.subcommand.AddSubCommand;","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"saravanamani1999"},"content":"import seedu.kolinux.timetable.subcommand.DeleteSubCommand;","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"saravanamani1999"},"content":"import seedu.kolinux.timetable.subcommand.UpdateSubCommand;","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"saravanamani1999"},"content":"import seedu.kolinux.timetable.subcommand.ViewSubCommand;","lastModifiedDate":"2021-11-04"},{"lineNumber":10,"author":{"gitId":"saravanamani1999"},"content":"import seedu.kolinux.timetable.subcommand.SubCommand;","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":12,"author":{"gitId":"saravanamani1999"},"content":"import java.io.File;","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"saravanamani1999"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"saravanamani1999"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"saravanamani1999"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-10-22"},{"lineNumber":16,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":17,"author":{"gitId":"saravanamani1999"},"content":"import static seedu.kolinux.timetable.lesson.Lesson.days;","lastModifiedDate":"2021-11-01"},{"lineNumber":18,"author":{"gitId":"saravanamani1999"},"content":"import static seedu.kolinux.timetable.lesson.Lesson.getIndex;","lastModifiedDate":"2021-11-01"},{"lineNumber":19,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":20,"author":{"gitId":"saravanamani1999"},"content":"/**","lastModifiedDate":"2021-10-22"},{"lineNumber":21,"author":{"gitId":"saravanamani1999"},"content":" * Timetable class that represents the methods to interact with the 2D timetable array and Array list for storage.","lastModifiedDate":"2021-10-22"},{"lineNumber":22,"author":{"gitId":"saravanamani1999"},"content":" */","lastModifiedDate":"2021-10-22"},{"lineNumber":23,"author":{"gitId":"saravanamani1999"},"content":"public class Timetable {","lastModifiedDate":"2021-10-22"},{"lineNumber":24,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":25,"author":{"gitId":"saravanamani1999"},"content":"    public static ModuleList moduleList;","lastModifiedDate":"2021-10-22"},{"lineNumber":26,"author":{"gitId":"saravanamani1999"},"content":"    private static final int ROW_SIZE \u003d 31;","lastModifiedDate":"2021-11-01"},{"lineNumber":27,"author":{"gitId":"saravanamani1999"},"content":"    private static final int COLUMN_SIZE \u003d 6;","lastModifiedDate":"2021-10-22"},{"lineNumber":28,"author":{"gitId":"saravanamani1999"},"content":"    public static String [][] timetableData \u003d new String[ROW_SIZE][COLUMN_SIZE];","lastModifiedDate":"2021-10-22"},{"lineNumber":29,"author":{"gitId":"saravanamani1999"},"content":"    public static ArrayList\u003cLesson\u003e lessonStorage \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-22"},{"lineNumber":30,"author":{"gitId":"saravanamani1999"},"content":"    public static TimetableStorage timetableStorage \u003d new TimetableStorage(lessonStorage);","lastModifiedDate":"2021-10-23"},{"lineNumber":31,"author":{"gitId":"saravanamani1999"},"content":"    private ViewSubCommand viewSubCommand \u003d new ViewSubCommand();","lastModifiedDate":"2021-10-23"},{"lineNumber":32,"author":{"gitId":"saravanamani1999"},"content":"    private AddSubCommand addSubCommand \u003d new AddSubCommand();","lastModifiedDate":"2021-10-23"},{"lineNumber":33,"author":{"gitId":"saravanamani1999"},"content":"    private DeleteSubCommand deleteSubCommand \u003d new DeleteSubCommand();","lastModifiedDate":"2021-10-23"},{"lineNumber":34,"author":{"gitId":"saravanamani1999"},"content":"    private UpdateSubCommand updateSubCommand \u003d new UpdateSubCommand();","lastModifiedDate":"2021-10-23"},{"lineNumber":35,"author":{"gitId":"saravanamani1999"},"content":"    public static String filePath \u003d \"./data/timetable.txt\";","lastModifiedDate":"2021-10-22"},{"lineNumber":36,"author":{"gitId":"saravanamani1999"},"content":"    public static File file \u003d new File(filePath);","lastModifiedDate":"2021-10-22"},{"lineNumber":37,"author":{"gitId":"saravanamani1999"},"content":"    public static final String CORRUPT_STORAGE \u003d \"Your timetable storage file is corrupted, \"","lastModifiedDate":"2021-10-22"},{"lineNumber":38,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-10-22"},{"lineNumber":39,"author":{"gitId":"saravanamani1999"},"content":"            \"it will be reset and cleared\";","lastModifiedDate":"2021-10-22"},{"lineNumber":40,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":41,"author":{"gitId":"saravanamani1999"},"content":"    public Timetable(ModuleList moduleList) {","lastModifiedDate":"2021-10-22"},{"lineNumber":42,"author":{"gitId":"saravanamani1999"},"content":"        this.moduleList \u003d moduleList;","lastModifiedDate":"2021-10-22"},{"lineNumber":43,"author":{"gitId":"saravanamani1999"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":44,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":45,"author":{"gitId":"saravanamani1999"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":46,"author":{"gitId":"saravanamani1999"},"content":"     * Initializes the timetable with the data from timetable.txt when Kolinux starts up.","lastModifiedDate":"2021-10-22"},{"lineNumber":47,"author":{"gitId":"saravanamani1999"},"content":"     *","lastModifiedDate":"2021-10-22"},{"lineNumber":48,"author":{"gitId":"saravanamani1999"},"content":"     * @throws KolinuxException If the format of the data in the file is incorrect","lastModifiedDate":"2021-10-22"},{"lineNumber":49,"author":{"gitId":"saravanamani1999"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":50,"author":{"gitId":"saravanamani1999"},"content":"    public void initTimetable() throws KolinuxException {","lastModifiedDate":"2021-10-22"},{"lineNumber":51,"author":{"gitId":"saravanamani1999"},"content":"        ArrayList\u003cString\u003e fileContents \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-22"},{"lineNumber":52,"author":{"gitId":"saravanamani1999"},"content":"        try {","lastModifiedDate":"2021-10-22"},{"lineNumber":53,"author":{"gitId":"saravanamani1999"},"content":"            Scanner s \u003d new Scanner(file);","lastModifiedDate":"2021-10-22"},{"lineNumber":54,"author":{"gitId":"saravanamani1999"},"content":"            while (s.hasNext()) {","lastModifiedDate":"2021-10-22"},{"lineNumber":55,"author":{"gitId":"saravanamani1999"},"content":"                fileContents.add(s.nextLine());","lastModifiedDate":"2021-10-22"},{"lineNumber":56,"author":{"gitId":"saravanamani1999"},"content":"            }","lastModifiedDate":"2021-10-22"},{"lineNumber":57,"author":{"gitId":"saravanamani1999"},"content":"            loadContent(fileContents);","lastModifiedDate":"2021-10-22"},{"lineNumber":58,"author":{"gitId":"saravanamani1999"},"content":"        } catch (FileNotFoundException exception) {","lastModifiedDate":"2021-10-22"},{"lineNumber":59,"author":{"gitId":"saravanamani1999"},"content":"            timetableStorage.createFilePath(filePath);","lastModifiedDate":"2021-10-22"},{"lineNumber":60,"author":{"gitId":"saravanamani1999"},"content":"        } catch (ArrayIndexOutOfBoundsException | KolinuxException exception) {","lastModifiedDate":"2021-10-31"},{"lineNumber":61,"author":{"gitId":"saravanamani1999"},"content":"            clearTimetable();","lastModifiedDate":"2021-10-22"},{"lineNumber":62,"author":{"gitId":"saravanamani1999"},"content":"            timetableStorage.clearFile();","lastModifiedDate":"2021-10-22"},{"lineNumber":63,"author":{"gitId":"saravanamani1999"},"content":"            throw new KolinuxException(CORRUPT_STORAGE);","lastModifiedDate":"2021-10-22"},{"lineNumber":64,"author":{"gitId":"saravanamani1999"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":65,"author":{"gitId":"saravanamani1999"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":66,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":67,"author":{"gitId":"saravanamani1999"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":68,"author":{"gitId":"saravanamani1999"},"content":"     * Loads the content of the timetable.txt file onto the 2D timetable array and lessonStorage array list","lastModifiedDate":"2021-10-22"},{"lineNumber":69,"author":{"gitId":"saravanamani1999"},"content":"     * to carry out any timetable commands given by user.","lastModifiedDate":"2021-10-22"},{"lineNumber":70,"author":{"gitId":"saravanamani1999"},"content":"     *","lastModifiedDate":"2021-10-22"},{"lineNumber":71,"author":{"gitId":"saravanamani1999"},"content":"     * @param fileContents Array list of the contents of the timetable text file","lastModifiedDate":"2021-10-22"},{"lineNumber":72,"author":{"gitId":"saravanamani1999"},"content":"     * @throws KolinuxException If the format of the file content for timetable inputting is incorrect","lastModifiedDate":"2021-10-22"},{"lineNumber":73,"author":{"gitId":"saravanamani1999"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":74,"author":{"gitId":"saravanamani1999"},"content":"    private void loadContent(ArrayList\u003cString\u003e fileContents) throws KolinuxException {","lastModifiedDate":"2021-10-30"},{"lineNumber":75,"author":{"gitId":"saravanamani1999"},"content":"        for (String fileContent : fileContents) {","lastModifiedDate":"2021-10-22"},{"lineNumber":76,"author":{"gitId":"saravanamani1999"},"content":"            String[] content \u003d fileContent.split(\"/\");","lastModifiedDate":"2021-10-22"},{"lineNumber":77,"author":{"gitId":"saravanamani1999"},"content":"            addSubCommand.inputLesson(content, false, true);","lastModifiedDate":"2021-11-04"},{"lineNumber":78,"author":{"gitId":"saravanamani1999"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":79,"author":{"gitId":"saravanamani1999"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":80,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":81,"author":{"gitId":"saravanamani1999"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":82,"author":{"gitId":"saravanamani1999"},"content":"     * Executes the view subcommand for timetable which displays the timetable on CLI.","lastModifiedDate":"2021-11-05"},{"lineNumber":83,"author":{"gitId":"saravanamani1999"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":84,"author":{"gitId":"saravanamani1999"},"content":"    public void executeView() {","lastModifiedDate":"2021-10-23"},{"lineNumber":85,"author":{"gitId":"saravanamani1999"},"content":"        viewSubCommand.viewTimetable();","lastModifiedDate":"2021-10-23"},{"lineNumber":86,"author":{"gitId":"saravanamani1999"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":87,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":88,"author":{"gitId":"saravanamani1999"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":89,"author":{"gitId":"saravanamani1999"},"content":"     * Executes the add subcommand for timetable which adds a lesson to the timetable.","lastModifiedDate":"2021-11-05"},{"lineNumber":90,"author":{"gitId":"saravanamani1999"},"content":"     *","lastModifiedDate":"2021-11-05"},{"lineNumber":91,"author":{"gitId":"saravanamani1999"},"content":"     * @param lessonDetails Details of the lesson to be added","lastModifiedDate":"2021-11-05"},{"lineNumber":92,"author":{"gitId":"saravanamani1999"},"content":"     * @param isAllowingAdd Boolean to check whether user allows adding to timetable despite exceeding workload","lastModifiedDate":"2021-11-05"},{"lineNumber":93,"author":{"gitId":"saravanamani1999"},"content":"     * @throws KolinuxException If it fails any of the checks in addSubCommand before performing add operation","lastModifiedDate":"2021-11-05"},{"lineNumber":94,"author":{"gitId":"saravanamani1999"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":95,"author":{"gitId":"saravanamani1999"},"content":"    public void executeAdd(String[] lessonDetails, boolean isAllowingAdd) throws KolinuxException {","lastModifiedDate":"2021-11-04"},{"lineNumber":96,"author":{"gitId":"saravanamani1999"},"content":"        addSubCommand.inputLesson(lessonDetails, isAllowingAdd, false);","lastModifiedDate":"2021-11-04"},{"lineNumber":97,"author":{"gitId":"saravanamani1999"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":98,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":99,"author":{"gitId":"saravanamani1999"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":100,"author":{"gitId":"saravanamani1999"},"content":"     * Executes the delete subcommand for timetable which deletes a lesson from the timetable.","lastModifiedDate":"2021-11-05"},{"lineNumber":101,"author":{"gitId":"saravanamani1999"},"content":"     *","lastModifiedDate":"2021-11-05"},{"lineNumber":102,"author":{"gitId":"saravanamani1999"},"content":"     * @param lessonDetails Details of the lesson to be deleted","lastModifiedDate":"2021-11-05"},{"lineNumber":103,"author":{"gitId":"saravanamani1999"},"content":"     * @throws KolinuxException If it fails any of the checks in DeleteSubCommand before performing delete operation","lastModifiedDate":"2021-11-05"},{"lineNumber":104,"author":{"gitId":"saravanamani1999"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":105,"author":{"gitId":"saravanamani1999"},"content":"    public void executeDelete(String[] lessonDetails) throws KolinuxException {","lastModifiedDate":"2021-10-25"},{"lineNumber":106,"author":{"gitId":"saravanamani1999"},"content":"        try {","lastModifiedDate":"2021-11-04"},{"lineNumber":107,"author":{"gitId":"saravanamani1999"},"content":"            String moduleCode \u003d lessonDetails[0].toUpperCase();","lastModifiedDate":"2021-11-04"},{"lineNumber":108,"author":{"gitId":"saravanamani1999"},"content":"            String lessonType \u003d lessonDetails[1].toUpperCase();","lastModifiedDate":"2021-11-04"},{"lineNumber":109,"author":{"gitId":"saravanamani1999"},"content":"            String day \u003d lessonDetails[2].toLowerCase();","lastModifiedDate":"2021-11-04"},{"lineNumber":110,"author":{"gitId":"saravanamani1999"},"content":"            String startTime \u003d lessonDetails[3];","lastModifiedDate":"2021-11-04"},{"lineNumber":111,"author":{"gitId":"saravanamani1999"},"content":"            deleteSubCommand.deleteLesson(moduleCode, lessonType, day, startTime);","lastModifiedDate":"2021-11-04"},{"lineNumber":112,"author":{"gitId":"saravanamani1999"},"content":"        } catch (ArrayIndexOutOfBoundsException exception) {","lastModifiedDate":"2021-11-04"},{"lineNumber":113,"author":{"gitId":"saravanamani1999"},"content":"            throw new KolinuxException(SubCommand.INVALID_DELETE_FORMAT);","lastModifiedDate":"2021-11-04"},{"lineNumber":114,"author":{"gitId":"saravanamani1999"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":115,"author":{"gitId":"saravanamani1999"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":116,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":117,"author":{"gitId":"saravanamani1999"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":118,"author":{"gitId":"saravanamani1999"},"content":"     * Executes the update subcommand for timetable which updates a lesson to a different timing in the timetable.","lastModifiedDate":"2021-11-05"},{"lineNumber":119,"author":{"gitId":"saravanamani1999"},"content":"     *","lastModifiedDate":"2021-11-05"},{"lineNumber":120,"author":{"gitId":"saravanamani1999"},"content":"     * @param lessonDetails Details of the lesson to be updated","lastModifiedDate":"2021-11-05"},{"lineNumber":121,"author":{"gitId":"saravanamani1999"},"content":"     * @throws KolinuxException If it fails any of the checks in UpdateSubCommand before performing update operation","lastModifiedDate":"2021-11-05"},{"lineNumber":122,"author":{"gitId":"saravanamani1999"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":123,"author":{"gitId":"saravanamani1999"},"content":"    public void executeUpdate(String[] lessonDetails) throws KolinuxException {","lastModifiedDate":"2021-10-25"},{"lineNumber":124,"author":{"gitId":"saravanamani1999"},"content":"        try {","lastModifiedDate":"2021-11-04"},{"lineNumber":125,"author":{"gitId":"saravanamani1999"},"content":"            String moduleCode \u003d lessonDetails[0].toUpperCase();","lastModifiedDate":"2021-11-04"},{"lineNumber":126,"author":{"gitId":"saravanamani1999"},"content":"            String lessonType \u003d lessonDetails[1].toUpperCase();","lastModifiedDate":"2021-11-04"},{"lineNumber":127,"author":{"gitId":"saravanamani1999"},"content":"            String oldDay \u003d lessonDetails[2].toLowerCase();","lastModifiedDate":"2021-11-04"},{"lineNumber":128,"author":{"gitId":"saravanamani1999"},"content":"            String oldStartTiming \u003d lessonDetails[3];","lastModifiedDate":"2021-11-04"},{"lineNumber":129,"author":{"gitId":"saravanamani1999"},"content":"            String newDay \u003d lessonDetails[4].toLowerCase();","lastModifiedDate":"2021-11-04"},{"lineNumber":130,"author":{"gitId":"saravanamani1999"},"content":"            String newStartTiming \u003d lessonDetails[5];","lastModifiedDate":"2021-11-04"},{"lineNumber":131,"author":{"gitId":"saravanamani1999"},"content":"            updateSubCommand.updateTimetable(moduleCode, lessonType, oldDay, oldStartTiming, newDay, newStartTiming);","lastModifiedDate":"2021-11-04"},{"lineNumber":132,"author":{"gitId":"saravanamani1999"},"content":"        } catch (ArrayIndexOutOfBoundsException exception) {","lastModifiedDate":"2021-11-04"},{"lineNumber":133,"author":{"gitId":"saravanamani1999"},"content":"            throw new KolinuxException(SubCommand.INVALID_UPDATE_FORMAT);","lastModifiedDate":"2021-11-04"},{"lineNumber":134,"author":{"gitId":"saravanamani1999"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":135,"author":{"gitId":"saravanamani1999"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":136,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":137,"author":{"gitId":"saravanamani1999"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":138,"author":{"gitId":"saravanamani1999"},"content":"     * Deletes all lessons of a specific module code in the timetable.","lastModifiedDate":"2021-11-05"},{"lineNumber":139,"author":{"gitId":"saravanamani1999"},"content":"     *","lastModifiedDate":"2021-11-05"},{"lineNumber":140,"author":{"gitId":"saravanamani1999"},"content":"     * @param moduleCode Module code lessons which needs to be deleted","lastModifiedDate":"2021-11-05"},{"lineNumber":141,"author":{"gitId":"saravanamani1999"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":142,"author":{"gitId":"saravanamani1999"},"content":"    public void deleteByModuleList(String moduleCode) {","lastModifiedDate":"2021-10-22"},{"lineNumber":143,"author":{"gitId":"saravanamani1999"},"content":"        for (int i \u003d 0; i \u003c ROW_SIZE; i++) {","lastModifiedDate":"2021-10-22"},{"lineNumber":144,"author":{"gitId":"saravanamani1999"},"content":"            for (int j \u003d 0; j \u003c COLUMN_SIZE; j++) {","lastModifiedDate":"2021-10-22"},{"lineNumber":145,"author":{"gitId":"saravanamani1999"},"content":"                if (timetableData[i][j] !\u003d null \u0026\u0026 timetableData[i][j].contains(moduleCode)) {","lastModifiedDate":"2021-10-22"},{"lineNumber":146,"author":{"gitId":"saravanamani1999"},"content":"                    timetableData[i][j] \u003d null;","lastModifiedDate":"2021-10-22"},{"lineNumber":147,"author":{"gitId":"saravanamani1999"},"content":"                }","lastModifiedDate":"2021-10-22"},{"lineNumber":148,"author":{"gitId":"saravanamani1999"},"content":"            }","lastModifiedDate":"2021-10-22"},{"lineNumber":149,"author":{"gitId":"saravanamani1999"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":150,"author":{"gitId":"saravanamani1999"},"content":"        lessonStorage.removeIf(lesson -\u003e lesson.getModuleCode().equals(moduleCode));","lastModifiedDate":"2021-10-22"},{"lineNumber":151,"author":{"gitId":"saravanamani1999"},"content":"        timetableStorage.writeToFile();","lastModifiedDate":"2021-10-22"},{"lineNumber":152,"author":{"gitId":"saravanamani1999"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":153,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":154,"author":{"gitId":"saravanamani1999"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":155,"author":{"gitId":"saravanamani1999"},"content":"     * Lists the lessons and their timings in the timetable for a specific weekday.","lastModifiedDate":"2021-11-05"},{"lineNumber":156,"author":{"gitId":"saravanamani1999"},"content":"     *","lastModifiedDate":"2021-11-05"},{"lineNumber":157,"author":{"gitId":"saravanamani1999"},"content":"     * @param day The day of the lessons to be listed from","lastModifiedDate":"2021-11-05"},{"lineNumber":158,"author":{"gitId":"saravanamani1999"},"content":"     * @throws KolinuxException If invalid day entered","lastModifiedDate":"2021-11-05"},{"lineNumber":159,"author":{"gitId":"saravanamani1999"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":160,"author":{"gitId":"saravanamani1999"},"content":"    public void listTimetable(String day) throws KolinuxException {","lastModifiedDate":"2021-11-03"},{"lineNumber":161,"author":{"gitId":"saravanamani1999"},"content":"        boolean doesLessonExist \u003d false;","lastModifiedDate":"2021-11-03"},{"lineNumber":162,"author":{"gitId":"saravanamani1999"},"content":"        String[] lessonList \u003d new String[ROW_SIZE];","lastModifiedDate":"2021-11-05"},{"lineNumber":163,"author":{"gitId":"saravanamani1999"},"content":"        if (getIndex(day, days) \u003d\u003d -1) {","lastModifiedDate":"2021-11-05"},{"lineNumber":164,"author":{"gitId":"saravanamani1999"},"content":"            throw new KolinuxException(\"Please enter a valid weekday from monday to friday spelt fully\");","lastModifiedDate":"2021-11-03"},{"lineNumber":165,"author":{"gitId":"saravanamani1999"},"content":"        }","lastModifiedDate":"2021-11-03"},{"lineNumber":166,"author":{"gitId":"saravanamani1999"},"content":"        for (Lesson lesson: lessonStorage) {","lastModifiedDate":"2021-11-03"},{"lineNumber":167,"author":{"gitId":"saravanamani1999"},"content":"            if (lesson.getDay().equals(day)) {","lastModifiedDate":"2021-11-03"},{"lineNumber":168,"author":{"gitId":"saravanamani1999"},"content":"                doesLessonExist \u003d true;","lastModifiedDate":"2021-11-03"},{"lineNumber":169,"author":{"gitId":"saravanamani1999"},"content":"                lessonList[lesson.getStartTimeIndex() - 1] \u003d lesson.getStartTime() + \" - \" + lesson.getEndTime()","lastModifiedDate":"2021-11-05"},{"lineNumber":170,"author":{"gitId":"saravanamani1999"},"content":"                        + \" \" + lesson.getModuleCode() + \" \" + lesson.getLessonType();","lastModifiedDate":"2021-11-05"},{"lineNumber":171,"author":{"gitId":"saravanamani1999"},"content":"            }","lastModifiedDate":"2021-11-03"},{"lineNumber":172,"author":{"gitId":"saravanamani1999"},"content":"        }","lastModifiedDate":"2021-11-03"},{"lineNumber":173,"author":{"gitId":"saravanamani1999"},"content":"        for (int i \u003d 0; i \u003c ROW_SIZE - 1; i++) {","lastModifiedDate":"2021-11-05"},{"lineNumber":174,"author":{"gitId":"saravanamani1999"},"content":"            if (lessonList[i] !\u003d null) {","lastModifiedDate":"2021-11-03"},{"lineNumber":175,"author":{"gitId":"saravanamani1999"},"content":"                System.out.println(lessonList[i]);","lastModifiedDate":"2021-11-03"},{"lineNumber":176,"author":{"gitId":"saravanamani1999"},"content":"            }","lastModifiedDate":"2021-11-03"},{"lineNumber":177,"author":{"gitId":"saravanamani1999"},"content":"        }","lastModifiedDate":"2021-11-03"},{"lineNumber":178,"author":{"gitId":"saravanamani1999"},"content":"        if (!doesLessonExist) {","lastModifiedDate":"2021-11-03"},{"lineNumber":179,"author":{"gitId":"saravanamani1999"},"content":"            System.out.println(\"You have no lessons on \" + day);","lastModifiedDate":"2021-11-03"},{"lineNumber":180,"author":{"gitId":"saravanamani1999"},"content":"        }","lastModifiedDate":"2021-11-03"},{"lineNumber":181,"author":{"gitId":"saravanamani1999"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":182,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":183,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":184,"author":{"gitId":"saravanamani1999"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":185,"author":{"gitId":"saravanamani1999"},"content":"     * Clears all the entries of the timetable, ending up with an empty timetable.","lastModifiedDate":"2021-10-22"},{"lineNumber":186,"author":{"gitId":"saravanamani1999"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":187,"author":{"gitId":"saravanamani1999"},"content":"    public void clearTimetable() {","lastModifiedDate":"2021-10-22"},{"lineNumber":188,"author":{"gitId":"saravanamani1999"},"content":"        for (int i \u003d 0; i \u003c ROW_SIZE; i++) {","lastModifiedDate":"2021-10-22"},{"lineNumber":189,"author":{"gitId":"saravanamani1999"},"content":"            for (int j \u003d 0; j \u003c COLUMN_SIZE; j++) {","lastModifiedDate":"2021-10-22"},{"lineNumber":190,"author":{"gitId":"saravanamani1999"},"content":"                timetableData[i][j] \u003d null;","lastModifiedDate":"2021-10-22"},{"lineNumber":191,"author":{"gitId":"saravanamani1999"},"content":"            }","lastModifiedDate":"2021-10-22"},{"lineNumber":192,"author":{"gitId":"saravanamani1999"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":193,"author":{"gitId":"saravanamani1999"},"content":"        lessonStorage.clear();","lastModifiedDate":"2021-10-22"},{"lineNumber":194,"author":{"gitId":"saravanamani1999"},"content":"        timetableStorage.clearFile();","lastModifiedDate":"2021-10-25"},{"lineNumber":195,"author":{"gitId":"saravanamani1999"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":196,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":197,"author":{"gitId":"saravanamani1999"},"content":"}","lastModifiedDate":"2021-10-22"}],"authorContributionMap":{"saravanamani1999":197}},{"path":"src/main/java/seedu/kolinux/timetable/TimetablePromptHandler.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"saravanamani1999"},"content":"package seedu.kolinux.timetable;","lastModifiedDate":"2021-11-04"},{"lineNumber":2,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":3,"author":{"gitId":"saravanamani1999"},"content":"import seedu.kolinux.exceptions.KolinuxException;","lastModifiedDate":"2021-11-04"},{"lineNumber":4,"author":{"gitId":"saravanamani1999"},"content":"import seedu.kolinux.util.PromptHandler;","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":6,"author":{"gitId":"saravanamani1999"},"content":"/** Represents the operations related to prompting the user while adding to the timetable. */","lastModifiedDate":"2021-11-05"},{"lineNumber":7,"author":{"gitId":"saravanamani1999"},"content":"public class TimetablePromptHandler extends PromptHandler {","lastModifiedDate":"2021-11-04"},{"lineNumber":8,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"saravanamani1999"},"content":"    private Timetable timetable;","lastModifiedDate":"2021-11-04"},{"lineNumber":10,"author":{"gitId":"saravanamani1999"},"content":"    private static final String CANCEL_MESSAGE \u003d \"Adding to timetable operation cancelled\";","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"saravanamani1999"},"content":"    private static final String INVALID_KEY \u003d \"Invalid key. Please enter y or n\";","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"saravanamani1999"},"content":"    public TimetablePromptHandler(String message, Timetable timetable) {","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"saravanamani1999"},"content":"        super(message);","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"saravanamani1999"},"content":"        this.timetable \u003d timetable;","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"saravanamani1999"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":17,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":18,"author":{"gitId":"saravanamani1999"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":19,"author":{"gitId":"saravanamani1999"},"content":"     * Sends a confirmation prompt to user to check if they want to continue adding the lesson despite exceeding the","lastModifiedDate":"2021-11-05"},{"lineNumber":20,"author":{"gitId":"saravanamani1999"},"content":"     * stipulated workload, where the lesson gets added if the user confirms with \"y\" but cancels the operation if","lastModifiedDate":"2021-11-05"},{"lineNumber":21,"author":{"gitId":"saravanamani1999"},"content":"     * user enters \"n\".","lastModifiedDate":"2021-11-05"},{"lineNumber":22,"author":{"gitId":"saravanamani1999"},"content":"     *","lastModifiedDate":"2021-11-05"},{"lineNumber":23,"author":{"gitId":"saravanamani1999"},"content":"     * @param lessonDetails Details of the lesson to be added","lastModifiedDate":"2021-11-05"},{"lineNumber":24,"author":{"gitId":"saravanamani1999"},"content":"     * @throws KolinuxException If it fails any of the checks in addSubCommand before performing add operation","lastModifiedDate":"2021-11-05"},{"lineNumber":25,"author":{"gitId":"saravanamani1999"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":26,"author":{"gitId":"saravanamani1999"},"content":"    public void handleExceedWorkload(String[] lessonDetails) throws KolinuxException {","lastModifiedDate":"2021-11-04"},{"lineNumber":27,"author":{"gitId":"saravanamani1999"},"content":"        while (true) {","lastModifiedDate":"2021-11-04"},{"lineNumber":28,"author":{"gitId":"saravanamani1999"},"content":"            String reply \u003d getReplyFromPrompt();","lastModifiedDate":"2021-11-04"},{"lineNumber":29,"author":{"gitId":"saravanamani1999"},"content":"            if (reply.equalsIgnoreCase(\"y\")) {","lastModifiedDate":"2021-11-04"},{"lineNumber":30,"author":{"gitId":"saravanamani1999"},"content":"                timetable.executeAdd(lessonDetails, true);","lastModifiedDate":"2021-11-04"},{"lineNumber":31,"author":{"gitId":"saravanamani1999"},"content":"                break;","lastModifiedDate":"2021-11-04"},{"lineNumber":32,"author":{"gitId":"saravanamani1999"},"content":"            } else if (reply.equalsIgnoreCase(\"n\")) {","lastModifiedDate":"2021-11-04"},{"lineNumber":33,"author":{"gitId":"saravanamani1999"},"content":"                throw new KolinuxException(CANCEL_MESSAGE);","lastModifiedDate":"2021-11-04"},{"lineNumber":34,"author":{"gitId":"saravanamani1999"},"content":"            } else {","lastModifiedDate":"2021-11-04"},{"lineNumber":35,"author":{"gitId":"saravanamani1999"},"content":"                this.changeMessage(INVALID_KEY);","lastModifiedDate":"2021-11-04"},{"lineNumber":36,"author":{"gitId":"saravanamani1999"},"content":"            }","lastModifiedDate":"2021-11-04"},{"lineNumber":37,"author":{"gitId":"saravanamani1999"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":38,"author":{"gitId":"saravanamani1999"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":39,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":40,"author":{"gitId":"saravanamani1999"},"content":"}","lastModifiedDate":"2021-11-04"}],"authorContributionMap":{"saravanamani1999":40}},{"path":"src/main/java/seedu/kolinux/timetable/TimetableStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"saravanamani1999"},"content":"package seedu.kolinux.timetable;","lastModifiedDate":"2021-10-22"},{"lineNumber":2,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"saravanamani1999"},"content":"import seedu.kolinux.timetable.lesson.Lesson;","lastModifiedDate":"2021-10-22"},{"lineNumber":4,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"saravanamani1999"},"content":"import java.io.File;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"saravanamani1999"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"saravanamani1999"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"saravanamani1999"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"saravanamani1999"},"content":"import static seedu.kolinux.timetable.Timetable.filePath;","lastModifiedDate":"2021-10-22"},{"lineNumber":11,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"saravanamani1999"},"content":"/** Represents the methods to interact with timetable text file. */","lastModifiedDate":"2021-10-14"},{"lineNumber":14,"author":{"gitId":"saravanamani1999"},"content":"public class TimetableStorage {","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"saravanamani1999"},"content":"    private ArrayList\u003cLesson\u003e lessonStorage;","lastModifiedDate":"2021-10-23"},{"lineNumber":17,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":18,"author":{"gitId":"saravanamani1999"},"content":"    public TimetableStorage(ArrayList\u003cLesson\u003e lessonStorage) {","lastModifiedDate":"2021-10-23"},{"lineNumber":19,"author":{"gitId":"saravanamani1999"},"content":"        this.lessonStorage \u003d lessonStorage;","lastModifiedDate":"2021-10-23"},{"lineNumber":20,"author":{"gitId":"saravanamani1999"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":21,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":22,"author":{"gitId":"saravanamani1999"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":23,"author":{"gitId":"saravanamani1999"},"content":"     * Saves the new lessons input by user onto the timetable to timetable.txt.","lastModifiedDate":"2021-10-14"},{"lineNumber":24,"author":{"gitId":"saravanamani1999"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":25,"author":{"gitId":"saravanamani1999"},"content":"    public void writeToFile() {","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"saravanamani1999"},"content":"        try {","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"saravanamani1999"},"content":"            FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"saravanamani1999"},"content":"            for (Lesson lesson : lessonStorage) {","lastModifiedDate":"2021-10-14"},{"lineNumber":29,"author":{"gitId":"saravanamani1999"},"content":"                String formattedLessonTiming \u003d null;","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"saravanamani1999"},"content":"                formattedLessonTiming \u003d lesson.getFileContent();","lastModifiedDate":"2021-10-14"},{"lineNumber":31,"author":{"gitId":"saravanamani1999"},"content":"                fw.write(formattedLessonTiming + System.lineSeparator());","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"saravanamani1999"},"content":"            }","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"saravanamani1999"},"content":"            fw.close();","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"saravanamani1999"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"saravanamani1999"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"saravanamani1999"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"saravanamani1999"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":39,"author":{"gitId":"saravanamani1999"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":40,"author":{"gitId":"saravanamani1999"},"content":"     * Creates the specified filepath with the file if it is not already present in that path.","lastModifiedDate":"2021-10-14"},{"lineNumber":41,"author":{"gitId":"saravanamani1999"},"content":"     *","lastModifiedDate":"2021-10-14"},{"lineNumber":42,"author":{"gitId":"saravanamani1999"},"content":"     * @param filePath The expected file path of timetable text file","lastModifiedDate":"2021-10-14"},{"lineNumber":43,"author":{"gitId":"saravanamani1999"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":44,"author":{"gitId":"saravanamani1999"},"content":"    public void createFilePath(String filePath)  {","lastModifiedDate":"2021-10-20"},{"lineNumber":45,"author":{"gitId":"saravanamani1999"},"content":"        try {","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"saravanamani1999"},"content":"            File file \u003d new File(filePath);","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"saravanamani1999"},"content":"            if (!file.exists()) {","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"saravanamani1999"},"content":"                file.createNewFile();","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"saravanamani1999"},"content":"            }","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"saravanamani1999"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"saravanamani1999"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"saravanamani1999"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":53,"author":{"gitId":"saravanamani1999"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":54,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":55,"author":{"gitId":"saravanamani1999"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":56,"author":{"gitId":"saravanamani1999"},"content":"     * Clears all the information present in the timetable.txt in case of file corruption.","lastModifiedDate":"2021-10-14"},{"lineNumber":57,"author":{"gitId":"saravanamani1999"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":58,"author":{"gitId":"saravanamani1999"},"content":"    public void clearFile() {","lastModifiedDate":"2021-10-20"},{"lineNumber":59,"author":{"gitId":"saravanamani1999"},"content":"        try {","lastModifiedDate":"2021-10-13"},{"lineNumber":60,"author":{"gitId":"saravanamani1999"},"content":"            FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2021-10-13"},{"lineNumber":61,"author":{"gitId":"saravanamani1999"},"content":"            fw.write(\"\");","lastModifiedDate":"2021-10-13"},{"lineNumber":62,"author":{"gitId":"saravanamani1999"},"content":"            fw.close();","lastModifiedDate":"2021-10-13"},{"lineNumber":63,"author":{"gitId":"saravanamani1999"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-10-13"},{"lineNumber":64,"author":{"gitId":"saravanamani1999"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-10-13"},{"lineNumber":65,"author":{"gitId":"saravanamani1999"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":66,"author":{"gitId":"saravanamani1999"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":67,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":68,"author":{"gitId":"saravanamani1999"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"saravanamani1999":68}},{"path":"src/main/java/seedu/kolinux/timetable/lesson/Lab.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"saravanamani1999"},"content":"package seedu.kolinux.timetable.lesson;","lastModifiedDate":"2021-10-22"},{"lineNumber":2,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":3,"author":{"gitId":"saravanamani1999"},"content":"import seedu.kolinux.exceptions.KolinuxException;","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":5,"author":{"gitId":"saravanamani1999"},"content":"/**","lastModifiedDate":"2021-11-05"},{"lineNumber":6,"author":{"gitId":"saravanamani1999"},"content":" * Represents a {@code Lesson} of type Lab.","lastModifiedDate":"2021-11-05"},{"lineNumber":7,"author":{"gitId":"saravanamani1999"},"content":" */","lastModifiedDate":"2021-11-05"},{"lineNumber":8,"author":{"gitId":"saravanamani1999"},"content":"public class Lab extends Lesson {","lastModifiedDate":"2021-10-16"},{"lineNumber":9,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"saravanamani1999"},"content":"    public Lab(String[] parsedArguments) throws KolinuxException {","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"saravanamani1999"},"content":"        super(parsedArguments);","lastModifiedDate":"2021-10-16"},{"lineNumber":12,"author":{"gitId":"saravanamani1999"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"saravanamani1999"},"content":"    @Override","lastModifiedDate":"2021-10-16"},{"lineNumber":15,"author":{"gitId":"saravanamani1999"},"content":"    public String getLessonType() {","lastModifiedDate":"2021-10-16"},{"lineNumber":16,"author":{"gitId":"saravanamani1999"},"content":"        return \"LAB\";","lastModifiedDate":"2021-10-16"},{"lineNumber":17,"author":{"gitId":"saravanamani1999"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":18,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":19,"author":{"gitId":"saravanamani1999"},"content":"    @Override","lastModifiedDate":"2021-10-16"},{"lineNumber":20,"author":{"gitId":"saravanamani1999"},"content":"    public String getFileContent() {","lastModifiedDate":"2021-10-16"},{"lineNumber":21,"author":{"gitId":"saravanamani1999"},"content":"        return moduleCode + \"/LAB/\" + day + \"/\" + startTime + \"/\" + endTime;","lastModifiedDate":"2021-10-17"},{"lineNumber":22,"author":{"gitId":"saravanamani1999"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":23,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":24,"author":{"gitId":"saravanamani1999"},"content":"}","lastModifiedDate":"2021-10-16"}],"authorContributionMap":{"saravanamani1999":24}},{"path":"src/main/java/seedu/kolinux/timetable/lesson/Lecture.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"saravanamani1999"},"content":"package seedu.kolinux.timetable.lesson;","lastModifiedDate":"2021-10-22"},{"lineNumber":2,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":3,"author":{"gitId":"saravanamani1999"},"content":"import seedu.kolinux.exceptions.KolinuxException;","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":5,"author":{"gitId":"saravanamani1999"},"content":"/**","lastModifiedDate":"2021-11-05"},{"lineNumber":6,"author":{"gitId":"saravanamani1999"},"content":" * Represents a {@code Lesson} of type Lecture.","lastModifiedDate":"2021-11-05"},{"lineNumber":7,"author":{"gitId":"saravanamani1999"},"content":" */","lastModifiedDate":"2021-11-05"},{"lineNumber":8,"author":{"gitId":"saravanamani1999"},"content":"public class Lecture extends Lesson {","lastModifiedDate":"2021-10-16"},{"lineNumber":9,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"saravanamani1999"},"content":"    public Lecture(String[] parsedArguments) throws KolinuxException {","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"saravanamani1999"},"content":"        super(parsedArguments);","lastModifiedDate":"2021-10-16"},{"lineNumber":12,"author":{"gitId":"saravanamani1999"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"saravanamani1999"},"content":"    @Override","lastModifiedDate":"2021-10-16"},{"lineNumber":15,"author":{"gitId":"saravanamani1999"},"content":"    public String getLessonType() {","lastModifiedDate":"2021-10-16"},{"lineNumber":16,"author":{"gitId":"saravanamani1999"},"content":"        return \"LEC\";","lastModifiedDate":"2021-10-16"},{"lineNumber":17,"author":{"gitId":"saravanamani1999"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":18,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":19,"author":{"gitId":"saravanamani1999"},"content":"    @Override","lastModifiedDate":"2021-10-16"},{"lineNumber":20,"author":{"gitId":"saravanamani1999"},"content":"    public String getFileContent() {","lastModifiedDate":"2021-10-16"},{"lineNumber":21,"author":{"gitId":"saravanamani1999"},"content":"        return moduleCode + \"/LEC/\" + day + \"/\" + startTime + \"/\" + endTime;","lastModifiedDate":"2021-10-17"},{"lineNumber":22,"author":{"gitId":"saravanamani1999"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":23,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":24,"author":{"gitId":"saravanamani1999"},"content":"}","lastModifiedDate":"2021-10-16"}],"authorContributionMap":{"saravanamani1999":24}},{"path":"src/main/java/seedu/kolinux/timetable/lesson/Lesson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"saravanamani1999"},"content":"package seedu.kolinux.timetable.lesson;","lastModifiedDate":"2021-10-22"},{"lineNumber":2,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":3,"author":{"gitId":"saravanamani1999"},"content":"import seedu.kolinux.exceptions.KolinuxException;","lastModifiedDate":"2021-10-14"},{"lineNumber":4,"author":{"gitId":"saravanamani1999"},"content":"import seedu.kolinux.timetable.subcommand.SubCommand;","lastModifiedDate":"2021-10-23"},{"lineNumber":5,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":6,"author":{"gitId":"saravanamani1999"},"content":"/** Lesson class which stores all the attributes of a lesson to be input into the timetable. */","lastModifiedDate":"2021-10-14"},{"lineNumber":7,"author":{"gitId":"saravanamani1999"},"content":"public abstract class Lesson {","lastModifiedDate":"2021-10-30"},{"lineNumber":8,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":9,"author":{"gitId":"saravanamani1999"},"content":"    protected String lessonType;","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"saravanamani1999"},"content":"    protected String moduleCode;","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"saravanamani1999"},"content":"    protected String day;","lastModifiedDate":"2021-10-16"},{"lineNumber":12,"author":{"gitId":"saravanamani1999"},"content":"    protected String startTime;","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"saravanamani1999"},"content":"    protected String endTime;","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"saravanamani1999"},"content":"    protected int startTimeIndex;","lastModifiedDate":"2021-10-16"},{"lineNumber":15,"author":{"gitId":"saravanamani1999"},"content":"    protected int endTimeIndex;","lastModifiedDate":"2021-10-16"},{"lineNumber":16,"author":{"gitId":"saravanamani1999"},"content":"    protected int dayIndex;","lastModifiedDate":"2021-10-16"},{"lineNumber":17,"author":{"gitId":"saravanamani1999"},"content":"    public static String []  schoolHours \u003d new String [] {\"0600\", \"0630\", \"0700\", \"0730\",\"0800\", \"0830\", \"0900\",","lastModifiedDate":"2021-11-01"},{"lineNumber":18,"author":{"gitId":"saravanamani1999"},"content":"            \"0930\",\"1000\", \"1030\",\"1100\", \"1130\", \"1200\", \"1230\", \"1300\", \"1330\", \"1400\", \"1430\", \"1500\",","lastModifiedDate":"2021-11-01"},{"lineNumber":19,"author":{"gitId":"saravanamani1999"},"content":"            \"1530\",\"1600\", \"1630\",\"1700\", \"1730\", \"1800\", \"1830\",\"1900\", \"1930\",\"2000\",\"2030\",\"2100\"};","lastModifiedDate":"2021-11-01"},{"lineNumber":20,"author":{"gitId":"saravanamani1999"},"content":"    public static String[] days \u003d new String[] {\"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\"};","lastModifiedDate":"2021-10-15"},{"lineNumber":21,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":22,"author":{"gitId":"saravanamani1999"},"content":"    public Lesson(String[] parsedArguments) throws KolinuxException {","lastModifiedDate":"2021-10-14"},{"lineNumber":23,"author":{"gitId":"saravanamani1999"},"content":"        try {","lastModifiedDate":"2021-10-14"},{"lineNumber":24,"author":{"gitId":"saravanamani1999"},"content":"            this.moduleCode \u003d parsedArguments[0].toUpperCase();","lastModifiedDate":"2021-10-17"},{"lineNumber":25,"author":{"gitId":"saravanamani1999"},"content":"            this.lessonType \u003d parsedArguments[1].toUpperCase();","lastModifiedDate":"2021-10-17"},{"lineNumber":26,"author":{"gitId":"saravanamani1999"},"content":"            this.day \u003d parsedArguments[2].toLowerCase();","lastModifiedDate":"2021-10-16"},{"lineNumber":27,"author":{"gitId":"saravanamani1999"},"content":"            this.startTime \u003d parsedArguments[3];","lastModifiedDate":"2021-10-16"},{"lineNumber":28,"author":{"gitId":"saravanamani1999"},"content":"            this.endTime \u003d parsedArguments[4];","lastModifiedDate":"2021-10-17"},{"lineNumber":29,"author":{"gitId":"saravanamani1999"},"content":"            this.startTimeIndex \u003d getIndex(startTime, schoolHours);","lastModifiedDate":"2021-10-14"},{"lineNumber":30,"author":{"gitId":"saravanamani1999"},"content":"            this.endTimeIndex \u003d getIndex(endTime, schoolHours);","lastModifiedDate":"2021-10-17"},{"lineNumber":31,"author":{"gitId":"saravanamani1999"},"content":"            this.dayIndex \u003d getIndex(day, days);","lastModifiedDate":"2021-10-14"},{"lineNumber":32,"author":{"gitId":"saravanamani1999"},"content":"        } catch (ArrayIndexOutOfBoundsException exception) {","lastModifiedDate":"2021-10-14"},{"lineNumber":33,"author":{"gitId":"saravanamani1999"},"content":"            throw new KolinuxException(SubCommand.INVALID_ADD_FORMAT);","lastModifiedDate":"2021-10-23"},{"lineNumber":34,"author":{"gitId":"saravanamani1999"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":35,"author":{"gitId":"saravanamani1999"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":36,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":37,"author":{"gitId":"saravanamani1999"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":38,"author":{"gitId":"saravanamani1999"},"content":"     * Gets the lesson type of the lesson.","lastModifiedDate":"2021-11-05"},{"lineNumber":39,"author":{"gitId":"saravanamani1999"},"content":"     *","lastModifiedDate":"2021-11-05"},{"lineNumber":40,"author":{"gitId":"saravanamani1999"},"content":"     * @return The lesson type of the lesson","lastModifiedDate":"2021-11-05"},{"lineNumber":41,"author":{"gitId":"saravanamani1999"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":42,"author":{"gitId":"saravanamani1999"},"content":"    public String getLessonType() {","lastModifiedDate":"2021-10-16"},{"lineNumber":43,"author":{"gitId":"saravanamani1999"},"content":"        return lessonType;","lastModifiedDate":"2021-10-16"},{"lineNumber":44,"author":{"gitId":"saravanamani1999"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":45,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":46,"author":{"gitId":"saravanamani1999"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":47,"author":{"gitId":"saravanamani1999"},"content":"     * Gets the description of the lesson.","lastModifiedDate":"2021-10-14"},{"lineNumber":48,"author":{"gitId":"saravanamani1999"},"content":"     *","lastModifiedDate":"2021-10-14"},{"lineNumber":49,"author":{"gitId":"saravanamani1999"},"content":"     * @return The description of the lesson","lastModifiedDate":"2021-10-14"},{"lineNumber":50,"author":{"gitId":"saravanamani1999"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":51,"author":{"gitId":"saravanamani1999"},"content":"    public String getModuleCode() {","lastModifiedDate":"2021-10-16"},{"lineNumber":52,"author":{"gitId":"saravanamani1999"},"content":"        return moduleCode;","lastModifiedDate":"2021-10-16"},{"lineNumber":53,"author":{"gitId":"saravanamani1999"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":54,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":55,"author":{"gitId":"saravanamani1999"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":56,"author":{"gitId":"saravanamani1999"},"content":"     * Gets the index of the day of the lesson in the days array.","lastModifiedDate":"2021-10-14"},{"lineNumber":57,"author":{"gitId":"saravanamani1999"},"content":"     *","lastModifiedDate":"2021-10-14"},{"lineNumber":58,"author":{"gitId":"saravanamani1999"},"content":"     * @return The index of the day of the lesson in the days array.","lastModifiedDate":"2021-10-14"},{"lineNumber":59,"author":{"gitId":"saravanamani1999"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":60,"author":{"gitId":"saravanamani1999"},"content":"    public int getDayIndex() {","lastModifiedDate":"2021-10-14"},{"lineNumber":61,"author":{"gitId":"saravanamani1999"},"content":"        return dayIndex;","lastModifiedDate":"2021-10-14"},{"lineNumber":62,"author":{"gitId":"saravanamani1999"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":63,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":64,"author":{"gitId":"saravanamani1999"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":65,"author":{"gitId":"saravanamani1999"},"content":"     * Gets the index of the starting time of the lesson in the {@code schoolHours} array.","lastModifiedDate":"2021-11-05"},{"lineNumber":66,"author":{"gitId":"saravanamani1999"},"content":"     *","lastModifiedDate":"2021-10-14"},{"lineNumber":67,"author":{"gitId":"saravanamani1999"},"content":"     * @return The index of the starting time of the lesson in the {@code schoolHours} array","lastModifiedDate":"2021-11-05"},{"lineNumber":68,"author":{"gitId":"saravanamani1999"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":69,"author":{"gitId":"saravanamani1999"},"content":"    public int getStartTimeIndex() {","lastModifiedDate":"2021-10-14"},{"lineNumber":70,"author":{"gitId":"saravanamani1999"},"content":"        return startTimeIndex;","lastModifiedDate":"2021-10-14"},{"lineNumber":71,"author":{"gitId":"saravanamani1999"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":72,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":73,"author":{"gitId":"saravanamani1999"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":74,"author":{"gitId":"saravanamani1999"},"content":"     * Gets the index of the ending time of the lesson in the {@code schoolHours} array.","lastModifiedDate":"2021-11-05"},{"lineNumber":75,"author":{"gitId":"saravanamani1999"},"content":"     *","lastModifiedDate":"2021-11-05"},{"lineNumber":76,"author":{"gitId":"saravanamani1999"},"content":"     * @return The index of the ending time of the lesson in the {@code schoolHours} array","lastModifiedDate":"2021-11-05"},{"lineNumber":77,"author":{"gitId":"saravanamani1999"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":78,"author":{"gitId":"saravanamani1999"},"content":"    public int getEndTimeIndex() {","lastModifiedDate":"2021-10-17"},{"lineNumber":79,"author":{"gitId":"saravanamani1999"},"content":"        return endTimeIndex;","lastModifiedDate":"2021-10-17"},{"lineNumber":80,"author":{"gitId":"saravanamani1999"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":81,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":82,"author":{"gitId":"saravanamani1999"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":83,"author":{"gitId":"saravanamani1999"},"content":"     * Gets the starting time of a lesson.","lastModifiedDate":"2021-11-05"},{"lineNumber":84,"author":{"gitId":"saravanamani1999"},"content":"     *","lastModifiedDate":"2021-11-05"},{"lineNumber":85,"author":{"gitId":"saravanamani1999"},"content":"     * @return The starting time of a lesson","lastModifiedDate":"2021-11-05"},{"lineNumber":86,"author":{"gitId":"saravanamani1999"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":87,"author":{"gitId":"saravanamani1999"},"content":"    public String getStartTime() {","lastModifiedDate":"2021-10-17"},{"lineNumber":88,"author":{"gitId":"saravanamani1999"},"content":"        return startTime;","lastModifiedDate":"2021-10-17"},{"lineNumber":89,"author":{"gitId":"saravanamani1999"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":90,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":91,"author":{"gitId":"saravanamani1999"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":92,"author":{"gitId":"saravanamani1999"},"content":"     * Gets the ending time of a lesson.","lastModifiedDate":"2021-11-05"},{"lineNumber":93,"author":{"gitId":"saravanamani1999"},"content":"     *","lastModifiedDate":"2021-11-05"},{"lineNumber":94,"author":{"gitId":"saravanamani1999"},"content":"     * @return The ending time of a lesson","lastModifiedDate":"2021-11-05"},{"lineNumber":95,"author":{"gitId":"saravanamani1999"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":96,"author":{"gitId":"saravanamani1999"},"content":"    public String getEndTime() {","lastModifiedDate":"2021-10-17"},{"lineNumber":97,"author":{"gitId":"saravanamani1999"},"content":"        return endTime;","lastModifiedDate":"2021-10-17"},{"lineNumber":98,"author":{"gitId":"saravanamani1999"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":99,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":100,"author":{"gitId":"saravanamani1999"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":101,"author":{"gitId":"saravanamani1999"},"content":"     * Gets the day of a lesson.","lastModifiedDate":"2021-11-05"},{"lineNumber":102,"author":{"gitId":"saravanamani1999"},"content":"     *","lastModifiedDate":"2021-11-05"},{"lineNumber":103,"author":{"gitId":"saravanamani1999"},"content":"     * @return The day of a lesson","lastModifiedDate":"2021-11-05"},{"lineNumber":104,"author":{"gitId":"saravanamani1999"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":105,"author":{"gitId":"saravanamani1999"},"content":"    public String getDay() {","lastModifiedDate":"2021-10-17"},{"lineNumber":106,"author":{"gitId":"saravanamani1999"},"content":"        return day;","lastModifiedDate":"2021-10-17"},{"lineNumber":107,"author":{"gitId":"saravanamani1999"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":108,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":109,"author":{"gitId":"saravanamani1999"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":110,"author":{"gitId":"saravanamani1999"},"content":"     * Formats the information about the lesson with accordance to format to be saved in the timetable.txt.","lastModifiedDate":"2021-10-14"},{"lineNumber":111,"author":{"gitId":"saravanamani1999"},"content":"     *","lastModifiedDate":"2021-10-14"},{"lineNumber":112,"author":{"gitId":"saravanamani1999"},"content":"     * @return Formatted information about the lesson","lastModifiedDate":"2021-10-14"},{"lineNumber":113,"author":{"gitId":"saravanamani1999"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":114,"author":{"gitId":"saravanamani1999"},"content":"    public String getFileContent() {","lastModifiedDate":"2021-10-14"},{"lineNumber":115,"author":{"gitId":"saravanamani1999"},"content":"        return moduleCode + \"/\" + lessonType + \"/\" + day + \"/\" + startTime + \"/\" + endTime;","lastModifiedDate":"2021-10-26"},{"lineNumber":116,"author":{"gitId":"saravanamani1999"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":117,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":118,"author":{"gitId":"saravanamani1999"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":119,"author":{"gitId":"saravanamani1999"},"content":"     * Finds the index of a given string in one of the given arrays, days or {@code schoolHours}.","lastModifiedDate":"2021-11-05"},{"lineNumber":120,"author":{"gitId":"saravanamani1999"},"content":"     *","lastModifiedDate":"2021-10-14"},{"lineNumber":121,"author":{"gitId":"saravanamani1999"},"content":"     * @param input The input string by user for either the day or the timings of their lesson","lastModifiedDate":"2021-10-14"},{"lineNumber":122,"author":{"gitId":"saravanamani1999"},"content":"     * @param array The arrays, days or {@code schoolHours}, containing the days and school hours for a week","lastModifiedDate":"2021-11-05"},{"lineNumber":123,"author":{"gitId":"saravanamani1999"},"content":"     * @return The index of the string in the array","lastModifiedDate":"2021-10-14"},{"lineNumber":124,"author":{"gitId":"saravanamani1999"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":125,"author":{"gitId":"saravanamani1999"},"content":"    public static int getIndex(String input, String[] array) {","lastModifiedDate":"2021-10-14"},{"lineNumber":126,"author":{"gitId":"saravanamani1999"},"content":"        for (int i \u003d 0; i \u003c array.length; i++) {","lastModifiedDate":"2021-10-14"},{"lineNumber":127,"author":{"gitId":"saravanamani1999"},"content":"            if (array[i].equals(input)) {","lastModifiedDate":"2021-10-14"},{"lineNumber":128,"author":{"gitId":"saravanamani1999"},"content":"                return i + 1;","lastModifiedDate":"2021-10-14"},{"lineNumber":129,"author":{"gitId":"saravanamani1999"},"content":"            }","lastModifiedDate":"2021-10-14"},{"lineNumber":130,"author":{"gitId":"saravanamani1999"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":131,"author":{"gitId":"saravanamani1999"},"content":"        return -1;","lastModifiedDate":"2021-10-14"},{"lineNumber":132,"author":{"gitId":"saravanamani1999"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":133,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":134,"author":{"gitId":"saravanamani1999"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":135,"author":{"gitId":"saravanamani1999"},"content":"     * Gets the duration of a lesson.","lastModifiedDate":"2021-11-05"},{"lineNumber":136,"author":{"gitId":"saravanamani1999"},"content":"     *","lastModifiedDate":"2021-11-05"},{"lineNumber":137,"author":{"gitId":"saravanamani1999"},"content":"     * @return The duration of a lesson","lastModifiedDate":"2021-11-05"},{"lineNumber":138,"author":{"gitId":"saravanamani1999"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":139,"author":{"gitId":"saravanamani1999"},"content":"    public int getHours() {","lastModifiedDate":"2021-10-17"},{"lineNumber":140,"author":{"gitId":"saravanamani1999"},"content":"        return endTimeIndex - startTimeIndex;","lastModifiedDate":"2021-10-17"},{"lineNumber":141,"author":{"gitId":"saravanamani1999"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":142,"author":{"gitId":"saravanamani1999"},"content":"}","lastModifiedDate":"2021-10-14"}],"authorContributionMap":{"saravanamani1999":142}},{"path":"src/main/java/seedu/kolinux/timetable/lesson/Sectional.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"saravanamani1999"},"content":"package seedu.kolinux.timetable.lesson;","lastModifiedDate":"2021-11-01"},{"lineNumber":2,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":3,"author":{"gitId":"saravanamani1999"},"content":"import seedu.kolinux.exceptions.KolinuxException;","lastModifiedDate":"2021-11-01"},{"lineNumber":4,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":5,"author":{"gitId":"saravanamani1999"},"content":"/**","lastModifiedDate":"2021-11-05"},{"lineNumber":6,"author":{"gitId":"saravanamani1999"},"content":" * Represents a {@code Lesson} of type Sectional.","lastModifiedDate":"2021-11-05"},{"lineNumber":7,"author":{"gitId":"saravanamani1999"},"content":" */","lastModifiedDate":"2021-11-05"},{"lineNumber":8,"author":{"gitId":"saravanamani1999"},"content":"public class Sectional extends Lesson {","lastModifiedDate":"2021-11-01"},{"lineNumber":9,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":10,"author":{"gitId":"saravanamani1999"},"content":"    public Sectional(String[] parsedArguments) throws KolinuxException {","lastModifiedDate":"2021-11-01"},{"lineNumber":11,"author":{"gitId":"saravanamani1999"},"content":"        super(parsedArguments);","lastModifiedDate":"2021-11-01"},{"lineNumber":12,"author":{"gitId":"saravanamani1999"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":13,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":14,"author":{"gitId":"saravanamani1999"},"content":"    @Override","lastModifiedDate":"2021-11-01"},{"lineNumber":15,"author":{"gitId":"saravanamani1999"},"content":"    public String getLessonType() {","lastModifiedDate":"2021-11-01"},{"lineNumber":16,"author":{"gitId":"saravanamani1999"},"content":"        return \"SEC\";","lastModifiedDate":"2021-11-01"},{"lineNumber":17,"author":{"gitId":"saravanamani1999"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":18,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":19,"author":{"gitId":"saravanamani1999"},"content":"    @Override","lastModifiedDate":"2021-11-01"},{"lineNumber":20,"author":{"gitId":"saravanamani1999"},"content":"    public String getFileContent() {","lastModifiedDate":"2021-11-01"},{"lineNumber":21,"author":{"gitId":"saravanamani1999"},"content":"        return moduleCode + \"/SEC/\" + day + \"/\" + startTime + \"/\" + endTime;","lastModifiedDate":"2021-11-01"},{"lineNumber":22,"author":{"gitId":"saravanamani1999"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":23,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":24,"author":{"gitId":"saravanamani1999"},"content":"}","lastModifiedDate":"2021-11-01"}],"authorContributionMap":{"saravanamani1999":24}},{"path":"src/main/java/seedu/kolinux/timetable/lesson/Tutorial.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"saravanamani1999"},"content":"package seedu.kolinux.timetable.lesson;","lastModifiedDate":"2021-10-22"},{"lineNumber":2,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":3,"author":{"gitId":"saravanamani1999"},"content":"import seedu.kolinux.exceptions.KolinuxException;","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":5,"author":{"gitId":"saravanamani1999"},"content":"/**","lastModifiedDate":"2021-11-05"},{"lineNumber":6,"author":{"gitId":"saravanamani1999"},"content":" * Represents a {@code Lesson} of type Tutorial.","lastModifiedDate":"2021-11-05"},{"lineNumber":7,"author":{"gitId":"saravanamani1999"},"content":" */","lastModifiedDate":"2021-11-05"},{"lineNumber":8,"author":{"gitId":"saravanamani1999"},"content":"public class Tutorial extends Lesson {","lastModifiedDate":"2021-10-16"},{"lineNumber":9,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"saravanamani1999"},"content":"    public Tutorial(String[] parsedArguments) throws KolinuxException {","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"saravanamani1999"},"content":"        super(parsedArguments);","lastModifiedDate":"2021-10-16"},{"lineNumber":12,"author":{"gitId":"saravanamani1999"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"saravanamani1999"},"content":"    @Override","lastModifiedDate":"2021-10-16"},{"lineNumber":15,"author":{"gitId":"saravanamani1999"},"content":"    public String getLessonType() {","lastModifiedDate":"2021-10-16"},{"lineNumber":16,"author":{"gitId":"saravanamani1999"},"content":"        return \"TUT\";","lastModifiedDate":"2021-10-16"},{"lineNumber":17,"author":{"gitId":"saravanamani1999"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":18,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":19,"author":{"gitId":"saravanamani1999"},"content":"    @Override","lastModifiedDate":"2021-10-16"},{"lineNumber":20,"author":{"gitId":"saravanamani1999"},"content":"    public String getFileContent() {","lastModifiedDate":"2021-10-16"},{"lineNumber":21,"author":{"gitId":"saravanamani1999"},"content":"        return moduleCode + \"/TUT/\" + day + \"/\" + startTime + \"/\" + endTime;","lastModifiedDate":"2021-10-17"},{"lineNumber":22,"author":{"gitId":"saravanamani1999"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":23,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":24,"author":{"gitId":"saravanamani1999"},"content":"}","lastModifiedDate":"2021-10-16"}],"authorContributionMap":{"saravanamani1999":24}},{"path":"src/main/java/seedu/kolinux/timetable/subcommand/AddSubCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"saravanamani1999"},"content":"package seedu.kolinux.timetable.subcommand;","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":3,"author":{"gitId":"saravanamani1999"},"content":"import seedu.kolinux.exceptions.ExceedWorkloadException;","lastModifiedDate":"2021-11-04"},{"lineNumber":4,"author":{"gitId":"saravanamani1999"},"content":"import seedu.kolinux.exceptions.KolinuxException;","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"saravanamani1999"},"content":"import seedu.kolinux.module.ModuleDetails;","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"saravanamani1999"},"content":"import seedu.kolinux.module.ModuleList;","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"saravanamani1999"},"content":"import seedu.kolinux.timetable.lesson.Lesson;","lastModifiedDate":"2021-11-01"},{"lineNumber":8,"author":{"gitId":"saravanamani1999"},"content":"import seedu.kolinux.timetable.lesson.Tutorial;","lastModifiedDate":"2021-11-01"},{"lineNumber":9,"author":{"gitId":"saravanamani1999"},"content":"import seedu.kolinux.timetable.lesson.Lecture;","lastModifiedDate":"2021-11-01"},{"lineNumber":10,"author":{"gitId":"saravanamani1999"},"content":"import seedu.kolinux.timetable.lesson.Lab;","lastModifiedDate":"2021-11-01"},{"lineNumber":11,"author":{"gitId":"saravanamani1999"},"content":"import seedu.kolinux.timetable.lesson.Sectional;","lastModifiedDate":"2021-11-01"},{"lineNumber":12,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"saravanamani1999"},"content":"import java.util.Objects;","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"saravanamani1999"},"content":"import static seedu.kolinux.timetable.Timetable.lessonStorage;","lastModifiedDate":"2021-10-22"},{"lineNumber":16,"author":{"gitId":"saravanamani1999"},"content":"import static seedu.kolinux.timetable.Timetable.timetableData;","lastModifiedDate":"2021-10-22"},{"lineNumber":17,"author":{"gitId":"saravanamani1999"},"content":"import static seedu.kolinux.timetable.Timetable.timetableStorage;","lastModifiedDate":"2021-10-22"},{"lineNumber":18,"author":{"gitId":"saravanamani1999"},"content":"import static seedu.kolinux.timetable.Timetable.moduleList;","lastModifiedDate":"2021-10-22"},{"lineNumber":19,"author":{"gitId":"saravanamani1999"},"content":"import static seedu.kolinux.timetable.lesson.Lesson.getIndex;","lastModifiedDate":"2021-10-31"},{"lineNumber":20,"author":{"gitId":"saravanamani1999"},"content":"import static seedu.kolinux.timetable.lesson.Lesson.schoolHours;","lastModifiedDate":"2021-10-31"},{"lineNumber":21,"author":{"gitId":"saravanamani1999"},"content":"import static seedu.kolinux.timetable.lesson.Lesson.days;","lastModifiedDate":"2021-10-31"},{"lineNumber":22,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":23,"author":{"gitId":"saravanamani1999"},"content":"/** Represents the operations and checks when adding to the timetable. */","lastModifiedDate":"2021-11-05"},{"lineNumber":24,"author":{"gitId":"saravanamani1999"},"content":"public class AddSubCommand extends SubCommand {","lastModifiedDate":"2021-10-23"},{"lineNumber":25,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":26,"author":{"gitId":"saravanamani1999"},"content":"    public AddSubCommand() {","lastModifiedDate":"2021-10-23"},{"lineNumber":27,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"saravanamani1999"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":29,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":30,"author":{"gitId":"saravanamani1999"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":31,"author":{"gitId":"saravanamani1999"},"content":"     * Adds lesson to timetable based on the time and day of the lesson and","lastModifiedDate":"2021-10-22"},{"lineNumber":32,"author":{"gitId":"saravanamani1999"},"content":"     * saves the timetable to the local storage by writing to timetable.txt","lastModifiedDate":"2021-10-22"},{"lineNumber":33,"author":{"gitId":"saravanamani1999"},"content":"     * based on the time and day of the lesson.","lastModifiedDate":"2021-10-22"},{"lineNumber":34,"author":{"gitId":"saravanamani1999"},"content":"     *","lastModifiedDate":"2021-10-22"},{"lineNumber":35,"author":{"gitId":"saravanamani1999"},"content":"     * @param lesson Lesson which is to be added to the timetable","lastModifiedDate":"2021-10-22"},{"lineNumber":36,"author":{"gitId":"saravanamani1999"},"content":"     * @throws KolinuxException If the format of user input is incorrect","lastModifiedDate":"2021-10-22"},{"lineNumber":37,"author":{"gitId":"saravanamani1999"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":38,"author":{"gitId":"saravanamani1999"},"content":"    public void addToTimetable(Lesson lesson) throws KolinuxException {","lastModifiedDate":"2021-10-23"},{"lineNumber":39,"author":{"gitId":"saravanamani1999"},"content":"        String moduleCode \u003d lesson.getModuleCode();","lastModifiedDate":"2021-10-22"},{"lineNumber":40,"author":{"gitId":"saravanamani1999"},"content":"        String lessonType \u003d lesson.getLessonType();","lastModifiedDate":"2021-10-22"},{"lineNumber":41,"author":{"gitId":"saravanamani1999"},"content":"        String description \u003d moduleCode + \" \" + lessonType;","lastModifiedDate":"2021-10-22"},{"lineNumber":42,"author":{"gitId":"saravanamani1999"},"content":"        int dayIndex \u003d lesson.getDayIndex();","lastModifiedDate":"2021-10-22"},{"lineNumber":43,"author":{"gitId":"saravanamani1999"},"content":"        int startTimeIndex \u003d lesson.getStartTimeIndex();","lastModifiedDate":"2021-10-22"},{"lineNumber":44,"author":{"gitId":"saravanamani1999"},"content":"        int endTimeIndex \u003d lesson.getEndTimeIndex();","lastModifiedDate":"2021-10-22"},{"lineNumber":45,"author":{"gitId":"saravanamani1999"},"content":"        if (!isPeriodFree(startTimeIndex, endTimeIndex, dayIndex)) {","lastModifiedDate":"2021-10-22"},{"lineNumber":46,"author":{"gitId":"saravanamani1999"},"content":"            throw new KolinuxException(INACCESSIBLE_PERIOD);","lastModifiedDate":"2021-10-22"},{"lineNumber":47,"author":{"gitId":"saravanamani1999"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":48,"author":{"gitId":"saravanamani1999"},"content":"        for (int i \u003d startTimeIndex; i \u003c endTimeIndex; i++) {","lastModifiedDate":"2021-10-22"},{"lineNumber":49,"author":{"gitId":"saravanamani1999"},"content":"            assert dayIndex \u003c COLUMN_SIZE;","lastModifiedDate":"2021-10-22"},{"lineNumber":50,"author":{"gitId":"saravanamani1999"},"content":"            assert i \u003c ROW_SIZE;","lastModifiedDate":"2021-10-22"},{"lineNumber":51,"author":{"gitId":"saravanamani1999"},"content":"            timetableData[i][dayIndex] \u003d description;","lastModifiedDate":"2021-10-22"},{"lineNumber":52,"author":{"gitId":"saravanamani1999"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":53,"author":{"gitId":"saravanamani1999"},"content":"        lessonStorage.add(lesson);","lastModifiedDate":"2021-10-22"},{"lineNumber":54,"author":{"gitId":"saravanamani1999"},"content":"        timetableStorage.writeToFile();","lastModifiedDate":"2021-10-22"},{"lineNumber":55,"author":{"gitId":"saravanamani1999"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":56,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":57,"author":{"gitId":"saravanamani1999"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":58,"author":{"gitId":"saravanamani1999"},"content":"     * Performs the checks before inputting the lesson into timetable.","lastModifiedDate":"2021-11-05"},{"lineNumber":59,"author":{"gitId":"saravanamani1999"},"content":"     *","lastModifiedDate":"2021-11-05"},{"lineNumber":60,"author":{"gitId":"saravanamani1999"},"content":"     * @param lessonDetails The details of the lessons to be added","lastModifiedDate":"2021-11-05"},{"lineNumber":61,"author":{"gitId":"saravanamani1999"},"content":"     * @param isAllowingAdd Boolean to check if the user allows adding in the case of exceeding workload","lastModifiedDate":"2021-11-05"},{"lineNumber":62,"author":{"gitId":"saravanamani1999"},"content":"     * @param isStorageAdd Boolean to check if it\u0027s a storage add operation or normal add  operation by user to prevent","lastModifiedDate":"2021-11-05"},{"lineNumber":63,"author":{"gitId":"saravanamani1999"},"content":"     *                     throwing of exception due to exceeding overload when adding lessons from storage file","lastModifiedDate":"2021-11-05"},{"lineNumber":64,"author":{"gitId":"saravanamani1999"},"content":"     * @throws KolinuxException If any of the checks before adding to timetable fails","lastModifiedDate":"2021-11-05"},{"lineNumber":65,"author":{"gitId":"saravanamani1999"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":66,"author":{"gitId":"saravanamani1999"},"content":"    public void inputLesson(String[] lessonDetails, boolean isAllowingAdd, boolean isStorageAdd)","lastModifiedDate":"2021-11-04"},{"lineNumber":67,"author":{"gitId":"saravanamani1999"},"content":"            throws KolinuxException {","lastModifiedDate":"2021-11-04"},{"lineNumber":68,"author":{"gitId":"saravanamani1999"},"content":"        try {","lastModifiedDate":"2021-10-22"},{"lineNumber":69,"author":{"gitId":"saravanamani1999"},"content":"            checkLessonInModuleList(moduleList, lessonDetails[0].toUpperCase());","lastModifiedDate":"2021-11-04"},{"lineNumber":70,"author":{"gitId":"saravanamani1999"},"content":"            checkLessonType(lessonDetails[1].toUpperCase());","lastModifiedDate":"2021-11-04"},{"lineNumber":71,"author":{"gitId":"saravanamani1999"},"content":"            checkTimeAndDay(lessonDetails[2].toLowerCase(), lessonDetails[3], lessonDetails[4]);","lastModifiedDate":"2021-11-01"},{"lineNumber":72,"author":{"gitId":"saravanamani1999"},"content":"            checkExceedingWorkload(lessonDetails, isAllowingAdd, isStorageAdd);","lastModifiedDate":"2021-11-04"},{"lineNumber":73,"author":{"gitId":"saravanamani1999"},"content":"            sortLessonsToAdd(lessonDetails[1].toUpperCase(), lessonDetails);","lastModifiedDate":"2021-11-04"},{"lineNumber":74,"author":{"gitId":"saravanamani1999"},"content":"        } catch (ArrayIndexOutOfBoundsException exception) {","lastModifiedDate":"2021-11-04"},{"lineNumber":75,"author":{"gitId":"saravanamani1999"},"content":"            throw new KolinuxException(INVALID_ADD_FORMAT);","lastModifiedDate":"2021-11-04"},{"lineNumber":76,"author":{"gitId":"saravanamani1999"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":77,"author":{"gitId":"saravanamani1999"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":78,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":79,"author":{"gitId":"saravanamani1999"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":80,"author":{"gitId":"saravanamani1999"},"content":"     * Sorts the lessons according to their lesson types before adding it to the timetable.","lastModifiedDate":"2021-11-05"},{"lineNumber":81,"author":{"gitId":"saravanamani1999"},"content":"     *","lastModifiedDate":"2021-11-05"},{"lineNumber":82,"author":{"gitId":"saravanamani1999"},"content":"     * @param lessonType The type of lesson to be added to timetable","lastModifiedDate":"2021-11-05"},{"lineNumber":83,"author":{"gitId":"saravanamani1999"},"content":"     * @param lessonDetails The details of the lesson to be added to timetable","lastModifiedDate":"2021-11-05"},{"lineNumber":84,"author":{"gitId":"saravanamani1999"},"content":"     * @throws KolinuxException If the lesson type parameter input by user is invalid","lastModifiedDate":"2021-11-05"},{"lineNumber":85,"author":{"gitId":"saravanamani1999"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":86,"author":{"gitId":"saravanamani1999"},"content":"    private void sortLessonsToAdd(String lessonType, String[] lessonDetails) throws KolinuxException {","lastModifiedDate":"2021-11-04"},{"lineNumber":87,"author":{"gitId":"saravanamani1999"},"content":"        switch (lessonType) {","lastModifiedDate":"2021-11-04"},{"lineNumber":88,"author":{"gitId":"saravanamani1999"},"content":"        case \"TUT\":","lastModifiedDate":"2021-11-04"},{"lineNumber":89,"author":{"gitId":"saravanamani1999"},"content":"            addToTimetable(new Tutorial(lessonDetails));","lastModifiedDate":"2021-10-25"},{"lineNumber":90,"author":{"gitId":"saravanamani1999"},"content":"            break;","lastModifiedDate":"2021-11-04"},{"lineNumber":91,"author":{"gitId":"saravanamani1999"},"content":"        case \"LEC\":","lastModifiedDate":"2021-11-04"},{"lineNumber":92,"author":{"gitId":"saravanamani1999"},"content":"            addToTimetable(new Lecture(lessonDetails));","lastModifiedDate":"2021-10-25"},{"lineNumber":93,"author":{"gitId":"saravanamani1999"},"content":"            break;","lastModifiedDate":"2021-11-04"},{"lineNumber":94,"author":{"gitId":"saravanamani1999"},"content":"        case \"LAB\":","lastModifiedDate":"2021-11-04"},{"lineNumber":95,"author":{"gitId":"saravanamani1999"},"content":"            addToTimetable(new Lab(lessonDetails));","lastModifiedDate":"2021-10-25"},{"lineNumber":96,"author":{"gitId":"saravanamani1999"},"content":"            break;","lastModifiedDate":"2021-11-04"},{"lineNumber":97,"author":{"gitId":"saravanamani1999"},"content":"        case \"SEC\":","lastModifiedDate":"2021-11-04"},{"lineNumber":98,"author":{"gitId":"saravanamani1999"},"content":"            addToTimetable(new Sectional(lessonDetails));","lastModifiedDate":"2021-11-01"},{"lineNumber":99,"author":{"gitId":"saravanamani1999"},"content":"            break;","lastModifiedDate":"2021-11-04"},{"lineNumber":100,"author":{"gitId":"saravanamani1999"},"content":"        default:","lastModifiedDate":"2021-11-04"},{"lineNumber":101,"author":{"gitId":"saravanamani1999"},"content":"            throw new KolinuxException(INVALID_LESSON_FORMAT);","lastModifiedDate":"2021-10-31"},{"lineNumber":102,"author":{"gitId":"saravanamani1999"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":103,"author":{"gitId":"saravanamani1999"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":104,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":105,"author":{"gitId":"saravanamani1999"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":106,"author":{"gitId":"saravanamani1999"},"content":"     * Gets the lesson duration of a specific module lesson which is in the storage.","lastModifiedDate":"2021-11-05"},{"lineNumber":107,"author":{"gitId":"saravanamani1999"},"content":"     *","lastModifiedDate":"2021-11-05"},{"lineNumber":108,"author":{"gitId":"saravanamani1999"},"content":"     * @param moduleCode The module code of the lesson to obtain duration from","lastModifiedDate":"2021-11-05"},{"lineNumber":109,"author":{"gitId":"saravanamani1999"},"content":"     * @param lessonType The lesson type of the lesson to obtain duration from","lastModifiedDate":"2021-11-05"},{"lineNumber":110,"author":{"gitId":"saravanamani1999"},"content":"     * @return The duration of the specified lesson of module code and lesson type","lastModifiedDate":"2021-11-05"},{"lineNumber":111,"author":{"gitId":"saravanamani1999"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":112,"author":{"gitId":"saravanamani1999"},"content":"    private int getStorageHours(String moduleCode, String lessonType) {","lastModifiedDate":"2021-10-25"},{"lineNumber":113,"author":{"gitId":"saravanamani1999"},"content":"        int hourCount \u003d 0;","lastModifiedDate":"2021-10-22"},{"lineNumber":114,"author":{"gitId":"saravanamani1999"},"content":"        for (Lesson storedLesson : lessonStorage) {","lastModifiedDate":"2021-10-22"},{"lineNumber":115,"author":{"gitId":"saravanamani1999"},"content":"            if (storedLesson.getModuleCode().equals(moduleCode)","lastModifiedDate":"2021-10-22"},{"lineNumber":116,"author":{"gitId":"saravanamani1999"},"content":"                    \u0026\u0026 storedLesson.getLessonType().equals(lessonType)) {","lastModifiedDate":"2021-10-22"},{"lineNumber":117,"author":{"gitId":"saravanamani1999"},"content":"                hourCount +\u003d storedLesson.getHours();","lastModifiedDate":"2021-10-22"},{"lineNumber":118,"author":{"gitId":"saravanamani1999"},"content":"            }","lastModifiedDate":"2021-10-22"},{"lineNumber":119,"author":{"gitId":"saravanamani1999"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":120,"author":{"gitId":"saravanamani1999"},"content":"        return hourCount;","lastModifiedDate":"2021-10-22"},{"lineNumber":121,"author":{"gitId":"saravanamani1999"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":122,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":123,"author":{"gitId":"saravanamani1999"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":124,"author":{"gitId":"saravanamani1999"},"content":"     * Gets the specified required hours for the lesson being added by user, prescribed in the api.","lastModifiedDate":"2021-11-05"},{"lineNumber":125,"author":{"gitId":"saravanamani1999"},"content":"     *","lastModifiedDate":"2021-11-05"},{"lineNumber":126,"author":{"gitId":"saravanamani1999"},"content":"     * @param moduleList The list of modules added by user using {@code module add} before adding to timetable","lastModifiedDate":"2021-11-05"},{"lineNumber":127,"author":{"gitId":"saravanamani1999"},"content":"     * @param moduleCode Module code of the lesson to retrieve the workload hours from","lastModifiedDate":"2021-11-05"},{"lineNumber":128,"author":{"gitId":"saravanamani1999"},"content":"     * @param lessonType Lesson type of the lesson to retrieve the workload hours from","lastModifiedDate":"2021-11-05"},{"lineNumber":129,"author":{"gitId":"saravanamani1999"},"content":"     * @return The workload hours for the lesson being addein","lastModifiedDate":"2021-11-05"},{"lineNumber":130,"author":{"gitId":"saravanamani1999"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":131,"author":{"gitId":"saravanamani1999"},"content":"    private double getRequiredHours(ModuleList moduleList, String moduleCode, String lessonType) {","lastModifiedDate":"2021-11-04"},{"lineNumber":132,"author":{"gitId":"saravanamani1999"},"content":"        for (ModuleDetails module : moduleList.myModules) {","lastModifiedDate":"2021-10-22"},{"lineNumber":133,"author":{"gitId":"saravanamani1999"},"content":"            if (lessonType.equals(\"TUT\") \u0026\u0026 module.moduleCode.equals(moduleCode)) {","lastModifiedDate":"2021-10-22"},{"lineNumber":134,"author":{"gitId":"saravanamani1999"},"content":"                return module.getTutorialHours() * 2;","lastModifiedDate":"2021-11-01"},{"lineNumber":135,"author":{"gitId":"saravanamani1999"},"content":"            } else if ((lessonType.equals(\"LEC\") || lessonType.equals(\"SEC\"))","lastModifiedDate":"2021-11-01"},{"lineNumber":136,"author":{"gitId":"saravanamani1999"},"content":"                    \u0026\u0026 module.moduleCode.equals(moduleCode)) {","lastModifiedDate":"2021-11-01"},{"lineNumber":137,"author":{"gitId":"saravanamani1999"},"content":"                return module.getLectureHours() * 2;","lastModifiedDate":"2021-11-01"},{"lineNumber":138,"author":{"gitId":"saravanamani1999"},"content":"            } else if (lessonType.equals(\"LAB\") \u0026\u0026 module.moduleCode.equals(moduleCode)) {","lastModifiedDate":"2021-10-22"},{"lineNumber":139,"author":{"gitId":"saravanamani1999"},"content":"                return module.getLabHours() * 2;","lastModifiedDate":"2021-11-01"},{"lineNumber":140,"author":{"gitId":"saravanamani1999"},"content":"            }","lastModifiedDate":"2021-10-22"},{"lineNumber":141,"author":{"gitId":"saravanamani1999"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":142,"author":{"gitId":"saravanamani1999"},"content":"        return 0;","lastModifiedDate":"2021-10-22"},{"lineNumber":143,"author":{"gitId":"saravanamani1999"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":144,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":145,"author":{"gitId":"saravanamani1999"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":146,"author":{"gitId":"saravanamani1999"},"content":"     * Checks if the lesson entered by user is stored in the {@code moduleList} first.","lastModifiedDate":"2021-11-05"},{"lineNumber":147,"author":{"gitId":"saravanamani1999"},"content":"     *","lastModifiedDate":"2021-11-05"},{"lineNumber":148,"author":{"gitId":"saravanamani1999"},"content":"     * @param moduleList The list of modules added by user using {@code module add} before adding to timetable","lastModifiedDate":"2021-11-05"},{"lineNumber":149,"author":{"gitId":"saravanamani1999"},"content":"     * @param moduleCode Module code of the lesson","lastModifiedDate":"2021-11-05"},{"lineNumber":150,"author":{"gitId":"saravanamani1999"},"content":"     * @throws KolinuxException If the module is not in the {@code moduleList}","lastModifiedDate":"2021-11-05"},{"lineNumber":151,"author":{"gitId":"saravanamani1999"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":152,"author":{"gitId":"saravanamani1999"},"content":"    private void checkLessonInModuleList(ModuleList moduleList, String moduleCode) throws KolinuxException {","lastModifiedDate":"2021-11-04"},{"lineNumber":153,"author":{"gitId":"saravanamani1999"},"content":"        boolean isFound \u003d false;","lastModifiedDate":"2021-11-04"},{"lineNumber":154,"author":{"gitId":"saravanamani1999"},"content":"        for (ModuleDetails module : moduleList.myModules) {","lastModifiedDate":"2021-10-22"},{"lineNumber":155,"author":{"gitId":"saravanamani1999"},"content":"            if (Objects.equals(module.moduleCode, moduleCode)) {","lastModifiedDate":"2021-10-22"},{"lineNumber":156,"author":{"gitId":"saravanamani1999"},"content":"                isFound \u003d true;","lastModifiedDate":"2021-11-04"},{"lineNumber":157,"author":{"gitId":"saravanamani1999"},"content":"                break;","lastModifiedDate":"2021-11-04"},{"lineNumber":158,"author":{"gitId":"saravanamani1999"},"content":"            }","lastModifiedDate":"2021-10-22"},{"lineNumber":159,"author":{"gitId":"saravanamani1999"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":160,"author":{"gitId":"saravanamani1999"},"content":"        if (!isFound) {","lastModifiedDate":"2021-11-04"},{"lineNumber":161,"author":{"gitId":"saravanamani1999"},"content":"            throw new KolinuxException(moduleCode + \" not found in module list\");","lastModifiedDate":"2021-11-04"},{"lineNumber":162,"author":{"gitId":"saravanamani1999"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":163,"author":{"gitId":"saravanamani1999"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":164,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":165,"author":{"gitId":"saravanamani1999"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":166,"author":{"gitId":"saravanamani1999"},"content":"     * Checks if the lesson entered exceeds the prescribed workload in the api.","lastModifiedDate":"2021-11-05"},{"lineNumber":167,"author":{"gitId":"saravanamani1999"},"content":"     *","lastModifiedDate":"2021-11-05"},{"lineNumber":168,"author":{"gitId":"saravanamani1999"},"content":"     * @param lessonDetails The details of the lesson to be added to timetable","lastModifiedDate":"2021-11-05"},{"lineNumber":169,"author":{"gitId":"saravanamani1999"},"content":"     * @param isAllowingAdd Boolean to check if the user allows adding in the case of exceeding workload","lastModifiedDate":"2021-11-05"},{"lineNumber":170,"author":{"gitId":"saravanamani1999"},"content":"     * @param isStorageAdd Boolean to check if it\u0027s a storage add operation or normal add  operation by user to prevent","lastModifiedDate":"2021-11-05"},{"lineNumber":171,"author":{"gitId":"saravanamani1999"},"content":"     *                     throwing of exception due to exceeding overload when adding lessons from storage file","lastModifiedDate":"2021-11-05"},{"lineNumber":172,"author":{"gitId":"saravanamani1999"},"content":"     * @throws KolinuxException If the lesson\u0027s duration input by user exceeds the total workload for that","lastModifiedDate":"2021-11-05"},{"lineNumber":173,"author":{"gitId":"saravanamani1999"},"content":"     *                          module lesson type\u0027s prescribed workload","lastModifiedDate":"2021-11-05"},{"lineNumber":174,"author":{"gitId":"saravanamani1999"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":175,"author":{"gitId":"saravanamani1999"},"content":"    private void checkExceedingWorkload(String[] lessonDetails, boolean isAllowingAdd, boolean isStorageAdd)","lastModifiedDate":"2021-11-04"},{"lineNumber":176,"author":{"gitId":"saravanamani1999"},"content":"            throws KolinuxException {","lastModifiedDate":"2021-10-22"},{"lineNumber":177,"author":{"gitId":"saravanamani1999"},"content":"        String lessonType \u003d lessonDetails[1].toUpperCase();","lastModifiedDate":"2021-11-04"},{"lineNumber":178,"author":{"gitId":"saravanamani1999"},"content":"        String moduleCode \u003d lessonDetails[0].toUpperCase();","lastModifiedDate":"2021-11-04"},{"lineNumber":179,"author":{"gitId":"saravanamani1999"},"content":"        double requiredHours \u003d getRequiredHours(moduleList, moduleCode, lessonType);","lastModifiedDate":"2021-11-04"},{"lineNumber":180,"author":{"gitId":"saravanamani1999"},"content":"        double inputHours \u003d getIndex(lessonDetails[4], schoolHours) - getIndex(lessonDetails[3], schoolHours);","lastModifiedDate":"2021-11-01"},{"lineNumber":181,"author":{"gitId":"saravanamani1999"},"content":"        double storageHours \u003d getStorageHours(moduleCode, lessonType) + inputHours;","lastModifiedDate":"2021-11-01"},{"lineNumber":182,"author":{"gitId":"saravanamani1999"},"content":"        if (storageHours \u003e requiredHours \u0026\u0026 !isAllowingAdd \u0026\u0026 !isStorageAdd) {","lastModifiedDate":"2021-11-04"},{"lineNumber":183,"author":{"gitId":"saravanamani1999"},"content":"            throw new ExceedWorkloadException(\"Input hours for \" + moduleCode + \" \" + lessonType","lastModifiedDate":"2021-11-04"},{"lineNumber":184,"author":{"gitId":"saravanamani1999"},"content":"                    +","lastModifiedDate":"2021-10-22"},{"lineNumber":185,"author":{"gitId":"saravanamani1999"},"content":"                    \" exceeds the total workload\\nIt exceeds \" + requiredHours / 2 + \" hours\\n\"","lastModifiedDate":"2021-11-01"},{"lineNumber":186,"author":{"gitId":"saravanamani1999"},"content":"                    +","lastModifiedDate":"2021-10-22"},{"lineNumber":187,"author":{"gitId":"saravanamani1999"},"content":"                    \"Do you want to continue adding the lesson despite\\n\"","lastModifiedDate":"2021-11-04"},{"lineNumber":188,"author":{"gitId":"saravanamani1999"},"content":"                    +","lastModifiedDate":"2021-10-22"},{"lineNumber":189,"author":{"gitId":"saravanamani1999"},"content":"                    \"exceeding the workload? Please enter y or n\");","lastModifiedDate":"2021-11-04"},{"lineNumber":190,"author":{"gitId":"saravanamani1999"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":191,"author":{"gitId":"saravanamani1999"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":192,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":193,"author":{"gitId":"saravanamani1999"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":194,"author":{"gitId":"saravanamani1999"},"content":"     * Checks if a specific time slot is occupied by another lesson.","lastModifiedDate":"2021-11-05"},{"lineNumber":195,"author":{"gitId":"saravanamani1999"},"content":"     *","lastModifiedDate":"2021-11-05"},{"lineNumber":196,"author":{"gitId":"saravanamani1999"},"content":"     * @param startIndex The index of the starting time of lesson in {@code schoolHours} array","lastModifiedDate":"2021-11-05"},{"lineNumber":197,"author":{"gitId":"saravanamani1999"},"content":"     * @param endIndex The index of the ending time of lesson in {@code schoolHours} array","lastModifiedDate":"2021-11-05"},{"lineNumber":198,"author":{"gitId":"saravanamani1999"},"content":"     * @param dayIndex The index of the day of lesson in {@code days} array","lastModifiedDate":"2021-11-05"},{"lineNumber":199,"author":{"gitId":"saravanamani1999"},"content":"     * @return True if the time slot is not occupied by another lesson and false otherwise","lastModifiedDate":"2021-11-05"},{"lineNumber":200,"author":{"gitId":"saravanamani1999"},"content":"     * @throws KolinuxException If the day or timings entered are invalid","lastModifiedDate":"2021-11-05"},{"lineNumber":201,"author":{"gitId":"saravanamani1999"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":202,"author":{"gitId":"saravanamani1999"},"content":"    private boolean isPeriodFree(int startIndex, int endIndex, int dayIndex) throws KolinuxException {","lastModifiedDate":"2021-10-25"},{"lineNumber":203,"author":{"gitId":"saravanamani1999"},"content":"        try {","lastModifiedDate":"2021-10-22"},{"lineNumber":204,"author":{"gitId":"saravanamani1999"},"content":"            for (int i \u003d startIndex; i \u003c endIndex; i++) {","lastModifiedDate":"2021-10-22"},{"lineNumber":205,"author":{"gitId":"saravanamani1999"},"content":"                if (timetableData[i][dayIndex] !\u003d null) {","lastModifiedDate":"2021-10-22"},{"lineNumber":206,"author":{"gitId":"saravanamani1999"},"content":"                    return false;","lastModifiedDate":"2021-10-22"},{"lineNumber":207,"author":{"gitId":"saravanamani1999"},"content":"                }","lastModifiedDate":"2021-10-22"},{"lineNumber":208,"author":{"gitId":"saravanamani1999"},"content":"            }","lastModifiedDate":"2021-10-22"},{"lineNumber":209,"author":{"gitId":"saravanamani1999"},"content":"            return true;","lastModifiedDate":"2021-10-22"},{"lineNumber":210,"author":{"gitId":"saravanamani1999"},"content":"        } catch (ArrayIndexOutOfBoundsException exception) {","lastModifiedDate":"2021-10-22"},{"lineNumber":211,"author":{"gitId":"saravanamani1999"},"content":"            throw new KolinuxException(INVALID_DAY_TIME);","lastModifiedDate":"2021-10-31"},{"lineNumber":212,"author":{"gitId":"saravanamani1999"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":213,"author":{"gitId":"saravanamani1999"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":214,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":215,"author":{"gitId":"saravanamani1999"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":216,"author":{"gitId":"saravanamani1999"},"content":"     * Checks if the time and day entered when inputting the lesson is valid.","lastModifiedDate":"2021-11-05"},{"lineNumber":217,"author":{"gitId":"saravanamani1999"},"content":"     *","lastModifiedDate":"2021-11-05"},{"lineNumber":218,"author":{"gitId":"saravanamani1999"},"content":"     * @param day The day of the lesson to be added","lastModifiedDate":"2021-11-05"},{"lineNumber":219,"author":{"gitId":"saravanamani1999"},"content":"     * @param startTime The starting time of the lesson to be added","lastModifiedDate":"2021-11-05"},{"lineNumber":220,"author":{"gitId":"saravanamani1999"},"content":"     * @param endTime The ending time of the lesson to be added","lastModifiedDate":"2021-11-05"},{"lineNumber":221,"author":{"gitId":"saravanamani1999"},"content":"     * @throws KolinuxException If the day or timings entered are invalid","lastModifiedDate":"2021-11-05"},{"lineNumber":222,"author":{"gitId":"saravanamani1999"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":223,"author":{"gitId":"saravanamani1999"},"content":"    private void checkTimeAndDay(String day, String startTime, String endTime) throws KolinuxException {","lastModifiedDate":"2021-10-31"},{"lineNumber":224,"author":{"gitId":"saravanamani1999"},"content":"        int dayIndex \u003d getIndex(day, days);","lastModifiedDate":"2021-10-31"},{"lineNumber":225,"author":{"gitId":"saravanamani1999"},"content":"        int startTimeIndex \u003d getIndex(startTime, schoolHours);","lastModifiedDate":"2021-10-31"},{"lineNumber":226,"author":{"gitId":"saravanamani1999"},"content":"        int endTimeIndex \u003d getIndex(endTime, schoolHours);","lastModifiedDate":"2021-10-31"},{"lineNumber":227,"author":{"gitId":"saravanamani1999"},"content":"        if (startTimeIndex \u003d\u003d -1 || dayIndex \u003d\u003d -1 || endTimeIndex \u003d\u003d -1 || startTimeIndex \u003e\u003d endTimeIndex) {","lastModifiedDate":"2021-10-31"},{"lineNumber":228,"author":{"gitId":"saravanamani1999"},"content":"            throw new KolinuxException(INVALID_ADD_FORMAT + \"\\n\\n\" + INVALID_DAY_TIME);","lastModifiedDate":"2021-10-31"},{"lineNumber":229,"author":{"gitId":"saravanamani1999"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":230,"author":{"gitId":"saravanamani1999"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":231,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":232,"author":{"gitId":"saravanamani1999"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":233,"author":{"gitId":"saravanamani1999"},"content":"     * Checks if the lesson type entered is valid.","lastModifiedDate":"2021-11-05"},{"lineNumber":234,"author":{"gitId":"saravanamani1999"},"content":"     *","lastModifiedDate":"2021-11-05"},{"lineNumber":235,"author":{"gitId":"saravanamani1999"},"content":"     * @param lessonType The lesson type of the lesson entered to add to timetable","lastModifiedDate":"2021-11-05"},{"lineNumber":236,"author":{"gitId":"saravanamani1999"},"content":"     * @throws KolinuxException If the lesson type entered is invalid","lastModifiedDate":"2021-11-05"},{"lineNumber":237,"author":{"gitId":"saravanamani1999"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":238,"author":{"gitId":"saravanamani1999"},"content":"    private void checkLessonType(String lessonType) throws KolinuxException {","lastModifiedDate":"2021-10-31"},{"lineNumber":239,"author":{"gitId":"saravanamani1999"},"content":"        if (!(lessonType.equals(\"TUT\") || lessonType.equals(\"LEC\") || lessonType.equals(\"LAB\")","lastModifiedDate":"2021-11-01"},{"lineNumber":240,"author":{"gitId":"saravanamani1999"},"content":"                || lessonType.equals(\"SEC\"))) {","lastModifiedDate":"2021-11-01"},{"lineNumber":241,"author":{"gitId":"saravanamani1999"},"content":"            throw new KolinuxException(INVALID_ADD_FORMAT + \"\\n\\n\" + INVALID_LESSON_FORMAT);","lastModifiedDate":"2021-11-01"},{"lineNumber":242,"author":{"gitId":"saravanamani1999"},"content":"        }","lastModifiedDate":"2021-10-31"},{"lineNumber":243,"author":{"gitId":"saravanamani1999"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":244,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":245,"author":{"gitId":"saravanamani1999"},"content":"}","lastModifiedDate":"2021-10-22"}],"authorContributionMap":{"saravanamani1999":245}},{"path":"src/main/java/seedu/kolinux/timetable/subcommand/DeleteSubCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"saravanamani1999"},"content":"package seedu.kolinux.timetable.subcommand;","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":3,"author":{"gitId":"saravanamani1999"},"content":"import seedu.kolinux.exceptions.KolinuxException;","lastModifiedDate":"2021-10-22"},{"lineNumber":4,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"saravanamani1999"},"content":"import static seedu.kolinux.timetable.Timetable.lessonStorage;","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"saravanamani1999"},"content":"import static seedu.kolinux.timetable.Timetable.timetableData;","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"saravanamani1999"},"content":"import static seedu.kolinux.timetable.Timetable.timetableStorage;","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"saravanamani1999"},"content":"import static seedu.kolinux.timetable.lesson.Lesson.getIndex;","lastModifiedDate":"2021-10-31"},{"lineNumber":9,"author":{"gitId":"saravanamani1999"},"content":"import static seedu.kolinux.timetable.lesson.Lesson.days;","lastModifiedDate":"2021-10-31"},{"lineNumber":10,"author":{"gitId":"saravanamani1999"},"content":"import static seedu.kolinux.timetable.lesson.Lesson.schoolHours;","lastModifiedDate":"2021-10-31"},{"lineNumber":11,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":12,"author":{"gitId":"saravanamani1999"},"content":"public class DeleteSubCommand extends SubCommand {","lastModifiedDate":"2021-10-23"},{"lineNumber":13,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"saravanamani1999"},"content":"    public DeleteSubCommand() {","lastModifiedDate":"2021-10-23"},{"lineNumber":15,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":16,"author":{"gitId":"saravanamani1999"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":17,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":18,"author":{"gitId":"saravanamani1999"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":19,"author":{"gitId":"saravanamani1999"},"content":"     * Deletes a lesson from the timetable data.","lastModifiedDate":"2021-11-05"},{"lineNumber":20,"author":{"gitId":"saravanamani1999"},"content":"     *","lastModifiedDate":"2021-11-05"},{"lineNumber":21,"author":{"gitId":"saravanamani1999"},"content":"     * @param day Day of the lesson to be deleted","lastModifiedDate":"2021-11-05"},{"lineNumber":22,"author":{"gitId":"saravanamani1999"},"content":"     * @param startIndex Index of the starting time of the lesson to be deleted","lastModifiedDate":"2021-11-05"},{"lineNumber":23,"author":{"gitId":"saravanamani1999"},"content":"     * @param endIndex Index of the ending time of the lesson to be deleted","lastModifiedDate":"2021-11-05"},{"lineNumber":24,"author":{"gitId":"saravanamani1999"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":25,"author":{"gitId":"saravanamani1999"},"content":"    private void deleteFromTimetable(String day, int startIndex, int endIndex) {","lastModifiedDate":"2021-10-31"},{"lineNumber":26,"author":{"gitId":"saravanamani1999"},"content":"        int dayIndex \u003d getIndex(day, days);","lastModifiedDate":"2021-10-31"},{"lineNumber":27,"author":{"gitId":"saravanamani1999"},"content":"        for (int i \u003d startIndex; i \u003c endIndex; i++) {","lastModifiedDate":"2021-10-31"},{"lineNumber":28,"author":{"gitId":"saravanamani1999"},"content":"            assert dayIndex \u003c COLUMN_SIZE;","lastModifiedDate":"2021-10-22"},{"lineNumber":29,"author":{"gitId":"saravanamani1999"},"content":"            timetableData[i][dayIndex] \u003d null;","lastModifiedDate":"2021-10-22"},{"lineNumber":30,"author":{"gitId":"saravanamani1999"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":31,"author":{"gitId":"saravanamani1999"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":32,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":33,"author":{"gitId":"saravanamani1999"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":34,"author":{"gitId":"saravanamani1999"},"content":"     * Deletes the lesson from the storage and calls the deleteFromTimetable method as well.","lastModifiedDate":"2021-11-05"},{"lineNumber":35,"author":{"gitId":"saravanamani1999"},"content":"     *","lastModifiedDate":"2021-11-05"},{"lineNumber":36,"author":{"gitId":"saravanamani1999"},"content":"     * @param moduleCode Module code of the lesson to be deleted","lastModifiedDate":"2021-11-05"},{"lineNumber":37,"author":{"gitId":"saravanamani1999"},"content":"     * @param lessonType Lesson type of the lesson to be deleted","lastModifiedDate":"2021-11-05"},{"lineNumber":38,"author":{"gitId":"saravanamani1999"},"content":"     * @param day Day of the lesson to be deleted","lastModifiedDate":"2021-11-05"},{"lineNumber":39,"author":{"gitId":"saravanamani1999"},"content":"     * @param startTime Starting time of the lesson to be deleted","lastModifiedDate":"2021-11-05"},{"lineNumber":40,"author":{"gitId":"saravanamani1999"},"content":"     * @throws KolinuxException If the lesson specified to be deleted is not found in the timetable","lastModifiedDate":"2021-11-05"},{"lineNumber":41,"author":{"gitId":"saravanamani1999"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":42,"author":{"gitId":"saravanamani1999"},"content":"    public void deleteLesson(String moduleCode, String lessonType, String day, String startTime)","lastModifiedDate":"2021-11-04"},{"lineNumber":43,"author":{"gitId":"saravanamani1999"},"content":"            throws KolinuxException {","lastModifiedDate":"2021-10-31"},{"lineNumber":44,"author":{"gitId":"saravanamani1999"},"content":"        int removeIndex \u003d -1;","lastModifiedDate":"2021-10-22"},{"lineNumber":45,"author":{"gitId":"saravanamani1999"},"content":"        int endIndex \u003d -1;","lastModifiedDate":"2021-10-31"},{"lineNumber":46,"author":{"gitId":"saravanamani1999"},"content":"        for (int j \u003d 0; j \u003c lessonStorage.size(); j++) {","lastModifiedDate":"2021-10-22"},{"lineNumber":47,"author":{"gitId":"saravanamani1999"},"content":"            String typeInStorage \u003d lessonStorage.get(j).getLessonType();","lastModifiedDate":"2021-10-22"},{"lineNumber":48,"author":{"gitId":"saravanamani1999"},"content":"            String codeInStorage \u003d lessonStorage.get(j).getModuleCode();","lastModifiedDate":"2021-10-22"},{"lineNumber":49,"author":{"gitId":"saravanamani1999"},"content":"            String dayInStorage \u003d lessonStorage.get(j).getDay();","lastModifiedDate":"2021-10-22"},{"lineNumber":50,"author":{"gitId":"saravanamani1999"},"content":"            String startTimeInStorage \u003d lessonStorage.get(j).getStartTime();","lastModifiedDate":"2021-10-31"},{"lineNumber":51,"author":{"gitId":"saravanamani1999"},"content":"            if (typeInStorage.equals(lessonType) \u0026\u0026 codeInStorage.equals(moduleCode)","lastModifiedDate":"2021-10-22"},{"lineNumber":52,"author":{"gitId":"saravanamani1999"},"content":"                    \u0026\u0026 dayInStorage.equals(day) \u0026\u0026 startTimeInStorage.equals(startTime)) {","lastModifiedDate":"2021-10-31"},{"lineNumber":53,"author":{"gitId":"saravanamani1999"},"content":"                removeIndex \u003d j;","lastModifiedDate":"2021-10-22"},{"lineNumber":54,"author":{"gitId":"saravanamani1999"},"content":"                endIndex \u003d lessonStorage.get(j).getEndTimeIndex();","lastModifiedDate":"2021-10-31"},{"lineNumber":55,"author":{"gitId":"saravanamani1999"},"content":"            }","lastModifiedDate":"2021-10-22"},{"lineNumber":56,"author":{"gitId":"saravanamani1999"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":57,"author":{"gitId":"saravanamani1999"},"content":"        String description \u003d moduleCode + \" \" + lessonType;","lastModifiedDate":"2021-10-22"},{"lineNumber":58,"author":{"gitId":"saravanamani1999"},"content":"        if (removeIndex !\u003d -1) {","lastModifiedDate":"2021-10-22"},{"lineNumber":59,"author":{"gitId":"saravanamani1999"},"content":"            assert endIndex !\u003d -1;","lastModifiedDate":"2021-10-31"},{"lineNumber":60,"author":{"gitId":"saravanamani1999"},"content":"            int startIndex \u003d getIndex(startTime, schoolHours);","lastModifiedDate":"2021-10-31"},{"lineNumber":61,"author":{"gitId":"saravanamani1999"},"content":"            deleteFromTimetable(day, startIndex, endIndex);","lastModifiedDate":"2021-10-31"},{"lineNumber":62,"author":{"gitId":"saravanamani1999"},"content":"            lessonStorage.remove(removeIndex);","lastModifiedDate":"2021-10-22"},{"lineNumber":63,"author":{"gitId":"saravanamani1999"},"content":"            timetableStorage.writeToFile();","lastModifiedDate":"2021-10-22"},{"lineNumber":64,"author":{"gitId":"saravanamani1999"},"content":"        } else {","lastModifiedDate":"2021-10-22"},{"lineNumber":65,"author":{"gitId":"saravanamani1999"},"content":"            throw new KolinuxException(description + MISSING_LESSON_TO_DELETE);","lastModifiedDate":"2021-10-22"},{"lineNumber":66,"author":{"gitId":"saravanamani1999"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":67,"author":{"gitId":"saravanamani1999"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":68,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":69,"author":{"gitId":"saravanamani1999"},"content":"}","lastModifiedDate":"2021-10-22"}],"authorContributionMap":{"saravanamani1999":69}},{"path":"src/main/java/seedu/kolinux/timetable/subcommand/SubCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"saravanamani1999"},"content":"package seedu.kolinux.timetable.subcommand;","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":3,"author":{"gitId":"saravanamani1999"},"content":"import seedu.kolinux.timetable.lesson.Lesson;","lastModifiedDate":"2021-10-31"},{"lineNumber":4,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":5,"author":{"gitId":"saravanamani1999"},"content":"import static seedu.kolinux.timetable.Timetable.lessonStorage;","lastModifiedDate":"2021-10-31"},{"lineNumber":6,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":7,"author":{"gitId":"saravanamani1999"},"content":"public class SubCommand {","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"saravanamani1999"},"content":"    public static final int ROW_SIZE \u003d 31;","lastModifiedDate":"2021-11-01"},{"lineNumber":10,"author":{"gitId":"saravanamani1999"},"content":"    public static final int COLUMN_SIZE \u003d 6;","lastModifiedDate":"2021-10-22"},{"lineNumber":11,"author":{"gitId":"saravanamani1999"},"content":"    public static final int COLUMN_LAST_INDEX \u003d 5;","lastModifiedDate":"2021-10-22"},{"lineNumber":12,"author":{"gitId":"saravanamani1999"},"content":"    public static final String UPDATING_TO_SAME_TIMING \u003d \"You are updating the lesson to the same \"","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"saravanamani1999"},"content":"            \"timing as before.\\nPlease update lesson to a different timing.\";","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"saravanamani1999"},"content":"    public static final String INVALID_UPDATE_FORMAT \u003d \"Please check the format of updating timetable:\\n\"","lastModifiedDate":"2021-10-22"},{"lineNumber":16,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-10-22"},{"lineNumber":17,"author":{"gitId":"saravanamani1999"},"content":"            \"timetable update MODULE_CODE/LESSON_TYPE/OLD_DAY/OLD_START_TIME/NEW_DAY/NEW_START_TIME\\n\"","lastModifiedDate":"2021-10-31"},{"lineNumber":18,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-10-22"},{"lineNumber":19,"author":{"gitId":"saravanamani1999"},"content":"            \"Please ensure the timing for the \"","lastModifiedDate":"2021-10-22"},{"lineNumber":20,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-10-22"},{"lineNumber":21,"author":{"gitId":"saravanamani1999"},"content":"            \"lesson falls within the school hours: 0600 - 2100\";","lastModifiedDate":"2021-10-22"},{"lineNumber":22,"author":{"gitId":"saravanamani1999"},"content":"    public static final String INVALID_DELETE_FORMAT \u003d \"Please check the format of deleting from timetable:\\n\"","lastModifiedDate":"2021-10-22"},{"lineNumber":23,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-10-22"},{"lineNumber":24,"author":{"gitId":"saravanamani1999"},"content":"            \"timetable delete MODULE_CODE/LESSON_TYPE/DAY/START_TIME\\n\"","lastModifiedDate":"2021-10-31"},{"lineNumber":25,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-10-22"},{"lineNumber":26,"author":{"gitId":"saravanamani1999"},"content":"            \"e.g. timetable delete CS1010/TUT/Monday/1800\\n\"","lastModifiedDate":"2021-10-31"},{"lineNumber":27,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-10-22"},{"lineNumber":28,"author":{"gitId":"saravanamani1999"},"content":"            \"Please ensure the timing for the \"","lastModifiedDate":"2021-10-22"},{"lineNumber":29,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-10-22"},{"lineNumber":30,"author":{"gitId":"saravanamani1999"},"content":"            \"lesson falls within the school hours: 0600 - 2100\";","lastModifiedDate":"2021-10-22"},{"lineNumber":31,"author":{"gitId":"saravanamani1999"},"content":"    public static final String MISSING_LESSON_TO_DELETE \u003d \" does not exist in timetable.\\n\"","lastModifiedDate":"2021-10-22"},{"lineNumber":32,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-10-22"},{"lineNumber":33,"author":{"gitId":"saravanamani1999"},"content":"            \"Please input valid lesson to remove.\";","lastModifiedDate":"2021-10-22"},{"lineNumber":34,"author":{"gitId":"saravanamani1999"},"content":"    public static final String INVALID_ADD_FORMAT \u003d \"Please check the format of adding to timetable:\\n\"","lastModifiedDate":"2021-10-22"},{"lineNumber":35,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-10-22"},{"lineNumber":36,"author":{"gitId":"saravanamani1999"},"content":"            \"timetable add MODULE_CODE/LESSON_TYPE/DAY/START_TIME/END_TIME\\n\"","lastModifiedDate":"2021-10-22"},{"lineNumber":37,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-10-22"},{"lineNumber":38,"author":{"gitId":"saravanamani1999"},"content":"            \"e.g. timetable add CS1010/TUT/Monday/1200/1400\";","lastModifiedDate":"2021-10-22"},{"lineNumber":39,"author":{"gitId":"saravanamani1999"},"content":"    public static final String INACCESSIBLE_PERIOD \u003d \"Please choose another slot as the \"","lastModifiedDate":"2021-10-22"},{"lineNumber":40,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-10-22"},{"lineNumber":41,"author":{"gitId":"saravanamani1999"},"content":"            \"period is already occupied by another lesson\";","lastModifiedDate":"2021-10-22"},{"lineNumber":42,"author":{"gitId":"saravanamani1999"},"content":"    public static final String MISSING_LESSON_TO_UPDATE \u003d \"Lesson does not exist in timetable.\\n\"","lastModifiedDate":"2021-10-22"},{"lineNumber":43,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-10-22"},{"lineNumber":44,"author":{"gitId":"saravanamani1999"},"content":"            \"Try adding lesson to timetable with: timetable add\";","lastModifiedDate":"2021-10-22"},{"lineNumber":45,"author":{"gitId":"saravanamani1999"},"content":"    public static final String TIMETABLE_HEADER \u003d \"+-------------+--------------------+---------\"","lastModifiedDate":"2021-10-22"},{"lineNumber":46,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-10-22"},{"lineNumber":47,"author":{"gitId":"saravanamani1999"},"content":"            \"-----------+--------------------+--------------------+--------------------+\\n\"","lastModifiedDate":"2021-10-22"},{"lineNumber":48,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-10-22"},{"lineNumber":49,"author":{"gitId":"saravanamani1999"},"content":"            \"|             |       MONDAY       |       TUESDAY      |      WEDNESDAY     \"","lastModifiedDate":"2021-10-22"},{"lineNumber":50,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-10-22"},{"lineNumber":51,"author":{"gitId":"saravanamani1999"},"content":"            \"|      THURSDAY      |       FRIDAY       |\\n+-------------+-----------------\"","lastModifiedDate":"2021-10-22"},{"lineNumber":52,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-10-22"},{"lineNumber":53,"author":{"gitId":"saravanamani1999"},"content":"            \"---+--------------------+--------------------+--------------------+--------------------+\";","lastModifiedDate":"2021-10-22"},{"lineNumber":54,"author":{"gitId":"saravanamani1999"},"content":"    public static final String TIMETABLE_ROW_DIVIDER \u003d \"+-------------+--------------------+----------\"","lastModifiedDate":"2021-10-22"},{"lineNumber":55,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-10-22"},{"lineNumber":56,"author":{"gitId":"saravanamani1999"},"content":"            \"----------+--------------------+--------------------+--------------------+\";","lastModifiedDate":"2021-10-22"},{"lineNumber":57,"author":{"gitId":"saravanamani1999"},"content":"    public static final String INVALID_LESSON_FORMAT \u003d \"Please ensure the LESSON_TYPE entered is in one of \"","lastModifiedDate":"2021-10-31"},{"lineNumber":58,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-10-31"},{"lineNumber":59,"author":{"gitId":"saravanamani1999"},"content":"            \"the following format:\\n1. LEC\\n2. TUT\\n3. LAB\\n4. SEC\";","lastModifiedDate":"2021-11-03"},{"lineNumber":60,"author":{"gitId":"saravanamani1999"},"content":"    public static final String INVALID_DAY_TIME \u003d \"1. Please ensure the days are within Monday to Friday \"","lastModifiedDate":"2021-10-31"},{"lineNumber":61,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-10-31"},{"lineNumber":62,"author":{"gitId":"saravanamani1999"},"content":"            \"and spelt fully.\\n2. Please ensure the timings are within the school hours: 0600 - 2100\\n\"","lastModifiedDate":"2021-10-31"},{"lineNumber":63,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-10-31"},{"lineNumber":64,"author":{"gitId":"saravanamani1999"},"content":"            \"3. Please ensure the timings are in multiples of 30 mins.\\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":65,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-10-31"},{"lineNumber":66,"author":{"gitId":"saravanamani1999"},"content":"            \"   Timings like 1245 or 1110 are not accepted in order to maintain\\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":67,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-10-31"},{"lineNumber":68,"author":{"gitId":"saravanamani1999"},"content":"            \"   readability of timetable view on CLI.\\n\"","lastModifiedDate":"2021-10-31"},{"lineNumber":69,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-10-31"},{"lineNumber":70,"author":{"gitId":"saravanamani1999"},"content":"            \"4. Please ensure the START_TIME is earlier than the END_TIME\";","lastModifiedDate":"2021-10-31"},{"lineNumber":71,"author":{"gitId":"saravanamani1999"},"content":"    public static final int TABLE_COLUMN_WIDTH \u003d 20;","lastModifiedDate":"2021-10-22"},{"lineNumber":72,"author":{"gitId":"saravanamani1999"},"content":"    public static final int TABLE_FIRST_COLUMN_WIDTH \u003d 13;","lastModifiedDate":"2021-10-22"},{"lineNumber":73,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":74,"author":{"gitId":"saravanamani1999"},"content":"    public SubCommand() {","lastModifiedDate":"2021-10-23"},{"lineNumber":75,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":76,"author":{"gitId":"saravanamani1999"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":77,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":78,"author":{"gitId":"saravanamani1999"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":79,"author":{"gitId":"saravanamani1999"},"content":"     * Checks if a lesson is already in the timetable.","lastModifiedDate":"2021-11-05"},{"lineNumber":80,"author":{"gitId":"saravanamani1999"},"content":"     *","lastModifiedDate":"2021-11-05"},{"lineNumber":81,"author":{"gitId":"saravanamani1999"},"content":"     * @param lessonCode Module code of the lesson being checked","lastModifiedDate":"2021-11-05"},{"lineNumber":82,"author":{"gitId":"saravanamani1999"},"content":"     * @param lessonType Lesson type of the lesson being checked","lastModifiedDate":"2021-11-05"},{"lineNumber":83,"author":{"gitId":"saravanamani1999"},"content":"     * @param day Day to check for the lesson","lastModifiedDate":"2021-11-05"},{"lineNumber":84,"author":{"gitId":"saravanamani1999"},"content":"     * @param startTime Start time to check for the lesson","lastModifiedDate":"2021-11-05"},{"lineNumber":85,"author":{"gitId":"saravanamani1999"},"content":"     * @return True if the lesson is present in the timetable and flase otherwise","lastModifiedDate":"2021-11-05"},{"lineNumber":86,"author":{"gitId":"saravanamani1999"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":87,"author":{"gitId":"saravanamani1999"},"content":"    public boolean isLessonInTimetable(String lessonCode, String lessonType, String day, String startTime) {","lastModifiedDate":"2021-10-31"},{"lineNumber":88,"author":{"gitId":"saravanamani1999"},"content":"        for (Lesson storedLesson : lessonStorage) {","lastModifiedDate":"2021-10-31"},{"lineNumber":89,"author":{"gitId":"saravanamani1999"},"content":"            String storedCode \u003d storedLesson.getModuleCode();","lastModifiedDate":"2021-10-31"},{"lineNumber":90,"author":{"gitId":"saravanamani1999"},"content":"            String storedType \u003d storedLesson.getLessonType();","lastModifiedDate":"2021-10-31"},{"lineNumber":91,"author":{"gitId":"saravanamani1999"},"content":"            String storedDay \u003d storedLesson.getDay();","lastModifiedDate":"2021-10-31"},{"lineNumber":92,"author":{"gitId":"saravanamani1999"},"content":"            String storedStartTime \u003d storedLesson.getStartTime();","lastModifiedDate":"2021-10-31"},{"lineNumber":93,"author":{"gitId":"saravanamani1999"},"content":"            if (storedCode.equals(lessonCode) \u0026\u0026 storedType.equals(lessonType) \u0026\u0026 storedDay.equals(day)","lastModifiedDate":"2021-10-31"},{"lineNumber":94,"author":{"gitId":"saravanamani1999"},"content":"                    \u0026\u0026 storedStartTime.equals(startTime)) {","lastModifiedDate":"2021-10-31"},{"lineNumber":95,"author":{"gitId":"saravanamani1999"},"content":"                return true;","lastModifiedDate":"2021-10-31"},{"lineNumber":96,"author":{"gitId":"saravanamani1999"},"content":"            }","lastModifiedDate":"2021-10-31"},{"lineNumber":97,"author":{"gitId":"saravanamani1999"},"content":"        }","lastModifiedDate":"2021-10-31"},{"lineNumber":98,"author":{"gitId":"saravanamani1999"},"content":"        return false;","lastModifiedDate":"2021-10-31"},{"lineNumber":99,"author":{"gitId":"saravanamani1999"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":100,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":101,"author":{"gitId":"saravanamani1999"},"content":"}","lastModifiedDate":"2021-10-22"}],"authorContributionMap":{"saravanamani1999":101}},{"path":"src/main/java/seedu/kolinux/timetable/subcommand/UpdateSubCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"saravanamani1999"},"content":"package seedu.kolinux.timetable.subcommand;","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":3,"author":{"gitId":"saravanamani1999"},"content":"import seedu.kolinux.exceptions.KolinuxException;","lastModifiedDate":"2021-10-22"},{"lineNumber":4,"author":{"gitId":"saravanamani1999"},"content":"import seedu.kolinux.timetable.lesson.Lesson;","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"saravanamani1999"},"content":"import java.util.Objects;","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"saravanamani1999"},"content":"import static seedu.kolinux.commands.TimetableCommand.timetable;","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"saravanamani1999"},"content":"import static seedu.kolinux.timetable.Timetable.lessonStorage;","lastModifiedDate":"2021-10-22"},{"lineNumber":10,"author":{"gitId":"saravanamani1999"},"content":"import static seedu.kolinux.timetable.lesson.Lesson.getIndex;","lastModifiedDate":"2021-10-22"},{"lineNumber":11,"author":{"gitId":"saravanamani1999"},"content":"import static seedu.kolinux.timetable.lesson.Lesson.schoolHours;","lastModifiedDate":"2021-10-22"},{"lineNumber":12,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"saravanamani1999"},"content":"public class UpdateSubCommand extends SubCommand {","lastModifiedDate":"2021-10-23"},{"lineNumber":14,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"saravanamani1999"},"content":"    DeleteSubCommand deleteSubcommand \u003d new DeleteSubCommand();","lastModifiedDate":"2021-11-05"},{"lineNumber":16,"author":{"gitId":"saravanamani1999"},"content":"    AddSubCommand addSubcommand \u003d new AddSubCommand();","lastModifiedDate":"2021-11-05"},{"lineNumber":17,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":18,"author":{"gitId":"saravanamani1999"},"content":"    public UpdateSubCommand() {","lastModifiedDate":"2021-10-23"},{"lineNumber":19,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":20,"author":{"gitId":"saravanamani1999"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":21,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":22,"author":{"gitId":"saravanamani1999"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":23,"author":{"gitId":"saravanamani1999"},"content":"     * Updates the lesson to a different timing on the timetable.","lastModifiedDate":"2021-11-05"},{"lineNumber":24,"author":{"gitId":"saravanamani1999"},"content":"     *","lastModifiedDate":"2021-11-05"},{"lineNumber":25,"author":{"gitId":"saravanamani1999"},"content":"     * @param moduleCode Module code of lesson to be updated","lastModifiedDate":"2021-11-05"},{"lineNumber":26,"author":{"gitId":"saravanamani1999"},"content":"     * @param lessonType Lesson type of lesson to be updated","lastModifiedDate":"2021-11-05"},{"lineNumber":27,"author":{"gitId":"saravanamani1999"},"content":"     * @param oldDay Old day of lesson to be updated","lastModifiedDate":"2021-11-05"},{"lineNumber":28,"author":{"gitId":"saravanamani1999"},"content":"     * @param oldStartTiming Old starting time of lesson to be updated","lastModifiedDate":"2021-11-05"},{"lineNumber":29,"author":{"gitId":"saravanamani1999"},"content":"     * @param newDay New day which the lesson is getting updated to","lastModifiedDate":"2021-11-05"},{"lineNumber":30,"author":{"gitId":"saravanamani1999"},"content":"     * @param newStartTiming New starting time which the lesson is getting updated to","lastModifiedDate":"2021-11-05"},{"lineNumber":31,"author":{"gitId":"saravanamani1999"},"content":"     * @throws KolinuxException If the lesson to be updated is not found in the timetable","lastModifiedDate":"2021-11-05"},{"lineNumber":32,"author":{"gitId":"saravanamani1999"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":33,"author":{"gitId":"saravanamani1999"},"content":"    public void updateTimetable(String moduleCode, String lessonType, String oldDay,","lastModifiedDate":"2021-11-04"},{"lineNumber":34,"author":{"gitId":"saravanamani1999"},"content":"            String oldStartTiming, String newDay, String newStartTiming) throws KolinuxException {","lastModifiedDate":"2021-11-04"},{"lineNumber":35,"author":{"gitId":"saravanamani1999"},"content":"        if (!isLessonInTimetable(moduleCode, lessonType, oldDay, oldStartTiming)) {","lastModifiedDate":"2021-11-04"},{"lineNumber":36,"author":{"gitId":"saravanamani1999"},"content":"            throw new KolinuxException(MISSING_LESSON_TO_UPDATE);","lastModifiedDate":"2021-11-04"},{"lineNumber":37,"author":{"gitId":"saravanamani1999"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":38,"author":{"gitId":"saravanamani1999"},"content":"        int startIndex \u003d getIndex(newStartTiming, schoolHours);","lastModifiedDate":"2021-10-22"},{"lineNumber":39,"author":{"gitId":"saravanamani1999"},"content":"        int endIndex \u003d startIndex + getOldLessonHours(moduleCode, lessonType, oldDay, oldStartTiming);","lastModifiedDate":"2021-10-31"},{"lineNumber":40,"author":{"gitId":"saravanamani1999"},"content":"        String newEndTiming \u003d schoolHours[endIndex - 1];","lastModifiedDate":"2021-10-22"},{"lineNumber":41,"author":{"gitId":"saravanamani1999"},"content":"        checkUpdateTiming(moduleCode, lessonType, oldDay, newDay, oldStartTiming, newStartTiming, newEndTiming);","lastModifiedDate":"2021-11-01"},{"lineNumber":42,"author":{"gitId":"saravanamani1999"},"content":"        String[] parameters \u003d new String[] {moduleCode, lessonType, newDay, newStartTiming, newEndTiming};","lastModifiedDate":"2021-10-22"},{"lineNumber":43,"author":{"gitId":"saravanamani1999"},"content":"        deleteSubcommand.deleteLesson(moduleCode, lessonType, oldDay, oldStartTiming);","lastModifiedDate":"2021-11-05"},{"lineNumber":44,"author":{"gitId":"saravanamani1999"},"content":"        addSubcommand.inputLesson(parameters, true, false);","lastModifiedDate":"2021-11-05"},{"lineNumber":45,"author":{"gitId":"saravanamani1999"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":46,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":47,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":48,"author":{"gitId":"saravanamani1999"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":49,"author":{"gitId":"saravanamani1999"},"content":"     * Gets the duration of the lesson which is to be updated.","lastModifiedDate":"2021-11-05"},{"lineNumber":50,"author":{"gitId":"saravanamani1999"},"content":"     *","lastModifiedDate":"2021-11-05"},{"lineNumber":51,"author":{"gitId":"saravanamani1999"},"content":"     * @param moduleCode Module code of lesson to be updated","lastModifiedDate":"2021-11-05"},{"lineNumber":52,"author":{"gitId":"saravanamani1999"},"content":"     * @param lessonType Lesson type of lesson to be updated","lastModifiedDate":"2021-11-05"},{"lineNumber":53,"author":{"gitId":"saravanamani1999"},"content":"     * @param day Old day of lesson to be updated","lastModifiedDate":"2021-11-05"},{"lineNumber":54,"author":{"gitId":"saravanamani1999"},"content":"     * @param oldStartTiming Old starting time of lesson to be updated","lastModifiedDate":"2021-11-05"},{"lineNumber":55,"author":{"gitId":"saravanamani1999"},"content":"     * @return The duration of the lesson which is to be updated","lastModifiedDate":"2021-11-05"},{"lineNumber":56,"author":{"gitId":"saravanamani1999"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":57,"author":{"gitId":"saravanamani1999"},"content":"    private int getOldLessonHours(String moduleCode, String lessonType, String day, String oldStartTiming) {","lastModifiedDate":"2021-10-31"},{"lineNumber":58,"author":{"gitId":"saravanamani1999"},"content":"        for (Lesson lesson : lessonStorage) {","lastModifiedDate":"2021-10-22"},{"lineNumber":59,"author":{"gitId":"saravanamani1999"},"content":"            if (lesson.getModuleCode().equals(moduleCode) \u0026\u0026 lesson.getLessonType().equals(lessonType)","lastModifiedDate":"2021-10-22"},{"lineNumber":60,"author":{"gitId":"saravanamani1999"},"content":"                    \u0026\u0026 lesson.getDay().equals(day) \u0026\u0026 lesson.getStartTime().equals(oldStartTiming)) {","lastModifiedDate":"2021-10-31"},{"lineNumber":61,"author":{"gitId":"saravanamani1999"},"content":"                return lesson.getEndTimeIndex() - lesson.getStartTimeIndex();","lastModifiedDate":"2021-10-22"},{"lineNumber":62,"author":{"gitId":"saravanamani1999"},"content":"            }","lastModifiedDate":"2021-10-22"},{"lineNumber":63,"author":{"gitId":"saravanamani1999"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":64,"author":{"gitId":"saravanamani1999"},"content":"        return -1;","lastModifiedDate":"2021-10-22"},{"lineNumber":65,"author":{"gitId":"saravanamani1999"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":66,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":67,"author":{"gitId":"saravanamani1999"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":68,"author":{"gitId":"saravanamani1999"},"content":"     * Gets the old ending time of the lesson to be updated.","lastModifiedDate":"2021-11-05"},{"lineNumber":69,"author":{"gitId":"saravanamani1999"},"content":"     *","lastModifiedDate":"2021-11-05"},{"lineNumber":70,"author":{"gitId":"saravanamani1999"},"content":"     * @param moduleCode Module code of lesson to be updated","lastModifiedDate":"2021-11-05"},{"lineNumber":71,"author":{"gitId":"saravanamani1999"},"content":"     * @param lessonType Lesson type of lesson to be updated","lastModifiedDate":"2021-11-05"},{"lineNumber":72,"author":{"gitId":"saravanamani1999"},"content":"     * @param day Old day of lesson to be updated","lastModifiedDate":"2021-11-05"},{"lineNumber":73,"author":{"gitId":"saravanamani1999"},"content":"     * @param startTime Old starting time of lesson to be updated","lastModifiedDate":"2021-11-05"},{"lineNumber":74,"author":{"gitId":"saravanamani1999"},"content":"     * @return The old ending time of the lesson to be updated","lastModifiedDate":"2021-11-05"},{"lineNumber":75,"author":{"gitId":"saravanamani1999"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":76,"author":{"gitId":"saravanamani1999"},"content":"    private String getOldEndTiming(String moduleCode, String lessonType, String day, String startTime) {","lastModifiedDate":"2021-10-31"},{"lineNumber":77,"author":{"gitId":"saravanamani1999"},"content":"        String oldEndTime \u003d null;","lastModifiedDate":"2021-10-31"},{"lineNumber":78,"author":{"gitId":"saravanamani1999"},"content":"        for (Lesson lesson : lessonStorage) {","lastModifiedDate":"2021-10-22"},{"lineNumber":79,"author":{"gitId":"saravanamani1999"},"content":"            if (lesson.getModuleCode().equals(moduleCode) \u0026\u0026 lesson.getLessonType().equals(lessonType)","lastModifiedDate":"2021-10-22"},{"lineNumber":80,"author":{"gitId":"saravanamani1999"},"content":"                    \u0026\u0026 lesson.getDay().equals(day) \u0026\u0026 lesson.getStartTime().equals(startTime)) {","lastModifiedDate":"2021-10-31"},{"lineNumber":81,"author":{"gitId":"saravanamani1999"},"content":"                oldEndTime \u003d lesson.getEndTime();","lastModifiedDate":"2021-10-31"},{"lineNumber":82,"author":{"gitId":"saravanamani1999"},"content":"            }","lastModifiedDate":"2021-10-22"},{"lineNumber":83,"author":{"gitId":"saravanamani1999"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":84,"author":{"gitId":"saravanamani1999"},"content":"        return oldEndTime;","lastModifiedDate":"2021-10-31"},{"lineNumber":85,"author":{"gitId":"saravanamani1999"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":86,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":87,"author":{"gitId":"saravanamani1999"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":88,"author":{"gitId":"saravanamani1999"},"content":"     * Checks if the lesson is getting updated to the same timing.","lastModifiedDate":"2021-11-05"},{"lineNumber":89,"author":{"gitId":"saravanamani1999"},"content":"     *","lastModifiedDate":"2021-11-05"},{"lineNumber":90,"author":{"gitId":"saravanamani1999"},"content":"     * @param moduleCode Module code of lesson to be updated","lastModifiedDate":"2021-11-05"},{"lineNumber":91,"author":{"gitId":"saravanamani1999"},"content":"     * @param lessonType Lesson type of lesson to be updated","lastModifiedDate":"2021-11-05"},{"lineNumber":92,"author":{"gitId":"saravanamani1999"},"content":"     * @param oldDay Old day of lesson to be updated","lastModifiedDate":"2021-11-05"},{"lineNumber":93,"author":{"gitId":"saravanamani1999"},"content":"     * @param newDay New day which the lesson is getting updated to","lastModifiedDate":"2021-11-05"},{"lineNumber":94,"author":{"gitId":"saravanamani1999"},"content":"     * @param oldStartTiming Old starting time of lesson to be updated","lastModifiedDate":"2021-11-05"},{"lineNumber":95,"author":{"gitId":"saravanamani1999"},"content":"     * @param newStartTiming New starting time which the lesson is getting updated to","lastModifiedDate":"2021-11-05"},{"lineNumber":96,"author":{"gitId":"saravanamani1999"},"content":"     * @param newEndTiming New ending time which the lesson is getting updated to","lastModifiedDate":"2021-11-05"},{"lineNumber":97,"author":{"gitId":"saravanamani1999"},"content":"     * @throws KolinuxException If the lesson is getting updated to the same timing","lastModifiedDate":"2021-11-05"},{"lineNumber":98,"author":{"gitId":"saravanamani1999"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":99,"author":{"gitId":"saravanamani1999"},"content":"    private void checkUpdateTiming(String moduleCode, String lessonType, String oldDay, String newDay,","lastModifiedDate":"2021-11-01"},{"lineNumber":100,"author":{"gitId":"saravanamani1999"},"content":"            String oldStartTiming, String newStartTiming, String newEndTiming) throws KolinuxException {","lastModifiedDate":"2021-11-01"},{"lineNumber":101,"author":{"gitId":"saravanamani1999"},"content":"        String oldEndTiming \u003d getOldEndTiming(moduleCode, lessonType, oldDay, oldStartTiming);","lastModifiedDate":"2021-11-01"},{"lineNumber":102,"author":{"gitId":"saravanamani1999"},"content":"        if (Objects.equals(oldDay, newDay) \u0026\u0026 Objects.equals(oldStartTiming, newStartTiming)","lastModifiedDate":"2021-11-01"},{"lineNumber":103,"author":{"gitId":"saravanamani1999"},"content":"                \u0026\u0026 Objects.equals(oldEndTiming, newEndTiming)) {","lastModifiedDate":"2021-11-01"},{"lineNumber":104,"author":{"gitId":"saravanamani1999"},"content":"            throw new KolinuxException(UPDATING_TO_SAME_TIMING);","lastModifiedDate":"2021-11-01"},{"lineNumber":105,"author":{"gitId":"saravanamani1999"},"content":"        }","lastModifiedDate":"2021-11-01"},{"lineNumber":106,"author":{"gitId":"saravanamani1999"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":107,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":108,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":109,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":110,"author":{"gitId":"saravanamani1999"},"content":"}","lastModifiedDate":"2021-10-22"}],"authorContributionMap":{"saravanamani1999":110}},{"path":"src/main/java/seedu/kolinux/timetable/subcommand/ViewSubCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"saravanamani1999"},"content":"package seedu.kolinux.timetable.subcommand;","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":3,"author":{"gitId":"saravanamani1999"},"content":"import static seedu.kolinux.timetable.Timetable.timetableData;","lastModifiedDate":"2021-10-22"},{"lineNumber":4,"author":{"gitId":"saravanamani1999"},"content":"import static seedu.kolinux.timetable.lesson.Lesson.schoolHours;","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"saravanamani1999"},"content":"public class ViewSubCommand extends SubCommand {","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"saravanamani1999"},"content":"    public ViewSubCommand() {","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":10,"author":{"gitId":"saravanamani1999"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":11,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":12,"author":{"gitId":"saravanamani1999"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"saravanamani1999"},"content":"     * Prints the timetable to the CLI.","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"saravanamani1999"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"saravanamani1999"},"content":"    public void viewTimetable() {","lastModifiedDate":"2021-10-22"},{"lineNumber":16,"author":{"gitId":"saravanamani1999"},"content":"        System.out.println(TIMETABLE_HEADER);","lastModifiedDate":"2021-10-22"},{"lineNumber":17,"author":{"gitId":"saravanamani1999"},"content":"        for (int i \u003d 1; i \u003c ROW_SIZE; i++) {","lastModifiedDate":"2021-11-01"},{"lineNumber":18,"author":{"gitId":"saravanamani1999"},"content":"            String time \u003d schoolHours[i - 1] + \" - \" + schoolHours[i];","lastModifiedDate":"2021-10-22"},{"lineNumber":19,"author":{"gitId":"saravanamani1999"},"content":"            System.out.print(\"|\" + time + getSpaces((TABLE_FIRST_COLUMN_WIDTH - time.length())) + \"|\");","lastModifiedDate":"2021-10-22"},{"lineNumber":20,"author":{"gitId":"saravanamani1999"},"content":"            for (int j \u003d 1; j \u003c COLUMN_LAST_INDEX; j++) {","lastModifiedDate":"2021-10-22"},{"lineNumber":21,"author":{"gitId":"saravanamani1999"},"content":"                System.out.print(toPrint(timetableData[i][j]));","lastModifiedDate":"2021-10-22"},{"lineNumber":22,"author":{"gitId":"saravanamani1999"},"content":"            }","lastModifiedDate":"2021-10-22"},{"lineNumber":23,"author":{"gitId":"saravanamani1999"},"content":"            System.out.println(toPrint(timetableData[i][COLUMN_LAST_INDEX]));","lastModifiedDate":"2021-10-22"},{"lineNumber":24,"author":{"gitId":"saravanamani1999"},"content":"            System.out.println(TIMETABLE_ROW_DIVIDER);","lastModifiedDate":"2021-10-22"},{"lineNumber":25,"author":{"gitId":"saravanamani1999"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":26,"author":{"gitId":"saravanamani1999"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":27,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":28,"author":{"gitId":"saravanamani1999"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":29,"author":{"gitId":"saravanamani1999"},"content":"     * Formats the string of the lesson which is to be printed in each box of the","lastModifiedDate":"2021-10-22"},{"lineNumber":30,"author":{"gitId":"saravanamani1999"},"content":"     * timetable by adding spaces to the front and back of the lesson entry.","lastModifiedDate":"2021-10-22"},{"lineNumber":31,"author":{"gitId":"saravanamani1999"},"content":"     *","lastModifiedDate":"2021-10-22"},{"lineNumber":32,"author":{"gitId":"saravanamani1999"},"content":"     * @param data The lesson information found in the timetableData","lastModifiedDate":"2021-10-22"},{"lineNumber":33,"author":{"gitId":"saravanamani1999"},"content":"     * @return The formatted string to be printed in each entry of the timetable","lastModifiedDate":"2021-10-22"},{"lineNumber":34,"author":{"gitId":"saravanamani1999"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":35,"author":{"gitId":"saravanamani1999"},"content":"    private String toPrint(String data) {","lastModifiedDate":"2021-10-22"},{"lineNumber":36,"author":{"gitId":"saravanamani1999"},"content":"        if (data !\u003d null) {","lastModifiedDate":"2021-10-22"},{"lineNumber":37,"author":{"gitId":"saravanamani1999"},"content":"            int spacesFront \u003d (TABLE_COLUMN_WIDTH - data.length()) / 2;","lastModifiedDate":"2021-10-22"},{"lineNumber":38,"author":{"gitId":"saravanamani1999"},"content":"            int spacesBack \u003d (TABLE_COLUMN_WIDTH - data.length()) / 2 + checkOddOrEven(data);","lastModifiedDate":"2021-10-22"},{"lineNumber":39,"author":{"gitId":"saravanamani1999"},"content":"            return getSpaces(spacesFront) + data + getSpaces(spacesBack) + \"|\";","lastModifiedDate":"2021-10-22"},{"lineNumber":40,"author":{"gitId":"saravanamani1999"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":41,"author":{"gitId":"saravanamani1999"},"content":"        return getSpaces(TABLE_COLUMN_WIDTH) + \"|\";","lastModifiedDate":"2021-10-22"},{"lineNumber":42,"author":{"gitId":"saravanamani1999"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":43,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":44,"author":{"gitId":"saravanamani1999"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":45,"author":{"gitId":"saravanamani1999"},"content":"     * Adds spaces to format the timetable properly.","lastModifiedDate":"2021-10-22"},{"lineNumber":46,"author":{"gitId":"saravanamani1999"},"content":"     *","lastModifiedDate":"2021-10-22"},{"lineNumber":47,"author":{"gitId":"saravanamani1999"},"content":"     * @param numberOfSpaces The number of spaces to be added in each entry of the timetable","lastModifiedDate":"2021-10-22"},{"lineNumber":48,"author":{"gitId":"saravanamani1999"},"content":"     * @return The string with the spaces to be added to each entry of the timetable","lastModifiedDate":"2021-10-22"},{"lineNumber":49,"author":{"gitId":"saravanamani1999"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":50,"author":{"gitId":"saravanamani1999"},"content":"    private String getSpaces(int numberOfSpaces) {","lastModifiedDate":"2021-10-22"},{"lineNumber":51,"author":{"gitId":"saravanamani1999"},"content":"        return String.format(\"%1$\" + numberOfSpaces + \"s\", \"\");","lastModifiedDate":"2021-10-22"},{"lineNumber":52,"author":{"gitId":"saravanamani1999"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":53,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":54,"author":{"gitId":"saravanamani1999"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":55,"author":{"gitId":"saravanamani1999"},"content":"     * Checks if the length of the description for the timetable entry is even or odd,","lastModifiedDate":"2021-10-22"},{"lineNumber":56,"author":{"gitId":"saravanamani1999"},"content":"     * this is done in order to ensure the description is in the middle each box in the timetable.","lastModifiedDate":"2021-10-22"},{"lineNumber":57,"author":{"gitId":"saravanamani1999"},"content":"     * Ensures the format of the timetable is neat.","lastModifiedDate":"2021-10-22"},{"lineNumber":58,"author":{"gitId":"saravanamani1999"},"content":"     *","lastModifiedDate":"2021-10-22"},{"lineNumber":59,"author":{"gitId":"saravanamani1999"},"content":"     * @param lesson The description of the lesson","lastModifiedDate":"2021-10-22"},{"lineNumber":60,"author":{"gitId":"saravanamani1999"},"content":"     * @return The number of extra spaces to be added to the string to ensure proper formatting","lastModifiedDate":"2021-10-22"},{"lineNumber":61,"author":{"gitId":"saravanamani1999"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":62,"author":{"gitId":"saravanamani1999"},"content":"    private int checkOddOrEven(String lesson) {","lastModifiedDate":"2021-10-22"},{"lineNumber":63,"author":{"gitId":"saravanamani1999"},"content":"        if (lesson.length() % 2 \u003d\u003d 0) {","lastModifiedDate":"2021-10-22"},{"lineNumber":64,"author":{"gitId":"saravanamani1999"},"content":"            return 0;","lastModifiedDate":"2021-10-22"},{"lineNumber":65,"author":{"gitId":"saravanamani1999"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":66,"author":{"gitId":"saravanamani1999"},"content":"        return 1;","lastModifiedDate":"2021-10-22"},{"lineNumber":67,"author":{"gitId":"saravanamani1999"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":68,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":69,"author":{"gitId":"saravanamani1999"},"content":"}","lastModifiedDate":"2021-10-22"}],"authorContributionMap":{"saravanamani1999":69}},{"path":"src/main/java/seedu/kolinux/util/DirectoryCreator.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"powzx"},"content":"package seedu.kolinux.util;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"powzx"},"content":"import java.io.File;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"powzx"},"content":"/** Represents the information needed to ensure Kolinux is initialized with a /data directory. */","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"powzx"},"content":"public class DirectoryCreator {","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"powzx"},"content":"    private static final String DIR_PATH \u003d \"./data\";","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"powzx"},"content":"    private static File directory \u003d new File(DIR_PATH);","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"powzx"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"powzx"},"content":"     * Creates a directory /data if it does not exist.","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"powzx"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"powzx"},"content":"    public void initDirectory() {","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"powzx"},"content":"        directory.mkdir();","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"powzx"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"powzx"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"powzx":17}},{"path":"src/main/java/seedu/kolinux/util/KolinuxLogger.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"powzx"},"content":"package seedu.kolinux.util;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"powzx"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"powzx"},"content":"import java.util.logging.ConsoleHandler;","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"powzx"},"content":"import java.util.logging.FileHandler;","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"powzx"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"powzx"},"content":"import java.util.logging.LogManager;","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"powzx"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"powzx"},"content":"import java.util.logging.SimpleFormatter;","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"powzx"},"content":"/** Represents the logger for this application to log user activity. */","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"powzx"},"content":"public class KolinuxLogger {","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"powzx"},"content":"    private static Logger logger \u003d Logger.getLogger(Logger.GLOBAL_LOGGER_NAME);","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"powzx"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"powzx"},"content":"     * Initializes the global logger for Kolinux by starting the ConsoleHandler and FileHandler.","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"powzx"},"content":"     * The ConsoleHandler only logs messages that are at the SEVERE level while the FileHandler","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"powzx"},"content":"     * logs messages at ALL levels to logger.log. Any class can log relevant messages if it","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"powzx"},"content":"     * has a logger attribute with the global name.","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"powzx"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"powzx"},"content":"    public void initLogger() {","lastModifiedDate":"2021-10-14"},{"lineNumber":23,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"powzx"},"content":"        LogManager.getLogManager().reset();","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"powzx"},"content":"        logger.setLevel(Level.INFO);","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"powzx"},"content":"        ConsoleHandler consoleHandler \u003d new ConsoleHandler();","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"powzx"},"content":"        consoleHandler.setLevel(Level.SEVERE);","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"powzx"},"content":"        logger.addHandler(consoleHandler);","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":31,"author":{"gitId":"powzx"},"content":"        try {","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"powzx"},"content":"            FileHandler fileHandler \u003d new FileHandler(\"./data/logger.log\");","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"powzx"},"content":"            fileHandler.setFormatter(new SimpleFormatter());","lastModifiedDate":"2021-10-10"},{"lineNumber":34,"author":{"gitId":"powzx"},"content":"            fileHandler.setLevel(Level.ALL);","lastModifiedDate":"2021-10-10"},{"lineNumber":35,"author":{"gitId":"powzx"},"content":"            logger.addHandler(fileHandler);","lastModifiedDate":"2021-10-10"},{"lineNumber":36,"author":{"gitId":"powzx"},"content":"        } catch (IOException exception) {","lastModifiedDate":"2021-10-10"},{"lineNumber":37,"author":{"gitId":"powzx"},"content":"            logger.log(Level.SEVERE, \"File logger encountered errors.\", exception);","lastModifiedDate":"2021-10-10"},{"lineNumber":38,"author":{"gitId":"powzx"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":39,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":40,"author":{"gitId":"powzx"},"content":"        logger.log(Level.INFO, \"User started Kolinux\");","lastModifiedDate":"2021-10-10"},{"lineNumber":41,"author":{"gitId":"powzx"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":42,"author":{"gitId":"powzx"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"powzx":42}},{"path":"src/main/java/seedu/kolinux/util/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"powzx"},"content":"package seedu.kolinux.util;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"powzx"},"content":"import seedu.kolinux.commands.Command;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"powzx"},"content":"import seedu.kolinux.commands.HelpCommand;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"giterator"},"content":"import seedu.kolinux.commands.CalculateCapCommand;","lastModifiedDate":"2021-10-14"},{"lineNumber":6,"author":{"gitId":"powzx"},"content":"import seedu.kolinux.commands.BusRouteCommand;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"giterator"},"content":"import seedu.kolinux.commands.ModuleCommand;","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"giterator"},"content":"import seedu.kolinux.commands.InvalidCommand;","lastModifiedDate":"2021-10-14"},{"lineNumber":9,"author":{"gitId":"giterator"},"content":"import seedu.kolinux.commands.PlannerCommand;","lastModifiedDate":"2021-10-14"},{"lineNumber":10,"author":{"gitId":"powzx"},"content":"import seedu.kolinux.commands.TimetableCommand;","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"giterator"},"content":"import seedu.kolinux.commands.ExitCommand;","lastModifiedDate":"2021-10-14"},{"lineNumber":12,"author":{"gitId":"powzx"},"content":"import seedu.kolinux.exceptions.KolinuxException;","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":14,"author":{"gitId":"shyamgj1900"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"powzx"},"content":"import java.text.ParseException;","lastModifiedDate":"2021-10-17"},{"lineNumber":16,"author":{"gitId":"powzx"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2021-10-17"},{"lineNumber":17,"author":{"gitId":"powzx"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-11-05"},{"lineNumber":18,"author":{"gitId":"powzx"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-11-05"},{"lineNumber":19,"author":{"gitId":"powzx"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-11-05"},{"lineNumber":20,"author":{"gitId":"powzx"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-16"},{"lineNumber":21,"author":{"gitId":"powzx"},"content":"import java.util.Calendar;","lastModifiedDate":"2021-10-17"},{"lineNumber":22,"author":{"gitId":"powzx"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2021-11-05"},{"lineNumber":23,"author":{"gitId":"powzx"},"content":"import java.util.regex.PatternSyntaxException;","lastModifiedDate":"2021-10-31"},{"lineNumber":24,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":25,"author":{"gitId":"giterator"},"content":"/**","lastModifiedDate":"2021-10-14"},{"lineNumber":26,"author":{"gitId":"giterator"},"content":" * Represents the operations to parse information needed for the execution of a command.","lastModifiedDate":"2021-10-14"},{"lineNumber":27,"author":{"gitId":"giterator"},"content":" */","lastModifiedDate":"2021-10-14"},{"lineNumber":28,"author":{"gitId":"powzx"},"content":"public class Parser {","lastModifiedDate":"2021-10-04"},{"lineNumber":29,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":30,"author":{"gitId":"powzx"},"content":"    private static final String COMMAND_HELP \u003d \"help\";","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"powzx"},"content":"    private static final String COMMAND_CAP \u003d \"cap\";","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"powzx"},"content":"    private static final String COMMAND_BUS \u003d \"bus\";","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"giterator"},"content":"    private static final String COMMAND_MODULE \u003d \"module\";","lastModifiedDate":"2021-10-18"},{"lineNumber":34,"author":{"gitId":"powzx"},"content":"    private static final String COMMAND_PLANNER \u003d \"planner\";","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"powzx"},"content":"    private static final String COMMAND_EXIT \u003d \"bye\";","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"powzx"},"content":"    private static final String COMMAND_TIMETABLE \u003d \"timetable\";","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":38,"author":{"gitId":"powzx"},"content":"    private static final String EMPTY_STRING \u003d \"\";","lastModifiedDate":"2021-10-16"},{"lineNumber":39,"author":{"gitId":"powzx"},"content":"    private static final String ILLEGAL_CHAR \u003d \"|\"; // Use of pipe may corrupt the storage files","lastModifiedDate":"2021-11-01"},{"lineNumber":40,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":41,"author":{"gitId":"powzx"},"content":"    private static final String ILLEGAL_CHAR_MESSAGE \u003d \"Please avoid using \u0027|\u0027 in your input, please try again.\";","lastModifiedDate":"2021-10-26"},{"lineNumber":42,"author":{"gitId":"powzx"},"content":"    private static final String FATAL_ERROR \u003d \"Fatal error occurred, please restart Kolinux.\";","lastModifiedDate":"2021-11-05"},{"lineNumber":43,"author":{"gitId":"powzx"},"content":"    private static final String DATE_PATTERN \u003d \"\\\\d\\\\d\\\\d\\\\d-\\\\d\\\\d-\\\\d\\\\d\";","lastModifiedDate":"2021-11-05"},{"lineNumber":44,"author":{"gitId":"powzx"},"content":"    private static final String DATE_FORMAT_ERROR \u003d \"Please provide a valid date format. Format: yyyy-mm-dd\";","lastModifiedDate":"2021-11-05"},{"lineNumber":45,"author":{"gitId":"powzx"},"content":"    private static final String DATE_VALIDITY_ERROR \u003d \"This date does not exist. Please try again.\";","lastModifiedDate":"2021-11-05"},{"lineNumber":46,"author":{"gitId":"powzx"},"content":"    private static final String TIME_PATTERN \u003d \"\\\\d\\\\d\\\\d\\\\d\";","lastModifiedDate":"2021-11-05"},{"lineNumber":47,"author":{"gitId":"powzx"},"content":"    private static final String TIME_FORMAT_ERROR \u003d \"Please provide a valid time format. Format: hhMM\";","lastModifiedDate":"2021-11-05"},{"lineNumber":48,"author":{"gitId":"powzx"},"content":"    private static final String TIME_VALIDITY_ERROR \u003d \"This time is not valid. Please try again.\";","lastModifiedDate":"2021-11-05"},{"lineNumber":49,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"powzx"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":51,"author":{"gitId":"powzx"},"content":"     * Removes leading and trailing white spaces from all the elements in a String array.","lastModifiedDate":"2021-10-10"},{"lineNumber":52,"author":{"gitId":"powzx"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":53,"author":{"gitId":"powzx"},"content":"     * @param strings Array of strings","lastModifiedDate":"2021-10-10"},{"lineNumber":54,"author":{"gitId":"powzx"},"content":"     * @return Array of strings with all elements trimmed","lastModifiedDate":"2021-10-10"},{"lineNumber":55,"author":{"gitId":"powzx"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":56,"author":{"gitId":"powzx"},"content":"    private static String[] trimAllElementsOfArray(String[] strings) {","lastModifiedDate":"2021-10-08"},{"lineNumber":57,"author":{"gitId":"powzx"},"content":"        String[] trimmedStrings \u003d new String[strings.length];","lastModifiedDate":"2021-10-08"},{"lineNumber":58,"author":{"gitId":"powzx"},"content":"        for (int i \u003d 0; i \u003c strings.length; i++) {","lastModifiedDate":"2021-10-08"},{"lineNumber":59,"author":{"gitId":"powzx"},"content":"            trimmedStrings[i] \u003d strings[i].trim();","lastModifiedDate":"2021-10-08"},{"lineNumber":60,"author":{"gitId":"powzx"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":61,"author":{"gitId":"powzx"},"content":"        return trimmedStrings;","lastModifiedDate":"2021-10-08"},{"lineNumber":62,"author":{"gitId":"powzx"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":63,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":64,"author":{"gitId":"powzx"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":65,"author":{"gitId":"powzx"},"content":"     * Gets the command word from the user input, and calls the respective Command subsequently for","lastModifiedDate":"2021-10-10"},{"lineNumber":66,"author":{"gitId":"powzx"},"content":"     * execution.","lastModifiedDate":"2021-10-10"},{"lineNumber":67,"author":{"gitId":"powzx"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":68,"author":{"gitId":"powzx"},"content":"     * @param input User input","lastModifiedDate":"2021-10-10"},{"lineNumber":69,"author":{"gitId":"powzx"},"content":"     * @return Command","lastModifiedDate":"2021-10-10"},{"lineNumber":70,"author":{"gitId":"powzx"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":71,"author":{"gitId":"shyamgj1900"},"content":"    public static Command parseCommand(String input) throws KolinuxException, IOException {","lastModifiedDate":"2021-10-20"},{"lineNumber":72,"author":{"gitId":"powzx"},"content":"        if (input.contains(ILLEGAL_CHAR)) {","lastModifiedDate":"2021-10-26"},{"lineNumber":73,"author":{"gitId":"powzx"},"content":"            throw new KolinuxException(ILLEGAL_CHAR_MESSAGE);","lastModifiedDate":"2021-10-26"},{"lineNumber":74,"author":{"gitId":"powzx"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":75,"author":{"gitId":"powzx"},"content":"        try {","lastModifiedDate":"2021-10-31"},{"lineNumber":76,"author":{"gitId":"powzx"},"content":"            String trimmedInput \u003d input.trim();","lastModifiedDate":"2021-10-04"},{"lineNumber":77,"author":{"gitId":"powzx"},"content":"            String commandWord \u003d trimmedInput.split(\" \", 2)[0];","lastModifiedDate":"2021-10-05"},{"lineNumber":78,"author":{"gitId":"powzx"},"content":"            String argument \u003d trimmedInput.replaceFirst(commandWord, \"\").trim();","lastModifiedDate":"2021-10-04"},{"lineNumber":79,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":80,"author":{"gitId":"powzx"},"content":"            switch (commandWord.toLowerCase()) {","lastModifiedDate":"2021-10-04"},{"lineNumber":81,"author":{"gitId":"powzx"},"content":"            case COMMAND_HELP:","lastModifiedDate":"2021-10-12"},{"lineNumber":82,"author":{"gitId":"shyamgj1900"},"content":"                return new HelpCommand();","lastModifiedDate":"2021-10-04"},{"lineNumber":83,"author":{"gitId":"powzx"},"content":"            case COMMAND_CAP:","lastModifiedDate":"2021-10-12"},{"lineNumber":84,"author":{"gitId":"nonrnp"},"content":"                return parseCapCommand(argument);","lastModifiedDate":"2021-10-31"},{"lineNumber":85,"author":{"gitId":"powzx"},"content":"            case COMMAND_BUS:","lastModifiedDate":"2021-10-12"},{"lineNumber":86,"author":{"gitId":"shyamgj1900"},"content":"                return new BusRouteCommand(input);","lastModifiedDate":"2021-10-11"},{"lineNumber":87,"author":{"gitId":"giterator"},"content":"            case COMMAND_MODULE:","lastModifiedDate":"2021-10-18"},{"lineNumber":88,"author":{"gitId":"giterator"},"content":"                return parseSubCommand(argument, COMMAND_MODULE);","lastModifiedDate":"2021-10-18"},{"lineNumber":89,"author":{"gitId":"powzx"},"content":"            case COMMAND_PLANNER:","lastModifiedDate":"2021-10-12"},{"lineNumber":90,"author":{"gitId":"powzx"},"content":"                return parseSubCommand(argument, COMMAND_PLANNER);","lastModifiedDate":"2021-10-12"},{"lineNumber":91,"author":{"gitId":"powzx"},"content":"            case COMMAND_EXIT:","lastModifiedDate":"2021-10-12"},{"lineNumber":92,"author":{"gitId":"powzx"},"content":"                return new ExitCommand();","lastModifiedDate":"2021-10-04"},{"lineNumber":93,"author":{"gitId":"powzx"},"content":"            case COMMAND_TIMETABLE:","lastModifiedDate":"2021-10-12"},{"lineNumber":94,"author":{"gitId":"powzx"},"content":"                return parseSubCommand(argument, COMMAND_TIMETABLE);","lastModifiedDate":"2021-10-12"},{"lineNumber":95,"author":{"gitId":"powzx"},"content":"            default:","lastModifiedDate":"2021-10-04"},{"lineNumber":96,"author":{"gitId":"powzx"},"content":"                return new InvalidCommand();","lastModifiedDate":"2021-10-04"},{"lineNumber":97,"author":{"gitId":"powzx"},"content":"            }","lastModifiedDate":"2021-10-04"},{"lineNumber":98,"author":{"gitId":"powzx"},"content":"        } catch (PatternSyntaxException exception) {","lastModifiedDate":"2021-10-31"},{"lineNumber":99,"author":{"gitId":"powzx"},"content":"            return new InvalidCommand();","lastModifiedDate":"2021-10-31"},{"lineNumber":100,"author":{"gitId":"powzx"},"content":"        }","lastModifiedDate":"2021-10-31"},{"lineNumber":101,"author":{"gitId":"powzx"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":102,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":103,"author":{"gitId":"powzx"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":104,"author":{"gitId":"saravanamani1999"},"content":"     * Processes the arguments by separating the first word (sub-command) from the input.","lastModifiedDate":"2021-10-11"},{"lineNumber":105,"author":{"gitId":"saravanamani1999"},"content":"     * The rest of the input is separated into a String array using the \"/\" delimiter.","lastModifiedDate":"2021-10-11"},{"lineNumber":106,"author":{"gitId":"powzx"},"content":"     * This method should only be called if the commandWord is \"timetable\", \"planner\", or \"module\".","lastModifiedDate":"2021-11-03"},{"lineNumber":107,"author":{"gitId":"powzx"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":108,"author":{"gitId":"powzx"},"content":"     * @param subInput    User input without the command word","lastModifiedDate":"2021-10-10"},{"lineNumber":109,"author":{"gitId":"saravanamani1999"},"content":"     * @param commandWord User commandWord","lastModifiedDate":"2021-10-11"},{"lineNumber":110,"author":{"gitId":"saravanamani1999"},"content":"     * @return Command class according to commandWord","lastModifiedDate":"2021-10-11"},{"lineNumber":111,"author":{"gitId":"powzx"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":112,"author":{"gitId":"saravanamani1999"},"content":"    public static Command parseSubCommand(String subInput, String commandWord) throws KolinuxException {","lastModifiedDate":"2021-10-11"},{"lineNumber":113,"author":{"gitId":"powzx"},"content":"        String subCommand \u003d subInput.split(\" \", 2)[0];","lastModifiedDate":"2021-10-05"},{"lineNumber":114,"author":{"gitId":"powzx"},"content":"        String argument \u003d subInput.replaceFirst(subCommand, \"\").trim();","lastModifiedDate":"2021-10-05"},{"lineNumber":115,"author":{"gitId":"powzx"},"content":"        String[] parsedArguments \u003d trimAllElementsOfArray(argument.split(\"/\"));","lastModifiedDate":"2021-10-08"},{"lineNumber":116,"author":{"gitId":"saravanamani1999"},"content":"        switch (commandWord) {","lastModifiedDate":"2021-10-11"},{"lineNumber":117,"author":{"gitId":"powzx"},"content":"        case COMMAND_PLANNER:","lastModifiedDate":"2021-10-12"},{"lineNumber":118,"author":{"gitId":"powzx"},"content":"            return new PlannerCommand(subCommand, parsedArguments);","lastModifiedDate":"2021-10-05"},{"lineNumber":119,"author":{"gitId":"powzx"},"content":"        case COMMAND_TIMETABLE:","lastModifiedDate":"2021-10-12"},{"lineNumber":120,"author":{"gitId":"saravanamani1999"},"content":"            return new TimetableCommand(subCommand, parsedArguments);","lastModifiedDate":"2021-10-11"},{"lineNumber":121,"author":{"gitId":"giterator"},"content":"        case COMMAND_MODULE:","lastModifiedDate":"2021-10-18"},{"lineNumber":122,"author":{"gitId":"giterator"},"content":"            return new ModuleCommand(subCommand, parsedArguments);","lastModifiedDate":"2021-10-18"},{"lineNumber":123,"author":{"gitId":"saravanamani1999"},"content":"        default:","lastModifiedDate":"2021-10-11"},{"lineNumber":124,"author":{"gitId":"powzx"},"content":"            throw new KolinuxException(\"Internal error occurred, please try again.\");","lastModifiedDate":"2021-10-12"},{"lineNumber":125,"author":{"gitId":"saravanamani1999"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":126,"author":{"gitId":"powzx"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":127,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":128,"author":{"gitId":"nonrnp"},"content":"    /**","lastModifiedDate":"2021-10-31"},{"lineNumber":129,"author":{"gitId":"nonrnp"},"content":"     * Processes the arguments by separating the first word (sub-command) from the input.","lastModifiedDate":"2021-10-31"},{"lineNumber":130,"author":{"gitId":"nonrnp"},"content":"     * The rest of the input is separated into a String array using the \" \" delimiter.","lastModifiedDate":"2021-10-31"},{"lineNumber":131,"author":{"gitId":"nonrnp"},"content":"     * This method is called only when the \"calculate cap\" command is called.","lastModifiedDate":"2021-10-31"},{"lineNumber":132,"author":{"gitId":"nonrnp"},"content":"     * ","lastModifiedDate":"2021-10-31"},{"lineNumber":133,"author":{"gitId":"nonrnp"},"content":"     * @param subInput User input without the command word.","lastModifiedDate":"2021-10-31"},{"lineNumber":134,"author":{"gitId":"nonrnp"},"content":"     * @return The \"calculate cap\" command.","lastModifiedDate":"2021-10-31"},{"lineNumber":135,"author":{"gitId":"nonrnp"},"content":"     * @throws KolinuxException If the user\u0027s input contains invalid module descriptions.","lastModifiedDate":"2021-10-31"},{"lineNumber":136,"author":{"gitId":"nonrnp"},"content":"     */","lastModifiedDate":"2021-10-31"},{"lineNumber":137,"author":{"gitId":"nonrnp"},"content":"    public static Command parseCapCommand(String subInput) throws KolinuxException {","lastModifiedDate":"2021-10-31"},{"lineNumber":138,"author":{"gitId":"nonrnp"},"content":"        String subCommand \u003d subInput.split(\" \", 2)[0];","lastModifiedDate":"2021-10-31"},{"lineNumber":139,"author":{"gitId":"nonrnp"},"content":"        String argument \u003d subInput.replaceFirst(subCommand, \"\").trim();","lastModifiedDate":"2021-10-31"},{"lineNumber":140,"author":{"gitId":"nonrnp"},"content":"        String[] parsedArguments \u003d argument.split(\" \");","lastModifiedDate":"2021-10-31"},{"lineNumber":141,"author":{"gitId":"nonrnp"},"content":"        return new CalculateCapCommand(subCommand, parsedArguments);","lastModifiedDate":"2021-10-31"},{"lineNumber":142,"author":{"gitId":"nonrnp"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":143,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":144,"author":{"gitId":"powzx"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":145,"author":{"gitId":"powzx"},"content":"     * Concatenates an array list of strings into a single string, starting with a newline and with newlines","lastModifiedDate":"2021-10-16"},{"lineNumber":146,"author":{"gitId":"powzx"},"content":"     * separating consecutive entries.","lastModifiedDate":"2021-10-16"},{"lineNumber":147,"author":{"gitId":"powzx"},"content":"     *","lastModifiedDate":"2021-10-16"},{"lineNumber":148,"author":{"gitId":"powzx"},"content":"     * @param strings List of strings to be concatenated","lastModifiedDate":"2021-10-16"},{"lineNumber":149,"author":{"gitId":"powzx"},"content":"     * @return Concatenated string of the list of strings","lastModifiedDate":"2021-10-16"},{"lineNumber":150,"author":{"gitId":"powzx"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":151,"author":{"gitId":"powzx"},"content":"    public static String concatenateStrings(ArrayList\u003cString\u003e strings) {","lastModifiedDate":"2021-10-16"},{"lineNumber":152,"author":{"gitId":"powzx"},"content":"        String concatenatedString \u003d EMPTY_STRING;","lastModifiedDate":"2021-10-16"},{"lineNumber":153,"author":{"gitId":"powzx"},"content":"        for (String string : strings) {","lastModifiedDate":"2021-10-16"},{"lineNumber":154,"author":{"gitId":"powzx"},"content":"            concatenatedString \u003d concatenatedString.concat(\"\\n\" + string);","lastModifiedDate":"2021-10-16"},{"lineNumber":155,"author":{"gitId":"powzx"},"content":"        }","lastModifiedDate":"2021-10-16"},{"lineNumber":156,"author":{"gitId":"powzx"},"content":"        return concatenatedString;","lastModifiedDate":"2021-10-16"},{"lineNumber":157,"author":{"gitId":"powzx"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":158,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":159,"author":{"gitId":"powzx"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":160,"author":{"gitId":"powzx"},"content":"     * Returns the day of the week from a given date. The days of the week are represented","lastModifiedDate":"2021-10-20"},{"lineNumber":161,"author":{"gitId":"powzx"},"content":"     * in integers 1 - 7 starting from Sunday.","lastModifiedDate":"2021-10-20"},{"lineNumber":162,"author":{"gitId":"powzx"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":163,"author":{"gitId":"powzx"},"content":"     * @param date Date specified","lastModifiedDate":"2021-10-20"},{"lineNumber":164,"author":{"gitId":"powzx"},"content":"     * @return Day of the week represented by an integer","lastModifiedDate":"2021-10-20"},{"lineNumber":165,"author":{"gitId":"powzx"},"content":"     * @throws ParseException If the date does not follow the format yyyy-MM-dd","lastModifiedDate":"2021-10-20"},{"lineNumber":166,"author":{"gitId":"powzx"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":167,"author":{"gitId":"powzx"},"content":"    public static int findDayFromDate(String date) throws ParseException {","lastModifiedDate":"2021-10-17"},{"lineNumber":168,"author":{"gitId":"powzx"},"content":"        Calendar calendar \u003d Calendar.getInstance();","lastModifiedDate":"2021-10-17"},{"lineNumber":169,"author":{"gitId":"powzx"},"content":"        calendar.setTime(new SimpleDateFormat(\"yyyy-MM-dd\").parse(date));","lastModifiedDate":"2021-10-17"},{"lineNumber":170,"author":{"gitId":"powzx"},"content":"        int day \u003d calendar.get(Calendar.DAY_OF_WEEK);","lastModifiedDate":"2021-10-17"},{"lineNumber":171,"author":{"gitId":"powzx"},"content":"        return day;","lastModifiedDate":"2021-10-17"},{"lineNumber":172,"author":{"gitId":"powzx"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":173,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":174,"author":{"gitId":"powzx"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":175,"author":{"gitId":"powzx"},"content":"     * Returns the day of the week in String, given an integer 1 - 7 starting from Sunday.","lastModifiedDate":"2021-10-20"},{"lineNumber":176,"author":{"gitId":"powzx"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":177,"author":{"gitId":"powzx"},"content":"     * @param day Integer representing the day","lastModifiedDate":"2021-10-20"},{"lineNumber":178,"author":{"gitId":"powzx"},"content":"     * @return Day of the week in String represented by the integer","lastModifiedDate":"2021-10-20"},{"lineNumber":179,"author":{"gitId":"powzx"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":180,"author":{"gitId":"powzx"},"content":"    public static String parseDay(int day) {","lastModifiedDate":"2021-10-17"},{"lineNumber":181,"author":{"gitId":"powzx"},"content":"        assert ((day \u003e\u003d 1) \u0026\u0026 (day \u003c\u003d 7));","lastModifiedDate":"2021-10-17"},{"lineNumber":182,"author":{"gitId":"powzx"},"content":"        switch (day) {","lastModifiedDate":"2021-10-17"},{"lineNumber":183,"author":{"gitId":"powzx"},"content":"        case 1:","lastModifiedDate":"2021-10-17"},{"lineNumber":184,"author":{"gitId":"powzx"},"content":"            return \"SUNDAY\";","lastModifiedDate":"2021-10-17"},{"lineNumber":185,"author":{"gitId":"powzx"},"content":"        case 2:","lastModifiedDate":"2021-10-17"},{"lineNumber":186,"author":{"gitId":"powzx"},"content":"            return \"MONDAY\";","lastModifiedDate":"2021-10-17"},{"lineNumber":187,"author":{"gitId":"powzx"},"content":"        case 3:","lastModifiedDate":"2021-10-17"},{"lineNumber":188,"author":{"gitId":"powzx"},"content":"            return \"TUESDAY\";","lastModifiedDate":"2021-10-17"},{"lineNumber":189,"author":{"gitId":"powzx"},"content":"        case 4:","lastModifiedDate":"2021-10-17"},{"lineNumber":190,"author":{"gitId":"powzx"},"content":"            return \"WEDNESDAY\";","lastModifiedDate":"2021-10-17"},{"lineNumber":191,"author":{"gitId":"powzx"},"content":"        case 5:","lastModifiedDate":"2021-10-17"},{"lineNumber":192,"author":{"gitId":"powzx"},"content":"            return \"THURSDAY\";","lastModifiedDate":"2021-10-17"},{"lineNumber":193,"author":{"gitId":"powzx"},"content":"        case 6:","lastModifiedDate":"2021-10-17"},{"lineNumber":194,"author":{"gitId":"powzx"},"content":"            return \"FRIDAY\";","lastModifiedDate":"2021-10-17"},{"lineNumber":195,"author":{"gitId":"powzx"},"content":"        case 7:","lastModifiedDate":"2021-10-17"},{"lineNumber":196,"author":{"gitId":"powzx"},"content":"            return \"SATURDAY\";","lastModifiedDate":"2021-10-17"},{"lineNumber":197,"author":{"gitId":"powzx"},"content":"        default:","lastModifiedDate":"2021-10-17"},{"lineNumber":198,"author":{"gitId":"powzx"},"content":"            return \"\";","lastModifiedDate":"2021-10-17"},{"lineNumber":199,"author":{"gitId":"powzx"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":200,"author":{"gitId":"powzx"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":201,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":202,"author":{"gitId":"powzx"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":203,"author":{"gitId":"powzx"},"content":"     * This method gets the day of the week in string given a specific date. It is important to conduct any relevant","lastModifiedDate":"2021-11-05"},{"lineNumber":204,"author":{"gitId":"powzx"},"content":"     * checks for the format and validity of the date before this method is invoked.","lastModifiedDate":"2021-11-05"},{"lineNumber":205,"author":{"gitId":"powzx"},"content":"     *","lastModifiedDate":"2021-11-05"},{"lineNumber":206,"author":{"gitId":"powzx"},"content":"     * @param date Date","lastModifiedDate":"2021-11-05"},{"lineNumber":207,"author":{"gitId":"powzx"},"content":"     * @return Day of the week in string","lastModifiedDate":"2021-11-05"},{"lineNumber":208,"author":{"gitId":"powzx"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":209,"author":{"gitId":"powzx"},"content":"    public static String getDayOfWeek(String date) {","lastModifiedDate":"2021-11-05"},{"lineNumber":210,"author":{"gitId":"powzx"},"content":"        int dayInInt \u003d 0;","lastModifiedDate":"2021-11-05"},{"lineNumber":211,"author":{"gitId":"powzx"},"content":"        try {","lastModifiedDate":"2021-11-05"},{"lineNumber":212,"author":{"gitId":"powzx"},"content":"            dayInInt \u003d findDayFromDate(date);","lastModifiedDate":"2021-11-05"},{"lineNumber":213,"author":{"gitId":"powzx"},"content":"        } catch (ParseException exception) {","lastModifiedDate":"2021-11-05"},{"lineNumber":214,"author":{"gitId":"powzx"},"content":"            System.out.println(FATAL_ERROR);","lastModifiedDate":"2021-11-05"},{"lineNumber":215,"author":{"gitId":"powzx"},"content":"            System.exit(0);","lastModifiedDate":"2021-11-05"},{"lineNumber":216,"author":{"gitId":"powzx"},"content":"        }","lastModifiedDate":"2021-11-05"},{"lineNumber":217,"author":{"gitId":"powzx"},"content":"        assert ((dayInInt \u003e\u003d 1) \u0026\u0026 (dayInInt \u003c\u003d 7));","lastModifiedDate":"2021-11-05"},{"lineNumber":218,"author":{"gitId":"powzx"},"content":"        String day \u003d parseDay(dayInInt);","lastModifiedDate":"2021-11-05"},{"lineNumber":219,"author":{"gitId":"powzx"},"content":"        return day;","lastModifiedDate":"2021-11-05"},{"lineNumber":220,"author":{"gitId":"powzx"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":221,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":222,"author":{"gitId":"powzx"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":223,"author":{"gitId":"powzx"},"content":"     * Verifies if a given date is of the proper format (yyyy-mm-dd) and is valid.","lastModifiedDate":"2021-11-05"},{"lineNumber":224,"author":{"gitId":"powzx"},"content":"     *","lastModifiedDate":"2021-11-05"},{"lineNumber":225,"author":{"gitId":"powzx"},"content":"     * @param date Date to be verified","lastModifiedDate":"2021-11-05"},{"lineNumber":226,"author":{"gitId":"powzx"},"content":"     * @return LocalDate object representing the date string","lastModifiedDate":"2021-11-05"},{"lineNumber":227,"author":{"gitId":"powzx"},"content":"     * @throws KolinuxException If the format is incorrect or the date does not exist","lastModifiedDate":"2021-11-05"},{"lineNumber":228,"author":{"gitId":"powzx"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":229,"author":{"gitId":"powzx"},"content":"    public static LocalDate verifyDate(String date) throws KolinuxException {","lastModifiedDate":"2021-11-05"},{"lineNumber":230,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":231,"author":{"gitId":"powzx"},"content":"        if (!Pattern.matches(DATE_PATTERN, date)) {","lastModifiedDate":"2021-11-05"},{"lineNumber":232,"author":{"gitId":"powzx"},"content":"            throw new KolinuxException(DATE_FORMAT_ERROR);","lastModifiedDate":"2021-11-05"},{"lineNumber":233,"author":{"gitId":"powzx"},"content":"        }","lastModifiedDate":"2021-11-05"},{"lineNumber":234,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":235,"author":{"gitId":"powzx"},"content":"        LocalDate parsedDate;","lastModifiedDate":"2021-11-05"},{"lineNumber":236,"author":{"gitId":"powzx"},"content":"        try {","lastModifiedDate":"2021-11-05"},{"lineNumber":237,"author":{"gitId":"powzx"},"content":"            parsedDate \u003d LocalDate.parse(date);","lastModifiedDate":"2021-11-05"},{"lineNumber":238,"author":{"gitId":"powzx"},"content":"        } catch (DateTimeParseException exception) {","lastModifiedDate":"2021-11-05"},{"lineNumber":239,"author":{"gitId":"powzx"},"content":"            throw new KolinuxException(DATE_VALIDITY_ERROR);","lastModifiedDate":"2021-11-05"},{"lineNumber":240,"author":{"gitId":"powzx"},"content":"        }","lastModifiedDate":"2021-11-05"},{"lineNumber":241,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":242,"author":{"gitId":"powzx"},"content":"        return parsedDate;","lastModifiedDate":"2021-11-05"},{"lineNumber":243,"author":{"gitId":"powzx"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":244,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":245,"author":{"gitId":"powzx"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":246,"author":{"gitId":"powzx"},"content":"     * Verifies if a given time is of the proper format (hhMM) and is valid.","lastModifiedDate":"2021-11-05"},{"lineNumber":247,"author":{"gitId":"powzx"},"content":"     *","lastModifiedDate":"2021-11-05"},{"lineNumber":248,"author":{"gitId":"powzx"},"content":"     * @param time Time to be verified","lastModifiedDate":"2021-11-05"},{"lineNumber":249,"author":{"gitId":"powzx"},"content":"     * @return LocalTime object representing the time string","lastModifiedDate":"2021-11-05"},{"lineNumber":250,"author":{"gitId":"powzx"},"content":"     * @throws KolinuxException If the format is incorrect or the time is not valid","lastModifiedDate":"2021-11-05"},{"lineNumber":251,"author":{"gitId":"powzx"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":252,"author":{"gitId":"powzx"},"content":"    public static LocalTime verifyTime(String time) throws KolinuxException {","lastModifiedDate":"2021-11-05"},{"lineNumber":253,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":254,"author":{"gitId":"powzx"},"content":"        if (!Pattern.matches(TIME_PATTERN, time)) {","lastModifiedDate":"2021-11-05"},{"lineNumber":255,"author":{"gitId":"powzx"},"content":"            throw new KolinuxException(TIME_FORMAT_ERROR);","lastModifiedDate":"2021-11-05"},{"lineNumber":256,"author":{"gitId":"powzx"},"content":"        }","lastModifiedDate":"2021-11-05"},{"lineNumber":257,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":258,"author":{"gitId":"powzx"},"content":"        // Adds a colon between hh and MM for it to be parsed by the LocalTime class","lastModifiedDate":"2021-11-05"},{"lineNumber":259,"author":{"gitId":"powzx"},"content":"        time \u003d time.replaceFirst(\"..\", \"$0:\");","lastModifiedDate":"2021-11-05"},{"lineNumber":260,"author":{"gitId":"powzx"},"content":"        LocalTime parsedTime;","lastModifiedDate":"2021-11-05"},{"lineNumber":261,"author":{"gitId":"powzx"},"content":"        try {","lastModifiedDate":"2021-11-05"},{"lineNumber":262,"author":{"gitId":"powzx"},"content":"            parsedTime \u003d LocalTime.parse(time);","lastModifiedDate":"2021-11-05"},{"lineNumber":263,"author":{"gitId":"powzx"},"content":"        } catch (DateTimeParseException exception) {","lastModifiedDate":"2021-11-05"},{"lineNumber":264,"author":{"gitId":"powzx"},"content":"            throw new KolinuxException(TIME_VALIDITY_ERROR);","lastModifiedDate":"2021-11-05"},{"lineNumber":265,"author":{"gitId":"powzx"},"content":"        }","lastModifiedDate":"2021-11-05"},{"lineNumber":266,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":267,"author":{"gitId":"powzx"},"content":"        return parsedTime;","lastModifiedDate":"2021-11-05"},{"lineNumber":268,"author":{"gitId":"powzx"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":269,"author":{"gitId":"saravanamani1999"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"giterator":13,"nonrnp":17,"powzx":225,"shyamgj1900":4,"saravanamani1999":10}},{"path":"src/main/java/seedu/kolinux/util/PromptHandler.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"powzx"},"content":"package seedu.kolinux.util;","lastModifiedDate":"2021-11-03"},{"lineNumber":2,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":3,"author":{"gitId":"powzx"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-11-03"},{"lineNumber":4,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":5,"author":{"gitId":"powzx"},"content":"/** Represents the operations related to prompt the user to give additional confirmation. */","lastModifiedDate":"2021-11-03"},{"lineNumber":6,"author":{"gitId":"powzx"},"content":"public class PromptHandler {","lastModifiedDate":"2021-11-03"},{"lineNumber":7,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":8,"author":{"gitId":"powzx"},"content":"    protected Ui ui \u003d new Ui();","lastModifiedDate":"2021-11-03"},{"lineNumber":9,"author":{"gitId":"powzx"},"content":"    protected String message;","lastModifiedDate":"2021-11-03"},{"lineNumber":10,"author":{"gitId":"powzx"},"content":"    protected static Logger logger \u003d Logger.getLogger(Logger.GLOBAL_LOGGER_NAME);","lastModifiedDate":"2021-11-03"},{"lineNumber":11,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":12,"author":{"gitId":"powzx"},"content":"    public PromptHandler(String message) {","lastModifiedDate":"2021-11-03"},{"lineNumber":13,"author":{"gitId":"powzx"},"content":"        this.message \u003d message;","lastModifiedDate":"2021-11-03"},{"lineNumber":14,"author":{"gitId":"powzx"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":15,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":16,"author":{"gitId":"powzx"},"content":"    public String toString() {","lastModifiedDate":"2021-11-03"},{"lineNumber":17,"author":{"gitId":"powzx"},"content":"        return message;","lastModifiedDate":"2021-11-03"},{"lineNumber":18,"author":{"gitId":"powzx"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":19,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":20,"author":{"gitId":"powzx"},"content":"    /**","lastModifiedDate":"2021-11-03"},{"lineNumber":21,"author":{"gitId":"powzx"},"content":"     * To change the message on the same object of the PromptHandler.","lastModifiedDate":"2021-11-03"},{"lineNumber":22,"author":{"gitId":"powzx"},"content":"     *","lastModifiedDate":"2021-11-03"},{"lineNumber":23,"author":{"gitId":"powzx"},"content":"     * @param message Message to change to","lastModifiedDate":"2021-11-03"},{"lineNumber":24,"author":{"gitId":"powzx"},"content":"     */","lastModifiedDate":"2021-11-03"},{"lineNumber":25,"author":{"gitId":"powzx"},"content":"    public void changeMessage(String message) {","lastModifiedDate":"2021-11-03"},{"lineNumber":26,"author":{"gitId":"powzx"},"content":"        this.message \u003d message;","lastModifiedDate":"2021-11-03"},{"lineNumber":27,"author":{"gitId":"powzx"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":28,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":29,"author":{"gitId":"powzx"},"content":"    /**","lastModifiedDate":"2021-11-03"},{"lineNumber":30,"author":{"gitId":"powzx"},"content":"     * Gets a reply from the user by posting the message on the terminal. This is only used if the program needs","lastModifiedDate":"2021-11-04"},{"lineNumber":31,"author":{"gitId":"powzx"},"content":"     * the users to confirm their choice or to authenticate themselves.","lastModifiedDate":"2021-11-03"},{"lineNumber":32,"author":{"gitId":"powzx"},"content":"     *","lastModifiedDate":"2021-11-03"},{"lineNumber":33,"author":{"gitId":"powzx"},"content":"     * @return Reply entered by the user","lastModifiedDate":"2021-11-03"},{"lineNumber":34,"author":{"gitId":"powzx"},"content":"     */","lastModifiedDate":"2021-11-03"},{"lineNumber":35,"author":{"gitId":"powzx"},"content":"    protected String getReplyFromPrompt() {","lastModifiedDate":"2021-11-03"},{"lineNumber":36,"author":{"gitId":"powzx"},"content":"        ui.promptUser(this);","lastModifiedDate":"2021-11-03"},{"lineNumber":37,"author":{"gitId":"powzx"},"content":"        return ui.readUserInput().trim();","lastModifiedDate":"2021-11-03"},{"lineNumber":38,"author":{"gitId":"powzx"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":39,"author":{"gitId":"powzx"},"content":"}","lastModifiedDate":"2021-11-03"}],"authorContributionMap":{"powzx":39}},{"path":"src/main/java/seedu/kolinux/util/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"powzx"},"content":"package seedu.kolinux.util;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"powzx"},"content":"import seedu.kolinux.commands.CommandResult;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"powzx"},"content":"import seedu.kolinux.exceptions.KolinuxException;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":6,"author":{"gitId":"powzx"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-10-28"},{"lineNumber":7,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":8,"author":{"gitId":"powzx"},"content":"/** Represents the user interface. */","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"powzx"},"content":"public class Ui {","lastModifiedDate":"2021-10-04"},{"lineNumber":10,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":11,"author":{"gitId":"powzx"},"content":"    private Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2021-10-28"},{"lineNumber":12,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":13,"author":{"gitId":"powzx"},"content":"    private static final String LOGO \u003d \"\\n\"","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"powzx"},"content":"            + \"(_)   | |    | |(_)\\n\"","lastModifiedDate":"2021-10-04"},{"lineNumber":15,"author":{"gitId":"powzx"},"content":"            + \" _____| |___ | | _ ____  _   _ _   _\\n\"","lastModifiedDate":"2021-10-04"},{"lineNumber":16,"author":{"gitId":"powzx"},"content":"            + \"|  _   _) _ \\\\| || |  _ \\\\| | | ( \\\\ / )\\n\"","lastModifiedDate":"2021-10-04"},{"lineNumber":17,"author":{"gitId":"powzx"},"content":"            + \"| |  \\\\ \\\\ |_| | || | | | | |_| |) X (\\n\"","lastModifiedDate":"2021-10-04"},{"lineNumber":18,"author":{"gitId":"powzx"},"content":"            + \"|_|   \\\\_)___/ \\\\_)_|_| |_|____/(_/ \\\\_)\";","lastModifiedDate":"2021-10-04"},{"lineNumber":19,"author":{"gitId":"powzx"},"content":"    private static final String GREET_MESSAGE \u003d \"Welcome to Kolinux! Enter \\\"help\\\" to view the list of commands\";","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"powzx"},"content":"    private static final String DIVIDER \u003d \"....................................................................\";","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"powzx"},"content":"    private void printDivider() {","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"powzx"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"powzx"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"powzx"},"content":"    /**","lastModifiedDate":"2021-10-28"},{"lineNumber":27,"author":{"gitId":"powzx"},"content":"     * Reads the user input to Kolinux.","lastModifiedDate":"2021-10-28"},{"lineNumber":28,"author":{"gitId":"powzx"},"content":"     *","lastModifiedDate":"2021-10-28"},{"lineNumber":29,"author":{"gitId":"powzx"},"content":"     * @return User input","lastModifiedDate":"2021-10-28"},{"lineNumber":30,"author":{"gitId":"powzx"},"content":"     */","lastModifiedDate":"2021-10-28"},{"lineNumber":31,"author":{"gitId":"powzx"},"content":"    public String readUserInput() {","lastModifiedDate":"2021-10-28"},{"lineNumber":32,"author":{"gitId":"powzx"},"content":"        String userInput \u003d scanner.nextLine();","lastModifiedDate":"2021-10-28"},{"lineNumber":33,"author":{"gitId":"powzx"},"content":"        return userInput;","lastModifiedDate":"2021-10-28"},{"lineNumber":34,"author":{"gitId":"powzx"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":35,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":36,"author":{"gitId":"powzx"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":37,"author":{"gitId":"powzx"},"content":"     * Prints the logo and greet message upon start-up of Kolinux.","lastModifiedDate":"2021-10-10"},{"lineNumber":38,"author":{"gitId":"powzx"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":39,"author":{"gitId":"powzx"},"content":"    public void greetUser() {","lastModifiedDate":"2021-10-08"},{"lineNumber":40,"author":{"gitId":"powzx"},"content":"        System.out.println(LOGO + \"\\n\" + GREET_MESSAGE);","lastModifiedDate":"2021-10-08"},{"lineNumber":41,"author":{"gitId":"powzx"},"content":"        printDivider();","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"powzx"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":43,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":44,"author":{"gitId":"powzx"},"content":"    /**","lastModifiedDate":"2021-10-28"},{"lineNumber":45,"author":{"gitId":"powzx"},"content":"     * Posts a prompt to the user to seek for a reply.","lastModifiedDate":"2021-10-28"},{"lineNumber":46,"author":{"gitId":"powzx"},"content":"     *","lastModifiedDate":"2021-10-28"},{"lineNumber":47,"author":{"gitId":"powzx"},"content":"     * @param promptHandler Prompt","lastModifiedDate":"2021-11-03"},{"lineNumber":48,"author":{"gitId":"powzx"},"content":"     */","lastModifiedDate":"2021-10-28"},{"lineNumber":49,"author":{"gitId":"powzx"},"content":"    public void promptUser(PromptHandler promptHandler) {","lastModifiedDate":"2021-11-03"},{"lineNumber":50,"author":{"gitId":"powzx"},"content":"        System.out.println(promptHandler);","lastModifiedDate":"2021-11-03"},{"lineNumber":51,"author":{"gitId":"powzx"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":52,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":53,"author":{"gitId":"powzx"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":54,"author":{"gitId":"powzx"},"content":"     * Prints the feedback from the command execution to the user.","lastModifiedDate":"2021-10-10"},{"lineNumber":55,"author":{"gitId":"powzx"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":56,"author":{"gitId":"powzx"},"content":"     * @param result Feedback after command execution","lastModifiedDate":"2021-10-10"},{"lineNumber":57,"author":{"gitId":"powzx"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":58,"author":{"gitId":"powzx"},"content":"    public void showResultToUser(CommandResult result) {","lastModifiedDate":"2021-10-04"},{"lineNumber":59,"author":{"gitId":"powzx"},"content":"        System.out.println(result.getFeedbackToUser());","lastModifiedDate":"2021-10-04"},{"lineNumber":60,"author":{"gitId":"powzx"},"content":"        printDivider();","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"powzx"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":62,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":63,"author":{"gitId":"powzx"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":64,"author":{"gitId":"powzx"},"content":"     * Prints the error message from any exceptions encountered during command executions.","lastModifiedDate":"2021-10-10"},{"lineNumber":65,"author":{"gitId":"powzx"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":66,"author":{"gitId":"powzx"},"content":"     * @param exception Exception from command execution","lastModifiedDate":"2021-10-10"},{"lineNumber":67,"author":{"gitId":"powzx"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":68,"author":{"gitId":"powzx"},"content":"    public void showErrorMessage(KolinuxException exception) {","lastModifiedDate":"2021-10-04"},{"lineNumber":69,"author":{"gitId":"powzx"},"content":"        System.out.println(exception.getMessage());","lastModifiedDate":"2021-10-04"},{"lineNumber":70,"author":{"gitId":"powzx"},"content":"        printDivider();","lastModifiedDate":"2021-10-12"},{"lineNumber":71,"author":{"gitId":"powzx"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":72,"author":{"gitId":"powzx"},"content":"}","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"powzx":72}},{"path":"src/test/java/seedu/kolinux/KolinuxTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"powzx"},"content":"package seedu.kolinux;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":6,"author":{"gitId":"powzx"},"content":"class KolinuxTest {","lastModifiedDate":"2021-10-04"},{"lineNumber":7,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2020-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public void sampleTest() {","lastModifiedDate":"2020-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"        assertTrue(true);","lastModifiedDate":"2020-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"powzx":3,"-":9}},{"path":"src/test/java/seedu/kolinux/capcalculator/CapCalculatorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"nonrnp"},"content":"package seedu.kolinux.capcalculator;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":3,"author":{"gitId":"nonrnp"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"nonrnp"},"content":"import seedu.kolinux.exceptions.KolinuxException;","lastModifiedDate":"2021-10-16"},{"lineNumber":5,"author":{"gitId":"nonrnp"},"content":"import seedu.kolinux.module.ModuleDb;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"nonrnp"},"content":"import seedu.kolinux.module.ModuleList;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":8,"author":{"gitId":"nonrnp"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-16"},{"lineNumber":9,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"nonrnp"},"content":"public class CapCalculatorTest {","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":12,"author":{"gitId":"nonrnp"},"content":"    private static final String[] VALID_INPUTS_BY_MC \u003d {\"4/A+\", \"6/A-\", \"2/C\", \"4/U\", \"3/D+\"};","lastModifiedDate":"2021-10-31"},{"lineNumber":13,"author":{"gitId":"nonrnp"},"content":"    private static final  String[] VALID_INPUTS_BY_CODE \u003d {\"CG2027/A+\", \"CS2101/S\", \"ST2334/C\", \"CS1231/F\"};","lastModifiedDate":"2021-11-05"},{"lineNumber":14,"author":{"gitId":"nonrnp"},"content":"    private static final String[] INVALID_INPUT_NO_DESCRIPTIONS \u003d {\"\"};","lastModifiedDate":"2021-10-31"},{"lineNumber":15,"author":{"gitId":"nonrnp"},"content":"    private static final String[] INVALID_INPUT_MODULE_DESCRIPTIONS \u003d {","lastModifiedDate":"2021-10-31"},{"lineNumber":16,"author":{"gitId":"nonrnp"},"content":"            \"CS1231/A\", \"ABCDE\", \"CG2027/Z\", \"CS0000/B\", \"12345\", \"CG2027/S\"};","lastModifiedDate":"2021-11-05"},{"lineNumber":17,"author":{"gitId":"nonrnp"},"content":"    ","lastModifiedDate":"2021-10-16"},{"lineNumber":18,"author":{"gitId":"nonrnp"},"content":"    private static final String MODULE_1 \u003d \"CS2113T\";","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"nonrnp"},"content":"    private static final String MODULE_2 \u003d \"CS2101\";","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"nonrnp"},"content":"    ","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"nonrnp"},"content":"    private static final String VALID_OUTPUT_FROM_MC \u003d \"3.70\";","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"nonrnp"},"content":"    private static final String VALID_OUTPUT_FROM_CODE \u003d \"1.80\";","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"nonrnp"},"content":"    private static final String VALID_OUTPUT_FROM_STORED_MODULES \u003d \"5.00\";","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"nonrnp"},"content":"    private static final String VALID_OUTPUT_SUGGEST_GRADE \u003d \"B-\";","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"nonrnp"},"content":"    private static final String BLANK_DESCRIPTION_EXCEPTION_MESSAGE \u003d ","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"nonrnp"},"content":"            \"Please enter valid module description. Example: CG2027/A+\";","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"nonrnp"},"content":"    private static final String INVALID_MODULES_EXCEPTION_MESSAGE \u003d ","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"nonrnp"},"content":"            \"Invalid module info format found: ABCDE CG2027/Z CS0000/B 12345 \\n\"","lastModifiedDate":"2021-11-05"},{"lineNumber":29,"author":{"gitId":"nonrnp"},"content":"            + \"The following module(s) are entered multiple times: CG2027 \\n\"","lastModifiedDate":"2021-11-05"},{"lineNumber":30,"author":{"gitId":"nonrnp"},"content":"            + \"The following module(s) contain invalid grading basis: CG2027\";","lastModifiedDate":"2021-11-05"},{"lineNumber":31,"author":{"gitId":"nonrnp"},"content":"    private static final String GRADES_NOT_AVAILABLE_MESSAGE \u003d \"There is no module with available grade at the moment\";","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"nonrnp"},"content":"    private static final String CAP_UNACHIEVABLE_MESSAGE \u003d \"UNACHIEVABLE\";","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"nonrnp"},"content":"    private static final String INVALID_CAP_MESSAGE \u003d \"CAP cannot exceed 5.0\";","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":35,"author":{"gitId":"nonrnp"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":36,"author":{"gitId":"nonrnp"},"content":"    public void executeCapCalculator_validInputByMc_capCalculated() throws KolinuxException {","lastModifiedDate":"2021-10-16"},{"lineNumber":37,"author":{"gitId":"nonrnp"},"content":"        CapCalculator calculator \u003d new CapCalculatorByMc(VALID_INPUTS_BY_MC);","lastModifiedDate":"2021-10-31"},{"lineNumber":38,"author":{"gitId":"nonrnp"},"content":"        assertEquals(VALID_OUTPUT_FROM_MC, calculator.executeCapCalculator());","lastModifiedDate":"2021-10-24"},{"lineNumber":39,"author":{"gitId":"nonrnp"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":40,"author":{"gitId":"nonrnp"},"content":"    ","lastModifiedDate":"2021-10-16"},{"lineNumber":41,"author":{"gitId":"nonrnp"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":42,"author":{"gitId":"nonrnp"},"content":"    public void executeCapCalculator_validInputByCode_capCalculated() throws KolinuxException {","lastModifiedDate":"2021-10-16"},{"lineNumber":43,"author":{"gitId":"nonrnp"},"content":"        CapCalculator calculator \u003d new CapCalculatorByCode(VALID_INPUTS_BY_CODE);","lastModifiedDate":"2021-10-31"},{"lineNumber":44,"author":{"gitId":"nonrnp"},"content":"        assertEquals(VALID_OUTPUT_FROM_CODE, calculator.executeCapCalculator());","lastModifiedDate":"2021-10-24"},{"lineNumber":45,"author":{"gitId":"nonrnp"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":46,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":47,"author":{"gitId":"nonrnp"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":48,"author":{"gitId":"nonrnp"},"content":"    public void executeCapCalculator_storedModulesHaveGrades_capCalculated() throws KolinuxException {","lastModifiedDate":"2021-10-24"},{"lineNumber":49,"author":{"gitId":"nonrnp"},"content":"        ModuleList moduleList \u003d new ModuleList();","lastModifiedDate":"2021-10-24"},{"lineNumber":50,"author":{"gitId":"nonrnp"},"content":"        ModuleDb moduleDb \u003d new ModuleDb();","lastModifiedDate":"2021-10-24"},{"lineNumber":51,"author":{"gitId":"nonrnp"},"content":"        moduleDb.initModuleDb();","lastModifiedDate":"2021-10-24"},{"lineNumber":52,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":53,"author":{"gitId":"giterator"},"content":"        moduleList.addModuleByCode(MODULE_1, moduleDb);","lastModifiedDate":"2021-11-02"},{"lineNumber":54,"author":{"gitId":"giterator"},"content":"        moduleList.addModuleByCode(MODULE_2, moduleDb);","lastModifiedDate":"2021-11-02"},{"lineNumber":55,"author":{"gitId":"nonrnp"},"content":"        moduleList.setModuleGrade(MODULE_1, \"A\");","lastModifiedDate":"2021-10-24"},{"lineNumber":56,"author":{"gitId":"nonrnp"},"content":"        CapCalculator calculator \u003d new ModuleListCapCalculator(moduleList);","lastModifiedDate":"2021-10-24"},{"lineNumber":57,"author":{"gitId":"nonrnp"},"content":"        assertEquals(VALID_OUTPUT_FROM_STORED_MODULES, calculator.executeCapCalculator());","lastModifiedDate":"2021-10-24"},{"lineNumber":58,"author":{"gitId":"nonrnp"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":59,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":60,"author":{"gitId":"nonrnp"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":61,"author":{"gitId":"nonrnp"},"content":"    public void executeCapCalculator_validDesiredCap_suggestedGradeShown() throws KolinuxException {","lastModifiedDate":"2021-10-24"},{"lineNumber":62,"author":{"gitId":"nonrnp"},"content":"        ModuleList moduleList \u003d new ModuleList();","lastModifiedDate":"2021-10-24"},{"lineNumber":63,"author":{"gitId":"nonrnp"},"content":"        ModuleDb moduleDb \u003d new ModuleDb();","lastModifiedDate":"2021-10-24"},{"lineNumber":64,"author":{"gitId":"nonrnp"},"content":"        moduleDb.initModuleDb();","lastModifiedDate":"2021-10-24"},{"lineNumber":65,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":66,"author":{"gitId":"giterator"},"content":"        moduleList.addModuleByCode(MODULE_1, moduleDb);","lastModifiedDate":"2021-11-02"},{"lineNumber":67,"author":{"gitId":"giterator"},"content":"        moduleList.addModuleByCode(MODULE_2, moduleDb);","lastModifiedDate":"2021-11-02"},{"lineNumber":68,"author":{"gitId":"nonrnp"},"content":"        moduleList.setModuleGrade(MODULE_1, \"A\");","lastModifiedDate":"2021-10-24"},{"lineNumber":69,"author":{"gitId":"nonrnp"},"content":"        CapCalculator calculator \u003d new GradeSuggestionCalculator(moduleList, \"4.0\");","lastModifiedDate":"2021-10-24"},{"lineNumber":70,"author":{"gitId":"nonrnp"},"content":"        assertEquals(VALID_OUTPUT_SUGGEST_GRADE, calculator.executeCapCalculator());","lastModifiedDate":"2021-10-24"},{"lineNumber":71,"author":{"gitId":"nonrnp"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":72,"author":{"gitId":"nonrnp"},"content":"    ","lastModifiedDate":"2021-10-16"},{"lineNumber":73,"author":{"gitId":"nonrnp"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":74,"author":{"gitId":"nonrnp"},"content":"    public void executeCapCalculator_noDescriptionsProvided_showNoDescriptionMessage() {","lastModifiedDate":"2021-10-16"},{"lineNumber":75,"author":{"gitId":"nonrnp"},"content":"        try {","lastModifiedDate":"2021-10-16"},{"lineNumber":76,"author":{"gitId":"nonrnp"},"content":"            CapCalculator calculator \u003d new CapCalculatorByCode(INVALID_INPUT_NO_DESCRIPTIONS);","lastModifiedDate":"2021-10-24"},{"lineNumber":77,"author":{"gitId":"nonrnp"},"content":"            calculator.executeCapCalculator();","lastModifiedDate":"2021-10-16"},{"lineNumber":78,"author":{"gitId":"nonrnp"},"content":"        } catch (KolinuxException exception) {","lastModifiedDate":"2021-10-16"},{"lineNumber":79,"author":{"gitId":"nonrnp"},"content":"            assertEquals(BLANK_DESCRIPTION_EXCEPTION_MESSAGE, exception.getMessage());","lastModifiedDate":"2021-10-24"},{"lineNumber":80,"author":{"gitId":"nonrnp"},"content":"        }","lastModifiedDate":"2021-10-16"},{"lineNumber":81,"author":{"gitId":"nonrnp"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":82,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":83,"author":{"gitId":"nonrnp"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":84,"author":{"gitId":"nonrnp"},"content":"    public void executeCapCalculator_invalidModuleDescriptionsFound_showInvalidModules() {","lastModifiedDate":"2021-10-16"},{"lineNumber":85,"author":{"gitId":"nonrnp"},"content":"        try {","lastModifiedDate":"2021-10-16"},{"lineNumber":86,"author":{"gitId":"nonrnp"},"content":"            CapCalculator calculator \u003d new CapCalculatorByCode(INVALID_INPUT_MODULE_DESCRIPTIONS);","lastModifiedDate":"2021-10-24"},{"lineNumber":87,"author":{"gitId":"nonrnp"},"content":"            calculator.executeCapCalculator();","lastModifiedDate":"2021-10-24"},{"lineNumber":88,"author":{"gitId":"nonrnp"},"content":"        } catch (KolinuxException exception) {","lastModifiedDate":"2021-10-24"},{"lineNumber":89,"author":{"gitId":"nonrnp"},"content":"            assertEquals(INVALID_MODULES_EXCEPTION_MESSAGE, exception.getMessage());","lastModifiedDate":"2021-10-24"},{"lineNumber":90,"author":{"gitId":"nonrnp"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":91,"author":{"gitId":"nonrnp"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":92,"author":{"gitId":"nonrnp"},"content":"    ","lastModifiedDate":"2021-10-24"},{"lineNumber":93,"author":{"gitId":"nonrnp"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":94,"author":{"gitId":"nonrnp"},"content":"    public void executeCapCalculator_noModuleGradeStored_showGradeNotAvailableMessage() {","lastModifiedDate":"2021-10-24"},{"lineNumber":95,"author":{"gitId":"nonrnp"},"content":"        try {","lastModifiedDate":"2021-10-24"},{"lineNumber":96,"author":{"gitId":"nonrnp"},"content":"            ModuleList moduleList \u003d new ModuleList();","lastModifiedDate":"2021-10-24"},{"lineNumber":97,"author":{"gitId":"nonrnp"},"content":"            ModuleDb moduleDb \u003d new ModuleDb();","lastModifiedDate":"2021-10-24"},{"lineNumber":98,"author":{"gitId":"nonrnp"},"content":"            moduleDb.initModuleDb();","lastModifiedDate":"2021-10-24"},{"lineNumber":99,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":100,"author":{"gitId":"giterator"},"content":"            moduleList.addModuleByCode(MODULE_1, moduleDb);","lastModifiedDate":"2021-11-02"},{"lineNumber":101,"author":{"gitId":"nonrnp"},"content":"            CapCalculator calculator \u003d new ModuleListCapCalculator(moduleList);","lastModifiedDate":"2021-10-24"},{"lineNumber":102,"author":{"gitId":"nonrnp"},"content":"            calculator.executeCapCalculator();","lastModifiedDate":"2021-10-24"},{"lineNumber":103,"author":{"gitId":"nonrnp"},"content":"        } catch (KolinuxException exception) {","lastModifiedDate":"2021-10-24"},{"lineNumber":104,"author":{"gitId":"nonrnp"},"content":"            assertEquals(GRADES_NOT_AVAILABLE_MESSAGE, exception.getMessage());","lastModifiedDate":"2021-10-24"},{"lineNumber":105,"author":{"gitId":"nonrnp"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":106,"author":{"gitId":"nonrnp"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":107,"author":{"gitId":"nonrnp"},"content":"    ","lastModifiedDate":"2021-10-24"},{"lineNumber":108,"author":{"gitId":"nonrnp"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":109,"author":{"gitId":"nonrnp"},"content":"    public void executeCapCalculator_capUnachievable_showCapUnachievableMessage() throws KolinuxException {","lastModifiedDate":"2021-10-24"},{"lineNumber":110,"author":{"gitId":"nonrnp"},"content":"        ModuleList moduleList \u003d new ModuleList();","lastModifiedDate":"2021-10-24"},{"lineNumber":111,"author":{"gitId":"nonrnp"},"content":"        ModuleDb moduleDb \u003d new ModuleDb();","lastModifiedDate":"2021-10-24"},{"lineNumber":112,"author":{"gitId":"nonrnp"},"content":"        moduleDb.initModuleDb();","lastModifiedDate":"2021-10-24"},{"lineNumber":113,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":114,"author":{"gitId":"giterator"},"content":"        moduleList.addModuleByCode(MODULE_1, moduleDb);","lastModifiedDate":"2021-11-02"},{"lineNumber":115,"author":{"gitId":"giterator"},"content":"        moduleList.addModuleByCode(MODULE_2, moduleDb);","lastModifiedDate":"2021-11-02"},{"lineNumber":116,"author":{"gitId":"nonrnp"},"content":"        moduleList.setModuleGrade(MODULE_1, \"C\");","lastModifiedDate":"2021-10-24"},{"lineNumber":117,"author":{"gitId":"nonrnp"},"content":"        CapCalculator calculator \u003d new GradeSuggestionCalculator(moduleList, \"5.0\");","lastModifiedDate":"2021-10-24"},{"lineNumber":118,"author":{"gitId":"nonrnp"},"content":"        assertEquals(CAP_UNACHIEVABLE_MESSAGE, calculator.executeCapCalculator());","lastModifiedDate":"2021-10-24"},{"lineNumber":119,"author":{"gitId":"nonrnp"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":120,"author":{"gitId":"nonrnp"},"content":"    ","lastModifiedDate":"2021-10-24"},{"lineNumber":121,"author":{"gitId":"nonrnp"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":122,"author":{"gitId":"nonrnp"},"content":"    public void executeCapCalculator_invalidCapProvided_showInvalidCapMessage() {","lastModifiedDate":"2021-10-24"},{"lineNumber":123,"author":{"gitId":"nonrnp"},"content":"        try {","lastModifiedDate":"2021-10-24"},{"lineNumber":124,"author":{"gitId":"nonrnp"},"content":"            ModuleList moduleList \u003d new ModuleList();","lastModifiedDate":"2021-10-24"},{"lineNumber":125,"author":{"gitId":"nonrnp"},"content":"            ModuleDb moduleDb \u003d new ModuleDb();","lastModifiedDate":"2021-10-24"},{"lineNumber":126,"author":{"gitId":"nonrnp"},"content":"            moduleDb.initModuleDb();","lastModifiedDate":"2021-10-24"},{"lineNumber":127,"author":{"gitId":"nonrnp"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":128,"author":{"gitId":"giterator"},"content":"            moduleList.addModuleByCode(MODULE_1, moduleDb);","lastModifiedDate":"2021-11-02"},{"lineNumber":129,"author":{"gitId":"giterator"},"content":"            moduleList.addModuleByCode(MODULE_2, moduleDb);","lastModifiedDate":"2021-11-02"},{"lineNumber":130,"author":{"gitId":"nonrnp"},"content":"            moduleList.setModuleGrade(MODULE_1, \"C\");","lastModifiedDate":"2021-10-24"},{"lineNumber":131,"author":{"gitId":"nonrnp"},"content":"            CapCalculator calculator \u003d new GradeSuggestionCalculator(moduleList, \"20.0\");","lastModifiedDate":"2021-10-24"},{"lineNumber":132,"author":{"gitId":"nonrnp"},"content":"            calculator.executeCapCalculator();","lastModifiedDate":"2021-10-16"},{"lineNumber":133,"author":{"gitId":"nonrnp"},"content":"        } catch (KolinuxException exception) {","lastModifiedDate":"2021-10-16"},{"lineNumber":134,"author":{"gitId":"nonrnp"},"content":"            assertEquals(INVALID_CAP_MESSAGE, exception.getMessage());","lastModifiedDate":"2021-10-24"},{"lineNumber":135,"author":{"gitId":"nonrnp"},"content":"        }","lastModifiedDate":"2021-10-16"},{"lineNumber":136,"author":{"gitId":"nonrnp"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":137,"author":{"gitId":"nonrnp"},"content":"}","lastModifiedDate":"2021-10-16"}],"authorContributionMap":{"giterator":9,"nonrnp":128}},{"path":"src/test/java/seedu/kolinux/commands/PlannerCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"powzx"},"content":"package seedu.kolinux.commands;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"powzx"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"powzx"},"content":"import seedu.kolinux.exceptions.KolinuxException;","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"powzx"},"content":"import seedu.kolinux.planner.Planner;","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"powzx"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"powzx"},"content":"public class PlannerCommandTest {","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"powzx"},"content":"    private Planner planner \u003d new Planner();","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"powzx"},"content":"    private static final String ADD_SUBCOMMAND \u003d \"add\";","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"powzx"},"content":"    private static final String LIST_SUBCOMMAND \u003d \"list\";","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"powzx"},"content":"    private static final String DELETE_SUBCOMMAND \u003d \"delete\";","lastModifiedDate":"2021-11-05"},{"lineNumber":16,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"powzx"},"content":"    private static final String[][] VALID_EVENT_ARGUMENTS","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"powzx"},"content":"            \u003d new String[][]{{\"Pop Quiz 3\", \"2021-10-26\", \"1500\", \"1515\"},","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"powzx"},"content":"                {\"Pop Quiz 4\", \"2021-10-26\", \"1530\", \"2000\"},","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"powzx"},"content":"                {\"Pop Quiz 5\", \"2021-10-26\", \"2000\", \"2130\"}};","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"powzx"},"content":"    private static final String[] LIST_EVENT_ARGUMENTS \u003d new String[]{\"2021-10-26\"};","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"powzx"},"content":"    private static final String[][] INVALID_DATES \u003d new String[][]{{\"20211010\"}, {\"2021-02-29\"}};","lastModifiedDate":"2021-11-05"},{"lineNumber":23,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"powzx"},"content":"    private static final String ADD_EVENT_MESSAGE","lastModifiedDate":"2021-11-01"},{"lineNumber":25,"author":{"gitId":"powzx"},"content":"            \u003d \"An event has been added to your schedule successfully: 2021-10-26 15:00 - 15:15 Pop Quiz 3\";","lastModifiedDate":"2021-11-01"},{"lineNumber":26,"author":{"gitId":"powzx"},"content":"    private static final String LIST_EVENTS_TEST \u003d \"2021-10-26 TUESDAY\\n\"","lastModifiedDate":"2021-11-05"},{"lineNumber":27,"author":{"gitId":"powzx"},"content":"            + \"15:00 - 15:15 Pop Quiz 3\\n\"","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"powzx"},"content":"            + \"15:30 - 20:00 Pop Quiz 4\\n\"","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"powzx"},"content":"            + \"20:00 - 21:30 Pop Quiz 5\";","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"powzx"},"content":"    private static final String DATE_FORMAT_ERROR \u003d \"Please provide a valid date format. Format: yyyy-mm-dd\";","lastModifiedDate":"2021-11-05"},{"lineNumber":31,"author":{"gitId":"powzx"},"content":"    private static final String DATE_VALIDITY_ERROR \u003d \"This date does not exist. Please try again.\";","lastModifiedDate":"2021-11-05"},{"lineNumber":32,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":33,"author":{"gitId":"powzx"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":34,"author":{"gitId":"powzx"},"content":"    public void handleAddCommand_validEvent_eventAdded() throws KolinuxException {","lastModifiedDate":"2021-10-25"},{"lineNumber":35,"author":{"gitId":"powzx"},"content":"        planner.clearEvents();","lastModifiedDate":"2021-10-25"},{"lineNumber":36,"author":{"gitId":"powzx"},"content":"        PlannerCommand command \u003d new PlannerCommand(ADD_SUBCOMMAND, VALID_EVENT_ARGUMENTS[0]);","lastModifiedDate":"2021-10-25"},{"lineNumber":37,"author":{"gitId":"powzx"},"content":"        CommandResult result \u003d command.executeCommand();","lastModifiedDate":"2021-10-25"},{"lineNumber":38,"author":{"gitId":"powzx"},"content":"        assertEquals(ADD_EVENT_MESSAGE, result.getFeedbackToUser());","lastModifiedDate":"2021-10-25"},{"lineNumber":39,"author":{"gitId":"powzx"},"content":"        planner.clearEvents();","lastModifiedDate":"2021-10-25"},{"lineNumber":40,"author":{"gitId":"powzx"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":41,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":42,"author":{"gitId":"powzx"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":43,"author":{"gitId":"powzx"},"content":"    public void handleListCommand_addThreeEventsThenListThem_eventsListed() throws KolinuxException {","lastModifiedDate":"2021-10-25"},{"lineNumber":44,"author":{"gitId":"powzx"},"content":"        planner.clearEvents();","lastModifiedDate":"2021-10-25"},{"lineNumber":45,"author":{"gitId":"powzx"},"content":"        PlannerCommand command \u003d new PlannerCommand(ADD_SUBCOMMAND, VALID_EVENT_ARGUMENTS[0]);","lastModifiedDate":"2021-10-25"},{"lineNumber":46,"author":{"gitId":"powzx"},"content":"        command.executeCommand();","lastModifiedDate":"2021-10-25"},{"lineNumber":47,"author":{"gitId":"powzx"},"content":"        command \u003d new PlannerCommand(ADD_SUBCOMMAND, VALID_EVENT_ARGUMENTS[1]);","lastModifiedDate":"2021-10-25"},{"lineNumber":48,"author":{"gitId":"powzx"},"content":"        command.executeCommand();","lastModifiedDate":"2021-10-25"},{"lineNumber":49,"author":{"gitId":"powzx"},"content":"        command \u003d new PlannerCommand(ADD_SUBCOMMAND, VALID_EVENT_ARGUMENTS[2]);","lastModifiedDate":"2021-10-25"},{"lineNumber":50,"author":{"gitId":"powzx"},"content":"        command.executeCommand();","lastModifiedDate":"2021-10-25"},{"lineNumber":51,"author":{"gitId":"powzx"},"content":"        command \u003d new PlannerCommand(LIST_SUBCOMMAND, LIST_EVENT_ARGUMENTS);","lastModifiedDate":"2021-10-25"},{"lineNumber":52,"author":{"gitId":"powzx"},"content":"        CommandResult result \u003d command.executeCommand();","lastModifiedDate":"2021-10-25"},{"lineNumber":53,"author":{"gitId":"powzx"},"content":"        assertEquals(LIST_EVENTS_TEST, result.getFeedbackToUser());","lastModifiedDate":"2021-10-25"},{"lineNumber":54,"author":{"gitId":"powzx"},"content":"        planner.clearEvents();","lastModifiedDate":"2021-10-25"},{"lineNumber":55,"author":{"gitId":"powzx"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":56,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":57,"author":{"gitId":"powzx"},"content":"    @Test","lastModifiedDate":"2021-11-05"},{"lineNumber":58,"author":{"gitId":"powzx"},"content":"    public void handleListCommand_wrongDateFormat_exceptionThrown() {","lastModifiedDate":"2021-11-05"},{"lineNumber":59,"author":{"gitId":"powzx"},"content":"        PlannerCommand command \u003d new PlannerCommand(LIST_SUBCOMMAND, INVALID_DATES[0]);","lastModifiedDate":"2021-11-05"},{"lineNumber":60,"author":{"gitId":"powzx"},"content":"        try {","lastModifiedDate":"2021-11-05"},{"lineNumber":61,"author":{"gitId":"powzx"},"content":"            command.executeCommand();","lastModifiedDate":"2021-11-05"},{"lineNumber":62,"author":{"gitId":"powzx"},"content":"        } catch (KolinuxException exception) {","lastModifiedDate":"2021-11-05"},{"lineNumber":63,"author":{"gitId":"powzx"},"content":"            assertEquals(DATE_FORMAT_ERROR, exception.getMessage());","lastModifiedDate":"2021-11-05"},{"lineNumber":64,"author":{"gitId":"powzx"},"content":"        }","lastModifiedDate":"2021-11-05"},{"lineNumber":65,"author":{"gitId":"powzx"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":66,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":67,"author":{"gitId":"powzx"},"content":"    @Test","lastModifiedDate":"2021-11-05"},{"lineNumber":68,"author":{"gitId":"powzx"},"content":"    public void handleListCommand_invalidDate_exceptionThrown() {","lastModifiedDate":"2021-11-05"},{"lineNumber":69,"author":{"gitId":"powzx"},"content":"        PlannerCommand command \u003d new PlannerCommand(LIST_SUBCOMMAND, INVALID_DATES[1]);","lastModifiedDate":"2021-11-05"},{"lineNumber":70,"author":{"gitId":"powzx"},"content":"        try {","lastModifiedDate":"2021-11-05"},{"lineNumber":71,"author":{"gitId":"powzx"},"content":"            command.executeCommand();","lastModifiedDate":"2021-11-05"},{"lineNumber":72,"author":{"gitId":"powzx"},"content":"        } catch (KolinuxException exception) {","lastModifiedDate":"2021-11-05"},{"lineNumber":73,"author":{"gitId":"powzx"},"content":"            assertEquals(DATE_VALIDITY_ERROR, exception.getMessage());","lastModifiedDate":"2021-11-05"},{"lineNumber":74,"author":{"gitId":"powzx"},"content":"        }","lastModifiedDate":"2021-11-05"},{"lineNumber":75,"author":{"gitId":"powzx"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":76,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":77,"author":{"gitId":"powzx"},"content":"    @Test","lastModifiedDate":"2021-11-05"},{"lineNumber":78,"author":{"gitId":"powzx"},"content":"    public void handleDeleteCommand_wrongDateFormat_exceptionThrown() {","lastModifiedDate":"2021-11-05"},{"lineNumber":79,"author":{"gitId":"powzx"},"content":"        PlannerCommand command \u003d new PlannerCommand(DELETE_SUBCOMMAND, INVALID_DATES[0]);","lastModifiedDate":"2021-11-05"},{"lineNumber":80,"author":{"gitId":"powzx"},"content":"        try {","lastModifiedDate":"2021-11-05"},{"lineNumber":81,"author":{"gitId":"powzx"},"content":"            command.executeCommand();","lastModifiedDate":"2021-11-05"},{"lineNumber":82,"author":{"gitId":"powzx"},"content":"        } catch (KolinuxException exception) {","lastModifiedDate":"2021-11-05"},{"lineNumber":83,"author":{"gitId":"powzx"},"content":"            assertEquals(DATE_FORMAT_ERROR, exception.getMessage());","lastModifiedDate":"2021-11-05"},{"lineNumber":84,"author":{"gitId":"powzx"},"content":"        }","lastModifiedDate":"2021-11-05"},{"lineNumber":85,"author":{"gitId":"powzx"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":86,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":87,"author":{"gitId":"powzx"},"content":"    @Test","lastModifiedDate":"2021-11-05"},{"lineNumber":88,"author":{"gitId":"powzx"},"content":"    public void handleDeleteCommand_invalidDate_exceptionThrown() {","lastModifiedDate":"2021-11-05"},{"lineNumber":89,"author":{"gitId":"powzx"},"content":"        PlannerCommand command \u003d new PlannerCommand(DELETE_SUBCOMMAND, INVALID_DATES[1]);","lastModifiedDate":"2021-11-05"},{"lineNumber":90,"author":{"gitId":"powzx"},"content":"        try {","lastModifiedDate":"2021-11-05"},{"lineNumber":91,"author":{"gitId":"powzx"},"content":"            command.executeCommand();","lastModifiedDate":"2021-11-05"},{"lineNumber":92,"author":{"gitId":"powzx"},"content":"        } catch (KolinuxException exception) {","lastModifiedDate":"2021-11-05"},{"lineNumber":93,"author":{"gitId":"powzx"},"content":"            assertEquals(DATE_VALIDITY_ERROR, exception.getMessage());","lastModifiedDate":"2021-11-05"},{"lineNumber":94,"author":{"gitId":"powzx"},"content":"        }","lastModifiedDate":"2021-11-05"},{"lineNumber":95,"author":{"gitId":"powzx"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":96,"author":{"gitId":"powzx"},"content":"}","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"powzx":96}},{"path":"src/test/java/seedu/kolinux/commands/TimetableCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"saravanamani1999"},"content":"package seedu.kolinux.commands;","lastModifiedDate":"2021-10-31"},{"lineNumber":2,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":3,"author":{"gitId":"saravanamani1999"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2021-10-31"},{"lineNumber":4,"author":{"gitId":"saravanamani1999"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-31"},{"lineNumber":5,"author":{"gitId":"saravanamani1999"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-31"},{"lineNumber":6,"author":{"gitId":"saravanamani1999"},"content":"import seedu.kolinux.exceptions.KolinuxException;","lastModifiedDate":"2021-10-31"},{"lineNumber":7,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":8,"author":{"gitId":"saravanamani1999"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-31"},{"lineNumber":9,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":10,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":11,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":12,"author":{"gitId":"saravanamani1999"},"content":"public class TimetableCommandTest {","lastModifiedDate":"2021-10-31"},{"lineNumber":13,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":14,"author":{"gitId":"saravanamani1999"},"content":"    private static final String[] VALID_ADD_TUTORIAL_ARGUMENTS \u003d new String[] {\"CS1231\", \"lec\", \"friday\",","lastModifiedDate":"2021-10-31"},{"lineNumber":15,"author":{"gitId":"saravanamani1999"},"content":"            \"1700\", \"1800\"};","lastModifiedDate":"2021-10-31"},{"lineNumber":16,"author":{"gitId":"saravanamani1999"},"content":"    private static final String[] VALID_DELETE_TUTORIAL_ARGUMENTS \u003d new String[] {\"CS1231\", \"lec\", \"friday\", \"1700\"};","lastModifiedDate":"2021-10-31"},{"lineNumber":17,"author":{"gitId":"saravanamani1999"},"content":"    private static final String[] VALID_UPDATE_TUTORIAL_ARGUMENTS \u003d new String[] {\"CS1231\", \"lec\", \"friday\", \"1700\",","lastModifiedDate":"2021-10-31"},{"lineNumber":18,"author":{"gitId":"saravanamani1999"},"content":"            \"monday\", \"1800\"};","lastModifiedDate":"2021-10-31"},{"lineNumber":19,"author":{"gitId":"saravanamani1999"},"content":"    private static final String INVALID_COMMAND_MESSAGE \u003d \"Ensure command has one of the following formats:\\n\"","lastModifiedDate":"2021-10-31"},{"lineNumber":20,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-10-31"},{"lineNumber":21,"author":{"gitId":"saravanamani1999"},"content":"            \"1. timetable add LESSON_TYPE/MODULE_CODE/DAY/START_TIME\\n\"","lastModifiedDate":"2021-10-31"},{"lineNumber":22,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-10-31"},{"lineNumber":23,"author":{"gitId":"saravanamani1999"},"content":"            \"2. timetable view\\n\"","lastModifiedDate":"2021-10-31"},{"lineNumber":24,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-10-31"},{"lineNumber":25,"author":{"gitId":"saravanamani1999"},"content":"            \"3. timetable update MODULE_CODE/LESSON_TYPE/OLD_DAY/OLD_START_TIME/NEW_DAY/NEW_START_TIME\\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":26,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-10-31"},{"lineNumber":27,"author":{"gitId":"saravanamani1999"},"content":"            \"4. timetable delete MODULE_CODE/LESSON_TYPE/DAY/START_TIME\\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":28,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-10-31"},{"lineNumber":29,"author":{"gitId":"saravanamani1999"},"content":"            \"5. timetable list DAY\";","lastModifiedDate":"2021-11-03"},{"lineNumber":30,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":31,"author":{"gitId":"saravanamani1999"},"content":"    private static final String[] CODE \u003d {\"CS1231\"};","lastModifiedDate":"2021-10-31"},{"lineNumber":32,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":33,"author":{"gitId":"saravanamani1999"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-31"},{"lineNumber":34,"author":{"gitId":"saravanamani1999"},"content":"    public void clearBefore() throws KolinuxException {","lastModifiedDate":"2021-10-31"},{"lineNumber":35,"author":{"gitId":"saravanamani1999"},"content":"        TimetableCommand clear \u003d new TimetableCommand(\"clear\",null);","lastModifiedDate":"2021-10-31"},{"lineNumber":36,"author":{"gitId":"saravanamani1999"},"content":"        clear.executeCommand();","lastModifiedDate":"2021-10-31"},{"lineNumber":37,"author":{"gitId":"saravanamani1999"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":38,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":39,"author":{"gitId":"saravanamani1999"},"content":"    @AfterEach","lastModifiedDate":"2021-10-31"},{"lineNumber":40,"author":{"gitId":"saravanamani1999"},"content":"    public void clearAfter() throws KolinuxException {","lastModifiedDate":"2021-10-31"},{"lineNumber":41,"author":{"gitId":"saravanamani1999"},"content":"        TimetableCommand clear \u003d new TimetableCommand(\"clear\",null);","lastModifiedDate":"2021-10-31"},{"lineNumber":42,"author":{"gitId":"saravanamani1999"},"content":"        clear.executeCommand();","lastModifiedDate":"2021-10-31"},{"lineNumber":43,"author":{"gitId":"saravanamani1999"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":44,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":45,"author":{"gitId":"saravanamani1999"},"content":"    @Test","lastModifiedDate":"2021-10-31"},{"lineNumber":46,"author":{"gitId":"saravanamani1999"},"content":"    public void executeViewCommand_validCommand_timetableViewed() throws KolinuxException {","lastModifiedDate":"2021-10-31"},{"lineNumber":47,"author":{"gitId":"saravanamani1999"},"content":"        TimetableCommand viewCommand \u003d new TimetableCommand(\"view\", null);","lastModifiedDate":"2021-10-31"},{"lineNumber":48,"author":{"gitId":"saravanamani1999"},"content":"        assertEquals(\"Timetable has been printed above\",","lastModifiedDate":"2021-10-31"},{"lineNumber":49,"author":{"gitId":"saravanamani1999"},"content":"               viewCommand.executeCommand().getFeedbackToUser());","lastModifiedDate":"2021-10-31"},{"lineNumber":50,"author":{"gitId":"saravanamani1999"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":51,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":52,"author":{"gitId":"saravanamani1999"},"content":"    @Test","lastModifiedDate":"2021-10-31"},{"lineNumber":53,"author":{"gitId":"saravanamani1999"},"content":"    public void executeInvalidCommand_invalidCommand_errorMessage() throws KolinuxException {","lastModifiedDate":"2021-10-31"},{"lineNumber":54,"author":{"gitId":"saravanamani1999"},"content":"        TimetableCommand viewCommand \u003d new TimetableCommand(\"hello\", null);","lastModifiedDate":"2021-10-31"},{"lineNumber":55,"author":{"gitId":"saravanamani1999"},"content":"        assertEquals(INVALID_COMMAND_MESSAGE, viewCommand.executeCommand().getFeedbackToUser());","lastModifiedDate":"2021-10-31"},{"lineNumber":56,"author":{"gitId":"saravanamani1999"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":57,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":58,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":59,"author":{"gitId":"saravanamani1999"},"content":"}","lastModifiedDate":"2021-10-31"}],"authorContributionMap":{"saravanamani1999":59}},{"path":"src/test/java/seedu/kolinux/module/ModuleDbTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"powzx"},"content":"package seedu.kolinux.module;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"giterator"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"saravanamani1999"},"content":"import com.google.gson.JsonArray;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"nonrnp"},"content":"import com.google.gson.JsonElement;","lastModifiedDate":"2021-11-05"},{"lineNumber":5,"author":{"gitId":"nonrnp"},"content":"import com.google.gson.JsonObject;","lastModifiedDate":"2021-11-05"},{"lineNumber":6,"author":{"gitId":"giterator"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"giterator"},"content":"import org.junit.jupiter.api.BeforeAll;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"giterator"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"giterator"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"giterator"},"content":"import static org.junit.jupiter.api.Assertions.assertNull;","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"giterator"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"giterator"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"giterator"},"content":"class ModuleDbTest {","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"giterator"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"giterator"},"content":"    private static final ModuleDb moduleDb \u003d new ModuleDb();","lastModifiedDate":"2021-10-14"},{"lineNumber":16,"author":{"gitId":"saravanamani1999"},"content":"    private static final double[] workload \u003d new double[] {2,1,1,3,3};","lastModifiedDate":"2021-10-15"},{"lineNumber":17,"author":{"gitId":"saravanamani1999"},"content":"    private static JsonArray semesterData \u003d new JsonArray();","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"nonrnp"},"content":"    private static JsonObject attributes \u003d new JsonObject();","lastModifiedDate":"2021-11-05"},{"lineNumber":19,"author":{"gitId":"giterator"},"content":"    private final ModuleDetails testModule \u003d new ModuleDetails(\"CS2101\", \"4\", \"Computing\",","lastModifiedDate":"2021-10-14"},{"lineNumber":20,"author":{"gitId":"giterator"},"content":"            \"This module aims to equip students with the skills needed to communicate technical \"","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"giterator"},"content":"                    +","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"giterator"},"content":"                    \"information to technical and nontechnical audiences, and to create comprehensible software \"","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"giterator"},"content":"                    +","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"giterator"},"content":"                    \"documentation. A student-centric approach will\\n\"","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"giterator"},"content":"                    +","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"giterator"},"content":"                    \"be adopted to encourage independent and collaborative learning while engaging students in \"","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"giterator"},"content":"                    +","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"giterator"},"content":"                    \"team-based projects. Students will learn interpersonal and intercultural\\n\"","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"giterator"},"content":"                    +","lastModifiedDate":"2021-10-05"},{"lineNumber":30,"author":{"gitId":"giterator"},"content":"                    \"communication skills as well as hone their oral and written communication skills. \"","lastModifiedDate":"2021-10-05"},{"lineNumber":31,"author":{"gitId":"giterator"},"content":"                    +","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"giterator"},"content":"                    \"Assessment modes include a variety of oral and written communication tasks such as reports, \"","lastModifiedDate":"2021-10-05"},{"lineNumber":33,"author":{"gitId":"giterator"},"content":"                    +","lastModifiedDate":"2021-10-05"},{"lineNumber":34,"author":{"gitId":"giterator"},"content":"                    \"software guides, oral presentations, software demonstrations and project blogs.\",","lastModifiedDate":"2021-10-05"},{"lineNumber":35,"author":{"gitId":"saravanamani1999"},"content":"            \"Effective Communication for Computing Professionals\",","lastModifiedDate":"2021-10-15"},{"lineNumber":36,"author":{"gitId":"nonrnp"},"content":"            \"Center for Engl Lang Comms\", workload, semesterData, attributes);","lastModifiedDate":"2021-11-05"},{"lineNumber":37,"author":{"gitId":"giterator"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":38,"author":{"gitId":"giterator"},"content":"    private final String invalidModuleCode \u003d \"x\";","lastModifiedDate":"2021-10-14"},{"lineNumber":39,"author":{"gitId":"giterator"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":40,"author":{"gitId":"giterator"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"giterator"},"content":"    @BeforeAll","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"giterator"},"content":"    public static void setUp() {","lastModifiedDate":"2021-10-11"},{"lineNumber":43,"author":{"gitId":"giterator"},"content":"        moduleDb.initModuleDb();","lastModifiedDate":"2021-10-14"},{"lineNumber":44,"author":{"gitId":"nonrnp"},"content":"        attributes.addProperty(\"su\", true);","lastModifiedDate":"2021-11-05"},{"lineNumber":45,"author":{"gitId":"giterator"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":46,"author":{"gitId":"giterator"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":47,"author":{"gitId":"giterator"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":48,"author":{"gitId":"giterator"},"content":"    public void getModuleInfo_validModuleCode_moduleDetails() {","lastModifiedDate":"2021-10-05"},{"lineNumber":49,"author":{"gitId":"giterator"},"content":"        ModuleDetails mod \u003d moduleDb.getModuleInfo(testModule.getModuleCode());","lastModifiedDate":"2021-10-14"},{"lineNumber":50,"author":{"gitId":"giterator"},"content":"        assertEquals(mod.toString(), testModule.toString());","lastModifiedDate":"2021-10-14"},{"lineNumber":51,"author":{"gitId":"giterator"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":52,"author":{"gitId":"giterator"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":53,"author":{"gitId":"saravanamani1999"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":54,"author":{"gitId":"giterator"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":55,"author":{"gitId":"giterator"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":56,"author":{"gitId":"giterator"},"content":"    public void getModuleInfo_invalidModuleCode_nullModuleDetails() {","lastModifiedDate":"2021-10-05"},{"lineNumber":57,"author":{"gitId":"giterator"},"content":"        ModuleDetails mod \u003d moduleDb.getModuleInfo(invalidModuleCode);","lastModifiedDate":"2021-10-14"},{"lineNumber":58,"author":{"gitId":"giterator"},"content":"        assertNull(mod);","lastModifiedDate":"2021-10-05"},{"lineNumber":59,"author":{"gitId":"giterator"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":60,"author":{"gitId":"giterator"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"giterator":49,"nonrnp":5,"powzx":1,"saravanamani1999":5}},{"path":"src/test/java/seedu/kolinux/module/ModuleDetailsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"powzx"},"content":"package seedu.kolinux.module;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"saravanamani1999"},"content":"import com.google.gson.JsonArray;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"nonrnp"},"content":"import com.google.gson.JsonObject;","lastModifiedDate":"2021-11-05"},{"lineNumber":5,"author":{"gitId":"saravanamani1999"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"saravanamani1999"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"saravanamani1999"},"content":"public class ModuleDetailsTest {","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"giterator"},"content":"    private static final JsonReader jsonReader \u003d new JsonReader();","lastModifiedDate":"2021-10-14"},{"lineNumber":12,"author":{"gitId":"saravanamani1999"},"content":"    private static final double[] workload \u003d new double[] {2,1,1,3,3};","lastModifiedDate":"2021-10-15"},{"lineNumber":13,"author":{"gitId":"saravanamani1999"},"content":"    private static JsonArray semesterData \u003d new JsonArray();","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"nonrnp"},"content":"    private static JsonObject attributes \u003d new JsonObject();","lastModifiedDate":"2021-11-05"},{"lineNumber":15,"author":{"gitId":"giterator"},"content":"    private static final ModuleDetails TEST_MODULE_DETAILS \u003d new ModuleDetails(\"AC5001\",","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"saravanamani1999"},"content":"            \"4\", \"Design and Environment\", \"This module introduces \"","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"saravanamani1999"},"content":"            \"the architectural history of Singapore from the pre-colonial era to the contemporary \"","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"saravanamani1999"},"content":"            \"period from an interdisciplinary perspective. It explores the social and cultural \"","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"saravanamani1999"},"content":"            \"role of architects, and to how that role has been interpreted and has evolved. It also \"","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"saravanamani1999"},"content":"            \"offers critical views on the role of architecture in constructing the national identity \"","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"saravanamani1999"},"content":"            \"of Singapore.\", \"Architectural History of Singapore\", \"Architecture\", workload,","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"nonrnp"},"content":"            semesterData, attributes);","lastModifiedDate":"2021-11-05"},{"lineNumber":28,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"giterator"},"content":"    private static final String TEST_MODULE_DETAILS_CODE \u003d \"AC5001\";","lastModifiedDate":"2021-10-14"},{"lineNumber":30,"author":{"gitId":"giterator"},"content":"    private static final String TEST_MODULE_DETAILS_CREDIT \u003d \"4\";","lastModifiedDate":"2021-10-14"},{"lineNumber":31,"author":{"gitId":"giterator"},"content":"    private static final String TEST_MODULE_DETAILS_FACULTY \u003d \"Design and Environment\";","lastModifiedDate":"2021-10-14"},{"lineNumber":32,"author":{"gitId":"giterator"},"content":"    private static final String TEST_MODULE_DETAILS_DESCRIPTION \u003d \"This module introduces \"","lastModifiedDate":"2021-10-14"},{"lineNumber":33,"author":{"gitId":"giterator"},"content":"            +","lastModifiedDate":"2021-10-14"},{"lineNumber":34,"author":{"gitId":"giterator"},"content":"            \"the architectural history of Singapore from the pre-colonial era to the contemporary \"","lastModifiedDate":"2021-10-14"},{"lineNumber":35,"author":{"gitId":"giterator"},"content":"            +","lastModifiedDate":"2021-10-14"},{"lineNumber":36,"author":{"gitId":"giterator"},"content":"            \"period from an interdisciplinary perspective. It explores the social and cultural \"","lastModifiedDate":"2021-10-14"},{"lineNumber":37,"author":{"gitId":"giterator"},"content":"            +","lastModifiedDate":"2021-10-14"},{"lineNumber":38,"author":{"gitId":"giterator"},"content":"            \"role of architects, and to how that role has been interpreted and has evolved. It also \"","lastModifiedDate":"2021-10-14"},{"lineNumber":39,"author":{"gitId":"giterator"},"content":"            +","lastModifiedDate":"2021-10-14"},{"lineNumber":40,"author":{"gitId":"giterator"},"content":"            \"offers critical views on the role of architecture in constructing the national identity \"","lastModifiedDate":"2021-10-14"},{"lineNumber":41,"author":{"gitId":"giterator"},"content":"            +","lastModifiedDate":"2021-10-14"},{"lineNumber":42,"author":{"gitId":"giterator"},"content":"            \"of Singapore.\";","lastModifiedDate":"2021-10-14"},{"lineNumber":43,"author":{"gitId":"giterator"},"content":"    private static final String TEST_MODULE_DETAILS_TITLE \u003d \"Architectural History of Singapore\";","lastModifiedDate":"2021-10-14"},{"lineNumber":44,"author":{"gitId":"giterator"},"content":"    private static final String TEST_MODULE_DETAILS_DEPARTMENT \u003d \"Architecture\";","lastModifiedDate":"2021-10-14"},{"lineNumber":45,"author":{"gitId":"giterator"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":46,"author":{"gitId":"saravanamani1999"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":47,"author":{"gitId":"giterator"},"content":"    public void getModuleCode_testModule_correctModuleCode() {","lastModifiedDate":"2021-10-14"},{"lineNumber":48,"author":{"gitId":"giterator"},"content":"        assertEquals(TEST_MODULE_DETAILS_CODE, TEST_MODULE_DETAILS.getModuleCode());","lastModifiedDate":"2021-10-14"},{"lineNumber":49,"author":{"gitId":"saravanamani1999"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":50,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":51,"author":{"gitId":"saravanamani1999"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":52,"author":{"gitId":"giterator"},"content":"    public void getModuleCredit_testModule_correctModuleCredit() {","lastModifiedDate":"2021-10-14"},{"lineNumber":53,"author":{"gitId":"giterator"},"content":"        assertEquals(TEST_MODULE_DETAILS_CREDIT, TEST_MODULE_DETAILS.getModuleCredit());","lastModifiedDate":"2021-10-14"},{"lineNumber":54,"author":{"gitId":"saravanamani1999"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":55,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":56,"author":{"gitId":"saravanamani1999"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":57,"author":{"gitId":"giterator"},"content":"    public void getModuleDescription_testModule_correctModuleDescription() {","lastModifiedDate":"2021-10-14"},{"lineNumber":58,"author":{"gitId":"giterator"},"content":"        assertEquals(TEST_MODULE_DETAILS_DESCRIPTION, TEST_MODULE_DETAILS.getDescription());","lastModifiedDate":"2021-10-14"},{"lineNumber":59,"author":{"gitId":"giterator"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":60,"author":{"gitId":"saravanamani1999"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":61,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":62,"author":{"gitId":"saravanamani1999"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":63,"author":{"gitId":"giterator"},"content":"    public void getModuleTitle_testModule_correctModuleTitle() {","lastModifiedDate":"2021-10-14"},{"lineNumber":64,"author":{"gitId":"giterator"},"content":"        assertEquals(TEST_MODULE_DETAILS_TITLE, TEST_MODULE_DETAILS.getTitle());","lastModifiedDate":"2021-10-14"},{"lineNumber":65,"author":{"gitId":"saravanamani1999"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":66,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":67,"author":{"gitId":"saravanamani1999"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":68,"author":{"gitId":"giterator"},"content":"    public void getModuleDepartment_testModule_correctModuleDepartment() {","lastModifiedDate":"2021-10-14"},{"lineNumber":69,"author":{"gitId":"giterator"},"content":"        assertEquals(TEST_MODULE_DETAILS_DEPARTMENT, TEST_MODULE_DETAILS.getDepartment());","lastModifiedDate":"2021-10-14"},{"lineNumber":70,"author":{"gitId":"saravanamani1999"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":71,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":72,"author":{"gitId":"saravanamani1999"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":73,"author":{"gitId":"giterator"},"content":"    public void getModuleFaculty_testModule_correctModuleFaculty() {","lastModifiedDate":"2021-10-14"},{"lineNumber":74,"author":{"gitId":"giterator"},"content":"        assertEquals(TEST_MODULE_DETAILS_FACULTY, TEST_MODULE_DETAILS.getFaculty());","lastModifiedDate":"2021-10-14"},{"lineNumber":75,"author":{"gitId":"saravanamani1999"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":76,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":77,"author":{"gitId":"saravanamani1999"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"giterator":32,"nonrnp":3,"powzx":1,"saravanamani1999":41}},{"path":"src/test/java/seedu/kolinux/module/ModuleListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"giterator"},"content":"package seedu.kolinux.module;","lastModifiedDate":"2021-10-14"},{"lineNumber":2,"author":{"gitId":"giterator"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":3,"author":{"gitId":"saravanamani1999"},"content":"import com.google.gson.JsonArray;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"nonrnp"},"content":"import com.google.gson.JsonObject;","lastModifiedDate":"2021-11-05"},{"lineNumber":5,"author":{"gitId":"giterator"},"content":"import org.junit.jupiter.api.BeforeAll;","lastModifiedDate":"2021-10-14"},{"lineNumber":6,"author":{"gitId":"giterator"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-14"},{"lineNumber":7,"author":{"gitId":"giterator"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-14"},{"lineNumber":8,"author":{"gitId":"giterator"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":9,"author":{"gitId":"giterator"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-14"},{"lineNumber":10,"author":{"gitId":"giterator"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":11,"author":{"gitId":"giterator"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-14"},{"lineNumber":12,"author":{"gitId":"giterator"},"content":"import static org.junit.jupiter.api.Assertions.assertArrayEquals;","lastModifiedDate":"2021-10-14"},{"lineNumber":13,"author":{"gitId":"giterator"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":14,"author":{"gitId":"giterator"},"content":"public class ModuleListTest {","lastModifiedDate":"2021-10-14"},{"lineNumber":15,"author":{"gitId":"saravanamani1999"},"content":"    private static final double[] workload \u003d new double[] {2,1,1,3,3};","lastModifiedDate":"2021-10-15"},{"lineNumber":16,"author":{"gitId":"saravanamani1999"},"content":"    private static JsonArray semesterData \u003d new JsonArray();","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"nonrnp"},"content":"    private static JsonObject attributes \u003d new JsonObject();","lastModifiedDate":"2021-11-05"},{"lineNumber":18,"author":{"gitId":"giterator"},"content":"    private static final ModuleDetails TEST_MODULE_DETAILS \u003d new ModuleDetails(\"AC5001\",","lastModifiedDate":"2021-10-14"},{"lineNumber":19,"author":{"gitId":"giterator"},"content":"            \"4\", \"Design and Environment\", \"This module introduces \"","lastModifiedDate":"2021-10-14"},{"lineNumber":20,"author":{"gitId":"giterator"},"content":"            +","lastModifiedDate":"2021-10-14"},{"lineNumber":21,"author":{"gitId":"giterator"},"content":"            \"the architectural history of Singapore from the pre-colonial era to the contemporary \"","lastModifiedDate":"2021-10-14"},{"lineNumber":22,"author":{"gitId":"giterator"},"content":"            +","lastModifiedDate":"2021-10-14"},{"lineNumber":23,"author":{"gitId":"giterator"},"content":"            \"period from an interdisciplinary perspective. It explores the social and cultural \"","lastModifiedDate":"2021-10-14"},{"lineNumber":24,"author":{"gitId":"giterator"},"content":"            +","lastModifiedDate":"2021-10-14"},{"lineNumber":25,"author":{"gitId":"giterator"},"content":"            \"role of architects, and to how that role has been interpreted and has evolved. It also \"","lastModifiedDate":"2021-10-14"},{"lineNumber":26,"author":{"gitId":"giterator"},"content":"            +","lastModifiedDate":"2021-10-14"},{"lineNumber":27,"author":{"gitId":"giterator"},"content":"            \"offers critical views on the role of architecture in constructing the national identity \"","lastModifiedDate":"2021-10-14"},{"lineNumber":28,"author":{"gitId":"giterator"},"content":"            +","lastModifiedDate":"2021-10-14"},{"lineNumber":29,"author":{"gitId":"saravanamani1999"},"content":"            \"of Singapore.\", \"Architectural History of Singapore\", \"Architecture\",","lastModifiedDate":"2021-10-17"},{"lineNumber":30,"author":{"gitId":"nonrnp"},"content":"            workload, semesterData, attributes);","lastModifiedDate":"2021-11-05"},{"lineNumber":31,"author":{"gitId":"giterator"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":32,"author":{"gitId":"giterator"},"content":"    private static final String INVALID_MODULE_CODE \u003d \"x\";","lastModifiedDate":"2021-10-14"},{"lineNumber":33,"author":{"gitId":"giterator"},"content":"    private static final ModuleDb moduleDb \u003d new ModuleDb();","lastModifiedDate":"2021-10-14"},{"lineNumber":34,"author":{"gitId":"giterator"},"content":"    private static final ModuleList moduleList \u003d new ModuleList();","lastModifiedDate":"2021-10-14"},{"lineNumber":35,"author":{"gitId":"giterator"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":36,"author":{"gitId":"giterator"},"content":"    @BeforeAll","lastModifiedDate":"2021-10-14"},{"lineNumber":37,"author":{"gitId":"giterator"},"content":"    public static void initModuleDb() {","lastModifiedDate":"2021-10-14"},{"lineNumber":38,"author":{"gitId":"giterator"},"content":"        moduleDb.initModuleDb();","lastModifiedDate":"2021-10-14"},{"lineNumber":39,"author":{"gitId":"giterator"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":40,"author":{"gitId":"giterator"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":41,"author":{"gitId":"giterator"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-14"},{"lineNumber":42,"author":{"gitId":"giterator"},"content":"    public void clear() {","lastModifiedDate":"2021-10-14"},{"lineNumber":43,"author":{"gitId":"giterator"},"content":"        moduleList.clear();","lastModifiedDate":"2021-10-14"},{"lineNumber":44,"author":{"gitId":"giterator"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":45,"author":{"gitId":"giterator"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":46,"author":{"gitId":"giterator"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":47,"author":{"gitId":"giterator"},"content":"    public void storeModuleByCode_newValidModuleCode_validStoredModule() {","lastModifiedDate":"2021-10-14"},{"lineNumber":48,"author":{"gitId":"giterator"},"content":"        moduleList.addModuleByCode(TEST_MODULE_DETAILS.getModuleCode(), moduleDb);","lastModifiedDate":"2021-11-02"},{"lineNumber":49,"author":{"gitId":"giterator"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":50,"author":{"gitId":"giterator"},"content":"        int listLength \u003d moduleList.getMyModulesSize();","lastModifiedDate":"2021-10-14"},{"lineNumber":51,"author":{"gitId":"giterator"},"content":"        ArrayList\u003cModuleDetails\u003e list \u003d moduleList.getMyModules();","lastModifiedDate":"2021-10-14"},{"lineNumber":52,"author":{"gitId":"giterator"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":53,"author":{"gitId":"giterator"},"content":"        assertEquals(TEST_MODULE_DETAILS.toString(), list.get(listLength - 1).toString());","lastModifiedDate":"2021-10-14"},{"lineNumber":54,"author":{"gitId":"giterator"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":55,"author":{"gitId":"giterator"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":56,"author":{"gitId":"giterator"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":57,"author":{"gitId":"giterator"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":58,"author":{"gitId":"giterator"},"content":"    public void storeModuleByCode_invalidModuleCode_emptyMyModulesList() {","lastModifiedDate":"2021-10-14"},{"lineNumber":59,"author":{"gitId":"giterator"},"content":"        moduleList.addModuleByCode(INVALID_MODULE_CODE, moduleDb);","lastModifiedDate":"2021-11-02"},{"lineNumber":60,"author":{"gitId":"giterator"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":61,"author":{"gitId":"giterator"},"content":"        ArrayList\u003cModuleDetails\u003e list \u003d moduleList.getMyModules();","lastModifiedDate":"2021-10-14"},{"lineNumber":62,"author":{"gitId":"giterator"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":63,"author":{"gitId":"giterator"},"content":"        assertArrayEquals(list.toArray(), new ArrayList\u003cModuleDetails\u003e().toArray());","lastModifiedDate":"2021-10-14"},{"lineNumber":64,"author":{"gitId":"giterator"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":65,"author":{"gitId":"giterator"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":66,"author":{"gitId":"giterator"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":67,"author":{"gitId":"giterator"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":68,"author":{"gitId":"giterator"},"content":"    public void storeModuleByCode_existingValidModuleCode_uniqueModulesInMyModulesList() {","lastModifiedDate":"2021-10-14"},{"lineNumber":69,"author":{"gitId":"giterator"},"content":"        moduleList.addModuleByCode(TEST_MODULE_DETAILS.getModuleCode(), moduleDb);","lastModifiedDate":"2021-11-02"},{"lineNumber":70,"author":{"gitId":"giterator"},"content":"        moduleList.addModuleByCode(TEST_MODULE_DETAILS.getModuleCode(), moduleDb);","lastModifiedDate":"2021-11-02"},{"lineNumber":71,"author":{"gitId":"giterator"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":72,"author":{"gitId":"giterator"},"content":"        int length \u003d moduleList.getMyModulesSize();","lastModifiedDate":"2021-10-14"},{"lineNumber":73,"author":{"gitId":"giterator"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":74,"author":{"gitId":"giterator"},"content":"        assertEquals(1, length);","lastModifiedDate":"2021-10-14"},{"lineNumber":75,"author":{"gitId":"giterator"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":76,"author":{"gitId":"giterator"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":77,"author":{"gitId":"giterator"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":78,"author":{"gitId":"giterator"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":79,"author":{"gitId":"giterator"},"content":"    public void deleteModuleByCode_existingModuleCode_emptyMyModulesList() {","lastModifiedDate":"2021-10-14"},{"lineNumber":80,"author":{"gitId":"giterator"},"content":"        moduleList.addModuleByCode(TEST_MODULE_DETAILS.getModuleCode(), moduleDb);","lastModifiedDate":"2021-11-02"},{"lineNumber":81,"author":{"gitId":"giterator"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":82,"author":{"gitId":"giterator"},"content":"        moduleList.deleteModuleByCode(TEST_MODULE_DETAILS.getModuleCode());","lastModifiedDate":"2021-10-14"},{"lineNumber":83,"author":{"gitId":"giterator"},"content":"        ArrayList\u003cModuleDetails\u003e list \u003d moduleList.getMyModules();","lastModifiedDate":"2021-10-14"},{"lineNumber":84,"author":{"gitId":"giterator"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":85,"author":{"gitId":"giterator"},"content":"        assertArrayEquals(list.toArray(), new ArrayList\u003cModuleDetails\u003e().toArray());","lastModifiedDate":"2021-10-14"},{"lineNumber":86,"author":{"gitId":"giterator"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":87,"author":{"gitId":"giterator"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":88,"author":{"gitId":"giterator"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":89,"author":{"gitId":"giterator"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":90,"author":{"gitId":"giterator"},"content":"    public void deleteModuleByCode_nonExistentModuleCode_unchangedMyModulesList() {","lastModifiedDate":"2021-10-14"},{"lineNumber":91,"author":{"gitId":"giterator"},"content":"        moduleList.addModuleByCode(TEST_MODULE_DETAILS.getModuleCode(), moduleDb);","lastModifiedDate":"2021-11-02"},{"lineNumber":92,"author":{"gitId":"giterator"},"content":"        ArrayList\u003cModuleDetails\u003e listBeforeDelete \u003d moduleList.getMyModules();","lastModifiedDate":"2021-10-14"},{"lineNumber":93,"author":{"gitId":"giterator"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":94,"author":{"gitId":"giterator"},"content":"        moduleList.deleteModuleByCode(INVALID_MODULE_CODE);","lastModifiedDate":"2021-10-14"},{"lineNumber":95,"author":{"gitId":"giterator"},"content":"        ArrayList\u003cModuleDetails\u003e listAfterDelete \u003d moduleList.getMyModules();","lastModifiedDate":"2021-10-14"},{"lineNumber":96,"author":{"gitId":"giterator"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":97,"author":{"gitId":"giterator"},"content":"        assertArrayEquals(listAfterDelete.toArray(), listBeforeDelete.toArray());","lastModifiedDate":"2021-10-14"},{"lineNumber":98,"author":{"gitId":"giterator"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":99,"author":{"gitId":"giterator"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":100,"author":{"gitId":"giterator"},"content":"}","lastModifiedDate":"2021-10-14"}],"authorContributionMap":{"giterator":93,"nonrnp":3,"saravanamani1999":4}},{"path":"src/test/java/seedu/kolinux/planner/EventTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"powzx"},"content":"package seedu.kolinux.planner;","lastModifiedDate":"2021-11-04"},{"lineNumber":2,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":3,"author":{"gitId":"powzx"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-11-04"},{"lineNumber":4,"author":{"gitId":"powzx"},"content":"import seedu.kolinux.exceptions.KolinuxException;","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":6,"author":{"gitId":"powzx"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":8,"author":{"gitId":"powzx"},"content":"public class EventTest {","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":10,"author":{"gitId":"powzx"},"content":"    private static final String EVENT_DATA_STRING \u003d \"Some data | 2021-10-25|1200| 1500\";","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"powzx"},"content":"    private static final String CORRUPTED_DATA_STRING \u003d \"some corrupted data||0x|[]*\";","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"powzx"},"content":"    private static final String EVENT_FROM_DATA \u003d \"12:00 - 15:00 Some data\";","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"powzx"},"content":"    private static final String DATE_FORMAT_ERROR \u003d \"Please provide a valid date format. Format: yyyy-mm-dd\";","lastModifiedDate":"2021-11-05"},{"lineNumber":15,"author":{"gitId":"powzx"},"content":"    private static final String DATE_VALIDITY_ERROR \u003d \"This date does not exist. Please try again.\";","lastModifiedDate":"2021-11-05"},{"lineNumber":16,"author":{"gitId":"powzx"},"content":"    private static final String TIME_FORMAT_ERROR \u003d \"Please provide a valid time format. Format: hhMM\";","lastModifiedDate":"2021-11-05"},{"lineNumber":17,"author":{"gitId":"powzx"},"content":"    private static final String TIME_VALIDITY_ERROR \u003d \"This time is not valid. Please try again.\";","lastModifiedDate":"2021-11-05"},{"lineNumber":18,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":19,"author":{"gitId":"powzx"},"content":"    private static final String[][] INVALID_EVENT_ARGUMENTS","lastModifiedDate":"2021-11-05"},{"lineNumber":20,"author":{"gitId":"powzx"},"content":"            \u003d new String[][]{{\"wrong date format\", \"20211010\", \"1900\", \"2100\"},","lastModifiedDate":"2021-11-05"},{"lineNumber":21,"author":{"gitId":"powzx"},"content":"                {\"invalid date\", \"2021-02-29\", \"1900\", \"2100\"},","lastModifiedDate":"2021-11-05"},{"lineNumber":22,"author":{"gitId":"powzx"},"content":"                {\"wrong time format\", \"2021-10-10\", \"7pm\", \"2200\"},","lastModifiedDate":"2021-11-05"},{"lineNumber":23,"author":{"gitId":"powzx"},"content":"                {\"invalid time\", \"2021-10-10\", \"1900\", \"1969\"}};","lastModifiedDate":"2021-11-05"},{"lineNumber":24,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":25,"author":{"gitId":"powzx"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":26,"author":{"gitId":"powzx"},"content":"    public void constructEvent_eventDataString_eventConstructed() throws KolinuxException {","lastModifiedDate":"2021-11-04"},{"lineNumber":27,"author":{"gitId":"powzx"},"content":"        Event event \u003d new Event(EVENT_DATA_STRING);","lastModifiedDate":"2021-11-04"},{"lineNumber":28,"author":{"gitId":"powzx"},"content":"        assertEquals(EVENT_FROM_DATA, event.toString());","lastModifiedDate":"2021-11-04"},{"lineNumber":29,"author":{"gitId":"powzx"},"content":"        assertEquals(\"2021-10-25\", event.getDate());","lastModifiedDate":"2021-11-04"},{"lineNumber":30,"author":{"gitId":"powzx"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":31,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":32,"author":{"gitId":"powzx"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":33,"author":{"gitId":"powzx"},"content":"    public void constructEvent_corruptedEventDataString_exceptionThrown() {","lastModifiedDate":"2021-11-04"},{"lineNumber":34,"author":{"gitId":"powzx"},"content":"        try {","lastModifiedDate":"2021-11-04"},{"lineNumber":35,"author":{"gitId":"powzx"},"content":"            new Event(CORRUPTED_DATA_STRING);","lastModifiedDate":"2021-11-04"},{"lineNumber":36,"author":{"gitId":"powzx"},"content":"        } catch (KolinuxException exception) {","lastModifiedDate":"2021-11-04"},{"lineNumber":37,"author":{"gitId":"powzx"},"content":"            assertEquals(DATE_FORMAT_ERROR, exception.getMessage());","lastModifiedDate":"2021-11-05"},{"lineNumber":38,"author":{"gitId":"powzx"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":39,"author":{"gitId":"powzx"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":40,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":41,"author":{"gitId":"powzx"},"content":"    @Test","lastModifiedDate":"2021-11-05"},{"lineNumber":42,"author":{"gitId":"powzx"},"content":"    public void constructEvent_wrongDateFormat_exceptionThrown() {","lastModifiedDate":"2021-11-05"},{"lineNumber":43,"author":{"gitId":"powzx"},"content":"        try {","lastModifiedDate":"2021-11-05"},{"lineNumber":44,"author":{"gitId":"powzx"},"content":"            new Event(INVALID_EVENT_ARGUMENTS[0]);","lastModifiedDate":"2021-11-05"},{"lineNumber":45,"author":{"gitId":"powzx"},"content":"        } catch (KolinuxException exception) {","lastModifiedDate":"2021-11-05"},{"lineNumber":46,"author":{"gitId":"powzx"},"content":"            assertEquals(DATE_FORMAT_ERROR, exception.getMessage());","lastModifiedDate":"2021-11-05"},{"lineNumber":47,"author":{"gitId":"powzx"},"content":"        }","lastModifiedDate":"2021-11-05"},{"lineNumber":48,"author":{"gitId":"powzx"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":49,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":50,"author":{"gitId":"powzx"},"content":"    @Test","lastModifiedDate":"2021-11-05"},{"lineNumber":51,"author":{"gitId":"powzx"},"content":"    public void constructEvent_invalidDate_exceptionThrown() {","lastModifiedDate":"2021-11-05"},{"lineNumber":52,"author":{"gitId":"powzx"},"content":"        try {","lastModifiedDate":"2021-11-05"},{"lineNumber":53,"author":{"gitId":"powzx"},"content":"            new Event(INVALID_EVENT_ARGUMENTS[1]);","lastModifiedDate":"2021-11-05"},{"lineNumber":54,"author":{"gitId":"powzx"},"content":"        } catch (KolinuxException exception) {","lastModifiedDate":"2021-11-05"},{"lineNumber":55,"author":{"gitId":"powzx"},"content":"            assertEquals(DATE_VALIDITY_ERROR, exception.getMessage());","lastModifiedDate":"2021-11-05"},{"lineNumber":56,"author":{"gitId":"powzx"},"content":"        }","lastModifiedDate":"2021-11-05"},{"lineNumber":57,"author":{"gitId":"powzx"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":58,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":59,"author":{"gitId":"powzx"},"content":"    @Test","lastModifiedDate":"2021-11-05"},{"lineNumber":60,"author":{"gitId":"powzx"},"content":"    public void constructEvent_wrongTimeFormat_exceptionThrown() {","lastModifiedDate":"2021-11-05"},{"lineNumber":61,"author":{"gitId":"powzx"},"content":"        try {","lastModifiedDate":"2021-11-05"},{"lineNumber":62,"author":{"gitId":"powzx"},"content":"            new Event(INVALID_EVENT_ARGUMENTS[2]);","lastModifiedDate":"2021-11-05"},{"lineNumber":63,"author":{"gitId":"powzx"},"content":"        } catch (KolinuxException exception) {","lastModifiedDate":"2021-11-05"},{"lineNumber":64,"author":{"gitId":"powzx"},"content":"            assertEquals(TIME_FORMAT_ERROR, exception.getMessage());","lastModifiedDate":"2021-11-05"},{"lineNumber":65,"author":{"gitId":"powzx"},"content":"        }","lastModifiedDate":"2021-11-05"},{"lineNumber":66,"author":{"gitId":"powzx"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":67,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":68,"author":{"gitId":"powzx"},"content":"    @Test","lastModifiedDate":"2021-11-05"},{"lineNumber":69,"author":{"gitId":"powzx"},"content":"    public void constructEvent_invalidTime_exceptionThrown() {","lastModifiedDate":"2021-11-05"},{"lineNumber":70,"author":{"gitId":"powzx"},"content":"        try {","lastModifiedDate":"2021-11-05"},{"lineNumber":71,"author":{"gitId":"powzx"},"content":"            new Event(INVALID_EVENT_ARGUMENTS[3]);","lastModifiedDate":"2021-11-05"},{"lineNumber":72,"author":{"gitId":"powzx"},"content":"        } catch (KolinuxException exception) {","lastModifiedDate":"2021-11-05"},{"lineNumber":73,"author":{"gitId":"powzx"},"content":"            assertEquals(TIME_VALIDITY_ERROR, exception.getMessage());","lastModifiedDate":"2021-11-05"},{"lineNumber":74,"author":{"gitId":"powzx"},"content":"        }","lastModifiedDate":"2021-11-05"},{"lineNumber":75,"author":{"gitId":"powzx"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":76,"author":{"gitId":"powzx"},"content":"}","lastModifiedDate":"2021-11-04"}],"authorContributionMap":{"powzx":76}},{"path":"src/test/java/seedu/kolinux/planner/PlannerPromptHandlerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"powzx"},"content":"package seedu.kolinux.planner;","lastModifiedDate":"2021-11-04"},{"lineNumber":2,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":3,"author":{"gitId":"powzx"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-11-04"},{"lineNumber":4,"author":{"gitId":"powzx"},"content":"import seedu.kolinux.exceptions.KolinuxException;","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"powzx"},"content":"import seedu.kolinux.module.ModuleList;","lastModifiedDate":"2021-11-04"},{"lineNumber":6,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"powzx"},"content":"import java.io.ByteArrayInputStream;","lastModifiedDate":"2021-11-04"},{"lineNumber":8,"author":{"gitId":"powzx"},"content":"import java.io.InputStream;","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":10,"author":{"gitId":"powzx"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"powzx"},"content":"public class PlannerPromptHandlerTest {","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"powzx"},"content":"    private ModuleList moduleList \u003d new ModuleList();","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"powzx"},"content":"    private Planner planner \u003d new Planner(moduleList);","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"powzx"},"content":"    private PlannerPromptHandler plannerPromptHandler;","lastModifiedDate":"2021-11-04"},{"lineNumber":17,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":18,"author":{"gitId":"powzx"},"content":"    private static final String TIME_CONFLICT_PROMPT \u003d","lastModifiedDate":"2021-11-04"},{"lineNumber":19,"author":{"gitId":"powzx"},"content":"            \"You already have an event ongoing for that time period, do you still want to add?\\n\"","lastModifiedDate":"2021-11-04"},{"lineNumber":20,"author":{"gitId":"powzx"},"content":"                    + \"You may enter \u0027n\u0027 to cancel and proceed to list the events on the date to see what you already \"","lastModifiedDate":"2021-11-04"},{"lineNumber":21,"author":{"gitId":"powzx"},"content":"                    + \"planned on that day\\n\"","lastModifiedDate":"2021-11-04"},{"lineNumber":22,"author":{"gitId":"powzx"},"content":"                    + \"Or you may enter \u0027y\u0027 to add the event\";","lastModifiedDate":"2021-11-04"},{"lineNumber":23,"author":{"gitId":"powzx"},"content":"    private static final String CANCEL_ADD_ERROR \u003d \"Operation cancelled, no events were added.\";","lastModifiedDate":"2021-11-04"},{"lineNumber":24,"author":{"gitId":"powzx"},"content":"    private static final String INVALID_REPLY_ERROR \u003d \"Invalid key entered! Please enter \u0027y\u0027 or \u0027n\u0027.\";","lastModifiedDate":"2021-11-04"},{"lineNumber":25,"author":{"gitId":"powzx"},"content":"    private static final String ENTER_ID_PROMPT \u003d","lastModifiedDate":"2021-11-04"},{"lineNumber":26,"author":{"gitId":"powzx"},"content":"            \"Please enter the ID of the event you wish to delete (Enter \u0027n\u0027 to terminate this operation):\";","lastModifiedDate":"2021-11-04"},{"lineNumber":27,"author":{"gitId":"powzx"},"content":"    private static final String CANCEL_DELETE_ERROR \u003d \"Operation cancelled, no events were deleted.\";","lastModifiedDate":"2021-11-04"},{"lineNumber":28,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":29,"author":{"gitId":"powzx"},"content":"    private static final String[][] VALID_EVENT_ARGUMENTS","lastModifiedDate":"2021-11-04"},{"lineNumber":30,"author":{"gitId":"powzx"},"content":"            \u003d new String[][]{{\"Pop Quiz 3\", \"2021-10-26\", \"1500\", \"1515\"},","lastModifiedDate":"2021-11-04"},{"lineNumber":31,"author":{"gitId":"powzx"},"content":"                {\"Pop Quiz 4\", \"2021-10-26\", \"1530\", \"2000\"},","lastModifiedDate":"2021-11-04"},{"lineNumber":32,"author":{"gitId":"powzx"},"content":"                {\"Pop Quiz 5\", \"2021-10-26\", \"2000\", \"2130\"}};","lastModifiedDate":"2021-11-04"},{"lineNumber":33,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":34,"author":{"gitId":"powzx"},"content":"    private static final String VALID_LIST_1 \u003d \"\\n15:00 - 15:15 Pop Quiz 3\";","lastModifiedDate":"2021-11-04"},{"lineNumber":35,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":36,"author":{"gitId":"powzx"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":37,"author":{"gitId":"powzx"},"content":"    public void handleEventConflict_validEventArguments_eventAddedWithConflictAllowed() throws KolinuxException {","lastModifiedDate":"2021-11-04"},{"lineNumber":38,"author":{"gitId":"powzx"},"content":"        planner.clearEvents();","lastModifiedDate":"2021-11-04"},{"lineNumber":39,"author":{"gitId":"powzx"},"content":"        String input \u003d \"y\";","lastModifiedDate":"2021-11-04"},{"lineNumber":40,"author":{"gitId":"powzx"},"content":"        InputStream in \u003d new ByteArrayInputStream(input.getBytes());","lastModifiedDate":"2021-11-04"},{"lineNumber":41,"author":{"gitId":"powzx"},"content":"        System.setIn(in);","lastModifiedDate":"2021-11-04"},{"lineNumber":42,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":43,"author":{"gitId":"powzx"},"content":"        plannerPromptHandler \u003d new PlannerPromptHandler(planner, TIME_CONFLICT_PROMPT);","lastModifiedDate":"2021-11-04"},{"lineNumber":44,"author":{"gitId":"powzx"},"content":"        Event event \u003d new Event(VALID_EVENT_ARGUMENTS[0]);","lastModifiedDate":"2021-11-04"},{"lineNumber":45,"author":{"gitId":"powzx"},"content":"        plannerPromptHandler.handleEventConflict(event);","lastModifiedDate":"2021-11-04"},{"lineNumber":46,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":47,"author":{"gitId":"powzx"},"content":"        assertEquals(TIME_CONFLICT_PROMPT, plannerPromptHandler.toString());","lastModifiedDate":"2021-11-04"},{"lineNumber":48,"author":{"gitId":"powzx"},"content":"        assertEquals(VALID_LIST_1, planner.listEvents(\"2021-10-26\", false));","lastModifiedDate":"2021-11-04"},{"lineNumber":49,"author":{"gitId":"powzx"},"content":"        planner.clearEvents();","lastModifiedDate":"2021-11-04"},{"lineNumber":50,"author":{"gitId":"powzx"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":51,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":52,"author":{"gitId":"powzx"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":53,"author":{"gitId":"powzx"},"content":"    public void handleEventConflict_validEventArguments_eventConflictDenied() {","lastModifiedDate":"2021-11-04"},{"lineNumber":54,"author":{"gitId":"powzx"},"content":"        String input \u003d \"n\";","lastModifiedDate":"2021-11-04"},{"lineNumber":55,"author":{"gitId":"powzx"},"content":"        InputStream in \u003d new ByteArrayInputStream(input.getBytes());","lastModifiedDate":"2021-11-04"},{"lineNumber":56,"author":{"gitId":"powzx"},"content":"        System.setIn(in);","lastModifiedDate":"2021-11-04"},{"lineNumber":57,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":58,"author":{"gitId":"powzx"},"content":"        try {","lastModifiedDate":"2021-11-04"},{"lineNumber":59,"author":{"gitId":"powzx"},"content":"            plannerPromptHandler \u003d new PlannerPromptHandler(planner, TIME_CONFLICT_PROMPT);","lastModifiedDate":"2021-11-04"},{"lineNumber":60,"author":{"gitId":"powzx"},"content":"            Event event \u003d new Event(VALID_EVENT_ARGUMENTS[0]);","lastModifiedDate":"2021-11-04"},{"lineNumber":61,"author":{"gitId":"powzx"},"content":"            plannerPromptHandler.handleEventConflict(event);","lastModifiedDate":"2021-11-04"},{"lineNumber":62,"author":{"gitId":"powzx"},"content":"        } catch (KolinuxException exception) {","lastModifiedDate":"2021-11-04"},{"lineNumber":63,"author":{"gitId":"powzx"},"content":"            assertEquals(CANCEL_ADD_ERROR, exception.getMessage());","lastModifiedDate":"2021-11-04"},{"lineNumber":64,"author":{"gitId":"powzx"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":65,"author":{"gitId":"powzx"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":66,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":67,"author":{"gitId":"powzx"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":68,"author":{"gitId":"powzx"},"content":"    public void handleEventConflict_validEventArguments_invalidReplyButAddedEventually() throws KolinuxException {","lastModifiedDate":"2021-11-04"},{"lineNumber":69,"author":{"gitId":"powzx"},"content":"        planner.clearEvents();","lastModifiedDate":"2021-11-04"},{"lineNumber":70,"author":{"gitId":"powzx"},"content":"        String input \u003d \"you found a secret message, congrats!\" + System.getProperty(\"line.separator\") + \"y\";","lastModifiedDate":"2021-11-04"},{"lineNumber":71,"author":{"gitId":"powzx"},"content":"        InputStream in \u003d new ByteArrayInputStream(input.getBytes());","lastModifiedDate":"2021-11-04"},{"lineNumber":72,"author":{"gitId":"powzx"},"content":"        System.setIn(in);","lastModifiedDate":"2021-11-04"},{"lineNumber":73,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":74,"author":{"gitId":"powzx"},"content":"        plannerPromptHandler \u003d new PlannerPromptHandler(planner, TIME_CONFLICT_PROMPT);","lastModifiedDate":"2021-11-04"},{"lineNumber":75,"author":{"gitId":"powzx"},"content":"        Event event \u003d new Event(VALID_EVENT_ARGUMENTS[0]);","lastModifiedDate":"2021-11-04"},{"lineNumber":76,"author":{"gitId":"powzx"},"content":"        plannerPromptHandler.handleEventConflict(event);","lastModifiedDate":"2021-11-04"},{"lineNumber":77,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":78,"author":{"gitId":"powzx"},"content":"        assertEquals(INVALID_REPLY_ERROR, plannerPromptHandler.toString());","lastModifiedDate":"2021-11-04"},{"lineNumber":79,"author":{"gitId":"powzx"},"content":"        assertEquals(VALID_LIST_1, planner.listEvents(\"2021-10-26\", false));","lastModifiedDate":"2021-11-04"},{"lineNumber":80,"author":{"gitId":"powzx"},"content":"        planner.clearEvents();","lastModifiedDate":"2021-11-04"},{"lineNumber":81,"author":{"gitId":"powzx"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":82,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":83,"author":{"gitId":"powzx"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":84,"author":{"gitId":"powzx"},"content":"    public void promptForEventId_validEventList_operationCancelled() {","lastModifiedDate":"2021-11-04"},{"lineNumber":85,"author":{"gitId":"powzx"},"content":"        String input \u003d \"n\";","lastModifiedDate":"2021-11-04"},{"lineNumber":86,"author":{"gitId":"powzx"},"content":"        InputStream in \u003d new ByteArrayInputStream(input.getBytes());","lastModifiedDate":"2021-11-04"},{"lineNumber":87,"author":{"gitId":"powzx"},"content":"        System.setIn(in);","lastModifiedDate":"2021-11-04"},{"lineNumber":88,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":89,"author":{"gitId":"powzx"},"content":"        try {","lastModifiedDate":"2021-11-04"},{"lineNumber":90,"author":{"gitId":"powzx"},"content":"            plannerPromptHandler \u003d new PlannerPromptHandler(planner, ENTER_ID_PROMPT);","lastModifiedDate":"2021-11-04"},{"lineNumber":91,"author":{"gitId":"powzx"},"content":"            plannerPromptHandler.promptForEventId();","lastModifiedDate":"2021-11-04"},{"lineNumber":92,"author":{"gitId":"powzx"},"content":"        } catch (KolinuxException exception) {","lastModifiedDate":"2021-11-04"},{"lineNumber":93,"author":{"gitId":"powzx"},"content":"            assertEquals(CANCEL_DELETE_ERROR, exception.getMessage());","lastModifiedDate":"2021-11-04"},{"lineNumber":94,"author":{"gitId":"powzx"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":95,"author":{"gitId":"powzx"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":96,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":97,"author":{"gitId":"powzx"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":98,"author":{"gitId":"powzx"},"content":"    public void promptForEventId_validEventList_idReturned() throws KolinuxException {","lastModifiedDate":"2021-11-04"},{"lineNumber":99,"author":{"gitId":"powzx"},"content":"        planner.clearEvents();","lastModifiedDate":"2021-11-04"},{"lineNumber":100,"author":{"gitId":"powzx"},"content":"        planner.addEvent(new Event(VALID_EVENT_ARGUMENTS[0]), false);","lastModifiedDate":"2021-11-04"},{"lineNumber":101,"author":{"gitId":"powzx"},"content":"        planner.addEvent(new Event(VALID_EVENT_ARGUMENTS[1]), false);","lastModifiedDate":"2021-11-04"},{"lineNumber":102,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":103,"author":{"gitId":"powzx"},"content":"        Event eventToBeDeleted \u003d new Event(VALID_EVENT_ARGUMENTS[2]);","lastModifiedDate":"2021-11-04"},{"lineNumber":104,"author":{"gitId":"powzx"},"content":"        planner.addEvent(eventToBeDeleted, false);","lastModifiedDate":"2021-11-04"},{"lineNumber":105,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":106,"author":{"gitId":"powzx"},"content":"        String input \u003d eventToBeDeleted.getId();","lastModifiedDate":"2021-11-04"},{"lineNumber":107,"author":{"gitId":"powzx"},"content":"        InputStream in \u003d new ByteArrayInputStream(input.getBytes());","lastModifiedDate":"2021-11-04"},{"lineNumber":108,"author":{"gitId":"powzx"},"content":"        System.setIn(in);","lastModifiedDate":"2021-11-04"},{"lineNumber":109,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":110,"author":{"gitId":"powzx"},"content":"        plannerPromptHandler \u003d new PlannerPromptHandler(planner, ENTER_ID_PROMPT);","lastModifiedDate":"2021-11-04"},{"lineNumber":111,"author":{"gitId":"powzx"},"content":"        assertEquals(eventToBeDeleted.getId(), plannerPromptHandler.promptForEventId());","lastModifiedDate":"2021-11-04"},{"lineNumber":112,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":113,"author":{"gitId":"powzx"},"content":"        planner.clearEvents();","lastModifiedDate":"2021-11-04"},{"lineNumber":114,"author":{"gitId":"powzx"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":115,"author":{"gitId":"powzx"},"content":"}","lastModifiedDate":"2021-11-04"}],"authorContributionMap":{"powzx":115}},{"path":"src/test/java/seedu/kolinux/planner/PlannerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"powzx"},"content":"package seedu.kolinux.planner;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"powzx"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"powzx"},"content":"import seedu.kolinux.exceptions.KolinuxException;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"powzx"},"content":"import seedu.kolinux.module.ModuleDb;","lastModifiedDate":"2021-11-05"},{"lineNumber":6,"author":{"gitId":"powzx"},"content":"import seedu.kolinux.module.ModuleList;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"saravanamani1999"},"content":"import seedu.kolinux.timetable.lesson.Lecture;","lastModifiedDate":"2021-10-30"},{"lineNumber":8,"author":{"gitId":"saravanamani1999"},"content":"import seedu.kolinux.timetable.lesson.Lesson;","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"saravanamani1999"},"content":"import seedu.kolinux.timetable.Timetable;","lastModifiedDate":"2021-10-22"},{"lineNumber":10,"author":{"gitId":"saravanamani1999"},"content":"import seedu.kolinux.timetable.subcommand.AddSubCommand;","lastModifiedDate":"2021-10-23"},{"lineNumber":11,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"powzx"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-15"},{"lineNumber":13,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":14,"author":{"gitId":"powzx"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"powzx"},"content":"public class PlannerTest {","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"powzx"},"content":"    private ModuleList moduleList \u003d new ModuleList();","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"powzx"},"content":"    private Planner planner \u003d new Planner(moduleList);","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"saravanamani1999"},"content":"    private Timetable timetable \u003d new Timetable(moduleList);","lastModifiedDate":"2021-10-22"},{"lineNumber":21,"author":{"gitId":"saravanamani1999"},"content":"    private AddSubCommand addSubCommand \u003d new AddSubCommand();","lastModifiedDate":"2021-10-23"},{"lineNumber":22,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":23,"author":{"gitId":"powzx"},"content":"    private static final String[][] VALID_LESSON_ARGUMENTS","lastModifiedDate":"2021-10-18"},{"lineNumber":24,"author":{"gitId":"powzx"},"content":"            \u003d new String[][]{{\"CS2113T\", \"LEC\", \"Friday\", \"1600\", \"1800\"},","lastModifiedDate":"2021-10-18"},{"lineNumber":25,"author":{"gitId":"powzx"},"content":"                {\"CS2113T\", \"TUT\", \"Wednesday\", \"1100\", \"1200\"},","lastModifiedDate":"2021-10-18"},{"lineNumber":26,"author":{"gitId":"powzx"},"content":"                {\"CS2101\", \"LEC\", \"Friday\", \"1000\", \"1200\"}};","lastModifiedDate":"2021-10-18"},{"lineNumber":27,"author":{"gitId":"powzx"},"content":"    private static final String[][] VALID_EVENT_ARGUMENTS","lastModifiedDate":"2021-10-15"},{"lineNumber":28,"author":{"gitId":"powzx"},"content":"            \u003d new String[][]{{\"Pop Quiz 3\", \"2021-10-26\", \"1500\", \"1515\"},","lastModifiedDate":"2021-10-15"},{"lineNumber":29,"author":{"gitId":"powzx"},"content":"                {\"Pop Quiz 4\", \"2021-10-26\", \"1530\", \"2000\"},","lastModifiedDate":"2021-10-15"},{"lineNumber":30,"author":{"gitId":"powzx"},"content":"                {\"Pop Quiz 5\", \"2021-10-26\", \"2000\", \"2130\"}};","lastModifiedDate":"2021-10-15"},{"lineNumber":31,"author":{"gitId":"powzx"},"content":"    private static final String[] INVALID_EVENT_DATE_ARGUMENTS","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"powzx"},"content":"            \u003d new String[]{\"Something bad\", \"16/10/2020\", \"4pm\", \"7pm\"};","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"powzx"},"content":"    private static final String[] INVALID_EVENT_FORMAT_ARGUMENTS","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"powzx"},"content":"            \u003d new String[]{\"Something worse\", \"2021-10-26\", \"0700\"};","lastModifiedDate":"2021-10-15"},{"lineNumber":35,"author":{"gitId":"powzx"},"content":"    private static final String[] WRONG_TIME_ORDER_ARGUMENTS","lastModifiedDate":"2021-10-14"},{"lineNumber":36,"author":{"gitId":"powzx"},"content":"            \u003d new String[]{\"Go back in time\", \"2021-04-06\", \"2000\", \"1600\"};","lastModifiedDate":"2021-10-15"},{"lineNumber":37,"author":{"gitId":"powzx"},"content":"    private static final String[] ZERO_DURATION_EVENT_ARGUMENTS","lastModifiedDate":"2021-10-30"},{"lineNumber":38,"author":{"gitId":"powzx"},"content":"            \u003d new String[]{\"Zero minute\", \"2022-10-20\", \"1000\", \"1000\"};","lastModifiedDate":"2021-10-30"},{"lineNumber":39,"author":{"gitId":"powzx"},"content":"    private static final String[] EMPTY_DESCRIPTION_EVENT_ARGUMENTS","lastModifiedDate":"2021-10-30"},{"lineNumber":40,"author":{"gitId":"powzx"},"content":"            \u003d new String[]{\"\", \"2021-10-31\", \"2100\", \"2330\"};","lastModifiedDate":"2021-10-30"},{"lineNumber":41,"author":{"gitId":"powzx"},"content":"    private static final String[][] CONFLICTED_TIME_ARGUMENTS","lastModifiedDate":"2021-10-15"},{"lineNumber":42,"author":{"gitId":"powzx"},"content":"            \u003d new String[][]{{\"Do something\", \"2021-10-26\", \"1505\", \"1700\"},","lastModifiedDate":"2021-10-15"},{"lineNumber":43,"author":{"gitId":"powzx"},"content":"                {\"Do something\", \"2021-10-26\", \"1430\", \"1505\"},","lastModifiedDate":"2021-10-15"},{"lineNumber":44,"author":{"gitId":"powzx"},"content":"                {\"Do something\", \"2021-10-26\", \"1400\", \"1600\"},","lastModifiedDate":"2021-10-15"},{"lineNumber":45,"author":{"gitId":"powzx"},"content":"                {\"Do something\", \"2021-10-26\", \"1505\", \"1510\"},","lastModifiedDate":"2021-10-18"},{"lineNumber":46,"author":{"gitId":"powzx"},"content":"                {\"Conflict with lecture\", \"2021-10-22\", \"1500\", \"1700\"}};","lastModifiedDate":"2021-10-18"},{"lineNumber":47,"author":{"gitId":"powzx"},"content":"    private static final String VALID_LIST_1","lastModifiedDate":"2021-10-15"},{"lineNumber":48,"author":{"gitId":"powzx"},"content":"            \u003d \"\\n15:00 - 15:15 Pop Quiz 3\";","lastModifiedDate":"2021-10-07"},{"lineNumber":49,"author":{"gitId":"powzx"},"content":"    private static final String VALID_LIST_2","lastModifiedDate":"2021-10-15"},{"lineNumber":50,"author":{"gitId":"powzx"},"content":"            \u003d \"\\n15:00 - 15:15 Pop Quiz 3\\n\"","lastModifiedDate":"2021-10-15"},{"lineNumber":51,"author":{"gitId":"powzx"},"content":"                    + \"20:00 - 21:30 Pop Quiz 5\";","lastModifiedDate":"2021-10-15"},{"lineNumber":52,"author":{"gitId":"powzx"},"content":"    private static final String VALID_LIST_3","lastModifiedDate":"2021-10-16"},{"lineNumber":53,"author":{"gitId":"powzx"},"content":"            \u003d \"\\n15:00 - 15:15 Pop Quiz 3\\n\"","lastModifiedDate":"2021-10-16"},{"lineNumber":54,"author":{"gitId":"powzx"},"content":"                    + \"15:05 - 15:10 Do something\";","lastModifiedDate":"2021-10-16"},{"lineNumber":55,"author":{"gitId":"powzx"},"content":"    private static final String VALID_LIST_4","lastModifiedDate":"2021-10-18"},{"lineNumber":56,"author":{"gitId":"powzx"},"content":"            \u003d \"\\n15:00 - 17:00 Conflict with lecture\\n\"","lastModifiedDate":"2021-10-18"},{"lineNumber":57,"author":{"gitId":"powzx"},"content":"                    + \"16:00 - 18:00 CS2113T LEC\";","lastModifiedDate":"2021-10-18"},{"lineNumber":58,"author":{"gitId":"powzx"},"content":"    private static final String VALID_LIST_5","lastModifiedDate":"2021-10-18"},{"lineNumber":59,"author":{"gitId":"powzx"},"content":"            \u003d \"\\n15:00 - 17:00 Conflict with lecture\";","lastModifiedDate":"2021-10-26"},{"lineNumber":60,"author":{"gitId":"powzx"},"content":"    private static final String VALID_LIST_6","lastModifiedDate":"2021-11-05"},{"lineNumber":61,"author":{"gitId":"powzx"},"content":"            \u003d \"\\n16:00 - 18:00 CS2113T LEC\";","lastModifiedDate":"2021-11-05"},{"lineNumber":62,"author":{"gitId":"powzx"},"content":"    private static final String VALID_LIST_7","lastModifiedDate":"2021-11-05"},{"lineNumber":63,"author":{"gitId":"powzx"},"content":"            \u003d \"\\n09:00 - 11:00 CS2113T Exam\";","lastModifiedDate":"2021-11-05"},{"lineNumber":64,"author":{"gitId":"powzx"},"content":"    private static final String FORMAT_ERROR \u003d","lastModifiedDate":"2021-10-07"},{"lineNumber":65,"author":{"gitId":"powzx"},"content":"            \"Please check the format of your input! Format: planner add DESCRIPTION/DATE/START_TIME/END_TIME\";","lastModifiedDate":"2021-10-07"},{"lineNumber":66,"author":{"gitId":"powzx"},"content":"    private static final String DATE_FORMAT_ERROR \u003d \"Please provide a valid date format. Format: yyyy-mm-dd\";","lastModifiedDate":"2021-11-05"},{"lineNumber":67,"author":{"gitId":"powzx"},"content":"    private static final String TIME_ORDER_ERROR \u003d","lastModifiedDate":"2021-10-14"},{"lineNumber":68,"author":{"gitId":"powzx"},"content":"            \"Please check the format of the time! The end time is earlier than the start time...\";","lastModifiedDate":"2021-10-14"},{"lineNumber":69,"author":{"gitId":"powzx"},"content":"    private static final String TIME_SAME_ERROR \u003d","lastModifiedDate":"2021-10-30"},{"lineNumber":70,"author":{"gitId":"powzx"},"content":"            \"Your event cannot start and end at the same time!\";","lastModifiedDate":"2021-10-30"},{"lineNumber":71,"author":{"gitId":"powzx"},"content":"    private static final String TIME_CONFLICT_ERROR \u003d","lastModifiedDate":"2021-10-14"},{"lineNumber":72,"author":{"gitId":"powzx"},"content":"            \"You already have an event ongoing for that time period, do you still want to add?\\n\"","lastModifiedDate":"2021-11-01"},{"lineNumber":73,"author":{"gitId":"powzx"},"content":"                    + \"You may enter \u0027n\u0027 to cancel and proceed to list the events on the date to see what you already \"","lastModifiedDate":"2021-11-01"},{"lineNumber":74,"author":{"gitId":"powzx"},"content":"                    + \"planned on that day\\n\"","lastModifiedDate":"2021-11-01"},{"lineNumber":75,"author":{"gitId":"powzx"},"content":"                    + \"Or you may enter \u0027y\u0027 to add the event\";","lastModifiedDate":"2021-11-01"},{"lineNumber":76,"author":{"gitId":"powzx"},"content":"    private static final String EMPTY_DESCRIPTION_ERROR \u003d","lastModifiedDate":"2021-10-30"},{"lineNumber":77,"author":{"gitId":"powzx"},"content":"            \"Please provide a description for your event!\";","lastModifiedDate":"2021-10-30"},{"lineNumber":78,"author":{"gitId":"powzx"},"content":"    private static final String EMPTY_LIST_MESSAGE \u003d \"There are no events planned for this date yet!\";","lastModifiedDate":"2021-11-04"},{"lineNumber":79,"author":{"gitId":"powzx"},"content":"    private static final String INVALID_ID_ERROR \u003d \"Invalid ID given, no events were deleted.\";","lastModifiedDate":"2021-11-04"},{"lineNumber":80,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":81,"author":{"gitId":"powzx"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":82,"author":{"gitId":"powzx"},"content":"    public void addEvent_validEventInput_eventAdded() throws KolinuxException {","lastModifiedDate":"2021-10-07"},{"lineNumber":83,"author":{"gitId":"powzx"},"content":"        planner.clearEvents();","lastModifiedDate":"2021-10-14"},{"lineNumber":84,"author":{"gitId":"powzx"},"content":"        Event validEvent \u003d new Event(VALID_EVENT_ARGUMENTS[0]);","lastModifiedDate":"2021-10-15"},{"lineNumber":85,"author":{"gitId":"powzx"},"content":"        planner.addEvent(validEvent, false);","lastModifiedDate":"2021-10-16"},{"lineNumber":86,"author":{"gitId":"powzx"},"content":"        assertEquals(VALID_LIST_1, planner.listEvents(\"2021-10-26\", false));","lastModifiedDate":"2021-10-15"},{"lineNumber":87,"author":{"gitId":"powzx"},"content":"        planner.clearEvents();","lastModifiedDate":"2021-10-14"},{"lineNumber":88,"author":{"gitId":"powzx"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":89,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":90,"author":{"gitId":"powzx"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":91,"author":{"gitId":"powzx"},"content":"    public void addEvent_invalidEventDateInput_eventNotAdded() {","lastModifiedDate":"2021-10-06"},{"lineNumber":92,"author":{"gitId":"powzx"},"content":"        try {","lastModifiedDate":"2021-10-06"},{"lineNumber":93,"author":{"gitId":"powzx"},"content":"            Event invalidEvent \u003d new Event(INVALID_EVENT_DATE_ARGUMENTS);","lastModifiedDate":"2021-10-07"},{"lineNumber":94,"author":{"gitId":"powzx"},"content":"            planner.addEvent(invalidEvent, false);","lastModifiedDate":"2021-10-16"},{"lineNumber":95,"author":{"gitId":"powzx"},"content":"        } catch (KolinuxException exception) {","lastModifiedDate":"2021-10-07"},{"lineNumber":96,"author":{"gitId":"powzx"},"content":"            assertEquals(DATE_FORMAT_ERROR, exception.getMessage());","lastModifiedDate":"2021-11-05"},{"lineNumber":97,"author":{"gitId":"powzx"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":98,"author":{"gitId":"powzx"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":99,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":100,"author":{"gitId":"powzx"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":101,"author":{"gitId":"powzx"},"content":"    public void addEvent_invalidEventFormatInput_eventNotAdded() {","lastModifiedDate":"2021-10-06"},{"lineNumber":102,"author":{"gitId":"powzx"},"content":"        try {","lastModifiedDate":"2021-10-06"},{"lineNumber":103,"author":{"gitId":"powzx"},"content":"            Event invalidEvent \u003d new Event(INVALID_EVENT_FORMAT_ARGUMENTS);","lastModifiedDate":"2021-10-07"},{"lineNumber":104,"author":{"gitId":"powzx"},"content":"            planner.addEvent(invalidEvent, false);","lastModifiedDate":"2021-10-16"},{"lineNumber":105,"author":{"gitId":"powzx"},"content":"        } catch (KolinuxException exception) {","lastModifiedDate":"2021-10-07"},{"lineNumber":106,"author":{"gitId":"powzx"},"content":"            assertEquals(FORMAT_ERROR, exception.getMessage());","lastModifiedDate":"2021-10-07"},{"lineNumber":107,"author":{"gitId":"powzx"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":108,"author":{"gitId":"powzx"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":109,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":110,"author":{"gitId":"powzx"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":111,"author":{"gitId":"powzx"},"content":"    public void addEvent_wrongTimeOrderInput_eventNotAdded() {","lastModifiedDate":"2021-10-14"},{"lineNumber":112,"author":{"gitId":"powzx"},"content":"        try {","lastModifiedDate":"2021-10-14"},{"lineNumber":113,"author":{"gitId":"powzx"},"content":"            Event invalidEvent \u003d new Event(WRONG_TIME_ORDER_ARGUMENTS);","lastModifiedDate":"2021-10-14"},{"lineNumber":114,"author":{"gitId":"powzx"},"content":"            planner.addEvent(invalidEvent, false);","lastModifiedDate":"2021-10-16"},{"lineNumber":115,"author":{"gitId":"powzx"},"content":"        } catch (KolinuxException exception) {","lastModifiedDate":"2021-10-14"},{"lineNumber":116,"author":{"gitId":"powzx"},"content":"            assertEquals(TIME_ORDER_ERROR, exception.getMessage());","lastModifiedDate":"2021-10-14"},{"lineNumber":117,"author":{"gitId":"powzx"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":118,"author":{"gitId":"powzx"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":119,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":120,"author":{"gitId":"powzx"},"content":"    @Test","lastModifiedDate":"2021-10-30"},{"lineNumber":121,"author":{"gitId":"powzx"},"content":"    public void addEvent_startAndEndSameTime_eventNotAdded() {","lastModifiedDate":"2021-10-30"},{"lineNumber":122,"author":{"gitId":"powzx"},"content":"        try {","lastModifiedDate":"2021-10-30"},{"lineNumber":123,"author":{"gitId":"powzx"},"content":"            Event invalidEvent \u003d new Event(ZERO_DURATION_EVENT_ARGUMENTS);","lastModifiedDate":"2021-10-30"},{"lineNumber":124,"author":{"gitId":"powzx"},"content":"            planner.addEvent(invalidEvent, false);","lastModifiedDate":"2021-10-30"},{"lineNumber":125,"author":{"gitId":"powzx"},"content":"        } catch (KolinuxException exception) {","lastModifiedDate":"2021-10-30"},{"lineNumber":126,"author":{"gitId":"powzx"},"content":"            assertEquals(TIME_SAME_ERROR, exception.getMessage());","lastModifiedDate":"2021-10-30"},{"lineNumber":127,"author":{"gitId":"powzx"},"content":"        }","lastModifiedDate":"2021-10-30"},{"lineNumber":128,"author":{"gitId":"powzx"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":129,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":130,"author":{"gitId":"powzx"},"content":"    @Test","lastModifiedDate":"2021-10-30"},{"lineNumber":131,"author":{"gitId":"powzx"},"content":"    public void addEvent_emptyDescriptionEvent_eventNotAdded() {","lastModifiedDate":"2021-10-30"},{"lineNumber":132,"author":{"gitId":"powzx"},"content":"        try {","lastModifiedDate":"2021-10-30"},{"lineNumber":133,"author":{"gitId":"powzx"},"content":"            Event invalidEvent \u003d new Event(EMPTY_DESCRIPTION_EVENT_ARGUMENTS);","lastModifiedDate":"2021-10-30"},{"lineNumber":134,"author":{"gitId":"powzx"},"content":"            planner.addEvent(invalidEvent, false);","lastModifiedDate":"2021-10-30"},{"lineNumber":135,"author":{"gitId":"powzx"},"content":"        } catch (KolinuxException exception) {","lastModifiedDate":"2021-10-30"},{"lineNumber":136,"author":{"gitId":"powzx"},"content":"            assertEquals(EMPTY_DESCRIPTION_ERROR, exception.getMessage());","lastModifiedDate":"2021-10-30"},{"lineNumber":137,"author":{"gitId":"powzx"},"content":"        }","lastModifiedDate":"2021-10-30"},{"lineNumber":138,"author":{"gitId":"powzx"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":139,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":140,"author":{"gitId":"powzx"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":141,"author":{"gitId":"powzx"},"content":"    public void addEvent_startTimeWithinAnotherEvent_eventNotAdded() throws KolinuxException {","lastModifiedDate":"2021-10-15"},{"lineNumber":142,"author":{"gitId":"powzx"},"content":"        planner.clearEvents();","lastModifiedDate":"2021-10-14"},{"lineNumber":143,"author":{"gitId":"powzx"},"content":"        Event validEvent \u003d new Event(VALID_EVENT_ARGUMENTS[0]);","lastModifiedDate":"2021-10-15"},{"lineNumber":144,"author":{"gitId":"powzx"},"content":"        planner.addEvent(validEvent, false);","lastModifiedDate":"2021-10-16"},{"lineNumber":145,"author":{"gitId":"powzx"},"content":"        try {","lastModifiedDate":"2021-10-14"},{"lineNumber":146,"author":{"gitId":"powzx"},"content":"            Event invalidEvent \u003d new Event(CONFLICTED_TIME_ARGUMENTS[0]);","lastModifiedDate":"2021-10-15"},{"lineNumber":147,"author":{"gitId":"powzx"},"content":"            planner.addEvent(invalidEvent, false);","lastModifiedDate":"2021-10-16"},{"lineNumber":148,"author":{"gitId":"powzx"},"content":"        } catch (KolinuxException exception) {","lastModifiedDate":"2021-10-15"},{"lineNumber":149,"author":{"gitId":"powzx"},"content":"            assertEquals(TIME_CONFLICT_ERROR, exception.getMessage());","lastModifiedDate":"2021-10-15"},{"lineNumber":150,"author":{"gitId":"powzx"},"content":"        }","lastModifiedDate":"2021-10-15"},{"lineNumber":151,"author":{"gitId":"powzx"},"content":"        planner.clearEvents();","lastModifiedDate":"2021-10-15"},{"lineNumber":152,"author":{"gitId":"powzx"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":153,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":154,"author":{"gitId":"powzx"},"content":"    @Test","lastModifiedDate":"2021-10-15"},{"lineNumber":155,"author":{"gitId":"powzx"},"content":"    public void addEvent_endTimeWithinAnotherEvent_eventNotAdded() throws KolinuxException {","lastModifiedDate":"2021-10-15"},{"lineNumber":156,"author":{"gitId":"powzx"},"content":"        planner.clearEvents();","lastModifiedDate":"2021-10-15"},{"lineNumber":157,"author":{"gitId":"powzx"},"content":"        Event validEvent \u003d new Event(VALID_EVENT_ARGUMENTS[0]);","lastModifiedDate":"2021-10-15"},{"lineNumber":158,"author":{"gitId":"powzx"},"content":"        planner.addEvent(validEvent, false);","lastModifiedDate":"2021-10-16"},{"lineNumber":159,"author":{"gitId":"powzx"},"content":"        try {","lastModifiedDate":"2021-10-15"},{"lineNumber":160,"author":{"gitId":"powzx"},"content":"            Event invalidEvent \u003d new Event(CONFLICTED_TIME_ARGUMENTS[1]);","lastModifiedDate":"2021-10-15"},{"lineNumber":161,"author":{"gitId":"powzx"},"content":"            planner.addEvent(invalidEvent, false);","lastModifiedDate":"2021-10-16"},{"lineNumber":162,"author":{"gitId":"powzx"},"content":"        } catch (KolinuxException exception) {","lastModifiedDate":"2021-10-15"},{"lineNumber":163,"author":{"gitId":"powzx"},"content":"            assertEquals(TIME_CONFLICT_ERROR, exception.getMessage());","lastModifiedDate":"2021-10-15"},{"lineNumber":164,"author":{"gitId":"powzx"},"content":"        }","lastModifiedDate":"2021-10-15"},{"lineNumber":165,"author":{"gitId":"powzx"},"content":"        planner.clearEvents();","lastModifiedDate":"2021-10-15"},{"lineNumber":166,"author":{"gitId":"powzx"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":167,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":168,"author":{"gitId":"powzx"},"content":"    @Test","lastModifiedDate":"2021-10-15"},{"lineNumber":169,"author":{"gitId":"powzx"},"content":"    public void addEvent_eventContainsAnotherEvent_eventNotAdded() throws KolinuxException {","lastModifiedDate":"2021-10-15"},{"lineNumber":170,"author":{"gitId":"powzx"},"content":"        planner.clearEvents();","lastModifiedDate":"2021-10-15"},{"lineNumber":171,"author":{"gitId":"powzx"},"content":"        Event validEvent \u003d new Event(VALID_EVENT_ARGUMENTS[0]);","lastModifiedDate":"2021-10-15"},{"lineNumber":172,"author":{"gitId":"powzx"},"content":"        planner.addEvent(validEvent, false);","lastModifiedDate":"2021-10-16"},{"lineNumber":173,"author":{"gitId":"powzx"},"content":"        try {","lastModifiedDate":"2021-10-15"},{"lineNumber":174,"author":{"gitId":"powzx"},"content":"            Event invalidEvent \u003d new Event(CONFLICTED_TIME_ARGUMENTS[2]);","lastModifiedDate":"2021-10-15"},{"lineNumber":175,"author":{"gitId":"powzx"},"content":"            planner.addEvent(invalidEvent, false);","lastModifiedDate":"2021-10-16"},{"lineNumber":176,"author":{"gitId":"powzx"},"content":"        } catch (KolinuxException exception) {","lastModifiedDate":"2021-10-15"},{"lineNumber":177,"author":{"gitId":"powzx"},"content":"            assertEquals(TIME_CONFLICT_ERROR, exception.getMessage());","lastModifiedDate":"2021-10-15"},{"lineNumber":178,"author":{"gitId":"powzx"},"content":"        }","lastModifiedDate":"2021-10-15"},{"lineNumber":179,"author":{"gitId":"powzx"},"content":"        planner.clearEvents();","lastModifiedDate":"2021-10-15"},{"lineNumber":180,"author":{"gitId":"powzx"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":181,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":182,"author":{"gitId":"powzx"},"content":"    @Test","lastModifiedDate":"2021-10-15"},{"lineNumber":183,"author":{"gitId":"powzx"},"content":"    public void addEvent_eventWithinAnotherEvent_eventNotAdded() throws KolinuxException {","lastModifiedDate":"2021-10-15"},{"lineNumber":184,"author":{"gitId":"powzx"},"content":"        planner.clearEvents();","lastModifiedDate":"2021-10-15"},{"lineNumber":185,"author":{"gitId":"powzx"},"content":"        Event validEvent \u003d new Event(VALID_EVENT_ARGUMENTS[0]);","lastModifiedDate":"2021-10-15"},{"lineNumber":186,"author":{"gitId":"powzx"},"content":"        planner.addEvent(validEvent, false);","lastModifiedDate":"2021-10-16"},{"lineNumber":187,"author":{"gitId":"powzx"},"content":"        try {","lastModifiedDate":"2021-10-15"},{"lineNumber":188,"author":{"gitId":"powzx"},"content":"            Event invalidEvent \u003d new Event(CONFLICTED_TIME_ARGUMENTS[3]);","lastModifiedDate":"2021-10-15"},{"lineNumber":189,"author":{"gitId":"powzx"},"content":"            planner.addEvent(invalidEvent, false);","lastModifiedDate":"2021-10-16"},{"lineNumber":190,"author":{"gitId":"powzx"},"content":"        } catch (KolinuxException exception) {","lastModifiedDate":"2021-10-14"},{"lineNumber":191,"author":{"gitId":"powzx"},"content":"            assertEquals(TIME_CONFLICT_ERROR, exception.getMessage());","lastModifiedDate":"2021-10-14"},{"lineNumber":192,"author":{"gitId":"powzx"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":193,"author":{"gitId":"powzx"},"content":"        planner.clearEvents();","lastModifiedDate":"2021-10-14"},{"lineNumber":194,"author":{"gitId":"powzx"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":195,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":196,"author":{"gitId":"powzx"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":197,"author":{"gitId":"powzx"},"content":"    public void addEvent_eventWithinAnotherEventButAllowConflict_eventAdded() throws KolinuxException {","lastModifiedDate":"2021-10-16"},{"lineNumber":198,"author":{"gitId":"powzx"},"content":"        planner.clearEvents();","lastModifiedDate":"2021-10-16"},{"lineNumber":199,"author":{"gitId":"powzx"},"content":"        Event validEvent \u003d new Event(VALID_EVENT_ARGUMENTS[0]);","lastModifiedDate":"2021-10-16"},{"lineNumber":200,"author":{"gitId":"powzx"},"content":"        planner.addEvent(validEvent, false);","lastModifiedDate":"2021-10-16"},{"lineNumber":201,"author":{"gitId":"powzx"},"content":"        Event invalidEvent \u003d new Event(CONFLICTED_TIME_ARGUMENTS[3]);","lastModifiedDate":"2021-10-16"},{"lineNumber":202,"author":{"gitId":"powzx"},"content":"        planner.addEvent(invalidEvent, true);","lastModifiedDate":"2021-10-16"},{"lineNumber":203,"author":{"gitId":"powzx"},"content":"        assertEquals(VALID_LIST_3, planner.listEvents(\"2021-10-26\", false));","lastModifiedDate":"2021-10-16"},{"lineNumber":204,"author":{"gitId":"powzx"},"content":"        planner.clearEvents();","lastModifiedDate":"2021-10-16"},{"lineNumber":205,"author":{"gitId":"powzx"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":206,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":207,"author":{"gitId":"powzx"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":208,"author":{"gitId":"powzx"},"content":"    public void addEvent_eventConflictWithTimetableAllowConflict_eventAdded() throws KolinuxException {","lastModifiedDate":"2021-10-18"},{"lineNumber":209,"author":{"gitId":"powzx"},"content":"        planner.clearEvents();","lastModifiedDate":"2021-10-18"},{"lineNumber":210,"author":{"gitId":"powzx"},"content":"        timetable.clearTimetable();","lastModifiedDate":"2021-10-18"},{"lineNumber":211,"author":{"gitId":"saravanamani1999"},"content":"        Lesson lesson \u003d new Lecture(VALID_LESSON_ARGUMENTS[0]);","lastModifiedDate":"2021-10-30"},{"lineNumber":212,"author":{"gitId":"saravanamani1999"},"content":"        addSubCommand.addToTimetable(lesson);","lastModifiedDate":"2021-10-23"},{"lineNumber":213,"author":{"gitId":"powzx"},"content":"        Event event \u003d new Event(CONFLICTED_TIME_ARGUMENTS[4]);","lastModifiedDate":"2021-10-18"},{"lineNumber":214,"author":{"gitId":"powzx"},"content":"        planner.addEvent(event, true);","lastModifiedDate":"2021-10-18"},{"lineNumber":215,"author":{"gitId":"powzx"},"content":"        assertEquals(VALID_LIST_4, planner.listEvents(\"2021-10-22\", false));","lastModifiedDate":"2021-10-18"},{"lineNumber":216,"author":{"gitId":"powzx"},"content":"        planner.clearEvents();","lastModifiedDate":"2021-10-18"},{"lineNumber":217,"author":{"gitId":"powzx"},"content":"        timetable.clearTimetable();","lastModifiedDate":"2021-10-18"},{"lineNumber":218,"author":{"gitId":"powzx"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":219,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":220,"author":{"gitId":"powzx"},"content":"    @Test","lastModifiedDate":"2021-11-05"},{"lineNumber":221,"author":{"gitId":"powzx"},"content":"    public void listEvent_listLessonsAsEvents_lessonsListed() throws KolinuxException {","lastModifiedDate":"2021-11-05"},{"lineNumber":222,"author":{"gitId":"powzx"},"content":"        planner.clearEvents();","lastModifiedDate":"2021-11-05"},{"lineNumber":223,"author":{"gitId":"powzx"},"content":"        timetable.clearTimetable();","lastModifiedDate":"2021-11-05"},{"lineNumber":224,"author":{"gitId":"powzx"},"content":"        Lesson lesson \u003d new Lecture(VALID_LESSON_ARGUMENTS[0]);","lastModifiedDate":"2021-11-05"},{"lineNumber":225,"author":{"gitId":"powzx"},"content":"        addSubCommand.addToTimetable(lesson);","lastModifiedDate":"2021-11-05"},{"lineNumber":226,"author":{"gitId":"powzx"},"content":"        assertEquals(VALID_LIST_6, planner.listEvents(\"2021-10-22\", false));","lastModifiedDate":"2021-11-05"},{"lineNumber":227,"author":{"gitId":"powzx"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":228,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":229,"author":{"gitId":"powzx"},"content":"    @Test","lastModifiedDate":"2021-11-05"},{"lineNumber":230,"author":{"gitId":"powzx"},"content":"    public void listEvent_listExamsAsEvents_examsListed() throws KolinuxException {","lastModifiedDate":"2021-11-05"},{"lineNumber":231,"author":{"gitId":"powzx"},"content":"        planner.clearEvents();","lastModifiedDate":"2021-11-05"},{"lineNumber":232,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":233,"author":{"gitId":"powzx"},"content":"        ModuleDb moduleDb \u003d new ModuleDb();","lastModifiedDate":"2021-11-05"},{"lineNumber":234,"author":{"gitId":"powzx"},"content":"        moduleDb.initModuleDb();","lastModifiedDate":"2021-11-05"},{"lineNumber":235,"author":{"gitId":"powzx"},"content":"        moduleList.addModuleByCode(\"CS2113T\", moduleDb);","lastModifiedDate":"2021-11-05"},{"lineNumber":236,"author":{"gitId":"powzx"},"content":"        moduleList.addModuleByCode(\"CG2028\", moduleDb);","lastModifiedDate":"2021-11-05"},{"lineNumber":237,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":238,"author":{"gitId":"powzx"},"content":"        assertEquals(VALID_LIST_7, planner.listEvents(\"2021-11-30\", false));","lastModifiedDate":"2021-11-05"},{"lineNumber":239,"author":{"gitId":"powzx"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":240,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":241,"author":{"gitId":"powzx"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":242,"author":{"gitId":"powzx"},"content":"    public void listEvent_attemptToDeleteLessonFromPlanner_lessonHiddenFromUser() throws KolinuxException {","lastModifiedDate":"2021-10-18"},{"lineNumber":243,"author":{"gitId":"powzx"},"content":"        planner.clearEvents();","lastModifiedDate":"2021-10-18"},{"lineNumber":244,"author":{"gitId":"powzx"},"content":"        timetable.clearTimetable();","lastModifiedDate":"2021-10-18"},{"lineNumber":245,"author":{"gitId":"saravanamani1999"},"content":"        Lesson lesson \u003d new Lecture(VALID_LESSON_ARGUMENTS[0]);","lastModifiedDate":"2021-10-30"},{"lineNumber":246,"author":{"gitId":"saravanamani1999"},"content":"        addSubCommand.addToTimetable(lesson);","lastModifiedDate":"2021-10-23"},{"lineNumber":247,"author":{"gitId":"powzx"},"content":"        Event event \u003d new Event(CONFLICTED_TIME_ARGUMENTS[4]);","lastModifiedDate":"2021-10-18"},{"lineNumber":248,"author":{"gitId":"powzx"},"content":"        planner.addEvent(event, true);","lastModifiedDate":"2021-10-18"},{"lineNumber":249,"author":{"gitId":"powzx"},"content":"        assertEquals(VALID_LIST_5 + \" (id: \" + event.getId() + \")\",","lastModifiedDate":"2021-10-26"},{"lineNumber":250,"author":{"gitId":"powzx"},"content":"                planner.listEvents(\"2021-10-22\", true));","lastModifiedDate":"2021-10-26"},{"lineNumber":251,"author":{"gitId":"powzx"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":252,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":253,"author":{"gitId":"powzx"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":254,"author":{"gitId":"powzx"},"content":"    public void listEvent_emptyListOnDate_exceptionThrown() {","lastModifiedDate":"2021-11-04"},{"lineNumber":255,"author":{"gitId":"powzx"},"content":"        planner.clearEvents();","lastModifiedDate":"2021-11-04"},{"lineNumber":256,"author":{"gitId":"powzx"},"content":"        try {","lastModifiedDate":"2021-11-04"},{"lineNumber":257,"author":{"gitId":"powzx"},"content":"            planner.listEvents(\"2021-10-10\", false);","lastModifiedDate":"2021-11-04"},{"lineNumber":258,"author":{"gitId":"powzx"},"content":"        } catch (KolinuxException exception) {","lastModifiedDate":"2021-11-04"},{"lineNumber":259,"author":{"gitId":"powzx"},"content":"            assertEquals(EMPTY_LIST_MESSAGE, exception.getMessage());","lastModifiedDate":"2021-11-04"},{"lineNumber":260,"author":{"gitId":"powzx"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":261,"author":{"gitId":"powzx"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":262,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":263,"author":{"gitId":"powzx"},"content":"    @Test","lastModifiedDate":"2021-10-15"},{"lineNumber":264,"author":{"gitId":"powzx"},"content":"    public void deleteEvent_validIdInput_eventDeleted() throws KolinuxException {","lastModifiedDate":"2021-10-15"},{"lineNumber":265,"author":{"gitId":"powzx"},"content":"        planner.clearEvents();","lastModifiedDate":"2021-10-15"},{"lineNumber":266,"author":{"gitId":"powzx"},"content":"        String idToBeDeleted \u003d null;","lastModifiedDate":"2021-10-15"},{"lineNumber":267,"author":{"gitId":"powzx"},"content":"        for (String[] validInput : VALID_EVENT_ARGUMENTS) {","lastModifiedDate":"2021-10-15"},{"lineNumber":268,"author":{"gitId":"powzx"},"content":"            Event validEvent \u003d new Event(validInput);","lastModifiedDate":"2021-10-15"},{"lineNumber":269,"author":{"gitId":"powzx"},"content":"            if (Arrays.equals(validInput, new String[]{\"Pop Quiz 4\", \"2021-10-26\", \"1530\", \"2000\"})) {","lastModifiedDate":"2021-10-15"},{"lineNumber":270,"author":{"gitId":"powzx"},"content":"                idToBeDeleted \u003d validEvent.getId();","lastModifiedDate":"2021-10-15"},{"lineNumber":271,"author":{"gitId":"powzx"},"content":"            }","lastModifiedDate":"2021-10-15"},{"lineNumber":272,"author":{"gitId":"powzx"},"content":"            planner.addEvent(validEvent, false);","lastModifiedDate":"2021-10-16"},{"lineNumber":273,"author":{"gitId":"powzx"},"content":"        }","lastModifiedDate":"2021-10-15"},{"lineNumber":274,"author":{"gitId":"powzx"},"content":"        planner.deleteEvent(idToBeDeleted);","lastModifiedDate":"2021-10-15"},{"lineNumber":275,"author":{"gitId":"powzx"},"content":"        assertEquals(VALID_LIST_2, planner.listEvents(\"2021-10-26\", false));","lastModifiedDate":"2021-10-15"},{"lineNumber":276,"author":{"gitId":"powzx"},"content":"        planner.clearEvents();","lastModifiedDate":"2021-10-15"},{"lineNumber":277,"author":{"gitId":"powzx"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":278,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":279,"author":{"gitId":"powzx"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":280,"author":{"gitId":"powzx"},"content":"    public void deleteEvent_invalidIdGiven_exceptionThrown() throws KolinuxException {","lastModifiedDate":"2021-11-04"},{"lineNumber":281,"author":{"gitId":"powzx"},"content":"        planner.clearEvents();","lastModifiedDate":"2021-11-04"},{"lineNumber":282,"author":{"gitId":"powzx"},"content":"        for (String[] validInput : VALID_EVENT_ARGUMENTS) {","lastModifiedDate":"2021-11-04"},{"lineNumber":283,"author":{"gitId":"powzx"},"content":"            Event validEvent \u003d new Event(validInput);","lastModifiedDate":"2021-11-04"},{"lineNumber":284,"author":{"gitId":"powzx"},"content":"            planner.addEvent(validEvent, false);","lastModifiedDate":"2021-11-04"},{"lineNumber":285,"author":{"gitId":"powzx"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":286,"author":{"gitId":"powzx"},"content":"        try {","lastModifiedDate":"2021-11-04"},{"lineNumber":287,"author":{"gitId":"powzx"},"content":"            planner.deleteEvent(\"dinosaur\");","lastModifiedDate":"2021-11-04"},{"lineNumber":288,"author":{"gitId":"powzx"},"content":"        } catch (KolinuxException exception) {","lastModifiedDate":"2021-11-04"},{"lineNumber":289,"author":{"gitId":"powzx"},"content":"            assertEquals(INVALID_ID_ERROR, exception.getMessage());","lastModifiedDate":"2021-11-04"},{"lineNumber":290,"author":{"gitId":"powzx"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":291,"author":{"gitId":"powzx"},"content":"        try {","lastModifiedDate":"2021-11-04"},{"lineNumber":292,"author":{"gitId":"powzx"},"content":"            planner.deleteEvent(\"102\");","lastModifiedDate":"2021-11-04"},{"lineNumber":293,"author":{"gitId":"powzx"},"content":"        } catch (KolinuxException exception) {","lastModifiedDate":"2021-11-04"},{"lineNumber":294,"author":{"gitId":"powzx"},"content":"            assertEquals(INVALID_ID_ERROR, exception.getMessage());","lastModifiedDate":"2021-11-04"},{"lineNumber":295,"author":{"gitId":"powzx"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":296,"author":{"gitId":"powzx"},"content":"        planner.clearEvents();","lastModifiedDate":"2021-11-04"},{"lineNumber":297,"author":{"gitId":"powzx"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":298,"author":{"gitId":"powzx"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"powzx":288,"saravanamani1999":10}},{"path":"src/test/java/seedu/kolinux/routes/BusRouteTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"powzx"},"content":"package seedu.kolinux.routes;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"shyamgj1900"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"shyamgj1900"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"shyamgj1900"},"content":"import seedu.kolinux.exceptions.KolinuxException;","lastModifiedDate":"2021-10-23"},{"lineNumber":5,"author":{"gitId":"shyamgj1900"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"shyamgj1900"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"shyamgj1900"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"shyamgj1900"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"shyamgj1900"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"shyamgj1900"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-23"},{"lineNumber":11,"author":{"gitId":"shyamgj1900"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-23"},{"lineNumber":12,"author":{"gitId":"shyamgj1900"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":13,"author":{"gitId":"shyamgj1900"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"shyamgj1900"},"content":"public class BusRouteTest {","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"shyamgj1900"},"content":"    private static final String[] VALID_STOP_NAME \u003d {\"LT13\", \"Opp YIH\", \"Ventus\", \"Opp UHC\", \"UTown\", \"CLB\"};","lastModifiedDate":"2021-10-23"},{"lineNumber":16,"author":{"gitId":"shyamgj1900"},"content":"    private static final String INVALID_STOP_NAME \u003d \"BusStop\";","lastModifiedDate":"2021-10-18"},{"lineNumber":17,"author":{"gitId":"shyamgj1900"},"content":"    private int[][] vertices \u003d {{0, 1}, {1, 2}, {2, 3}, {3, 4}, {4, 2}};","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"shyamgj1900"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"shyamgj1900"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"shyamgj1900"},"content":"    public void enterStopName_checkStopName_validStopName() {","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"shyamgj1900"},"content":"        Location location \u003d new Location();","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"shyamgj1900"},"content":"        assertEquals(1, location.getStopNumberAOne(VALID_STOP_NAME[0]));","lastModifiedDate":"2021-10-23"},{"lineNumber":23,"author":{"gitId":"shyamgj1900"},"content":"        assertEquals(2, location.getStopNumberATwo(VALID_STOP_NAME[1]));","lastModifiedDate":"2021-10-23"},{"lineNumber":24,"author":{"gitId":"shyamgj1900"},"content":"        assertEquals(3, location.getStopNumberDOne(VALID_STOP_NAME[2]));","lastModifiedDate":"2021-10-23"},{"lineNumber":25,"author":{"gitId":"shyamgj1900"},"content":"        assertEquals(4, location.getStopNumberDTwo(VALID_STOP_NAME[3]));","lastModifiedDate":"2021-10-23"},{"lineNumber":26,"author":{"gitId":"shyamgj1900"},"content":"        assertEquals(5, location.getStopNumberE(VALID_STOP_NAME[4]));","lastModifiedDate":"2021-10-23"},{"lineNumber":27,"author":{"gitId":"shyamgj1900"},"content":"        assertEquals(6, location.getStopNumberK(VALID_STOP_NAME[5]));","lastModifiedDate":"2021-10-23"},{"lineNumber":28,"author":{"gitId":"shyamgj1900"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"shyamgj1900"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"shyamgj1900"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"shyamgj1900"},"content":"    public void enterStopName_checkStopName_invalidStopName() {","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"shyamgj1900"},"content":"        Location location \u003d new Location();","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"shyamgj1900"},"content":"        assertEquals(-1, location.getStopNumberDOne(INVALID_STOP_NAME));","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"shyamgj1900"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"shyamgj1900"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"shyamgj1900"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"shyamgj1900"},"content":"    public void enterEdges_testPath_validPath() {","lastModifiedDate":"2021-10-07"},{"lineNumber":38,"author":{"gitId":"shyamgj1900"},"content":"        Graph graph \u003d new Graph(5);","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"shyamgj1900"},"content":"        for (int i \u003d 0; i \u003c 5; i++) {","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"shyamgj1900"},"content":"            graph.addEdge(vertices[i][0], vertices[i][1]);","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"shyamgj1900"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"shyamgj1900"},"content":"        assertEquals(true, graph.isConnected(0, 3));","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"shyamgj1900"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"shyamgj1900"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":45,"author":{"gitId":"shyamgj1900"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":46,"author":{"gitId":"shyamgj1900"},"content":"    public void enterEdges_testPath_invalidPath() {","lastModifiedDate":"2021-10-07"},{"lineNumber":47,"author":{"gitId":"shyamgj1900"},"content":"        Graph graph \u003d new Graph(5);","lastModifiedDate":"2021-10-07"},{"lineNumber":48,"author":{"gitId":"shyamgj1900"},"content":"        for (int i \u003d 0; i \u003c 5; i++) {","lastModifiedDate":"2021-10-07"},{"lineNumber":49,"author":{"gitId":"shyamgj1900"},"content":"            graph.addEdge(vertices[i][0], vertices[i][1]);","lastModifiedDate":"2021-10-07"},{"lineNumber":50,"author":{"gitId":"shyamgj1900"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":51,"author":{"gitId":"shyamgj1900"},"content":"        assertEquals(false, graph.isConnected(3, 1));","lastModifiedDate":"2021-10-07"},{"lineNumber":52,"author":{"gitId":"shyamgj1900"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":53,"author":{"gitId":"shyamgj1900"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":54,"author":{"gitId":"shyamgj1900"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":55,"author":{"gitId":"shyamgj1900"},"content":"    public void enterLocation_checkDirectRoute_validRoute() throws KolinuxException, IOException {","lastModifiedDate":"2021-10-23"},{"lineNumber":56,"author":{"gitId":"shyamgj1900"},"content":"        String[] input \u003d {\"bus\", \"kr mrt\", \"utown\"};","lastModifiedDate":"2021-10-23"},{"lineNumber":57,"author":{"gitId":"shyamgj1900"},"content":"        ArrayList\u003cString\u003e busNumbers \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-23"},{"lineNumber":58,"author":{"gitId":"shyamgj1900"},"content":"        DirectRoute route \u003d new DirectRoute(input);","lastModifiedDate":"2021-10-26"},{"lineNumber":59,"author":{"gitId":"shyamgj1900"},"content":"        route.getBusStopNumber();","lastModifiedDate":"2021-10-23"},{"lineNumber":60,"author":{"gitId":"shyamgj1900"},"content":"        assertTrue(route.checkDirectRoutes(busNumbers));","lastModifiedDate":"2021-10-23"},{"lineNumber":61,"author":{"gitId":"shyamgj1900"},"content":"        assertEquals(\"[D2]\", busNumbers.toString());","lastModifiedDate":"2021-10-23"},{"lineNumber":62,"author":{"gitId":"shyamgj1900"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":63,"author":{"gitId":"shyamgj1900"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":64,"author":{"gitId":"shyamgj1900"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":65,"author":{"gitId":"shyamgj1900"},"content":"    public void enterLocation_checkDirectRoute_invalidRoute() throws KolinuxException, IOException {","lastModifiedDate":"2021-10-23"},{"lineNumber":66,"author":{"gitId":"shyamgj1900"},"content":"        String[] input \u003d {\"bus\", \"lt13\", \"utown\"};","lastModifiedDate":"2021-10-23"},{"lineNumber":67,"author":{"gitId":"shyamgj1900"},"content":"        ArrayList\u003cString\u003e busNumbers \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-23"},{"lineNumber":68,"author":{"gitId":"shyamgj1900"},"content":"        DirectRoute route \u003d new DirectRoute(input);","lastModifiedDate":"2021-10-26"},{"lineNumber":69,"author":{"gitId":"shyamgj1900"},"content":"        route.getBusStopNumber();","lastModifiedDate":"2021-10-23"},{"lineNumber":70,"author":{"gitId":"shyamgj1900"},"content":"        assertFalse(route.checkDirectRoutes(busNumbers));","lastModifiedDate":"2021-10-23"},{"lineNumber":71,"author":{"gitId":"shyamgj1900"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":72,"author":{"gitId":"shyamgj1900"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":73,"author":{"gitId":"shyamgj1900"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":74,"author":{"gitId":"shyamgj1900"},"content":"    public void enterLocation_checkIndirectRoute_validRoute() throws KolinuxException, IOException {","lastModifiedDate":"2021-10-23"},{"lineNumber":75,"author":{"gitId":"shyamgj1900"},"content":"        String[] input \u003d {\"bus\", \"tcoms\", \"kent vale\"};","lastModifiedDate":"2021-10-23"},{"lineNumber":76,"author":{"gitId":"shyamgj1900"},"content":"        ArrayList\u003cString\u003e busNumberOne \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-23"},{"lineNumber":77,"author":{"gitId":"shyamgj1900"},"content":"        ArrayList\u003cString\u003e busNumberTwo \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-23"},{"lineNumber":78,"author":{"gitId":"shyamgj1900"},"content":"        ArrayList\u003cString\u003e midLocation \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-23"},{"lineNumber":79,"author":{"gitId":"shyamgj1900"},"content":"        IndirectRoute route \u003d new IndirectRoute(input);","lastModifiedDate":"2021-10-26"},{"lineNumber":80,"author":{"gitId":"shyamgj1900"},"content":"        route.getBusStopNumber();","lastModifiedDate":"2021-10-23"},{"lineNumber":81,"author":{"gitId":"shyamgj1900"},"content":"        assertTrue(route.checkIndirectRoutes(busNumberOne, busNumberTwo, midLocation));","lastModifiedDate":"2021-10-23"},{"lineNumber":82,"author":{"gitId":"shyamgj1900"},"content":"        assertEquals(\"[A2]\", busNumberOne.toString());","lastModifiedDate":"2021-10-23"},{"lineNumber":83,"author":{"gitId":"shyamgj1900"},"content":"        assertEquals(\"[E]\", busNumberTwo.toString());","lastModifiedDate":"2021-10-23"},{"lineNumber":84,"author":{"gitId":"shyamgj1900"},"content":"        assertEquals(\"IT\", midLocation.get(0));","lastModifiedDate":"2021-10-23"},{"lineNumber":85,"author":{"gitId":"shyamgj1900"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":86,"author":{"gitId":"shyamgj1900"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":87,"author":{"gitId":"shyamgj1900"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":88,"author":{"gitId":"shyamgj1900"},"content":"    public void enterLocation_checkIndirectRoute_invalidRoute() throws KolinuxException, IOException {","lastModifiedDate":"2021-10-23"},{"lineNumber":89,"author":{"gitId":"shyamgj1900"},"content":"        String[] input \u003d {\"bus\", \"utown\", \"kr mrt\"};","lastModifiedDate":"2021-10-23"},{"lineNumber":90,"author":{"gitId":"shyamgj1900"},"content":"        ArrayList\u003cString\u003e busNumberOne \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-23"},{"lineNumber":91,"author":{"gitId":"shyamgj1900"},"content":"        ArrayList\u003cString\u003e busNumberTwo \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-23"},{"lineNumber":92,"author":{"gitId":"shyamgj1900"},"content":"        ArrayList\u003cString\u003e midLocation \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-23"},{"lineNumber":93,"author":{"gitId":"shyamgj1900"},"content":"        IndirectRoute route \u003d new IndirectRoute(input);","lastModifiedDate":"2021-10-26"},{"lineNumber":94,"author":{"gitId":"shyamgj1900"},"content":"        route.getBusStopNumber();","lastModifiedDate":"2021-10-23"},{"lineNumber":95,"author":{"gitId":"shyamgj1900"},"content":"        assertFalse(route.checkIndirectRoutes(busNumberOne, busNumberTwo, midLocation));","lastModifiedDate":"2021-10-23"},{"lineNumber":96,"author":{"gitId":"shyamgj1900"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":97,"author":{"gitId":"shyamgj1900"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":98,"author":{"gitId":"shyamgj1900"},"content":"    @Test","lastModifiedDate":"2021-10-28"},{"lineNumber":99,"author":{"gitId":"shyamgj1900"},"content":"    public void enterLocation_checkDirectAlternateRoute_validRoute() throws KolinuxException, IOException {","lastModifiedDate":"2021-10-28"},{"lineNumber":100,"author":{"gitId":"shyamgj1900"},"content":"        String[] input \u003d {\"bus\", \"opp kr mrt\", \"lt27\"};","lastModifiedDate":"2021-10-28"},{"lineNumber":101,"author":{"gitId":"shyamgj1900"},"content":"        ArrayList\u003cString\u003e busNumbers \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-28"},{"lineNumber":102,"author":{"gitId":"shyamgj1900"},"content":"        DirectRoute route \u003d new DirectRoute(input);","lastModifiedDate":"2021-10-28"},{"lineNumber":103,"author":{"gitId":"shyamgj1900"},"content":"        assertEquals(\"There are no viable bus services from OPP KR MRT to LT27. \"","lastModifiedDate":"2021-10-28"},{"lineNumber":104,"author":{"gitId":"shyamgj1900"},"content":"                + \"But you can take bus [A1, D2, K] from KR MRT to LT27\", route.checkDirectAlternateRoutes(busNumbers));","lastModifiedDate":"2021-10-28"},{"lineNumber":105,"author":{"gitId":"shyamgj1900"},"content":"        assertEquals(\"[A1, D2, K]\", busNumbers.toString());","lastModifiedDate":"2021-10-28"},{"lineNumber":106,"author":{"gitId":"shyamgj1900"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":107,"author":{"gitId":"shyamgj1900"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"powzx":1,"shyamgj1900":106}},{"path":"src/test/java/seedu/kolinux/timetable/TimetableOutputTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"saravanamani1999"},"content":"package seedu.kolinux.timetable;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"saravanamani1999"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"saravanamani1999"},"content":"import org.junit.jupiter.api.BeforeAll;","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"saravanamani1999"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"saravanamani1999"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"saravanamani1999"},"content":"import seedu.kolinux.exceptions.KolinuxException;","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"saravanamani1999"},"content":"import seedu.kolinux.module.ModuleDb;","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"saravanamani1999"},"content":"import seedu.kolinux.module.ModuleList;","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"saravanamani1999"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"saravanamani1999"},"content":"import java.io.PrintStream;","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"saravanamani1999"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"saravanamani1999"},"content":"public class TimetableOutputTest {","lastModifiedDate":"2021-11-04"},{"lineNumber":17,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"saravanamani1999"},"content":"    private static final String EMPTY_TIMETABLE \u003d \"+-------------+--------------------+--------------------\"","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"saravanamani1999"},"content":"            \"+--------------------+--------------------+--------------------+\\n\"","lastModifiedDate":"2021-11-01"},{"lineNumber":22,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-11-01"},{"lineNumber":23,"author":{"gitId":"saravanamani1999"},"content":"            \"|             |       MONDAY       |       TUESDAY      |      WEDNESDAY     |      THURSDAY      \"","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-10-25"},{"lineNumber":25,"author":{"gitId":"saravanamani1999"},"content":"            \"|       FRIDAY       |\\n\"","lastModifiedDate":"2021-11-01"},{"lineNumber":26,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-11-01"},{"lineNumber":27,"author":{"gitId":"saravanamani1999"},"content":"            \"+-------------+--------------------+--------------------+--------------------+--------------------\"","lastModifiedDate":"2021-11-01"},{"lineNumber":28,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"saravanamani1999"},"content":"            \"+--------------------+\\n\"","lastModifiedDate":"2021-11-01"},{"lineNumber":30,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-11-01"},{"lineNumber":31,"author":{"gitId":"saravanamani1999"},"content":"            \"|0600 - 0630  |                    |                    |                    |                    \"","lastModifiedDate":"2021-11-01"},{"lineNumber":32,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-10-25"},{"lineNumber":33,"author":{"gitId":"saravanamani1999"},"content":"            \"|                    |\\n\"","lastModifiedDate":"2021-11-01"},{"lineNumber":34,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-11-01"},{"lineNumber":35,"author":{"gitId":"saravanamani1999"},"content":"            \"+-------------+--------------------+--------------------+--------------------+--------------------\"","lastModifiedDate":"2021-11-01"},{"lineNumber":36,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-10-25"},{"lineNumber":37,"author":{"gitId":"saravanamani1999"},"content":"            \"+--------------------+\\n\"","lastModifiedDate":"2021-11-01"},{"lineNumber":38,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-11-01"},{"lineNumber":39,"author":{"gitId":"saravanamani1999"},"content":"            \"|0630 - 0700  |                    |                    |                    |                    \"","lastModifiedDate":"2021-11-01"},{"lineNumber":40,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-10-25"},{"lineNumber":41,"author":{"gitId":"saravanamani1999"},"content":"            \"|                    |\\n\"","lastModifiedDate":"2021-11-01"},{"lineNumber":42,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-11-01"},{"lineNumber":43,"author":{"gitId":"saravanamani1999"},"content":"            \"+-------------+--------------------+--------------------+--------------------+--------------------\"","lastModifiedDate":"2021-11-01"},{"lineNumber":44,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-10-25"},{"lineNumber":45,"author":{"gitId":"saravanamani1999"},"content":"            \"+--------------------+\\n\"","lastModifiedDate":"2021-11-01"},{"lineNumber":46,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-11-01"},{"lineNumber":47,"author":{"gitId":"saravanamani1999"},"content":"            \"|0700 - 0730  |                    |                    |                    |                    \"","lastModifiedDate":"2021-11-01"},{"lineNumber":48,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-10-25"},{"lineNumber":49,"author":{"gitId":"saravanamani1999"},"content":"            \"|                    |\\n\"","lastModifiedDate":"2021-11-01"},{"lineNumber":50,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-11-01"},{"lineNumber":51,"author":{"gitId":"saravanamani1999"},"content":"            \"+-------------+--------------------+--------------------+--------------------+--------------------\"","lastModifiedDate":"2021-11-01"},{"lineNumber":52,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-10-25"},{"lineNumber":53,"author":{"gitId":"saravanamani1999"},"content":"            \"+--------------------+\\n\"","lastModifiedDate":"2021-11-01"},{"lineNumber":54,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-11-01"},{"lineNumber":55,"author":{"gitId":"saravanamani1999"},"content":"            \"|0730 - 0800  |                    |                    |                    |                    \"","lastModifiedDate":"2021-11-01"},{"lineNumber":56,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-11-01"},{"lineNumber":57,"author":{"gitId":"saravanamani1999"},"content":"            \"|                    |\\n\"","lastModifiedDate":"2021-11-01"},{"lineNumber":58,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-11-01"},{"lineNumber":59,"author":{"gitId":"saravanamani1999"},"content":"            \"+-------------+--------------------+--------------------+--------------------+--------------------\"","lastModifiedDate":"2021-10-25"},{"lineNumber":60,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-10-25"},{"lineNumber":61,"author":{"gitId":"saravanamani1999"},"content":"            \"+--------------------+\\n\"","lastModifiedDate":"2021-11-01"},{"lineNumber":62,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-11-01"},{"lineNumber":63,"author":{"gitId":"saravanamani1999"},"content":"            \"|0800 - 0830  |                    |                    |                    |                    \"","lastModifiedDate":"2021-11-01"},{"lineNumber":64,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-10-25"},{"lineNumber":65,"author":{"gitId":"saravanamani1999"},"content":"            \"|                    |\\n\"","lastModifiedDate":"2021-11-01"},{"lineNumber":66,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-11-01"},{"lineNumber":67,"author":{"gitId":"saravanamani1999"},"content":"            \"+-------------+--------------------+--------------------+--------------------+--------------------\"","lastModifiedDate":"2021-11-01"},{"lineNumber":68,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-10-25"},{"lineNumber":69,"author":{"gitId":"saravanamani1999"},"content":"            \"+--------------------+\\n\"","lastModifiedDate":"2021-11-01"},{"lineNumber":70,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-11-01"},{"lineNumber":71,"author":{"gitId":"saravanamani1999"},"content":"            \"|0830 - 0900  |                    |                    |                    |                    \"","lastModifiedDate":"2021-11-01"},{"lineNumber":72,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-10-25"},{"lineNumber":73,"author":{"gitId":"saravanamani1999"},"content":"            \"|                    |\\n\"","lastModifiedDate":"2021-11-01"},{"lineNumber":74,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-11-01"},{"lineNumber":75,"author":{"gitId":"saravanamani1999"},"content":"            \"+-------------+--------------------+--------------------+--------------------+--------------------\"","lastModifiedDate":"2021-10-25"},{"lineNumber":76,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-10-25"},{"lineNumber":77,"author":{"gitId":"saravanamani1999"},"content":"            \"+--------------------+\\n\"","lastModifiedDate":"2021-11-01"},{"lineNumber":78,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-11-01"},{"lineNumber":79,"author":{"gitId":"saravanamani1999"},"content":"            \"|0900 - 0930  |                    |                    |                    |                    \"","lastModifiedDate":"2021-11-01"},{"lineNumber":80,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-10-25"},{"lineNumber":81,"author":{"gitId":"saravanamani1999"},"content":"            \"|                    |\\n\"","lastModifiedDate":"2021-11-01"},{"lineNumber":82,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-11-01"},{"lineNumber":83,"author":{"gitId":"saravanamani1999"},"content":"            \"+-------------+--------------------+--------------------+--------------------+--------------------\"","lastModifiedDate":"2021-11-01"},{"lineNumber":84,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-10-25"},{"lineNumber":85,"author":{"gitId":"saravanamani1999"},"content":"            \"+--------------------+\\n\"","lastModifiedDate":"2021-11-01"},{"lineNumber":86,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-11-01"},{"lineNumber":87,"author":{"gitId":"saravanamani1999"},"content":"            \"|0930 - 1000  |                    |                    |                    |                    \"","lastModifiedDate":"2021-11-01"},{"lineNumber":88,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-10-25"},{"lineNumber":89,"author":{"gitId":"saravanamani1999"},"content":"            \"|                    |\\n\"","lastModifiedDate":"2021-11-01"},{"lineNumber":90,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-11-01"},{"lineNumber":91,"author":{"gitId":"saravanamani1999"},"content":"            \"+-------------+--------------------+--------------------+--------------------+--------------------\"","lastModifiedDate":"2021-10-25"},{"lineNumber":92,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-10-25"},{"lineNumber":93,"author":{"gitId":"saravanamani1999"},"content":"            \"+--------------------+\\n\"","lastModifiedDate":"2021-11-01"},{"lineNumber":94,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-11-01"},{"lineNumber":95,"author":{"gitId":"saravanamani1999"},"content":"            \"|1000 - 1030  |                    |                    |                    |                    \"","lastModifiedDate":"2021-11-01"},{"lineNumber":96,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-10-25"},{"lineNumber":97,"author":{"gitId":"saravanamani1999"},"content":"            \"|                    |\\n\"","lastModifiedDate":"2021-11-01"},{"lineNumber":98,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-11-01"},{"lineNumber":99,"author":{"gitId":"saravanamani1999"},"content":"            \"+-------------+--------------------+--------------------+--------------------+--------------------\"","lastModifiedDate":"2021-11-01"},{"lineNumber":100,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-10-25"},{"lineNumber":101,"author":{"gitId":"saravanamani1999"},"content":"            \"+--------------------+\\n\"","lastModifiedDate":"2021-11-01"},{"lineNumber":102,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-11-01"},{"lineNumber":103,"author":{"gitId":"saravanamani1999"},"content":"            \"|1030 - 1100  |                    |                    |                    |                    \"","lastModifiedDate":"2021-11-01"},{"lineNumber":104,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-10-25"},{"lineNumber":105,"author":{"gitId":"saravanamani1999"},"content":"            \"|                    |\\n\"","lastModifiedDate":"2021-11-01"},{"lineNumber":106,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-11-01"},{"lineNumber":107,"author":{"gitId":"saravanamani1999"},"content":"            \"+-------------+--------------------+--------------------+--------------------+--------------------\"","lastModifiedDate":"2021-10-25"},{"lineNumber":108,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-10-25"},{"lineNumber":109,"author":{"gitId":"saravanamani1999"},"content":"            \"+--------------------+\\n\"","lastModifiedDate":"2021-11-01"},{"lineNumber":110,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-11-01"},{"lineNumber":111,"author":{"gitId":"saravanamani1999"},"content":"            \"|1100 - 1130  |                    |                    |                    |                    \"","lastModifiedDate":"2021-11-01"},{"lineNumber":112,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-10-25"},{"lineNumber":113,"author":{"gitId":"saravanamani1999"},"content":"            \"|                    |\\n\"","lastModifiedDate":"2021-11-01"},{"lineNumber":114,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-11-01"},{"lineNumber":115,"author":{"gitId":"saravanamani1999"},"content":"            \"+-------------+--------------------+--------------------+--------------------+--------------------\"","lastModifiedDate":"2021-11-01"},{"lineNumber":116,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-10-25"},{"lineNumber":117,"author":{"gitId":"saravanamani1999"},"content":"            \"+--------------------+\\n\"","lastModifiedDate":"2021-11-01"},{"lineNumber":118,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-11-01"},{"lineNumber":119,"author":{"gitId":"saravanamani1999"},"content":"            \"|1130 - 1200  |                    |                    |                    |                    \"","lastModifiedDate":"2021-11-01"},{"lineNumber":120,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-10-25"},{"lineNumber":121,"author":{"gitId":"saravanamani1999"},"content":"            \"|                    |\\n\"","lastModifiedDate":"2021-11-01"},{"lineNumber":122,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-11-01"},{"lineNumber":123,"author":{"gitId":"saravanamani1999"},"content":"            \"+-------------+--------------------+--------------------+--------------------+--------------------\"","lastModifiedDate":"2021-10-25"},{"lineNumber":124,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-10-25"},{"lineNumber":125,"author":{"gitId":"saravanamani1999"},"content":"            \"+--------------------+\\n\"","lastModifiedDate":"2021-11-01"},{"lineNumber":126,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-11-01"},{"lineNumber":127,"author":{"gitId":"saravanamani1999"},"content":"            \"|1200 - 1230  |                    |                    |                    |                    \"","lastModifiedDate":"2021-11-01"},{"lineNumber":128,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-10-25"},{"lineNumber":129,"author":{"gitId":"saravanamani1999"},"content":"            \"|                    |\\n\"","lastModifiedDate":"2021-11-01"},{"lineNumber":130,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-11-01"},{"lineNumber":131,"author":{"gitId":"saravanamani1999"},"content":"            \"+-------------+--------------------+--------------------+--------------------+--------------------\"","lastModifiedDate":"2021-11-01"},{"lineNumber":132,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-10-25"},{"lineNumber":133,"author":{"gitId":"saravanamani1999"},"content":"            \"+--------------------+\\n\"","lastModifiedDate":"2021-11-01"},{"lineNumber":134,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-11-01"},{"lineNumber":135,"author":{"gitId":"saravanamani1999"},"content":"            \"|1230 - 1300  |                    |                    |                    |                    \"","lastModifiedDate":"2021-11-01"},{"lineNumber":136,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-10-25"},{"lineNumber":137,"author":{"gitId":"saravanamani1999"},"content":"            \"|                    |\\n\"","lastModifiedDate":"2021-11-01"},{"lineNumber":138,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-11-01"},{"lineNumber":139,"author":{"gitId":"saravanamani1999"},"content":"            \"+-------------+--------------------+--------------------+--------------------+--------------------\"","lastModifiedDate":"2021-10-25"},{"lineNumber":140,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-10-25"},{"lineNumber":141,"author":{"gitId":"saravanamani1999"},"content":"            \"+--------------------+\\n\"","lastModifiedDate":"2021-11-01"},{"lineNumber":142,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-11-01"},{"lineNumber":143,"author":{"gitId":"saravanamani1999"},"content":"            \"|1300 - 1330  |                    |                    |                    |                    \"","lastModifiedDate":"2021-11-01"},{"lineNumber":144,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-10-25"},{"lineNumber":145,"author":{"gitId":"saravanamani1999"},"content":"            \"|                    |\\n\"","lastModifiedDate":"2021-11-01"},{"lineNumber":146,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-11-01"},{"lineNumber":147,"author":{"gitId":"saravanamani1999"},"content":"            \"+-------------+--------------------+--------------------+--------------------+--------------------\"","lastModifiedDate":"2021-11-01"},{"lineNumber":148,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-10-25"},{"lineNumber":149,"author":{"gitId":"saravanamani1999"},"content":"            \"+--------------------+\\n\"","lastModifiedDate":"2021-11-01"},{"lineNumber":150,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-11-01"},{"lineNumber":151,"author":{"gitId":"saravanamani1999"},"content":"            \"|1330 - 1400  |                    |                    |                    |                    \"","lastModifiedDate":"2021-11-01"},{"lineNumber":152,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-10-25"},{"lineNumber":153,"author":{"gitId":"saravanamani1999"},"content":"            \"|                    |\\n\"","lastModifiedDate":"2021-11-01"},{"lineNumber":154,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-11-01"},{"lineNumber":155,"author":{"gitId":"saravanamani1999"},"content":"            \"+-------------+--------------------+--------------------+--------------------+--------------------\"","lastModifiedDate":"2021-10-25"},{"lineNumber":156,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-10-25"},{"lineNumber":157,"author":{"gitId":"saravanamani1999"},"content":"            \"+--------------------+\\n\"","lastModifiedDate":"2021-11-01"},{"lineNumber":158,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-11-01"},{"lineNumber":159,"author":{"gitId":"saravanamani1999"},"content":"            \"|1400 - 1430  |                    |                    |                    |                    \"","lastModifiedDate":"2021-11-01"},{"lineNumber":160,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-10-25"},{"lineNumber":161,"author":{"gitId":"saravanamani1999"},"content":"            \"|                    |\\n\"","lastModifiedDate":"2021-11-01"},{"lineNumber":162,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-11-01"},{"lineNumber":163,"author":{"gitId":"saravanamani1999"},"content":"            \"+-------------+--------------------+--------------------+--------------------+--------------------\"","lastModifiedDate":"2021-11-01"},{"lineNumber":164,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-10-25"},{"lineNumber":165,"author":{"gitId":"saravanamani1999"},"content":"            \"+--------------------+\\n\"","lastModifiedDate":"2021-11-01"},{"lineNumber":166,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-11-01"},{"lineNumber":167,"author":{"gitId":"saravanamani1999"},"content":"            \"|1430 - 1500  |                    |                    |                    |                    \"","lastModifiedDate":"2021-11-01"},{"lineNumber":168,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-10-25"},{"lineNumber":169,"author":{"gitId":"saravanamani1999"},"content":"            \"|                    |\\n\"","lastModifiedDate":"2021-11-01"},{"lineNumber":170,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-11-01"},{"lineNumber":171,"author":{"gitId":"saravanamani1999"},"content":"            \"+-------------+--------------------+--------------------+--------------------+--------------------\"","lastModifiedDate":"2021-10-25"},{"lineNumber":172,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-10-25"},{"lineNumber":173,"author":{"gitId":"saravanamani1999"},"content":"            \"+--------------------+\\n\"","lastModifiedDate":"2021-11-01"},{"lineNumber":174,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-11-01"},{"lineNumber":175,"author":{"gitId":"saravanamani1999"},"content":"            \"|1500 - 1530  |                    |                    |                    |                    \"","lastModifiedDate":"2021-11-01"},{"lineNumber":176,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-10-25"},{"lineNumber":177,"author":{"gitId":"saravanamani1999"},"content":"            \"|                    |\\n\"","lastModifiedDate":"2021-11-01"},{"lineNumber":178,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-11-01"},{"lineNumber":179,"author":{"gitId":"saravanamani1999"},"content":"            \"+-------------+--------------------+--------------------+--------------------+--------------------\"","lastModifiedDate":"2021-11-01"},{"lineNumber":180,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-10-25"},{"lineNumber":181,"author":{"gitId":"saravanamani1999"},"content":"            \"+--------------------+\\n\"","lastModifiedDate":"2021-11-01"},{"lineNumber":182,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-11-01"},{"lineNumber":183,"author":{"gitId":"saravanamani1999"},"content":"            \"|1530 - 1600  |                    |                    |                    |                    \"","lastModifiedDate":"2021-11-01"},{"lineNumber":184,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-10-25"},{"lineNumber":185,"author":{"gitId":"saravanamani1999"},"content":"            \"|                    |\\n\"","lastModifiedDate":"2021-11-01"},{"lineNumber":186,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-11-01"},{"lineNumber":187,"author":{"gitId":"saravanamani1999"},"content":"            \"+-------------+--------------------+--------------------+--------------------+--------------------\"","lastModifiedDate":"2021-10-25"},{"lineNumber":188,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-10-25"},{"lineNumber":189,"author":{"gitId":"saravanamani1999"},"content":"            \"+--------------------+\\n\"","lastModifiedDate":"2021-11-01"},{"lineNumber":190,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-11-01"},{"lineNumber":191,"author":{"gitId":"saravanamani1999"},"content":"            \"|1600 - 1630  |                    |                    |                    |                    \"","lastModifiedDate":"2021-11-01"},{"lineNumber":192,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-10-25"},{"lineNumber":193,"author":{"gitId":"saravanamani1999"},"content":"            \"|                    |\\n\"","lastModifiedDate":"2021-11-01"},{"lineNumber":194,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-11-01"},{"lineNumber":195,"author":{"gitId":"saravanamani1999"},"content":"            \"+-------------+--------------------+--------------------+--------------------+--------------------\"","lastModifiedDate":"2021-11-01"},{"lineNumber":196,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-10-25"},{"lineNumber":197,"author":{"gitId":"saravanamani1999"},"content":"            \"+--------------------+\\n\"","lastModifiedDate":"2021-11-01"},{"lineNumber":198,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-11-01"},{"lineNumber":199,"author":{"gitId":"saravanamani1999"},"content":"            \"|1630 - 1700  |                    |                    |                    |                    \"","lastModifiedDate":"2021-11-01"},{"lineNumber":200,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-10-25"},{"lineNumber":201,"author":{"gitId":"saravanamani1999"},"content":"            \"|                    |\\n\"","lastModifiedDate":"2021-11-01"},{"lineNumber":202,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-11-01"},{"lineNumber":203,"author":{"gitId":"saravanamani1999"},"content":"            \"+-------------+--------------------+--------------------+--------------------+--------------------\"","lastModifiedDate":"2021-10-25"},{"lineNumber":204,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-10-25"},{"lineNumber":205,"author":{"gitId":"saravanamani1999"},"content":"            \"+--------------------+\\n\"","lastModifiedDate":"2021-11-01"},{"lineNumber":206,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-11-01"},{"lineNumber":207,"author":{"gitId":"saravanamani1999"},"content":"            \"|1700 - 1730  |                    |                    |                    |                    \"","lastModifiedDate":"2021-11-01"},{"lineNumber":208,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-10-25"},{"lineNumber":209,"author":{"gitId":"saravanamani1999"},"content":"            \"|                    |\\n\"","lastModifiedDate":"2021-11-01"},{"lineNumber":210,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-11-01"},{"lineNumber":211,"author":{"gitId":"saravanamani1999"},"content":"            \"+-------------+--------------------+--------------------+--------------------+--------------------\"","lastModifiedDate":"2021-11-01"},{"lineNumber":212,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-10-25"},{"lineNumber":213,"author":{"gitId":"saravanamani1999"},"content":"            \"+--------------------+\\n\"","lastModifiedDate":"2021-11-01"},{"lineNumber":214,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-11-01"},{"lineNumber":215,"author":{"gitId":"saravanamani1999"},"content":"            \"|1730 - 1800  |                    |                    |                    |                    \"","lastModifiedDate":"2021-11-01"},{"lineNumber":216,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-10-25"},{"lineNumber":217,"author":{"gitId":"saravanamani1999"},"content":"            \"|                    |\\n\"","lastModifiedDate":"2021-11-01"},{"lineNumber":218,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-11-01"},{"lineNumber":219,"author":{"gitId":"saravanamani1999"},"content":"            \"+-------------+--------------------+--------------------+--------------------+--------------------\"","lastModifiedDate":"2021-10-25"},{"lineNumber":220,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-10-25"},{"lineNumber":221,"author":{"gitId":"saravanamani1999"},"content":"            \"+--------------------+\\n\"","lastModifiedDate":"2021-11-01"},{"lineNumber":222,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-11-01"},{"lineNumber":223,"author":{"gitId":"saravanamani1999"},"content":"            \"|1800 - 1830  |                    |                    |                    |                    \"","lastModifiedDate":"2021-11-01"},{"lineNumber":224,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-10-25"},{"lineNumber":225,"author":{"gitId":"saravanamani1999"},"content":"            \"|                    |\\n\"","lastModifiedDate":"2021-11-01"},{"lineNumber":226,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-11-01"},{"lineNumber":227,"author":{"gitId":"saravanamani1999"},"content":"            \"+-------------+--------------------+--------------------+--------------------+--------------------+\"","lastModifiedDate":"2021-11-01"},{"lineNumber":228,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-10-25"},{"lineNumber":229,"author":{"gitId":"saravanamani1999"},"content":"            \"--------------------+\\n\"","lastModifiedDate":"2021-11-01"},{"lineNumber":230,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-11-01"},{"lineNumber":231,"author":{"gitId":"saravanamani1999"},"content":"            \"|1830 - 1900  |                    |                    |                    |                    \"","lastModifiedDate":"2021-11-01"},{"lineNumber":232,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-10-25"},{"lineNumber":233,"author":{"gitId":"saravanamani1999"},"content":"            \"|                    |\\n\"","lastModifiedDate":"2021-11-01"},{"lineNumber":234,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-11-01"},{"lineNumber":235,"author":{"gitId":"saravanamani1999"},"content":"            \"+-------------+--------------------+--------------------+--------------------+--------------------\"","lastModifiedDate":"2021-10-25"},{"lineNumber":236,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-10-25"},{"lineNumber":237,"author":{"gitId":"saravanamani1999"},"content":"            \"+--------------------+\\n\"","lastModifiedDate":"2021-11-01"},{"lineNumber":238,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-11-01"},{"lineNumber":239,"author":{"gitId":"saravanamani1999"},"content":"            \"|1900 - 1930  |                    |                    |                    |                    \"","lastModifiedDate":"2021-11-01"},{"lineNumber":240,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-10-25"},{"lineNumber":241,"author":{"gitId":"saravanamani1999"},"content":"            \"|                    |\\n\"","lastModifiedDate":"2021-11-01"},{"lineNumber":242,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-11-01"},{"lineNumber":243,"author":{"gitId":"saravanamani1999"},"content":"            \"+-------------+--------------------+--------------------+--------------------+--------------------\"","lastModifiedDate":"2021-11-01"},{"lineNumber":244,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-10-25"},{"lineNumber":245,"author":{"gitId":"saravanamani1999"},"content":"            \"+--------------------+\\n\"","lastModifiedDate":"2021-11-01"},{"lineNumber":246,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-11-01"},{"lineNumber":247,"author":{"gitId":"saravanamani1999"},"content":"            \"|1930 - 2000  |                    |                    |                    |                    \"","lastModifiedDate":"2021-11-01"},{"lineNumber":248,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-10-25"},{"lineNumber":249,"author":{"gitId":"saravanamani1999"},"content":"            \"|                    |\\n\"","lastModifiedDate":"2021-11-01"},{"lineNumber":250,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-11-01"},{"lineNumber":251,"author":{"gitId":"saravanamani1999"},"content":"            \"+-------------+--------------------+--------------------+--------------------+--------------------\"","lastModifiedDate":"2021-10-25"},{"lineNumber":252,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-10-25"},{"lineNumber":253,"author":{"gitId":"saravanamani1999"},"content":"            \"+--------------------+\\n\"","lastModifiedDate":"2021-11-01"},{"lineNumber":254,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-11-01"},{"lineNumber":255,"author":{"gitId":"saravanamani1999"},"content":"            \"|2000 - 2030  |                    |                    |                    |                    \"","lastModifiedDate":"2021-11-01"},{"lineNumber":256,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-10-25"},{"lineNumber":257,"author":{"gitId":"saravanamani1999"},"content":"            \"|                    |\\n\"","lastModifiedDate":"2021-11-01"},{"lineNumber":258,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-11-01"},{"lineNumber":259,"author":{"gitId":"saravanamani1999"},"content":"            \"+-------------+--------------------+--------------------+--------------------+--------------------\"","lastModifiedDate":"2021-11-01"},{"lineNumber":260,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-10-25"},{"lineNumber":261,"author":{"gitId":"saravanamani1999"},"content":"            \"+--------------------+\\n\"","lastModifiedDate":"2021-11-01"},{"lineNumber":262,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-11-01"},{"lineNumber":263,"author":{"gitId":"saravanamani1999"},"content":"            \"|2030 - 2100  |                    |                    |                    |                    \"","lastModifiedDate":"2021-11-01"},{"lineNumber":264,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-10-25"},{"lineNumber":265,"author":{"gitId":"saravanamani1999"},"content":"            \"|                    |\\n\"","lastModifiedDate":"2021-11-01"},{"lineNumber":266,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-11-01"},{"lineNumber":267,"author":{"gitId":"saravanamani1999"},"content":"            \"+-------------+--------------------+--------------------+--------------------+--------------------\"","lastModifiedDate":"2021-10-25"},{"lineNumber":268,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-10-25"},{"lineNumber":269,"author":{"gitId":"saravanamani1999"},"content":"            \"+--------------------+\";","lastModifiedDate":"2021-11-01"},{"lineNumber":270,"author":{"gitId":"saravanamani1999"},"content":"    private static final String ONE_LESSON_IN_TIMETABLE \u003d \"+-------------+--------------------+--------------------\"","lastModifiedDate":"2021-10-25"},{"lineNumber":271,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-10-25"},{"lineNumber":272,"author":{"gitId":"saravanamani1999"},"content":"            \"+--------------------+--------------------+--------------------+\\n\"","lastModifiedDate":"2021-11-01"},{"lineNumber":273,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-11-01"},{"lineNumber":274,"author":{"gitId":"saravanamani1999"},"content":"            \"|             |       MONDAY       |       TUESDAY      |      WEDNESDAY     |      THURSDAY      \"","lastModifiedDate":"2021-10-25"},{"lineNumber":275,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-10-25"},{"lineNumber":276,"author":{"gitId":"saravanamani1999"},"content":"            \"|       FRIDAY       |\\n\"","lastModifiedDate":"2021-11-01"},{"lineNumber":277,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-11-01"},{"lineNumber":278,"author":{"gitId":"saravanamani1999"},"content":"            \"+-------------+--------------------+--------------------+--------------------+--------------------\"","lastModifiedDate":"2021-11-01"},{"lineNumber":279,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-10-25"},{"lineNumber":280,"author":{"gitId":"saravanamani1999"},"content":"            \"+--------------------+\\n\"","lastModifiedDate":"2021-11-01"},{"lineNumber":281,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-11-01"},{"lineNumber":282,"author":{"gitId":"saravanamani1999"},"content":"            \"|0600 - 0630  |     CS1231 TUT     |                    |                    |                    \"","lastModifiedDate":"2021-11-01"},{"lineNumber":283,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-10-25"},{"lineNumber":284,"author":{"gitId":"saravanamani1999"},"content":"            \"|                    |\\n\"","lastModifiedDate":"2021-11-01"},{"lineNumber":285,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-11-01"},{"lineNumber":286,"author":{"gitId":"saravanamani1999"},"content":"            \"+-------------+--------------------+--------------------+--------------------+--------------------\"","lastModifiedDate":"2021-11-01"},{"lineNumber":287,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-10-25"},{"lineNumber":288,"author":{"gitId":"saravanamani1999"},"content":"            \"+--------------------+\\n\"","lastModifiedDate":"2021-11-01"},{"lineNumber":289,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-11-01"},{"lineNumber":290,"author":{"gitId":"saravanamani1999"},"content":"            \"|0630 - 0700  |                    |                    |                    |                    \"","lastModifiedDate":"2021-11-01"},{"lineNumber":291,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-10-25"},{"lineNumber":292,"author":{"gitId":"saravanamani1999"},"content":"            \"|                    |\\n\"","lastModifiedDate":"2021-11-01"},{"lineNumber":293,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-11-01"},{"lineNumber":294,"author":{"gitId":"saravanamani1999"},"content":"            \"+-------------+--------------------+--------------------+--------------------+--------------------\"","lastModifiedDate":"2021-11-01"},{"lineNumber":295,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-10-25"},{"lineNumber":296,"author":{"gitId":"saravanamani1999"},"content":"            \"+--------------------+\\n\"","lastModifiedDate":"2021-11-01"},{"lineNumber":297,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-11-01"},{"lineNumber":298,"author":{"gitId":"saravanamani1999"},"content":"            \"|0700 - 0730  |                    |                    |                    |                    \"","lastModifiedDate":"2021-11-01"},{"lineNumber":299,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-10-25"},{"lineNumber":300,"author":{"gitId":"saravanamani1999"},"content":"            \"|                    |\\n\"","lastModifiedDate":"2021-11-01"},{"lineNumber":301,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-11-01"},{"lineNumber":302,"author":{"gitId":"saravanamani1999"},"content":"            \"+-------------+--------------------+--------------------+--------------------+--------------------\"","lastModifiedDate":"2021-11-01"},{"lineNumber":303,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-10-25"},{"lineNumber":304,"author":{"gitId":"saravanamani1999"},"content":"            \"+--------------------+\\n\"","lastModifiedDate":"2021-11-01"},{"lineNumber":305,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-11-01"},{"lineNumber":306,"author":{"gitId":"saravanamani1999"},"content":"            \"|0730 - 0800  |                    |                    |                    |                    \"","lastModifiedDate":"2021-11-01"},{"lineNumber":307,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-11-01"},{"lineNumber":308,"author":{"gitId":"saravanamani1999"},"content":"            \"|                    |\\n\"","lastModifiedDate":"2021-11-01"},{"lineNumber":309,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-11-01"},{"lineNumber":310,"author":{"gitId":"saravanamani1999"},"content":"            \"+-------------+--------------------+--------------------+--------------------+--------------------\"","lastModifiedDate":"2021-10-25"},{"lineNumber":311,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-10-25"},{"lineNumber":312,"author":{"gitId":"saravanamani1999"},"content":"            \"+--------------------+\\n\"","lastModifiedDate":"2021-11-01"},{"lineNumber":313,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-11-01"},{"lineNumber":314,"author":{"gitId":"saravanamani1999"},"content":"            \"|0800 - 0830  |                    |                    |                    |                    \"","lastModifiedDate":"2021-11-01"},{"lineNumber":315,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-10-25"},{"lineNumber":316,"author":{"gitId":"saravanamani1999"},"content":"            \"|                    |\\n\"","lastModifiedDate":"2021-11-01"},{"lineNumber":317,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-11-01"},{"lineNumber":318,"author":{"gitId":"saravanamani1999"},"content":"            \"+-------------+--------------------+--------------------+--------------------+--------------------\"","lastModifiedDate":"2021-11-01"},{"lineNumber":319,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-10-25"},{"lineNumber":320,"author":{"gitId":"saravanamani1999"},"content":"            \"+--------------------+\\n\"","lastModifiedDate":"2021-11-01"},{"lineNumber":321,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-11-01"},{"lineNumber":322,"author":{"gitId":"saravanamani1999"},"content":"            \"|0830 - 0900  |                    |                    |                    |                    \"","lastModifiedDate":"2021-11-01"},{"lineNumber":323,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-10-25"},{"lineNumber":324,"author":{"gitId":"saravanamani1999"},"content":"            \"|                    |\\n\"","lastModifiedDate":"2021-11-01"},{"lineNumber":325,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-11-01"},{"lineNumber":326,"author":{"gitId":"saravanamani1999"},"content":"            \"+-------------+--------------------+--------------------+--------------------+--------------------\"","lastModifiedDate":"2021-10-25"},{"lineNumber":327,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-10-25"},{"lineNumber":328,"author":{"gitId":"saravanamani1999"},"content":"            \"+--------------------+\\n\"","lastModifiedDate":"2021-11-01"},{"lineNumber":329,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-11-01"},{"lineNumber":330,"author":{"gitId":"saravanamani1999"},"content":"            \"|0900 - 0930  |                    |                    |                    |                    \"","lastModifiedDate":"2021-11-01"},{"lineNumber":331,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-10-25"},{"lineNumber":332,"author":{"gitId":"saravanamani1999"},"content":"            \"|                    |\\n\"","lastModifiedDate":"2021-11-01"},{"lineNumber":333,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-11-01"},{"lineNumber":334,"author":{"gitId":"saravanamani1999"},"content":"            \"+-------------+--------------------+--------------------+--------------------+--------------------\"","lastModifiedDate":"2021-11-01"},{"lineNumber":335,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-10-25"},{"lineNumber":336,"author":{"gitId":"saravanamani1999"},"content":"            \"+--------------------+\\n\"","lastModifiedDate":"2021-11-01"},{"lineNumber":337,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-11-01"},{"lineNumber":338,"author":{"gitId":"saravanamani1999"},"content":"            \"|0930 - 1000  |                    |                    |                    |                    \"","lastModifiedDate":"2021-11-01"},{"lineNumber":339,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-10-25"},{"lineNumber":340,"author":{"gitId":"saravanamani1999"},"content":"            \"|                    |\\n\"","lastModifiedDate":"2021-11-01"},{"lineNumber":341,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-11-01"},{"lineNumber":342,"author":{"gitId":"saravanamani1999"},"content":"            \"+-------------+--------------------+--------------------+--------------------+--------------------\"","lastModifiedDate":"2021-10-25"},{"lineNumber":343,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-10-25"},{"lineNumber":344,"author":{"gitId":"saravanamani1999"},"content":"            \"+--------------------+\\n\"","lastModifiedDate":"2021-11-01"},{"lineNumber":345,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-11-01"},{"lineNumber":346,"author":{"gitId":"saravanamani1999"},"content":"            \"|1000 - 1030  |                    |                    |                    |                    \"","lastModifiedDate":"2021-11-01"},{"lineNumber":347,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-10-25"},{"lineNumber":348,"author":{"gitId":"saravanamani1999"},"content":"            \"|                    |\\n\"","lastModifiedDate":"2021-11-01"},{"lineNumber":349,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-11-01"},{"lineNumber":350,"author":{"gitId":"saravanamani1999"},"content":"            \"+-------------+--------------------+--------------------+--------------------+--------------------\"","lastModifiedDate":"2021-11-01"},{"lineNumber":351,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-10-25"},{"lineNumber":352,"author":{"gitId":"saravanamani1999"},"content":"            \"+--------------------+\\n\"","lastModifiedDate":"2021-11-01"},{"lineNumber":353,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-11-01"},{"lineNumber":354,"author":{"gitId":"saravanamani1999"},"content":"            \"|1030 - 1100  |                    |                    |                    |                    \"","lastModifiedDate":"2021-11-01"},{"lineNumber":355,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-10-25"},{"lineNumber":356,"author":{"gitId":"saravanamani1999"},"content":"            \"|                    |\\n\"","lastModifiedDate":"2021-11-01"},{"lineNumber":357,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-11-01"},{"lineNumber":358,"author":{"gitId":"saravanamani1999"},"content":"            \"+-------------+--------------------+--------------------+--------------------+--------------------\"","lastModifiedDate":"2021-10-25"},{"lineNumber":359,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-10-25"},{"lineNumber":360,"author":{"gitId":"saravanamani1999"},"content":"            \"+--------------------+\\n\"","lastModifiedDate":"2021-11-01"},{"lineNumber":361,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-11-01"},{"lineNumber":362,"author":{"gitId":"saravanamani1999"},"content":"            \"|1100 - 1130  |                    |                    |                    |                    \"","lastModifiedDate":"2021-11-01"},{"lineNumber":363,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-10-25"},{"lineNumber":364,"author":{"gitId":"saravanamani1999"},"content":"            \"|                    |\\n\"","lastModifiedDate":"2021-11-01"},{"lineNumber":365,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-11-01"},{"lineNumber":366,"author":{"gitId":"saravanamani1999"},"content":"            \"+-------------+--------------------+--------------------+--------------------+--------------------\"","lastModifiedDate":"2021-11-01"},{"lineNumber":367,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-10-25"},{"lineNumber":368,"author":{"gitId":"saravanamani1999"},"content":"            \"+--------------------+\\n\"","lastModifiedDate":"2021-11-01"},{"lineNumber":369,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-11-01"},{"lineNumber":370,"author":{"gitId":"saravanamani1999"},"content":"            \"|1130 - 1200  |                    |                    |                    |                    \"","lastModifiedDate":"2021-11-01"},{"lineNumber":371,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-10-25"},{"lineNumber":372,"author":{"gitId":"saravanamani1999"},"content":"            \"|                    |\\n\"","lastModifiedDate":"2021-11-01"},{"lineNumber":373,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-11-01"},{"lineNumber":374,"author":{"gitId":"saravanamani1999"},"content":"            \"+-------------+--------------------+--------------------+--------------------+--------------------\"","lastModifiedDate":"2021-10-25"},{"lineNumber":375,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-10-25"},{"lineNumber":376,"author":{"gitId":"saravanamani1999"},"content":"            \"+--------------------+\\n\"","lastModifiedDate":"2021-11-01"},{"lineNumber":377,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-11-01"},{"lineNumber":378,"author":{"gitId":"saravanamani1999"},"content":"            \"|1200 - 1230  |                    |                    |                    |                    \"","lastModifiedDate":"2021-11-01"},{"lineNumber":379,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-10-25"},{"lineNumber":380,"author":{"gitId":"saravanamani1999"},"content":"            \"|                    |\\n\"","lastModifiedDate":"2021-11-01"},{"lineNumber":381,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-11-01"},{"lineNumber":382,"author":{"gitId":"saravanamani1999"},"content":"            \"+-------------+--------------------+--------------------+--------------------+--------------------\"","lastModifiedDate":"2021-11-01"},{"lineNumber":383,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-10-25"},{"lineNumber":384,"author":{"gitId":"saravanamani1999"},"content":"            \"+--------------------+\\n\"","lastModifiedDate":"2021-11-01"},{"lineNumber":385,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-11-01"},{"lineNumber":386,"author":{"gitId":"saravanamani1999"},"content":"            \"|1230 - 1300  |                    |                    |                    |                    \"","lastModifiedDate":"2021-11-01"},{"lineNumber":387,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-10-25"},{"lineNumber":388,"author":{"gitId":"saravanamani1999"},"content":"            \"|                    |\\n\"","lastModifiedDate":"2021-11-01"},{"lineNumber":389,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-11-01"},{"lineNumber":390,"author":{"gitId":"saravanamani1999"},"content":"            \"+-------------+--------------------+--------------------+--------------------+--------------------\"","lastModifiedDate":"2021-10-25"},{"lineNumber":391,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-10-25"},{"lineNumber":392,"author":{"gitId":"saravanamani1999"},"content":"            \"+--------------------+\\n\"","lastModifiedDate":"2021-11-01"},{"lineNumber":393,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-11-01"},{"lineNumber":394,"author":{"gitId":"saravanamani1999"},"content":"            \"|1300 - 1330  |                    |                    |                    |                    \"","lastModifiedDate":"2021-11-01"},{"lineNumber":395,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-10-25"},{"lineNumber":396,"author":{"gitId":"saravanamani1999"},"content":"            \"|                    |\\n\"","lastModifiedDate":"2021-11-01"},{"lineNumber":397,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-11-01"},{"lineNumber":398,"author":{"gitId":"saravanamani1999"},"content":"            \"+-------------+--------------------+--------------------+--------------------+--------------------\"","lastModifiedDate":"2021-11-01"},{"lineNumber":399,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-10-25"},{"lineNumber":400,"author":{"gitId":"saravanamani1999"},"content":"            \"+--------------------+\\n\"","lastModifiedDate":"2021-11-01"},{"lineNumber":401,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-11-01"},{"lineNumber":402,"author":{"gitId":"saravanamani1999"},"content":"            \"|1330 - 1400  |                    |                    |                    |                    \"","lastModifiedDate":"2021-11-01"},{"lineNumber":403,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-10-25"},{"lineNumber":404,"author":{"gitId":"saravanamani1999"},"content":"            \"|                    |\\n\"","lastModifiedDate":"2021-11-01"},{"lineNumber":405,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-11-01"},{"lineNumber":406,"author":{"gitId":"saravanamani1999"},"content":"            \"+-------------+--------------------+--------------------+--------------------+--------------------\"","lastModifiedDate":"2021-10-25"},{"lineNumber":407,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-10-25"},{"lineNumber":408,"author":{"gitId":"saravanamani1999"},"content":"            \"+--------------------+\\n\"","lastModifiedDate":"2021-11-01"},{"lineNumber":409,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-11-01"},{"lineNumber":410,"author":{"gitId":"saravanamani1999"},"content":"            \"|1400 - 1430  |                    |                    |                    |                    \"","lastModifiedDate":"2021-11-01"},{"lineNumber":411,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-10-25"},{"lineNumber":412,"author":{"gitId":"saravanamani1999"},"content":"            \"|                    |\\n\"","lastModifiedDate":"2021-11-01"},{"lineNumber":413,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-11-01"},{"lineNumber":414,"author":{"gitId":"saravanamani1999"},"content":"            \"+-------------+--------------------+--------------------+--------------------+--------------------\"","lastModifiedDate":"2021-11-01"},{"lineNumber":415,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-10-25"},{"lineNumber":416,"author":{"gitId":"saravanamani1999"},"content":"            \"+--------------------+\\n\"","lastModifiedDate":"2021-11-01"},{"lineNumber":417,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-11-01"},{"lineNumber":418,"author":{"gitId":"saravanamani1999"},"content":"            \"|1430 - 1500  |                    |                    |                    |                    \"","lastModifiedDate":"2021-11-01"},{"lineNumber":419,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-10-25"},{"lineNumber":420,"author":{"gitId":"saravanamani1999"},"content":"            \"|                    |\\n\"","lastModifiedDate":"2021-11-01"},{"lineNumber":421,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-11-01"},{"lineNumber":422,"author":{"gitId":"saravanamani1999"},"content":"            \"+-------------+--------------------+--------------------+--------------------+--------------------\"","lastModifiedDate":"2021-10-25"},{"lineNumber":423,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-10-25"},{"lineNumber":424,"author":{"gitId":"saravanamani1999"},"content":"            \"+--------------------+\\n\"","lastModifiedDate":"2021-11-01"},{"lineNumber":425,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-11-01"},{"lineNumber":426,"author":{"gitId":"saravanamani1999"},"content":"            \"|1500 - 1530  |                    |                    |                    |                    \"","lastModifiedDate":"2021-11-01"},{"lineNumber":427,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-10-25"},{"lineNumber":428,"author":{"gitId":"saravanamani1999"},"content":"            \"|                    |\\n\"","lastModifiedDate":"2021-11-01"},{"lineNumber":429,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-11-01"},{"lineNumber":430,"author":{"gitId":"saravanamani1999"},"content":"            \"+-------------+--------------------+--------------------+--------------------+--------------------\"","lastModifiedDate":"2021-11-01"},{"lineNumber":431,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-10-25"},{"lineNumber":432,"author":{"gitId":"saravanamani1999"},"content":"            \"+--------------------+\\n\"","lastModifiedDate":"2021-11-01"},{"lineNumber":433,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-11-01"},{"lineNumber":434,"author":{"gitId":"saravanamani1999"},"content":"            \"|1530 - 1600  |                    |                    |                    |                    \"","lastModifiedDate":"2021-11-01"},{"lineNumber":435,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-10-25"},{"lineNumber":436,"author":{"gitId":"saravanamani1999"},"content":"            \"|                    |\\n\"","lastModifiedDate":"2021-11-01"},{"lineNumber":437,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-11-01"},{"lineNumber":438,"author":{"gitId":"saravanamani1999"},"content":"            \"+-------------+--------------------+--------------------+--------------------+--------------------\"","lastModifiedDate":"2021-10-25"},{"lineNumber":439,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-10-25"},{"lineNumber":440,"author":{"gitId":"saravanamani1999"},"content":"            \"+--------------------+\\n\"","lastModifiedDate":"2021-11-01"},{"lineNumber":441,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-11-01"},{"lineNumber":442,"author":{"gitId":"saravanamani1999"},"content":"            \"|1600 - 1630  |                    |                    |                    |                    \"","lastModifiedDate":"2021-11-01"},{"lineNumber":443,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-10-25"},{"lineNumber":444,"author":{"gitId":"saravanamani1999"},"content":"            \"|                    |\\n\"","lastModifiedDate":"2021-11-01"},{"lineNumber":445,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-11-01"},{"lineNumber":446,"author":{"gitId":"saravanamani1999"},"content":"            \"+-------------+--------------------+--------------------+--------------------+--------------------\"","lastModifiedDate":"2021-11-01"},{"lineNumber":447,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-10-25"},{"lineNumber":448,"author":{"gitId":"saravanamani1999"},"content":"            \"+--------------------+\\n\"","lastModifiedDate":"2021-11-01"},{"lineNumber":449,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-11-01"},{"lineNumber":450,"author":{"gitId":"saravanamani1999"},"content":"            \"|1630 - 1700  |                    |                    |                    |                    \"","lastModifiedDate":"2021-11-01"},{"lineNumber":451,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-10-25"},{"lineNumber":452,"author":{"gitId":"saravanamani1999"},"content":"            \"|                    |\\n\"","lastModifiedDate":"2021-11-01"},{"lineNumber":453,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-11-01"},{"lineNumber":454,"author":{"gitId":"saravanamani1999"},"content":"            \"+-------------+--------------------+--------------------+--------------------+--------------------\"","lastModifiedDate":"2021-10-25"},{"lineNumber":455,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-10-25"},{"lineNumber":456,"author":{"gitId":"saravanamani1999"},"content":"            \"+--------------------+\\n\"","lastModifiedDate":"2021-11-01"},{"lineNumber":457,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-11-01"},{"lineNumber":458,"author":{"gitId":"saravanamani1999"},"content":"            \"|1700 - 1730  |                    |                    |                    |                    \"","lastModifiedDate":"2021-11-01"},{"lineNumber":459,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-10-25"},{"lineNumber":460,"author":{"gitId":"saravanamani1999"},"content":"            \"|                    |\\n\"","lastModifiedDate":"2021-11-01"},{"lineNumber":461,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-11-01"},{"lineNumber":462,"author":{"gitId":"saravanamani1999"},"content":"            \"+-------------+--------------------+--------------------+--------------------+--------------------\"","lastModifiedDate":"2021-11-01"},{"lineNumber":463,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-10-25"},{"lineNumber":464,"author":{"gitId":"saravanamani1999"},"content":"            \"+--------------------+\\n\"","lastModifiedDate":"2021-11-01"},{"lineNumber":465,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-11-01"},{"lineNumber":466,"author":{"gitId":"saravanamani1999"},"content":"            \"|1730 - 1800  |                    |                    |                    |                    \"","lastModifiedDate":"2021-11-01"},{"lineNumber":467,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-10-25"},{"lineNumber":468,"author":{"gitId":"saravanamani1999"},"content":"            \"|                    |\\n\"","lastModifiedDate":"2021-11-01"},{"lineNumber":469,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-11-01"},{"lineNumber":470,"author":{"gitId":"saravanamani1999"},"content":"            \"+-------------+--------------------+--------------------+--------------------+--------------------\"","lastModifiedDate":"2021-10-25"},{"lineNumber":471,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-10-25"},{"lineNumber":472,"author":{"gitId":"saravanamani1999"},"content":"            \"+--------------------+\\n\"","lastModifiedDate":"2021-11-01"},{"lineNumber":473,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-11-01"},{"lineNumber":474,"author":{"gitId":"saravanamani1999"},"content":"            \"|1800 - 1830  |                    |                    |                    |                    \"","lastModifiedDate":"2021-11-01"},{"lineNumber":475,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-10-25"},{"lineNumber":476,"author":{"gitId":"saravanamani1999"},"content":"            \"|                    |\\n\"","lastModifiedDate":"2021-11-01"},{"lineNumber":477,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-11-01"},{"lineNumber":478,"author":{"gitId":"saravanamani1999"},"content":"            \"+-------------+--------------------+--------------------+--------------------+--------------------+\"","lastModifiedDate":"2021-11-01"},{"lineNumber":479,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-10-25"},{"lineNumber":480,"author":{"gitId":"saravanamani1999"},"content":"            \"--------------------+\\n\"","lastModifiedDate":"2021-11-01"},{"lineNumber":481,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-11-01"},{"lineNumber":482,"author":{"gitId":"saravanamani1999"},"content":"            \"|1830 - 1900  |                    |                    |                    |                    \"","lastModifiedDate":"2021-11-01"},{"lineNumber":483,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-10-25"},{"lineNumber":484,"author":{"gitId":"saravanamani1999"},"content":"            \"|                    |\\n\"","lastModifiedDate":"2021-11-01"},{"lineNumber":485,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-11-01"},{"lineNumber":486,"author":{"gitId":"saravanamani1999"},"content":"            \"+-------------+--------------------+--------------------+--------------------+--------------------\"","lastModifiedDate":"2021-10-25"},{"lineNumber":487,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-10-25"},{"lineNumber":488,"author":{"gitId":"saravanamani1999"},"content":"            \"+--------------------+\\n\"","lastModifiedDate":"2021-11-01"},{"lineNumber":489,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-11-01"},{"lineNumber":490,"author":{"gitId":"saravanamani1999"},"content":"            \"|1900 - 1930  |                    |                    |                    |                    \"","lastModifiedDate":"2021-11-01"},{"lineNumber":491,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-10-25"},{"lineNumber":492,"author":{"gitId":"saravanamani1999"},"content":"            \"|                    |\\n\"","lastModifiedDate":"2021-11-01"},{"lineNumber":493,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-11-01"},{"lineNumber":494,"author":{"gitId":"saravanamani1999"},"content":"            \"+-------------+--------------------+--------------------+--------------------+--------------------\"","lastModifiedDate":"2021-11-01"},{"lineNumber":495,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-10-25"},{"lineNumber":496,"author":{"gitId":"saravanamani1999"},"content":"            \"+--------------------+\\n\"","lastModifiedDate":"2021-11-01"},{"lineNumber":497,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-11-01"},{"lineNumber":498,"author":{"gitId":"saravanamani1999"},"content":"            \"|1930 - 2000  |                    |                    |                    |                    \"","lastModifiedDate":"2021-11-01"},{"lineNumber":499,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-10-25"},{"lineNumber":500,"author":{"gitId":"saravanamani1999"},"content":"            \"|                    |\\n\"","lastModifiedDate":"2021-11-01"},{"lineNumber":501,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-11-01"},{"lineNumber":502,"author":{"gitId":"saravanamani1999"},"content":"            \"+-------------+--------------------+--------------------+--------------------+--------------------\"","lastModifiedDate":"2021-10-25"},{"lineNumber":503,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-10-25"},{"lineNumber":504,"author":{"gitId":"saravanamani1999"},"content":"            \"+--------------------+\\n\"","lastModifiedDate":"2021-11-01"},{"lineNumber":505,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-11-01"},{"lineNumber":506,"author":{"gitId":"saravanamani1999"},"content":"            \"|2000 - 2030  |                    |                    |                    |                    \"","lastModifiedDate":"2021-11-01"},{"lineNumber":507,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-10-25"},{"lineNumber":508,"author":{"gitId":"saravanamani1999"},"content":"            \"|                    |\\n\"","lastModifiedDate":"2021-11-01"},{"lineNumber":509,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-11-01"},{"lineNumber":510,"author":{"gitId":"saravanamani1999"},"content":"            \"+-------------+--------------------+--------------------+--------------------+--------------------\"","lastModifiedDate":"2021-11-01"},{"lineNumber":511,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-10-25"},{"lineNumber":512,"author":{"gitId":"saravanamani1999"},"content":"            \"+--------------------+\\n\"","lastModifiedDate":"2021-11-01"},{"lineNumber":513,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-11-01"},{"lineNumber":514,"author":{"gitId":"saravanamani1999"},"content":"            \"|2030 - 2100  |                    |                    |                    |                    \"","lastModifiedDate":"2021-11-01"},{"lineNumber":515,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-10-25"},{"lineNumber":516,"author":{"gitId":"saravanamani1999"},"content":"            \"|                    |\\n\"","lastModifiedDate":"2021-11-01"},{"lineNumber":517,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-11-01"},{"lineNumber":518,"author":{"gitId":"saravanamani1999"},"content":"            \"+-------------+--------------------+--------------------+--------------------+--------------------\"","lastModifiedDate":"2021-10-25"},{"lineNumber":519,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-10-25"},{"lineNumber":520,"author":{"gitId":"saravanamani1999"},"content":"            \"+--------------------+\";","lastModifiedDate":"2021-11-01"},{"lineNumber":521,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":522,"author":{"gitId":"saravanamani1999"},"content":"    private static final String[] VALID_ADD_TUTORIAL_ARGUMENTS \u003d new String[] {\"CS1231\", \"TUT\", \"monday\",","lastModifiedDate":"2021-10-25"},{"lineNumber":523,"author":{"gitId":"saravanamani1999"},"content":"            \"0600\", \"0630\"};","lastModifiedDate":"2021-11-01"},{"lineNumber":524,"author":{"gitId":"saravanamani1999"},"content":"    private static final ModuleDb moduleDb \u003d new ModuleDb();","lastModifiedDate":"2021-10-25"},{"lineNumber":525,"author":{"gitId":"saravanamani1999"},"content":"    private ModuleList moduleList \u003d new ModuleList();","lastModifiedDate":"2021-10-25"},{"lineNumber":526,"author":{"gitId":"saravanamani1999"},"content":"    private Timetable timetable \u003d new Timetable(moduleList);","lastModifiedDate":"2021-10-25"},{"lineNumber":527,"author":{"gitId":"saravanamani1999"},"content":"    private final ByteArrayOutputStream output \u003d new ByteArrayOutputStream();","lastModifiedDate":"2021-10-25"},{"lineNumber":528,"author":{"gitId":"saravanamani1999"},"content":"    private final PrintStream standardOut \u003d System.out;","lastModifiedDate":"2021-10-25"},{"lineNumber":529,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":530,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":531,"author":{"gitId":"saravanamani1999"},"content":"    @BeforeAll","lastModifiedDate":"2021-10-25"},{"lineNumber":532,"author":{"gitId":"saravanamani1999"},"content":"    public static void initModuleDb() {","lastModifiedDate":"2021-10-25"},{"lineNumber":533,"author":{"gitId":"saravanamani1999"},"content":"        moduleDb.initModuleDb();","lastModifiedDate":"2021-10-25"},{"lineNumber":534,"author":{"gitId":"saravanamani1999"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":535,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":536,"author":{"gitId":"saravanamani1999"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-25"},{"lineNumber":537,"author":{"gitId":"saravanamani1999"},"content":"    public void clear() {","lastModifiedDate":"2021-10-25"},{"lineNumber":538,"author":{"gitId":"saravanamani1999"},"content":"        moduleList.clear();","lastModifiedDate":"2021-10-25"},{"lineNumber":539,"author":{"gitId":"saravanamani1999"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":540,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":541,"author":{"gitId":"saravanamani1999"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-25"},{"lineNumber":542,"author":{"gitId":"saravanamani1999"},"content":"    public void setUp() {","lastModifiedDate":"2021-10-25"},{"lineNumber":543,"author":{"gitId":"saravanamani1999"},"content":"        System.setOut(new PrintStream(output));","lastModifiedDate":"2021-10-25"},{"lineNumber":544,"author":{"gitId":"saravanamani1999"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":545,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":546,"author":{"gitId":"saravanamani1999"},"content":"    @AfterEach","lastModifiedDate":"2021-10-25"},{"lineNumber":547,"author":{"gitId":"saravanamani1999"},"content":"    public void tearDown() {","lastModifiedDate":"2021-10-25"},{"lineNumber":548,"author":{"gitId":"saravanamani1999"},"content":"        System.setOut(standardOut);","lastModifiedDate":"2021-10-25"},{"lineNumber":549,"author":{"gitId":"saravanamani1999"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":550,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":551,"author":{"gitId":"saravanamani1999"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":552,"author":{"gitId":"saravanamani1999"},"content":"    void viewTimetable_noLessonInTimetable_emptyTimetablePrinted() {","lastModifiedDate":"2021-10-25"},{"lineNumber":553,"author":{"gitId":"saravanamani1999"},"content":"        timetable.clearTimetable();","lastModifiedDate":"2021-10-25"},{"lineNumber":554,"author":{"gitId":"saravanamani1999"},"content":"        timetable.executeView();","lastModifiedDate":"2021-10-25"},{"lineNumber":555,"author":{"gitId":"saravanamani1999"},"content":"        String expectedString \u003d EMPTY_TIMETABLE.replaceAll(\"\\\\n|\\\\r\\\\n\", System.getProperty(\"line.separator\"));","lastModifiedDate":"2021-10-25"},{"lineNumber":556,"author":{"gitId":"saravanamani1999"},"content":"        assertEquals(expectedString, output.toString().trim().replaceAll(\"\\\\n|\\\\r\\\\n\",","lastModifiedDate":"2021-10-25"},{"lineNumber":557,"author":{"gitId":"saravanamani1999"},"content":"                System.getProperty(\"line.separator\")));","lastModifiedDate":"2021-10-25"},{"lineNumber":558,"author":{"gitId":"saravanamani1999"},"content":"        timetable.clearTimetable();","lastModifiedDate":"2021-11-04"},{"lineNumber":559,"author":{"gitId":"saravanamani1999"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":560,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":561,"author":{"gitId":"saravanamani1999"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":562,"author":{"gitId":"saravanamani1999"},"content":"    void viewTimetable_oneLessonInTimetable_TimetablePrinted() throws KolinuxException {","lastModifiedDate":"2021-10-25"},{"lineNumber":563,"author":{"gitId":"saravanamani1999"},"content":"        timetable.clearTimetable();","lastModifiedDate":"2021-10-25"},{"lineNumber":564,"author":{"gitId":"giterator"},"content":"        moduleList.addModuleByCode(\"CS1231\", moduleDb);","lastModifiedDate":"2021-11-02"},{"lineNumber":565,"author":{"gitId":"saravanamani1999"},"content":"        timetable.executeAdd(VALID_ADD_TUTORIAL_ARGUMENTS, false);","lastModifiedDate":"2021-11-04"},{"lineNumber":566,"author":{"gitId":"saravanamani1999"},"content":"        timetable.executeView();","lastModifiedDate":"2021-10-25"},{"lineNumber":567,"author":{"gitId":"saravanamani1999"},"content":"        String expectedString \u003d ONE_LESSON_IN_TIMETABLE.replaceAll(\"\\\\n|\\\\r\\\\n\",","lastModifiedDate":"2021-10-25"},{"lineNumber":568,"author":{"gitId":"saravanamani1999"},"content":"                System.getProperty(\"line.separator\"));","lastModifiedDate":"2021-10-25"},{"lineNumber":569,"author":{"gitId":"saravanamani1999"},"content":"        assertEquals(expectedString, output.toString().trim().replaceAll(\"\\\\n|\\\\r\\\\n\",","lastModifiedDate":"2021-10-25"},{"lineNumber":570,"author":{"gitId":"saravanamani1999"},"content":"                System.getProperty(\"line.separator\")));","lastModifiedDate":"2021-10-25"},{"lineNumber":571,"author":{"gitId":"saravanamani1999"},"content":"        timetable.clearTimetable();","lastModifiedDate":"2021-11-04"},{"lineNumber":572,"author":{"gitId":"saravanamani1999"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":573,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":574,"author":{"gitId":"saravanamani1999"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":575,"author":{"gitId":"saravanamani1999"},"content":"    public void listTimetable_noLessonInList_timetableListed() throws KolinuxException {","lastModifiedDate":"2021-11-04"},{"lineNumber":576,"author":{"gitId":"saravanamani1999"},"content":"        timetable.clearTimetable();","lastModifiedDate":"2021-11-04"},{"lineNumber":577,"author":{"gitId":"saravanamani1999"},"content":"        timetable.listTimetable(\"friday\");","lastModifiedDate":"2021-11-04"},{"lineNumber":578,"author":{"gitId":"saravanamani1999"},"content":"        String expectedString \u003d \"You have no lessons on friday\";","lastModifiedDate":"2021-11-04"},{"lineNumber":579,"author":{"gitId":"saravanamani1999"},"content":"        assertEquals(expectedString, output.toString().trim().replaceAll(\"\\\\n|\\\\r\\\\n\",","lastModifiedDate":"2021-11-04"},{"lineNumber":580,"author":{"gitId":"saravanamani1999"},"content":"                System.getProperty(\"line.separator\")));","lastModifiedDate":"2021-11-04"},{"lineNumber":581,"author":{"gitId":"saravanamani1999"},"content":"        timetable.clearTimetable();","lastModifiedDate":"2021-11-04"},{"lineNumber":582,"author":{"gitId":"saravanamani1999"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":583,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":584,"author":{"gitId":"saravanamani1999"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":585,"author":{"gitId":"saravanamani1999"},"content":"    public void listTimetable_oneLessonInList_timetableListed() throws KolinuxException {","lastModifiedDate":"2021-11-04"},{"lineNumber":586,"author":{"gitId":"saravanamani1999"},"content":"        timetable.clearTimetable();","lastModifiedDate":"2021-11-04"},{"lineNumber":587,"author":{"gitId":"saravanamani1999"},"content":"        moduleList.addModuleByCode(\"CS1231\", moduleDb);","lastModifiedDate":"2021-11-04"},{"lineNumber":588,"author":{"gitId":"saravanamani1999"},"content":"        timetable.executeAdd(VALID_ADD_TUTORIAL_ARGUMENTS, false);","lastModifiedDate":"2021-11-04"},{"lineNumber":589,"author":{"gitId":"saravanamani1999"},"content":"        timetable.listTimetable(\"monday\");","lastModifiedDate":"2021-11-04"},{"lineNumber":590,"author":{"gitId":"saravanamani1999"},"content":"        String expectedString \u003d \"0600 - 0630 CS1231 TUT\";","lastModifiedDate":"2021-11-04"},{"lineNumber":591,"author":{"gitId":"saravanamani1999"},"content":"        assertEquals(expectedString, output.toString().trim().replaceAll(\"\\\\n|\\\\r\\\\n\",","lastModifiedDate":"2021-11-04"},{"lineNumber":592,"author":{"gitId":"saravanamani1999"},"content":"                System.getProperty(\"line.separator\")));","lastModifiedDate":"2021-11-04"},{"lineNumber":593,"author":{"gitId":"saravanamani1999"},"content":"        timetable.clearTimetable();","lastModifiedDate":"2021-11-04"},{"lineNumber":594,"author":{"gitId":"saravanamani1999"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":595,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":596,"author":{"gitId":"saravanamani1999"},"content":"}","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"giterator":1,"saravanamani1999":595}},{"path":"src/test/java/seedu/kolinux/timetable/TimetableTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"saravanamani1999"},"content":"package seedu.kolinux.timetable;","lastModifiedDate":"2021-10-22"},{"lineNumber":2,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"saravanamani1999"},"content":"import org.junit.jupiter.api.BeforeAll;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"saravanamani1999"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"saravanamani1999"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"powzx"},"content":"import seedu.kolinux.exceptions.KolinuxException;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"saravanamani1999"},"content":"import seedu.kolinux.module.ModuleDb;","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"saravanamani1999"},"content":"import seedu.kolinux.module.ModuleList;","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"saravanamani1999"},"content":"import seedu.kolinux.timetable.lesson.Lesson;","lastModifiedDate":"2021-10-22"},{"lineNumber":11,"author":{"gitId":"saravanamani1999"},"content":"import seedu.kolinux.timetable.lesson.Tutorial;","lastModifiedDate":"2021-10-30"},{"lineNumber":12,"author":{"gitId":"saravanamani1999"},"content":"import seedu.kolinux.timetable.subcommand.AddSubCommand;","lastModifiedDate":"2021-10-23"},{"lineNumber":13,"author":{"gitId":"saravanamani1999"},"content":"import seedu.kolinux.timetable.subcommand.SubCommand;","lastModifiedDate":"2021-10-23"},{"lineNumber":14,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":15,"author":{"gitId":"saravanamani1999"},"content":"import java.io.ByteArrayInputStream;","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"saravanamani1999"},"content":"import java.io.InputStream;","lastModifiedDate":"2021-11-04"},{"lineNumber":17,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":18,"author":{"gitId":"saravanamani1999"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"saravanamani1999"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"saravanamani1999"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"saravanamani1999"},"content":"import static seedu.kolinux.timetable.lesson.Lesson.days;","lastModifiedDate":"2021-10-22"},{"lineNumber":22,"author":{"gitId":"saravanamani1999"},"content":"import static seedu.kolinux.timetable.lesson.Lesson.getIndex;","lastModifiedDate":"2021-10-22"},{"lineNumber":23,"author":{"gitId":"saravanamani1999"},"content":"import static seedu.kolinux.timetable.lesson.Lesson.schoolHours;","lastModifiedDate":"2021-10-22"},{"lineNumber":24,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"saravanamani1999"},"content":"public class TimetableTest {","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"saravanamani1999"},"content":"    private static final String[] VALID_ADD_TUTORIAL_ARGUMENTS \u003d new String[] {\"CS1231\", \"TUT\", \"monday\",","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"saravanamani1999"},"content":"            \"0600\", \"0700\"};","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"saravanamani1999"},"content":"    private static final String[] ANOTHER_VALID_ADD_TUTORIAL_ARGUMENTS \u003d new String[] {\"CS1231\", \"TUT\", \"monday\",","lastModifiedDate":"2021-10-25"},{"lineNumber":31,"author":{"gitId":"saravanamani1999"},"content":"            \"0700\", \"0800\"};","lastModifiedDate":"2021-10-25"},{"lineNumber":32,"author":{"gitId":"saravanamani1999"},"content":"    private static final String[] EXCEED_ADD_TUTORIAL_ARGUMENTS \u003d new String[] {\"CS1231\", \"TUT\", \"monday\",","lastModifiedDate":"2021-11-04"},{"lineNumber":33,"author":{"gitId":"saravanamani1999"},"content":"            \"0600\", \"1000\"};","lastModifiedDate":"2021-11-04"},{"lineNumber":34,"author":{"gitId":"saravanamani1999"},"content":"    private static final String[] INVALID_ADD_TUTORIAL_TIMING \u003d new String[] {\"CS1231\", \"TUT\", \"monday\",","lastModifiedDate":"2021-10-25"},{"lineNumber":35,"author":{"gitId":"saravanamani1999"},"content":"            \"1300\", \"1200\"};","lastModifiedDate":"2021-10-25"},{"lineNumber":36,"author":{"gitId":"saravanamani1999"},"content":"    private static final String[] INACCESSIBLE_ADD_PERIOD \u003d new String[] {\"CS1010\", \"TUT\", \"monday\", \"0600\", \"0700\"};","lastModifiedDate":"2021-10-25"},{"lineNumber":37,"author":{"gitId":"saravanamani1999"},"content":"    private static final String[] VALID_ADD_LECTURE_ARGUMENTS \u003d new String[] {\"CS2113T\", \"LEC\", \"friday\", \"1900\",","lastModifiedDate":"2021-10-25"},{"lineNumber":38,"author":{"gitId":"saravanamani1999"},"content":"            \"2100\"};","lastModifiedDate":"2021-10-25"},{"lineNumber":39,"author":{"gitId":"saravanamani1999"},"content":"    private static final String[] VALID_ADD_LAB_ARGUMENTS \u003d new String[] {\"CS2040\", \"LAB\", \"monday\", \"0600\",","lastModifiedDate":"2021-10-25"},{"lineNumber":40,"author":{"gitId":"saravanamani1999"},"content":"            \"0700\"};","lastModifiedDate":"2021-10-25"},{"lineNumber":41,"author":{"gitId":"saravanamani1999"},"content":"    private static final String[] INVALID_DELETE_ARGUMENT \u003d new String[] {\"CS1010\", \"LESSON\", \"monday\",\"0600\"};","lastModifiedDate":"2021-10-31"},{"lineNumber":42,"author":{"gitId":"saravanamani1999"},"content":"    private static final String[] UPDATE_LESSON_ARGUMENTS \u003d new String[] {\"CS1231\", \"TUT\", \"monday\",\"0600\",\"tuesday\",","lastModifiedDate":"2021-10-31"},{"lineNumber":43,"author":{"gitId":"saravanamani1999"},"content":"            \"1500\"};","lastModifiedDate":"2021-10-25"},{"lineNumber":44,"author":{"gitId":"saravanamani1999"},"content":"    private static final String EXCEED_WORKLOAD \u003d \"Input hours for CS1231 TUT exceeds the total workload\\n\"","lastModifiedDate":"2021-11-04"},{"lineNumber":45,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-11-04"},{"lineNumber":46,"author":{"gitId":"saravanamani1999"},"content":"            \"It exceeds 1.0 hours\\n\"","lastModifiedDate":"2021-11-04"},{"lineNumber":47,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-11-04"},{"lineNumber":48,"author":{"gitId":"saravanamani1999"},"content":"            \"Do you want to continue adding the lesson despite\\n\"","lastModifiedDate":"2021-11-04"},{"lineNumber":49,"author":{"gitId":"saravanamani1999"},"content":"            +","lastModifiedDate":"2021-11-04"},{"lineNumber":50,"author":{"gitId":"saravanamani1999"},"content":"            \"exceeding the workload? Please enter y or n\";","lastModifiedDate":"2021-11-04"},{"lineNumber":51,"author":{"gitId":"saravanamani1999"},"content":"    private static final ModuleDb moduleDb \u003d new ModuleDb();","lastModifiedDate":"2021-10-20"},{"lineNumber":52,"author":{"gitId":"saravanamani1999"},"content":"    private ModuleList moduleList \u003d new ModuleList();","lastModifiedDate":"2021-10-22"},{"lineNumber":53,"author":{"gitId":"saravanamani1999"},"content":"    private Timetable timetable \u003d new Timetable(moduleList);","lastModifiedDate":"2021-10-22"},{"lineNumber":54,"author":{"gitId":"saravanamani1999"},"content":"    private AddSubCommand addSubCommand \u003d new AddSubCommand();","lastModifiedDate":"2021-10-23"},{"lineNumber":55,"author":{"gitId":"saravanamani1999"},"content":"    TimetablePromptHandler timetablePromptHandler;","lastModifiedDate":"2021-11-04"},{"lineNumber":56,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":57,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":58,"author":{"gitId":"saravanamani1999"},"content":"    @BeforeAll","lastModifiedDate":"2021-10-20"},{"lineNumber":59,"author":{"gitId":"saravanamani1999"},"content":"    public static void initModuleDb() {","lastModifiedDate":"2021-10-20"},{"lineNumber":60,"author":{"gitId":"saravanamani1999"},"content":"        moduleDb.initModuleDb();","lastModifiedDate":"2021-10-20"},{"lineNumber":61,"author":{"gitId":"saravanamani1999"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":62,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":63,"author":{"gitId":"saravanamani1999"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-20"},{"lineNumber":64,"author":{"gitId":"saravanamani1999"},"content":"    public void clear() {","lastModifiedDate":"2021-10-20"},{"lineNumber":65,"author":{"gitId":"saravanamani1999"},"content":"        moduleList.clear();","lastModifiedDate":"2021-10-20"},{"lineNumber":66,"author":{"gitId":"saravanamani1999"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":67,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":68,"author":{"gitId":"saravanamani1999"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":69,"author":{"gitId":"saravanamani1999"},"content":"    public void addTutorialToTimetable_validInput_tutorialAdded() throws KolinuxException {","lastModifiedDate":"2021-10-25"},{"lineNumber":70,"author":{"gitId":"saravanamani1999"},"content":"        timetable.clearTimetable();","lastModifiedDate":"2021-10-20"},{"lineNumber":71,"author":{"gitId":"saravanamani1999"},"content":"        Lesson lesson \u003d new Tutorial(VALID_ADD_TUTORIAL_ARGUMENTS);","lastModifiedDate":"2021-10-30"},{"lineNumber":72,"author":{"gitId":"saravanamani1999"},"content":"        addSubCommand.addToTimetable(lesson);","lastModifiedDate":"2021-10-23"},{"lineNumber":73,"author":{"gitId":"saravanamani1999"},"content":"        assertEquals(timetable.timetableData[getIndex(\"0600\", schoolHours)][getIndex(\"monday\", days)],","lastModifiedDate":"2021-10-25"},{"lineNumber":74,"author":{"gitId":"saravanamani1999"},"content":"                \"CS1231 TUT\");","lastModifiedDate":"2021-10-20"},{"lineNumber":75,"author":{"gitId":"saravanamani1999"},"content":"        timetable.clearTimetable();","lastModifiedDate":"2021-10-20"},{"lineNumber":76,"author":{"gitId":"saravanamani1999"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":77,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":78,"author":{"gitId":"saravanamani1999"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":79,"author":{"gitId":"saravanamani1999"},"content":"    public void addTutorialToTimetable_invalidTiming_tutorialNotAdded() {","lastModifiedDate":"2021-10-25"},{"lineNumber":80,"author":{"gitId":"saravanamani1999"},"content":"        try {","lastModifiedDate":"2021-10-18"},{"lineNumber":81,"author":{"gitId":"saravanamani1999"},"content":"            timetable.clearTimetable();","lastModifiedDate":"2021-10-20"},{"lineNumber":82,"author":{"gitId":"saravanamani1999"},"content":"            Lesson lesson \u003d new Tutorial(INVALID_ADD_TUTORIAL_TIMING);","lastModifiedDate":"2021-10-30"},{"lineNumber":83,"author":{"gitId":"saravanamani1999"},"content":"            addSubCommand.addToTimetable(lesson);","lastModifiedDate":"2021-10-23"},{"lineNumber":84,"author":{"gitId":"saravanamani1999"},"content":"            timetable.clearTimetable();","lastModifiedDate":"2021-10-20"},{"lineNumber":85,"author":{"gitId":"saravanamani1999"},"content":"        } catch (KolinuxException exception) {","lastModifiedDate":"2021-10-20"},{"lineNumber":86,"author":{"gitId":"saravanamani1999"},"content":"            assertEquals(SubCommand.INVALID_ADD_FORMAT + \"\\n\\n\" + SubCommand.INVALID_DAY_TIME,","lastModifiedDate":"2021-10-31"},{"lineNumber":87,"author":{"gitId":"saravanamani1999"},"content":"                    exception.getMessage());","lastModifiedDate":"2021-10-31"},{"lineNumber":88,"author":{"gitId":"saravanamani1999"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":89,"author":{"gitId":"saravanamani1999"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":90,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":91,"author":{"gitId":"saravanamani1999"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":92,"author":{"gitId":"saravanamani1999"},"content":"    public void addTutorialToTimetable_inaccessiblePeriod_tutorialNotAdded() {","lastModifiedDate":"2021-10-25"},{"lineNumber":93,"author":{"gitId":"saravanamani1999"},"content":"        try {","lastModifiedDate":"2021-10-12"},{"lineNumber":94,"author":{"gitId":"saravanamani1999"},"content":"            timetable.clearTimetable();","lastModifiedDate":"2021-10-20"},{"lineNumber":95,"author":{"gitId":"saravanamani1999"},"content":"            Lesson firstLesson \u003d new Tutorial(VALID_ADD_TUTORIAL_ARGUMENTS);","lastModifiedDate":"2021-10-30"},{"lineNumber":96,"author":{"gitId":"saravanamani1999"},"content":"            Lesson secondLesson \u003d new Tutorial(INACCESSIBLE_ADD_PERIOD);","lastModifiedDate":"2021-10-30"},{"lineNumber":97,"author":{"gitId":"saravanamani1999"},"content":"            addSubCommand.addToTimetable(firstLesson);","lastModifiedDate":"2021-10-23"},{"lineNumber":98,"author":{"gitId":"saravanamani1999"},"content":"            addSubCommand.addToTimetable(secondLesson);","lastModifiedDate":"2021-10-23"},{"lineNumber":99,"author":{"gitId":"saravanamani1999"},"content":"            timetable.clearTimetable();","lastModifiedDate":"2021-10-20"},{"lineNumber":100,"author":{"gitId":"saravanamani1999"},"content":"        } catch (KolinuxException exception) {","lastModifiedDate":"2021-10-20"},{"lineNumber":101,"author":{"gitId":"saravanamani1999"},"content":"            assertEquals(SubCommand.INACCESSIBLE_PERIOD, exception.getMessage());","lastModifiedDate":"2021-10-23"},{"lineNumber":102,"author":{"gitId":"saravanamani1999"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":103,"author":{"gitId":"saravanamani1999"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":104,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":105,"author":{"gitId":"saravanamani1999"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":106,"author":{"gitId":"saravanamani1999"},"content":"    public void addLectureToTimetable_validLesson_lectureAdded() throws KolinuxException {","lastModifiedDate":"2021-10-25"},{"lineNumber":107,"author":{"gitId":"saravanamani1999"},"content":"        timetable.clearTimetable();","lastModifiedDate":"2021-10-25"},{"lineNumber":108,"author":{"gitId":"giterator"},"content":"        moduleList.addModuleByCode(\"CS2113T\", moduleDb);","lastModifiedDate":"2021-11-02"},{"lineNumber":109,"author":{"gitId":"saravanamani1999"},"content":"        timetable.executeAdd(VALID_ADD_LECTURE_ARGUMENTS, false);","lastModifiedDate":"2021-11-04"},{"lineNumber":110,"author":{"gitId":"saravanamani1999"},"content":"        assertEquals(timetable.timetableData[getIndex(\"2000\", schoolHours)][getIndex(\"friday\", days)],","lastModifiedDate":"2021-10-25"},{"lineNumber":111,"author":{"gitId":"saravanamani1999"},"content":"                \"CS2113T LEC\");","lastModifiedDate":"2021-10-25"},{"lineNumber":112,"author":{"gitId":"saravanamani1999"},"content":"        timetable.clearTimetable();","lastModifiedDate":"2021-10-25"},{"lineNumber":113,"author":{"gitId":"saravanamani1999"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":114,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":115,"author":{"gitId":"saravanamani1999"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":116,"author":{"gitId":"saravanamani1999"},"content":"    public void addLabToTimetable_validLesson_labAdded() throws KolinuxException {","lastModifiedDate":"2021-10-25"},{"lineNumber":117,"author":{"gitId":"saravanamani1999"},"content":"        timetable.clearTimetable();","lastModifiedDate":"2021-10-25"},{"lineNumber":118,"author":{"gitId":"giterator"},"content":"        moduleList.addModuleByCode(\"CS2040\", moduleDb);","lastModifiedDate":"2021-11-02"},{"lineNumber":119,"author":{"gitId":"saravanamani1999"},"content":"        timetable.executeAdd(VALID_ADD_LAB_ARGUMENTS, false);","lastModifiedDate":"2021-11-04"},{"lineNumber":120,"author":{"gitId":"saravanamani1999"},"content":"        assertEquals(timetable.timetableData[getIndex(\"0600\", schoolHours)][getIndex(\"monday\", days)],","lastModifiedDate":"2021-10-25"},{"lineNumber":121,"author":{"gitId":"saravanamani1999"},"content":"                \"CS2040 LAB\");","lastModifiedDate":"2021-10-25"},{"lineNumber":122,"author":{"gitId":"saravanamani1999"},"content":"        timetable.clearTimetable();","lastModifiedDate":"2021-10-25"},{"lineNumber":123,"author":{"gitId":"saravanamani1999"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":124,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":125,"author":{"gitId":"saravanamani1999"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":126,"author":{"gitId":"saravanamani1999"},"content":"    public void inputLesson_exceedsWorkload_lessonNotAdded() {","lastModifiedDate":"2021-10-30"},{"lineNumber":127,"author":{"gitId":"saravanamani1999"},"content":"        try {","lastModifiedDate":"2021-10-25"},{"lineNumber":128,"author":{"gitId":"saravanamani1999"},"content":"            timetable.clearTimetable();","lastModifiedDate":"2021-10-20"},{"lineNumber":129,"author":{"gitId":"giterator"},"content":"            moduleList.addModuleByCode(\"CS1231\", moduleDb);","lastModifiedDate":"2021-11-02"},{"lineNumber":130,"author":{"gitId":"saravanamani1999"},"content":"            timetable.executeAdd(VALID_ADD_TUTORIAL_ARGUMENTS, false);","lastModifiedDate":"2021-11-04"},{"lineNumber":131,"author":{"gitId":"saravanamani1999"},"content":"            timetable.executeAdd(ANOTHER_VALID_ADD_TUTORIAL_ARGUMENTS, false);","lastModifiedDate":"2021-11-04"},{"lineNumber":132,"author":{"gitId":"saravanamani1999"},"content":"            assertEquals(\"CS1231 TUT\",","lastModifiedDate":"2021-10-20"},{"lineNumber":133,"author":{"gitId":"saravanamani1999"},"content":"                    timetable.timetableData[getIndex(\"0600\", schoolHours)][getIndex(\"monday\", days)]);","lastModifiedDate":"2021-10-25"},{"lineNumber":134,"author":{"gitId":"saravanamani1999"},"content":"            timetable.clearTimetable();","lastModifiedDate":"2021-10-21"},{"lineNumber":135,"author":{"gitId":"saravanamani1999"},"content":"        } catch (KolinuxException e) {","lastModifiedDate":"2021-10-25"},{"lineNumber":136,"author":{"gitId":"saravanamani1999"},"content":"            assertEquals(\"Input hours for CS1231 TUT exceeds the total workload\\nIt exceeds 1.0 hours\\n\"","lastModifiedDate":"2021-11-01"},{"lineNumber":137,"author":{"gitId":"saravanamani1999"},"content":"                            +","lastModifiedDate":"2021-10-25"},{"lineNumber":138,"author":{"gitId":"saravanamani1999"},"content":"                            \"Do you want to continue adding the lesson despite\\n\"","lastModifiedDate":"2021-11-04"},{"lineNumber":139,"author":{"gitId":"saravanamani1999"},"content":"                            +","lastModifiedDate":"2021-10-25"},{"lineNumber":140,"author":{"gitId":"saravanamani1999"},"content":"                            \"exceeding the workload? Please enter y or n\", e.getMessage());","lastModifiedDate":"2021-11-04"},{"lineNumber":141,"author":{"gitId":"saravanamani1999"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":142,"author":{"gitId":"saravanamani1999"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":143,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":144,"author":{"gitId":"saravanamani1999"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":145,"author":{"gitId":"saravanamani1999"},"content":"    public void inputLesson_lessonNotInModuleList_lessonNotAdded() {","lastModifiedDate":"2021-10-20"},{"lineNumber":146,"author":{"gitId":"saravanamani1999"},"content":"        try {","lastModifiedDate":"2021-10-20"},{"lineNumber":147,"author":{"gitId":"saravanamani1999"},"content":"            timetable.clearTimetable();","lastModifiedDate":"2021-10-20"},{"lineNumber":148,"author":{"gitId":"saravanamani1999"},"content":"            timetable.executeAdd(VALID_ADD_TUTORIAL_ARGUMENTS, false);","lastModifiedDate":"2021-11-04"},{"lineNumber":149,"author":{"gitId":"saravanamani1999"},"content":"            timetable.clearTimetable();","lastModifiedDate":"2021-10-21"},{"lineNumber":150,"author":{"gitId":"saravanamani1999"},"content":"        } catch (KolinuxException exception) {","lastModifiedDate":"2021-10-20"},{"lineNumber":151,"author":{"gitId":"saravanamani1999"},"content":"            assertEquals(\"CS1231 not found in module list\", exception.getMessage());","lastModifiedDate":"2021-10-20"},{"lineNumber":152,"author":{"gitId":"saravanamani1999"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":153,"author":{"gitId":"saravanamani1999"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":154,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":155,"author":{"gitId":"saravanamani1999"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":156,"author":{"gitId":"saravanamani1999"},"content":"    public void deleteLesson_validLesson_lessonDeleted() throws KolinuxException {","lastModifiedDate":"2021-10-20"},{"lineNumber":157,"author":{"gitId":"saravanamani1999"},"content":"        timetable.clearTimetable();","lastModifiedDate":"2021-10-20"},{"lineNumber":158,"author":{"gitId":"saravanamani1999"},"content":"        Lesson lesson \u003d new Tutorial(VALID_ADD_TUTORIAL_ARGUMENTS);","lastModifiedDate":"2021-10-30"},{"lineNumber":159,"author":{"gitId":"saravanamani1999"},"content":"        addSubCommand.addToTimetable(lesson);","lastModifiedDate":"2021-10-23"},{"lineNumber":160,"author":{"gitId":"saravanamani1999"},"content":"        timetable.executeDelete(VALID_ADD_TUTORIAL_ARGUMENTS);","lastModifiedDate":"2021-10-25"},{"lineNumber":161,"author":{"gitId":"saravanamani1999"},"content":"        assertFalse(addSubCommand.isLessonInTimetable(\"CS1010\", \"TUT\", \"monday\",","lastModifiedDate":"2021-10-31"},{"lineNumber":162,"author":{"gitId":"saravanamani1999"},"content":"                \"0600\"));","lastModifiedDate":"2021-10-31"},{"lineNumber":163,"author":{"gitId":"saravanamani1999"},"content":"        timetable.clearTimetable();","lastModifiedDate":"2021-10-20"},{"lineNumber":164,"author":{"gitId":"saravanamani1999"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":165,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":166,"author":{"gitId":"saravanamani1999"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":167,"author":{"gitId":"saravanamani1999"},"content":"    public void deleteLesson_lessonNotInTimetable_lessonNotDeleted() {","lastModifiedDate":"2021-10-20"},{"lineNumber":168,"author":{"gitId":"saravanamani1999"},"content":"        try {","lastModifiedDate":"2021-10-20"},{"lineNumber":169,"author":{"gitId":"saravanamani1999"},"content":"            timetable.clearTimetable();","lastModifiedDate":"2021-10-20"},{"lineNumber":170,"author":{"gitId":"saravanamani1999"},"content":"            timetable.executeDelete(VALID_ADD_TUTORIAL_ARGUMENTS);","lastModifiedDate":"2021-10-25"},{"lineNumber":171,"author":{"gitId":"saravanamani1999"},"content":"            timetable.clearTimetable();","lastModifiedDate":"2021-10-21"},{"lineNumber":172,"author":{"gitId":"saravanamani1999"},"content":"        } catch (KolinuxException e) {","lastModifiedDate":"2021-10-20"},{"lineNumber":173,"author":{"gitId":"saravanamani1999"},"content":"            assertEquals(\"CS1231 TUT\" + SubCommand.MISSING_LESSON_TO_DELETE, e.getMessage());","lastModifiedDate":"2021-10-23"},{"lineNumber":174,"author":{"gitId":"saravanamani1999"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":175,"author":{"gitId":"saravanamani1999"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":176,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":177,"author":{"gitId":"saravanamani1999"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":178,"author":{"gitId":"saravanamani1999"},"content":"    public void deleteLesson_invalidLesson_lessonNotDeleted() {","lastModifiedDate":"2021-10-20"},{"lineNumber":179,"author":{"gitId":"saravanamani1999"},"content":"        try {","lastModifiedDate":"2021-10-20"},{"lineNumber":180,"author":{"gitId":"saravanamani1999"},"content":"            timetable.clearTimetable();","lastModifiedDate":"2021-10-20"},{"lineNumber":181,"author":{"gitId":"saravanamani1999"},"content":"            timetable.executeDelete(INVALID_DELETE_ARGUMENT);","lastModifiedDate":"2021-10-23"},{"lineNumber":182,"author":{"gitId":"saravanamani1999"},"content":"            timetable.clearTimetable();","lastModifiedDate":"2021-10-20"},{"lineNumber":183,"author":{"gitId":"saravanamani1999"},"content":"        } catch (KolinuxException e) {","lastModifiedDate":"2021-10-20"},{"lineNumber":184,"author":{"gitId":"saravanamani1999"},"content":"            assertEquals(\"CS1010 LESSON\" + SubCommand.MISSING_LESSON_TO_DELETE, e.getMessage());","lastModifiedDate":"2021-10-23"},{"lineNumber":185,"author":{"gitId":"saravanamani1999"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":186,"author":{"gitId":"saravanamani1999"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":187,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":188,"author":{"gitId":"saravanamani1999"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":189,"author":{"gitId":"saravanamani1999"},"content":"    public void updateLesson_validLesson_lessonUpdated() throws KolinuxException {","lastModifiedDate":"2021-10-20"},{"lineNumber":190,"author":{"gitId":"saravanamani1999"},"content":"        timetable.clearTimetable();","lastModifiedDate":"2021-10-20"},{"lineNumber":191,"author":{"gitId":"giterator"},"content":"        moduleList.addModuleByCode(\"CS1231\", moduleDb);","lastModifiedDate":"2021-11-02"},{"lineNumber":192,"author":{"gitId":"saravanamani1999"},"content":"        timetable.executeAdd(VALID_ADD_TUTORIAL_ARGUMENTS, false);","lastModifiedDate":"2021-11-04"},{"lineNumber":193,"author":{"gitId":"saravanamani1999"},"content":"        timetable.executeUpdate(UPDATE_LESSON_ARGUMENTS);","lastModifiedDate":"2021-10-23"},{"lineNumber":194,"author":{"gitId":"saravanamani1999"},"content":"        assertFalse(addSubCommand.isLessonInTimetable(\"CS1231\",","lastModifiedDate":"2021-10-23"},{"lineNumber":195,"author":{"gitId":"saravanamani1999"},"content":"                \"TUT\", \"monday\", \"0600\"));","lastModifiedDate":"2021-10-31"},{"lineNumber":196,"author":{"gitId":"saravanamani1999"},"content":"        assertTrue(addSubCommand.isLessonInTimetable(\"CS1231\",","lastModifiedDate":"2021-10-23"},{"lineNumber":197,"author":{"gitId":"saravanamani1999"},"content":"                \"TUT\", \"tuesday\", \"1500\"));","lastModifiedDate":"2021-10-31"},{"lineNumber":198,"author":{"gitId":"saravanamani1999"},"content":"        timetable.clearTimetable();","lastModifiedDate":"2021-10-20"},{"lineNumber":199,"author":{"gitId":"saravanamani1999"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":200,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":201,"author":{"gitId":"saravanamani1999"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":202,"author":{"gitId":"saravanamani1999"},"content":"    public void updateLesson_lessonNotFoundInTimetable_lessonNotUpdated() {","lastModifiedDate":"2021-10-20"},{"lineNumber":203,"author":{"gitId":"saravanamani1999"},"content":"        try {","lastModifiedDate":"2021-10-20"},{"lineNumber":204,"author":{"gitId":"saravanamani1999"},"content":"            timetable.clearTimetable();","lastModifiedDate":"2021-10-20"},{"lineNumber":205,"author":{"gitId":"giterator"},"content":"            moduleList.addModuleByCode(\"CS1231\", moduleDb);","lastModifiedDate":"2021-11-02"},{"lineNumber":206,"author":{"gitId":"saravanamani1999"},"content":"            timetable.executeUpdate(UPDATE_LESSON_ARGUMENTS);","lastModifiedDate":"2021-10-23"},{"lineNumber":207,"author":{"gitId":"saravanamani1999"},"content":"            timetable.clearTimetable();","lastModifiedDate":"2021-10-20"},{"lineNumber":208,"author":{"gitId":"saravanamani1999"},"content":"        } catch (KolinuxException e) {","lastModifiedDate":"2021-10-12"},{"lineNumber":209,"author":{"gitId":"saravanamani1999"},"content":"            assertEquals(SubCommand.MISSING_LESSON_TO_UPDATE, e.getMessage());","lastModifiedDate":"2021-10-23"},{"lineNumber":210,"author":{"gitId":"saravanamani1999"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":211,"author":{"gitId":"saravanamani1999"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":212,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":213,"author":{"gitId":"saravanamani1999"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":214,"author":{"gitId":"saravanamani1999"},"content":"    public void deleteModule_moduleInModuleList_moduleLessonsDeletedFromTimetable() throws KolinuxException {","lastModifiedDate":"2021-10-25"},{"lineNumber":215,"author":{"gitId":"saravanamani1999"},"content":"        timetable.clearTimetable();","lastModifiedDate":"2021-10-25"},{"lineNumber":216,"author":{"gitId":"giterator"},"content":"        moduleList.addModuleByCode(\"CS1231\",moduleDb);","lastModifiedDate":"2021-11-02"},{"lineNumber":217,"author":{"gitId":"saravanamani1999"},"content":"        timetable.executeAdd(VALID_ADD_TUTORIAL_ARGUMENTS, false);","lastModifiedDate":"2021-11-04"},{"lineNumber":218,"author":{"gitId":"saravanamani1999"},"content":"        assertEquals(timetable.timetableData[getIndex(\"0600\", schoolHours)][getIndex(\"monday\", days)],","lastModifiedDate":"2021-10-25"},{"lineNumber":219,"author":{"gitId":"saravanamani1999"},"content":"                \"CS1231 TUT\");","lastModifiedDate":"2021-10-25"},{"lineNumber":220,"author":{"gitId":"saravanamani1999"},"content":"        timetable.deleteByModuleList(\"CS1231\");","lastModifiedDate":"2021-10-25"},{"lineNumber":221,"author":{"gitId":"saravanamani1999"},"content":"        assertEquals(timetable.timetableData[getIndex(\"0600\", schoolHours)][getIndex(\"monday\", days)],","lastModifiedDate":"2021-10-25"},{"lineNumber":222,"author":{"gitId":"saravanamani1999"},"content":"                null);","lastModifiedDate":"2021-10-25"},{"lineNumber":223,"author":{"gitId":"saravanamani1999"},"content":"        timetable.clearTimetable();","lastModifiedDate":"2021-10-25"},{"lineNumber":224,"author":{"gitId":"saravanamani1999"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":225,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":226,"author":{"gitId":"saravanamani1999"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":227,"author":{"gitId":"saravanamani1999"},"content":"    public void handleExceedWorkload_validLessonDetails_validReply() throws KolinuxException {","lastModifiedDate":"2021-11-04"},{"lineNumber":228,"author":{"gitId":"saravanamani1999"},"content":"        timetable.clearTimetable();","lastModifiedDate":"2021-11-04"},{"lineNumber":229,"author":{"gitId":"saravanamani1999"},"content":"        moduleList.addModuleByCode(\"CS1231\",moduleDb);","lastModifiedDate":"2021-11-04"},{"lineNumber":230,"author":{"gitId":"saravanamani1999"},"content":"        String input \u003d \"y\";","lastModifiedDate":"2021-11-04"},{"lineNumber":231,"author":{"gitId":"saravanamani1999"},"content":"        InputStream in \u003d new ByteArrayInputStream(input.getBytes());","lastModifiedDate":"2021-11-04"},{"lineNumber":232,"author":{"gitId":"saravanamani1999"},"content":"        System.setIn(in);","lastModifiedDate":"2021-11-04"},{"lineNumber":233,"author":{"gitId":"saravanamani1999"},"content":"        timetablePromptHandler \u003d new TimetablePromptHandler(EXCEED_WORKLOAD, timetable);","lastModifiedDate":"2021-11-04"},{"lineNumber":234,"author":{"gitId":"saravanamani1999"},"content":"        timetablePromptHandler.handleExceedWorkload(EXCEED_ADD_TUTORIAL_ARGUMENTS);","lastModifiedDate":"2021-11-04"},{"lineNumber":235,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":236,"author":{"gitId":"saravanamani1999"},"content":"        assertEquals(EXCEED_WORKLOAD, timetablePromptHandler.toString());","lastModifiedDate":"2021-11-04"},{"lineNumber":237,"author":{"gitId":"saravanamani1999"},"content":"        timetable.clearTimetable();","lastModifiedDate":"2021-11-04"},{"lineNumber":238,"author":{"gitId":"saravanamani1999"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":239,"author":{"gitId":"saravanamani1999"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":240,"author":{"gitId":"saravanamani1999"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"giterator":6,"saravanamani1999":233,"powzx":1}},{"path":"src/test/java/seedu/kolinux/util/ParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"powzx"},"content":"package seedu.kolinux.util;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"powzx"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"powzx"},"content":"import seedu.kolinux.exceptions.KolinuxException;","lastModifiedDate":"2021-11-05"},{"lineNumber":5,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"powzx"},"content":"import java.text.ParseException;","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"powzx"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-11-05"},{"lineNumber":8,"author":{"gitId":"powzx"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-11-05"},{"lineNumber":9,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"powzx"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"powzx"},"content":"public class ParserTest {","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"powzx"},"content":"    private static final String DATE_FORMAT_ERROR \u003d \"Please provide a valid date format. Format: yyyy-mm-dd\";","lastModifiedDate":"2021-11-05"},{"lineNumber":15,"author":{"gitId":"powzx"},"content":"    private static final String DATE_VALIDITY_ERROR \u003d \"This date does not exist. Please try again.\";","lastModifiedDate":"2021-11-05"},{"lineNumber":16,"author":{"gitId":"powzx"},"content":"    private static final String TIME_FORMAT_ERROR \u003d \"Please provide a valid time format. Format: hhMM\";","lastModifiedDate":"2021-11-05"},{"lineNumber":17,"author":{"gitId":"powzx"},"content":"    private static final String TIME_VALIDITY_ERROR \u003d \"This time is not valid. Please try again.\";","lastModifiedDate":"2021-11-05"},{"lineNumber":18,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":19,"author":{"gitId":"powzx"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"powzx"},"content":"    public void findDayFromDate_validDates_daysReturned() throws ParseException {","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"powzx"},"content":"        int day \u003d Parser.findDayFromDate(\"2021-10-25\");","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"powzx"},"content":"        assertEquals(2, day);","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"powzx"},"content":"        day \u003d Parser.findDayFromDate(\"2021-10-26\");","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"powzx"},"content":"        assertEquals(3, day);","lastModifiedDate":"2021-10-25"},{"lineNumber":25,"author":{"gitId":"powzx"},"content":"        day \u003d Parser.findDayFromDate(\"2021-10-27\");","lastModifiedDate":"2021-10-25"},{"lineNumber":26,"author":{"gitId":"powzx"},"content":"        assertEquals(4, day);","lastModifiedDate":"2021-10-25"},{"lineNumber":27,"author":{"gitId":"powzx"},"content":"        day \u003d Parser.findDayFromDate(\"2021-10-28\");","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"powzx"},"content":"        assertEquals(5, day);","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"powzx"},"content":"        day \u003d Parser.findDayFromDate(\"2021-10-29\");","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"powzx"},"content":"        assertEquals(6, day);","lastModifiedDate":"2021-10-25"},{"lineNumber":31,"author":{"gitId":"powzx"},"content":"        day \u003d Parser.findDayFromDate(\"2021-10-30\");","lastModifiedDate":"2021-10-25"},{"lineNumber":32,"author":{"gitId":"powzx"},"content":"        assertEquals(7, day);","lastModifiedDate":"2021-10-25"},{"lineNumber":33,"author":{"gitId":"powzx"},"content":"        day \u003d Parser.findDayFromDate(\"2021-10-31\");","lastModifiedDate":"2021-10-25"},{"lineNumber":34,"author":{"gitId":"powzx"},"content":"        assertEquals(1, day);","lastModifiedDate":"2021-10-25"},{"lineNumber":35,"author":{"gitId":"powzx"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":36,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":37,"author":{"gitId":"powzx"},"content":"    @Test","lastModifiedDate":"2021-11-05"},{"lineNumber":38,"author":{"gitId":"powzx"},"content":"    public void verifyDate_correctDate_localDateReturned() throws KolinuxException {","lastModifiedDate":"2021-11-05"},{"lineNumber":39,"author":{"gitId":"powzx"},"content":"        LocalDate date \u003d Parser.verifyDate(\"2021-10-10\");","lastModifiedDate":"2021-11-05"},{"lineNumber":40,"author":{"gitId":"powzx"},"content":"        assertEquals(\"2021-10-10\", date.toString());","lastModifiedDate":"2021-11-05"},{"lineNumber":41,"author":{"gitId":"powzx"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":42,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":43,"author":{"gitId":"powzx"},"content":"    @Test","lastModifiedDate":"2021-11-05"},{"lineNumber":44,"author":{"gitId":"powzx"},"content":"    public void verifyDate_wrongDateFormat_exceptionThrown() {","lastModifiedDate":"2021-11-05"},{"lineNumber":45,"author":{"gitId":"powzx"},"content":"        try {","lastModifiedDate":"2021-11-05"},{"lineNumber":46,"author":{"gitId":"powzx"},"content":"            Parser.verifyDate(\"20211010\");","lastModifiedDate":"2021-11-05"},{"lineNumber":47,"author":{"gitId":"powzx"},"content":"        } catch (KolinuxException exception) {","lastModifiedDate":"2021-11-05"},{"lineNumber":48,"author":{"gitId":"powzx"},"content":"            assertEquals(DATE_FORMAT_ERROR, exception.getMessage());","lastModifiedDate":"2021-11-05"},{"lineNumber":49,"author":{"gitId":"powzx"},"content":"        }","lastModifiedDate":"2021-11-05"},{"lineNumber":50,"author":{"gitId":"powzx"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":51,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":52,"author":{"gitId":"powzx"},"content":"    @Test","lastModifiedDate":"2021-11-05"},{"lineNumber":53,"author":{"gitId":"powzx"},"content":"    public void verifyDate_invalidDate_exceptionThrown() {","lastModifiedDate":"2021-11-05"},{"lineNumber":54,"author":{"gitId":"powzx"},"content":"        try {","lastModifiedDate":"2021-11-05"},{"lineNumber":55,"author":{"gitId":"powzx"},"content":"            Parser.verifyDate(\"2021-12-32\");","lastModifiedDate":"2021-11-05"},{"lineNumber":56,"author":{"gitId":"powzx"},"content":"        } catch (KolinuxException exception) {","lastModifiedDate":"2021-11-05"},{"lineNumber":57,"author":{"gitId":"powzx"},"content":"            assertEquals(DATE_VALIDITY_ERROR, exception.getMessage());","lastModifiedDate":"2021-11-05"},{"lineNumber":58,"author":{"gitId":"powzx"},"content":"        }","lastModifiedDate":"2021-11-05"},{"lineNumber":59,"author":{"gitId":"powzx"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":60,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":61,"author":{"gitId":"powzx"},"content":"    @Test","lastModifiedDate":"2021-11-05"},{"lineNumber":62,"author":{"gitId":"powzx"},"content":"    public void verifyTime_correctTime_localTimeReturned() throws KolinuxException {","lastModifiedDate":"2021-11-05"},{"lineNumber":63,"author":{"gitId":"powzx"},"content":"        LocalTime time \u003d Parser.verifyTime(\"2200\");","lastModifiedDate":"2021-11-05"},{"lineNumber":64,"author":{"gitId":"powzx"},"content":"        assertEquals(\"22:00\", time.toString());","lastModifiedDate":"2021-11-05"},{"lineNumber":65,"author":{"gitId":"powzx"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":66,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":67,"author":{"gitId":"powzx"},"content":"    @Test","lastModifiedDate":"2021-11-05"},{"lineNumber":68,"author":{"gitId":"powzx"},"content":"    public void verifyTime_wrongTimeFormat_exceptionThrown() {","lastModifiedDate":"2021-11-05"},{"lineNumber":69,"author":{"gitId":"powzx"},"content":"        try {","lastModifiedDate":"2021-11-05"},{"lineNumber":70,"author":{"gitId":"powzx"},"content":"            Parser.verifyTime(\"10pm\");","lastModifiedDate":"2021-11-05"},{"lineNumber":71,"author":{"gitId":"powzx"},"content":"        } catch (KolinuxException exception) {","lastModifiedDate":"2021-11-05"},{"lineNumber":72,"author":{"gitId":"powzx"},"content":"            assertEquals(TIME_FORMAT_ERROR, exception.getMessage());","lastModifiedDate":"2021-11-05"},{"lineNumber":73,"author":{"gitId":"powzx"},"content":"        }","lastModifiedDate":"2021-11-05"},{"lineNumber":74,"author":{"gitId":"powzx"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":75,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":76,"author":{"gitId":"powzx"},"content":"    @Test","lastModifiedDate":"2021-11-05"},{"lineNumber":77,"author":{"gitId":"powzx"},"content":"    public void verifyTime_invalidTime_exceptionThrown() {","lastModifiedDate":"2021-11-05"},{"lineNumber":78,"author":{"gitId":"powzx"},"content":"        try {","lastModifiedDate":"2021-11-05"},{"lineNumber":79,"author":{"gitId":"powzx"},"content":"            Parser.verifyTime(\"1970\");","lastModifiedDate":"2021-11-05"},{"lineNumber":80,"author":{"gitId":"powzx"},"content":"        } catch (KolinuxException exception) {","lastModifiedDate":"2021-11-05"},{"lineNumber":81,"author":{"gitId":"powzx"},"content":"            assertEquals(TIME_VALIDITY_ERROR, exception.getMessage());","lastModifiedDate":"2021-11-05"},{"lineNumber":82,"author":{"gitId":"powzx"},"content":"        }","lastModifiedDate":"2021-11-05"},{"lineNumber":83,"author":{"gitId":"powzx"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":84,"author":{"gitId":"powzx"},"content":"}","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"powzx":84}},{"path":"src/test/java/seedu/kolinux/util/PromptHandlerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"powzx"},"content":"package seedu.kolinux.util;","lastModifiedDate":"2021-11-04"},{"lineNumber":2,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":3,"author":{"gitId":"powzx"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-11-04"},{"lineNumber":4,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"powzx"},"content":"import java.io.ByteArrayInputStream;","lastModifiedDate":"2021-11-04"},{"lineNumber":6,"author":{"gitId":"powzx"},"content":"import java.io.InputStream;","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":8,"author":{"gitId":"powzx"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":10,"author":{"gitId":"powzx"},"content":"public class PromptHandlerTest {","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"powzx"},"content":"    private static final String PROMPT_MESSAGE \u003d \"What do you want to be when you grow up?\";","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"powzx"},"content":"    private static final String PROMPT_REPLY \u003d \"I want to go Russia and start a farm.\";","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"powzx"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"powzx"},"content":"    public void getReplyFromPrompt_validUserInput_promptAnswered() {","lastModifiedDate":"2021-11-04"},{"lineNumber":17,"author":{"gitId":"powzx"},"content":"        InputStream in \u003d new ByteArrayInputStream(PROMPT_REPLY.getBytes());","lastModifiedDate":"2021-11-04"},{"lineNumber":18,"author":{"gitId":"powzx"},"content":"        System.setIn(in);","lastModifiedDate":"2021-11-04"},{"lineNumber":19,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":20,"author":{"gitId":"powzx"},"content":"        PromptHandler promptHandler \u003d new PromptHandler(PROMPT_MESSAGE);","lastModifiedDate":"2021-11-04"},{"lineNumber":21,"author":{"gitId":"powzx"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":22,"author":{"gitId":"powzx"},"content":"        assertEquals(PROMPT_REPLY, promptHandler.getReplyFromPrompt());","lastModifiedDate":"2021-11-04"},{"lineNumber":23,"author":{"gitId":"powzx"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":24,"author":{"gitId":"powzx"},"content":"}","lastModifiedDate":"2021-11-04"}],"authorContributionMap":{"powzx":24}}]
