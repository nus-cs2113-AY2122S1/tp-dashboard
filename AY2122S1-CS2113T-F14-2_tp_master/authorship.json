[{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"tryyang2001"},"content":"    mainClassName \u003d \"seedu.duke.Main\"","lastModifiedDate":"2021-10-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.23\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"tlyi"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2021-10-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"tryyang2001":1,"-":45,"tlyi":1}},{"path":"config/checkstyle/checkstyle.xml","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\"?\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"\u003c!DOCTYPE module PUBLIC","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"        \"-//Checkstyle//DTD Checkstyle Configuration 1.3//EN\"","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"        \"https://checkstyle.org/dtds/configuration_1_3.dtd\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c!--","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    Checkstyle configuration that checks the Google coding conventions from Google Java Style","lastModifiedDate":"2020-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    that can be found at https://google.github.io/styleguide/javaguide.html","lastModifiedDate":"2020-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    Checkstyle is very configurable. Be sure to read the documentation at","lastModifiedDate":"2020-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    http://checkstyle.sf.net (or in your downloaded distribution).","lastModifiedDate":"2020-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    To completely disable a check, just comment it out or delete it from the file.","lastModifiedDate":"2020-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    Authors: Max Vetrenko, Ruslan Diachenko, Roman Ivanov.","lastModifiedDate":"2020-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" --\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"\u003cmodule name \u003d \"Checker\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003cproperty name\u003d\"charset\" value\u003d\"UTF-8\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003cproperty name\u003d\"severity\" value\u003d\"error\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    \u003cproperty name\u003d\"fileExtensions\" value\u003d\"java, properties, xml\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    \u003c!-- Excludes all \u0027module-info.java\u0027 files              --\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    \u003c!-- See https://checkstyle.org/config_filefilters.html --\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"BeforeExecutionExclusionFileFilter\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        \u003cproperty name\u003d\"fileNamePattern\" value\u003d\"module\\-info\\.java$\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    \u003c!-- Checks for whitespace                               --\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    \u003c!-- See http://checkstyle.sf.net/config_whitespace.html --\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"FileTabCharacter\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        \u003cproperty name\u003d\"eachLine\" value\u003d\"true\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"TreeWalker\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"OuterTypeFilename\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"IllegalTokenText\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"tokens\" value\u003d\"STRING_LITERAL, CHAR_LITERAL\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"format\"","lastModifiedDate":"2020-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                      value\u003d\"\\\\u00(09|0(a|A)|0(c|C)|0(d|D)|22|27|5(C|c))|\\\\(0(10|11|12|14|15|42|47)|134)\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"message\"","lastModifiedDate":"2020-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                      value\u003d\"Consider using special escape sequence instead of octal value or Unicode escaped value.\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"AvoidEscapedUnicodeCharacters\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"allowEscapesForControlCharacters\" value\u003d\"true\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"allowByTailComment\" value\u003d\"true\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"allowNonPrintableEscapes\" value\u003d\"true\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"LineLength\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"max\" value\u003d\"120\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"ignorePattern\" value\u003d\"^package.*|^import.*|a href|href|http://|https://|ftp://\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"AvoidStarImport\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"OneTopLevelClass\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"NoLineWrap\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"EmptyBlock\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"option\" value\u003d\"TEXT\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"tokens\"","lastModifiedDate":"2020-05-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                      value\u003d\"LITERAL_TRY, LITERAL_FINALLY, LITERAL_IF, LITERAL_ELSE, LITERAL_SWITCH\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"NeedBraces\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"LeftCurly\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"RightCurly\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"id\" value\u003d\"RightCurlySame\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"tokens\"","lastModifiedDate":"2020-05-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                      value\u003d\"LITERAL_TRY, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_IF, LITERAL_ELSE,","lastModifiedDate":"2020-05-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                    LITERAL_DO\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"RightCurly\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"id\" value\u003d\"RightCurlyAlone\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"option\" value\u003d\"alone\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"tokens\"","lastModifiedDate":"2020-05-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                      value\u003d\"CLASS_DEF, METHOD_DEF, CTOR_DEF, LITERAL_FOR, LITERAL_WHILE, STATIC_INIT,","lastModifiedDate":"2020-05-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                    INSTANCE_INIT\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"WhitespaceAround\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"allowEmptyConstructors\" value\u003d\"true\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"allowEmptyLambdas\" value\u003d\"true\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"allowEmptyMethods\" value\u003d\"true\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"allowEmptyTypes\" value\u003d\"true\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"allowEmptyLoops\" value\u003d\"true\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            \u003cmessage key\u003d\"ws.notFollowed\"","lastModifiedDate":"2020-05-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                     value\u003d\"WhitespaceAround: \u0027\u0027{0}\u0027\u0027 is not followed by whitespace. Empty blocks may only be represented as \u0027{}\u0027 when not part of a multi-block statement (4.1.3)\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            \u003cmessage key\u003d\"ws.notPreceded\"","lastModifiedDate":"2020-05-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                     value\u003d\"WhitespaceAround: \u0027\u0027{0}\u0027\u0027 is not preceded with whitespace.\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"OneStatementPerLine\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"MultipleVariableDeclarations\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"ArrayTypeStyle\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"MissingSwitchDefault\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"FallThrough\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"UpperEll\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"ModifierOrder\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"EmptyLineSeparator\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"allowNoEmptyLineBetweenFields\" value\u003d\"true\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"SeparatorWrap\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"id\" value\u003d\"SeparatorWrapDot\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"tokens\" value\u003d\"DOT\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"option\" value\u003d\"nl\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"SeparatorWrap\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"id\" value\u003d\"SeparatorWrapComma\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"tokens\" value\u003d\"COMMA\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"option\" value\u003d\"EOL\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"SeparatorWrap\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            \u003c!-- ELLIPSIS is EOL until https://github.com/google/styleguide/issues/258 --\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"id\" value\u003d\"SeparatorWrapEllipsis\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"tokens\" value\u003d\"ELLIPSIS\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"option\" value\u003d\"EOL\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"SeparatorWrap\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            \u003c!-- ARRAY_DECLARATOR is EOL until https://github.com/google/styleguide/issues/259 --\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"id\" value\u003d\"SeparatorWrapArrayDeclarator\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"tokens\" value\u003d\"ARRAY_DECLARATOR\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"option\" value\u003d\"EOL\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"SeparatorWrap\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"id\" value\u003d\"SeparatorWrapMethodRef\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"tokens\" value\u003d\"METHOD_REF\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"option\" value\u003d\"nl\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"PackageName\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"format\" value\u003d\"^[a-z]+(\\.[a-z][a-z0-9]*)*$\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            \u003cmessage key\u003d\"name.invalidPattern\"","lastModifiedDate":"2020-05-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"                     value\u003d\"Package name \u0027\u0027{0}\u0027\u0027 must match pattern \u0027\u0027{1}\u0027\u0027.\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"TypeName\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            \u003cmessage key\u003d\"name.invalidPattern\"","lastModifiedDate":"2020-05-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"                     value\u003d\"Type name \u0027\u0027{0}\u0027\u0027 must match pattern \u0027\u0027{1}\u0027\u0027.\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"MemberName\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"format\" value\u003d\"^[a-z][a-z0-9][a-zA-Z0-9]*$\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            \u003cmessage key\u003d\"name.invalidPattern\"","lastModifiedDate":"2020-05-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"                     value\u003d\"Member name \u0027\u0027{0}\u0027\u0027 must match pattern \u0027\u0027{1}\u0027\u0027.\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"ParameterName\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"format\" value\u003d\"^[a-z]([a-z0-9][a-zA-Z0-9]*)?$\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            \u003cmessage key\u003d\"name.invalidPattern\"","lastModifiedDate":"2020-05-24"},{"lineNumber":138,"author":{"gitId":"-"},"content":"                     value\u003d\"Parameter name \u0027\u0027{0}\u0027\u0027 must match pattern \u0027\u0027{1}\u0027\u0027.\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"LambdaParameterName\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"format\" value\u003d\"^[a-z]([a-z0-9][a-zA-Z0-9]*)?$\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            \u003cmessage key\u003d\"name.invalidPattern\"","lastModifiedDate":"2020-05-24"},{"lineNumber":143,"author":{"gitId":"-"},"content":"                     value\u003d\"Lambda parameter name \u0027\u0027{0}\u0027\u0027 must match pattern \u0027\u0027{1}\u0027\u0027.\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"CatchParameterName\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"format\" value\u003d\"^[a-z]([a-z0-9][a-zA-Z0-9]*)?$\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            \u003cmessage key\u003d\"name.invalidPattern\"","lastModifiedDate":"2020-05-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"                     value\u003d\"Catch parameter name \u0027\u0027{0}\u0027\u0027 must match pattern \u0027\u0027{1}\u0027\u0027.\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"LocalVariableName\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"tokens\" value\u003d\"VARIABLE_DEF\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"format\" value\u003d\"^[a-z]([a-z0-9][a-zA-Z0-9]*)?$\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            \u003cmessage key\u003d\"name.invalidPattern\"","lastModifiedDate":"2020-05-24"},{"lineNumber":154,"author":{"gitId":"-"},"content":"                     value\u003d\"Local variable name \u0027\u0027{0}\u0027\u0027 must match pattern \u0027\u0027{1}\u0027\u0027.\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"ClassTypeParameterName\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"format\" value\u003d\"(^[A-Z][0-9]?)$|([A-Z][a-zA-Z0-9]*[T]$)\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            \u003cmessage key\u003d\"name.invalidPattern\"","lastModifiedDate":"2020-05-24"},{"lineNumber":159,"author":{"gitId":"-"},"content":"                     value\u003d\"Class type name \u0027\u0027{0}\u0027\u0027 must match pattern \u0027\u0027{1}\u0027\u0027.\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"MethodTypeParameterName\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"format\" value\u003d\"(^[A-Z][0-9]?)$|([A-Z][a-zA-Z0-9]*[T]$)\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            \u003cmessage key\u003d\"name.invalidPattern\"","lastModifiedDate":"2020-05-24"},{"lineNumber":164,"author":{"gitId":"-"},"content":"                     value\u003d\"Method type name \u0027\u0027{0}\u0027\u0027 must match pattern \u0027\u0027{1}\u0027\u0027.\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"InterfaceTypeParameterName\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"format\" value\u003d\"(^[A-Z][0-9]?)$|([A-Z][a-zA-Z0-9]*[T]$)\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            \u003cmessage key\u003d\"name.invalidPattern\"","lastModifiedDate":"2020-05-24"},{"lineNumber":169,"author":{"gitId":"-"},"content":"                     value\u003d\"Interface type name \u0027\u0027{0}\u0027\u0027 must match pattern \u0027\u0027{1}\u0027\u0027.\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"NoFinalizer\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"GenericWhitespace\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":173,"author":{"gitId":"-"},"content":"            \u003cmessage key\u003d\"ws.followed\"","lastModifiedDate":"2020-05-24"},{"lineNumber":174,"author":{"gitId":"-"},"content":"                     value\u003d\"GenericWhitespace \u0027\u0027{0}\u0027\u0027 is followed by whitespace.\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":175,"author":{"gitId":"-"},"content":"            \u003cmessage key\u003d\"ws.preceded\"","lastModifiedDate":"2020-05-24"},{"lineNumber":176,"author":{"gitId":"-"},"content":"                     value\u003d\"GenericWhitespace \u0027\u0027{0}\u0027\u0027 is preceded with whitespace.\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            \u003cmessage key\u003d\"ws.illegalFollow\"","lastModifiedDate":"2020-05-24"},{"lineNumber":178,"author":{"gitId":"-"},"content":"                     value\u003d\"GenericWhitespace \u0027\u0027{0}\u0027\u0027 should followed by whitespace.\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":179,"author":{"gitId":"-"},"content":"            \u003cmessage key\u003d\"ws.notPreceded\"","lastModifiedDate":"2020-05-24"},{"lineNumber":180,"author":{"gitId":"-"},"content":"                     value\u003d\"GenericWhitespace \u0027\u0027{0}\u0027\u0027 is not preceded with whitespace.\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"Indentation\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"basicOffset\" value\u003d\"4\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"braceAdjustment\" value\u003d\"0\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"caseIndent\" value\u003d\"0\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":186,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"throwsIndent\" value\u003d\"4\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":187,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"lineWrappingIndentation\" value\u003d\"4\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":188,"author":{"gitId":"tlyi"},"content":"            \u003cproperty name\u003d\"arrayInitIndent\" value\u003d\"8\"/\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"AbbreviationAsWordInName\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"ignoreFinal\" value\u003d\"false\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"allowedAbbreviationLength\" value\u003d\"1\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"OverloadMethodsDeclarationOrder\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"VariableDeclarationUsageDistance\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"MethodParamPad\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"NoWhitespaceBefore\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":198,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"tokens\"","lastModifiedDate":"2020-05-24"},{"lineNumber":199,"author":{"gitId":"-"},"content":"                      value\u003d\"COMMA, SEMI, POST_INC, POST_DEC, DOT, ELLIPSIS, METHOD_REF\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":200,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"allowLineBreaks\" value\u003d\"true\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"ParenPad\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"OperatorWrap\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":204,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"option\" value\u003d\"NL\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":205,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"tokens\"","lastModifiedDate":"2020-05-24"},{"lineNumber":206,"author":{"gitId":"-"},"content":"                      value\u003d\"BAND, BOR, BSR, BXOR, DIV, EQUAL, GE, GT, LAND, LE, LITERAL_INSTANCEOF, LOR,","lastModifiedDate":"2020-05-24"},{"lineNumber":207,"author":{"gitId":"-"},"content":"                    LT, MINUS, MOD, NOT_EQUAL, PLUS, QUESTION, SL, SR, STAR, METHOD_REF \"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"AnnotationLocation\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":210,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"id\" value\u003d\"AnnotationLocationMostCases\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":211,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"tokens\"","lastModifiedDate":"2020-05-24"},{"lineNumber":212,"author":{"gitId":"-"},"content":"                      value\u003d\"CLASS_DEF, INTERFACE_DEF, ENUM_DEF, METHOD_DEF, CTOR_DEF\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"AnnotationLocation\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":215,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"id\" value\u003d\"AnnotationLocationVariables\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":216,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"tokens\" value\u003d\"VARIABLE_DEF\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":217,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"allowSamelineMultipleAnnotations\" value\u003d\"true\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"NonEmptyAtclauseDescription\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"JavadocTagContinuationIndentation\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"SummaryJavadoc\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":222,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"forbiddenSummaryFragments\"","lastModifiedDate":"2020-05-24"},{"lineNumber":223,"author":{"gitId":"-"},"content":"                      value\u003d\"^@return the *|^This method returns |^A [{]@code [a-zA-Z0-9]+[}]( is a )\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"JavadocParagraph\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"AtclauseOrder\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":227,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"tagOrder\" value\u003d\"@param, @return, @throws, @deprecated\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":228,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"target\"","lastModifiedDate":"2020-05-24"},{"lineNumber":229,"author":{"gitId":"-"},"content":"                      value\u003d\"CLASS_DEF, INTERFACE_DEF, ENUM_DEF, METHOD_DEF, CTOR_DEF, VARIABLE_DEF\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":230,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"JavadocMethod\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":232,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"scope\" value\u003d\"public\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":233,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"allowMissingParamTags\" value\u003d\"true\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":234,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"allowMissingThrowsTags\" value\u003d\"true\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":235,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"allowMissingReturnTag\" value\u003d\"true\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":236,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"allowedAnnotations\" value\u003d\"Override, Test\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":237,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"allowThrowsTagsForSubclasses\" value\u003d\"true\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":238,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":239,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"MethodName\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":240,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"format\" value\u003d\"^[a-z][a-z0-9][a-zA-Z0-9_]*$\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":241,"author":{"gitId":"-"},"content":"            \u003cmessage key\u003d\"name.invalidPattern\"","lastModifiedDate":"2020-05-24"},{"lineNumber":242,"author":{"gitId":"-"},"content":"                     value\u003d\"Method name \u0027\u0027{0}\u0027\u0027 must match pattern \u0027\u0027{1}\u0027\u0027.\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":243,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":244,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"SingleLineJavadoc\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":245,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"ignoreInlineTags\" value\u003d\"false\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":246,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":247,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"EmptyCatchBlock\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":248,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"exceptionVariableName\" value\u003d\"expected\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":249,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":250,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"CommentsIndentation\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":252,"author":{"gitId":"-"},"content":"\u003c/module\u003e","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"-":251,"tlyi":1}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# About us","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"Display | Name | Github Profile | Portfolio ","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"--------|:----:|:--------------:|:---------:","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"weidak"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Tay Weida | [Github](https://github.com/weidak) | [Portfolio](docs/team/tayweida.md)","lastModifiedDate":"2021-10-01"},{"lineNumber":6,"author":{"gitId":"tryyang2001"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Tan Xing Jie | [Github](https://github.com/xingjie99) | [Portfolio](docs/team/tanxingjie.md)","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"tryyang2001"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Tan Rui Yang | [Github](https://github.com/tryyang2001) | [Portfolio](docs/team/tanruiyang.md)","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"tttyyzzz"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Toh Yi Zhi | [Github](https://github.com/tttyyzzz/tp) | [Portfolio](docs/team/noidea.md)","lastModifiedDate":"2021-10-01"},{"lineNumber":9,"author":{"gitId":"tlyi"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Tan Le Yi | [Github](https://github.com/tlyi) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2021-10-01"}],"authorContributionMap":{"weidak":1,"tttyyzzz":1,"tryyang2001":2,"-":4,"tlyi":1}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"# Developer Guide","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"## Acknowledgements","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":8,"author":{"gitId":"tryyang2001"},"content":"## Design ","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":10,"author":{"gitId":"tryyang2001"},"content":"### Architecture","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":12,"author":{"gitId":"tlyi"},"content":"\u003cp align\u003d\"center\" width\u003d\"100%\"\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"tlyi"},"content":"  \u003cimage width\u003d\"70%\" src\u003d\"images/ArchitectureDiagram.png\" alt\u003d\"Architecture Diagram\"/\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"tlyi"},"content":"\u003c/p\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"tlyi"},"content":"`Main` class is the component that interacts with all the necessary classes.","lastModifiedDate":"2021-10-22"},{"lineNumber":17,"author":{"gitId":"tlyi"},"content":"The `Main` class consists of the few components as shown below:","lastModifiedDate":"2021-10-22"},{"lineNumber":18,"author":{"gitId":"tlyi"},"content":"- `Ui`: The interaction between user and application","lastModifiedDate":"2021-10-22"},{"lineNumber":19,"author":{"gitId":"tlyi"},"content":"- `Logic`: Parse commands and execute them respectively","lastModifiedDate":"2021-10-22"},{"lineNumber":20,"author":{"gitId":"tlyi"},"content":"- `Data`: allow users to perform CRUD operations on the data in the application","lastModifiedDate":"2021-10-22"},{"lineNumber":21,"author":{"gitId":"tlyi"},"content":"- `Storage`: stores all data in the application. Saves a copy of data in relevant files.","lastModifiedDate":"2021-10-22"},{"lineNumber":22,"author":{"gitId":"tttyyzzz"},"content":"  Data will be retrieved from storage upon starting of application.","lastModifiedDate":"2021-10-22"},{"lineNumber":23,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":24,"author":{"gitId":"tttyyzzz"},"content":"Upon launching of application:","lastModifiedDate":"2021-10-22"},{"lineNumber":25,"author":{"gitId":"tttyyzzz"},"content":"- The application will check if there are files that are already stored in the respective folder.","lastModifiedDate":"2021-10-22"},{"lineNumber":26,"author":{"gitId":"tlyi"},"content":"  If there is such files, the contents of the files will be loaded to the data section of the application.","lastModifiedDate":"2021-10-22"},{"lineNumber":27,"author":{"gitId":"tttyyzzz"},"content":"  Instances of profile, data(e.g. FoodList, ExerciseList, FutureExerciseList, ItemBank) and storage will be created","lastModifiedDate":"2021-10-22"},{"lineNumber":28,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":29,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":30,"author":{"gitId":"tttyyzzz"},"content":"Upon exiting of application:","lastModifiedDate":"2021-10-22"},{"lineNumber":31,"author":{"gitId":"tttyyzzz"},"content":"- The application will save all data into the files created. All instance of components will be cleared automatically.","lastModifiedDate":"2021-10-22"},{"lineNumber":32,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":33,"author":{"gitId":"tttyyzzz"},"content":"Class diagram of Main","lastModifiedDate":"2021-10-27"},{"lineNumber":34,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":35,"author":{"gitId":"tttyyzzz"},"content":"\u003cp align\u003d\"center\" width\u003d\"100%\"\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":36,"author":{"gitId":"tlyi"},"content":"  \u003cimg width\u003d\"100%\" src\u003d\"images/MainClass.png\" alt\u003d\"Main Class Diagram\"/\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":37,"author":{"gitId":"tttyyzzz"},"content":"\u003c/p\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":38,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":39,"author":{"gitId":"tttyyzzz"},"content":"When _Fitbot_ is being started, the above instances are being created in the main class. ","lastModifiedDate":"2021-10-27"},{"lineNumber":40,"author":{"gitId":"tttyyzzz"},"content":"All the classes are marked as 1 as the main class require these instance to perform successful operations.","lastModifiedDate":"2021-10-27"},{"lineNumber":41,"author":{"gitId":"tttyyzzz"},"content":"ItemBank contains 2 instances as 1 is required for foodBank while the other is for exerciseBank.","lastModifiedDate":"2021-10-27"},{"lineNumber":42,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":43,"author":{"gitId":"tttyyzzz"},"content":"- Main class start of by running the `start()` function which loads all information using StorageManager class to the ","lastModifiedDate":"2021-10-27"},{"lineNumber":44,"author":{"gitId":"tttyyzzz"},"content":"Profile, FoodList, ExerciseList,ItemBank(foodBank, exerciseBank).","lastModifiedDate":"2021-10-27"},{"lineNumber":45,"author":{"gitId":"tttyyzzz"},"content":"-Next main class will check if user contains the profile using the `checkAndCreateProfile()`. If user does not have","lastModifiedDate":"2021-10-27"},{"lineNumber":46,"author":{"gitId":"tttyyzzz"},"content":"a profile, the application will assist user to create a profile by prompting questions.","lastModifiedDate":"2021-10-27"},{"lineNumber":47,"author":{"gitId":"tttyyzzz"},"content":"- `loadsFutureExercisesToList()` loads future exercises to FutureExerciseList.","lastModifiedDate":"2021-10-27"},{"lineNumber":48,"author":{"gitId":"tttyyzzz"},"content":"- After loading and creating profile, the main program will enter `enterTaskModeUntlByeCommand()` for user","lastModifiedDate":"2021-10-27"},{"lineNumber":49,"author":{"gitId":"tttyyzzz"},"content":"to interact with the application","lastModifiedDate":"2021-10-27"},{"lineNumber":50,"author":{"gitId":"tttyyzzz"},"content":"- Once user has keyed in the command `bye`, the main program will exit out of the `enterTaskModeUntlByeCommand()`","lastModifiedDate":"2021-10-27"},{"lineNumber":51,"author":{"gitId":"tttyyzzz"},"content":"and run the `exit()` command to exit the application.","lastModifiedDate":"2021-10-27"},{"lineNumber":52,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":53,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":54,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":55,"author":{"gitId":"tttyyzzz"},"content":"Interaction between the classes could be shown by the uml sequence diagram below.","lastModifiedDate":"2021-10-22"},{"lineNumber":56,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":57,"author":{"gitId":"tlyi"},"content":"\u003cp align\u003d\"center\" width\u003d\"100%\"\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":58,"author":{"gitId":"tlyi"},"content":"  \u003cimg width\u003d\"100%\" src\u003d\"images/Architecture.png\" alt\u003d\"Architecture Sequence Diagram\"/\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":59,"author":{"gitId":"tlyi"},"content":"\u003c/p\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":60,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":61,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":62,"author":{"gitId":"tttyyzzz"},"content":"-When there is an input, the Ui class will retrieve the information from the user.","lastModifiedDate":"2021-10-27"},{"lineNumber":63,"author":{"gitId":"tttyyzzz"},"content":"-Once the Main class receives the input, it creates a new Parser class to parse the commands.","lastModifiedDate":"2021-10-27"},{"lineNumber":64,"author":{"gitId":"tttyyzzz"},"content":"-Depends on the method, in this case add food command, main class will execute the command class(not shown)","lastModifiedDate":"2021-10-27"},{"lineNumber":65,"author":{"gitId":"tttyyzzz"},"content":"based on the command the parser detects.","lastModifiedDate":"2021-10-27"},{"lineNumber":66,"author":{"gitId":"tttyyzzz"},"content":"- The command class will add the food item into the `Data` and updates the `storage` instance accordingly.","lastModifiedDate":"2021-10-27"},{"lineNumber":67,"author":{"gitId":"tttyyzzz"},"content":"- when all the operations above are completed, the Main class will pass a message to Ui class.","lastModifiedDate":"2021-10-27"},{"lineNumber":68,"author":{"gitId":"tttyyzzz"},"content":"- Ui class wll then format the message and print it to console for the user.","lastModifiedDate":"2021-10-27"},{"lineNumber":69,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":70,"author":{"gitId":"weidak"},"content":"### Data Component (Profile)","lastModifiedDate":"2021-10-27"},{"lineNumber":71,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":72,"author":{"gitId":"weidak"},"content":"\u003cp align\u003d\"center\" width\u003d\"100%\"\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":73,"author":{"gitId":"weidak"},"content":"  \u003cimg width\u003d\"90%\" src\u003d\"images/ProfileClassDiagram.png\" alt\u003d\"Architecture Sequence Diagram\"/\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":74,"author":{"gitId":"weidak"},"content":"\u003c/p\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":75,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":76,"author":{"gitId":"weidak"},"content":"A `Profile` class has various attributes such as `Name`, `Height`, `Weight`, `Gender`, `Age`, `CalorieGoal` and `ActivityFactor`","lastModifiedDate":"2021-10-27"},{"lineNumber":77,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":78,"author":{"gitId":"weidak"},"content":"- Using these attributes it is able to calculate an estimated Basal Metabolic Rate (BMR) using the Harris-Benedict Equation based on your activity levels. Therefore, while calculating your net calories for the day, your BMR is factored in to give you an estimated calculation of your net calorie.","lastModifiedDate":"2021-10-27"},{"lineNumber":79,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":80,"author":{"gitId":"weidak"},"content":"- All the attributes inherit a `Verifiable` interface to enable us to check if the attributes are valid. This is important for the setting up of profile or the loading of profile from storage to ensure data integrity of the user\u0027s attributes.","lastModifiedDate":"2021-10-27"},{"lineNumber":81,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":82,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":83,"author":{"gitId":"tryyang2001"},"content":"### Data Component (ItemBank and Item)","lastModifiedDate":"2021-10-21"},{"lineNumber":84,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":85,"author":{"gitId":"tlyi"},"content":"\u003cp align\u003d\"center\" width\u003d\"100%\"\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":86,"author":{"gitId":"tryyang2001"},"content":"  \u003cimg width\u003d\"90%\" src\u003d\"images/ItemBankAndItemClassDiagram.png\" alt\u003d\"ItemBank And Item Class Diagram\"/\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":87,"author":{"gitId":"tlyi"},"content":"\u003c/p\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":88,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":89,"author":{"gitId":"tryyang2001"},"content":"The `Data` component is responsible to perform operations such as data modification and query in the code. It receives the commands from the `Logic` component, execute the ","lastModifiedDate":"2021-10-21"},{"lineNumber":90,"author":{"gitId":"tryyang2001"},"content":"correct operations, and finally return the command result back to `Logic` component.\\","lastModifiedDate":"2021-10-21"},{"lineNumber":91,"author":{"gitId":"tryyang2001"},"content":"\\","lastModifiedDate":"2021-10-21"},{"lineNumber":92,"author":{"gitId":"tryyang2001"},"content":"Above is a high-level **_class diagram_** for the `ItemBank` and `Item` classes in `Data` component. Note that since `Main` and `Logic` components have accessed to some classes","lastModifiedDate":"2021-10-21"},{"lineNumber":93,"author":{"gitId":"tryyang2001"},"content":"in `Data` component, they form **_dependencies_** with those classes.","lastModifiedDate":"2021-10-21"},{"lineNumber":94,"author":{"gitId":"xingjie99"},"content":"The main purpose of having `ItemBank` and `Item` classes is to allow user to perform writing, reading, editing and deleting operations in the program.","lastModifiedDate":"2021-10-27"},{"lineNumber":95,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":96,"author":{"gitId":"tryyang2001"},"content":"#### ItemBank class","lastModifiedDate":"2021-10-21"},{"lineNumber":97,"author":{"gitId":"tryyang2001"},"content":"`ItemBank` is the **_highest [superclass](#_superclass_)_** that contains one attribute called `internalItems` which is an _array list_ of `item`.\\","lastModifiedDate":"2021-10-27"},{"lineNumber":98,"author":{"gitId":"tryyang2001"},"content":"`ItemList` being the **[_subclass_](#_subclass_)** of `ItemBank` and **_[superclass](#_superclass_)_** of `FoodList` and `ExerciseList`, which inherits all the methods available from `ItemBank`, with additional methods that form a [dependency](#_dependency_) on `Item` class.\\","lastModifiedDate":"2021-10-27"},{"lineNumber":99,"author":{"gitId":"tryyang2001"},"content":"`FoodList` and `ExerciseList` are **[_subclass_](#_subclass_)** that inherit all the methods available from `ItemList`, while each of them also contains more methods that form a [dependency](#_dependency_)","lastModifiedDate":"2021-10-27"},{"lineNumber":100,"author":{"gitId":"xingjie99"},"content":"on `Food` class and `Exercise` class respectively.\\","lastModifiedDate":"2021-10-27"},{"lineNumber":101,"author":{"gitId":"xingjie99"},"content":"`FutureExerciseList` is a **[_subclass_](#_subclass_)** that inherit all the methods available from `ExerciseList` and contains other methods that form a [dependency](#_dependency_)","lastModifiedDate":"2021-10-27"},{"lineNumber":102,"author":{"gitId":"xingjie99"},"content":"on `Exercise` class.","lastModifiedDate":"2021-10-27"},{"lineNumber":103,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":104,"author":{"gitId":"tryyang2001"},"content":"#### Item class","lastModifiedDate":"2021-10-21"},{"lineNumber":105,"author":{"gitId":"tryyang2001"},"content":"An `Item` class contains two attributes, `name` which represents the name of the item, and `calories` which represents the calorie intake/burnt from the item.\\","lastModifiedDate":"2021-10-21"},{"lineNumber":106,"author":{"gitId":"tryyang2001"},"content":"`Food` and `Exercise` are the only two **_subclasses_** inherit the `Item` class. \\","lastModifiedDate":"2021-10-21"},{"lineNumber":107,"author":{"gitId":"tryyang2001"},"content":"`Food` class has two extra attributes called `dateTime` and `timePeriod`, the former stores the consumed food date and time, while the latter compute the time period ","lastModifiedDate":"2021-10-21"},{"lineNumber":108,"author":{"gitId":"tryyang2001"},"content":"(only value such as **`Morning`, `Afternoon`, `Evening`** and **`Night`** as shown in the enumeration class `TimePeriod`) of the food consumed time. Note that the `timePeriod` ","lastModifiedDate":"2021-10-21"},{"lineNumber":109,"author":{"gitId":"tryyang2001"},"content":"value must present when a `Food` object is created.\\","lastModifiedDate":"2021-10-21"},{"lineNumber":110,"author":{"gitId":"tryyang2001"},"content":"`Exercise` class has one extra attribute called `date` which stores the date of the exercise taken.\\","lastModifiedDate":"2021-10-21"},{"lineNumber":111,"author":{"gitId":"tryyang2001"},"content":"\\","lastModifiedDate":"2021-10-21"},{"lineNumber":112,"author":{"gitId":"tryyang2001"},"content":"Classes such as `ItemList` and `Item` are _**[abstract class](#_abstract-class_)**_, because they do not add meaningful value to the user if one tries to create them.","lastModifiedDate":"2021-10-27"},{"lineNumber":113,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":114,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":115,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":116,"author":{"gitId":"tttyyzzz"},"content":"### Ui Component","lastModifiedDate":"2021-10-21"},{"lineNumber":117,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":118,"author":{"gitId":"tttyyzzz"},"content":"The `Ui` component interacts with the user. It reads in input from the user and prints messages on the console.","lastModifiedDate":"2021-10-22"},{"lineNumber":119,"author":{"gitId":"tttyyzzz"},"content":"Below shows a class diagram of how `Ui` component interacts with the rest of the application.","lastModifiedDate":"2021-10-21"},{"lineNumber":120,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":121,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":122,"author":{"gitId":"tlyi"},"content":"\u003cp align\u003d\"center\" width\u003d\"100%\"\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":123,"author":{"gitId":"tlyi"},"content":"  \u003cimg width\u003d\"50%\" src\u003d\"images/Ui.png\" alt\u003d\"Ui Class Diagram\"/\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":124,"author":{"gitId":"tlyi"},"content":"\u003c/p\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":125,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":126,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":127,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":128,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":129,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":130,"author":{"gitId":"tlyi"},"content":"### Logic Component","lastModifiedDate":"2021-10-21"},{"lineNumber":131,"author":{"gitId":"tttyyzzz"},"content":" ","lastModifiedDate":"2021-10-22"},{"lineNumber":132,"author":{"gitId":"tlyi"},"content":"The `Logic` component is responsible for making sense of user input.","lastModifiedDate":"2021-10-21"},{"lineNumber":133,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":134,"author":{"gitId":"tlyi"},"content":"Below is a high level class diagram of the `Logic` component, which shows how it interacts with other components ","lastModifiedDate":"2021-10-21"},{"lineNumber":135,"author":{"gitId":"tlyi"},"content":"like `Main` and `Data`.","lastModifiedDate":"2021-10-21"},{"lineNumber":136,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":137,"author":{"gitId":"tlyi"},"content":"\u003cp align\u003d\"center\" width\u003d\"100%\"\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":138,"author":{"gitId":"tlyi"},"content":"  \u003cimg width\u003d\"60%\" src\u003d\"images/LogicClassDiagram.png\" alt\u003d\"Logic Class Diagram\"/\u003e ","lastModifiedDate":"2021-10-27"},{"lineNumber":139,"author":{"gitId":"tlyi"},"content":"\u003c/p\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":140,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":141,"author":{"gitId":"tlyi"},"content":"The general workflow of the `Logic` component is as follows:","lastModifiedDate":"2021-10-27"},{"lineNumber":142,"author":{"gitId":"tlyi"},"content":"1. After `Main`  receives user input, it feeds this user input to the `ParserManager`.","lastModifiedDate":"2021-10-27"},{"lineNumber":143,"author":{"gitId":"tlyi"},"content":"2. The `ParserManager` parses the user input and creates an `Command` object.","lastModifiedDate":"2021-10-27"},{"lineNumber":144,"author":{"gitId":"tlyi"},"content":"   - More specifically, it creates a `XYZCommand` object, where `XYZ` is a placeholder for the ","lastModifiedDate":"2021-10-27"},{"lineNumber":145,"author":{"gitId":"tlyi"},"content":"      specific command type, e.g `AddFoodCommand`, `UpdateProfileCommand`, etc.","lastModifiedDate":"2021-10-27"},{"lineNumber":146,"author":{"gitId":"tlyi"},"content":"   - `XYZCommand` class inherits from the abstract class `Command`, which is used to represent all executable commands in the application.","lastModifiedDate":"2021-10-27"},{"lineNumber":147,"author":{"gitId":"tlyi"},"content":"3. `ParserManager` returns the `Command` object to `Main`, which then executes the `Command`.","lastModifiedDate":"2021-10-27"},{"lineNumber":148,"author":{"gitId":"tlyi"},"content":"4. After execution, all `Command` objects stores the result of the execution in a `CommandResult` object. ","lastModifiedDate":"2021-10-27"},{"lineNumber":149,"author":{"gitId":"tlyi"},"content":"This `CommandResult` object is then returned to `Main`.","lastModifiedDate":"2021-10-27"},{"lineNumber":150,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":151,"author":{"gitId":"tlyi"},"content":"Here is a more detailed class diagram of the `Logic` component.","lastModifiedDate":"2021-10-21"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":153,"author":{"gitId":"tlyi"},"content":"\u003cp align\u003d\"center\" width\u003d\"100%\"\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":154,"author":{"gitId":"tlyi"},"content":"  \u003cimg width\u003d\"80%\" src\u003d\"images/ParserClassDiagram.png\" alt\u003d\"Parser Class Diagram\"\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":155,"author":{"gitId":"tlyi"},"content":"\u003c/p\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":157,"author":{"gitId":"tlyi"},"content":"Taking a closer look into the parsing process, the `ParserManager` actually does not do most of the parsing itself.","lastModifiedDate":"2021-10-21"},{"lineNumber":158,"author":{"gitId":"tlyi"},"content":"Instead, `ParserManager` creates `XYZCommandParser`,  which is then responsible ","lastModifiedDate":"2021-10-27"},{"lineNumber":159,"author":{"gitId":"tlyi"},"content":"for creating the specific `XYZCommand`. All `XYZCommandParser` classes implement the interface `Parser`, which dictates that ","lastModifiedDate":"2021-10-27"},{"lineNumber":160,"author":{"gitId":"tlyi"},"content":"they are able to parse user inputs. They also make use of utility methods stored in `ParserUtils` to extract ","lastModifiedDate":"2021-10-27"},{"lineNumber":161,"author":{"gitId":"tlyi"},"content":"all the parameters relevant to the command. After parsing the input, `XYZCommandParser` returns `XYZCommand` to `ParserManager`,","lastModifiedDate":"2021-10-27"},{"lineNumber":162,"author":{"gitId":"tlyi"},"content":"which then returns the same `XYZCommand` to `Main`.","lastModifiedDate":"2021-10-27"},{"lineNumber":163,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":164,"author":{"gitId":"weidak"},"content":"[comment]: \u003c\u003e (@@author @tlyi)","lastModifiedDate":"2021-10-27"},{"lineNumber":165,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":166,"author":{"gitId":"weidak"},"content":"The sequence diagram below models the interactions between the different classes within the Logic component.","lastModifiedDate":"2021-10-27"},{"lineNumber":167,"author":{"gitId":"weidak"},"content":"This particular case illustrates how a user input add f/potato c/20 is parsed and process to execute the appropriate actions.","lastModifiedDate":"2021-10-27"},{"lineNumber":168,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":169,"author":{"gitId":"weidak"},"content":"\u003cp align\u003d\"center\" width\u003d\"100%\"\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":170,"author":{"gitId":"weidak"},"content":"  \u003cimg width\u003d\"100%\" src\u003d\"images/LogicSequenceDiagram.png\" alt\u003d\"Logic Sequence Diagram\"/\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":171,"author":{"gitId":"weidak"},"content":"\u003c/p\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":172,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":173,"author":{"gitId":"weidak"},"content":"[comment]: \u003c\u003e (@@author)","lastModifiedDate":"2021-10-27"},{"lineNumber":174,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":175,"author":{"gitId":"weidak"},"content":"### Storage component","lastModifiedDate":"2021-10-27"},{"lineNumber":176,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":177,"author":{"gitId":"tlyi"},"content":"\u003cp align\u003d\"center\" width\u003d\"100%\"\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":178,"author":{"gitId":"weidak"},"content":"  \u003cimg width\u003d\"90%\" src\u003d\"images/StorageManagerClassDiagram.png\" alt\u003d\"Architecture Sequence Diagram\"/\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":179,"author":{"gitId":"tlyi"},"content":"\u003c/p\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":180,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":181,"author":{"gitId":"weidak"},"content":"`StorageManager` initializes all `Storage` subclasses with their respective paths. ","lastModifiedDate":"2021-10-27"},{"lineNumber":182,"author":{"gitId":"weidak"},"content":"Acting as a medium, it then interacts with each of the respective `Storage` subclasses. ","lastModifiedDate":"2021-10-27"},{"lineNumber":183,"author":{"gitId":"weidak"},"content":"This design declutters the code in Main and provides a platform to ensure each of the subclasses were utilized. ","lastModifiedDate":"2021-10-27"},{"lineNumber":184,"author":{"gitId":"weidak"},"content":"It is also implemented with all of the `StorageInterface` interfaces to enforce methods of loading and saving to be fully implemented into the code.","lastModifiedDate":"2021-10-27"},{"lineNumber":185,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":186,"author":{"gitId":"weidak"},"content":"The `StorageManager` component loads and saves:","lastModifiedDate":"2021-10-21"},{"lineNumber":187,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":188,"author":{"gitId":"weidak"},"content":"- your profile: name, height, weight, gender, age, calorie goal and activity factor","lastModifiedDate":"2021-10-27"},{"lineNumber":189,"author":{"gitId":"weidak"},"content":"- list of exercises done: including date performed","lastModifiedDate":"2021-10-27"},{"lineNumber":190,"author":{"gitId":"weidak"},"content":"- list of food consumed: including date and time of consumption","lastModifiedDate":"2021-10-27"},{"lineNumber":191,"author":{"gitId":"weidak"},"content":"- upcoming exercises: recurring exercises that are scheduled in the future","lastModifiedDate":"2021-10-27"},{"lineNumber":192,"author":{"gitId":"weidak"},"content":"- food and exercise banks: names and calories of relevant item","lastModifiedDate":"2021-10-27"},{"lineNumber":193,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":194,"author":{"gitId":"weidak"},"content":"Each `Storage` subclass is able to decode/encode details from the bot and is designed this way (Using ProfileStorage as an example)","lastModifiedDate":"2021-10-27"},{"lineNumber":195,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":196,"author":{"gitId":"tlyi"},"content":"\u003cp align\u003d\"center\" width\u003d\"100%\"\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":197,"author":{"gitId":"weidak"},"content":"  \u003cimg width\u003d\"50%\" src\u003d\"images/ProfileStorageClassDiagram.png\" alt\u003d\"Architecture Sequence Diagram\"/\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":198,"author":{"gitId":"tlyi"},"content":"\u003c/p\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":199,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":200,"author":{"gitId":"weidak"},"content":"The `ProfileStorage` inherits an abstract class of `Storage` which contains protected attributes of `fileName` and `filePath`.","lastModifiedDate":"2021-10-27"},{"lineNumber":201,"author":{"gitId":"weidak"},"content":"After inheritance, it then implements loading and saving methods interfaced by `ProfileStorageInterface` to ensure reading and writing operations.","lastModifiedDate":"2021-10-27"},{"lineNumber":202,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":203,"author":{"gitId":"weidak"},"content":"where:","lastModifiedDate":"2021-10-21"},{"lineNumber":204,"author":{"gitId":"weidak"},"content":"- ProfileEncoder encodes the list to the profile.txt file.","lastModifiedDate":"2021-10-21"},{"lineNumber":205,"author":{"gitId":"weidak"},"content":"- ProfileDecoder decodes the list from profile.txt file and inputs into the bot.","lastModifiedDate":"2021-10-21"},{"lineNumber":206,"author":{"gitId":"weidak"},"content":"- ProfileStorage utilizes the static methods in encoder and decoder for loading or saving operations.","lastModifiedDate":"2021-10-27"},{"lineNumber":207,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":208,"author":{"gitId":"weidak"},"content":"This way ensures that each class has a _single responsibility_ with little coupling between each other.","lastModifiedDate":"2021-10-27"},{"lineNumber":209,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":210,"author":{"gitId":"tryyang2001"},"content":"## Implementation","lastModifiedDate":"2021-10-27"},{"lineNumber":211,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":212,"author":{"gitId":"tryyang2001"},"content":"This section describes some noteworthy details on how certain features are implemented","lastModifiedDate":"2021-10-27"},{"lineNumber":213,"author":{"gitId":"tryyang2001"},"content":"and some design considerations.","lastModifiedDate":"2021-10-27"},{"lineNumber":214,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":215,"author":{"gitId":"tryyang2001"},"content":"#### [Proposed] Add a Food Item Feature","lastModifiedDate":"2021-10-27"},{"lineNumber":216,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":217,"author":{"gitId":"tryyang2001"},"content":"![Add Food Item Sequence Diagram](images/AddFoodItemSequenceDiagram.png)","lastModifiedDate":"2021-10-27"},{"lineNumber":218,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":219,"author":{"gitId":"tryyang2001"},"content":"The purpose of this feature is to allow the user to add food item to the food list. The above diagram shown is the ","lastModifiedDate":"2021-10-27"},{"lineNumber":220,"author":{"gitId":"xingjie99"},"content":"sequence diagram of the process of adding the food item. ","lastModifiedDate":"2021-10-27"},{"lineNumber":221,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":222,"author":{"gitId":"tryyang2001"},"content":"When the user gives an input, the `parser` from the `Logic` component will try to read the input, and then call the correct","lastModifiedDate":"2021-10-27"},{"lineNumber":223,"author":{"gitId":"tryyang2001"},"content":"command. In this case we assume that the correct format of **Add Food** input is given and the AddFoodCommand has already been","lastModifiedDate":"2021-10-27"},{"lineNumber":224,"author":{"gitId":"tryyang2001"},"content":"called and created.","lastModifiedDate":"2021-10-27"},{"lineNumber":225,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":226,"author":{"gitId":"tryyang2001"},"content":"Step 1: When the `execute` method in the `AddFoodCommand` is being called, it will first check that if the `isCalorieFromBank`","lastModifiedDate":"2021-10-27"},{"lineNumber":227,"author":{"gitId":"tryyang2001"},"content":"condition is `true`, meaning that the description of the input food item can be found in the `FoodBank` object, ","lastModifiedDate":"2021-10-27"},{"lineNumber":228,"author":{"gitId":"tryyang2001"},"content":"as shown in the `alt` frames of the sequence diagram. In each alternative paths, a new `Food` class object will be created","lastModifiedDate":"2021-10-27"},{"lineNumber":229,"author":{"gitId":"tryyang2001"},"content":"by using the `Food` constructor.","lastModifiedDate":"2021-10-27"},{"lineNumber":230,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":231,"author":{"gitId":"tryyang2001"},"content":"Step 2: When the `Food` constructor is called, it will perform a [self-invocation](#_self-invocation_)`setTimePeriod` to set the enum value `timePeriod`","lastModifiedDate":"2021-10-27"},{"lineNumber":232,"author":{"gitId":"tryyang2001"},"content":"of the Food. After that, it returns the Food object to the `AddFoodCommand`.","lastModifiedDate":"2021-10-27"},{"lineNumber":233,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":234,"author":{"gitId":"tryyang2001"},"content":"Step 3: The `AddFoodCommand` then calls the method `addItem` from the `FoodList` object, which performs the add food operation in the","lastModifiedDate":"2021-10-27"},{"lineNumber":235,"author":{"gitId":"tryyang2001"},"content":"`Food List`. After the new `Food` Item is added, it will perform a [self-invocation](#_self-invocation_) `sortList` to sort the `FoodList`. Since the ","lastModifiedDate":"2021-10-27"},{"lineNumber":236,"author":{"gitId":"tryyang2001"},"content":"`addItem` method is void type, nothing is returned to `AddFoodCommand`.","lastModifiedDate":"2021-10-27"},{"lineNumber":237,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":238,"author":{"gitId":"tryyang2001"},"content":"Step 4: After the `addItem` method is executed without giving any error, the `AddFoodCommand` then calls a `CommandResult` object.","lastModifiedDate":"2021-10-27"},{"lineNumber":239,"author":{"gitId":"tryyang2001"},"content":"This object will return and output the message indicates that the `AddFoodCommand` is executed without any error. At this","lastModifiedDate":"2021-10-27"},{"lineNumber":240,"author":{"gitId":"tryyang2001"},"content":"stage, the `AddFoodCommand` is successfully ended.","lastModifiedDate":"2021-10-27"},{"lineNumber":241,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":242,"author":{"gitId":"tryyang2001"},"content":"#### Design considerations:","lastModifiedDate":"2021-10-27"},{"lineNumber":243,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":244,"author":{"gitId":"tryyang2001"},"content":"The current data structure used in `FoodList` is [singly Linked List](#_singly-linked-list_), which required O(n\u003csup\u003e2\u003c/sup\u003e) to ensure that","lastModifiedDate":"2021-10-27"},{"lineNumber":245,"author":{"gitId":"tryyang2001"},"content":"the list is sorted according to date and time. The rationale of choosing linked list is because it allows sizable array","lastModifiedDate":"2021-10-27"},{"lineNumber":246,"author":{"gitId":"tryyang2001"},"content":"implementation. In the future increment, to increase the code efficiency, the data structure is considered to change to ","lastModifiedDate":"2021-10-27"},{"lineNumber":247,"author":{"gitId":"tryyang2001"},"content":"[Priority Queue](#_priority-queue_) to achieve O(nlogn) addition.","lastModifiedDate":"2021-10-27"},{"lineNumber":248,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":249,"author":{"gitId":"tryyang2001"},"content":"The same reasoning for the class `ItemBank`, which is the superclass of `FoodList` and `ExerciseList`, the data structure","lastModifiedDate":"2021-10-27"},{"lineNumber":250,"author":{"gitId":"tryyang2001"},"content":"used is also a [singly Linked List](#_singly-linked-list_). In the future increment, since the `ItemBank` need to perform query operation in an efficient","lastModifiedDate":"2021-10-27"},{"lineNumber":251,"author":{"gitId":"tryyang2001"},"content":"way, the data structure of the attribute will be changed to HashMap to achieve O(1) query time.  ","lastModifiedDate":"2021-10-27"},{"lineNumber":252,"author":{"gitId":"tlyi"},"content":"\u003cp align\u003d\"center\" width\u003d\"100%\"\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":253,"author":{"gitId":"tlyi"},"content":"  \u003cimg width\u003d\"60%\" src\u003d\"images/ItemBankCodeSnippet.png\" alt\u003d\"Item Bank Code Snippet\"/\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":254,"author":{"gitId":"tlyi"},"content":"\u003c/p\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":255,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":256,"author":{"gitId":"xingjie99"},"content":"#### [Proposed] Add a Recurring Exercise Feature","lastModifiedDate":"2021-10-27"},{"lineNumber":257,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":258,"author":{"gitId":"xingjie99"},"content":"![Add Recurring Exercise Sequence Diagram](images/AddRecurringExerciseSequenceDiagram.png)","lastModifiedDate":"2021-10-27"},{"lineNumber":259,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":260,"author":{"gitId":"xingjie99"},"content":"The purpose of this feature is to allow the user to add recurring exercises to the future exercise list. The above diagram ","lastModifiedDate":"2021-10-27"},{"lineNumber":261,"author":{"gitId":"xingjie99"},"content":"is the sequence diagram of adding recurring exercises to the future exercise list.","lastModifiedDate":"2021-10-27"},{"lineNumber":262,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":263,"author":{"gitId":"xingjie99"},"content":"Step 1: The `parser` from the `Logic` component parses the input given by the user and calls the `execute` method in","lastModifiedDate":"2021-10-27"},{"lineNumber":264,"author":{"gitId":"xingjie99"},"content":"`AddRecurringExerciseCommand`. The condition `isCalorieFromBank` is checked to see if the user input any calories for","lastModifiedDate":"2021-10-27"},{"lineNumber":265,"author":{"gitId":"xingjie99"},"content":"the recurring exercise. If it is `true`, it means that no calories input is detected and the method ","lastModifiedDate":"2021-10-27"},{"lineNumber":266,"author":{"gitId":"xingjie99"},"content":"`getCaloriesOfItemWithMatchingName` in class `ItemBank` is called, and it will return an int value of `calories`.","lastModifiedDate":"2021-10-27"},{"lineNumber":267,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":268,"author":{"gitId":"xingjie99"},"content":"Step 2: Within `execute` method, `addRecurringItem` method in `FutureExerciseList` is also called. This method will ","lastModifiedDate":"2021-10-27"},{"lineNumber":269,"author":{"gitId":"xingjie99"},"content":"iteratively call the constructor for `Exercise` class and add the exercises into `FutureExerciseList` via the self-invocation","lastModifiedDate":"2021-10-27"},{"lineNumber":270,"author":{"gitId":"xingjie99"},"content":"`addItem` method. This iteration will end when all exercises on `dayOfTheWeek` between `startDate` and `endDate` are added.","lastModifiedDate":"2021-10-27"},{"lineNumber":271,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":272,"author":{"gitId":"xingjie99"},"content":"Step 3: After `addRecurringExercises` method is executed, `AddRecurringExerciseCommand` calls a `CommandResult` object.","lastModifiedDate":"2021-10-27"},{"lineNumber":273,"author":{"gitId":"xingjie99"},"content":"This object outputs a message and `AddRecurringExerciseCommand` will return `commandResult`, indicating that","lastModifiedDate":"2021-10-27"},{"lineNumber":274,"author":{"gitId":"xingjie99"},"content":"`AddRecurringExerciseCommand` is successfully executed and ended.","lastModifiedDate":"2021-10-27"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":276,"author":{"gitId":"-"},"content":"## Product scope","lastModifiedDate":"2020-05-24"},{"lineNumber":277,"author":{"gitId":"-"},"content":"### Target user profile","lastModifiedDate":"2020-05-24"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":279,"author":{"gitId":"weidak"},"content":"University students who are looking to keep track of their calorie consumption and calorie outputs.","lastModifiedDate":"2021-10-21"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":281,"author":{"gitId":"-"},"content":"### Value proposition","lastModifiedDate":"2020-05-24"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":283,"author":{"gitId":"weidak"},"content":"During these restricted COVID-19 times, we are confined to home-based learning. As a result, we tend to be less active and have fewer opportunities to stay active. This app aims to help you to gain or lose weight based on your goal of implementing a calorie deficit or calorie surplus.","lastModifiedDate":"2021-10-21"},{"lineNumber":284,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":285,"author":{"gitId":"weidak"},"content":"Its overview shows your progress over the weeks, indicating whether or not you have hit your daily calorie goal target for the past 7 days.","lastModifiedDate":"2021-10-21"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":287,"author":{"gitId":"-"},"content":"## User Stories","lastModifiedDate":"2020-05-24"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":289,"author":{"gitId":"-"},"content":"|Version| As a ... | I want to ... | So that I can ...|","lastModifiedDate":"2020-05-24"},{"lineNumber":290,"author":{"gitId":"-"},"content":"|--------|----------|---------------|------------------|","lastModifiedDate":"2020-05-24"},{"lineNumber":291,"author":{"gitId":"-"},"content":"|v1.0|new user|see usage instructions|refer to them when I forget how to use the application|","lastModifiedDate":"2020-05-24"},{"lineNumber":292,"author":{"gitId":"tttyyzzz"},"content":"|v1.0|new user|want to store food records|track my food intake|","lastModifiedDate":"2021-10-22"},{"lineNumber":293,"author":{"gitId":"tttyyzzz"},"content":"|v1.0|new user|want to store exercise records| track my exercises|","lastModifiedDate":"2021-10-22"},{"lineNumber":294,"author":{"gitId":"tttyyzzz"},"content":"|v1.0|new user|store all records|refer to them whenever needed|","lastModifiedDate":"2021-10-22"},{"lineNumber":295,"author":{"gitId":"tttyyzzz"},"content":"|v2.0|new user|have a profile| to keep track of all information to calculate my net calories|","lastModifiedDate":"2021-10-22"},{"lineNumber":296,"author":{"gitId":"-"},"content":"|v2.0|user|find a to-do item by name|locate a to-do without having to go through the entire list|","lastModifiedDate":"2020-05-24"},{"lineNumber":297,"author":{"gitId":"tttyyzzz"},"content":"|v2.0|user|have a summary|see my calorie targets","lastModifiedDate":"2021-10-22"},{"lineNumber":298,"author":{"gitId":"tttyyzzz"},"content":"|v2.0|user|have a history|spend less time typing all the requirements to store items|","lastModifiedDate":"2021-10-22"},{"lineNumber":299,"author":{"gitId":"tttyyzzz"},"content":"|v2.0|user|have a exercise list that update itself|have more time for exercises|","lastModifiedDate":"2021-10-22"},{"lineNumber":300,"author":{"gitId":"tttyyzzz"},"content":"|v2.0|user|have a sorted food list|see what I have eaten on different times of the day|","lastModifiedDate":"2021-10-22"},{"lineNumber":301,"author":{"gitId":"tttyyzzz"},"content":"|v2.0|user|have a delete all command|start afresh|","lastModifiedDate":"2021-10-22"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":303,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":304,"author":{"gitId":"-"},"content":"## Non-Functional Requirements","lastModifiedDate":"2020-05-24"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":306,"author":{"gitId":"weidak"},"content":"1. Should work on any OS as long as it has Java 11 or above installed on their PC.","lastModifiedDate":"2021-10-21"},{"lineNumber":307,"author":{"gitId":"weidak"},"content":"2. Should be able to hold up to at least a year of data without a slowdown of performance in daily use.","lastModifiedDate":"2021-10-21"},{"lineNumber":308,"author":{"gitId":"weidak"},"content":"3. Any user that is comfortable with typing of speeds \u003e55 words per minute would be able to accomplish these tasks faster than if they used a mouse to navigate.","lastModifiedDate":"2021-10-21"},{"lineNumber":309,"author":{"gitId":"-"},"content":"## Glossary","lastModifiedDate":"2020-05-24"},{"lineNumber":310,"author":{"gitId":"tryyang2001"},"content":"#### **_dependency_**  ","lastModifiedDate":"2021-10-27"},{"lineNumber":311,"author":{"gitId":"tryyang2001"},"content":"In UML diagram, dependency is a directed relationship which is used to show that some elements or a set of elements requires, ","lastModifiedDate":"2021-10-27"},{"lineNumber":312,"author":{"gitId":"tryyang2001"},"content":"needs or depends on other model elements for specification or implementation.","lastModifiedDate":"2021-10-27"},{"lineNumber":313,"author":{"gitId":"tryyang2001"},"content":"#### **_superclass_**  ","lastModifiedDate":"2021-10-27"},{"lineNumber":314,"author":{"gitId":"tryyang2001"},"content":"A class from which other classes inherit its code. The class that inherits its code will be able to access some/all ","lastModifiedDate":"2021-10-27"},{"lineNumber":315,"author":{"gitId":"tryyang2001"},"content":"functionalities from the superclass.","lastModifiedDate":"2021-10-27"},{"lineNumber":316,"author":{"gitId":"tryyang2001"},"content":"#### **_subclass_**   ","lastModifiedDate":"2021-10-27"},{"lineNumber":317,"author":{"gitId":"tryyang2001"},"content":"A class that inherits code from the other classes. Such class will be able to access some/all functionalities from its superclass, ","lastModifiedDate":"2021-10-27"},{"lineNumber":318,"author":{"gitId":"tryyang2001"},"content":"but not vice versa.","lastModifiedDate":"2021-10-27"},{"lineNumber":319,"author":{"gitId":"tryyang2001"},"content":"#### **_abstract class_** ","lastModifiedDate":"2021-10-27"},{"lineNumber":320,"author":{"gitId":"tryyang2001"},"content":"A class that cannot be created using constructor. Usually such class is a superclass, and it does not give meaningful ","lastModifiedDate":"2021-10-27"},{"lineNumber":321,"author":{"gitId":"tryyang2001"},"content":"value if one tries to construct it.","lastModifiedDate":"2021-10-27"},{"lineNumber":322,"author":{"gitId":"tryyang2001"},"content":"#### **_self invocation_**","lastModifiedDate":"2021-10-27"},{"lineNumber":323,"author":{"gitId":"tryyang2001"},"content":"In UML sequence diagram, a method that does a calling to another of its own methods is called self-invocation. ","lastModifiedDate":"2021-10-27"},{"lineNumber":324,"author":{"gitId":"tryyang2001"},"content":"#### **_singly linked list_**","lastModifiedDate":"2021-10-27"},{"lineNumber":325,"author":{"gitId":"tryyang2001"},"content":"A linear data structure that behaves like an array except that the elements inside linked list is not store at a contiguous ","lastModifiedDate":"2021-10-27"},{"lineNumber":326,"author":{"gitId":"tryyang2001"},"content":"location. In Java, linked list can be implemented using `ArrayList` in `Collection`.","lastModifiedDate":"2021-10-27"},{"lineNumber":327,"author":{"gitId":"tryyang2001"},"content":"#### **_priority queue_**","lastModifiedDate":"2021-10-27"},{"lineNumber":328,"author":{"gitId":"tryyang2001"},"content":"An abstract data type similar to a regular queue or stack data structure in which elements in priority queue are ordered","lastModifiedDate":"2021-10-27"},{"lineNumber":329,"author":{"gitId":"tryyang2001"},"content":"and have \"priority\" associated with each element. The priority can be defined by the coder. In the case of `FoodList`, the","lastModifiedDate":"2021-10-27"},{"lineNumber":330,"author":{"gitId":"tryyang2001"},"content":"priority will be defined as earlier date and time will have higher priority.","lastModifiedDate":"2021-10-27"},{"lineNumber":331,"author":{"gitId":"tryyang2001"},"content":"(more coming in the future...)","lastModifiedDate":"2021-10-21"},{"lineNumber":332,"author":{"gitId":"-"},"content":"## Instructions for manual testing","lastModifiedDate":"2020-05-24"},{"lineNumber":333,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":334,"author":{"gitId":"-"},"content":"{Give instructions on how to do a manual product testing e.g., how to load sample data to be used for testing}","lastModifiedDate":"2020-05-24"},{"lineNumber":335,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":336,"author":{"gitId":"tttyyzzz"},"content":"### Launch and shut down","lastModifiedDate":"2021-10-22"},{"lineNumber":337,"author":{"gitId":"tttyyzzz"},"content":"1. Initial launch","lastModifiedDate":"2021-10-22"},{"lineNumber":338,"author":{"gitId":"tttyyzzz"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2021-10-22"},{"lineNumber":339,"author":{"gitId":"tttyyzzz"},"content":"   2. Go to your command prompt, and go into your directory.","lastModifiedDate":"2021-10-22"},{"lineNumber":340,"author":{"gitId":"tttyyzzz"},"content":"   3. Run the command `java -jar Fitbot.jar`.","lastModifiedDate":"2021-10-22"},{"lineNumber":341,"author":{"gitId":"tttyyzzz"},"content":"   Expected: a data folder will be created in the file that contain Fitbot.jar.","lastModifiedDate":"2021-10-22"},{"lineNumber":342,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":343,"author":{"gitId":"tttyyzzz"},"content":"### Manipulating data","lastModifiedDate":"2021-10-22"},{"lineNumber":344,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":345,"author":{"gitId":"tttyyzzz"},"content":"1. Data is saved whenever data is manipulated.","lastModifiedDate":"2021-10-22"},{"lineNumber":346,"author":{"gitId":"tttyyzzz"},"content":"   1. run the application","lastModifiedDate":"2021-10-22"},{"lineNumber":347,"author":{"gitId":"tttyyzzz"},"content":"   2. add a food entry into the application.","lastModifiedDate":"2021-10-22"},{"lineNumber":348,"author":{"gitId":"tttyyzzz"},"content":"   3. Exit the application.","lastModifiedDate":"2021-10-22"},{"lineNumber":349,"author":{"gitId":"tttyyzzz"},"content":"   4. The file food_list.txt should have one entry.","lastModifiedDate":"2021-10-22"},{"lineNumber":350,"author":{"gitId":"tttyyzzz"},"content":"   5. Run the application and delete the entry.","lastModifiedDate":"2021-10-22"},{"lineNumber":351,"author":{"gitId":"tttyyzzz"},"content":"   6. Exit the application again.","lastModifiedDate":"2021-10-22"},{"lineNumber":352,"author":{"gitId":"tttyyzzz"},"content":"   Expected: food_list.txt should be empty.","lastModifiedDate":"2021-10-22"},{"lineNumber":353,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":354,"author":{"gitId":"tttyyzzz"},"content":"### Saving Data","lastModifiedDate":"2021-10-22"},{"lineNumber":355,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":356,"author":{"gitId":"tttyyzzz"},"content":"1. Saving data in file","lastModifiedDate":"2021-10-22"},{"lineNumber":357,"author":{"gitId":"tttyyzzz"},"content":"   1. After exiting the application, change the values saved in the file.","lastModifiedDate":"2021-10-22"},{"lineNumber":358,"author":{"gitId":"tttyyzzz"},"content":"   2. Upon start-up, all valid values will be changed in the application.","lastModifiedDate":"2021-10-22"},{"lineNumber":359,"author":{"gitId":"tttyyzzz"},"content":"   3. Replace one of the text file generated by the application with lorem ipsum.","lastModifiedDate":"2021-10-22"},{"lineNumber":360,"author":{"gitId":"tttyyzzz"},"content":"   Expected: The application will be able to pick it up and ignore invalid data in relevant files.","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"weidak":54,"tttyyzzz":90,"tryyang2001":95,"xingjie99":24,"-":32,"tlyi":65}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"tryyang2001"},"content":"# Fitbot User Guide","lastModifiedDate":"2021-10-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"tlyi"},"content":"## Introducing _Fitbot_","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"tlyi"},"content":"_Fitbot_ is a **desktop app** that helps university students who are looking to","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"tlyi"},"content":"**keep track of their calorie consumption and calorie output** with the speed and convenience of","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"tlyi"},"content":"**command-line based** tools, especially in times of online school.","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":9,"author":{"gitId":"tlyi"},"content":"_Fitbot_ can be used across all operating systems such as Windows, Mac OS X, Linux and Unix.","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"tlyi"},"content":"If you need an easy and fast way to record your calories, _Fitbot_ is the app for you! 💪💯","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"tlyi"},"content":"## About This User Guide","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"tlyi"},"content":"Welcome to the _Fitbot_ User Guide! \\","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"tlyi"},"content":"This guide explains how you can use all the features available on _Fitbot_ and","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"tlyi"},"content":"maximise your user experience.","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"tlyi"},"content":"Throughout this guide, we will be using some special formatting and symbols to bring your attention to certain aspects:","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"tlyi"},"content":"**abc**: Text that has been **bolded** indicates that it is important. \\","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"tlyi"},"content":"`abc`: Text with a grey highlight indicates that it is a code that can be typed by you into the command line or shown from _Fitbot_.\\","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"tlyi"},"content":"ℹ️: This symbol indicates important information. \\","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"tlyi"},"content":"❗: This symbol indicates **important** rules to follow. Make sure you pay extra attention to the information, else _Fitbot_ will fail to execute certain functions! \\","lastModifiedDate":"2021-10-25"},{"lineNumber":25,"author":{"gitId":"tlyi"},"content":"💡: This symbol indicates tips and tricks that you can use to make your _Fitbot_ experience even smoother.","lastModifiedDate":"2021-10-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"tlyi"},"content":"## Content Page","lastModifiedDate":"2021-10-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":32,"author":{"gitId":"tlyi"},"content":"[1. Quick Start](#1-quick-start)","lastModifiedDate":"2021-10-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":34,"author":{"gitId":"tryyang2001"},"content":"[2. Set Up Profile](#2-set-up-profile)","lastModifiedDate":"2021-10-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":36,"author":{"gitId":"tlyi"},"content":"[3. Terminology](#3-terminology)","lastModifiedDate":"2021-10-25"},{"lineNumber":37,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":38,"author":{"gitId":"tlyi"},"content":"[4. Features](#4-features)","lastModifiedDate":"2021-10-25"},{"lineNumber":39,"author":{"gitId":"tryyang2001"},"content":"- [4.1 Customising your profile](#41-customising-your-profile)","lastModifiedDate":"2021-10-26"},{"lineNumber":40,"author":{"gitId":"tryyang2001"},"content":"  - [4.1.1 Setting up your profile](#412-setting-up-your-profile) (Link back to 2)","lastModifiedDate":"2021-10-26"},{"lineNumber":41,"author":{"gitId":"tryyang2001"},"content":"  - [4.1.2 Viewing Profile `profile`](#413-viewing-profile-profile)","lastModifiedDate":"2021-10-26"},{"lineNumber":42,"author":{"gitId":"tryyang2001"},"content":"  - [4.1.3 Updating Profile Attributes](#414-updating-profile-attributes)","lastModifiedDate":"2021-10-26"},{"lineNumber":43,"author":{"gitId":"tryyang2001"},"content":"  - [4.1.4 Calculating BMI `bmi`](414-calculating-bmi-bmi)","lastModifiedDate":"2021-10-26"},{"lineNumber":44,"author":{"gitId":"tryyang2001"},"content":"- [4.2 Recording your food consumption](#42-recording-your-food-consumption)","lastModifiedDate":"2021-10-26"},{"lineNumber":45,"author":{"gitId":"tryyang2001"},"content":"  - [4.2.1 Adding Food Items `add f/`](#421-adding-food-items) (Tip: food bank)","lastModifiedDate":"2021-10-26"},{"lineNumber":46,"author":{"gitId":"tryyang2001"},"content":"  - [4.2.2 Viewing Food List `view f/`](#422-viewing-food-list-view-f)","lastModifiedDate":"2021-10-26"},{"lineNumber":47,"author":{"gitId":"tryyang2001"},"content":"  - [4.2.3 Deleting Food Items `delete f/`](#423-deleting-food-items-delete-f)","lastModifiedDate":"2021-10-26"},{"lineNumber":48,"author":{"gitId":"tryyang2001"},"content":"- [4.3 Recording your exercises](#43-recording-your-exercises)","lastModifiedDate":"2021-10-26"},{"lineNumber":49,"author":{"gitId":"tryyang2001"},"content":"  - [4.3.1 Adding Exercise Items `add e/`](#431-adding-exercise-items-add-e)  (Tip: exercise bank, upcoming exercise)","lastModifiedDate":"2021-10-26"},{"lineNumber":50,"author":{"gitId":"tryyang2001"},"content":"  - [4.3.2 Viewing Exercise Items `view e/` `view u/`](#432-viewing-exercise-items-view-e-view-u)","lastModifiedDate":"2021-10-26"},{"lineNumber":51,"author":{"gitId":"tryyang2001"},"content":"  - [4.3.3 Deleting Exercises `delete e/`](#433-deleting-exercises-delete-e)","lastModifiedDate":"2021-10-26"},{"lineNumber":52,"author":{"gitId":"tryyang2001"},"content":"- [4.4 Scheduling your exercises](#44-scheduling-your-exercises)","lastModifiedDate":"2021-10-26"},{"lineNumber":53,"author":{"gitId":"tryyang2001"},"content":"  - [4.4.1 Adding Upcoming Exercise Items `add e/`](#441-adding-upcoming-exercise-items-add-e)","lastModifiedDate":"2021-10-26"},{"lineNumber":54,"author":{"gitId":"tryyang2001"},"content":"  - [4.4.2 Adding Recurring Exercise Items `add r/`](#442-adding-recurring-exercise-items-add-r)","lastModifiedDate":"2021-10-26"},{"lineNumber":55,"author":{"gitId":"tryyang2001"},"content":"  - [4.4.3 Viewing Upcoming Exercise List `view u/`](#443-viewing-upcoming-exercise-list-view-u)","lastModifiedDate":"2021-10-26"},{"lineNumber":56,"author":{"gitId":"tryyang2001"},"content":"  - [4.4.4 Editing Upcoming Exercise Items `edit u/`](#444-editing-upcoming-exercise-items-edit-u)","lastModifiedDate":"2021-10-26"},{"lineNumber":57,"author":{"gitId":"tryyang2001"},"content":"  - [4.4.5 Deleting Upcoming Exercise Items `delete u/`](#445-deleting-upcoming-exercise-items-delete-u)","lastModifiedDate":"2021-10-26"},{"lineNumber":58,"author":{"gitId":"tryyang2001"},"content":"- [4.5 Building your Food Bank](#45-building-your-food-bank)","lastModifiedDate":"2021-10-26"},{"lineNumber":59,"author":{"gitId":"tryyang2001"},"content":"  - [4.5.1 Adding Food Bank Items `add fbank/`](#451-adding-food-bank-item-add-fbank)","lastModifiedDate":"2021-10-26"},{"lineNumber":60,"author":{"gitId":"tryyang2001"},"content":"  - [4.5.2 Viewing Food Bank `view fbank/`](#452-viewing-food-bank-view-fbank)","lastModifiedDate":"2021-10-26"},{"lineNumber":61,"author":{"gitId":"tryyang2001"},"content":"  - [4.5.3 Editing Food Bank Items `edit fbank/`](#453-editing-food-bank-items-edit-fbank)","lastModifiedDate":"2021-10-26"},{"lineNumber":62,"author":{"gitId":"tryyang2001"},"content":"  - [4.5.4 Deleting Food Bank Items `delete fbank/`](#454-deleting-food-bank-items-delete)","lastModifiedDate":"2021-10-26"},{"lineNumber":63,"author":{"gitId":"tryyang2001"},"content":"- [4.6 Building your Exercise Bank](#46-building-your-exercise-bank)","lastModifiedDate":"2021-10-26"},{"lineNumber":64,"author":{"gitId":"tryyang2001"},"content":"  - [4.6.1 Adding Exercise Bank Items `add ebank/`](#47-adding-exercise-bank-items-add-ebank)","lastModifiedDate":"2021-10-26"},{"lineNumber":65,"author":{"gitId":"tryyang2001"},"content":"  - [4.6.2 Viewing Exercise Bank `view ebank/`](#462-viewing-exercise-bank-view-ebank)","lastModifiedDate":"2021-10-26"},{"lineNumber":66,"author":{"gitId":"tryyang2001"},"content":"  - [4.6.3 Editing Exercise Bank Items `edit ebank/`](#463-editing-exercise-bank-items-edit-ebank)","lastModifiedDate":"2021-10-26"},{"lineNumber":67,"author":{"gitId":"tryyang2001"},"content":"  - [4.6.4 Deleting Exercise Bank Items `delete ebank/`](#464-deleting-exercise-bank-items-delete-ebank)","lastModifiedDate":"2021-10-26"},{"lineNumber":68,"author":{"gitId":"tryyang2001"},"content":"- [4.7 Viewing your Calorie Summary `overview`](#47-viewing-your-calorie-summary-overview)","lastModifiedDate":"2021-10-26"},{"lineNumber":69,"author":{"gitId":"tryyang2001"},"content":"- [4.8 Viewing help `help`](#48-viewing-help-help)","lastModifiedDate":"2021-10-26"},{"lineNumber":70,"author":{"gitId":"tryyang2001"},"content":"- [4.9 Exiting Program `bye`](#49-exiting-program-bye)","lastModifiedDate":"2021-10-26"},{"lineNumber":71,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":72,"author":{"gitId":"tryyang2001"},"content":"[5. Data Management](#5-data-management)","lastModifiedDate":"2021-10-26"},{"lineNumber":73,"author":{"gitId":"tryyang2001"},"content":"- [5.1 Saving Data](#51-saving-data)","lastModifiedDate":"2021-10-26"},{"lineNumber":74,"author":{"gitId":"tryyang2001"},"content":"- [5.2 Editing Data](#52-editing-data)","lastModifiedDate":"2021-10-26"},{"lineNumber":75,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":76,"author":{"gitId":"tryyang2001"},"content":"[6. FAQ](#6-faq)","lastModifiedDate":"2021-10-26"},{"lineNumber":77,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":78,"author":{"gitId":"tryyang2001"},"content":"[7. Command Summary](#7-command-summary)","lastModifiedDate":"2021-10-26"},{"lineNumber":79,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":80,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":81,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":82,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":83,"author":{"gitId":"tlyi"},"content":"## 1. Quick Start","lastModifiedDate":"2021-10-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":85,"author":{"gitId":"tryyang2001"},"content":"1. Ensure you have Java 11 or above installed in your computer.  If not, install Java 11 [here](https://www.oracle.com/java/technologies/downloads/).","lastModifiedDate":"2021-10-15"},{"lineNumber":86,"author":{"gitId":"tryyang2001"},"content":"2. Download the latest version of [Fitbot.jar](https://github.com/AY2122S1-CS2113T-F14-2/tp/releases/tag/v1.0) from the cloud.","lastModifiedDate":"2021-10-15"},{"lineNumber":87,"author":{"gitId":"tlyi"},"content":"3. Copy the file to the folder you want to use as the home folder for your _Fitbot_.","lastModifiedDate":"2021-10-25"},{"lineNumber":88,"author":{"gitId":"tlyi"},"content":"4. Go to command prompt and change the directory to the file\u0027s location. [Not sure how to do this?](https://www.groovypost.com/howto/open-command-window-terminal-window-specific-folder-windows-mac-linux/)","lastModifiedDate":"2021-10-25"},{"lineNumber":89,"author":{"gitId":"tlyi"},"content":"5. Type `java -jar FitBot.jar` into the command prompt and press enter to start the program.","lastModifiedDate":"2021-10-25"},{"lineNumber":90,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":91,"author":{"gitId":"tttyyzzz"},"content":"If successfully loaded, you will see this logo:","lastModifiedDate":"2021-10-24"},{"lineNumber":92,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":93,"author":{"gitId":"tttyyzzz"},"content":"![Untitled](./images/StartupLogo.png)","lastModifiedDate":"2021-10-24"},{"lineNumber":94,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":95,"author":{"gitId":"tlyi"},"content":"## 2. Create Profile","lastModifiedDate":"2021-10-25"},{"lineNumber":96,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":97,"author":{"gitId":"tlyi"},"content":"_Fitbot_ will detect if there is a profile present in the application. If you have not set up a profile,","lastModifiedDate":"2021-10-25"},{"lineNumber":98,"author":{"gitId":"tlyi"},"content":"_Fitbot_ will ask you for your particulars.","lastModifiedDate":"2021-10-25"},{"lineNumber":99,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":100,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":101,"author":{"gitId":"tlyi"},"content":"Particulars required include name, height, weight, age, gender, calorie goal and activity factor. The application will prompt for your particulars again if your input is incorrect.","lastModifiedDate":"2021-10-25"},{"lineNumber":102,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":103,"author":{"gitId":"tttyyzzz"},"content":"Below are the questions that you will encounter.","lastModifiedDate":"2021-10-27"},{"lineNumber":104,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":105,"author":{"gitId":"tttyyzzz"},"content":"**Name Input**","lastModifiedDate":"2021-10-27"},{"lineNumber":106,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":107,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":108,"author":{"gitId":"tttyyzzz"},"content":"```text","lastModifiedDate":"2021-10-27"},{"lineNumber":109,"author":{"gitId":"tttyyzzz"},"content":"Fitbot realised that your profile has not been created.Let\u0027s start creating profile below!","lastModifiedDate":"2021-10-27"},{"lineNumber":110,"author":{"gitId":"tttyyzzz"},"content":"__________________________________________________________________________________________________________","lastModifiedDate":"2021-10-27"},{"lineNumber":111,"author":{"gitId":"tttyyzzz"},"content":"What\u0027s your name?","lastModifiedDate":"2021-10-27"},{"lineNumber":112,"author":{"gitId":"tttyyzzz"},"content":"__________________________________________________________________________________________________________","lastModifiedDate":"2021-10-27"},{"lineNumber":113,"author":{"gitId":"tttyyzzz"},"content":"```","lastModifiedDate":"2021-10-27"},{"lineNumber":114,"author":{"gitId":"tttyyzzz"},"content":"You will need to input your name without special characters of \u0027/\u0027 and \u0027|\u0027 as your name.","lastModifiedDate":"2021-10-27"},{"lineNumber":115,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":116,"author":{"gitId":"tttyyzzz"},"content":"**Height Input**","lastModifiedDate":"2021-10-27"},{"lineNumber":117,"author":{"gitId":"tttyyzzz"},"content":"```","lastModifiedDate":"2021-10-27"},{"lineNumber":118,"author":{"gitId":"tttyyzzz"},"content":"__________________________________________________________________________________________________________","lastModifiedDate":"2021-10-27"},{"lineNumber":119,"author":{"gitId":"tttyyzzz"},"content":"Nice name you have there! Hello user.","lastModifiedDate":"2021-10-27"},{"lineNumber":120,"author":{"gitId":"tttyyzzz"},"content":"What\u0027s your height? (in cm)","lastModifiedDate":"2021-10-27"},{"lineNumber":121,"author":{"gitId":"tttyyzzz"},"content":"__________________________________________________________________________________________________________","lastModifiedDate":"2021-10-27"},{"lineNumber":122,"author":{"gitId":"tttyyzzz"},"content":"```","lastModifiedDate":"2021-10-27"},{"lineNumber":123,"author":{"gitId":"tttyyzzz"},"content":"You will need to input your height as positive numbers in centimetres . Decimals are accepted(e.g. 170.1) and ","lastModifiedDate":"2021-10-27"},{"lineNumber":124,"author":{"gitId":"tttyyzzz"},"content":"you do not need to input units. ","lastModifiedDate":"2021-10-27"},{"lineNumber":125,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":126,"author":{"gitId":"tttyyzzz"},"content":"```text","lastModifiedDate":"2021-10-27"},{"lineNumber":127,"author":{"gitId":"tttyyzzz"},"content":"__________________________________________________________________________________________________________","lastModifiedDate":"2021-10-27"},{"lineNumber":128,"author":{"gitId":"tttyyzzz"},"content":"Nice name you have there! Hello user.","lastModifiedDate":"2021-10-27"},{"lineNumber":129,"author":{"gitId":"tttyyzzz"},"content":"What\u0027s your height? (in cm)","lastModifiedDate":"2021-10-27"},{"lineNumber":130,"author":{"gitId":"tttyyzzz"},"content":"__________________________________________________________________________________________________________","lastModifiedDate":"2021-10-27"},{"lineNumber":131,"author":{"gitId":"tttyyzzz"},"content":"```","lastModifiedDate":"2021-10-27"},{"lineNumber":132,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":133,"author":{"gitId":"tttyyzzz"},"content":"**Weight Input**","lastModifiedDate":"2021-10-27"},{"lineNumber":134,"author":{"gitId":"tttyyzzz"},"content":"```text","lastModifiedDate":"2021-10-27"},{"lineNumber":135,"author":{"gitId":"tttyyzzz"},"content":"__________________________________________________________________________________________________________","lastModifiedDate":"2021-10-27"},{"lineNumber":136,"author":{"gitId":"tttyyzzz"},"content":"Your height is 170.1cm.","lastModifiedDate":"2021-10-27"},{"lineNumber":137,"author":{"gitId":"tttyyzzz"},"content":"What\u0027s your weight? (in kg)","lastModifiedDate":"2021-10-27"},{"lineNumber":138,"author":{"gitId":"tttyyzzz"},"content":"__________________________________________________________________________________________________________","lastModifiedDate":"2021-10-27"},{"lineNumber":139,"author":{"gitId":"tttyyzzz"},"content":"```","lastModifiedDate":"2021-10-27"},{"lineNumber":140,"author":{"gitId":"tttyyzzz"},"content":"Similar to height, the weight input accepts positive numbers including decimals in kilograms(e.g. 65.0) ","lastModifiedDate":"2021-10-27"},{"lineNumber":141,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":142,"author":{"gitId":"tttyyzzz"},"content":"**Gender Input**","lastModifiedDate":"2021-10-27"},{"lineNumber":143,"author":{"gitId":"tttyyzzz"},"content":"```text","lastModifiedDate":"2021-10-27"},{"lineNumber":144,"author":{"gitId":"tttyyzzz"},"content":"__________________________________________________________________________________________________________","lastModifiedDate":"2021-10-27"},{"lineNumber":145,"author":{"gitId":"tttyyzzz"},"content":"Your weight is 65.0kg.","lastModifiedDate":"2021-10-27"},{"lineNumber":146,"author":{"gitId":"tttyyzzz"},"content":"What is your gender?(If you are a male, type \u0027m\u0027, if you are a female , type \u0027f\u0027)","lastModifiedDate":"2021-10-27"},{"lineNumber":147,"author":{"gitId":"tttyyzzz"},"content":"__________________________________________________________________________________________________________","lastModifiedDate":"2021-10-27"},{"lineNumber":148,"author":{"gitId":"tttyyzzz"},"content":"```","lastModifiedDate":"2021-10-27"},{"lineNumber":149,"author":{"gitId":"tttyyzzz"},"content":"You can input the letter \u0027m\u0027 if you are a male and \u0027f\u0027 if you are a female (e.g m).","lastModifiedDate":"2021-10-27"},{"lineNumber":150,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":151,"author":{"gitId":"tttyyzzz"},"content":"**Age Input**","lastModifiedDate":"2021-10-27"},{"lineNumber":152,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":153,"author":{"gitId":"tttyyzzz"},"content":"```text","lastModifiedDate":"2021-10-27"},{"lineNumber":154,"author":{"gitId":"tttyyzzz"},"content":"__________________________________________________________________________________________________________","lastModifiedDate":"2021-10-27"},{"lineNumber":155,"author":{"gitId":"tttyyzzz"},"content":"You are a male.","lastModifiedDate":"2021-10-27"},{"lineNumber":156,"author":{"gitId":"tttyyzzz"},"content":"How old are you?","lastModifiedDate":"2021-10-27"},{"lineNumber":157,"author":{"gitId":"tttyyzzz"},"content":"__________________________________________________________________________________________________________","lastModifiedDate":"2021-10-27"},{"lineNumber":158,"author":{"gitId":"tttyyzzz"},"content":"```","lastModifiedDate":"2021-10-27"},{"lineNumber":159,"author":{"gitId":"tttyyzzz"},"content":"You can input your age with the nearest positive whole number.(e.g. 22)","lastModifiedDate":"2021-10-27"},{"lineNumber":160,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":161,"author":{"gitId":"tttyyzzz"},"content":"**Calorie Goal**","lastModifiedDate":"2021-10-27"},{"lineNumber":162,"author":{"gitId":"tttyyzzz"},"content":"```text","lastModifiedDate":"2021-10-27"},{"lineNumber":163,"author":{"gitId":"tttyyzzz"},"content":"__________________________________________________________________________________________________________","lastModifiedDate":"2021-10-27"},{"lineNumber":164,"author":{"gitId":"tttyyzzz"},"content":"You are 22 years old.","lastModifiedDate":"2021-10-27"},{"lineNumber":165,"author":{"gitId":"tttyyzzz"},"content":"Please input your net calorie goal.","lastModifiedDate":"2021-10-27"},{"lineNumber":166,"author":{"gitId":"tttyyzzz"},"content":"__________________________________________________________________________________________________________","lastModifiedDate":"2021-10-27"},{"lineNumber":167,"author":{"gitId":"tttyyzzz"},"content":"```","lastModifiedDate":"2021-10-27"},{"lineNumber":168,"author":{"gitId":"tttyyzzz"},"content":"You can input your calorie goal with whole number range from -2500 to 2500 (e.g 500). The net calories is calculated ","lastModifiedDate":"2021-10-27"},{"lineNumber":169,"author":{"gitId":"tttyyzzz"},"content":"based on total calories gained from food subtracting the calories burnt from exercise and BMR.","lastModifiedDate":"2021-10-27"},{"lineNumber":170,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":171,"author":{"gitId":"tttyyzzz"},"content":"**Activity Factor**","lastModifiedDate":"2021-10-27"},{"lineNumber":172,"author":{"gitId":"tttyyzzz"},"content":"```text","lastModifiedDate":"2021-10-27"},{"lineNumber":173,"author":{"gitId":"tttyyzzz"},"content":"__________________________________________________________________________________________________________","lastModifiedDate":"2021-10-27"},{"lineNumber":174,"author":{"gitId":"tttyyzzz"},"content":"You calorie goal is 500 cal.","lastModifiedDate":"2021-10-27"},{"lineNumber":175,"author":{"gitId":"tttyyzzz"},"content":"In terms of activity level, how active are you?","lastModifiedDate":"2021-10-27"},{"lineNumber":176,"author":{"gitId":"tttyyzzz"},"content":"Based on the rubics below, please key in 1 to 5 based on how active you are.","lastModifiedDate":"2021-10-27"},{"lineNumber":177,"author":{"gitId":"tttyyzzz"},"content":"1 -\u003e Sedentary - Little or no exercise","lastModifiedDate":"2021-10-27"},{"lineNumber":178,"author":{"gitId":"tttyyzzz"},"content":"2 -\u003e Lightly Active - Light exercise or sports, around 1-3 days a week","lastModifiedDate":"2021-10-27"},{"lineNumber":179,"author":{"gitId":"tttyyzzz"},"content":"3 -\u003e Moderately Active - Regular exercise or sports, around 3-5 days a week","lastModifiedDate":"2021-10-27"},{"lineNumber":180,"author":{"gitId":"tttyyzzz"},"content":"4 -\u003e Very Active - Frequent exercise or sports, around 6-7 days a week","lastModifiedDate":"2021-10-27"},{"lineNumber":181,"author":{"gitId":"tttyyzzz"},"content":"5 -\u003e If you are extra active - Sports or exercising is your passion and a physical jobscope.","lastModifiedDate":"2021-10-27"},{"lineNumber":182,"author":{"gitId":"tttyyzzz"},"content":"__________________________________________________________________________________________________________","lastModifiedDate":"2021-10-27"},{"lineNumber":183,"author":{"gitId":"tttyyzzz"},"content":"```","lastModifiedDate":"2021-10-27"},{"lineNumber":184,"author":{"gitId":"tttyyzzz"},"content":"You can input 1 to 5 based on the activity level description as shown above.","lastModifiedDate":"2021-10-27"},{"lineNumber":185,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":186,"author":{"gitId":"tttyyzzz"},"content":"Once you are done with the particulars above, you could see the following message below:","lastModifiedDate":"2021-10-27"},{"lineNumber":187,"author":{"gitId":"tttyyzzz"},"content":"```text","lastModifiedDate":"2021-10-27"},{"lineNumber":188,"author":{"gitId":"tttyyzzz"},"content":"__________________________________________________________________________________________________________","lastModifiedDate":"2021-10-27"},{"lineNumber":189,"author":{"gitId":"tttyyzzz"},"content":"Profile created successfully","lastModifiedDate":"2021-10-27"},{"lineNumber":190,"author":{"gitId":"tttyyzzz"},"content":"You can start by typing a command or view the list of available commands by typing \"help\".","lastModifiedDate":"2021-10-27"},{"lineNumber":191,"author":{"gitId":"tttyyzzz"},"content":"__________________________________________________________________________________________________________","lastModifiedDate":"2021-10-27"},{"lineNumber":192,"author":{"gitId":"tttyyzzz"},"content":"```","lastModifiedDate":"2021-10-27"},{"lineNumber":193,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":194,"author":{"gitId":"tttyyzzz"},"content":"After setting up the profile, you can start recording your food and exercises with the commands below.","lastModifiedDate":"2021-10-24"},{"lineNumber":195,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":196,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":197,"author":{"gitId":"tlyi"},"content":"## 3. Terminology","lastModifiedDate":"2021-10-25"},{"lineNumber":198,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":199,"author":{"gitId":"tryyang2001"},"content":"**_Calorie_** - A unit used to measure the energy of an item. One calorie is the amount of energy required to raise the","lastModifiedDate":"2021-10-24"},{"lineNumber":200,"author":{"gitId":"tryyang2001"},"content":"temperature of one gram of water by one degree Celsius. On average, a male will require approximately 2500 cal while a","lastModifiedDate":"2021-10-24"},{"lineNumber":201,"author":{"gitId":"tryyang2001"},"content":"female will require around 2000 cal per day.\\","lastModifiedDate":"2021-10-24"},{"lineNumber":202,"author":{"gitId":"tryyang2001"},"content":"\\","lastModifiedDate":"2021-10-24"},{"lineNumber":203,"author":{"gitId":"tryyang2001"},"content":"***Calorie goal*** - The amount of calorie you wish to consume per day. In our application, calorie goal is defined as the","lastModifiedDate":"2021-10-24"},{"lineNumber":204,"author":{"gitId":"tlyi"},"content":"total calorie intake from all the food consumed per day.","lastModifiedDate":"2021-10-25"},{"lineNumber":205,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":206,"author":{"gitId":"tlyi"},"content":"***Net Calorie*** - The difference between calorie","lastModifiedDate":"2021-10-25"},{"lineNumber":207,"author":{"gitId":"tryyang2001"},"content":"goal and the total calorie burnt from exercising and [body metabolism](https://www.news-medical.net/life-sciences/What-is-Metabolism.aspx).","lastModifiedDate":"2021-10-24"},{"lineNumber":208,"author":{"gitId":"tryyang2001"},"content":"For your information, we use [basal metabolic rate (BMR)](https://en.wikipedia.org/wiki/Basal_metabolic_rate) to compute","lastModifiedDate":"2021-10-24"},{"lineNumber":209,"author":{"gitId":"tryyang2001"},"content":"the rate of calorie consumed by body metabolic activity.\\","lastModifiedDate":"2021-10-24"},{"lineNumber":210,"author":{"gitId":"tryyang2001"},"content":"\\","lastModifiedDate":"2021-10-24"},{"lineNumber":211,"author":{"gitId":"tlyi"},"content":"***Activity factor*** - A coefficient or value used in the calculation of BMR to measure the level of activity. In our application, we use an integer ranged from 1 to 5 to measure the activity factor:","lastModifiedDate":"2021-10-25"},{"lineNumber":212,"author":{"gitId":"tlyi"},"content":"Little to no exercise (0-1 day of exercises a week)","lastModifiedDate":"2021-10-25"},{"lineNumber":213,"author":{"gitId":"tlyi"},"content":"Lightly active (1-3 days of exercises a week)","lastModifiedDate":"2021-10-25"},{"lineNumber":214,"author":{"gitId":"tlyi"},"content":"Moderately active (3-5 days of exercises a week)","lastModifiedDate":"2021-10-25"},{"lineNumber":215,"author":{"gitId":"tlyi"},"content":"Very active (6-7 days of exercises a week)","lastModifiedDate":"2021-10-25"},{"lineNumber":216,"author":{"gitId":"tlyi"},"content":"Extremely active (when sports is your passion and have a very physical job scope)","lastModifiedDate":"2021-10-25"},{"lineNumber":217,"author":{"gitId":"tlyi"},"content":"\\","lastModifiedDate":"2021-10-25"},{"lineNumber":218,"author":{"gitId":"tryyang2001"},"content":"\\","lastModifiedDate":"2021-10-24"},{"lineNumber":219,"author":{"gitId":"tryyang2001"},"content":"***Body Mass Index (BMI)*** - A measure to evaluate if the body weight is healthy. BMI is computed by using the body","lastModifiedDate":"2021-10-24"},{"lineNumber":220,"author":{"gitId":"tryyang2001"},"content":"weight(in kg) divided by the square of the body height(in m). \\","lastModifiedDate":"2021-10-24"},{"lineNumber":221,"author":{"gitId":"tryyang2001"},"content":"\\","lastModifiedDate":"2021-10-24"},{"lineNumber":222,"author":{"gitId":"tryyang2001"},"content":"***Item*** - We use the term **item** to represent the item that can be stored in our application. The available item","lastModifiedDate":"2021-10-24"},{"lineNumber":223,"author":{"gitId":"tlyi"},"content":"include **Food** and **exercise** only.\\","lastModifiedDate":"2021-10-25"},{"lineNumber":224,"author":{"gitId":"tryyang2001"},"content":"\\","lastModifiedDate":"2021-10-24"},{"lineNumber":225,"author":{"gitId":"tryyang2001"},"content":"***Upcoming exercise*** - We define the exercise with date after today\u0027s date as an upcoming exercise. This kind of exercise","lastModifiedDate":"2021-10-24"},{"lineNumber":226,"author":{"gitId":"tryyang2001"},"content":"will be handled specifically. It will not be added to the exercise list but will be saved internally in the storage file. More","lastModifiedDate":"2021-10-24"},{"lineNumber":227,"author":{"gitId":"tlyi"},"content":"details of the process can be found at [here](#add-a-recurring-exercise-to-the-upcoming-exercise-list).\\","lastModifiedDate":"2021-10-25"},{"lineNumber":228,"author":{"gitId":"tryyang2001"},"content":"\\","lastModifiedDate":"2021-10-24"},{"lineNumber":229,"author":{"gitId":"tlyi"},"content":"***Item Bank*** - An item storage that is capable to store the Food or exercise Item with its respective calorie. This is","lastModifiedDate":"2021-10-25"},{"lineNumber":230,"author":{"gitId":"tlyi"},"content":"to help you to store the calorie intake of a specific Food or the calorie burnt from a specific exercise for future use. More details","lastModifiedDate":"2021-10-25"},{"lineNumber":231,"author":{"gitId":"tlyi"},"content":"of the item bank can be found at [here](#add-a-food-item-to-foodbank).\\","lastModifiedDate":"2021-10-25"},{"lineNumber":232,"author":{"gitId":"tlyi"},"content":"\\","lastModifiedDate":"2021-10-25"},{"lineNumber":233,"author":{"gitId":"tlyi"},"content":"***Parameters*** - Parameters are values in the command format that _Fitbot_ expects you to provide.","lastModifiedDate":"2021-10-25"},{"lineNumber":234,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":235,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":236,"author":{"gitId":"tlyi"},"content":"## 4. Features","lastModifiedDate":"2021-10-25"},{"lineNumber":237,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":238,"author":{"gitId":"tryyang2001"},"content":"ℹ️ ***Command Format***","lastModifiedDate":"2021-10-15"},{"lineNumber":239,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":240,"author":{"gitId":"tlyi"},"content":"- Commands are not case-sensitive (e.g. `help`, `HELP`,`hElP` are all able to execute the `help` command)","lastModifiedDate":"2021-10-25"},{"lineNumber":241,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":242,"author":{"gitId":"tlyi"},"content":"- Words in upper case (e.g. `UPPER_CASE`) are used to signify parameters.","lastModifiedDate":"2021-10-25"},{"lineNumber":243,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":244,"author":{"gitId":"tlyi"},"content":"- Parameters in curly brackets `{}` are optional.","lastModifiedDate":"2021-10-25"},{"lineNumber":245,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":246,"author":{"gitId":"tlyi"},"content":"  e.g. `bmi {h/HEIGHT_IN_CM w/WEIGHT_IN_KG}` can be `bmi` or `bmi h/150 w/70`","lastModifiedDate":"2021-10-25"},{"lineNumber":247,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":248,"author":{"gitId":"tryyang2001"},"content":"- The order of the parameters do not matter.","lastModifiedDate":"2021-10-15"},{"lineNumber":249,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":250,"author":{"gitId":"tlyi"},"content":"  e.g. `add f/potato c/200` or `add c/200 f/potato` both adds a Food Item called \"potato\" with 200 calories.","lastModifiedDate":"2021-10-25"},{"lineNumber":251,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":252,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":253,"author":{"gitId":"tlyi"},"content":"❗ Please do not use the characters `/` and `|` in your input other than to specify parameters!","lastModifiedDate":"2021-10-25"},{"lineNumber":254,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":255,"author":{"gitId":"weidak"},"content":"### 4.1 Customizing your profile:","lastModifiedDate":"2021-10-27"},{"lineNumber":256,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":257,"author":{"gitId":"weidak"},"content":"You can customize your profile with the following steps.","lastModifiedDate":"2021-10-27"},{"lineNumber":258,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":259,"author":{"gitId":"weidak"},"content":"#### 4.1.1 Setting up your profile","lastModifiedDate":"2021-10-27"},{"lineNumber":260,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":261,"author":{"gitId":"weidak"},"content":"Refer to [2. Set Up Profile](#2-set-up-profile) to set up your profile.","lastModifiedDate":"2021-10-27"},{"lineNumber":262,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":263,"author":{"gitId":"weidak"},"content":"#### 4.1.2 Viewing profile: `profile`","lastModifiedDate":"2021-10-27"},{"lineNumber":264,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":265,"author":{"gitId":"weidak"},"content":"Typing `profile` lets you view your name, height, weight, gender, age, calorie goal and activity factor.","lastModifiedDate":"2021-10-27"},{"lineNumber":266,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":267,"author":{"gitId":"weidak"},"content":"Example:","lastModifiedDate":"2021-10-27"},{"lineNumber":268,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":269,"author":{"gitId":"weidak"},"content":"```text","lastModifiedDate":"2021-10-27"},{"lineNumber":270,"author":{"gitId":"weidak"},"content":"profile ","lastModifiedDate":"2021-10-27"},{"lineNumber":271,"author":{"gitId":"weidak"},"content":"__________________________________________________________________________________________________________ ","lastModifiedDate":"2021-10-27"},{"lineNumber":272,"author":{"gitId":"weidak"},"content":"Hello hi! This is your profile: ","lastModifiedDate":"2021-10-27"},{"lineNumber":273,"author":{"gitId":"weidak"},"content":"*\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d ","lastModifiedDate":"2021-10-27"},{"lineNumber":274,"author":{"gitId":"weidak"},"content":"\tName \t\t\t\tLisa ","lastModifiedDate":"2021-10-27"},{"lineNumber":275,"author":{"gitId":"weidak"},"content":"\tHeight \t\t\t\t159cm ","lastModifiedDate":"2021-10-27"},{"lineNumber":276,"author":{"gitId":"weidak"},"content":"\tWeight \t\t\t\t50.0kg ","lastModifiedDate":"2021-10-27"},{"lineNumber":277,"author":{"gitId":"weidak"},"content":"\tGender \t\t\t\tF ","lastModifiedDate":"2021-10-27"},{"lineNumber":278,"author":{"gitId":"weidak"},"content":"\tAge \t\t\t\t21 ","lastModifiedDate":"2021-10-27"},{"lineNumber":279,"author":{"gitId":"weidak"},"content":"\tCalories goal \t\t1500 cal ","lastModifiedDate":"2021-10-27"},{"lineNumber":280,"author":{"gitId":"weidak"},"content":"\tActivity factor \t2 ","lastModifiedDate":"2021-10-27"},{"lineNumber":281,"author":{"gitId":"weidak"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d* ","lastModifiedDate":"2021-10-27"},{"lineNumber":282,"author":{"gitId":"weidak"},"content":"__________________________________________________________________________________________________________ ","lastModifiedDate":"2021-10-27"},{"lineNumber":283,"author":{"gitId":"weidak"},"content":"```","lastModifiedDate":"2021-10-27"},{"lineNumber":284,"author":{"gitId":"weidak"},"content":"#### 4.1.3 Updating profile attributes ","lastModifiedDate":"2021-10-27"},{"lineNumber":285,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":286,"author":{"gitId":"weidak"},"content":"Change your profile attributes with the following command: \\","lastModifiedDate":"2021-10-27"},{"lineNumber":287,"author":{"gitId":"weidak"},"content":"`profile {n/NAME} {h/HEIGHT} {w/WEIGHT} {s/GENDER} {a/AGE} {g/CALORIE_GOAL} {x/ACTIVITY_FACTOR}` \\","lastModifiedDate":"2021-10-27"},{"lineNumber":288,"author":{"gitId":"weidak"},"content":"\\","lastModifiedDate":"2021-10-27"},{"lineNumber":289,"author":{"gitId":"weidak"},"content":"where : \\","lastModifiedDate":"2021-10-27"},{"lineNumber":290,"author":{"gitId":"weidak"},"content":"\\","lastModifiedDate":"2021-10-27"},{"lineNumber":291,"author":{"gitId":"weidak"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; n/ \u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; name \\","lastModifiedDate":"2021-10-27"},{"lineNumber":292,"author":{"gitId":"weidak"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; h/ \u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; height in cm \\","lastModifiedDate":"2021-10-27"},{"lineNumber":293,"author":{"gitId":"weidak"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; w/ \u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;weight in kg \\","lastModifiedDate":"2021-10-27"},{"lineNumber":294,"author":{"gitId":"weidak"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; a/ \u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; age \\","lastModifiedDate":"2021-10-27"},{"lineNumber":295,"author":{"gitId":"weidak"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; g/ \u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; calorie goal \\","lastModifiedDate":"2021-10-27"},{"lineNumber":296,"author":{"gitId":"weidak"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; s/ \u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; gender (M or F) \\","lastModifiedDate":"2021-10-27"},{"lineNumber":297,"author":{"gitId":"weidak"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; x/ \u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; activity factor (1: Sedentary - 5: Extremely Active)","lastModifiedDate":"2021-10-27"},{"lineNumber":298,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":299,"author":{"gitId":"weidak"},"content":"where you will require at least 1 of the optional parameters (in no particular order) to change your attribute!","lastModifiedDate":"2021-10-27"},{"lineNumber":300,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":301,"author":{"gitId":"tryyang2001"},"content":"### 4.2 Recording your food consumption","lastModifiedDate":"2021-10-27"},{"lineNumber":302,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":303,"author":{"gitId":"tryyang2001"},"content":"You can record all the food items consumed within a week into the food list. This allows you","lastModifiedDate":"2021-10-27"},{"lineNumber":304,"author":{"gitId":"tryyang2001"},"content":"to keep track of your food calorie consumption and gain a better understanding of your diet habit. ","lastModifiedDate":"2021-10-27"},{"lineNumber":305,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":306,"author":{"gitId":"tryyang2001"},"content":"#### 4.2.1 Adding Food Items `add f/`","lastModifiedDate":"2021-10-27"},{"lineNumber":307,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":308,"author":{"gitId":"tryyang2001"},"content":"This command allows you to add a new Food Item to the Food List.","lastModifiedDate":"2021-10-27"},{"lineNumber":309,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":310,"author":{"gitId":"tryyang2001"},"content":"Format: `add f/ITEM {c/CALORIES} {d/DD-MM-YYYY} {t/HHMM}` adds a Food Item consumed with its respective calories on the given","lastModifiedDate":"2021-10-27"},{"lineNumber":311,"author":{"gitId":"tryyang2001"},"content":"date (`DD-MM-YYYY`) and time (`HHMM`).","lastModifiedDate":"2021-10-27"},{"lineNumber":312,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":313,"author":{"gitId":"tryyang2001"},"content":"Example: ","lastModifiedDate":"2021-10-15"},{"lineNumber":314,"author":{"gitId":"tryyang2001"},"content":"- `add f/chicken rice c/607 d/21-10-2021 t/1400` adds record of food consumed: chicken rice with 607 calories gained on 21 Oct 2021 1400 to the food list.","lastModifiedDate":"2021-10-27"},{"lineNumber":315,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":316,"author":{"gitId":"tryyang2001"},"content":"```text","lastModifiedDate":"2021-10-15"},{"lineNumber":317,"author":{"gitId":"tryyang2001"},"content":"add f/chicken rice c/607 d/21-10-2021 t/1400","lastModifiedDate":"2021-10-27"},{"lineNumber":318,"author":{"gitId":"tryyang2001"},"content":"__________________________________________________________________________________________","lastModifiedDate":"2021-10-27"},{"lineNumber":319,"author":{"gitId":"tryyang2001"},"content":"A food item has been added:","lastModifiedDate":"2021-10-27"},{"lineNumber":320,"author":{"gitId":"tryyang2001"},"content":"    chicken rice (607 cal) @ 14:00, 21 Oct 2021","lastModifiedDate":"2021-10-27"},{"lineNumber":321,"author":{"gitId":"tryyang2001"},"content":"__________________________________________________________________________________________","lastModifiedDate":"2021-10-27"},{"lineNumber":322,"author":{"gitId":"tryyang2001"},"content":"```","lastModifiedDate":"2021-10-15"},{"lineNumber":323,"author":{"gitId":"tryyang2001"},"content":"💡  **Tip:** If you do not specify the date and time of the Food Item, it is assumed that the date and time is based on the date and time of input.","lastModifiedDate":"2021-10-27"},{"lineNumber":324,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":325,"author":{"gitId":"tryyang2001"},"content":"💡 **Tip:** It is possible to add Food Item without providing the calorie of it. You can do this by saving the corresponding Food Item into the Food Bank. More details can be found at [Section 4.5](#45-building-your-food-bank).","lastModifiedDate":"2021-10-27"},{"lineNumber":326,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":327,"author":{"gitId":"tryyang2001"},"content":"#### 4.2.2 Viewing Food List `view f/`","lastModifiedDate":"2021-10-27"},{"lineNumber":328,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":329,"author":{"gitId":"tryyang2001"},"content":"You may want to view how many calories you have taken in this week. This command will show a list of Food Items and ","lastModifiedDate":"2021-10-27"},{"lineNumber":330,"author":{"gitId":"tryyang2001"},"content":"their calories added within 7 days (including today) from the list.","lastModifiedDate":"2021-10-27"},{"lineNumber":331,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":332,"author":{"gitId":"tryyang2001"},"content":"Format: `view f/`","lastModifiedDate":"2021-10-27"},{"lineNumber":333,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":334,"author":{"gitId":"tryyang2001"},"content":"Example: ","lastModifiedDate":"2021-10-27"},{"lineNumber":335,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":336,"author":{"gitId":"tryyang2001"},"content":"```text","lastModifiedDate":"2021-10-27"},{"lineNumber":337,"author":{"gitId":"tryyang2001"},"content":"view f/","lastModifiedDate":"2021-10-27"},{"lineNumber":338,"author":{"gitId":"tryyang2001"},"content":"__________________________________________________________________________________________________________","lastModifiedDate":"2021-10-27"},{"lineNumber":339,"author":{"gitId":"tryyang2001"},"content":"Here is a summary of all the food items you have consumed in the past week:","lastModifiedDate":"2021-10-27"},{"lineNumber":340,"author":{"gitId":"tryyang2001"},"content":"..........................................................................................................","lastModifiedDate":"2021-10-27"},{"lineNumber":341,"author":{"gitId":"tryyang2001"},"content":"You have consumed 3 food item(s) on Friday (22 Oct 2021):","lastModifiedDate":"2021-10-27"},{"lineNumber":342,"author":{"gitId":"tryyang2001"},"content":"In the morning:","lastModifiedDate":"2021-10-27"},{"lineNumber":343,"author":{"gitId":"tryyang2001"},"content":"\t1. donut x2 (607 cal) @ 10:00","lastModifiedDate":"2021-10-27"},{"lineNumber":344,"author":{"gitId":"tryyang2001"},"content":"In the afternoon:","lastModifiedDate":"2021-10-27"},{"lineNumber":345,"author":{"gitId":"tryyang2001"},"content":"\t1. chicken rice (607 cal) @ 14:00","lastModifiedDate":"2021-10-27"},{"lineNumber":346,"author":{"gitId":"tryyang2001"},"content":"In the evening:","lastModifiedDate":"2021-10-27"},{"lineNumber":347,"author":{"gitId":"tryyang2001"},"content":"\t1. yong tau foo (560 cal) @ 19:20","lastModifiedDate":"2021-10-27"},{"lineNumber":348,"author":{"gitId":"tryyang2001"},"content":"Total calories consumed in the day: 1774 cal","lastModifiedDate":"2021-10-27"},{"lineNumber":349,"author":{"gitId":"tryyang2001"},"content":"..........................................................................................................","lastModifiedDate":"2021-10-27"},{"lineNumber":350,"author":{"gitId":"tryyang2001"},"content":"You have consumed 4 food item(s) on Saturday (23 Oct 2021):","lastModifiedDate":"2021-10-27"},{"lineNumber":351,"author":{"gitId":"tryyang2001"},"content":"In the morning:","lastModifiedDate":"2021-10-27"},{"lineNumber":352,"author":{"gitId":"tryyang2001"},"content":"\t1. butter bread x2 (418 cal) @ 08:30","lastModifiedDate":"2021-10-27"},{"lineNumber":353,"author":{"gitId":"tryyang2001"},"content":"In the afternoon:","lastModifiedDate":"2021-10-27"},{"lineNumber":354,"author":{"gitId":"tryyang2001"},"content":"\t1. penang laksa (377 cal) @ 13:00","lastModifiedDate":"2021-10-27"},{"lineNumber":355,"author":{"gitId":"tryyang2001"},"content":"In the evening:","lastModifiedDate":"2021-10-27"},{"lineNumber":356,"author":{"gitId":"tryyang2001"},"content":"\t1. sliced fish bee hoon (349 cal) @ 18:40","lastModifiedDate":"2021-10-27"},{"lineNumber":357,"author":{"gitId":"tryyang2001"},"content":"At night:","lastModifiedDate":"2021-10-27"},{"lineNumber":358,"author":{"gitId":"tryyang2001"},"content":"\t1. roti prata x3 (507 cal) @ 23:50","lastModifiedDate":"2021-10-27"},{"lineNumber":359,"author":{"gitId":"tryyang2001"},"content":"Total calories consumed in the day: 1651 cal","lastModifiedDate":"2021-10-27"},{"lineNumber":360,"author":{"gitId":"tryyang2001"},"content":"..........................................................................................................","lastModifiedDate":"2021-10-27"},{"lineNumber":361,"author":{"gitId":"tryyang2001"},"content":"Total number of food consumed in this week: 7","lastModifiedDate":"2021-10-27"},{"lineNumber":362,"author":{"gitId":"tryyang2001"},"content":"Total calories consumed in this week: 3425 cal","lastModifiedDate":"2021-10-27"},{"lineNumber":363,"author":{"gitId":"tryyang2001"},"content":"__________________________________________________________________________________________________________","lastModifiedDate":"2021-10-27"},{"lineNumber":364,"author":{"gitId":"tryyang2001"},"content":"```","lastModifiedDate":"2021-10-27"},{"lineNumber":365,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":366,"author":{"gitId":"tryyang2001"},"content":"#### 4.2.3 Deleting Food Items `delete f/`","lastModifiedDate":"2021-10-27"},{"lineNumber":367,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":368,"author":{"gitId":"tryyang2001"},"content":"When you mistakenly add a wrong Food Item inside your Food List, there is no need to worry! The command allows you to ","lastModifiedDate":"2021-10-27"},{"lineNumber":369,"author":{"gitId":"tryyang2001"},"content":"remove a specific Food Item in the Food List.","lastModifiedDate":"2021-10-27"},{"lineNumber":370,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":371,"author":{"gitId":"tryyang2001"},"content":"Format: `delete f/LIST_NO. d/DD-MM-YYYY t/HHMM` deletes the *n\u003csup\u003eth\u003c/sup\u003e* Food Item in the Food List which has the date (`DD-MM-YYYY`)","lastModifiedDate":"2021-10-27"},{"lineNumber":372,"author":{"gitId":"tryyang2001"},"content":"and time (`HHMM`), where *n* is the index of the Food to delete.","lastModifiedDate":"2021-10-27"},{"lineNumber":373,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":374,"author":{"gitId":"tryyang2001"},"content":"❗ `LIST_NO.` must be a positive integer within the range of the number of Items in the list.","lastModifiedDate":"2021-10-27"},{"lineNumber":375,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":376,"author":{"gitId":"tryyang2001"},"content":"Example:","lastModifiedDate":"2021-10-15"},{"lineNumber":377,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":378,"author":{"gitId":"tryyang2001"},"content":"```text","lastModifiedDate":"2021-10-15"},{"lineNumber":379,"author":{"gitId":"tryyang2001"},"content":"delete f/1 d/22-10-2021 t/1000","lastModifiedDate":"2021-10-27"},{"lineNumber":380,"author":{"gitId":"weidak"},"content":"__________________________________________________________________________________________________________","lastModifiedDate":"2021-10-25"},{"lineNumber":381,"author":{"gitId":"tryyang2001"},"content":"A food item has been deleted:","lastModifiedDate":"2021-10-27"},{"lineNumber":382,"author":{"gitId":"tryyang2001"},"content":"\tdonut x2 (607 cal) @ 10:00, 22 Oct 2021","lastModifiedDate":"2021-10-27"},{"lineNumber":383,"author":{"gitId":"tryyang2001"},"content":"Number of food item(s) left: 6","lastModifiedDate":"2021-10-27"},{"lineNumber":384,"author":{"gitId":"weidak"},"content":"__________________________________________________________________________________________________________","lastModifiedDate":"2021-10-25"},{"lineNumber":385,"author":{"gitId":"tryyang2001"},"content":"```","lastModifiedDate":"2021-10-15"},{"lineNumber":386,"author":{"gitId":"tryyang2001"},"content":"💡  **Tip:** If you wish to remove all the Food Items from the list, there is a shortcut command: `delete f/all`.","lastModifiedDate":"2021-10-27"},{"lineNumber":387,"author":{"gitId":"tryyang2001"},"content":"```","lastModifiedDate":"2021-10-27"},{"lineNumber":388,"author":{"gitId":"tryyang2001"},"content":"delete f/all","lastModifiedDate":"2021-10-27"},{"lineNumber":389,"author":{"gitId":"tryyang2001"},"content":"__________________________________________________________________________________________________________","lastModifiedDate":"2021-10-27"},{"lineNumber":390,"author":{"gitId":"tryyang2001"},"content":"All food items have been removed.","lastModifiedDate":"2021-10-27"},{"lineNumber":391,"author":{"gitId":"tryyang2001"},"content":"__________________________________________________________________________________________________________","lastModifiedDate":"2021-10-27"},{"lineNumber":392,"author":{"gitId":"tryyang2001"},"content":"```","lastModifiedDate":"2021-10-27"},{"lineNumber":393,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":394,"author":{"gitId":"tryyang2001"},"content":"### 4.3 Recording your exercises","lastModifiedDate":"2021-10-27"},{"lineNumber":395,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":396,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":397,"author":{"gitId":"tryyang2001"},"content":"#### 4.3.1 Adding Exercise Items `add e/`(Tip: exercise bank, upcoming exercise)","lastModifiedDate":"2021-10-27"},{"lineNumber":398,"author":{"gitId":"tryyang2001"},"content":"#### 4.3.2 Viewing Exercise Items `view e/` `view u/`","lastModifiedDate":"2021-10-27"},{"lineNumber":399,"author":{"gitId":"tryyang2001"},"content":"#### 4.3.3 Deleting Exercises `delete e/`","lastModifiedDate":"2021-10-27"},{"lineNumber":400,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":401,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":402,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":403,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":404,"author":{"gitId":"tlyi"},"content":"### 4.4. Add Items: `add`","lastModifiedDate":"2021-10-25"},{"lineNumber":405,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":406,"author":{"gitId":"tlyi"},"content":"This command adds an Item to a list.","lastModifiedDate":"2021-10-25"},{"lineNumber":407,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":408,"author":{"gitId":"tlyi"},"content":"#### 4.4.1. Add a Food Item to Food List","lastModifiedDate":"2021-10-25"},{"lineNumber":409,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":410,"author":{"gitId":"tlyi"},"content":"This command is used to add a Food Item consumed within the past 7 days to the Food List.","lastModifiedDate":"2021-10-25"},{"lineNumber":411,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":412,"author":{"gitId":"tlyi"},"content":"Format: `add f/ITEM {c/CALORIES} {d/DD-MM-YYYY} {t/HHMM}` adds a Food Item consumed with its respective calories on the given","lastModifiedDate":"2021-10-25"},{"lineNumber":413,"author":{"gitId":"tlyi"},"content":"date (`DD-MM-YYYY`) and time (`HHMM`).","lastModifiedDate":"2021-10-25"},{"lineNumber":414,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":415,"author":{"gitId":"tlyi"},"content":"Example:","lastModifiedDate":"2021-10-25"},{"lineNumber":416,"author":{"gitId":"tlyi"},"content":"- `add f/chicken rice c/607 d/21-10-2021 t/1400` adds record of food consumed: chicken rice with 607 calories gained on 21 Oct 2021 1400 to the food list.","lastModifiedDate":"2021-10-25"},{"lineNumber":417,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":418,"author":{"gitId":"tryyang2001"},"content":"```text","lastModifiedDate":"2021-10-15"},{"lineNumber":419,"author":{"gitId":"tryyang2001"},"content":"add f/chicken rice c/607 d/21-10-2021 t/1400","lastModifiedDate":"2021-10-24"},{"lineNumber":420,"author":{"gitId":"tryyang2001"},"content":"__________________________________________________________________________________________","lastModifiedDate":"2021-10-15"},{"lineNumber":421,"author":{"gitId":"tryyang2001"},"content":"A food item has been added:","lastModifiedDate":"2021-10-15"},{"lineNumber":422,"author":{"gitId":"tryyang2001"},"content":"    chicken rice (607 cal) @ 14:00, 21 Oct 2021","lastModifiedDate":"2021-10-24"},{"lineNumber":423,"author":{"gitId":"tryyang2001"},"content":"__________________________________________________________________________________________","lastModifiedDate":"2021-10-15"},{"lineNumber":424,"author":{"gitId":"tryyang2001"},"content":"```","lastModifiedDate":"2021-10-15"},{"lineNumber":425,"author":{"gitId":"tlyi"},"content":"💡  **Tip:** If you do not specify the date and time of the Food Item, it is assumed that the date and time is based on the date and time of input.","lastModifiedDate":"2021-10-25"},{"lineNumber":426,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":427,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":428,"author":{"gitId":"tlyi"},"content":"#### 4.4.2. Add an Exercise Item to Exercise List","lastModifiedDate":"2021-10-25"},{"lineNumber":429,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":430,"author":{"gitId":"tlyi"},"content":"Format: `add e/ITEM {c/CALORIES} {d/DD-MM-YYYY}` adds an Exercise Item with its respective calories burnt on the given date (`DD-MM-YYYY`). ","lastModifiedDate":"2021-10-25"},{"lineNumber":431,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":432,"author":{"gitId":"tlyi"},"content":"ℹ️ If `DD-MM-YYYY` is in the future, the Upcoming Exercise Item will be added to the Upcoming Exercise List instead.","lastModifiedDate":"2021-10-25"},{"lineNumber":433,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":434,"author":{"gitId":"tryyang2001"},"content":"Example:","lastModifiedDate":"2021-10-15"},{"lineNumber":435,"author":{"gitId":"tlyi"},"content":"- `add e/hiit c/290 d/21-10-2021` adds record of exercise done: hiit with 290 calories burnt on 21 Oct 2021 to the exercise list.","lastModifiedDate":"2021-10-25"},{"lineNumber":436,"author":{"gitId":"tryyang2001"},"content":"```text","lastModifiedDate":"2021-10-15"},{"lineNumber":437,"author":{"gitId":"tryyang2001"},"content":"add e/hiit c/290 d/ d/21-10-2021","lastModifiedDate":"2021-10-24"},{"lineNumber":438,"author":{"gitId":"tryyang2001"},"content":"__________________________________________________________________________________________","lastModifiedDate":"2021-10-15"},{"lineNumber":439,"author":{"gitId":"tryyang2001"},"content":"An exercise has been added:","lastModifiedDate":"2021-10-15"},{"lineNumber":440,"author":{"gitId":"tlyi"},"content":"    hiit (290 cal) @ 21 Oct 2021","lastModifiedDate":"2021-10-25"},{"lineNumber":441,"author":{"gitId":"tryyang2001"},"content":"__________________________________________________________________________________________","lastModifiedDate":"2021-10-15"},{"lineNumber":442,"author":{"gitId":"tryyang2001"},"content":"```","lastModifiedDate":"2021-10-15"},{"lineNumber":443,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":444,"author":{"gitId":"tlyi"},"content":"- `add e/hiit c/290 d/01-01-2041` adds record of exercise done: hiit with 290 calories burnt to the upcoming exercise list.","lastModifiedDate":"2021-10-25"},{"lineNumber":445,"author":{"gitId":"tryyang2001"},"content":"```text","lastModifiedDate":"2021-10-15"},{"lineNumber":446,"author":{"gitId":"tlyi"},"content":"add e/hiit c/290 d/01-01-2041","lastModifiedDate":"2021-10-25"},{"lineNumber":447,"author":{"gitId":"tlyi"},"content":"__________________________________________________________________________________________","lastModifiedDate":"2021-10-25"},{"lineNumber":448,"author":{"gitId":"tlyi"},"content":"An exercise item for the future has been added:","lastModifiedDate":"2021-10-25"},{"lineNumber":449,"author":{"gitId":"tlyi"},"content":"    hiit (290 cal)","lastModifiedDate":"2021-10-25"},{"lineNumber":450,"author":{"gitId":"tryyang2001"},"content":"```","lastModifiedDate":"2021-10-15"},{"lineNumber":451,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":452,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":453,"author":{"gitId":"tlyi"},"content":"💡  **Tip:** Similarly, if the date of the exercise is not provided, the date is assumed to be today.","lastModifiedDate":"2021-10-25"},{"lineNumber":454,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":455,"author":{"gitId":"tlyi"},"content":"#### 4.4.3. Add a Recurring Exercise to the Upcoming Exercise List","lastModifiedDate":"2021-10-25"},{"lineNumber":456,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":457,"author":{"gitId":"tlyi"},"content":"This command is used to schedule exercises that you do on a regular basis. This can be particularly useful if you have weekly trainings to record!","lastModifiedDate":"2021-10-25"},{"lineNumber":458,"author":{"gitId":"tlyi"},"content":"\\","lastModifiedDate":"2021-10-25"},{"lineNumber":459,"author":{"gitId":"tlyi"},"content":"Format: `add r/ITEM c/CALORIES :/START_DATE -/END_DATE @/DAY_OF_THE_WEEK` adds recurring exercise with its respective calories burnt to the upcoming list.\\","lastModifiedDate":"2021-10-25"},{"lineNumber":460,"author":{"gitId":"tlyi"},"content":"❗ `START_DATE` and `END_DATE` must be in the future.\\","lastModifiedDate":"2021-10-25"},{"lineNumber":461,"author":{"gitId":"tlyi"},"content":"❗ `START_DATE` must be before `END_DATE`.\\","lastModifiedDate":"2021-10-25"},{"lineNumber":462,"author":{"gitId":"tlyi"},"content":"❗ `START_DATE` and `END_DATE` must follow `DD-MM-YYYY` format.","lastModifiedDate":"2021-10-25"},{"lineNumber":463,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":464,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":465,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":466,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":467,"author":{"gitId":"tlyi"},"content":"#### 4.4.4. Add a Food Item to FoodBank","lastModifiedDate":"2021-10-25"},{"lineNumber":468,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":469,"author":{"gitId":"tlyi"},"content":"This command is used to keep a record of a Food Item and its associated calories.","lastModifiedDate":"2021-10-25"},{"lineNumber":470,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":471,"author":{"gitId":"tlyi"},"content":"Format: `add fbank/ITEM c/CALORIES`","lastModifiedDate":"2021-10-25"},{"lineNumber":472,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":473,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":474,"author":{"gitId":"tlyi"},"content":"#### 4.4.5. Add an Exercise Item to Exercise Bank","lastModifiedDate":"2021-10-25"},{"lineNumber":475,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":476,"author":{"gitId":"tlyi"},"content":"This command is used to keep a record of an exercise Item and its associated calories.","lastModifiedDate":"2021-10-25"},{"lineNumber":477,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":478,"author":{"gitId":"tlyi"},"content":"Format: `add ebank/ITEM c/CALORIES`","lastModifiedDate":"2021-10-25"},{"lineNumber":479,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":480,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":481,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":482,"author":{"gitId":"tlyi"},"content":"💡**Tip:** If you do not provide the calorie of the Food/Exercise Item for the Food List, Exercise List or ","lastModifiedDate":"2021-10-25"},{"lineNumber":483,"author":{"gitId":"tlyi"},"content":"the Upcoming Exercise List, _Fitbot_ will search the Food/Exercise Bank and retrieve the calorie value","lastModifiedDate":"2021-10-25"},{"lineNumber":484,"author":{"gitId":"tlyi"},"content":"from the corresponding Item Bank if the Item is found.","lastModifiedDate":"2021-10-25"},{"lineNumber":485,"author":{"gitId":"tryyang2001"},"content":"```","lastModifiedDate":"2021-10-24"},{"lineNumber":486,"author":{"gitId":"tryyang2001"},"content":"add f/chicken rice d/22-10-2021 t/1345","lastModifiedDate":"2021-10-24"},{"lineNumber":487,"author":{"gitId":"tryyang2001"},"content":"__________________________________________________________________________________________","lastModifiedDate":"2021-10-15"},{"lineNumber":488,"author":{"gitId":"tryyang2001"},"content":"A food item has been added:","lastModifiedDate":"2021-10-15"},{"lineNumber":489,"author":{"gitId":"tryyang2001"},"content":"    chicken rice (607 cal) @ 13:45, 22 Oct 2021","lastModifiedDate":"2021-10-24"},{"lineNumber":490,"author":{"gitId":"tryyang2001"},"content":"__________________________________________________________________________________________","lastModifiedDate":"2021-10-15"},{"lineNumber":491,"author":{"gitId":"tryyang2001"},"content":"```","lastModifiedDate":"2021-10-15"},{"lineNumber":492,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":493,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":494,"author":{"gitId":"tlyi"},"content":"### 4.5. **View Items:** `view`","lastModifiedDate":"2021-10-25"},{"lineNumber":495,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":496,"author":{"gitId":"tlyi"},"content":"This command is used to view the Items in your lists.","lastModifiedDate":"2021-10-25"},{"lineNumber":497,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":498,"author":{"gitId":"tlyi"},"content":"#### 4.5.1. View Food List","lastModifiedDate":"2021-10-25"},{"lineNumber":499,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":500,"author":{"gitId":"tlyi"},"content":"#### 4.5.2. View Exercise List: ","lastModifiedDate":"2021-10-25"},{"lineNumber":501,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":502,"author":{"gitId":"tlyi"},"content":"This command is used to view all the exercises taken and the calories that are added within the past 7 days (including today) from the list.","lastModifiedDate":"2021-10-25"},{"lineNumber":503,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":504,"author":{"gitId":"tlyi"},"content":"Format: `view e/`","lastModifiedDate":"2021-10-25"},{"lineNumber":505,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":506,"author":{"gitId":"tryyang2001"},"content":"```text","lastModifiedDate":"2021-10-15"},{"lineNumber":507,"author":{"gitId":"tryyang2001"},"content":"view e/","lastModifiedDate":"2021-10-15"},{"lineNumber":508,"author":{"gitId":"tryyang2001"},"content":"__________________________________________________________________________________________________________","lastModifiedDate":"2021-10-24"},{"lineNumber":509,"author":{"gitId":"tryyang2001"},"content":" Here is a summary of all the exercises you have done in the past week:","lastModifiedDate":"2021-10-24"},{"lineNumber":510,"author":{"gitId":"tryyang2001"},"content":"..........................................................................................................","lastModifiedDate":"2021-10-24"},{"lineNumber":511,"author":{"gitId":"tryyang2001"},"content":"You have done 1 exercise(s) on Friday (22 Oct 2021):","lastModifiedDate":"2021-10-24"},{"lineNumber":512,"author":{"gitId":"tryyang2001"},"content":"\t1. biking (500 cal)","lastModifiedDate":"2021-10-24"},{"lineNumber":513,"author":{"gitId":"tryyang2001"},"content":"Total calories burnt in the day: 500 cal","lastModifiedDate":"2021-10-24"},{"lineNumber":514,"author":{"gitId":"tryyang2001"},"content":"..........................................................................................................","lastModifiedDate":"2021-10-24"},{"lineNumber":515,"author":{"gitId":"tryyang2001"},"content":"You have done 1 exercise(s) on Sunday (24 Oct 2021):","lastModifiedDate":"2021-10-24"},{"lineNumber":516,"author":{"gitId":"tryyang2001"},"content":"\t1. hiit (290 cal)","lastModifiedDate":"2021-10-15"},{"lineNumber":517,"author":{"gitId":"tryyang2001"},"content":"Total calories burnt in the day: 290 cal","lastModifiedDate":"2021-10-24"},{"lineNumber":518,"author":{"gitId":"tryyang2001"},"content":"..........................................................................................................","lastModifiedDate":"2021-10-24"},{"lineNumber":519,"author":{"gitId":"tryyang2001"},"content":"Total exercises done in this week: 2","lastModifiedDate":"2021-10-24"},{"lineNumber":520,"author":{"gitId":"tryyang2001"},"content":"Total calorie burnt in the week: 790","lastModifiedDate":"2021-10-24"},{"lineNumber":521,"author":{"gitId":"tryyang2001"},"content":"__________________________________________________________________________________________________________","lastModifiedDate":"2021-10-24"},{"lineNumber":522,"author":{"gitId":"tryyang2001"},"content":"```","lastModifiedDate":"2021-10-15"},{"lineNumber":523,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":524,"author":{"gitId":"tlyi"},"content":"#### 4.5.3. View Upcoming Exercise List","lastModifiedDate":"2021-10-25"},{"lineNumber":525,"author":{"gitId":"tlyi"},"content":"This command is used to view all the exercises and the calories added that are scheduled to happen in a future date.","lastModifiedDate":"2021-10-25"},{"lineNumber":526,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":527,"author":{"gitId":"tlyi"},"content":"Format: `view u/`","lastModifiedDate":"2021-10-25"},{"lineNumber":528,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":529,"author":{"gitId":"tryyang2001"},"content":"```text","lastModifiedDate":"2021-10-15"},{"lineNumber":530,"author":{"gitId":"xingjie99"},"content":"view u/","lastModifiedDate":"2021-10-25"},{"lineNumber":531,"author":{"gitId":"tryyang2001"},"content":"__________________________________________________________________________________________","lastModifiedDate":"2021-10-15"},{"lineNumber":532,"author":{"gitId":"xingjie99"},"content":"You have 2 upcoming exercise(s):","lastModifiedDate":"2021-10-25"},{"lineNumber":533,"author":{"gitId":"xingjie99"},"content":"    1. hiit (200 cal) (Saturday 01 Jan 2022)","lastModifiedDate":"2021-10-25"},{"lineNumber":534,"author":{"gitId":"xingjie99"},"content":"    2. running (300 cal) (Sunday 02 Jan 2022)","lastModifiedDate":"2021-10-25"},{"lineNumber":535,"author":{"gitId":"tryyang2001"},"content":"__________________________________________________________________________________________","lastModifiedDate":"2021-10-15"},{"lineNumber":536,"author":{"gitId":"tryyang2001"},"content":"```","lastModifiedDate":"2021-10-15"},{"lineNumber":537,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":538,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":539,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":540,"author":{"gitId":"tlyi"},"content":"### 4.6. Delete Items: `delete`","lastModifiedDate":"2021-10-25"},{"lineNumber":541,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":542,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":543,"author":{"gitId":"tlyi"},"content":"#### 4.6.2 Delete an Exercise Item from Exercise List","lastModifiedDate":"2021-10-25"},{"lineNumber":544,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":545,"author":{"gitId":"tlyi"},"content":"Format: `delete e/LIST_NO. d/DD-MM-YYYY` deletes the *n\u003csup\u003eth\u003c/sup\u003e* exercise Item in the exercise list which contains the date (`DD-MM-YYYY`),","lastModifiedDate":"2021-10-25"},{"lineNumber":546,"author":{"gitId":"tlyi"},"content":"where *n* is the index of the exercise to delete.","lastModifiedDate":"2021-10-25"},{"lineNumber":547,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":548,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":549,"author":{"gitId":"tlyi"},"content":"Example:","lastModifiedDate":"2021-10-25"},{"lineNumber":550,"author":{"gitId":"tlyi"},"content":"```","lastModifiedDate":"2021-10-25"},{"lineNumber":551,"author":{"gitId":"tryyang2001"},"content":"delete e/1 d/24-10-2021","lastModifiedDate":"2021-10-24"},{"lineNumber":552,"author":{"gitId":"tryyang2001"},"content":"__________________________________________________________________________________________________________","lastModifiedDate":"2021-10-24"},{"lineNumber":553,"author":{"gitId":"tryyang2001"},"content":"You have removed the exercise:","lastModifiedDate":"2021-10-15"},{"lineNumber":554,"author":{"gitId":"tryyang2001"},"content":"    hiit (290 cal) @ 24 Oct 2021","lastModifiedDate":"2021-10-24"},{"lineNumber":555,"author":{"gitId":"tryyang2001"},"content":"Number of exercise item(s) left: 1","lastModifiedDate":"2021-10-15"},{"lineNumber":556,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":557,"author":{"gitId":"tryyang2001"},"content":"__________________________________________________________________________________________","lastModifiedDate":"2021-10-15"},{"lineNumber":558,"author":{"gitId":"tlyi"},"content":"```","lastModifiedDate":"2021-10-25"},{"lineNumber":559,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":560,"author":{"gitId":"tlyi"},"content":"💡   **Tip:** If you wish to remove all the Exercise Items from the Exercise List, there is a shortcut command: `delete e/all`.","lastModifiedDate":"2021-10-25"},{"lineNumber":561,"author":{"gitId":"tlyi"},"content":"```","lastModifiedDate":"2021-10-25"},{"lineNumber":562,"author":{"gitId":"tryyang2001"},"content":"delete e/all","lastModifiedDate":"2021-10-15"},{"lineNumber":563,"author":{"gitId":"tryyang2001"},"content":"__________________________________________________________________________________________________________","lastModifiedDate":"2021-10-15"},{"lineNumber":564,"author":{"gitId":"tryyang2001"},"content":"All exercise items have been removed.","lastModifiedDate":"2021-10-15"},{"lineNumber":565,"author":{"gitId":"tryyang2001"},"content":"__________________________________________________________________________________________________________","lastModifiedDate":"2021-10-15"},{"lineNumber":566,"author":{"gitId":"tryyang2001"},"content":"```","lastModifiedDate":"2021-10-15"},{"lineNumber":567,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":568,"author":{"gitId":"tlyi"},"content":"#### 4.6.3 Delete an Upcoming Exercise Item from Upcoming Exercise List","lastModifiedDate":"2021-10-25"},{"lineNumber":569,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":570,"author":{"gitId":"tlyi"},"content":"Format: `delete u/LIST_NO.` deletes the n\u003csup\u003eth\u003c/sup\u003e upcoming exercise Item in the upcoming exercise list, where *n* is the index of the exercise to delete.","lastModifiedDate":"2021-10-25"},{"lineNumber":571,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":572,"author":{"gitId":"tlyi"},"content":"Example:","lastModifiedDate":"2021-10-25"},{"lineNumber":573,"author":{"gitId":"tlyi"},"content":"```","lastModifiedDate":"2021-10-25"},{"lineNumber":574,"author":{"gitId":"xingjie99"},"content":"delete u/1","lastModifiedDate":"2021-10-25"},{"lineNumber":575,"author":{"gitId":"xingjie99"},"content":"__________________________________________________________________________________________","lastModifiedDate":"2021-10-25"},{"lineNumber":576,"author":{"gitId":"xingjie99"},"content":"An exercise item for the future has been deleted:","lastModifiedDate":"2021-10-25"},{"lineNumber":577,"author":{"gitId":"xingjie99"},"content":"    running (300 cal)","lastModifiedDate":"2021-10-25"},{"lineNumber":578,"author":{"gitId":"xingjie99"},"content":"Number of exercise item(s) left: 1","lastModifiedDate":"2021-10-25"},{"lineNumber":579,"author":{"gitId":"xingjie99"},"content":"__________________________________________________________________________________________","lastModifiedDate":"2021-10-25"},{"lineNumber":580,"author":{"gitId":"tlyi"},"content":"```","lastModifiedDate":"2021-10-25"},{"lineNumber":581,"author":{"gitId":"tlyi"},"content":"💡   **Tip:** If you wish to remove all the Exercise Items from the Upcoming Exercise List, there is a shortcut command: `delete u/all`.","lastModifiedDate":"2021-10-25"},{"lineNumber":582,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":583,"author":{"gitId":"tlyi"},"content":"```","lastModifiedDate":"2021-10-25"},{"lineNumber":584,"author":{"gitId":"xingjie99"},"content":"delete u/all","lastModifiedDate":"2021-10-25"},{"lineNumber":585,"author":{"gitId":"xingjie99"},"content":"__________________________________________________________________________________________________________","lastModifiedDate":"2021-10-25"},{"lineNumber":586,"author":{"gitId":"xingjie99"},"content":"All future exercise items have been removed.","lastModifiedDate":"2021-10-25"},{"lineNumber":587,"author":{"gitId":"xingjie99"},"content":"__________________________________________________________________________________________________________","lastModifiedDate":"2021-10-25"},{"lineNumber":588,"author":{"gitId":"tryyang2001"},"content":"```","lastModifiedDate":"2021-10-15"},{"lineNumber":589,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":590,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":591,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":592,"author":{"gitId":"tlyi"},"content":"#### 4.6.4 Delete a Food Item from Food Bank","lastModifiedDate":"2021-10-25"},{"lineNumber":593,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":594,"author":{"gitId":"tlyi"},"content":"This command deletes a Food Item from the Food Bank.","lastModifiedDate":"2021-10-25"},{"lineNumber":595,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":596,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":597,"author":{"gitId":"tlyi"},"content":"Format: `delete fbank/LIST_NO.` deletes the n\u003csup\u003eth\u003c/sup\u003e Food Item in the Food Bank, where *n* is the index of the Food to delete.","lastModifiedDate":"2021-10-25"},{"lineNumber":598,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":599,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":600,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":601,"author":{"gitId":"tlyi"},"content":"#### 4.6.5. Delete an Exercise Item from Exercise Bank","lastModifiedDate":"2021-10-25"},{"lineNumber":602,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":603,"author":{"gitId":"tlyi"},"content":"This command deletes an Exercise Item from the Exercise Bank.","lastModifiedDate":"2021-10-25"},{"lineNumber":604,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":605,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":606,"author":{"gitId":"tlyi"},"content":"Format: `delete ebank/LIST_NO.` deletes the n\u003csup\u003eth\u003c/sup\u003e Exercise Item in the Exercise Bank, where *n* is the index of the Exercise to delete.","lastModifiedDate":"2021-10-25"},{"lineNumber":607,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":608,"author":{"gitId":"tlyi"},"content":"❗ `LIST_NO.` must be a positive integer within the range of the number of Items in the list. ","lastModifiedDate":"2021-10-25"},{"lineNumber":609,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":610,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":611,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":612,"author":{"gitId":"tlyi"},"content":"### 4.7. **Edit Items**: `edit`","lastModifiedDate":"2021-10-25"},{"lineNumber":613,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":614,"author":{"gitId":"tlyi"},"content":"This command is used to edit any record of Items that you have previously entered into the Food bank, exercise bank or upcoming exercise list.","lastModifiedDate":"2021-10-25"},{"lineNumber":615,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":616,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":617,"author":{"gitId":"tlyi"},"content":"#### 4.7.1. Edit Upcoming Exercise List","lastModifiedDate":"2021-10-25"},{"lineNumber":618,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":619,"author":{"gitId":"tlyi"},"content":"This command is used to edit Exercise Items in the Upcoming Exercise List.","lastModifiedDate":"2021-10-25"},{"lineNumber":620,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":621,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":622,"author":{"gitId":"tlyi"},"content":"Format: `edit u/LIST_NO. {n/NEW_NAME} {c/NEW_CALORIES} {d/NEW_DATE}` edits the n\u003csup\u003eth\u003c/sup\u003e item in the Upcoming Exercise List, where *n* is the index of the Exercise to edit.","lastModifiedDate":"2021-10-25"},{"lineNumber":623,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":624,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":625,"author":{"gitId":"tlyi"},"content":"#### 4.7.2. Edit Food Bank","lastModifiedDate":"2021-10-25"},{"lineNumber":626,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":627,"author":{"gitId":"tlyi"},"content":"Format:  `edit fbank/LIST_NO. {n/NEW_NAME} {c/NEW_CALORIES}` edits the n\u003csup\u003eth\u003c/sup\u003e item in the Food Bank, where *n* is the index of the Food to edit.","lastModifiedDate":"2021-10-25"},{"lineNumber":628,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":629,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":630,"author":{"gitId":"tlyi"},"content":"#### 4.7.3. Edit Exercise Bank","lastModifiedDate":"2021-10-25"},{"lineNumber":631,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":632,"author":{"gitId":"tlyi"},"content":"Format: `edit ebank/LIST_NO. {n/NEW_NAME} {c/NEW_CALORIES}` edits the n\u003csup\u003eth\u003c/sup\u003e item in the Exercise Bank, where *n* is the index of the Exercise to edit.","lastModifiedDate":"2021-10-25"},{"lineNumber":633,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":634,"author":{"gitId":"tlyi"},"content":"❗ `NEW_DATE` must be a date after today.","lastModifiedDate":"2021-10-25"},{"lineNumber":635,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":636,"author":{"gitId":"tlyi"},"content":"❗ `LIST_NO.` must be a positive integer within the range of the number of Items in the list. ","lastModifiedDate":"2021-10-25"},{"lineNumber":637,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":638,"author":{"gitId":"tlyi"},"content":"❗ While all the parameters are optional, please specify **at least one** parameter so that _Fitbot_ knows which attribute you would like to update.","lastModifiedDate":"2021-10-25"},{"lineNumber":639,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":640,"author":{"gitId":"tlyi"},"content":"```","lastModifiedDate":"2021-10-25"},{"lineNumber":641,"author":{"gitId":"tlyi"},"content":"edit fbank/1 c/50","lastModifiedDate":"2021-10-25"},{"lineNumber":642,"author":{"gitId":"tlyi"},"content":"__________________________________________________________________________________________________________","lastModifiedDate":"2021-10-25"},{"lineNumber":643,"author":{"gitId":"tlyi"},"content":"Food bank item number 1 has been changed to:","lastModifiedDate":"2021-10-25"},{"lineNumber":644,"author":{"gitId":"tlyi"},"content":"  potato (50 cal)","lastModifiedDate":"2021-10-25"},{"lineNumber":645,"author":{"gitId":"tlyi"},"content":"__________________________________________________________________________________________________________","lastModifiedDate":"2021-10-25"},{"lineNumber":646,"author":{"gitId":"tlyi"},"content":"````","lastModifiedDate":"2021-10-25"},{"lineNumber":647,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":648,"author":{"gitId":"tttyyzzz"},"content":"###4.7 **Viewing your Calorie Summary** `overview`","lastModifiedDate":"2021-10-27"},{"lineNumber":649,"author":{"gitId":"tlyi"},"content":"This command is used to view the summary of the calories gained from food, calories burnt from exercises as well as","lastModifiedDate":"2021-10-25"},{"lineNumber":650,"author":{"gitId":"tttyyzzz"},"content":"net calories after including BMR.","lastModifiedDate":"2021-10-24"},{"lineNumber":651,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":652,"author":{"gitId":"tryyang2001"},"content":"Format: `overview`","lastModifiedDate":"2021-10-15"},{"lineNumber":653,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":654,"author":{"gitId":"tttyyzzz"},"content":"Example:","lastModifiedDate":"2021-10-27"},{"lineNumber":655,"author":{"gitId":"tryyang2001"},"content":"```text","lastModifiedDate":"2021-10-15"},{"lineNumber":656,"author":{"gitId":"tryyang2001"},"content":"overview","lastModifiedDate":"2021-10-15"},{"lineNumber":657,"author":{"gitId":"tttyyzzz"},"content":"-*WEEKLY OVERVIEW*-","lastModifiedDate":"2021-10-27"},{"lineNumber":658,"author":{"gitId":"tttyyzzz"},"content":"Hi qwe, this is your calorie summary for the week.","lastModifiedDate":"2021-10-27"},{"lineNumber":659,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":660,"author":{"gitId":"tttyyzzz"},"content":"Food:","lastModifiedDate":"2021-10-24"},{"lineNumber":661,"author":{"gitId":"tttyyzzz"},"content":"You have consumed 20040 cal this week from 21-Oct to 27-Oct.","lastModifiedDate":"2021-10-27"},{"lineNumber":662,"author":{"gitId":"tttyyzzz"},"content":"Calorie gained from food (Daily)","lastModifiedDate":"2021-10-24"},{"lineNumber":663,"author":{"gitId":"tttyyzzz"},"content":"21-Oct   ████████████    1800","lastModifiedDate":"2021-10-27"},{"lineNumber":664,"author":{"gitId":"tttyyzzz"},"content":"22-Oct   ████████████████████████    3640","lastModifiedDate":"2021-10-27"},{"lineNumber":665,"author":{"gitId":"tttyyzzz"},"content":"23-Oct   █████████████████    2600","lastModifiedDate":"2021-10-27"},{"lineNumber":666,"author":{"gitId":"tttyyzzz"},"content":"24-Oct   █████████████    1900","lastModifiedDate":"2021-10-27"},{"lineNumber":667,"author":{"gitId":"tttyyzzz"},"content":"25-Oct   ██████████████████████████████    4500","lastModifiedDate":"2021-10-27"},{"lineNumber":668,"author":{"gitId":"tttyyzzz"},"content":"26-Oct   ████████████████    2400","lastModifiedDate":"2021-10-27"},{"lineNumber":669,"author":{"gitId":"tttyyzzz"},"content":"27-Oct   █████████████████████    3200","lastModifiedDate":"2021-10-27"},{"lineNumber":670,"author":{"gitId":"tttyyzzz"},"content":"You have lost 4310 cal from exercising for the last 7 days.","lastModifiedDate":"2021-10-27"},{"lineNumber":671,"author":{"gitId":"tttyyzzz"},"content":"Calorie burnt from exercise (Daily)","lastModifiedDate":"2021-10-24"},{"lineNumber":672,"author":{"gitId":"tttyyzzz"},"content":"21-Oct   ████████████████████████████    1100","lastModifiedDate":"2021-10-27"},{"lineNumber":673,"author":{"gitId":"tttyyzzz"},"content":"22-Oct   ███    120","lastModifiedDate":"2021-10-27"},{"lineNumber":674,"author":{"gitId":"tttyyzzz"},"content":"23-Oct   ██████    230","lastModifiedDate":"2021-10-27"},{"lineNumber":675,"author":{"gitId":"tttyyzzz"},"content":"24-Oct   ██████████████████████████████    1200","lastModifiedDate":"2021-10-27"},{"lineNumber":676,"author":{"gitId":"tttyyzzz"},"content":"25-Oct   ████████████████████    780","lastModifiedDate":"2021-10-27"},{"lineNumber":677,"author":{"gitId":"tttyyzzz"},"content":"26-Oct   ██████████████    540","lastModifiedDate":"2021-10-27"},{"lineNumber":678,"author":{"gitId":"tttyyzzz"},"content":"27-Oct   █████████    340","lastModifiedDate":"2021-10-27"},{"lineNumber":679,"author":{"gitId":"tttyyzzz"},"content":"Daily net calories**:","lastModifiedDate":"2021-10-24"},{"lineNumber":680,"author":{"gitId":"tttyyzzz"},"content":"21-Oct :   -2245","lastModifiedDate":"2021-10-27"},{"lineNumber":681,"author":{"gitId":"tttyyzzz"},"content":"22-Oct :   575","lastModifiedDate":"2021-10-27"},{"lineNumber":682,"author":{"gitId":"tttyyzzz"},"content":"23-Oct :   -575","lastModifiedDate":"2021-10-27"},{"lineNumber":683,"author":{"gitId":"tttyyzzz"},"content":"24-Oct :   -2245","lastModifiedDate":"2021-10-27"},{"lineNumber":684,"author":{"gitId":"tttyyzzz"},"content":"25-Oct :   775","lastModifiedDate":"2021-10-27"},{"lineNumber":685,"author":{"gitId":"tttyyzzz"},"content":"26-Oct :   -1085","lastModifiedDate":"2021-10-27"},{"lineNumber":686,"author":{"gitId":"tttyyzzz"},"content":"27-Oct :   -85","lastModifiedDate":"2021-10-27"},{"lineNumber":687,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":688,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":689,"author":{"gitId":"tttyyzzz"},"content":"Number of supper meals this week: 2","lastModifiedDate":"2021-10-27"},{"lineNumber":690,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":691,"author":{"gitId":"tttyyzzz"},"content":" ** The net calorie calculation includes calories gained from food, calories burnt from exercises","lastModifiedDate":"2021-10-24"},{"lineNumber":692,"author":{"gitId":"tttyyzzz"},"content":"  and daily normal activities. All calculations used the latest values from updated in profile.","lastModifiedDate":"2021-10-27"},{"lineNumber":693,"author":{"gitId":"tttyyzzz"},"content":"__________________________________________________________________________________________________________","lastModifiedDate":"2021-10-27"},{"lineNumber":694,"author":{"gitId":"tttyyzzz"},"content":"This is your calorie overview for today:","lastModifiedDate":"2021-10-27"},{"lineNumber":695,"author":{"gitId":"tttyyzzz"},"content":"Your calorie gained from food is: 3200","lastModifiedDate":"2021-10-27"},{"lineNumber":696,"author":{"gitId":"tttyyzzz"},"content":"Your calorie lost from exercise is: 340","lastModifiedDate":"2021-10-27"},{"lineNumber":697,"author":{"gitId":"tttyyzzz"},"content":"Your net calorie intake is: -85","lastModifiedDate":"2021-10-27"},{"lineNumber":698,"author":{"gitId":"tttyyzzz"},"content":"Your calorie goal is: 500","lastModifiedDate":"2021-10-27"},{"lineNumber":699,"author":{"gitId":"tttyyzzz"},"content":"You are 585 cal away from your goal","lastModifiedDate":"2021-10-27"},{"lineNumber":700,"author":{"gitId":"tttyyzzz"},"content":"__________________________________________________________________________________________________________","lastModifiedDate":"2021-10-27"},{"lineNumber":701,"author":{"gitId":"tryyang2001"},"content":"```","lastModifiedDate":"2021-10-15"},{"lineNumber":702,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":703,"author":{"gitId":"tttyyzzz"},"content":"### 4.1 **View help:** `help`","lastModifiedDate":"2021-10-27"},{"lineNumber":704,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":705,"author":{"gitId":"tttyyzzz"},"content":"This command shows a list of commands recognised by _Fitbot_ and their usage.","lastModifiedDate":"2021-10-27"},{"lineNumber":706,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":707,"author":{"gitId":"tttyyzzz"},"content":"Format: `help`","lastModifiedDate":"2021-10-27"},{"lineNumber":708,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":709,"author":{"gitId":"tttyyzzz"},"content":"Example:","lastModifiedDate":"2021-10-27"},{"lineNumber":710,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":711,"author":{"gitId":"tttyyzzz"},"content":"```text","lastModifiedDate":"2021-10-27"},{"lineNumber":712,"author":{"gitId":"tttyyzzz"},"content":"help","lastModifiedDate":"2021-10-27"},{"lineNumber":713,"author":{"gitId":"tttyyzzz"},"content":"__________________________________________________________________________________________________________","lastModifiedDate":"2021-10-27"},{"lineNumber":714,"author":{"gitId":"tttyyzzz"},"content":"Welcome to the help page.","lastModifiedDate":"2021-10-27"},{"lineNumber":715,"author":{"gitId":"tttyyzzz"},"content":"Below are the commands to get you started.","lastModifiedDate":"2021-10-27"},{"lineNumber":716,"author":{"gitId":"tttyyzzz"},"content":"More details could be found on: ","lastModifiedDate":"2021-10-27"},{"lineNumber":717,"author":{"gitId":"tttyyzzz"},"content":"https://tinyurl.com/fitbotUG","lastModifiedDate":"2021-10-27"},{"lineNumber":718,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":719,"author":{"gitId":"tttyyzzz"},"content":"In the formats of the command, identifiers wrapped in curly brackets{} means that they are optional.","lastModifiedDate":"2021-10-27"},{"lineNumber":720,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":721,"author":{"gitId":"tttyyzzz"},"content":"add -- Add food or exercise record to the current list.","lastModifiedDate":"2021-10-27"},{"lineNumber":722,"author":{"gitId":"tttyyzzz"},"content":"      Adding food items","lastModifiedDate":"2021-10-27"},{"lineNumber":723,"author":{"gitId":"tttyyzzz"},"content":"      Format: add f/ITEM {c/CALORIES} {d/DD-MM-YYYY} {t/HHMM}","lastModifiedDate":"2021-10-27"},{"lineNumber":724,"author":{"gitId":"tttyyzzz"},"content":"      Identifier         Input","lastModifiedDate":"2021-10-27"},{"lineNumber":725,"author":{"gitId":"tttyyzzz"},"content":"           f/           Description of the food item","lastModifiedDate":"2021-10-27"},{"lineNumber":726,"author":{"gitId":"tttyyzzz"},"content":"           c/           Calories of the food","lastModifiedDate":"2021-10-27"},{"lineNumber":727,"author":{"gitId":"tttyyzzz"},"content":"           d/           Date of food in DD-MM-YYYY","lastModifiedDate":"2021-10-27"},{"lineNumber":728,"author":{"gitId":"tttyyzzz"},"content":"           t/           Time of food in HHMM","lastModifiedDate":"2021-10-27"},{"lineNumber":729,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":730,"author":{"gitId":"tttyyzzz"},"content":"      Add Exercise Items","lastModifiedDate":"2021-10-27"},{"lineNumber":731,"author":{"gitId":"tttyyzzz"},"content":"      Format: add f/ITEM {c/CALORIES} {d/DD-MM-YYYY} {t/HHMM}","lastModifiedDate":"2021-10-27"},{"lineNumber":732,"author":{"gitId":"tttyyzzz"},"content":"      Identifier        Input","lastModifiedDate":"2021-10-27"},{"lineNumber":733,"author":{"gitId":"tttyyzzz"},"content":"          e/            Description of exercise","lastModifiedDate":"2021-10-27"},{"lineNumber":734,"author":{"gitId":"tttyyzzz"},"content":"          c/            Calories burnt from exercise","lastModifiedDate":"2021-10-27"},{"lineNumber":735,"author":{"gitId":"tttyyzzz"},"content":"          d/            Date of exercise in DD-MM-YYYY","lastModifiedDate":"2021-10-27"},{"lineNumber":736,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":737,"author":{"gitId":"tttyyzzz"},"content":"      Add Recurring Exercise to Upcoming Exercise List","lastModifiedDate":"2021-10-27"},{"lineNumber":738,"author":{"gitId":"tttyyzzz"},"content":"      Format: add r/ITEM c/CALORIES :/START_DATE -/END_DATE @/DAY_OF_THE_WEEK","lastModifiedDate":"2021-10-27"},{"lineNumber":739,"author":{"gitId":"tttyyzzz"},"content":"      Format: delete e/LIST_NO. d/DD-MM-YYYY","lastModifiedDate":"2021-10-27"},{"lineNumber":740,"author":{"gitId":"tttyyzzz"},"content":"      Identifier        Input","lastModifiedDate":"2021-10-27"},{"lineNumber":741,"author":{"gitId":"tttyyzzz"},"content":"          r/            Description of upcoming exercise","lastModifiedDate":"2021-10-27"},{"lineNumber":742,"author":{"gitId":"tttyyzzz"},"content":"          c/            Calories burnt from exercise","lastModifiedDate":"2021-10-27"},{"lineNumber":743,"author":{"gitId":"tttyyzzz"},"content":"          :/            Start date of exercise in DD-MM-YYYY","lastModifiedDate":"2021-10-27"},{"lineNumber":744,"author":{"gitId":"tttyyzzz"},"content":"          -/            End date of exercise in DD-MM-YYYY","lastModifiedDate":"2021-10-27"},{"lineNumber":745,"author":{"gitId":"tttyyzzz"},"content":"          @/            Workout days of the week","lastModifiedDate":"2021-10-27"},{"lineNumber":746,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":747,"author":{"gitId":"tttyyzzz"},"content":"      Add food Item in FoodBank","lastModifiedDate":"2021-10-27"},{"lineNumber":748,"author":{"gitId":"tttyyzzz"},"content":"      Format: add fbank/ITEM c/CALORIES","lastModifiedDate":"2021-10-27"},{"lineNumber":749,"author":{"gitId":"tttyyzzz"},"content":"      Identifier        Input","lastModifiedDate":"2021-10-27"},{"lineNumber":750,"author":{"gitId":"tttyyzzz"},"content":"          fbank/        Description of food","lastModifiedDate":"2021-10-27"},{"lineNumber":751,"author":{"gitId":"tttyyzzz"},"content":"          c/            Calories burnt from exercise","lastModifiedDate":"2021-10-27"},{"lineNumber":752,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":753,"author":{"gitId":"tttyyzzz"},"content":"      Add exercise Item in ExerciseBank","lastModifiedDate":"2021-10-27"},{"lineNumber":754,"author":{"gitId":"tttyyzzz"},"content":"      Format: add fbank/ITEM c/CALORIES","lastModifiedDate":"2021-10-27"},{"lineNumber":755,"author":{"gitId":"tttyyzzz"},"content":"      Identifier        Input","lastModifiedDate":"2021-10-27"},{"lineNumber":756,"author":{"gitId":"tttyyzzz"},"content":"          fbank/        Description of food","lastModifiedDate":"2021-10-27"},{"lineNumber":757,"author":{"gitId":"tttyyzzz"},"content":"          c/            Calories burnt from exercise","lastModifiedDate":"2021-10-27"},{"lineNumber":758,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":759,"author":{"gitId":"tttyyzzz"},"content":"bmi -- Calculate the Body-Mass-Index of user","lastModifiedDate":"2021-10-27"},{"lineNumber":760,"author":{"gitId":"tttyyzzz"},"content":"      Format: bmi {h/HEIGHT_IN_CM w/WEIGHT_IN_KG}","lastModifiedDate":"2021-10-27"},{"lineNumber":761,"author":{"gitId":"tttyyzzz"},"content":"      Identifier         Input ","lastModifiedDate":"2021-10-27"},{"lineNumber":762,"author":{"gitId":"tttyyzzz"},"content":"\t   h/           Height of user in cm","lastModifiedDate":"2021-10-27"},{"lineNumber":763,"author":{"gitId":"tttyyzzz"},"content":"\t   w/           Weight of user in kg","lastModifiedDate":"2021-10-27"},{"lineNumber":764,"author":{"gitId":"tttyyzzz"},"content":"      If no identifiers are given, bmi will be calculated using the height and weight in the profile.","lastModifiedDate":"2021-10-27"},{"lineNumber":765,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":766,"author":{"gitId":"tttyyzzz"},"content":"bye -- Exit the program.","lastModifiedDate":"2021-10-27"},{"lineNumber":767,"author":{"gitId":"tttyyzzz"},"content":"      Format: bye","lastModifiedDate":"2021-10-27"},{"lineNumber":768,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":769,"author":{"gitId":"tttyyzzz"},"content":"delete -- Delete entry of food or exercise added from a list.","lastModifiedDate":"2021-10-27"},{"lineNumber":770,"author":{"gitId":"tttyyzzz"},"content":"      Deleting food items","lastModifiedDate":"2021-10-27"},{"lineNumber":771,"author":{"gitId":"tttyyzzz"},"content":"      Format: delete f/LIST_NO. d/DD-MM-YYYY t/HHMM","lastModifiedDate":"2021-10-27"},{"lineNumber":772,"author":{"gitId":"tttyyzzz"},"content":"      Identifier         Input","lastModifiedDate":"2021-10-27"},{"lineNumber":773,"author":{"gitId":"tttyyzzz"},"content":"           f/           Index of food in food list within the given date","lastModifiedDate":"2021-10-27"},{"lineNumber":774,"author":{"gitId":"tttyyzzz"},"content":"           d/           Date of food in DD-MM-YYYY","lastModifiedDate":"2021-10-27"},{"lineNumber":775,"author":{"gitId":"tttyyzzz"},"content":"           t/           Time of food in HHMM","lastModifiedDate":"2021-10-27"},{"lineNumber":776,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":777,"author":{"gitId":"tttyyzzz"},"content":"      Delete exercise items","lastModifiedDate":"2021-10-27"},{"lineNumber":778,"author":{"gitId":"tttyyzzz"},"content":"      Format: delete e/LIST_NO. d/DD-MM-YYYY","lastModifiedDate":"2021-10-27"},{"lineNumber":779,"author":{"gitId":"tttyyzzz"},"content":"      Identifier        Input","lastModifiedDate":"2021-10-27"},{"lineNumber":780,"author":{"gitId":"tttyyzzz"},"content":"          e/            Description of exercise","lastModifiedDate":"2021-10-27"},{"lineNumber":781,"author":{"gitId":"tttyyzzz"},"content":"          d/            Date of exercise in DD-MM-YYYY","lastModifiedDate":"2021-10-27"},{"lineNumber":782,"author":{"gitId":"tttyyzzz"},"content":"\t","lastModifiedDate":"2021-10-27"},{"lineNumber":783,"author":{"gitId":"tttyyzzz"},"content":"      Delete Upcoming Exercise Item from Upcoming Exercise List","lastModifiedDate":"2021-10-27"},{"lineNumber":784,"author":{"gitId":"tttyyzzz"},"content":"      Format: delete u/LIST_NO.","lastModifiedDate":"2021-10-27"},{"lineNumber":785,"author":{"gitId":"tttyyzzz"},"content":"      Identifier        Input","lastModifiedDate":"2021-10-27"},{"lineNumber":786,"author":{"gitId":"tttyyzzz"},"content":"          u/        The index of the item with in the upcoming exercise list","lastModifiedDate":"2021-10-27"},{"lineNumber":787,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":788,"author":{"gitId":"tttyyzzz"},"content":"      Delete food items from food bank","lastModifiedDate":"2021-10-27"},{"lineNumber":789,"author":{"gitId":"tttyyzzz"},"content":"      Format: delete fbank/LIST_NO. {n/NEW_NAME} {c/NEW_CALORIES}","lastModifiedDate":"2021-10-27"},{"lineNumber":790,"author":{"gitId":"tttyyzzz"},"content":"      Identifier        Input","lastModifiedDate":"2021-10-27"},{"lineNumber":791,"author":{"gitId":"tttyyzzz"},"content":"          fbank/        The index of the item with in the food bank","lastModifiedDate":"2021-10-27"},{"lineNumber":792,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":793,"author":{"gitId":"tttyyzzz"},"content":"      Delete exercise items from exercise bank","lastModifiedDate":"2021-10-27"},{"lineNumber":794,"author":{"gitId":"tttyyzzz"},"content":"      Format: delete ebank/LIST_NO. {n/NEW_NAME} {c/NEW_CALORIES}","lastModifiedDate":"2021-10-27"},{"lineNumber":795,"author":{"gitId":"tttyyzzz"},"content":"      Identifier        Input","lastModifiedDate":"2021-10-27"},{"lineNumber":796,"author":{"gitId":"tttyyzzz"},"content":"          ebank/        The index of the item with in the exercise bank","lastModifiedDate":"2021-10-27"},{"lineNumber":797,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":798,"author":{"gitId":"tttyyzzz"},"content":"edit -- Edit entry of food or exercise added from a list.","lastModifiedDate":"2021-10-27"},{"lineNumber":799,"author":{"gitId":"tttyyzzz"},"content":"      Edit FoodBank","lastModifiedDate":"2021-10-27"},{"lineNumber":800,"author":{"gitId":"tttyyzzz"},"content":"      Format: edit fbank/LIST_NO. {n/NEW_NAME} {c/NEW_CALORIES}","lastModifiedDate":"2021-10-27"},{"lineNumber":801,"author":{"gitId":"tttyyzzz"},"content":"      Identifier        Input","lastModifiedDate":"2021-10-27"},{"lineNumber":802,"author":{"gitId":"tttyyzzz"},"content":"          fbank/        The index of the item with in the food bank","lastModifiedDate":"2021-10-27"},{"lineNumber":803,"author":{"gitId":"tttyyzzz"},"content":"          n/            New description of food name","lastModifiedDate":"2021-10-27"},{"lineNumber":804,"author":{"gitId":"tttyyzzz"},"content":"          c/            Calories of food","lastModifiedDate":"2021-10-27"},{"lineNumber":805,"author":{"gitId":"tttyyzzz"},"content":"\t ","lastModifiedDate":"2021-10-27"},{"lineNumber":806,"author":{"gitId":"tttyyzzz"},"content":"      Edit ExerciseBank","lastModifiedDate":"2021-10-27"},{"lineNumber":807,"author":{"gitId":"tttyyzzz"},"content":"      Format: edit ebank/LIST_NO. {n/NEW_NAME} {c/NEW_CALORIES}","lastModifiedDate":"2021-10-27"},{"lineNumber":808,"author":{"gitId":"tttyyzzz"},"content":"      Identifier        Input","lastModifiedDate":"2021-10-27"},{"lineNumber":809,"author":{"gitId":"tttyyzzz"},"content":"          ebank/        The index of the item with in the exercise bank","lastModifiedDate":"2021-10-27"},{"lineNumber":810,"author":{"gitId":"tttyyzzz"},"content":"          n/            New description of exercise name","lastModifiedDate":"2021-10-27"},{"lineNumber":811,"author":{"gitId":"tttyyzzz"},"content":"          c/            Calories burnt from exercise","lastModifiedDate":"2021-10-27"},{"lineNumber":812,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":813,"author":{"gitId":"tttyyzzz"},"content":"     Edit Upcoming Exercise List","lastModifiedDate":"2021-10-27"},{"lineNumber":814,"author":{"gitId":"tttyyzzz"},"content":"     Format: edit u/LIST_NO. {n/NEW_NAME} {c/NEW_CALORIES}","lastModifiedDate":"2021-10-27"},{"lineNumber":815,"author":{"gitId":"tttyyzzz"},"content":"     Identifier        Input","lastModifiedDate":"2021-10-27"},{"lineNumber":816,"author":{"gitId":"tttyyzzz"},"content":"          u/        The index of the item with in the upcoming exercise list","lastModifiedDate":"2021-10-27"},{"lineNumber":817,"author":{"gitId":"tttyyzzz"},"content":"          n/            New description of exercise name","lastModifiedDate":"2021-10-27"},{"lineNumber":818,"author":{"gitId":"tttyyzzz"},"content":"          c/            Calories burnt from exercise   ","lastModifiedDate":"2021-10-27"},{"lineNumber":819,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":820,"author":{"gitId":"tttyyzzz"},"content":"help -- View help for commands","lastModifiedDate":"2021-10-27"},{"lineNumber":821,"author":{"gitId":"tttyyzzz"},"content":"      Format: help","lastModifiedDate":"2021-10-27"},{"lineNumber":822,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":823,"author":{"gitId":"tttyyzzz"},"content":"profile -- View or modify profile details","lastModifiedDate":"2021-10-27"},{"lineNumber":824,"author":{"gitId":"tttyyzzz"},"content":"      Format: profile n/NAME h/HEIGHT(CM) w/WEIGHT(KG) a/AGE g/CALORIEGOAL s/GENDER(M/F) x/ACTIVITYFACTOR(1-5)","lastModifiedDate":"2021-10-27"},{"lineNumber":825,"author":{"gitId":"tttyyzzz"},"content":"      Identifier         Input ","lastModifiedDate":"2021-10-27"},{"lineNumber":826,"author":{"gitId":"tttyyzzz"},"content":"\t   n/           Name of user","lastModifiedDate":"2021-10-27"},{"lineNumber":827,"author":{"gitId":"tttyyzzz"},"content":"\t   h/           Height of user in cm","lastModifiedDate":"2021-10-27"},{"lineNumber":828,"author":{"gitId":"tttyyzzz"},"content":"\t   w/           Weight of user in kg","lastModifiedDate":"2021-10-27"},{"lineNumber":829,"author":{"gitId":"tttyyzzz"},"content":"\t   s/           Gender of user, m for male, f for female","lastModifiedDate":"2021-10-27"},{"lineNumber":830,"author":{"gitId":"tttyyzzz"},"content":"\t   a/           Age of user","lastModifiedDate":"2021-10-27"},{"lineNumber":831,"author":{"gitId":"tttyyzzz"},"content":"\t   g/           Net calorie goal of user. (Net calorie is based on calorie of food consumed - calories burnt from exercise and bmr","lastModifiedDate":"2021-10-27"},{"lineNumber":832,"author":{"gitId":"tttyyzzz"},"content":"\t   x/           Activity factor of user, range 1 to 5","lastModifiedDate":"2021-10-27"},{"lineNumber":833,"author":{"gitId":"tttyyzzz"},"content":"      If no identifiers are given, user can view the profile particulars.","lastModifiedDate":"2021-10-27"},{"lineNumber":834,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":835,"author":{"gitId":"tttyyzzz"},"content":"overview -- View weekly and daily summary of calories","lastModifiedDate":"2021-10-27"},{"lineNumber":836,"author":{"gitId":"tttyyzzz"},"content":"      Format: overview","lastModifiedDate":"2021-10-27"},{"lineNumber":837,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":838,"author":{"gitId":"tttyyzzz"},"content":"view -- View all the food and/or exercises added.","lastModifiedDate":"2021-10-27"},{"lineNumber":839,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":840,"author":{"gitId":"tttyyzzz"},"content":"      Viewing Food List","lastModifiedDate":"2021-10-27"},{"lineNumber":841,"author":{"gitId":"tttyyzzz"},"content":"      Format: view f/","lastModifiedDate":"2021-10-27"},{"lineNumber":842,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":843,"author":{"gitId":"tttyyzzz"},"content":"      View exercise List","lastModifiedDate":"2021-10-27"},{"lineNumber":844,"author":{"gitId":"tttyyzzz"},"content":"      Format: view e/","lastModifiedDate":"2021-10-27"},{"lineNumber":845,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":846,"author":{"gitId":"tttyyzzz"},"content":"      View Upcoming Exercise List","lastModifiedDate":"2021-10-27"},{"lineNumber":847,"author":{"gitId":"tttyyzzz"},"content":"      Format: view u/","lastModifiedDate":"2021-10-27"},{"lineNumber":848,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":849,"author":{"gitId":"tttyyzzz"},"content":"      View exercise bank","lastModifiedDate":"2021-10-27"},{"lineNumber":850,"author":{"gitId":"tttyyzzz"},"content":"      Format: view e/","lastModifiedDate":"2021-10-27"},{"lineNumber":851,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":852,"author":{"gitId":"tttyyzzz"},"content":"      View food bank","lastModifiedDate":"2021-10-27"},{"lineNumber":853,"author":{"gitId":"tttyyzzz"},"content":"      Format: view f/","lastModifiedDate":"2021-10-27"},{"lineNumber":854,"author":{"gitId":"tttyyzzz"},"content":"__________________________________________________________________________________________________________","lastModifiedDate":"2021-10-27"},{"lineNumber":855,"author":{"gitId":"tryyang2001"},"content":"```","lastModifiedDate":"2021-10-15"},{"lineNumber":856,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":857,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":858,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":859,"author":{"gitId":"tlyi"},"content":"### 4.9. Exit the program: `bye`","lastModifiedDate":"2021-10-25"},{"lineNumber":860,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":861,"author":{"gitId":"tlyi"},"content":"This command is used to exit _Fitbot_.","lastModifiedDate":"2021-10-25"},{"lineNumber":862,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":863,"author":{"gitId":"tryyang2001"},"content":"Format: `bye`","lastModifiedDate":"2021-10-15"},{"lineNumber":864,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":865,"author":{"gitId":"tryyang2001"},"content":"```text  ","lastModifiedDate":"2021-10-15"},{"lineNumber":866,"author":{"gitId":"tryyang2001"},"content":"bye  ","lastModifiedDate":"2021-10-15"},{"lineNumber":867,"author":{"gitId":"tryyang2001"},"content":"__________________________________________________________________________________________  ","lastModifiedDate":"2021-10-15"},{"lineNumber":868,"author":{"gitId":"tryyang2001"},"content":"Exiting Fitbot....  ","lastModifiedDate":"2021-10-15"},{"lineNumber":869,"author":{"gitId":"tryyang2001"},"content":"Bye! Hope to see you again soon!!  ","lastModifiedDate":"2021-10-15"},{"lineNumber":870,"author":{"gitId":"tryyang2001"},"content":"__________________________________________________________________________________________  ","lastModifiedDate":"2021-10-15"},{"lineNumber":871,"author":{"gitId":"tryyang2001"},"content":"```  ","lastModifiedDate":"2021-10-15"},{"lineNumber":872,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":873,"author":{"gitId":"tlyi"},"content":"### 4.10. Saving the data","lastModifiedDate":"2021-10-25"},{"lineNumber":874,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":875,"author":{"gitId":"tlyi"},"content":"There is no need to save manually. Any updates made to the data will be automatically stored into the local drive and reloaded when _Fitbot_ is restarted.","lastModifiedDate":"2021-10-25"},{"lineNumber":876,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":877,"author":{"gitId":"tlyi"},"content":"### 4.11. Editing the data file","lastModifiedDate":"2021-10-25"},{"lineNumber":878,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":879,"author":{"gitId":"tlyi"},"content":"_Fitbot_ data files are saved as .text files `\u003cJAR file location\u003e/data/\u003ctext file name\u003e.txt`. \\","lastModifiedDate":"2021-10-25"},{"lineNumber":880,"author":{"gitId":"tryyang2001"},"content":"Advanced users are welcome to update data directly by editing the data files. ","lastModifiedDate":"2021-10-26"},{"lineNumber":881,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":882,"author":{"gitId":"tlyi"},"content":"❗ If your changes to the data files format are invalid, _Fitbot_ will skip the wrongly formatted line when it loads in the data.","lastModifiedDate":"2021-10-25"},{"lineNumber":883,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":884,"author":{"gitId":"tlyi"},"content":"❗ Ensure that you quit _Fitbot_ if you would like to edit the files. Edits made directly to files when _Fitbot_ is running will not be saved.","lastModifiedDate":"2021-10-25"},{"lineNumber":885,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":886,"author":{"gitId":"tlyi"},"content":"### 5. FAQ","lastModifiedDate":"2021-10-25"},{"lineNumber":887,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":888,"author":{"gitId":"xingjie99"},"content":"**Q:** How do I transfer my data to another computer?\\","lastModifiedDate":"2021-10-25"},{"lineNumber":889,"author":{"gitId":"tlyi"},"content":"**A:** Zip the folder with _Fitbot_ and its data files, and transfer to the new computer. Extract the zipped folder onto your new computer and follow steps 1, 4 and 5 in [Quick Start](#1-quick-start) to get your _Fitbot_ running on your new computer.","lastModifiedDate":"2021-10-25"},{"lineNumber":890,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":891,"author":{"gitId":"xingjie99"},"content":"**Q:** How many profiles can I create?\\","lastModifiedDate":"2021-10-25"},{"lineNumber":892,"author":{"gitId":"tlyi"},"content":"**A:** _Fitbot_ only supports 1 profile. If you need to make any changes to your current profile, you can refer to [Updating your profile attributes](#422-updating-your-profile-attributes).","lastModifiedDate":"2021-10-25"},{"lineNumber":893,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":894,"author":{"gitId":"tlyi"},"content":"### 6. Command Summary","lastModifiedDate":"2021-10-25"},{"lineNumber":895,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":896,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":897,"author":{"gitId":"tryyang2001"},"content":"| Action | Format | Examples |","lastModifiedDate":"2021-10-15"},{"lineNumber":898,"author":{"gitId":"tryyang2001"},"content":"|---------|----------|-------|","lastModifiedDate":"2021-10-15"},{"lineNumber":899,"author":{"gitId":"tlyi"},"content":"add|`add f/ITEM {c/CALORIE} {d/DD-MM-YYYY} {t/HHMM}` \u003cbr\u003e`add e/ITEM {c/CALORIES} {d/DD-MM-YYYY}` \u003cbr\u003e `add r/ITEM c/CALORIES :/START_DATE -/END_DATE @/DAY_OF_THE_WEEK` \u003cbr\u003e  `add fbank/ITEM c/CALORIES` \u003cbr\u003e  `add ebank/ITEM c/CALORIES`| `add f/chicken rice c/607 d/20-10-2021`, \u003cbr\u003e`add e/hiit c/290 d/23-10-2021` \u003cbr\u003e `add r/handball training c/432 :/24-10-2021 -/11-11-2021 @/13` \u003cbr\u003e  `add fbank/chicken rice c/667`\u003cbr\u003e `add ebank/5km run c/478`","lastModifiedDate":"2021-10-25"},{"lineNumber":900,"author":{"gitId":"tlyi"},"content":"bmi|`bmi h/HEIGHT_IN_CM w/WEIGHT_IN_KG` \u003cbr\u003e `bmi`|`bmi h/170 w/65` , \u003cbr\u003e `bmi`","lastModifiedDate":"2021-10-25"},{"lineNumber":901,"author":{"gitId":"tryyang2001"},"content":"bye|`bye`|","lastModifiedDate":"2021-10-15"},{"lineNumber":902,"author":{"gitId":"tlyi"},"content":"delete|`delete f/LIST_NO. d/DD-MM-YYYY t/HHMM` \u003cbr\u003e `delete e/LIST_NO. d/DD-MM-YYYY` \u003cbr\u003e `delete f/all` \u003cbr\u003e `delete e/all` |`delete f/1`, \u003cbr\u003e `delete e/2`, \u003cbr\u003e `delete f/all`, \u003cbr\u003e  `delete e/all`","lastModifiedDate":"2021-10-25"},{"lineNumber":903,"author":{"gitId":"tlyi"},"content":"edit| `edit u/LIST_NO. {n/NEW_NAME} {c/NEW_CALORIES} {d/NEW_DATE}` \u003cbr\u003e `edit fbank/LIST_NO. {n/NEW_NAME} {c/NEW_CALORIES}` \u003cbr\u003e `edit ebank/LIST_NO. {n/NEW_NAME} {c/NEW_CALORIES}`| `edit u/1 n/volleyball training c/560 d/24-10-2021` \u003cbr\u003e `edit fbank/1 n/2.4km run c/267` \u003cbr\u003e `edit ebank/1 n/chicken rice c/800`","lastModifiedDate":"2021-10-25"},{"lineNumber":904,"author":{"gitId":"tryyang2001"},"content":"help | `help`|","lastModifiedDate":"2021-10-15"},{"lineNumber":905,"author":{"gitId":"tryyang2001"},"content":"overview|`overview`|","lastModifiedDate":"2021-10-15"},{"lineNumber":906,"author":{"gitId":"tlyi"},"content":"profile|`profile {h/HEIGHT_IN_CM} {w/WEIGHT_IN_KG} {n/NAME} {s/GENDER} {a/AGE} {g/CALORIE_IN_CAL} {x/ACTIVITY_FACTOR}` \u003cbr\u003e `profile`|`profile h/170 w/65 n/John a/22 s/M g/500 x/2`, \u003cbr\u003e `profile`","lastModifiedDate":"2021-10-25"},{"lineNumber":907,"author":{"gitId":"tlyi"},"content":"view|`view`|`view e/`,  \u003cbr\u003e `view f/`, \u003cbr\u003e  `view fbank/`, \u003cbr\u003e `view ebank/`, \u003cbr\u003e `view u/`","lastModifiedDate":"2021-10-25"},{"lineNumber":908,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":909,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":910,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":911,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"weidak":46,"tttyyzzz":296,"tryyang2001":301,"xingjie99":21,"-":36,"tlyi":211}},{"path":"docs/diagrams/AddFoodItemSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"tryyang2001"},"content":"@startuml","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"tryyang2001"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2021-10-27"},{"lineNumber":3,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"tryyang2001"},"content":"!include Style.puml","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"tryyang2001"},"content":"hide footbox","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"tryyang2001"},"content":"participant \"command:AddFoodCommand\" As AddFoodCommand LOGIC_COLOUR","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"tryyang2001"},"content":"participant \"foodBank:FoodBank\" As FoodBank DATA_COLOUR","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"tryyang2001"},"content":"activate AddFoodCommand LOGIC_COLOUR","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"tryyang2001"},"content":"?-\u003eAddFoodCommand :execute()","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"tryyang2001"},"content":"alt isCalorieFromFoodBank","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"tryyang2001"},"content":"    AddFoodCommand -\u003e FoodBank : findCalorie(description)","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"tryyang2001"},"content":"    activate FoodBank DATA_COLOUR","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"tryyang2001"},"content":"    FoodBank --\u003e AddFoodCommand : calories","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"tryyang2001"},"content":"    deactivate FoodBank","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"tryyang2001"},"content":"    create \"food\" As Food1 DATA_COLOUR","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"tryyang2001"},"content":"    AddFoodCommand -\u003e Food1 ** : new Food(description,calories,dateTime)","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"tryyang2001"},"content":"    activate Food1 DATA_COLOUR","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"tryyang2001"},"content":"    Food1 -\u003e Food1 ++ DATA_COLOUR: setTimePeriod (dateTime)","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"tryyang2001"},"content":"    Food1 --\u003e Food1 --","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"tryyang2001"},"content":"    Food1 --\u003e AddFoodCommand : food","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"tryyang2001"},"content":"    deactivate Food1","lastModifiedDate":"2021-10-27"},{"lineNumber":25,"author":{"gitId":"tryyang2001"},"content":"else","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"tryyang2001"},"content":"create \"food\" As Food2 DATA_COLOUR","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"tryyang2001"},"content":"    AddFoodCommand -\u003e Food2 ** : new Food(description,calories,dateTime)","lastModifiedDate":"2021-10-27"},{"lineNumber":28,"author":{"gitId":"tryyang2001"},"content":"    activate Food2 DATA_COLOUR","lastModifiedDate":"2021-10-27"},{"lineNumber":29,"author":{"gitId":"tryyang2001"},"content":"    Food2 -\u003e Food2 ++ DATA_COLOUR : setTimePeriod (dateTime)","lastModifiedDate":"2021-10-27"},{"lineNumber":30,"author":{"gitId":"tryyang2001"},"content":"    Food2 --\u003e Food2 --","lastModifiedDate":"2021-10-27"},{"lineNumber":31,"author":{"gitId":"tryyang2001"},"content":"    Food2 --\u003e AddFoodCommand : food","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"tryyang2001"},"content":"    deactivate Food2","lastModifiedDate":"2021-10-27"},{"lineNumber":33,"author":{"gitId":"tryyang2001"},"content":"end","lastModifiedDate":"2021-10-27"},{"lineNumber":34,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":35,"author":{"gitId":"tryyang2001"},"content":"participant \"filteredFoodList:FoodList\" As FoodList DATA_COLOUR","lastModifiedDate":"2021-10-27"},{"lineNumber":36,"author":{"gitId":"tryyang2001"},"content":"participant \"commandResult:CommandResult\" As CommandResult LOGIC_COLOUR","lastModifiedDate":"2021-10-27"},{"lineNumber":37,"author":{"gitId":"tryyang2001"},"content":"AddFoodCommand -\u003e FoodList : \\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\taddItem(food)","lastModifiedDate":"2021-10-27"},{"lineNumber":38,"author":{"gitId":"tryyang2001"},"content":"activate FoodList DATA_COLOUR","lastModifiedDate":"2021-10-27"},{"lineNumber":39,"author":{"gitId":"tryyang2001"},"content":"FoodList -\u003e FoodList ++  DATA_COLOUR: sortList()","lastModifiedDate":"2021-10-27"},{"lineNumber":40,"author":{"gitId":"tryyang2001"},"content":"FoodList --\u003e FoodList --","lastModifiedDate":"2021-10-27"},{"lineNumber":41,"author":{"gitId":"tryyang2001"},"content":"FoodList --\u003e AddFoodCommand","lastModifiedDate":"2021-10-27"},{"lineNumber":42,"author":{"gitId":"tryyang2001"},"content":"deactivate FoodList","lastModifiedDate":"2021-10-27"},{"lineNumber":43,"author":{"gitId":"tryyang2001"},"content":"AddFoodCommand -\u003e CommandResult **: \\t\\t\\t\\t\\t\\t\\t\\t\\tnew CommandResult(String.format(MESSAGE_SUCCESS,food))","lastModifiedDate":"2021-10-27"},{"lineNumber":44,"author":{"gitId":"tryyang2001"},"content":"activate CommandResult LOGIC_COLOUR","lastModifiedDate":"2021-10-27"},{"lineNumber":45,"author":{"gitId":"tryyang2001"},"content":"CommandResult --\u003e AddFoodCommand","lastModifiedDate":"2021-10-27"},{"lineNumber":46,"author":{"gitId":"tryyang2001"},"content":"deactivate CommandResult","lastModifiedDate":"2021-10-27"},{"lineNumber":47,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":48,"author":{"gitId":"tryyang2001"},"content":"?\u003c-- AddFoodCommand : commandResult\\t","lastModifiedDate":"2021-10-27"},{"lineNumber":49,"author":{"gitId":"tryyang2001"},"content":"deactivate AddFoodCommand","lastModifiedDate":"2021-10-27"},{"lineNumber":50,"author":{"gitId":"tryyang2001"},"content":"destroy Food1","lastModifiedDate":"2021-10-27"},{"lineNumber":51,"author":{"gitId":"tryyang2001"},"content":"destroy Food2","lastModifiedDate":"2021-10-27"},{"lineNumber":52,"author":{"gitId":"tryyang2001"},"content":"destroy CommandResult","lastModifiedDate":"2021-10-27"},{"lineNumber":53,"author":{"gitId":"tryyang2001"},"content":"destroy AddFoodCommand","lastModifiedDate":"2021-10-27"},{"lineNumber":54,"author":{"gitId":"tryyang2001"},"content":"@enduml","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"tryyang2001":54}},{"path":"docs/diagrams/AddFutureExerciseSequenceDaigram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"xingjie99"},"content":"@startuml","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"xingjie99"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2021-10-27"},{"lineNumber":3,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"xingjie99"},"content":"!include Style.puml","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"xingjie99"},"content":"hide footbox","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"xingjie99"},"content":"participant \"command:AddFutureExerciseCommand\" As AddFutureExerciseCommand LOGIC_COLOUR","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"xingjie99"},"content":"participant \"exerciseBank:ItemBank\" As ItemBank DATA_COLOUR","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"xingjie99"},"content":"activate AddFutureExerciseCommand LOGIC_COLOUR","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"xingjie99"},"content":"?-\u003eAddFutureExerciseCommand :execute()","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"xingjie99"},"content":"opt isCalorieFromBank","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"xingjie99"},"content":"    AddFutureExerciseCommand -\u003e ItemBank : getCaloriesOfItemWithMatchingName(description)","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"xingjie99"},"content":"    activate ItemBank DATA_COLOUR","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"xingjie99"},"content":"    ItemBank --\u003e AddFutureExerciseCommand : \\t\\t\\t\\tcalories","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"xingjie99"},"content":"    deactivate ItemBank","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"xingjie99"},"content":"end","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"xingjie99"},"content":"create \"Exercise\" As Exercise DATA_COLOUR","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"xingjie99"},"content":"    AddFutureExerciseCommand -\u003e Exercise ** : \\t\\t\\t\\tnew Exercise(description,calories,date)","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"xingjie99"},"content":"    activate Exercise DATA_COLOUR","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"xingjie99"},"content":"    Exercise --\u003e AddFutureExerciseCommand : \\t\\t\\t\\t\\t\\t\\texercise","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"xingjie99"},"content":"    deactivate Exercise","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":25,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"xingjie99"},"content":"participant \"futureExerciseItems:FutureExerciseList\" As FutureExerciseItems DATA_COLOUR","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"xingjie99"},"content":"participant \"commandResult:CommandResult\" As CommandResult LOGIC_COLOUR","lastModifiedDate":"2021-10-27"},{"lineNumber":28,"author":{"gitId":"xingjie99"},"content":"AddFutureExerciseCommand -\u003e FutureExerciseItems : \\t\\t\\t\\t\\t\\t\\t\\t\\t\\taddItem(exercise)","lastModifiedDate":"2021-10-27"},{"lineNumber":29,"author":{"gitId":"xingjie99"},"content":"activate FutureExerciseItems DATA_COLOUR","lastModifiedDate":"2021-10-27"},{"lineNumber":30,"author":{"gitId":"xingjie99"},"content":"FutureExerciseItems -\u003e FutureExerciseItems ++  DATA_COLOUR: sortList()","lastModifiedDate":"2021-10-27"},{"lineNumber":31,"author":{"gitId":"xingjie99"},"content":"FutureExerciseItems --\u003e FutureExerciseItems --","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"xingjie99"},"content":"FutureExerciseItems --\u003e AddFutureExerciseCommand","lastModifiedDate":"2021-10-27"},{"lineNumber":33,"author":{"gitId":"xingjie99"},"content":"deactivate FutureExerciseItems","lastModifiedDate":"2021-10-27"},{"lineNumber":34,"author":{"gitId":"xingjie99"},"content":"AddFutureExerciseCommand -\u003e CommandResult **: \\t\\t\\t\\t\\t\\t\\tnew CommandResult(String.format(MESSAGE_SUCCESS,exercise))","lastModifiedDate":"2021-10-27"},{"lineNumber":35,"author":{"gitId":"xingjie99"},"content":"activate CommandResult LOGIC_COLOUR","lastModifiedDate":"2021-10-27"},{"lineNumber":36,"author":{"gitId":"xingjie99"},"content":"CommandResult --\u003e AddFutureExerciseCommand","lastModifiedDate":"2021-10-27"},{"lineNumber":37,"author":{"gitId":"xingjie99"},"content":"deactivate CommandResult","lastModifiedDate":"2021-10-27"},{"lineNumber":38,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":39,"author":{"gitId":"xingjie99"},"content":"?\u003c-- AddFutureExerciseCommand : commandResult","lastModifiedDate":"2021-10-27"},{"lineNumber":40,"author":{"gitId":"xingjie99"},"content":"deactivate AddFutureExerciseCommand","lastModifiedDate":"2021-10-27"},{"lineNumber":41,"author":{"gitId":"xingjie99"},"content":"destroy Exercise","lastModifiedDate":"2021-10-27"},{"lineNumber":42,"author":{"gitId":"xingjie99"},"content":"destroy CommandResult","lastModifiedDate":"2021-10-27"},{"lineNumber":43,"author":{"gitId":"xingjie99"},"content":"destroy AddFutureExerciseCommand","lastModifiedDate":"2021-10-27"},{"lineNumber":44,"author":{"gitId":"xingjie99"},"content":"@enduml","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"xingjie99":44}},{"path":"docs/diagrams/AddRecurringExerciseSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"xingjie99"},"content":"@startuml","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"xingjie99"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2021-10-27"},{"lineNumber":3,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"xingjie99"},"content":"!include Style.puml","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"xingjie99"},"content":"hide footbox","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"xingjie99"},"content":"participant \"command:AddRecurringExerciseCommand\" As AddRecurringExerciseCommand LOGIC_COLOUR","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"xingjie99"},"content":"participant \"exerciseBank:ItemBank\" As ItemBank DATA_COLOUR","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"xingjie99"},"content":"activate AddRecurringExerciseCommand LOGIC_COLOUR","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"xingjie99"},"content":"?-\u003eAddRecurringExerciseCommand :execute()","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"xingjie99"},"content":"opt isCalorieFromBank","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"xingjie99"},"content":"    AddRecurringExerciseCommand -\u003e ItemBank : getCaloriesOfItemWithMatchingName(description)","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"xingjie99"},"content":"    activate ItemBank DATA_COLOUR","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"xingjie99"},"content":"    ItemBank --\u003e AddRecurringExerciseCommand : \\t\\t\\t\\tcalories","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"xingjie99"},"content":"    deactivate ItemBank","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"xingjie99"},"content":"end","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"xingjie99"},"content":"participant \"futureExerciseItems:FutureExerciseList\" As FutureExerciseItems DATA_COLOUR","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"xingjie99"},"content":"AddRecurringExerciseCommand -\u003e FutureExerciseItems : \\taddRecurringExercises(exercise, calories, startDate, endDate, dayOfTheWeek)","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"xingjie99"},"content":"activate FutureExerciseItems DATA_COLOUR","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"xingjie99"},"content":"loop matchesAllDayAndDate","lastModifiedDate":"2021-10-27"},{"lineNumber":25,"author":{"gitId":"xingjie99"},"content":"create \"Exercise\" As Exercise DATA_COLOUR","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"xingjie99"},"content":"    FutureExerciseItems -\u003e Exercise ** : \\tnew Exercise(description,calories,date)","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"xingjie99"},"content":"    activate Exercise DATA_COLOUR","lastModifiedDate":"2021-10-27"},{"lineNumber":28,"author":{"gitId":"xingjie99"},"content":"    Exercise --\u003e FutureExerciseItems : \\t\\t\\texercise","lastModifiedDate":"2021-10-27"},{"lineNumber":29,"author":{"gitId":"xingjie99"},"content":"    deactivate Exercise","lastModifiedDate":"2021-10-27"},{"lineNumber":30,"author":{"gitId":"xingjie99"},"content":"FutureExerciseItems -\u003e FutureExerciseItems ++  DATA_COLOUR: addItem(exercise)","lastModifiedDate":"2021-10-27"},{"lineNumber":31,"author":{"gitId":"xingjie99"},"content":"FutureExerciseItems --\u003e FutureExerciseItems --","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"xingjie99"},"content":"end","lastModifiedDate":"2021-10-27"},{"lineNumber":33,"author":{"gitId":"xingjie99"},"content":"FutureExerciseItems -\u003e FutureExerciseItems ++  DATA_COLOUR: sortList()","lastModifiedDate":"2021-10-27"},{"lineNumber":34,"author":{"gitId":"xingjie99"},"content":"FutureExerciseItems --\u003e FutureExerciseItems --","lastModifiedDate":"2021-10-27"},{"lineNumber":35,"author":{"gitId":"xingjie99"},"content":"FutureExerciseItems --\u003e AddRecurringExerciseCommand","lastModifiedDate":"2021-10-27"},{"lineNumber":36,"author":{"gitId":"xingjie99"},"content":"deactivate FutureExerciseItems","lastModifiedDate":"2021-10-27"},{"lineNumber":37,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":38,"author":{"gitId":"xingjie99"},"content":"participant \"commandResult:CommandResult\" As CommandResult LOGIC_COLOUR","lastModifiedDate":"2021-10-27"},{"lineNumber":39,"author":{"gitId":"xingjie99"},"content":"AddRecurringExerciseCommand -\u003e CommandResult **: \\t\\t\\t\\t\\t\\t\\tnew CommandResult(MESSAGE_SUCCESS)","lastModifiedDate":"2021-10-27"},{"lineNumber":40,"author":{"gitId":"xingjie99"},"content":"activate CommandResult LOGIC_COLOUR","lastModifiedDate":"2021-10-27"},{"lineNumber":41,"author":{"gitId":"xingjie99"},"content":"CommandResult --\u003e AddRecurringExerciseCommand","lastModifiedDate":"2021-10-27"},{"lineNumber":42,"author":{"gitId":"xingjie99"},"content":"deactivate CommandResult","lastModifiedDate":"2021-10-27"},{"lineNumber":43,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":44,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":45,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":46,"author":{"gitId":"xingjie99"},"content":"?\u003c-- AddRecurringExerciseCommand : commandResult","lastModifiedDate":"2021-10-27"},{"lineNumber":47,"author":{"gitId":"xingjie99"},"content":"deactivate AddRecurringExerciseCommand","lastModifiedDate":"2021-10-27"},{"lineNumber":48,"author":{"gitId":"xingjie99"},"content":"destroy Exercise","lastModifiedDate":"2021-10-27"},{"lineNumber":49,"author":{"gitId":"xingjie99"},"content":"destroy CommandResult","lastModifiedDate":"2021-10-27"},{"lineNumber":50,"author":{"gitId":"xingjie99"},"content":"destroy AddRecurringExerciseCommand","lastModifiedDate":"2021-10-27"},{"lineNumber":51,"author":{"gitId":"xingjie99"},"content":"@enduml","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"xingjie99":51}},{"path":"docs/diagrams/Architecture.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"tttyyzzz"},"content":"@startuml","lastModifiedDate":"2021-10-26"},{"lineNumber":2,"author":{"gitId":"tttyyzzz"},"content":"!include style.puml","lastModifiedDate":"2021-10-26"},{"lineNumber":3,"author":{"gitId":"tttyyzzz"},"content":"hide footbox","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"tttyyzzz"},"content":"participant \":Ui\" as ui UI_COLOUR","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"tttyyzzz"},"content":"-\u003e ui ++ UI_COLOUR : addFoodItem","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"tttyyzzz"},"content":"participant \":Main\" as main MAIN_COLOUR","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"tttyyzzz"},"content":"ui -\u003e main ++MAIN_COLOUR","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"tttyyzzz"},"content":"create \":Parser\" as parser LOGIC_COLOUR","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"tttyyzzz"},"content":"main -\u003e parser ++ LOGIC_COLOUR : parseAddFoodItem()","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"tttyyzzz"},"content":"participant \":Data\" as itemlist DATA_COLOUR","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"tttyyzzz"},"content":"parser -\u003e itemlist ++ DATA_COLOUR : addFoodItem()","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"tttyyzzz"},"content":"itemlist --\u003e parser --  :","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"tttyyzzz"},"content":"parser --\u003e main --","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"tttyyzzz"},"content":"main --\u003e ui : add food item\\n success","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"tttyyzzz"},"content":"destroy parser","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"tttyyzzz"},"content":"\u003c--- ui -- : show add food item\\n success message","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"tttyyzzz"},"content":"participant \":Storage\" as storage STORAGE_COLOUR","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"tttyyzzz"},"content":"main -\u003e storage ++ STORAGE_COLOUR: saveFoodList()","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"tttyyzzz"},"content":"storage -\u003e storage ++ STORAGE_COLOUR: save to file","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"tttyyzzz"},"content":"storage --\u003e storage --","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"tttyyzzz"},"content":"storage --\u003e main --","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"tttyyzzz"},"content":"main --","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"tttyyzzz"},"content":"@enduml","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"tttyyzzz":25}},{"path":"docs/diagrams/ItemBankAndItemClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"tryyang2001"},"content":"@startuml","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"tryyang2001"},"content":"\u0027https://plantuml.com/class-diagram","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"tlyi"},"content":"!include Style.puml","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"tryyang2001"},"content":"hide circle","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"tryyang2001"},"content":"\u003c\u003c\u003c\u003c\u003c\u003c\u003c HEAD","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"tryyang2001"},"content":"skinparam classAttributeIconSize 0","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"tryyang2001"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"tryyang2001"},"content":"hide methods","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"tryyang2001"},"content":"\u003e\u003e\u003e\u003e\u003e\u003e\u003e 83092670751ea3ce3345837c07acdf21a2d26a5a","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"tryyang2001"},"content":"class ItemBank DATA_COLOUR","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"tryyang2001"},"content":"class \"{abstract}\\nItemList\" as ItemList DATA_COLOUR","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"tryyang2001"},"content":"class FoodList DATA_COLOUR","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"tryyang2001"},"content":"class ExerciseList DATA_COLOUR","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"tryyang2001"},"content":"class FutureExerciseList DATA_COLOUR","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"tryyang2001"},"content":"ItemBank \u003c|-down- ItemList","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"tryyang2001"},"content":"ItemList \u003c|-down- FoodList","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"tryyang2001"},"content":"ItemList \u003c|-down- ExerciseList","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"tryyang2001"},"content":"ExerciseList \u003c|-down- FutureExerciseList","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"tryyang2001"},"content":"class \"{abstract}\\nItem\" as Item DATA_COLOUR{","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"tryyang2001"},"content":"#name: String","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"tryyang2001"},"content":"#calories: int","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"tryyang2001"},"content":"}","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"tryyang2001"},"content":"class Food DATA_COLOUR {","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"tryyang2001"},"content":"#dateTime: LocalDateTime","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"tryyang2001"},"content":"}","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"tryyang2001"},"content":"class Exercise DATA_COLOUR {","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"tryyang2001"},"content":"#date: LocalDate","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"tryyang2001"},"content":"}","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"tryyang2001"},"content":"enum \"\u003c\u003cenumeration\u003e\u003e\\nTimePeriod\" as TimePeriod DATA_COLOUR {","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"tryyang2001"},"content":"Morning,","lastModifiedDate":"2021-10-26"},{"lineNumber":37,"author":{"gitId":"tryyang2001"},"content":"Afternoon,","lastModifiedDate":"2021-10-26"},{"lineNumber":38,"author":{"gitId":"tryyang2001"},"content":"Evening,","lastModifiedDate":"2021-10-26"},{"lineNumber":39,"author":{"gitId":"tryyang2001"},"content":"Night","lastModifiedDate":"2021-10-26"},{"lineNumber":40,"author":{"gitId":"tryyang2001"},"content":"}","lastModifiedDate":"2021-10-24"},{"lineNumber":41,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":42,"author":{"gitId":"tryyang2001"},"content":"Item \u003c|-down- Food","lastModifiedDate":"2021-10-24"},{"lineNumber":43,"author":{"gitId":"tryyang2001"},"content":"Item \u003c|-down- Exercise","lastModifiedDate":"2021-10-24"},{"lineNumber":44,"author":{"gitId":"tryyang2001"},"content":"Item \"*\" \u003c-left- ItemBank: internalItems","lastModifiedDate":"2021-10-24"},{"lineNumber":45,"author":{"gitId":"tryyang2001"},"content":"\u003c\u003c\u003c\u003c\u003c\u003c\u003c HEAD","lastModifiedDate":"2021-10-27"},{"lineNumber":46,"author":{"gitId":"tryyang2001"},"content":"TimePeriod \"1\" \u003c-- Food : timePeriod\\n\\n\\n","lastModifiedDate":"2021-10-26"},{"lineNumber":47,"author":{"gitId":"tryyang2001"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-27"},{"lineNumber":48,"author":{"gitId":"tryyang2001"},"content":"TimePeriod \"1\" \u003c-- Food : timePeriod\\n\\n","lastModifiedDate":"2021-10-27"},{"lineNumber":49,"author":{"gitId":"tryyang2001"},"content":"\u003e\u003e\u003e\u003e\u003e\u003e\u003e 83092670751ea3ce3345837c07acdf21a2d26a5a","lastModifiedDate":"2021-10-27"},{"lineNumber":50,"author":{"gitId":"tryyang2001"},"content":"Item \u003c.. ItemList","lastModifiedDate":"2021-10-24"},{"lineNumber":51,"author":{"gitId":"tryyang2001"},"content":"Item \u003c.. FoodList","lastModifiedDate":"2021-10-24"},{"lineNumber":52,"author":{"gitId":"tryyang2001"},"content":"Item \u003c.. ExerciseList","lastModifiedDate":"2021-10-24"},{"lineNumber":53,"author":{"gitId":"tryyang2001"},"content":"Food \u003c.. FoodList","lastModifiedDate":"2021-10-24"},{"lineNumber":54,"author":{"gitId":"tryyang2001"},"content":"Exercise \u003c.. ExerciseList","lastModifiedDate":"2021-10-24"},{"lineNumber":55,"author":{"gitId":"tryyang2001"},"content":"Exercise \u003c.. FutureExerciseList","lastModifiedDate":"2021-10-24"},{"lineNumber":56,"author":{"gitId":"tryyang2001"},"content":"note \"Class methods are not shown for simplicity\" as N1 DATA_COLOUR","lastModifiedDate":"2021-10-27"},{"lineNumber":57,"author":{"gitId":"tryyang2001"},"content":"@enduml","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"tryyang2001":56,"tlyi":1}},{"path":"docs/diagrams/LogicClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"@startuml","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"tlyi"},"content":"\u0027https://plantuml.com/class-diagram","lastModifiedDate":"2021-10-27"},{"lineNumber":3,"author":{"gitId":"tlyi"},"content":"!include Style.puml","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"tlyi"},"content":"hide circle","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"tlyi"},"content":"hide empty members","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"tlyi"},"content":"skinparam minclassWidth 120","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"tlyi"},"content":"skinparam Padding 5","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"tlyi"},"content":"class ParserManager LOGIC_COLOUR","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"tlyi"},"content":"class CommandResult LOGIC_COLOUR","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"tlyi"},"content":"class XYZCommand LOGIC_COLOUR","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"tlyi"},"content":"abstract class \"{abstract}\\nCommand\" AS Command LOGIC_COLOUR","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"tlyi"},"content":"ParserManager ..\u003e XYZCommand : \u003e creates","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"tlyi"},"content":"XYZCommand --|\u003e Command","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"tlyi"},"content":"Command .right.\u003e CommandResult : \u003e produces","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"tlyi"},"content":"class Data DATA_COLOUR","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"tlyi"},"content":"class Main MAIN_COLOUR","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"tlyi"},"content":"Main ..\u003e ParserManager : \u003e feeds user input","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"tlyi"},"content":"ParserManager ..\u003e Command : \u003e returns","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"tlyi"},"content":"Command --\u003e Data : \u003e modifies","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"tlyi"},"content":"Main ..\u003e Command : \u003e executes","lastModifiedDate":"2021-10-27"},{"lineNumber":25,"author":{"gitId":"tlyi"},"content":"Main ..\u003e CommandResult : \u003e retrieves","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":28,"author":{"gitId":"tlyi"},"content":"@enduml","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"tlyi":28}},{"path":"docs/diagrams/LogicSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"@startuml","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"tlyi"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2021-10-27"},{"lineNumber":3,"author":{"gitId":"tlyi"},"content":"!include Style.puml","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"tlyi"},"content":"hide footbox","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"tlyi"},"content":"autoactivate on","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"tlyi"},"content":"participant \":Main\" AS Main MAIN_COLOUR","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"tlyi"},"content":"participant \":ParserManager\" AS ParserManager LOGIC_COLOUR","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"tlyi"},"content":"participant \":AddCommandParser\" AS AddCommandParser LOGIC_COLOUR","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"tlyi"},"content":"participant \"c:AddFoodCommand\" AS AddFoodCommand LOGIC_COLOUR","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"tlyi"},"content":"participant \"r:CommandResult\" AS CommandResult LOGIC_COLOUR","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"tlyi"},"content":"participant \"f:Food\" AS Food DATA_COLOUR","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"tlyi"},"content":"participant \":FoodList\" AS FoodList DATA_COLOUR","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"tlyi"},"content":"activate Main MAIN_COLOUR","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"tlyi"},"content":"create ParserManager","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"tlyi"},"content":"Main -\u003e ParserManager LOGIC_COLOUR","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"tlyi"},"content":"return","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"tlyi"},"content":"Main -\u003e ParserManager LOGIC_COLOUR : parseCommand (\"add f/potato c/30\")","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"tlyi"},"content":"ref over ParserManager","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"tlyi"},"content":"    determine type","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"tlyi"},"content":"    of command","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"tlyi"},"content":"end ref","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"tlyi"},"content":"create AddCommandParser","lastModifiedDate":"2021-10-27"},{"lineNumber":25,"author":{"gitId":"tlyi"},"content":"ParserManager -\u003e AddCommandParser LOGIC_COLOUR","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"tlyi"},"content":"return","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"tlyi"},"content":"ParserManager -\u003e AddCommandParser LOGIC_COLOUR : parse(\"f/...\")","lastModifiedDate":"2021-10-27"},{"lineNumber":28,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":29,"author":{"gitId":"tlyi"},"content":"ref over AddCommandParser","lastModifiedDate":"2021-10-27"},{"lineNumber":30,"author":{"gitId":"tlyi"},"content":"    parse required","lastModifiedDate":"2021-10-27"},{"lineNumber":31,"author":{"gitId":"tlyi"},"content":"    parameters","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"tlyi"},"content":"    for the command","lastModifiedDate":"2021-10-27"},{"lineNumber":33,"author":{"gitId":"tlyi"},"content":"end ref","lastModifiedDate":"2021-10-27"},{"lineNumber":34,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":35,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":36,"author":{"gitId":"tlyi"},"content":"create AddFoodCommand","lastModifiedDate":"2021-10-27"},{"lineNumber":37,"author":{"gitId":"tlyi"},"content":"AddCommandParser -\u003e AddFoodCommand LOGIC_COLOUR : new AddFoodCommand(\"potato\", ...)","lastModifiedDate":"2021-10-27"},{"lineNumber":38,"author":{"gitId":"tlyi"},"content":"return c","lastModifiedDate":"2021-10-27"},{"lineNumber":39,"author":{"gitId":"tlyi"},"content":"return c","lastModifiedDate":"2021-10-27"},{"lineNumber":40,"author":{"gitId":"tlyi"},"content":"return c","lastModifiedDate":"2021-10-27"},{"lineNumber":41,"author":{"gitId":"tlyi"},"content":"destroy AddCommandParser","lastModifiedDate":"2021-10-27"},{"lineNumber":42,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":43,"author":{"gitId":"tlyi"},"content":"Main -\u003e AddFoodCommand LOGIC_COLOUR : setData(profile, exerciseItems, ...)","lastModifiedDate":"2021-10-27"},{"lineNumber":44,"author":{"gitId":"tlyi"},"content":"destroy ParserManager","lastModifiedDate":"2021-10-27"},{"lineNumber":45,"author":{"gitId":"tlyi"},"content":"return","lastModifiedDate":"2021-10-27"},{"lineNumber":46,"author":{"gitId":"tlyi"},"content":"Main -\u003e AddFoodCommand LOGIC_COLOUR : execute()","lastModifiedDate":"2021-10-27"},{"lineNumber":47,"author":{"gitId":"tlyi"},"content":"create Food","lastModifiedDate":"2021-10-27"},{"lineNumber":48,"author":{"gitId":"tlyi"},"content":"AddFoodCommand -\u003e Food DATA_COLOUR : new Food(\"potato\", ...)","lastModifiedDate":"2021-10-27"},{"lineNumber":49,"author":{"gitId":"tlyi"},"content":"return f","lastModifiedDate":"2021-10-27"},{"lineNumber":50,"author":{"gitId":"tlyi"},"content":"AddFoodCommand -\u003e FoodList DATA_COLOUR : add(f)","lastModifiedDate":"2021-10-27"},{"lineNumber":51,"author":{"gitId":"tlyi"},"content":"return","lastModifiedDate":"2021-10-27"},{"lineNumber":52,"author":{"gitId":"tlyi"},"content":"destroy Food","lastModifiedDate":"2021-10-27"},{"lineNumber":53,"author":{"gitId":"tlyi"},"content":"create CommandResult","lastModifiedDate":"2021-10-27"},{"lineNumber":54,"author":{"gitId":"tlyi"},"content":"AddFoodCommand -\u003e CommandResult LOGIC_COLOUR","lastModifiedDate":"2021-10-27"},{"lineNumber":55,"author":{"gitId":"tlyi"},"content":"return r","lastModifiedDate":"2021-10-27"},{"lineNumber":56,"author":{"gitId":"tlyi"},"content":"return r","lastModifiedDate":"2021-10-27"},{"lineNumber":57,"author":{"gitId":"tlyi"},"content":"destroy CommandResult","lastModifiedDate":"2021-10-27"},{"lineNumber":58,"author":{"gitId":"tlyi"},"content":"@enduml","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"tlyi":58}},{"path":"docs/diagrams/Main.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"tttyyzzz"},"content":"@startuml","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"tttyyzzz"},"content":"skinparam BackgroundColor white","lastModifiedDate":"2021-10-27"},{"lineNumber":3,"author":{"gitId":"tttyyzzz"},"content":"skinparam componentStyle rectangle","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"tttyyzzz"},"content":"component  {","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"tttyyzzz"},"content":"   component \"Main\"","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"tttyyzzz"},"content":"   component Logic","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"tttyyzzz"},"content":"   component Ui","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"tttyyzzz"},"content":"   component Data","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"tttyyzzz"},"content":"   component Storage","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"tttyyzzz"},"content":"}","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"tttyyzzz"},"content":"[user]-\u003e[Ui]","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"tttyyzzz"},"content":"[Ui] -\u003e [Main]","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"tttyyzzz"},"content":"[Main] -\u003e [Logic]","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"tttyyzzz"},"content":"[Main] -\u003e [Data]","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"tttyyzzz"},"content":"[Logic] -\u003e [Data]","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"tttyyzzz"},"content":"[Main] -\u003e Storage","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"tttyyzzz"},"content":"@enduml","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"tttyyzzz":18}},{"path":"docs/diagrams/MianClass.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"tttyyzzz"},"content":"@startuml","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"tttyyzzz"},"content":"!include Style.puml","lastModifiedDate":"2021-10-27"},{"lineNumber":3,"author":{"gitId":"tttyyzzz"},"content":"\u0027https://plantuml.com/class-diagram","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"tttyyzzz"},"content":"hide circle","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"tttyyzzz"},"content":"class Main #line.bold","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"tttyyzzz"},"content":"class FoodList DATA_COLOUR","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"tttyyzzz"},"content":"class ItemBank DATA_COLOUR","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"tttyyzzz"},"content":"class Profile DATA_COLOUR","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"tttyyzzz"},"content":"class  \"        Ui        \" as Ui","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"tttyyzzz"},"content":"class StorageManager STORAGE_COLOUR","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"tttyyzzz"},"content":"ExerciseList \"1\" \u003c-- Main :stores \u003c","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"tttyyzzz"},"content":"FutureExerciseList \"1\" \u003c-- Main: stores \u003c","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"tttyyzzz"},"content":"FoodList \"1\" \u003c-- Main : stores \u003c","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"tttyyzzz"},"content":"ItemBank \"2\" \u003c-- Main :stores  \u003c","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"tttyyzzz"},"content":"Profile \"1\" \u003c-- Main: contains \u003c","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"tttyyzzz"},"content":"Ui \"1\" \u003c-- Main : formats output \u003c","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"tttyyzzz"},"content":"StorageManager \"1\" \u003c-- Main : retrieves \u003c","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"tttyyzzz"},"content":"class Main MAIN_COLOUR {","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"tttyyzzz"},"content":"start()","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"tttyyzzz"},"content":"checkAndCreateProfile()","lastModifiedDate":"2021-10-27"},{"lineNumber":25,"author":{"gitId":"tttyyzzz"},"content":"loadsFutureExercisesToList()","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"tttyyzzz"},"content":"enterTaskModeUntilByeCommand()","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"tttyyzzz"},"content":"exit()","lastModifiedDate":"2021-10-27"},{"lineNumber":28,"author":{"gitId":"tttyyzzz"},"content":"}","lastModifiedDate":"2021-10-27"},{"lineNumber":29,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":30,"author":{"gitId":"tttyyzzz"},"content":"class FoodList DATA_COLOUR{","lastModifiedDate":"2021-10-27"},{"lineNumber":31,"author":{"gitId":"tttyyzzz"},"content":"\u0027internalItems:ArrayList\u003cFood\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"tttyyzzz"},"content":"}","lastModifiedDate":"2021-10-27"},{"lineNumber":33,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":34,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":35,"author":{"gitId":"tttyyzzz"},"content":"class ExerciseList DATA_COLOUR{","lastModifiedDate":"2021-10-27"},{"lineNumber":36,"author":{"gitId":"tttyyzzz"},"content":"\u0027internalItems:ArrayList\u003cExercise\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":37,"author":{"gitId":"tttyyzzz"},"content":"}","lastModifiedDate":"2021-10-27"},{"lineNumber":38,"author":{"gitId":"tttyyzzz"},"content":"class FutureExerciseList DATA_COLOUR{","lastModifiedDate":"2021-10-27"},{"lineNumber":39,"author":{"gitId":"tttyyzzz"},"content":"\u0027internalItems:ArrayList\u003cExercise\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":40,"author":{"gitId":"tttyyzzz"},"content":"}","lastModifiedDate":"2021-10-27"},{"lineNumber":41,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":42,"author":{"gitId":"tttyyzzz"},"content":"class Profile DATA_COLOUR{","lastModifiedDate":"2021-10-27"},{"lineNumber":43,"author":{"gitId":"tttyyzzz"},"content":"\u0027name:Name","lastModifiedDate":"2021-10-27"},{"lineNumber":44,"author":{"gitId":"tttyyzzz"},"content":"\u0027height:Height","lastModifiedDate":"2021-10-27"},{"lineNumber":45,"author":{"gitId":"tttyyzzz"},"content":"\u0027weight:Weight","lastModifiedDate":"2021-10-27"},{"lineNumber":46,"author":{"gitId":"tttyyzzz"},"content":"\u0027gender:Gender","lastModifiedDate":"2021-10-27"},{"lineNumber":47,"author":{"gitId":"tttyyzzz"},"content":"\u0027age:Age","lastModifiedDate":"2021-10-27"},{"lineNumber":48,"author":{"gitId":"tttyyzzz"},"content":"\u0027calorieGoal:CalorieGoal","lastModifiedDate":"2021-10-27"},{"lineNumber":49,"author":{"gitId":"tttyyzzz"},"content":"\u0027activityFactor:ActivityFactor","lastModifiedDate":"2021-10-27"},{"lineNumber":50,"author":{"gitId":"tttyyzzz"},"content":"}","lastModifiedDate":"2021-10-27"},{"lineNumber":51,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":52,"author":{"gitId":"tttyyzzz"},"content":"class ItemBank DATA_COLOUR{","lastModifiedDate":"2021-10-27"},{"lineNumber":53,"author":{"gitId":"tttyyzzz"},"content":"\u0027internalItems:ArrayList\u003cItem\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":54,"author":{"gitId":"tttyyzzz"},"content":"}","lastModifiedDate":"2021-10-27"},{"lineNumber":55,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":56,"author":{"gitId":"tttyyzzz"},"content":"class StorageManager STORAGE_COLOUR{","lastModifiedDate":"2021-10-27"},{"lineNumber":57,"author":{"gitId":"tttyyzzz"},"content":"\u0027profileStorage:ProfileStorage","lastModifiedDate":"2021-10-27"},{"lineNumber":58,"author":{"gitId":"tttyyzzz"},"content":"\u0027exerciseListStorage:ExerciseListStorage","lastModifiedDate":"2021-10-27"},{"lineNumber":59,"author":{"gitId":"tttyyzzz"},"content":"\u0027foodListStorage:FoodListStorage","lastModifiedDate":"2021-10-27"},{"lineNumber":60,"author":{"gitId":"tttyyzzz"},"content":"\u0027futureExerciseListStorage:FutureExerciseListStorage","lastModifiedDate":"2021-10-27"},{"lineNumber":61,"author":{"gitId":"tttyyzzz"},"content":"\u0027foodBankStorage:FoodBankStorage","lastModifiedDate":"2021-10-27"},{"lineNumber":62,"author":{"gitId":"tttyyzzz"},"content":"\u0027exerciseBankStorage:ExerciseBankStorage","lastModifiedDate":"2021-10-27"},{"lineNumber":63,"author":{"gitId":"tttyyzzz"},"content":"}","lastModifiedDate":"2021-10-27"},{"lineNumber":64,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":65,"author":{"gitId":"tttyyzzz"},"content":"class Ui UI_COLOUR","lastModifiedDate":"2021-10-27"},{"lineNumber":66,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":67,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":68,"author":{"gitId":"tttyyzzz"},"content":"@enduml","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"tttyyzzz":68}},{"path":"docs/diagrams/OverviewCommand.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"tttyyzzz"},"content":"@startuml","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"tttyyzzz"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2021-10-27"},{"lineNumber":3,"author":{"gitId":"tttyyzzz"},"content":"!include Style.puml","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"tttyyzzz"},"content":"hide footbox","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"tttyyzzz"},"content":"participant Data DATA_COLOUR","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"tttyyzzz"},"content":"participant Ui UI_COLOUR","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"tttyyzzz"},"content":"-\u003e Ui ++ UI_COLOUR: overview","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"tttyyzzz"},"content":"participant Main MAIN_COLOUR","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"tttyyzzz"},"content":"Ui -\u003e Main ++ MAIN_COLOUR: getInput()","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"tttyyzzz"},"content":"participant Parser LOGIC_COLOUR","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"tttyyzzz"},"content":"create Parser LOGIC_COLOUR","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"tttyyzzz"},"content":"Main -\u003e Parser ++ LOGIC_COLOUR : parseInput()","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"tttyyzzz"},"content":"participant OverviewCommand LOGIC_COLOUR","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"tttyyzzz"},"content":"create OverviewCommand LOGIC_COLOUR","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"tttyyzzz"},"content":"Parser -\u003e OverviewCommand ++ LOGIC_COLOUR","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"tttyyzzz"},"content":"OverviewCommand --\u003e Parser -- LOGIC_COLOUR","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"tttyyzzz"},"content":"Parser --\u003e Main -- LOGIC_COLOUR","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"tttyyzzz"},"content":"Main -\u003e OverviewCommand ++ LOGIC_COLOUR: execute()","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"tttyyzzz"},"content":"participant Statistics UI_COLOUR","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"tttyyzzz"},"content":"create Statistics","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"tttyyzzz"},"content":"OverviewCommand -\u003e Statistics ++ UI_COLOUR","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"tttyyzzz"},"content":"destroy Parser","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"tttyyzzz"},"content":"Statistics -\u003e Data ++ DATA_COLOUR","lastModifiedDate":"2021-10-27"},{"lineNumber":25,"author":{"gitId":"tttyyzzz"},"content":"Data --\u003e Statistics -- : data","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"tttyyzzz"},"content":"Statistics --\u003e OverviewCommand --","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"tttyyzzz"},"content":"participant CommandResult LOGIC_COLOUR","lastModifiedDate":"2021-10-27"},{"lineNumber":28,"author":{"gitId":"tttyyzzz"},"content":"create CommandResult","lastModifiedDate":"2021-10-27"},{"lineNumber":29,"author":{"gitId":"tttyyzzz"},"content":"OverviewCommand -\u003e CommandResult ++ LOGIC_COLOUR","lastModifiedDate":"2021-10-27"},{"lineNumber":30,"author":{"gitId":"tttyyzzz"},"content":"CommandResult -\u003e OverviewCommand --","lastModifiedDate":"2021-10-27"},{"lineNumber":31,"author":{"gitId":"tttyyzzz"},"content":"OverviewCommand --\u003e Main --","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"tttyyzzz"},"content":"destroy Statistics","lastModifiedDate":"2021-10-27"},{"lineNumber":33,"author":{"gitId":"tttyyzzz"},"content":"Main -\u003e CommandResult ++ LOGIC_COLOUR","lastModifiedDate":"2021-10-27"},{"lineNumber":34,"author":{"gitId":"tttyyzzz"},"content":"CommandResult -\u003e Main -- : overviewMessage","lastModifiedDate":"2021-10-27"},{"lineNumber":35,"author":{"gitId":"tttyyzzz"},"content":"Main -\u003e Ui -- : formatMessage()","lastModifiedDate":"2021-10-27"},{"lineNumber":36,"author":{"gitId":"tttyyzzz"},"content":"destroy OverviewCommand","lastModifiedDate":"2021-10-27"},{"lineNumber":37,"author":{"gitId":"tttyyzzz"},"content":"\u003c--Ui --","lastModifiedDate":"2021-10-27"},{"lineNumber":38,"author":{"gitId":"tttyyzzz"},"content":"destroy CommandResult","lastModifiedDate":"2021-10-27"},{"lineNumber":39,"author":{"gitId":"tttyyzzz"},"content":"@enduml","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"tttyyzzz":39}},{"path":"docs/diagrams/ParseCommandRefFrame.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"@startuml","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"tlyi"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2021-10-27"},{"lineNumber":3,"author":{"gitId":"tlyi"},"content":"!include Style.puml","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"tlyi"},"content":"autonumber","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"tlyi"},"content":"Alice -\u003e Bob: Authentication Request","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"tlyi"},"content":"Bob --\u003e Alice: Authentication Response","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"tlyi"},"content":"Alice -\u003e Bob: Another authentication Request","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"tlyi"},"content":"Alice \u003c-- Bob: another authentication Response","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"tlyi"},"content":"@enduml","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"tlyi":13}},{"path":"docs/diagrams/ParserClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"@startuml","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"tlyi"},"content":"\u0027https://plantuml.com/class-diagram","lastModifiedDate":"2021-10-27"},{"lineNumber":3,"author":{"gitId":"tlyi"},"content":"!include Style.puml","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"tlyi"},"content":"hide empty members","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"tlyi"},"content":"skinparam minclassWidth 120","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"tlyi"},"content":"skinparam Padding 2","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"tlyi"},"content":"class ParserMessages LOGIC_COLOUR","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"tlyi"},"content":"class ParserManager LOGIC_COLOUR","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"tlyi"},"content":"class ParserUtils LOGIC_COLOUR","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"tlyi"},"content":"class XYZCommandParser LOGIC_COLOUR","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"tlyi"},"content":"class XYZCommand LOGIC_COLOUR","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"tlyi"},"content":"abstract class \"{abstract}\\nCommand\" AS Command LOGIC_COLOUR","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"tlyi"},"content":"interface Parser \u003c\u003cinterface\u003e\u003e LOGIC_COLOUR","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"tlyi"},"content":"ParserManager ..\u003e ParserMessages : \u003e uses","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"tlyi"},"content":"ParserManager .down.\u003e XYZCommandParser : \u003e creates","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"tlyi"},"content":"XYZCommandParser .left|\u003e Parser","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"tlyi"},"content":"XYZCommandParser .up.\u003e ParserMessages : \u003e uses","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"tlyi"},"content":"XYZCommandParser ..\u003e ParserUtils : \u003e uses","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"tlyi"},"content":"XYZCommandParser ..\u003e XYZCommand : \u003e creates","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"tlyi"},"content":"XYZCommand -right[hidden]- XYZCommandParser","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"tlyi"},"content":"ParserManager -down[hidden]-XYZCommandParser","lastModifiedDate":"2021-10-27"},{"lineNumber":25,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"tlyi"},"content":"ParserManager ..\u003e Command :\u003e returns","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"tlyi"},"content":"XYZCommand .|\u003e Command","lastModifiedDate":"2021-10-27"},{"lineNumber":28,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":29,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":30,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":31,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"tlyi"},"content":"@enduml","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"tlyi":32}},{"path":"docs/diagrams/ProfileClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"weidak"},"content":"@startuml","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"weidak"},"content":"\u0027https://plantuml.com/class-diagram","lastModifiedDate":"2021-10-27"},{"lineNumber":3,"author":{"gitId":"weidak"},"content":"!include Style.puml","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"weidak"},"content":"hide class fields","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"weidak"},"content":"hide class methods","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"weidak"},"content":"hide interface fields","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"weidak"},"content":"hide interface methods","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"weidak"},"content":"class Profile DATA_COLOUR","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"weidak"},"content":"class Name DATA_COLOUR","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"weidak"},"content":"class Height DATA_COLOUR","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"weidak"},"content":"class Weight DATA_COLOUR","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"weidak"},"content":"class Age DATA_COLOUR","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"weidak"},"content":"class Gender DATA_COLOUR","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"weidak"},"content":"class CalorieGoal DATA_COLOUR","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"weidak"},"content":"class ActivityFactor DATA_COLOUR","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"weidak"},"content":"interface \"\u003c\u003cInterface\u003e\u003e\\nVerifiable\" DATA_COLOUR","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"weidak"},"content":"Profile *-- \"1\" Name","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"weidak"},"content":"Profile *-- \"1\" Height","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"weidak"},"content":"Profile *-- \"1\" Weight","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"weidak"},"content":"Profile *-- \"1\" Age","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"weidak"},"content":"Profile *-- \"1\" Gender","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"weidak"},"content":"Profile *-- \"1\" CalorieGoal","lastModifiedDate":"2021-10-27"},{"lineNumber":25,"author":{"gitId":"weidak"},"content":"Profile *-- \"1\" ActivityFactor","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"weidak"},"content":"\"\u003c\u003cInterface\u003e\u003e\\nVerifiable\" \u003c|.up. Name","lastModifiedDate":"2021-10-27"},{"lineNumber":28,"author":{"gitId":"weidak"},"content":"\"\u003c\u003cInterface\u003e\u003e\\nVerifiable\" \u003c|.up. Height","lastModifiedDate":"2021-10-27"},{"lineNumber":29,"author":{"gitId":"weidak"},"content":"\"\u003c\u003cInterface\u003e\u003e\\nVerifiable\" \u003c|.up. Weight","lastModifiedDate":"2021-10-27"},{"lineNumber":30,"author":{"gitId":"weidak"},"content":"\"\u003c\u003cInterface\u003e\u003e\\nVerifiable\" \u003c|.up. Age","lastModifiedDate":"2021-10-27"},{"lineNumber":31,"author":{"gitId":"weidak"},"content":"\"\u003c\u003cInterface\u003e\u003e\\nVerifiable\" \u003c|.up. Gender","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"weidak"},"content":"\"\u003c\u003cInterface\u003e\u003e\\nVerifiable\" \u003c|.up. CalorieGoal","lastModifiedDate":"2021-10-27"},{"lineNumber":33,"author":{"gitId":"weidak"},"content":"\"\u003c\u003cInterface\u003e\u003e\\nVerifiable\" \u003c|.up. ActivityFactor","lastModifiedDate":"2021-10-27"},{"lineNumber":34,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":35,"author":{"gitId":"weidak"},"content":"@enduml","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"weidak":35}},{"path":"docs/diagrams/ProfileStorage.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"weidak"},"content":"@startuml","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"weidak"},"content":"\u0027https://plantuml.com/class-diagram","lastModifiedDate":"2021-10-27"},{"lineNumber":3,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"weidak"},"content":"!include Style.puml","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"weidak"},"content":"hide class fields","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"weidak"},"content":"hide class methods","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"weidak"},"content":"hide interface fields","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"weidak"},"content":"hide interface methods","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"weidak"},"content":"class ProfileDecoder STORAGE_COLOUR","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"weidak"},"content":"class ProfileStorage STORAGE_COLOUR","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"weidak"},"content":"class \"{abstract}\\nStorage\" STORAGE_COLOUR","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"weidak"},"content":"class ProfileEncoder STORAGE_COLOUR","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"weidak"},"content":"interface \"\u003c\u003cinterface\u003e\u003e\\nProfileStorageInterface\" STORAGE_COLOUR","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"weidak"},"content":"\"{abstract}\\nStorage\" \u003c|-down- ProfileStorage","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"weidak"},"content":"\"\u003c\u003cinterface\u003e\u003e\\nProfileStorageInterface\" \u003c|.left. ProfileStorage","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"weidak"},"content":"ProfileDecoder .up.\u003e ProfileStorage","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"weidak"},"content":"ProfileEncoder .up.\u003e ProfileStorage","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"weidak"},"content":"@enduml","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"weidak":21}},{"path":"docs/diagrams/StorageManagerClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"weidak"},"content":"@startuml","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"weidak"},"content":"\u0027https://plantuml.com/class-diagram","lastModifiedDate":"2021-10-27"},{"lineNumber":3,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"weidak"},"content":"!include Style.puml","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"weidak"},"content":"hide class fields","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"weidak"},"content":"hide class methods","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"weidak"},"content":"hide interface fields","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"weidak"},"content":"hide interface methods","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"weidak"},"content":"class StorageManager STORAGE_COLOUR","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"weidak"},"content":"class ProfileStorage STORAGE_COLOUR","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"weidak"},"content":"class FoodBankStorage STORAGE_COLOUR","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"weidak"},"content":"class FoodListStorage STORAGE_COLOUR","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"weidak"},"content":"class ExerciseListStorage STORAGE_COLOUR","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"weidak"},"content":"class FutureExerciseListStorage STORAGE_COLOUR","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"weidak"},"content":"class ExerciseBankStorage STORAGE_COLOUR","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"weidak"},"content":"interface \"\u003c\u003cinterface\u003e\u003e\\nProfileStorageInterface\" STORAGE_COLOUR","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"weidak"},"content":"interface \"\u003c\u003cinterface\u003e\u003e\\nFoodBankStorageInterface\" STORAGE_COLOUR","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"weidak"},"content":"interface \"\u003c\u003cinterface\u003e\u003e\\nExerciseBankStorageInterface\" STORAGE_COLOUR","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"weidak"},"content":"interface \"\u003c\u003cinterface\u003e\u003e\\nFoodListStorageInterface\" STORAGE_COLOUR","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"weidak"},"content":"interface \"\u003c\u003cinterface\u003e\u003e\\nExerciseListStorageInterface\" STORAGE_COLOUR","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"weidak"},"content":"interface \"\u003c\u003cinterface\u003e\u003e\\nUpcomingStorageInterface\" STORAGE_COLOUR","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"weidak"},"content":"\"\u003c\u003cinterface\u003e\u003e\\nProfileStorageInterface\" \u003c|.. StorageManager","lastModifiedDate":"2021-10-27"},{"lineNumber":25,"author":{"gitId":"weidak"},"content":"\"\u003c\u003cinterface\u003e\u003e\\nFoodBankStorageInterface\" \u003c|.. StorageManager","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"weidak"},"content":"\"\u003c\u003cinterface\u003e\u003e\\nExerciseBankStorageInterface\" \u003c|.. StorageManager","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"weidak"},"content":"\"\u003c\u003cinterface\u003e\u003e\\nFoodListStorageInterface\" \u003c|.. StorageManager","lastModifiedDate":"2021-10-27"},{"lineNumber":28,"author":{"gitId":"weidak"},"content":"\"\u003c\u003cinterface\u003e\u003e\\nExerciseListStorageInterface\" \u003c|.. StorageManager","lastModifiedDate":"2021-10-27"},{"lineNumber":29,"author":{"gitId":"weidak"},"content":"\"\u003c\u003cinterface\u003e\u003e\\nUpcomingStorageInterface\" \u003c|.. StorageManager","lastModifiedDate":"2021-10-27"},{"lineNumber":30,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":31,"author":{"gitId":"weidak"},"content":"\"\u003c\u003cinterface\u003e\u003e\\nProfileStorageInterface\" \u003c|.. ProfileStorage","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"weidak"},"content":"\"\u003c\u003cinterface\u003e\u003e\\nFoodBankStorageInterface\" \u003c|.. FoodBankStorage","lastModifiedDate":"2021-10-27"},{"lineNumber":33,"author":{"gitId":"weidak"},"content":"\"\u003c\u003cinterface\u003e\u003e\\nExerciseBankStorageInterface\" \u003c|.. ExerciseBankStorage","lastModifiedDate":"2021-10-27"},{"lineNumber":34,"author":{"gitId":"weidak"},"content":"\"\u003c\u003cinterface\u003e\u003e\\nFoodListStorageInterface\" \u003c|.. FoodListStorage","lastModifiedDate":"2021-10-27"},{"lineNumber":35,"author":{"gitId":"weidak"},"content":"\"\u003c\u003cinterface\u003e\u003e\\nExerciseListStorageInterface\" \u003c|.. ExerciseListStorage","lastModifiedDate":"2021-10-27"},{"lineNumber":36,"author":{"gitId":"weidak"},"content":"\"\u003c\u003cinterface\u003e\u003e\\nUpcomingStorageInterface\" \u003c|.. FutureExerciseListStorage","lastModifiedDate":"2021-10-27"},{"lineNumber":37,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":38,"author":{"gitId":"weidak"},"content":"StorageManager --\u003e \"1\" ProfileStorage","lastModifiedDate":"2021-10-27"},{"lineNumber":39,"author":{"gitId":"weidak"},"content":"StorageManager --\u003e \"1\" FoodBankStorage","lastModifiedDate":"2021-10-27"},{"lineNumber":40,"author":{"gitId":"weidak"},"content":"StorageManager --\u003e \"1\" ExerciseBankStorage","lastModifiedDate":"2021-10-27"},{"lineNumber":41,"author":{"gitId":"weidak"},"content":"StorageManager --\u003e \"1\" FoodListStorage","lastModifiedDate":"2021-10-27"},{"lineNumber":42,"author":{"gitId":"weidak"},"content":"StorageManager --\u003e \"1\" ExerciseListStorage","lastModifiedDate":"2021-10-27"},{"lineNumber":43,"author":{"gitId":"weidak"},"content":"StorageManager --\u003e \"1\" FutureExerciseListStorage","lastModifiedDate":"2021-10-27"},{"lineNumber":44,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":45,"author":{"gitId":"weidak"},"content":"@enduml","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"weidak":45}},{"path":"docs/diagrams/Style.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"@startuml","lastModifiedDate":"2021-10-22"},{"lineNumber":2,"author":{"gitId":"tlyi"},"content":"\u0027COLOURS","lastModifiedDate":"2021-10-22"},{"lineNumber":3,"author":{"gitId":"tlyi"},"content":"!define BLACK #2F3030","lastModifiedDate":"2021-10-22"},{"lineNumber":4,"author":{"gitId":"tlyi"},"content":"!define UI_COLOUR #FFCCFF","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"tlyi"},"content":"!define UI_FADED_COLOUR #FFE6F3","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"tlyi"},"content":"!define MAIN_COLOUR #EA6B66","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"tlyi"},"content":"!define MAIN_FADED_COLOUR #F1C3BE","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"tlyi"},"content":"!define LOGIC_COLOUR #FFFF66","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"tlyi"},"content":"!define LOGIC_FADED_COLOUR #FFF7C4","lastModifiedDate":"2021-10-22"},{"lineNumber":10,"author":{"gitId":"tlyi"},"content":"!define DATA_COLOUR #99FFFF","lastModifiedDate":"2021-10-22"},{"lineNumber":11,"author":{"gitId":"tlyi"},"content":"!define DATA_FADED_COLOUR #DAE8FC","lastModifiedDate":"2021-10-22"},{"lineNumber":12,"author":{"gitId":"tlyi"},"content":"!define STORAGE_COLOUR #D5E8D4","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"tlyi"},"content":"!define STORAGE_FADED_COLOUR #E1F7E7","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"tlyi"},"content":"hide circle","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"tlyi"},"content":"hide footbox","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":17,"author":{"gitId":"tlyi"},"content":"skinparam Shadowing false","lastModifiedDate":"2021-10-22"},{"lineNumber":18,"author":{"gitId":"tlyi"},"content":"skinparam class {","lastModifiedDate":"2021-10-22"},{"lineNumber":19,"author":{"gitId":"tlyi"},"content":"    BorderColor BLACK","lastModifiedDate":"2021-10-22"},{"lineNumber":20,"author":{"gitId":"tlyi"},"content":"    BorderThickness 1","lastModifiedDate":"2021-10-22"},{"lineNumber":21,"author":{"gitId":"tlyi"},"content":"    AttributeIconSize 0","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"tlyi"},"content":"}","lastModifiedDate":"2021-10-22"},{"lineNumber":23,"author":{"gitId":"tlyi"},"content":"skinparam participant {","lastModifiedDate":"2021-10-22"},{"lineNumber":24,"author":{"gitId":"tlyi"},"content":"    BorderColor BLACK","lastModifiedDate":"2021-10-22"},{"lineNumber":25,"author":{"gitId":"tlyi"},"content":"    BorderThickness 1","lastModifiedDate":"2021-10-22"},{"lineNumber":26,"author":{"gitId":"tlyi"},"content":"}","lastModifiedDate":"2021-10-22"},{"lineNumber":27,"author":{"gitId":"tlyi"},"content":"skinparam arrow {","lastModifiedDate":"2021-10-22"},{"lineNumber":28,"author":{"gitId":"tlyi"},"content":"    Color BLACK","lastModifiedDate":"2021-10-22"},{"lineNumber":29,"author":{"gitId":"tlyi"},"content":"}","lastModifiedDate":"2021-10-22"},{"lineNumber":30,"author":{"gitId":"tlyi"},"content":"skinparam sequence {","lastModifiedDate":"2021-10-22"},{"lineNumber":31,"author":{"gitId":"tlyi"},"content":"    TitleFontColor BLACK","lastModifiedDate":"2021-10-22"},{"lineNumber":32,"author":{"gitId":"tlyi"},"content":"    LifeLineBackgroundColor WHITE","lastModifiedDate":"2021-10-22"},{"lineNumber":33,"author":{"gitId":"tlyi"},"content":"    LifeLineBorderColor BLACK","lastModifiedDate":"2021-10-22"},{"lineNumber":34,"author":{"gitId":"tlyi"},"content":"}","lastModifiedDate":"2021-10-22"},{"lineNumber":35,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":36,"author":{"gitId":"weidak"},"content":"hide circle","lastModifiedDate":"2021-10-27"},{"lineNumber":37,"author":{"gitId":"weidak"},"content":"hide enum methods","lastModifiedDate":"2021-10-27"},{"lineNumber":38,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":39,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":40,"author":{"gitId":"tlyi"},"content":"@enduml","lastModifiedDate":"2021-10-22"}],"authorContributionMap":{"weidak":2,"tlyi":38}},{"path":"docs/diagrams/UI.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"tttyyzzz"},"content":"@startuml","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"tttyyzzz"},"content":"\u0027https://plantuml.com/class-diagram","lastModifiedDate":"2021-10-27"},{"lineNumber":3,"author":{"gitId":"tttyyzzz"},"content":"hide circle","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"tttyyzzz"},"content":"class Ui","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"tttyyzzz"},"content":"class Main","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"tttyyzzz"},"content":"class Ui {","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"tttyyzzz"},"content":"getUserInput(): String[]","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"tttyyzzz"},"content":"formatMessageFramedWithDivider(String[] messages)","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"tttyyzzz"},"content":"printStartApplicationPage()","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"tttyyzzz"},"content":"printStartMessage(boolean isProfileComplete, boolean isProfilePresent)","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"tttyyzzz"},"content":"}","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"tttyyzzz"},"content":"Main --\u003e Ui : format \u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"tttyyzzz"},"content":"@enduml","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"tttyyzzz":14}},{"path":"docs/diagrams/UiSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"tttyyzzz"},"content":"@startuml","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"tttyyzzz"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2021-10-27"},{"lineNumber":3,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"tttyyzzz"},"content":"!include style.puml","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"tttyyzzz"},"content":"hide footbox","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"tttyyzzz"},"content":"actor User","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"tttyyzzz"},"content":"participant Ui","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"tttyyzzz"},"content":"participant Main","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"tttyyzzz"},"content":"User -\u003e Ui ++ : getInput()","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"tttyyzzz"},"content":"Ui -\u003e Main ++ : \"performs commands\"","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"tttyyzzz"},"content":"Main --\u003e Ui -- : formatMessageWithFramedDivider()","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"tttyyzzz"},"content":"Ui --\u003e User --","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"tttyyzzz"},"content":"@enduml","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"tttyyzzz":13}},{"path":"docs/team/tayweida.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"weidak"},"content":"# Weida - Project Portfolio Page","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Overview","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"### Summary of Contributions","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"weidak":1,"-":5}},{"path":"src/main/java/seedu/duke/Main.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"weidak"},"content":"import seedu.duke.data.DataManager;","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"tlyi"},"content":"import seedu.duke.data.item.exercise.Exercise;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"tlyi"},"content":"import seedu.duke.logic.LogicManager;","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"tlyi"},"content":"import seedu.duke.logic.commands.CommandResult;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"tlyi"},"content":"import seedu.duke.storage.StorageManager;","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"weidak"},"content":"import seedu.duke.storage.exceptions.UnableToReadFileException;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"tlyi"},"content":"import seedu.duke.storage.exceptions.UnableToWriteFileException;","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"tlyi"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"xingjie99"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-23"},{"lineNumber":13,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":14,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"tlyi"},"content":"/**","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"tlyi"},"content":" * Main class of Fitbot.","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"tlyi"},"content":" * Initialises the application and starts interaction with user.","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"tlyi"},"content":" */","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"tlyi"},"content":"public class Main {","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"weidak"},"content":"    private DataManager dataManager;","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"tlyi"},"content":"    private Ui ui;","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"weidak"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"tlyi"},"content":"    private LogicManager logicManager;","lastModifiedDate":"2021-10-27"},{"lineNumber":25,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":27,"author":{"gitId":"tlyi"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"tlyi"},"content":"     * Entry point of the application.","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"tlyi"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"xingjie99"},"content":"    public static void main(String[] args) throws UnableToWriteFileException {","lastModifiedDate":"2021-10-23"},{"lineNumber":31,"author":{"gitId":"tlyi"},"content":"        new Main().run(args);","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":34,"author":{"gitId":"tlyi"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":35,"author":{"gitId":"tlyi"},"content":"     * Runs the application until command is given to exit it.","lastModifiedDate":"2021-10-10"},{"lineNumber":36,"author":{"gitId":"tlyi"},"content":"     **/","lastModifiedDate":"2021-10-10"},{"lineNumber":37,"author":{"gitId":"xingjie99"},"content":"    private void run(String[] args) throws UnableToWriteFileException {","lastModifiedDate":"2021-10-23"},{"lineNumber":38,"author":{"gitId":"tlyi"},"content":"        start();","lastModifiedDate":"2021-10-10"},{"lineNumber":39,"author":{"gitId":"tttyyzzz"},"content":"        checkAndCreateProfile();","lastModifiedDate":"2021-10-26"},{"lineNumber":40,"author":{"gitId":"xingjie99"},"content":"        loadsFutureExercisesToList();","lastModifiedDate":"2021-10-23"},{"lineNumber":41,"author":{"gitId":"tlyi"},"content":"        enterTaskModeUntilByeCommand();","lastModifiedDate":"2021-10-10"},{"lineNumber":42,"author":{"gitId":"tlyi"},"content":"        exit();","lastModifiedDate":"2021-10-10"},{"lineNumber":43,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":44,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":45,"author":{"gitId":"tttyyzzz"},"content":"    //@@author tttyyzzz","lastModifiedDate":"2021-10-27"},{"lineNumber":46,"author":{"gitId":"tttyyzzz"},"content":"    private void checkAndCreateProfile() {","lastModifiedDate":"2021-10-26"},{"lineNumber":47,"author":{"gitId":"tttyyzzz"},"content":"        dataManager.setProfile(new StartState(dataManager.getProfile(), storageManager, ui).checkAndCreateProfile());","lastModifiedDate":"2021-10-27"},{"lineNumber":48,"author":{"gitId":"tttyyzzz"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":49,"author":{"gitId":"tttyyzzz"},"content":"    //@@author","lastModifiedDate":"2021-10-27"},{"lineNumber":50,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":51,"author":{"gitId":"tlyi"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":52,"author":{"gitId":"tlyi"},"content":"     * Initialises the application by creating the required objects and loading data from the","lastModifiedDate":"2021-10-13"},{"lineNumber":53,"author":{"gitId":"tlyi"},"content":"     * storage file, then showing the welcome message.","lastModifiedDate":"2021-10-10"},{"lineNumber":54,"author":{"gitId":"tlyi"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":55,"author":{"gitId":"tlyi"},"content":"    private void start() {","lastModifiedDate":"2021-10-10"},{"lineNumber":56,"author":{"gitId":"weidak"},"content":"        this.storageManager \u003d new StorageManager();","lastModifiedDate":"2021-10-20"},{"lineNumber":57,"author":{"gitId":"tlyi"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2021-10-11"},{"lineNumber":58,"author":{"gitId":"weidak"},"content":"        try {","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"weidak"},"content":"            dataManager \u003d storageManager.loadAll();","lastModifiedDate":"2021-10-27"},{"lineNumber":60,"author":{"gitId":"weidak"},"content":"        } catch (UnableToReadFileException e) {","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"weidak"},"content":"            dataManager \u003d new DataManager();","lastModifiedDate":"2021-10-27"},{"lineNumber":62,"author":{"gitId":"tlyi"},"content":"            ui.formatMessageFramedWithDivider(e.getMessage());","lastModifiedDate":"2021-10-13"},{"lineNumber":63,"author":{"gitId":"weidak"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":64,"author":{"gitId":"weidak"},"content":"        this.logicManager \u003d new LogicManager(storageManager, dataManager);","lastModifiedDate":"2021-10-27"},{"lineNumber":65,"author":{"gitId":"weidak"},"content":"        ui.printStartMessage(","lastModifiedDate":"2021-10-27"},{"lineNumber":66,"author":{"gitId":"weidak"},"content":"                dataManager.getProfile().checkProfileComplete(),","lastModifiedDate":"2021-10-27"},{"lineNumber":67,"author":{"gitId":"weidak"},"content":"                dataManager.getProfile().checkProfilePresent());","lastModifiedDate":"2021-10-27"},{"lineNumber":68,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":69,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":70,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":71,"author":{"gitId":"tlyi"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":72,"author":{"gitId":"tlyi"},"content":"     * Reads the user input and executes appropriate command.","lastModifiedDate":"2021-10-10"},{"lineNumber":73,"author":{"gitId":"tlyi"},"content":"     * Runs indefinitely until user inputs the Bye command.","lastModifiedDate":"2021-10-10"},{"lineNumber":74,"author":{"gitId":"tlyi"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":75,"author":{"gitId":"tlyi"},"content":"    private void enterTaskModeUntilByeCommand() {","lastModifiedDate":"2021-10-10"},{"lineNumber":76,"author":{"gitId":"tlyi"},"content":"        CommandResult result;","lastModifiedDate":"2021-10-27"},{"lineNumber":77,"author":{"gitId":"tlyi"},"content":"        do {","lastModifiedDate":"2021-10-10"},{"lineNumber":78,"author":{"gitId":"tlyi"},"content":"            String userInput \u003d ui.getUserInput();","lastModifiedDate":"2021-10-11"},{"lineNumber":79,"author":{"gitId":"tlyi"},"content":"            result \u003d logicManager.execute(userInput);","lastModifiedDate":"2021-10-27"},{"lineNumber":80,"author":{"gitId":"tlyi"},"content":"            ui.formatMessageFramedWithDivider(result.toString());","lastModifiedDate":"2021-10-11"},{"lineNumber":81,"author":{"gitId":"tlyi"},"content":"        } while (!result.isBye());","lastModifiedDate":"2021-10-27"},{"lineNumber":82,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":83,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":84,"author":{"gitId":"xingjie99"},"content":"    //@@author xingjie99","lastModifiedDate":"2021-10-27"},{"lineNumber":85,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":86,"author":{"gitId":"xingjie99"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":87,"author":{"gitId":"xingjie99"},"content":"     * Check whether the dates of the exercises in the future exercise list have passed.","lastModifiedDate":"2021-10-23"},{"lineNumber":88,"author":{"gitId":"xingjie99"},"content":"     * If the dates have passed, move the exercises in the exercise list.","lastModifiedDate":"2021-10-23"},{"lineNumber":89,"author":{"gitId":"xingjie99"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":90,"author":{"gitId":"xingjie99"},"content":"    private void loadsFutureExercisesToList() throws UnableToWriteFileException {","lastModifiedDate":"2021-10-23"},{"lineNumber":91,"author":{"gitId":"xingjie99"},"content":"        int index \u003d 0;","lastModifiedDate":"2021-10-23"},{"lineNumber":92,"author":{"gitId":"xingjie99"},"content":"        LocalDate today \u003d LocalDate.now();","lastModifiedDate":"2021-10-23"},{"lineNumber":93,"author":{"gitId":"xingjie99"},"content":"        while (dataManager.getFutureExerciseItems().getSize() !\u003d 0","lastModifiedDate":"2021-10-27"},{"lineNumber":94,"author":{"gitId":"xingjie99"},"content":"                \u0026\u0026 (dataManager.getFutureExerciseItems().getItem(index).getDate().isBefore(today)","lastModifiedDate":"2021-10-27"},{"lineNumber":95,"author":{"gitId":"xingjie99"},"content":"                || dataManager.getFutureExerciseItems().getItem(index).getDate().isEqual(today))) {","lastModifiedDate":"2021-10-27"},{"lineNumber":96,"author":{"gitId":"xingjie99"},"content":"            String name \u003d dataManager.getFutureExerciseItems().getItem(index).getName();","lastModifiedDate":"2021-10-27"},{"lineNumber":97,"author":{"gitId":"xingjie99"},"content":"            int calories \u003d dataManager.getFutureExerciseItems().getItem(index).getCalories();","lastModifiedDate":"2021-10-27"},{"lineNumber":98,"author":{"gitId":"xingjie99"},"content":"            LocalDate date \u003d dataManager.getFutureExerciseItems().getItem(index).getDate();","lastModifiedDate":"2021-10-27"},{"lineNumber":99,"author":{"gitId":"xingjie99"},"content":"            dataManager.getExerciseItems().addItem(new Exercise(name, calories, date));","lastModifiedDate":"2021-10-27"},{"lineNumber":100,"author":{"gitId":"xingjie99"},"content":"            dataManager.getFutureExerciseItems().deleteItem(index);","lastModifiedDate":"2021-10-27"},{"lineNumber":101,"author":{"gitId":"xingjie99"},"content":"            storageManager.saveExerciseList(dataManager.getExerciseItems());","lastModifiedDate":"2021-10-27"},{"lineNumber":102,"author":{"gitId":"xingjie99"},"content":"            storageManager.saveFutureExerciseList(dataManager.getFutureExerciseItems());","lastModifiedDate":"2021-10-27"},{"lineNumber":103,"author":{"gitId":"xingjie99"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":104,"author":{"gitId":"xingjie99"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":105,"author":{"gitId":"xingjie99"},"content":"    //@@author","lastModifiedDate":"2021-10-27"},{"lineNumber":106,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":107,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":108,"author":{"gitId":"tlyi"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":109,"author":{"gitId":"tlyi"},"content":"     * Exits the application.","lastModifiedDate":"2021-10-10"},{"lineNumber":110,"author":{"gitId":"tlyi"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":111,"author":{"gitId":"tlyi"},"content":"    private void exit() {","lastModifiedDate":"2021-10-10"},{"lineNumber":112,"author":{"gitId":"tlyi"},"content":"        System.exit(0);","lastModifiedDate":"2021-10-10"},{"lineNumber":113,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":114,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":115,"author":{"gitId":"tlyi"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"weidak":14,"tttyyzzz":9,"xingjie99":28,"tlyi":64}},{"path":"src/main/java/seedu/duke/StartState.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tttyyzzz"},"content":"package seedu.duke;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"tttyyzzz"},"content":"import seedu.duke.data.profile.Profile;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"tttyyzzz"},"content":"import seedu.duke.data.profile.attributes.ActivityFactor;","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"tttyyzzz"},"content":"import seedu.duke.data.profile.attributes.Age;","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"tttyyzzz"},"content":"import seedu.duke.data.profile.attributes.CalorieGoal;","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"tttyyzzz"},"content":"import seedu.duke.data.profile.attributes.Gender;","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"tttyyzzz"},"content":"import seedu.duke.data.profile.attributes.Height;","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"tttyyzzz"},"content":"import seedu.duke.data.profile.attributes.Name;","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"tttyyzzz"},"content":"import seedu.duke.data.profile.attributes.Weight;","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"tttyyzzz"},"content":"import seedu.duke.logic.parser.exceptions.ParamMissingException;","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"tttyyzzz"},"content":"import seedu.duke.storage.StorageManager;","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"tttyyzzz"},"content":"import seedu.duke.storage.exceptions.UnableToWriteFileException;","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"tttyyzzz"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"tttyyzzz"},"content":"public class StartState {","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"tttyyzzz"},"content":"    public static final char MALE_CHAR \u003d \u0027M\u0027;","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"tttyyzzz"},"content":"    public static final String MESSAGE_MALE \u003d \"You are a male.\";","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"tttyyzzz"},"content":"    public static final String MESSAGE_FEMALE \u003d \"You are a female.\";","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"tttyyzzz"},"content":"    public static final String MESSAGE_NAME \u003d \"Nice name you have there! Hello %s\";","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"tttyyzzz"},"content":"    public static final String MESSAGE_HEIGHT \u003d \"Your height is %scm.\";","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"tttyyzzz"},"content":"    public static final String MESSAGE_WEIGHT \u003d \"Your weight is %skg.\";","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"tttyyzzz"},"content":"    public static final String MESSAGE_AGE \u003d \"You are %s years old.\";","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"tttyyzzz"},"content":"    public static final String MESSAGE_CALORIE_GOAL \u003d \"You calorie goal is %s cal.\";","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"tttyyzzz"},"content":"    public static final String MESSAGE_ACTIVITY_FACTOR \u003d \"Your activity factor is %s.\";","lastModifiedDate":"2021-10-26"},{"lineNumber":27,"author":{"gitId":"tttyyzzz"},"content":"    private Profile profile;","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"tttyyzzz"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"tttyyzzz"},"content":"    private Ui ui;","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":31,"author":{"gitId":"tttyyzzz"},"content":"    public StartState(Profile profile, StorageManager storageManager, Ui ui) {","lastModifiedDate":"2021-10-25"},{"lineNumber":32,"author":{"gitId":"tttyyzzz"},"content":"        this.profile \u003d profile;","lastModifiedDate":"2021-10-25"},{"lineNumber":33,"author":{"gitId":"tttyyzzz"},"content":"        this.storageManager \u003d storageManager;","lastModifiedDate":"2021-10-25"},{"lineNumber":34,"author":{"gitId":"tttyyzzz"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2021-10-25"},{"lineNumber":35,"author":{"gitId":"tttyyzzz"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":36,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":37,"author":{"gitId":"tttyyzzz"},"content":"    public static final String MESSAGE_INVALID_POSITIVE_INT_INPUT \u003d \"Invalid input, \"","lastModifiedDate":"2021-10-25"},{"lineNumber":38,"author":{"gitId":"tttyyzzz"},"content":"            + \"please input a valid positive whole number\";","lastModifiedDate":"2021-10-25"},{"lineNumber":39,"author":{"gitId":"tttyyzzz"},"content":"    public static final String MESSAGE_INVALID_POSITIVE_DOUBLE_INPUT \u003d \"Invalid input,\"","lastModifiedDate":"2021-10-25"},{"lineNumber":40,"author":{"gitId":"tttyyzzz"},"content":"            + \" please input a valid positive number\";","lastModifiedDate":"2021-10-25"},{"lineNumber":41,"author":{"gitId":"tttyyzzz"},"content":"    public static final String MESSAGE_EMPTY_INPUT \u003d \"Input cannot be empty\";","lastModifiedDate":"2021-10-25"},{"lineNumber":42,"author":{"gitId":"tttyyzzz"},"content":"    public static final String MESSAGE_INTRO_CALORIE_GOAL \u003d \"Please input your net calorie goal.\";","lastModifiedDate":"2021-10-25"},{"lineNumber":43,"author":{"gitId":"tttyyzzz"},"content":"    public static final String MESSAGE_INTRO_AGE \u003d \"How old are you?\";","lastModifiedDate":"2021-10-26"},{"lineNumber":44,"author":{"gitId":"tttyyzzz"},"content":"    public static final String MESSAGE_INTRO_GENDER \u003d \"What is your gender?(If you are a male, type \u0027m\u0027\"","lastModifiedDate":"2021-10-26"},{"lineNumber":45,"author":{"gitId":"tttyyzzz"},"content":"            + \", if you are a female , type \u0027f\u0027)\";","lastModifiedDate":"2021-10-26"},{"lineNumber":46,"author":{"gitId":"tttyyzzz"},"content":"    public static final String MESSAGE_INTRO_WEIGHT \u003d \"What\u0027s your weight? (in kg)\";","lastModifiedDate":"2021-10-26"},{"lineNumber":47,"author":{"gitId":"tttyyzzz"},"content":"    public static final String MESSAGE_INTRO_NAME \u003d \"What\u0027s your name?\";","lastModifiedDate":"2021-10-25"},{"lineNumber":48,"author":{"gitId":"tttyyzzz"},"content":"    public static final String MESSAGE_INTRO_HEIGHT \u003d \"What\u0027s your height? (in cm)\";","lastModifiedDate":"2021-10-26"},{"lineNumber":49,"author":{"gitId":"tttyyzzz"},"content":"    public static final String MESSAGE_CREATE_PROFILE_SUCCESSFUL \u003d \"Profile created successfully\";","lastModifiedDate":"2021-10-25"},{"lineNumber":50,"author":{"gitId":"tttyyzzz"},"content":"    public static final String MESSAGE_INTRO_ACTIVITY_FACTOR \u003d \"In terms of activity level, how active are you?\\n\"","lastModifiedDate":"2021-10-26"},{"lineNumber":51,"author":{"gitId":"tttyyzzz"},"content":"            + \"Based on the rubics below, please key in 1 to 5 based on how active you are.\\n\"","lastModifiedDate":"2021-10-26"},{"lineNumber":52,"author":{"gitId":"tttyyzzz"},"content":"            + \"1 -\u003e Sedentary - Little or no exercise\\n\"","lastModifiedDate":"2021-10-25"},{"lineNumber":53,"author":{"gitId":"tttyyzzz"},"content":"            + \"2 -\u003e Lightly Active - Light exercise or sports, around 1-3 days a week\\n\"","lastModifiedDate":"2021-10-25"},{"lineNumber":54,"author":{"gitId":"tttyyzzz"},"content":"            + \"3 -\u003e Moderately Active - Regular exercise or sports, around 3-5 days a week\\n\"","lastModifiedDate":"2021-10-25"},{"lineNumber":55,"author":{"gitId":"tttyyzzz"},"content":"            + \"4 -\u003e Very Active - Frequent exercise or sports, around 6-7 days a week\\n\"","lastModifiedDate":"2021-10-25"},{"lineNumber":56,"author":{"gitId":"tttyyzzz"},"content":"            + \"5 -\u003e If you are extra active - Sports or exercising is your passion and a physical jobscope.\";","lastModifiedDate":"2021-10-25"},{"lineNumber":57,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":58,"author":{"gitId":"tttyyzzz"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":59,"author":{"gitId":"tttyyzzz"},"content":"     * Check whether user\u0027s profile is complete.","lastModifiedDate":"2021-10-25"},{"lineNumber":60,"author":{"gitId":"tttyyzzz"},"content":"     * If profile is complete, the program will exit this method.","lastModifiedDate":"2021-10-25"},{"lineNumber":61,"author":{"gitId":"tttyyzzz"},"content":"     * If the profile is partially complete, it will assist user in completing the profile.","lastModifiedDate":"2021-10-25"},{"lineNumber":62,"author":{"gitId":"tttyyzzz"},"content":"     * If all parameters of profile is incorrect or a new user, user is required to complete","lastModifiedDate":"2021-10-25"},{"lineNumber":63,"author":{"gitId":"tttyyzzz"},"content":"     * all the particulars before saving their profile data.","lastModifiedDate":"2021-10-25"},{"lineNumber":64,"author":{"gitId":"tttyyzzz"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":65,"author":{"gitId":"tttyyzzz"},"content":"    public Profile checkAndCreateProfile() {","lastModifiedDate":"2021-10-26"},{"lineNumber":66,"author":{"gitId":"tttyyzzz"},"content":"        if (profile.checkProfileComplete()) {","lastModifiedDate":"2021-10-25"},{"lineNumber":67,"author":{"gitId":"tttyyzzz"},"content":"            return profile;","lastModifiedDate":"2021-10-27"},{"lineNumber":68,"author":{"gitId":"tttyyzzz"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":69,"author":{"gitId":"tttyyzzz"},"content":"        if (profile.checkProfilePresent()) {","lastModifiedDate":"2021-10-25"},{"lineNumber":70,"author":{"gitId":"tttyyzzz"},"content":"            assert !profile.checkProfileComplete() : \"profile is incomplete\";","lastModifiedDate":"2021-10-25"},{"lineNumber":71,"author":{"gitId":"tttyyzzz"},"content":"            repairProfile();","lastModifiedDate":"2021-10-25"},{"lineNumber":72,"author":{"gitId":"tttyyzzz"},"content":"        } else {","lastModifiedDate":"2021-10-25"},{"lineNumber":73,"author":{"gitId":"tttyyzzz"},"content":"            createNewProfile();","lastModifiedDate":"2021-10-25"},{"lineNumber":74,"author":{"gitId":"tttyyzzz"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":75,"author":{"gitId":"tttyyzzz"},"content":"        ui.formatMessageFramedWithDivider(MESSAGE_CREATE_PROFILE_SUCCESSFUL,","lastModifiedDate":"2021-10-25"},{"lineNumber":76,"author":{"gitId":"tttyyzzz"},"content":"                ui.MESSAGE_DIRECT_HELP);","lastModifiedDate":"2021-10-25"},{"lineNumber":77,"author":{"gitId":"tttyyzzz"},"content":"        return profile;","lastModifiedDate":"2021-10-26"},{"lineNumber":78,"author":{"gitId":"tttyyzzz"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":79,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":80,"author":{"gitId":"tttyyzzz"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":81,"author":{"gitId":"tttyyzzz"},"content":"     * Assists user in fixing remaining profile particulars.","lastModifiedDate":"2021-10-25"},{"lineNumber":82,"author":{"gitId":"tttyyzzz"},"content":"     * The profile changes will be saved on every update.","lastModifiedDate":"2021-10-25"},{"lineNumber":83,"author":{"gitId":"tttyyzzz"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":84,"author":{"gitId":"tttyyzzz"},"content":"    private void repairProfile() {","lastModifiedDate":"2021-10-25"},{"lineNumber":85,"author":{"gitId":"tttyyzzz"},"content":"        ui.formatMessageWithTopDivider();","lastModifiedDate":"2021-10-26"},{"lineNumber":86,"author":{"gitId":"tttyyzzz"},"content":"        while (!profile.checkProfileComplete()) {","lastModifiedDate":"2021-10-25"},{"lineNumber":87,"author":{"gitId":"tttyyzzz"},"content":"            try {","lastModifiedDate":"2021-10-25"},{"lineNumber":88,"author":{"gitId":"tttyyzzz"},"content":"                if (!profile.getProfileName().isValid()) {","lastModifiedDate":"2021-10-25"},{"lineNumber":89,"author":{"gitId":"tttyyzzz"},"content":"                    createNewProfileName(profile); // if user just enter and exit, it will cause his name to be null","lastModifiedDate":"2021-10-25"},{"lineNumber":90,"author":{"gitId":"tttyyzzz"},"content":"                } else if (!profile.getProfileHeight().isValid()) {","lastModifiedDate":"2021-10-25"},{"lineNumber":91,"author":{"gitId":"tttyyzzz"},"content":"                    createNewProfileHeight(profile);","lastModifiedDate":"2021-10-25"},{"lineNumber":92,"author":{"gitId":"tttyyzzz"},"content":"                } else if (!profile.getProfileWeight().isValid()) {","lastModifiedDate":"2021-10-25"},{"lineNumber":93,"author":{"gitId":"tttyyzzz"},"content":"                    createNewProfileWeight(profile);","lastModifiedDate":"2021-10-25"},{"lineNumber":94,"author":{"gitId":"tttyyzzz"},"content":"                } else if (!profile.getProfileGender().isValid()) {","lastModifiedDate":"2021-10-25"},{"lineNumber":95,"author":{"gitId":"tttyyzzz"},"content":"                    createNewProfileGender(profile);","lastModifiedDate":"2021-10-25"},{"lineNumber":96,"author":{"gitId":"tttyyzzz"},"content":"                } else if (!profile.getProfileAge().isValid()) {","lastModifiedDate":"2021-10-25"},{"lineNumber":97,"author":{"gitId":"tttyyzzz"},"content":"                    createNewProfileAge(profile);","lastModifiedDate":"2021-10-25"},{"lineNumber":98,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":99,"author":{"gitId":"tttyyzzz"},"content":"                } else if (!profile.getProfileActivityFactor().isValid()) {","lastModifiedDate":"2021-10-25"},{"lineNumber":100,"author":{"gitId":"tttyyzzz"},"content":"                    createNewProfileActivityFactor(profile);","lastModifiedDate":"2021-10-25"},{"lineNumber":101,"author":{"gitId":"tttyyzzz"},"content":"                } else if (profile.getProfileCalorieGoal().isValid()) {","lastModifiedDate":"2021-10-25"},{"lineNumber":102,"author":{"gitId":"tttyyzzz"},"content":"                    createNewProfileCalorieGoal(profile);","lastModifiedDate":"2021-10-25"},{"lineNumber":103,"author":{"gitId":"tttyyzzz"},"content":"                }","lastModifiedDate":"2021-10-25"},{"lineNumber":104,"author":{"gitId":"tttyyzzz"},"content":"                storageManager.saveProfile(this.profile);","lastModifiedDate":"2021-10-25"},{"lineNumber":105,"author":{"gitId":"tttyyzzz"},"content":"            } catch (ParamMissingException e) {","lastModifiedDate":"2021-10-25"},{"lineNumber":106,"author":{"gitId":"tttyyzzz"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2021-10-25"},{"lineNumber":107,"author":{"gitId":"tttyyzzz"},"content":"            } catch (UnableToWriteFileException e) {","lastModifiedDate":"2021-10-25"},{"lineNumber":108,"author":{"gitId":"tttyyzzz"},"content":"                ui.formatMessageFramedWithDivider(e.getMessage());","lastModifiedDate":"2021-10-25"},{"lineNumber":109,"author":{"gitId":"tttyyzzz"},"content":"            }","lastModifiedDate":"2021-10-25"},{"lineNumber":110,"author":{"gitId":"tttyyzzz"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":111,"author":{"gitId":"tttyyzzz"},"content":"        ui.formatMessageWithBottomDivider();","lastModifiedDate":"2021-10-26"},{"lineNumber":112,"author":{"gitId":"tttyyzzz"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":113,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":114,"author":{"gitId":"tttyyzzz"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":115,"author":{"gitId":"tttyyzzz"},"content":"     * Creates a new profile instance for new user.","lastModifiedDate":"2021-10-25"},{"lineNumber":116,"author":{"gitId":"tttyyzzz"},"content":"     * Profile will be lost if user exits the program without setting up the profile.","lastModifiedDate":"2021-10-25"},{"lineNumber":117,"author":{"gitId":"tttyyzzz"},"content":"     * Upon completing profile, the profile instance in Main will be replaced and stored in storage.","lastModifiedDate":"2021-10-25"},{"lineNumber":118,"author":{"gitId":"tttyyzzz"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":119,"author":{"gitId":"tttyyzzz"},"content":"    private void createNewProfile() {","lastModifiedDate":"2021-10-25"},{"lineNumber":120,"author":{"gitId":"tttyyzzz"},"content":"        Profile newProfile \u003d new Profile();","lastModifiedDate":"2021-10-25"},{"lineNumber":121,"author":{"gitId":"tttyyzzz"},"content":"        ui.formatMessageWithTopDivider();","lastModifiedDate":"2021-10-26"},{"lineNumber":122,"author":{"gitId":"tttyyzzz"},"content":"        while (!newProfile.checkProfileComplete()) {","lastModifiedDate":"2021-10-25"},{"lineNumber":123,"author":{"gitId":"tttyyzzz"},"content":"            try {","lastModifiedDate":"2021-10-25"},{"lineNumber":124,"author":{"gitId":"tttyyzzz"},"content":"                createNewProfileName(newProfile);","lastModifiedDate":"2021-10-25"},{"lineNumber":125,"author":{"gitId":"tttyyzzz"},"content":"                createNewProfileHeight(newProfile);","lastModifiedDate":"2021-10-25"},{"lineNumber":126,"author":{"gitId":"tttyyzzz"},"content":"                createNewProfileWeight(newProfile);","lastModifiedDate":"2021-10-25"},{"lineNumber":127,"author":{"gitId":"tttyyzzz"},"content":"                createNewProfileGender(newProfile);","lastModifiedDate":"2021-10-25"},{"lineNumber":128,"author":{"gitId":"tttyyzzz"},"content":"                createNewProfileAge(newProfile);","lastModifiedDate":"2021-10-25"},{"lineNumber":129,"author":{"gitId":"tttyyzzz"},"content":"                createNewProfileCalorieGoal(newProfile);","lastModifiedDate":"2021-10-25"},{"lineNumber":130,"author":{"gitId":"tttyyzzz"},"content":"                createNewProfileActivityFactor(newProfile);","lastModifiedDate":"2021-10-25"},{"lineNumber":131,"author":{"gitId":"tttyyzzz"},"content":"            } catch (ParamMissingException e) {","lastModifiedDate":"2021-10-25"},{"lineNumber":132,"author":{"gitId":"tttyyzzz"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2021-10-25"},{"lineNumber":133,"author":{"gitId":"tttyyzzz"},"content":"            }","lastModifiedDate":"2021-10-25"},{"lineNumber":134,"author":{"gitId":"tttyyzzz"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":135,"author":{"gitId":"tttyyzzz"},"content":"        this.profile \u003d newProfile;","lastModifiedDate":"2021-10-25"},{"lineNumber":136,"author":{"gitId":"tttyyzzz"},"content":"        try {","lastModifiedDate":"2021-10-25"},{"lineNumber":137,"author":{"gitId":"tttyyzzz"},"content":"            storageManager.saveProfile(this.profile);","lastModifiedDate":"2021-10-25"},{"lineNumber":138,"author":{"gitId":"tttyyzzz"},"content":"        } catch (UnableToWriteFileException e) {","lastModifiedDate":"2021-10-25"},{"lineNumber":139,"author":{"gitId":"tttyyzzz"},"content":"            ui.formatMessageFramedWithDivider(e.getMessage());","lastModifiedDate":"2021-10-25"},{"lineNumber":140,"author":{"gitId":"tttyyzzz"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":141,"author":{"gitId":"tttyyzzz"},"content":"        ui.formatMessageWithBottomDivider();","lastModifiedDate":"2021-10-26"},{"lineNumber":142,"author":{"gitId":"tttyyzzz"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":143,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":144,"author":{"gitId":"tttyyzzz"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":145,"author":{"gitId":"tttyyzzz"},"content":"     * Creates a valid profile activity factor for the profile instance.","lastModifiedDate":"2021-10-25"},{"lineNumber":146,"author":{"gitId":"tttyyzzz"},"content":"     *","lastModifiedDate":"2021-10-25"},{"lineNumber":147,"author":{"gitId":"tttyyzzz"},"content":"     * @param newProfile instance of a profile class.","lastModifiedDate":"2021-10-25"},{"lineNumber":148,"author":{"gitId":"tttyyzzz"},"content":"     * @throws ParamMissingException if user input a string of 0 characters.","lastModifiedDate":"2021-10-25"},{"lineNumber":149,"author":{"gitId":"tttyyzzz"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":150,"author":{"gitId":"tttyyzzz"},"content":"    private void createNewProfileActivityFactor(Profile newProfile) throws ParamMissingException {","lastModifiedDate":"2021-10-25"},{"lineNumber":151,"author":{"gitId":"tttyyzzz"},"content":"        ui.formatMessageWithBottomDivider(MESSAGE_INTRO_ACTIVITY_FACTOR);","lastModifiedDate":"2021-10-26"},{"lineNumber":152,"author":{"gitId":"tttyyzzz"},"content":"        while (!newProfile.getProfileActivityFactor().isValid()) {","lastModifiedDate":"2021-10-25"},{"lineNumber":153,"author":{"gitId":"tttyyzzz"},"content":"            try {","lastModifiedDate":"2021-10-25"},{"lineNumber":154,"author":{"gitId":"tttyyzzz"},"content":"                String userInput \u003d ui.getUserInput();","lastModifiedDate":"2021-10-25"},{"lineNumber":155,"author":{"gitId":"tttyyzzz"},"content":"                checkEmptyUserInput(userInput);","lastModifiedDate":"2021-10-25"},{"lineNumber":156,"author":{"gitId":"tttyyzzz"},"content":"                int activityFactorInput \u003d Integer.parseInt(userInput);","lastModifiedDate":"2021-10-25"},{"lineNumber":157,"author":{"gitId":"tttyyzzz"},"content":"                newProfile.setProfileActivityFactor(new ActivityFactor(activityFactorInput));","lastModifiedDate":"2021-10-25"},{"lineNumber":158,"author":{"gitId":"tttyyzzz"},"content":"                if (newProfile.getProfileActivityFactor().isValid()) {","lastModifiedDate":"2021-10-26"},{"lineNumber":159,"author":{"gitId":"tttyyzzz"},"content":"                    ui.formatMessageWithTopDivider(","lastModifiedDate":"2021-10-26"},{"lineNumber":160,"author":{"gitId":"tttyyzzz"},"content":"                            String.format(MESSAGE_ACTIVITY_FACTOR,","lastModifiedDate":"2021-10-26"},{"lineNumber":161,"author":{"gitId":"tttyyzzz"},"content":"                                    newProfile.getProfileActivityFactor().getActivityFactor()));","lastModifiedDate":"2021-10-26"},{"lineNumber":162,"author":{"gitId":"tttyyzzz"},"content":"                } else {","lastModifiedDate":"2021-10-26"},{"lineNumber":163,"author":{"gitId":"tttyyzzz"},"content":"                    ui.formatMessageFramedWithDivider(profile.ERROR_ACTIVITY_FACTOR);","lastModifiedDate":"2021-10-26"},{"lineNumber":164,"author":{"gitId":"tttyyzzz"},"content":"                }","lastModifiedDate":"2021-10-26"},{"lineNumber":165,"author":{"gitId":"tttyyzzz"},"content":"                ;","lastModifiedDate":"2021-10-26"},{"lineNumber":166,"author":{"gitId":"tttyyzzz"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2021-10-25"},{"lineNumber":167,"author":{"gitId":"tttyyzzz"},"content":"                ui.formatMessageFramedWithDivider(MESSAGE_INVALID_POSITIVE_DOUBLE_INPUT);","lastModifiedDate":"2021-10-25"},{"lineNumber":168,"author":{"gitId":"tttyyzzz"},"content":"            }","lastModifiedDate":"2021-10-25"},{"lineNumber":169,"author":{"gitId":"tttyyzzz"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":170,"author":{"gitId":"tttyyzzz"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":171,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":172,"author":{"gitId":"tttyyzzz"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":173,"author":{"gitId":"tttyyzzz"},"content":"     * Creates a valid profile calorie goal for the profile instance.","lastModifiedDate":"2021-10-25"},{"lineNumber":174,"author":{"gitId":"tttyyzzz"},"content":"     *","lastModifiedDate":"2021-10-25"},{"lineNumber":175,"author":{"gitId":"tttyyzzz"},"content":"     * @param newProfile instance of a profile class.","lastModifiedDate":"2021-10-25"},{"lineNumber":176,"author":{"gitId":"tttyyzzz"},"content":"     * @throws ParamMissingException if user input a string of 0 characters.","lastModifiedDate":"2021-10-25"},{"lineNumber":177,"author":{"gitId":"tttyyzzz"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":178,"author":{"gitId":"tttyyzzz"},"content":"    private void createNewProfileCalorieGoal(Profile newProfile) throws ParamMissingException {","lastModifiedDate":"2021-10-25"},{"lineNumber":179,"author":{"gitId":"tttyyzzz"},"content":"        boolean checkInput \u003d false;// check whether calorie goal has the correct input","lastModifiedDate":"2021-10-25"},{"lineNumber":180,"author":{"gitId":"tttyyzzz"},"content":"        ui.formatMessageWithBottomDivider(MESSAGE_INTRO_CALORIE_GOAL);","lastModifiedDate":"2021-10-26"},{"lineNumber":181,"author":{"gitId":"tttyyzzz"},"content":"        do {","lastModifiedDate":"2021-10-25"},{"lineNumber":182,"author":{"gitId":"tttyyzzz"},"content":"            try {","lastModifiedDate":"2021-10-25"},{"lineNumber":183,"author":{"gitId":"tttyyzzz"},"content":"                String userInput \u003d ui.getUserInput();","lastModifiedDate":"2021-10-25"},{"lineNumber":184,"author":{"gitId":"tttyyzzz"},"content":"                checkEmptyUserInput(userInput);","lastModifiedDate":"2021-10-25"},{"lineNumber":185,"author":{"gitId":"tttyyzzz"},"content":"                int calorieGoalInput \u003d Integer.parseInt(userInput);","lastModifiedDate":"2021-10-25"},{"lineNumber":186,"author":{"gitId":"tttyyzzz"},"content":"                newProfile.setProfileCalorieGoal(new CalorieGoal(calorieGoalInput));","lastModifiedDate":"2021-10-25"},{"lineNumber":187,"author":{"gitId":"tttyyzzz"},"content":"                //calorie input is responding","lastModifiedDate":"2021-10-26"},{"lineNumber":188,"author":{"gitId":"tttyyzzz"},"content":"                //TODO: add a print statement to tell user input is incorrect","lastModifiedDate":"2021-10-25"},{"lineNumber":189,"author":{"gitId":"tttyyzzz"},"content":"                if (newProfile.getProfileCalorieGoal().isValid()) {","lastModifiedDate":"2021-10-26"},{"lineNumber":190,"author":{"gitId":"tttyyzzz"},"content":"                    ui.formatMessageWithTopDivider(","lastModifiedDate":"2021-10-26"},{"lineNumber":191,"author":{"gitId":"tttyyzzz"},"content":"                            String.format(MESSAGE_CALORIE_GOAL,","lastModifiedDate":"2021-10-26"},{"lineNumber":192,"author":{"gitId":"tttyyzzz"},"content":"                                    newProfile.getProfileCalorieGoal().getCalorieGoal()));","lastModifiedDate":"2021-10-26"},{"lineNumber":193,"author":{"gitId":"tttyyzzz"},"content":"                } else {","lastModifiedDate":"2021-10-26"},{"lineNumber":194,"author":{"gitId":"tttyyzzz"},"content":"                    ui.formatMessageFramedWithDivider(String.format(profile.ERROR_CALORIE_GOAL, calorieGoalInput));","lastModifiedDate":"2021-10-26"},{"lineNumber":195,"author":{"gitId":"tttyyzzz"},"content":"                }","lastModifiedDate":"2021-10-26"},{"lineNumber":196,"author":{"gitId":"tttyyzzz"},"content":"                checkInput \u003d true;","lastModifiedDate":"2021-10-25"},{"lineNumber":197,"author":{"gitId":"tttyyzzz"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2021-10-25"},{"lineNumber":198,"author":{"gitId":"tttyyzzz"},"content":"                ui.formatMessageFramedWithDivider(MESSAGE_INVALID_POSITIVE_INT_INPUT);","lastModifiedDate":"2021-10-25"},{"lineNumber":199,"author":{"gitId":"tttyyzzz"},"content":"            }","lastModifiedDate":"2021-10-25"},{"lineNumber":200,"author":{"gitId":"tttyyzzz"},"content":"        } while (!checkInput || !newProfile.getProfileCalorieGoal().isValid());","lastModifiedDate":"2021-10-25"},{"lineNumber":201,"author":{"gitId":"tttyyzzz"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":202,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":203,"author":{"gitId":"tttyyzzz"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":204,"author":{"gitId":"tttyyzzz"},"content":"     * Creates a valid profile age for the profile instance.","lastModifiedDate":"2021-10-25"},{"lineNumber":205,"author":{"gitId":"tttyyzzz"},"content":"     *","lastModifiedDate":"2021-10-25"},{"lineNumber":206,"author":{"gitId":"tttyyzzz"},"content":"     * @param newProfile instance of a profile class.","lastModifiedDate":"2021-10-25"},{"lineNumber":207,"author":{"gitId":"tttyyzzz"},"content":"     * @throws ParamMissingException if user input a string of 0 characters.","lastModifiedDate":"2021-10-25"},{"lineNumber":208,"author":{"gitId":"tttyyzzz"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":209,"author":{"gitId":"tttyyzzz"},"content":"    private void createNewProfileAge(Profile newProfile) throws ParamMissingException {","lastModifiedDate":"2021-10-25"},{"lineNumber":210,"author":{"gitId":"tttyyzzz"},"content":"        ui.formatMessageWithBottomDivider(MESSAGE_INTRO_AGE);","lastModifiedDate":"2021-10-26"},{"lineNumber":211,"author":{"gitId":"tttyyzzz"},"content":"        while (!newProfile.getProfileAge().isValid()) {","lastModifiedDate":"2021-10-25"},{"lineNumber":212,"author":{"gitId":"tttyyzzz"},"content":"            try {","lastModifiedDate":"2021-10-25"},{"lineNumber":213,"author":{"gitId":"tttyyzzz"},"content":"                String userInput \u003d ui.getUserInput();","lastModifiedDate":"2021-10-25"},{"lineNumber":214,"author":{"gitId":"tttyyzzz"},"content":"                checkEmptyUserInput(userInput);","lastModifiedDate":"2021-10-25"},{"lineNumber":215,"author":{"gitId":"tttyyzzz"},"content":"                int ageInput \u003d Integer.parseInt(userInput);","lastModifiedDate":"2021-10-25"},{"lineNumber":216,"author":{"gitId":"tttyyzzz"},"content":"                newProfile.setProfileAge(new Age(ageInput));","lastModifiedDate":"2021-10-25"},{"lineNumber":217,"author":{"gitId":"tttyyzzz"},"content":"                if (newProfile.getProfileAge().isValid()) {","lastModifiedDate":"2021-10-26"},{"lineNumber":218,"author":{"gitId":"tttyyzzz"},"content":"                    ui.formatMessageWithTopDivider(","lastModifiedDate":"2021-10-26"},{"lineNumber":219,"author":{"gitId":"tttyyzzz"},"content":"                            String.format(MESSAGE_AGE,","lastModifiedDate":"2021-10-26"},{"lineNumber":220,"author":{"gitId":"tttyyzzz"},"content":"                                    newProfile.getProfileAge().getAge()));","lastModifiedDate":"2021-10-26"},{"lineNumber":221,"author":{"gitId":"tttyyzzz"},"content":"                } else {","lastModifiedDate":"2021-10-26"},{"lineNumber":222,"author":{"gitId":"tttyyzzz"},"content":"                    ui.formatMessageFramedWithDivider(profile.ERROR_AGE);","lastModifiedDate":"2021-10-26"},{"lineNumber":223,"author":{"gitId":"tttyyzzz"},"content":"                }","lastModifiedDate":"2021-10-26"},{"lineNumber":224,"author":{"gitId":"tttyyzzz"},"content":"                ;","lastModifiedDate":"2021-10-26"},{"lineNumber":225,"author":{"gitId":"tttyyzzz"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2021-10-25"},{"lineNumber":226,"author":{"gitId":"tttyyzzz"},"content":"                ui.formatMessageFramedWithDivider(MESSAGE_INVALID_POSITIVE_INT_INPUT);","lastModifiedDate":"2021-10-25"},{"lineNumber":227,"author":{"gitId":"tttyyzzz"},"content":"            }","lastModifiedDate":"2021-10-25"},{"lineNumber":228,"author":{"gitId":"tttyyzzz"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":229,"author":{"gitId":"tttyyzzz"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":230,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":231,"author":{"gitId":"tttyyzzz"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":232,"author":{"gitId":"tttyyzzz"},"content":"     * Creates a valid profile gender for the profile instance.","lastModifiedDate":"2021-10-25"},{"lineNumber":233,"author":{"gitId":"tttyyzzz"},"content":"     *","lastModifiedDate":"2021-10-25"},{"lineNumber":234,"author":{"gitId":"tttyyzzz"},"content":"     * @param newProfile instance of a profile class.","lastModifiedDate":"2021-10-25"},{"lineNumber":235,"author":{"gitId":"tttyyzzz"},"content":"     * @throws ParamMissingException if user input a string of 0 characters.","lastModifiedDate":"2021-10-25"},{"lineNumber":236,"author":{"gitId":"tttyyzzz"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":237,"author":{"gitId":"tttyyzzz"},"content":"    private void createNewProfileGender(Profile newProfile) {","lastModifiedDate":"2021-10-25"},{"lineNumber":238,"author":{"gitId":"tttyyzzz"},"content":"        ui.formatMessageWithBottomDivider(MESSAGE_INTRO_GENDER);","lastModifiedDate":"2021-10-26"},{"lineNumber":239,"author":{"gitId":"tttyyzzz"},"content":"        while (!newProfile.getProfileGender().isValid()) {","lastModifiedDate":"2021-10-25"},{"lineNumber":240,"author":{"gitId":"tttyyzzz"},"content":"            String userInput \u003d ui.getUserInput();","lastModifiedDate":"2021-10-25"},{"lineNumber":241,"author":{"gitId":"tttyyzzz"},"content":"            if (userInput.length() \u003d\u003d 1) {","lastModifiedDate":"2021-10-25"},{"lineNumber":242,"author":{"gitId":"tttyyzzz"},"content":"                char genderInput \u003d userInput.charAt(0);","lastModifiedDate":"2021-10-25"},{"lineNumber":243,"author":{"gitId":"tttyyzzz"},"content":"                newProfile.setProfileGender(new Gender(genderInput));","lastModifiedDate":"2021-10-25"},{"lineNumber":244,"author":{"gitId":"tttyyzzz"},"content":"            }","lastModifiedDate":"2021-10-25"},{"lineNumber":245,"author":{"gitId":"tttyyzzz"},"content":"            if (newProfile.getProfileGender().isValid()) {","lastModifiedDate":"2021-10-26"},{"lineNumber":246,"author":{"gitId":"tttyyzzz"},"content":"                //TODO: check if input is male or female and then output the message.","lastModifiedDate":"2021-10-26"},{"lineNumber":247,"author":{"gitId":"tttyyzzz"},"content":"                ui.formatMessageWithTopDivider(","lastModifiedDate":"2021-10-26"},{"lineNumber":248,"author":{"gitId":"tttyyzzz"},"content":"                        getGenderMessage(newProfile.getProfileGender().getGender()));","lastModifiedDate":"2021-10-26"},{"lineNumber":249,"author":{"gitId":"tttyyzzz"},"content":"            } else {","lastModifiedDate":"2021-10-26"},{"lineNumber":250,"author":{"gitId":"tttyyzzz"},"content":"                ui.formatMessageFramedWithDivider(profile.ERROR_GENDER);","lastModifiedDate":"2021-10-26"},{"lineNumber":251,"author":{"gitId":"tttyyzzz"},"content":"            }","lastModifiedDate":"2021-10-26"},{"lineNumber":252,"author":{"gitId":"tttyyzzz"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":253,"author":{"gitId":"tttyyzzz"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":254,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":255,"author":{"gitId":"tttyyzzz"},"content":"    private String getGenderMessage(char gender) {","lastModifiedDate":"2021-10-26"},{"lineNumber":256,"author":{"gitId":"tttyyzzz"},"content":"        return gender \u003d\u003d MALE_CHAR ? MESSAGE_MALE : MESSAGE_FEMALE;","lastModifiedDate":"2021-10-26"},{"lineNumber":257,"author":{"gitId":"tttyyzzz"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":258,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":259,"author":{"gitId":"tttyyzzz"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":260,"author":{"gitId":"tttyyzzz"},"content":"     * Creates a valid profile weight for the profile instance.","lastModifiedDate":"2021-10-25"},{"lineNumber":261,"author":{"gitId":"tttyyzzz"},"content":"     *","lastModifiedDate":"2021-10-25"},{"lineNumber":262,"author":{"gitId":"tttyyzzz"},"content":"     * @param newProfile instance of a profile class.","lastModifiedDate":"2021-10-25"},{"lineNumber":263,"author":{"gitId":"tttyyzzz"},"content":"     * @throws ParamMissingException if user input a string of 0 characters.","lastModifiedDate":"2021-10-25"},{"lineNumber":264,"author":{"gitId":"tttyyzzz"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":265,"author":{"gitId":"tttyyzzz"},"content":"    private void createNewProfileWeight(Profile newProfile) throws ParamMissingException {","lastModifiedDate":"2021-10-25"},{"lineNumber":266,"author":{"gitId":"tttyyzzz"},"content":"        ui.formatMessageWithBottomDivider(MESSAGE_INTRO_WEIGHT);","lastModifiedDate":"2021-10-26"},{"lineNumber":267,"author":{"gitId":"tttyyzzz"},"content":"        while (!newProfile.getProfileWeight().isValid()) {","lastModifiedDate":"2021-10-25"},{"lineNumber":268,"author":{"gitId":"tttyyzzz"},"content":"            try {","lastModifiedDate":"2021-10-25"},{"lineNumber":269,"author":{"gitId":"tttyyzzz"},"content":"                String userInput \u003d ui.getUserInput();","lastModifiedDate":"2021-10-25"},{"lineNumber":270,"author":{"gitId":"tttyyzzz"},"content":"                checkEmptyUserInput(userInput);","lastModifiedDate":"2021-10-25"},{"lineNumber":271,"author":{"gitId":"tttyyzzz"},"content":"                double weightInput \u003d Double.parseDouble(userInput);","lastModifiedDate":"2021-10-25"},{"lineNumber":272,"author":{"gitId":"tttyyzzz"},"content":"                newProfile.setProfileWeight(new Weight(weightInput));","lastModifiedDate":"2021-10-25"},{"lineNumber":273,"author":{"gitId":"tttyyzzz"},"content":"                if (newProfile.getProfileWeight().isValid()) {","lastModifiedDate":"2021-10-26"},{"lineNumber":274,"author":{"gitId":"tttyyzzz"},"content":"                    ui.formatMessageWithTopDivider(","lastModifiedDate":"2021-10-26"},{"lineNumber":275,"author":{"gitId":"tttyyzzz"},"content":"                            String.format(MESSAGE_WEIGHT,","lastModifiedDate":"2021-10-26"},{"lineNumber":276,"author":{"gitId":"tttyyzzz"},"content":"                                    newProfile.getProfileWeight().getWeight()));","lastModifiedDate":"2021-10-26"},{"lineNumber":277,"author":{"gitId":"tttyyzzz"},"content":"                } else {","lastModifiedDate":"2021-10-26"},{"lineNumber":278,"author":{"gitId":"tttyyzzz"},"content":"                    ui.formatMessageFramedWithDivider(profile.ERROR_WEIGHT);","lastModifiedDate":"2021-10-26"},{"lineNumber":279,"author":{"gitId":"tttyyzzz"},"content":"                }","lastModifiedDate":"2021-10-26"},{"lineNumber":280,"author":{"gitId":"tttyyzzz"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2021-10-25"},{"lineNumber":281,"author":{"gitId":"tttyyzzz"},"content":"                ui.formatMessageFramedWithDivider(\"Invalid input, please input a valid positive number\");","lastModifiedDate":"2021-10-25"},{"lineNumber":282,"author":{"gitId":"tttyyzzz"},"content":"            }","lastModifiedDate":"2021-10-25"},{"lineNumber":283,"author":{"gitId":"tttyyzzz"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":284,"author":{"gitId":"tttyyzzz"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":285,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":286,"author":{"gitId":"tttyyzzz"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":287,"author":{"gitId":"tttyyzzz"},"content":"     * Creates a valid profile height for the profile instance.","lastModifiedDate":"2021-10-25"},{"lineNumber":288,"author":{"gitId":"tttyyzzz"},"content":"     *","lastModifiedDate":"2021-10-25"},{"lineNumber":289,"author":{"gitId":"tttyyzzz"},"content":"     * @param newProfile instance of a profile class.","lastModifiedDate":"2021-10-25"},{"lineNumber":290,"author":{"gitId":"tttyyzzz"},"content":"     * @throws ParamMissingException if user input a string of 0 characters.","lastModifiedDate":"2021-10-25"},{"lineNumber":291,"author":{"gitId":"tttyyzzz"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":292,"author":{"gitId":"tttyyzzz"},"content":"    private void createNewProfileHeight(Profile newProfile) throws ParamMissingException {","lastModifiedDate":"2021-10-25"},{"lineNumber":293,"author":{"gitId":"tttyyzzz"},"content":"        ui.formatMessageWithBottomDivider(MESSAGE_INTRO_HEIGHT);","lastModifiedDate":"2021-10-26"},{"lineNumber":294,"author":{"gitId":"tttyyzzz"},"content":"        while (!newProfile.getProfileHeight().isValid()) {","lastModifiedDate":"2021-10-25"},{"lineNumber":295,"author":{"gitId":"tttyyzzz"},"content":"            try {","lastModifiedDate":"2021-10-25"},{"lineNumber":296,"author":{"gitId":"tttyyzzz"},"content":"                String userInput \u003d ui.getUserInput();","lastModifiedDate":"2021-10-25"},{"lineNumber":297,"author":{"gitId":"tttyyzzz"},"content":"                checkEmptyUserInput(userInput);","lastModifiedDate":"2021-10-25"},{"lineNumber":298,"author":{"gitId":"tttyyzzz"},"content":"                double heightInput \u003d Double.parseDouble(userInput);","lastModifiedDate":"2021-10-25"},{"lineNumber":299,"author":{"gitId":"tttyyzzz"},"content":"                newProfile.setProfileHeight(new Height(heightInput));","lastModifiedDate":"2021-10-25"},{"lineNumber":300,"author":{"gitId":"tttyyzzz"},"content":"                if (newProfile.getProfileHeight().isValid()) {","lastModifiedDate":"2021-10-26"},{"lineNumber":301,"author":{"gitId":"tttyyzzz"},"content":"                    ui.formatMessageWithTopDivider(","lastModifiedDate":"2021-10-26"},{"lineNumber":302,"author":{"gitId":"tttyyzzz"},"content":"                            String.format(MESSAGE_HEIGHT,","lastModifiedDate":"2021-10-26"},{"lineNumber":303,"author":{"gitId":"tttyyzzz"},"content":"                                    newProfile.getProfileHeight().getHeight()));","lastModifiedDate":"2021-10-26"},{"lineNumber":304,"author":{"gitId":"tttyyzzz"},"content":"                } else {","lastModifiedDate":"2021-10-26"},{"lineNumber":305,"author":{"gitId":"tttyyzzz"},"content":"                    ui.formatMessageFramedWithDivider(profile.ERROR_HEIGHT);","lastModifiedDate":"2021-10-26"},{"lineNumber":306,"author":{"gitId":"tttyyzzz"},"content":"                }","lastModifiedDate":"2021-10-26"},{"lineNumber":307,"author":{"gitId":"tttyyzzz"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2021-10-25"},{"lineNumber":308,"author":{"gitId":"tttyyzzz"},"content":"                ui.formatMessageFramedWithDivider(MESSAGE_INVALID_POSITIVE_DOUBLE_INPUT);","lastModifiedDate":"2021-10-25"},{"lineNumber":309,"author":{"gitId":"tttyyzzz"},"content":"            }","lastModifiedDate":"2021-10-25"},{"lineNumber":310,"author":{"gitId":"tttyyzzz"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":311,"author":{"gitId":"tttyyzzz"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":312,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":313,"author":{"gitId":"tttyyzzz"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":314,"author":{"gitId":"tttyyzzz"},"content":"     * Creates a valid profile name for the profile instance.","lastModifiedDate":"2021-10-25"},{"lineNumber":315,"author":{"gitId":"tttyyzzz"},"content":"     *","lastModifiedDate":"2021-10-25"},{"lineNumber":316,"author":{"gitId":"tttyyzzz"},"content":"     * @param newProfile instance of a profile class.","lastModifiedDate":"2021-10-25"},{"lineNumber":317,"author":{"gitId":"tttyyzzz"},"content":"     * @throws ParamMissingException if user input a string of 0 characters.","lastModifiedDate":"2021-10-25"},{"lineNumber":318,"author":{"gitId":"tttyyzzz"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":319,"author":{"gitId":"tttyyzzz"},"content":"    private void createNewProfileName(Profile newProfile) throws ParamMissingException {","lastModifiedDate":"2021-10-25"},{"lineNumber":320,"author":{"gitId":"tttyyzzz"},"content":"        ui.formatMessageWithBottomDivider(MESSAGE_INTRO_NAME);","lastModifiedDate":"2021-10-26"},{"lineNumber":321,"author":{"gitId":"tttyyzzz"},"content":"        while (!newProfile.getProfileName().isValid()) {","lastModifiedDate":"2021-10-25"},{"lineNumber":322,"author":{"gitId":"tttyyzzz"},"content":"            String userInput \u003d ui.getUserInput();","lastModifiedDate":"2021-10-25"},{"lineNumber":323,"author":{"gitId":"tttyyzzz"},"content":"            checkEmptyUserInput(userInput);","lastModifiedDate":"2021-10-25"},{"lineNumber":324,"author":{"gitId":"tttyyzzz"},"content":"            newProfile.setProfileName(new Name(userInput));","lastModifiedDate":"2021-10-25"},{"lineNumber":325,"author":{"gitId":"tttyyzzz"},"content":"            if (newProfile.getProfileName().isValid()) {","lastModifiedDate":"2021-10-26"},{"lineNumber":326,"author":{"gitId":"tttyyzzz"},"content":"                ui.formatMessageWithTopDivider(","lastModifiedDate":"2021-10-26"},{"lineNumber":327,"author":{"gitId":"tttyyzzz"},"content":"                        String.format(MESSAGE_NAME,","lastModifiedDate":"2021-10-26"},{"lineNumber":328,"author":{"gitId":"tttyyzzz"},"content":"                                newProfile.getProfileName().getName()));","lastModifiedDate":"2021-10-26"},{"lineNumber":329,"author":{"gitId":"tttyyzzz"},"content":"            } else {","lastModifiedDate":"2021-10-26"},{"lineNumber":330,"author":{"gitId":"tttyyzzz"},"content":"                ui.formatMessageFramedWithDivider(profile.ERROR_NAME);","lastModifiedDate":"2021-10-26"},{"lineNumber":331,"author":{"gitId":"tttyyzzz"},"content":"            }","lastModifiedDate":"2021-10-26"},{"lineNumber":332,"author":{"gitId":"tttyyzzz"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":333,"author":{"gitId":"tttyyzzz"},"content":"        assert newProfile.getProfileName().isValid() : \" name is valid\";","lastModifiedDate":"2021-10-25"},{"lineNumber":334,"author":{"gitId":"tttyyzzz"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":335,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":336,"author":{"gitId":"tttyyzzz"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":337,"author":{"gitId":"tttyyzzz"},"content":"     * Checks if user input is empty.","lastModifiedDate":"2021-10-25"},{"lineNumber":338,"author":{"gitId":"tttyyzzz"},"content":"     *","lastModifiedDate":"2021-10-25"},{"lineNumber":339,"author":{"gitId":"tttyyzzz"},"content":"     * @param userInput input from the user.","lastModifiedDate":"2021-10-25"},{"lineNumber":340,"author":{"gitId":"tttyyzzz"},"content":"     * @throws ParamMissingException if input length is 0 (missing).","lastModifiedDate":"2021-10-25"},{"lineNumber":341,"author":{"gitId":"tttyyzzz"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":342,"author":{"gitId":"tttyyzzz"},"content":"    private void checkEmptyUserInput(String userInput) throws ParamMissingException {","lastModifiedDate":"2021-10-25"},{"lineNumber":343,"author":{"gitId":"tttyyzzz"},"content":"        if (userInput.length() \u003d\u003d 0) {","lastModifiedDate":"2021-10-25"},{"lineNumber":344,"author":{"gitId":"tttyyzzz"},"content":"            throw new ParamMissingException(MESSAGE_EMPTY_INPUT);","lastModifiedDate":"2021-10-25"},{"lineNumber":345,"author":{"gitId":"tttyyzzz"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":346,"author":{"gitId":"tttyyzzz"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":347,"author":{"gitId":"tttyyzzz"},"content":"}","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"tttyyzzz":347}},{"path":"src/main/java/seedu/duke/data/DataManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weidak"},"content":"package seedu.duke.data;","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":3,"author":{"gitId":"tryyang2001"},"content":"import seedu.duke.data.item.Item;","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"weidak"},"content":"import seedu.duke.data.item.ItemBank;","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"tryyang2001"},"content":"import seedu.duke.data.item.exercise.Exercise;","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"weidak"},"content":"import seedu.duke.data.item.exercise.ExerciseList;","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"weidak"},"content":"import seedu.duke.data.item.exercise.FutureExerciseList;","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"tryyang2001"},"content":"import seedu.duke.data.item.food.Food;","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"weidak"},"content":"import seedu.duke.data.item.food.FoodList;","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"weidak"},"content":"import seedu.duke.data.profile.Profile;","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"tryyang2001"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"weidak"},"content":"public class DataManager {","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"tryyang2001"},"content":"    private ExerciseList filteredExerciseItems;","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"weidak"},"content":"    private ExerciseList exerciseItems;","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"weidak"},"content":"    private FutureExerciseList futureExerciseItems;","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"tryyang2001"},"content":"    private FoodList filteredFoodItems;","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"weidak"},"content":"    private FoodList foodItems;","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"weidak"},"content":"    private ItemBank exerciseBank;","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"weidak"},"content":"    private ItemBank foodBank;","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"weidak"},"content":"    private Profile profile;","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":25,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"weidak"},"content":"     * Handles the different types of data going into and out of the bot.","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"weidak"},"content":"     * Used for storage purposes.","lastModifiedDate":"2021-10-27"},{"lineNumber":28,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-10-27"},{"lineNumber":29,"author":{"gitId":"weidak"},"content":"     * @param exerciseItems       Exercises items to be initialized","lastModifiedDate":"2021-10-27"},{"lineNumber":30,"author":{"gitId":"weidak"},"content":"     * @param futureExerciseItems Upcoming exercise items to be initialized","lastModifiedDate":"2021-10-27"},{"lineNumber":31,"author":{"gitId":"weidak"},"content":"     * @param foodItems           Food items to be initialized","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"weidak"},"content":"     * @param exerciseBank        Exercise bank items to be initialized","lastModifiedDate":"2021-10-27"},{"lineNumber":33,"author":{"gitId":"weidak"},"content":"     * @param foodBank            Food bank items to be initialized","lastModifiedDate":"2021-10-27"},{"lineNumber":34,"author":{"gitId":"weidak"},"content":"     * @param profile             Profile to be initialized","lastModifiedDate":"2021-10-27"},{"lineNumber":35,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":36,"author":{"gitId":"weidak"},"content":"    public DataManager(ExerciseList exerciseItems, FutureExerciseList futureExerciseItems, FoodList foodItems,","lastModifiedDate":"2021-10-27"},{"lineNumber":37,"author":{"gitId":"weidak"},"content":"                       ItemBank exerciseBank, ItemBank foodBank, Profile profile) {","lastModifiedDate":"2021-10-27"},{"lineNumber":38,"author":{"gitId":"weidak"},"content":"        this.exerciseItems \u003d exerciseItems;","lastModifiedDate":"2021-10-27"},{"lineNumber":39,"author":{"gitId":"weidak"},"content":"        this.futureExerciseItems \u003d futureExerciseItems;","lastModifiedDate":"2021-10-27"},{"lineNumber":40,"author":{"gitId":"weidak"},"content":"        this.foodItems \u003d foodItems;","lastModifiedDate":"2021-10-27"},{"lineNumber":41,"author":{"gitId":"weidak"},"content":"        this.exerciseBank \u003d exerciseBank;","lastModifiedDate":"2021-10-27"},{"lineNumber":42,"author":{"gitId":"weidak"},"content":"        this.foodBank \u003d foodBank;","lastModifiedDate":"2021-10-27"},{"lineNumber":43,"author":{"gitId":"weidak"},"content":"        this.profile \u003d profile;","lastModifiedDate":"2021-10-27"},{"lineNumber":44,"author":{"gitId":"tryyang2001"},"content":"        filterExerciseListAndFoodList();","lastModifiedDate":"2021-10-27"},{"lineNumber":45,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":46,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":47,"author":{"gitId":"tryyang2001"},"content":"    private void filterExerciseListAndFoodList() {","lastModifiedDate":"2021-10-27"},{"lineNumber":48,"author":{"gitId":"tryyang2001"},"content":"        this.filteredExerciseItems \u003d new ExerciseList();","lastModifiedDate":"2021-10-27"},{"lineNumber":49,"author":{"gitId":"tryyang2001"},"content":"        filterExerciseListWithPastSevenDaysRecordOnly();","lastModifiedDate":"2021-10-27"},{"lineNumber":50,"author":{"gitId":"tryyang2001"},"content":"        this.filteredFoodItems \u003d new FoodList();","lastModifiedDate":"2021-10-27"},{"lineNumber":51,"author":{"gitId":"tryyang2001"},"content":"        filterFoodListWithPastSevenDaysRecordOnly();","lastModifiedDate":"2021-10-27"},{"lineNumber":52,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":53,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":54,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":55,"author":{"gitId":"weidak"},"content":"     * For initialization at the start of the application.","lastModifiedDate":"2021-10-27"},{"lineNumber":56,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":57,"author":{"gitId":"weidak"},"content":"    public DataManager() {","lastModifiedDate":"2021-10-27"},{"lineNumber":58,"author":{"gitId":"tryyang2001"},"content":"        this.filteredExerciseItems \u003d new ExerciseList();","lastModifiedDate":"2021-10-27"},{"lineNumber":59,"author":{"gitId":"tryyang2001"},"content":"        this.filteredExerciseItems \u003d new ExerciseList();","lastModifiedDate":"2021-10-27"},{"lineNumber":60,"author":{"gitId":"weidak"},"content":"        this.futureExerciseItems \u003d new FutureExerciseList();","lastModifiedDate":"2021-10-27"},{"lineNumber":61,"author":{"gitId":"tryyang2001"},"content":"        this.filteredFoodItems \u003d new FoodList();","lastModifiedDate":"2021-10-27"},{"lineNumber":62,"author":{"gitId":"tryyang2001"},"content":"        this.filteredFoodItems \u003d new FoodList();","lastModifiedDate":"2021-10-27"},{"lineNumber":63,"author":{"gitId":"weidak"},"content":"        this.exerciseBank \u003d new ItemBank();","lastModifiedDate":"2021-10-27"},{"lineNumber":64,"author":{"gitId":"weidak"},"content":"        this.foodBank \u003d new ItemBank();","lastModifiedDate":"2021-10-27"},{"lineNumber":65,"author":{"gitId":"weidak"},"content":"        this.profile \u003d new Profile();","lastModifiedDate":"2021-10-27"},{"lineNumber":66,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":67,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":68,"author":{"gitId":"tryyang2001"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003dFiltered Lists methods\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-27"},{"lineNumber":69,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":70,"author":{"gitId":"tryyang2001"},"content":"    public ExerciseList getFilteredExerciseItems() {","lastModifiedDate":"2021-10-27"},{"lineNumber":71,"author":{"gitId":"tryyang2001"},"content":"        return filteredExerciseItems;","lastModifiedDate":"2021-10-27"},{"lineNumber":72,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":73,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":74,"author":{"gitId":"tryyang2001"},"content":"    public FoodList getFilteredFoodItems() {","lastModifiedDate":"2021-10-27"},{"lineNumber":75,"author":{"gitId":"tryyang2001"},"content":"        return filteredFoodItems;","lastModifiedDate":"2021-10-27"},{"lineNumber":76,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":77,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":78,"author":{"gitId":"tryyang2001"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":79,"author":{"gitId":"tryyang2001"},"content":"     * Filters food list and add food items that are within 7 days before today.","lastModifiedDate":"2021-10-27"},{"lineNumber":80,"author":{"gitId":"tryyang2001"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":81,"author":{"gitId":"tryyang2001"},"content":"    private void filterFoodListWithPastSevenDaysRecordOnly() {","lastModifiedDate":"2021-10-27"},{"lineNumber":82,"author":{"gitId":"tryyang2001"},"content":"        LocalDate today \u003d LocalDate.now();","lastModifiedDate":"2021-10-27"},{"lineNumber":83,"author":{"gitId":"tryyang2001"},"content":"        for (int i \u003d foodItems.getSize() - 1; i \u003e\u003d 0; i--) {","lastModifiedDate":"2021-10-28"},{"lineNumber":84,"author":{"gitId":"tryyang2001"},"content":"            Food food \u003d (Food) foodItems.getItem(i);","lastModifiedDate":"2021-10-28"},{"lineNumber":85,"author":{"gitId":"tryyang2001"},"content":"            if (food.getDate().isBefore(today.minusDays(7))) {","lastModifiedDate":"2021-10-27"},{"lineNumber":86,"author":{"gitId":"tryyang2001"},"content":"                break;","lastModifiedDate":"2021-10-27"},{"lineNumber":87,"author":{"gitId":"tryyang2001"},"content":"            }","lastModifiedDate":"2021-10-27"},{"lineNumber":88,"author":{"gitId":"tryyang2001"},"content":"            if (isWithinPastSevenDays(food, today)) {","lastModifiedDate":"2021-10-27"},{"lineNumber":89,"author":{"gitId":"tryyang2001"},"content":"                filteredFoodItems.addItem(food);","lastModifiedDate":"2021-10-27"},{"lineNumber":90,"author":{"gitId":"tryyang2001"},"content":"            }","lastModifiedDate":"2021-10-27"},{"lineNumber":91,"author":{"gitId":"tryyang2001"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":92,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":93,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":94,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":95,"author":{"gitId":"tryyang2001"},"content":"     * Checks if the item is within 7 days of today.","lastModifiedDate":"2021-10-27"},{"lineNumber":96,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-10-27"},{"lineNumber":97,"author":{"gitId":"tryyang2001"},"content":"     * @param item The item from the item list","lastModifiedDate":"2021-10-27"},{"lineNumber":98,"author":{"gitId":"tryyang2001"},"content":"     * @return True if the item date is not before 7 days from today, and is not after today","lastModifiedDate":"2021-10-27"},{"lineNumber":99,"author":{"gitId":"tryyang2001"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":100,"author":{"gitId":"tryyang2001"},"content":"    private boolean isWithinPastSevenDays(Item item, LocalDate today) {","lastModifiedDate":"2021-10-27"},{"lineNumber":101,"author":{"gitId":"tryyang2001"},"content":"        boolean isBeforeOrEqualToday \u003d item.getDate().isEqual(today) || item.getDate().isBefore(today);","lastModifiedDate":"2021-10-27"},{"lineNumber":102,"author":{"gitId":"tryyang2001"},"content":"        boolean isWithinOneWeek \u003d item.getDate().isAfter(today.minusDays(8));","lastModifiedDate":"2021-10-27"},{"lineNumber":103,"author":{"gitId":"tryyang2001"},"content":"        return isBeforeOrEqualToday \u0026\u0026 isWithinOneWeek;","lastModifiedDate":"2021-10-27"},{"lineNumber":104,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":105,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":106,"author":{"gitId":"tryyang2001"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":107,"author":{"gitId":"tryyang2001"},"content":"     * Filters exercise list and add exercises that are within 7 days before today.","lastModifiedDate":"2021-10-27"},{"lineNumber":108,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":109,"author":{"gitId":"tryyang2001"},"content":"    private void filterExerciseListWithPastSevenDaysRecordOnly() {","lastModifiedDate":"2021-10-27"},{"lineNumber":110,"author":{"gitId":"tryyang2001"},"content":"        LocalDate today \u003d LocalDate.now();","lastModifiedDate":"2021-10-27"},{"lineNumber":111,"author":{"gitId":"tryyang2001"},"content":"        for (int i \u003d exerciseItems.getSize() - 1; i \u003e\u003d 0; i--) {","lastModifiedDate":"2021-10-28"},{"lineNumber":112,"author":{"gitId":"tryyang2001"},"content":"            Exercise exercise \u003d (Exercise) exerciseItems.getItem(i);","lastModifiedDate":"2021-10-28"},{"lineNumber":113,"author":{"gitId":"tryyang2001"},"content":"            if (exercise.getDate().isBefore(today.minusDays(7))) {","lastModifiedDate":"2021-10-27"},{"lineNumber":114,"author":{"gitId":"tryyang2001"},"content":"                break;","lastModifiedDate":"2021-10-27"},{"lineNumber":115,"author":{"gitId":"tryyang2001"},"content":"            }","lastModifiedDate":"2021-10-27"},{"lineNumber":116,"author":{"gitId":"tryyang2001"},"content":"            if (isWithinPastSevenDays(exercise, today)) {","lastModifiedDate":"2021-10-27"},{"lineNumber":117,"author":{"gitId":"tryyang2001"},"content":"                filteredExerciseItems.addItem(exercise);","lastModifiedDate":"2021-10-27"},{"lineNumber":118,"author":{"gitId":"tryyang2001"},"content":"            }","lastModifiedDate":"2021-10-27"},{"lineNumber":119,"author":{"gitId":"weidak"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":120,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":121,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":122,"author":{"gitId":"weidak"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003dExerciseList methods\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-27"},{"lineNumber":123,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":124,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":125,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":126,"author":{"gitId":"weidak"},"content":"     * Returns the exercise list.","lastModifiedDate":"2021-10-27"},{"lineNumber":127,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-10-27"},{"lineNumber":128,"author":{"gitId":"weidak"},"content":"     * @return exercise list in DataManager object","lastModifiedDate":"2021-10-27"},{"lineNumber":129,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":130,"author":{"gitId":"weidak"},"content":"    public ExerciseList getExerciseItems() {","lastModifiedDate":"2021-10-27"},{"lineNumber":131,"author":{"gitId":"tryyang2001"},"content":"        return this.exerciseItems;","lastModifiedDate":"2021-10-28"},{"lineNumber":132,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":133,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":134,"author":{"gitId":"weidak"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003dFutureExerciseList methods\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-27"},{"lineNumber":135,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":136,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":137,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":138,"author":{"gitId":"weidak"},"content":"     * Returns the future exercise items.","lastModifiedDate":"2021-10-27"},{"lineNumber":139,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-10-27"},{"lineNumber":140,"author":{"gitId":"weidak"},"content":"     * @return future exercise list in DataManager object","lastModifiedDate":"2021-10-27"},{"lineNumber":141,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":142,"author":{"gitId":"weidak"},"content":"    public FutureExerciseList getFutureExerciseItems() {","lastModifiedDate":"2021-10-27"},{"lineNumber":143,"author":{"gitId":"weidak"},"content":"        return this.futureExerciseItems;","lastModifiedDate":"2021-10-27"},{"lineNumber":144,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":145,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":146,"author":{"gitId":"weidak"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003dFoodList methods\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-27"},{"lineNumber":147,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":148,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":149,"author":{"gitId":"weidak"},"content":"     * Returns the food items.","lastModifiedDate":"2021-10-27"},{"lineNumber":150,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-10-27"},{"lineNumber":151,"author":{"gitId":"weidak"},"content":"     * @return food items in DataManager object","lastModifiedDate":"2021-10-27"},{"lineNumber":152,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":153,"author":{"gitId":"weidak"},"content":"    public FoodList getFoodItems() {","lastModifiedDate":"2021-10-27"},{"lineNumber":154,"author":{"gitId":"tryyang2001"},"content":"        return this.foodItems;","lastModifiedDate":"2021-10-28"},{"lineNumber":155,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":156,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":157,"author":{"gitId":"weidak"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003dFoodBank methods\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-27"},{"lineNumber":158,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":159,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":160,"author":{"gitId":"weidak"},"content":"     * Returns food bank items.","lastModifiedDate":"2021-10-27"},{"lineNumber":161,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-10-27"},{"lineNumber":162,"author":{"gitId":"weidak"},"content":"     * @return food bank items in DataManager object","lastModifiedDate":"2021-10-27"},{"lineNumber":163,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":164,"author":{"gitId":"weidak"},"content":"    public ItemBank getFoodBank() {","lastModifiedDate":"2021-10-27"},{"lineNumber":165,"author":{"gitId":"weidak"},"content":"        return this.foodBank;","lastModifiedDate":"2021-10-27"},{"lineNumber":166,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":167,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":168,"author":{"gitId":"weidak"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003dExerciseBank methods\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-27"},{"lineNumber":169,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":170,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":171,"author":{"gitId":"weidak"},"content":"     * Returns exercise bank items.","lastModifiedDate":"2021-10-27"},{"lineNumber":172,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-10-27"},{"lineNumber":173,"author":{"gitId":"weidak"},"content":"     * @return exercise bank items in DataManager object","lastModifiedDate":"2021-10-27"},{"lineNumber":174,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":175,"author":{"gitId":"weidak"},"content":"    public ItemBank getExerciseBank() {","lastModifiedDate":"2021-10-27"},{"lineNumber":176,"author":{"gitId":"weidak"},"content":"        return this.exerciseBank;","lastModifiedDate":"2021-10-27"},{"lineNumber":177,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":178,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":179,"author":{"gitId":"weidak"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003dProfile method\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-27"},{"lineNumber":180,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":181,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":182,"author":{"gitId":"weidak"},"content":"     * Replaces profile with data in {@code profile}.","lastModifiedDate":"2021-10-27"},{"lineNumber":183,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-10-27"},{"lineNumber":184,"author":{"gitId":"weidak"},"content":"     * @param profile profile to be set","lastModifiedDate":"2021-10-27"},{"lineNumber":185,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":186,"author":{"gitId":"weidak"},"content":"    public void setProfile(Profile profile) {","lastModifiedDate":"2021-10-27"},{"lineNumber":187,"author":{"gitId":"weidak"},"content":"        this.profile \u003d profile;","lastModifiedDate":"2021-10-27"},{"lineNumber":188,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":189,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":190,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":191,"author":{"gitId":"weidak"},"content":"     * Returns profile.","lastModifiedDate":"2021-10-27"},{"lineNumber":192,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-10-27"},{"lineNumber":193,"author":{"gitId":"weidak"},"content":"     * @return profile in DataManager object","lastModifiedDate":"2021-10-27"},{"lineNumber":194,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":195,"author":{"gitId":"weidak"},"content":"    public Profile getProfile() {","lastModifiedDate":"2021-10-27"},{"lineNumber":196,"author":{"gitId":"weidak"},"content":"        return this.profile;","lastModifiedDate":"2021-10-27"},{"lineNumber":197,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":198,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":199,"author":{"gitId":"weidak"},"content":"}","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"weidak":129,"tryyang2001":70}},{"path":"src/main/java/seedu/duke/data/item/Item.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.data.item;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":3,"author":{"gitId":"tlyi"},"content":"import seedu.duke.data.item.food.TimePeriod;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"tryyang2001"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"tryyang2001"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"tryyang2001"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"tryyang2001"},"content":"/**","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"tryyang2001"},"content":" * Item is an abstract class that contains methods used in common in Food and Exercise classes.","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"tryyang2001"},"content":" */","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"tryyang2001"},"content":"public abstract class Item {","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"tryyang2001"},"content":"    public static final String FILE_TEXT_DELIMITER \u003d \"|\";","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"tryyang2001"},"content":"    public static final DateTimeFormatter TIME_FORMATTER \u003d DateTimeFormatter.ofPattern(\"HH:mm\");","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"tryyang2001"},"content":"    public static final DateTimeFormatter DATE_FORMATTER_FOR_STORAGE \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy\");","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"tryyang2001"},"content":"    public static final DateTimeFormatter DATE_TIME_FORMATTER \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\");","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"tryyang2001"},"content":"    public static final DateTimeFormatter DATE_FORMAT_FOR_PRINTING \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy\");","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"tryyang2001"},"content":"    protected String name;","lastModifiedDate":"2021-10-16"},{"lineNumber":19,"author":{"gitId":"tryyang2001"},"content":"    protected int calories;","lastModifiedDate":"2021-10-16"},{"lineNumber":20,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":21,"author":{"gitId":"tryyang2001"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":22,"author":{"gitId":"tryyang2001"},"content":"     * Constructor for item object.","lastModifiedDate":"2021-10-16"},{"lineNumber":23,"author":{"gitId":"tryyang2001"},"content":"     *","lastModifiedDate":"2021-10-16"},{"lineNumber":24,"author":{"gitId":"tryyang2001"},"content":"     * @param name     The name or description of the item","lastModifiedDate":"2021-10-16"},{"lineNumber":25,"author":{"gitId":"tryyang2001"},"content":"     * @param calories The calorie intake/burnt from the item","lastModifiedDate":"2021-10-16"},{"lineNumber":26,"author":{"gitId":"tryyang2001"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":27,"author":{"gitId":"tryyang2001"},"content":"    public Item(String name, int calories) {","lastModifiedDate":"2021-10-16"},{"lineNumber":28,"author":{"gitId":"tryyang2001"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-10-16"},{"lineNumber":29,"author":{"gitId":"tryyang2001"},"content":"        this.calories \u003d calories;","lastModifiedDate":"2021-10-16"},{"lineNumber":30,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":31,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":32,"author":{"gitId":"tryyang2001"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":33,"author":{"gitId":"tryyang2001"},"content":"     * Gets the name or description of the item.","lastModifiedDate":"2021-10-16"},{"lineNumber":34,"author":{"gitId":"tryyang2001"},"content":"     *","lastModifiedDate":"2021-10-16"},{"lineNumber":35,"author":{"gitId":"tryyang2001"},"content":"     * @return The name or description of the item","lastModifiedDate":"2021-10-16"},{"lineNumber":36,"author":{"gitId":"tryyang2001"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":37,"author":{"gitId":"tryyang2001"},"content":"    public String getName() {","lastModifiedDate":"2021-10-16"},{"lineNumber":38,"author":{"gitId":"tryyang2001"},"content":"        return this.name;","lastModifiedDate":"2021-10-16"},{"lineNumber":39,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":40,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":41,"author":{"gitId":"tryyang2001"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":42,"author":{"gitId":"tryyang2001"},"content":"     * Gets the calorie intake/burnt for the item.","lastModifiedDate":"2021-10-16"},{"lineNumber":43,"author":{"gitId":"tryyang2001"},"content":"     *","lastModifiedDate":"2021-10-16"},{"lineNumber":44,"author":{"gitId":"tryyang2001"},"content":"     * @return The calorie intake/burnt from the item","lastModifiedDate":"2021-10-16"},{"lineNumber":45,"author":{"gitId":"tryyang2001"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":46,"author":{"gitId":"tryyang2001"},"content":"    public int getCalories() {","lastModifiedDate":"2021-10-16"},{"lineNumber":47,"author":{"gitId":"tryyang2001"},"content":"        return this.calories;","lastModifiedDate":"2021-10-16"},{"lineNumber":48,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":49,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":50,"author":{"gitId":"tryyang2001"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":51,"author":{"gitId":"tryyang2001"},"content":"     * Updates the name or description of the item.","lastModifiedDate":"2021-10-16"},{"lineNumber":52,"author":{"gitId":"tryyang2001"},"content":"     *","lastModifiedDate":"2021-10-16"},{"lineNumber":53,"author":{"gitId":"tryyang2001"},"content":"     * @param name The new name or description of the item","lastModifiedDate":"2021-10-16"},{"lineNumber":54,"author":{"gitId":"tryyang2001"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":55,"author":{"gitId":"tryyang2001"},"content":"    public void setName(String name) {","lastModifiedDate":"2021-10-16"},{"lineNumber":56,"author":{"gitId":"tryyang2001"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-10-16"},{"lineNumber":57,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":58,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":59,"author":{"gitId":"tryyang2001"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":60,"author":{"gitId":"tryyang2001"},"content":"     * Updates the calorie intake/burnt from the item.","lastModifiedDate":"2021-10-16"},{"lineNumber":61,"author":{"gitId":"tryyang2001"},"content":"     *","lastModifiedDate":"2021-10-16"},{"lineNumber":62,"author":{"gitId":"tryyang2001"},"content":"     * @param calories The new calorie intake/burnt from the item","lastModifiedDate":"2021-10-16"},{"lineNumber":63,"author":{"gitId":"tryyang2001"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":64,"author":{"gitId":"tryyang2001"},"content":"    public void setCalories(int calories) {","lastModifiedDate":"2021-10-16"},{"lineNumber":65,"author":{"gitId":"tryyang2001"},"content":"        this.calories \u003d calories;","lastModifiedDate":"2021-10-16"},{"lineNumber":66,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":67,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":68,"author":{"gitId":"tryyang2001"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":69,"author":{"gitId":"tryyang2001"},"content":"     * Converts the item in correct string format.","lastModifiedDate":"2021-10-16"},{"lineNumber":70,"author":{"gitId":"tryyang2001"},"content":"     *","lastModifiedDate":"2021-10-16"},{"lineNumber":71,"author":{"gitId":"tryyang2001"},"content":"     * @return The item name and calorie displayed in string","lastModifiedDate":"2021-10-16"},{"lineNumber":72,"author":{"gitId":"tryyang2001"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":73,"author":{"gitId":"tryyang2001"},"content":"    @Override","lastModifiedDate":"2021-10-16"},{"lineNumber":74,"author":{"gitId":"tryyang2001"},"content":"    public String toString() {","lastModifiedDate":"2021-10-16"},{"lineNumber":75,"author":{"gitId":"tryyang2001"},"content":"        return this.getName() + \" (\" + this.getCalories() + \" cal)\";","lastModifiedDate":"2021-10-16"},{"lineNumber":76,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":77,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":78,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":79,"author":{"gitId":"tlyi"},"content":"    public String toStringWithoutTime() {","lastModifiedDate":"2021-10-24"},{"lineNumber":80,"author":{"gitId":"tlyi"},"content":"        return this.getName() + \" (\" + this.getCalories() + \" cal)\";","lastModifiedDate":"2021-10-24"},{"lineNumber":81,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":82,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":83,"author":{"gitId":"tryyang2001"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":84,"author":{"gitId":"tryyang2001"},"content":"     * Converts the item to external file string format.","lastModifiedDate":"2021-10-16"},{"lineNumber":85,"author":{"gitId":"tryyang2001"},"content":"     *","lastModifiedDate":"2021-10-16"},{"lineNumber":86,"author":{"gitId":"tryyang2001"},"content":"     * @return Name and calorie of the item in string","lastModifiedDate":"2021-10-16"},{"lineNumber":87,"author":{"gitId":"tryyang2001"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":88,"author":{"gitId":"tryyang2001"},"content":"    public String toFileTextString() {","lastModifiedDate":"2021-10-16"},{"lineNumber":89,"author":{"gitId":"tryyang2001"},"content":"        return FILE_TEXT_DELIMITER + this.getName() + FILE_TEXT_DELIMITER + this.getCalories();","lastModifiedDate":"2021-10-16"},{"lineNumber":90,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":91,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":92,"author":{"gitId":"tryyang2001"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":93,"author":{"gitId":"tryyang2001"},"content":"     * Gets the date of the item, will be implemented in Food and Exercise classes.","lastModifiedDate":"2021-10-19"},{"lineNumber":94,"author":{"gitId":"tryyang2001"},"content":"     *","lastModifiedDate":"2021-10-19"},{"lineNumber":95,"author":{"gitId":"tryyang2001"},"content":"     * @return The date of the item","lastModifiedDate":"2021-10-19"},{"lineNumber":96,"author":{"gitId":"tryyang2001"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":97,"author":{"gitId":"tryyang2001"},"content":"    public abstract LocalDate getDate();","lastModifiedDate":"2021-10-19"},{"lineNumber":98,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":99,"author":{"gitId":"tlyi"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":100,"author":{"gitId":"tlyi"},"content":"     * Updates the date. To be implemented in Exercise class.","lastModifiedDate":"2021-10-24"},{"lineNumber":101,"author":{"gitId":"tlyi"},"content":"     *","lastModifiedDate":"2021-10-24"},{"lineNumber":102,"author":{"gitId":"tlyi"},"content":"     * @param date The new date of the exercise done in LocalDate","lastModifiedDate":"2021-10-24"},{"lineNumber":103,"author":{"gitId":"tlyi"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":104,"author":{"gitId":"tlyi"},"content":"    public abstract void setDate(LocalDate date);","lastModifiedDate":"2021-10-24"},{"lineNumber":105,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":106,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":107,"author":{"gitId":"tryyang2001"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":108,"author":{"gitId":"tryyang2001"},"content":"     * Gets the time period of the item, will be implemented in Food class.","lastModifiedDate":"2021-10-19"},{"lineNumber":109,"author":{"gitId":"tryyang2001"},"content":"     *","lastModifiedDate":"2021-10-19"},{"lineNumber":110,"author":{"gitId":"tryyang2001"},"content":"     * @return The time period of the food item","lastModifiedDate":"2021-10-19"},{"lineNumber":111,"author":{"gitId":"tryyang2001"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":112,"author":{"gitId":"tryyang2001"},"content":"    public TimePeriod getTimePeriod() {","lastModifiedDate":"2021-10-19"},{"lineNumber":113,"author":{"gitId":"tryyang2001"},"content":"        return null;","lastModifiedDate":"2021-10-19"},{"lineNumber":114,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":115,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":116,"author":{"gitId":"tryyang2001"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":117,"author":{"gitId":"tryyang2001"},"content":"     * Gets the date and time of the item, will be implemented in Food class.","lastModifiedDate":"2021-10-19"},{"lineNumber":118,"author":{"gitId":"tryyang2001"},"content":"     *","lastModifiedDate":"2021-10-19"},{"lineNumber":119,"author":{"gitId":"tryyang2001"},"content":"     * @return The date and time of the food item in LocalDateTime","lastModifiedDate":"2021-10-19"},{"lineNumber":120,"author":{"gitId":"tryyang2001"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":121,"author":{"gitId":"tryyang2001"},"content":"    public LocalDateTime getDateTime() {","lastModifiedDate":"2021-10-19"},{"lineNumber":122,"author":{"gitId":"tryyang2001"},"content":"        return null;","lastModifiedDate":"2021-10-19"},{"lineNumber":123,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":124,"author":{"gitId":"tryyang2001"},"content":"}","lastModifiedDate":"2021-10-16"}],"authorContributionMap":{"tryyang2001":109,"tlyi":15}},{"path":"src/main/java/seedu/duke/data/item/ItemBank.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.data.item;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"tlyi"},"content":"import seedu.duke.data.item.exceptions.DuplicateItemInBankException;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"tlyi"},"content":"import seedu.duke.data.item.exceptions.ItemNotFoundInBankException;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"tlyi"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"tlyi"},"content":"/**","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"tlyi"},"content":" * Represents a list of Items, meant to store a repository of user-defined Exercise items or Food items.","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"tlyi"},"content":" * Contains all the methods for actions that can be done on the list.","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"tlyi"},"content":" */","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"tlyi"},"content":"public class ItemBank {","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"tlyi"},"content":"    protected static final String LS \u003d System.lineSeparator();","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"tlyi"},"content":"    protected static final String TAB \u003d \"\\t\";","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"tryyang2001"},"content":"    protected ArrayList\u003cItem\u003e internalItems \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-23"},{"lineNumber":16,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"tryyang2001"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":18,"author":{"gitId":"tryyang2001"},"content":"     * Adds new item to the item bank.","lastModifiedDate":"2021-10-23"},{"lineNumber":19,"author":{"gitId":"tryyang2001"},"content":"     *","lastModifiedDate":"2021-10-23"},{"lineNumber":20,"author":{"gitId":"tryyang2001"},"content":"     * @param item The new item to add","lastModifiedDate":"2021-10-23"},{"lineNumber":21,"author":{"gitId":"tryyang2001"},"content":"     * @throws DuplicateItemInBankException Throws this error when duplicate items are found","lastModifiedDate":"2021-10-23"},{"lineNumber":22,"author":{"gitId":"tryyang2001"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":23,"author":{"gitId":"tlyi"},"content":"    public void addItem(Item item) throws DuplicateItemInBankException {","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"tlyi"},"content":"        try {","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"tlyi"},"content":"            getCaloriesOfItemWithMatchingName(item.getName());","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"tlyi"},"content":"            throw new DuplicateItemInBankException();","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"tlyi"},"content":"        } catch (ItemNotFoundInBankException e) {","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"tlyi"},"content":"            internalItems.add(item);","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"tryyang2001"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":33,"author":{"gitId":"tryyang2001"},"content":"     * Returns item with the given index in the item bank.","lastModifiedDate":"2021-10-23"},{"lineNumber":34,"author":{"gitId":"tryyang2001"},"content":"     *","lastModifiedDate":"2021-10-23"},{"lineNumber":35,"author":{"gitId":"tryyang2001"},"content":"     * @param index The index of the item","lastModifiedDate":"2021-10-23"},{"lineNumber":36,"author":{"gitId":"tryyang2001"},"content":"     * @return The item with the given index","lastModifiedDate":"2021-10-23"},{"lineNumber":37,"author":{"gitId":"tryyang2001"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":38,"author":{"gitId":"weidak"},"content":"    public Item getItem(int index) {","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"weidak"},"content":"        return internalItems.get(index);","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":42,"author":{"gitId":"tryyang2001"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":43,"author":{"gitId":"tryyang2001"},"content":"     * Deletes the item in the bank.","lastModifiedDate":"2021-10-23"},{"lineNumber":44,"author":{"gitId":"tryyang2001"},"content":"     *","lastModifiedDate":"2021-10-23"},{"lineNumber":45,"author":{"gitId":"tryyang2001"},"content":"     * @param index The index of the item to delete","lastModifiedDate":"2021-10-23"},{"lineNumber":46,"author":{"gitId":"tryyang2001"},"content":"     * @return The deleted item","lastModifiedDate":"2021-10-23"},{"lineNumber":47,"author":{"gitId":"tryyang2001"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":48,"author":{"gitId":"tlyi"},"content":"    public Item deleteItem(int index) {","lastModifiedDate":"2021-10-19"},{"lineNumber":49,"author":{"gitId":"tlyi"},"content":"        return internalItems.remove(index);","lastModifiedDate":"2021-10-19"},{"lineNumber":50,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":51,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":52,"author":{"gitId":"tryyang2001"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":53,"author":{"gitId":"tryyang2001"},"content":"     * Deletes all the item inside the item bank.","lastModifiedDate":"2021-10-23"},{"lineNumber":54,"author":{"gitId":"tryyang2001"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":55,"author":{"gitId":"tlyi"},"content":"    public void clearList() {","lastModifiedDate":"2021-10-19"},{"lineNumber":56,"author":{"gitId":"tlyi"},"content":"        internalItems.clear();","lastModifiedDate":"2021-10-19"},{"lineNumber":57,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":58,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":59,"author":{"gitId":"tryyang2001"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":60,"author":{"gitId":"tryyang2001"},"content":"     * Returns the size of the item bank.","lastModifiedDate":"2021-10-23"},{"lineNumber":61,"author":{"gitId":"tryyang2001"},"content":"     *","lastModifiedDate":"2021-10-23"},{"lineNumber":62,"author":{"gitId":"tryyang2001"},"content":"     * @return The size of the array list attribute","lastModifiedDate":"2021-10-23"},{"lineNumber":63,"author":{"gitId":"tryyang2001"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":64,"author":{"gitId":"tlyi"},"content":"    public int getSize() {","lastModifiedDate":"2021-10-19"},{"lineNumber":65,"author":{"gitId":"tlyi"},"content":"        return internalItems.size();","lastModifiedDate":"2021-10-19"},{"lineNumber":66,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":67,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":68,"author":{"gitId":"tryyang2001"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":69,"author":{"gitId":"tryyang2001"},"content":"     * Converts the array list to a string for printing purpose.","lastModifiedDate":"2021-10-23"},{"lineNumber":70,"author":{"gitId":"tryyang2001"},"content":"     *","lastModifiedDate":"2021-10-23"},{"lineNumber":71,"author":{"gitId":"tryyang2001"},"content":"     * @return The array list in string","lastModifiedDate":"2021-10-23"},{"lineNumber":72,"author":{"gitId":"tryyang2001"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":73,"author":{"gitId":"tlyi"},"content":"    public String convertToString() {","lastModifiedDate":"2021-10-19"},{"lineNumber":74,"author":{"gitId":"tlyi"},"content":"        StringBuilder listToString \u003d new StringBuilder();","lastModifiedDate":"2021-10-19"},{"lineNumber":75,"author":{"gitId":"tlyi"},"content":"        for (int i \u003d 0; i \u003c internalItems.size(); i++) {","lastModifiedDate":"2021-10-19"},{"lineNumber":76,"author":{"gitId":"tlyi"},"content":"            listToString.append(TAB).append(i + 1).append(\". \")","lastModifiedDate":"2021-10-24"},{"lineNumber":77,"author":{"gitId":"tlyi"},"content":"                    .append(internalItems.get(i).toStringWithoutTime()).append(LS);","lastModifiedDate":"2021-10-24"},{"lineNumber":78,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":79,"author":{"gitId":"tlyi"},"content":"        return listToString.toString().stripTrailing();","lastModifiedDate":"2021-10-19"},{"lineNumber":80,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":81,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":82,"author":{"gitId":"tryyang2001"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":83,"author":{"gitId":"tryyang2001"},"content":"     * Gets the calories of the item which has the same name as the input item.","lastModifiedDate":"2021-10-23"},{"lineNumber":84,"author":{"gitId":"tryyang2001"},"content":"     *","lastModifiedDate":"2021-10-23"},{"lineNumber":85,"author":{"gitId":"tryyang2001"},"content":"     * @param inputName The input item name in string","lastModifiedDate":"2021-10-23"},{"lineNumber":86,"author":{"gitId":"tryyang2001"},"content":"     * @return The calories value of the item which has the same name as the input item.","lastModifiedDate":"2021-10-23"},{"lineNumber":87,"author":{"gitId":"tryyang2001"},"content":"     * @throws ItemNotFoundInBankException Throws this exception when there is no item which has the same name","lastModifiedDate":"2021-10-23"},{"lineNumber":88,"author":{"gitId":"tryyang2001"},"content":"     *                                     as the input item","lastModifiedDate":"2021-10-23"},{"lineNumber":89,"author":{"gitId":"tryyang2001"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":90,"author":{"gitId":"tlyi"},"content":"    public int getCaloriesOfItemWithMatchingName(String inputName) throws ItemNotFoundInBankException {","lastModifiedDate":"2021-10-19"},{"lineNumber":91,"author":{"gitId":"tlyi"},"content":"        Item matchingItem \u003d internalItems","lastModifiedDate":"2021-10-19"},{"lineNumber":92,"author":{"gitId":"tlyi"},"content":"                .stream()","lastModifiedDate":"2021-10-19"},{"lineNumber":93,"author":{"gitId":"tlyi"},"content":"                .filter(item -\u003e item.getName().equalsIgnoreCase(inputName))","lastModifiedDate":"2021-10-20"},{"lineNumber":94,"author":{"gitId":"tlyi"},"content":"                .findAny()","lastModifiedDate":"2021-10-19"},{"lineNumber":95,"author":{"gitId":"tlyi"},"content":"                .orElse(null);","lastModifiedDate":"2021-10-19"},{"lineNumber":96,"author":{"gitId":"tlyi"},"content":"        if (matchingItem \u003d\u003d null) {","lastModifiedDate":"2021-10-19"},{"lineNumber":97,"author":{"gitId":"tlyi"},"content":"            throw new ItemNotFoundInBankException();","lastModifiedDate":"2021-10-19"},{"lineNumber":98,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":99,"author":{"gitId":"tlyi"},"content":"        return matchingItem.getCalories();","lastModifiedDate":"2021-10-19"},{"lineNumber":100,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":101,"author":{"gitId":"tlyi"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"weidak":3,"tryyang2001":40,"tlyi":58}},{"path":"src/main/java/seedu/duke/data/item/ItemList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.data.item;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":3,"author":{"gitId":"tryyang2001"},"content":"import seedu.duke.data.item.food.FoodList;","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"tryyang2001"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-16"},{"lineNumber":6,"author":{"gitId":"tryyang2001"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"tryyang2001"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"tryyang2001"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"tryyang2001"},"content":"/**","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"tryyang2001"},"content":" * ItemList is an abstract class that contains all the common methods for food list and exercise list.","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"tryyang2001"},"content":" */","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"tryyang2001"},"content":"public abstract class ItemList extends ItemBank {","lastModifiedDate":"2021-10-23"},{"lineNumber":14,"author":{"gitId":"tryyang2001"},"content":"    public static final String MESSAGE_ITEM \u003d \"%d. %s\";","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"tryyang2001"},"content":"    public static final String ITEM_LIST_DIVIDER \u003d \"...............................................\"","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"tryyang2001"},"content":"            + \"...........................................................\";","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"tryyang2001"},"content":"    protected static final String DATE_FORMAT \u003d \"dd MMM yyyy\";","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"tryyang2001"},"content":"    protected static final String LS \u003d System.lineSeparator();","lastModifiedDate":"2021-10-16"},{"lineNumber":19,"author":{"gitId":"tryyang2001"},"content":"    protected static final String TAB \u003d \"\\t\";","lastModifiedDate":"2021-10-16"},{"lineNumber":20,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"tryyang2001"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"tryyang2001"},"content":"     * Adds an item into the item list.","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"tryyang2001"},"content":"     *","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"tryyang2001"},"content":"     * @param item The item class object to add","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"tryyang2001"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"tryyang2001"},"content":"    @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":27,"author":{"gitId":"tryyang2001"},"content":"    public void addItem(Item item) {","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"tryyang2001"},"content":"        this.internalItems.add(item);","lastModifiedDate":"2021-10-23"},{"lineNumber":29,"author":{"gitId":"weidak"},"content":"        sortList();","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"tryyang2001"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"tryyang2001"},"content":"     * Computes the sum of calorie of all items in the item list.","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"tryyang2001"},"content":"     *","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"tryyang2001"},"content":"     * @return Integer value of the sum of calorie of all the items","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"tryyang2001"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":37,"author":{"gitId":"tryyang2001"},"content":"    public int getTotalCalories() {","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"tryyang2001"},"content":"        int totalCalories \u003d internalItems.stream().mapToInt(Item::getCalories).sum();","lastModifiedDate":"2021-10-23"},{"lineNumber":39,"author":{"gitId":"tryyang2001"},"content":"        assert totalCalories \u003e\u003d 0 : \"Total calories cannot less than 0\";","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"tryyang2001"},"content":"        return totalCalories;","lastModifiedDate":"2021-10-19"},{"lineNumber":41,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":42,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":43,"author":{"gitId":"tryyang2001"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":44,"author":{"gitId":"tryyang2001"},"content":"     * Computes the sum of calorie of all food items consumed in a specific date.","lastModifiedDate":"2021-10-19"},{"lineNumber":45,"author":{"gitId":"tryyang2001"},"content":"     *","lastModifiedDate":"2021-10-19"},{"lineNumber":46,"author":{"gitId":"tryyang2001"},"content":"     * @param date The date to query all the consumed food items","lastModifiedDate":"2021-10-19"},{"lineNumber":47,"author":{"gitId":"tryyang2001"},"content":"     * @return Integer value of the sum of calorie of all food items consumed in the given date","lastModifiedDate":"2021-10-19"},{"lineNumber":48,"author":{"gitId":"tryyang2001"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":49,"author":{"gitId":"tryyang2001"},"content":"    public int getTotalCaloriesWithDate(LocalDate date) {","lastModifiedDate":"2021-10-19"},{"lineNumber":50,"author":{"gitId":"tryyang2001"},"content":"        int totalCalories \u003d internalItems.stream()","lastModifiedDate":"2021-10-23"},{"lineNumber":51,"author":{"gitId":"tryyang2001"},"content":"                .filter(i -\u003e i.getDate().isEqual(date))","lastModifiedDate":"2021-10-19"},{"lineNumber":52,"author":{"gitId":"tryyang2001"},"content":"                .mapToInt(Item::getCalories)","lastModifiedDate":"2021-10-19"},{"lineNumber":53,"author":{"gitId":"tryyang2001"},"content":"                .sum();","lastModifiedDate":"2021-10-19"},{"lineNumber":54,"author":{"gitId":"tryyang2001"},"content":"        assert totalCalories \u003e\u003d 0 : \"Total calories cannot less than 0\";","lastModifiedDate":"2021-10-19"},{"lineNumber":55,"author":{"gitId":"tryyang2001"},"content":"        return totalCalories;","lastModifiedDate":"2021-10-19"},{"lineNumber":56,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":57,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":58,"author":{"gitId":"tryyang2001"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":59,"author":{"gitId":"tryyang2001"},"content":"     * Sorts the item list according to date (and) time, will be implemented in FoodList and ExerciseList.","lastModifiedDate":"2021-10-19"},{"lineNumber":60,"author":{"gitId":"tryyang2001"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":61,"author":{"gitId":"tryyang2001"},"content":"    public abstract void sortList();","lastModifiedDate":"2021-10-19"},{"lineNumber":62,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":63,"author":{"gitId":"tryyang2001"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":64,"author":{"gitId":"tryyang2001"},"content":"     * Converts the item list of a specific date to a string for printing purpose,","lastModifiedDate":"2021-10-19"},{"lineNumber":65,"author":{"gitId":"tryyang2001"},"content":"     * will be implemented in FoodList and ExerciseList.","lastModifiedDate":"2021-10-19"},{"lineNumber":66,"author":{"gitId":"tryyang2001"},"content":"     *","lastModifiedDate":"2021-10-19"},{"lineNumber":67,"author":{"gitId":"tryyang2001"},"content":"     * @param date The given date to query the item list","lastModifiedDate":"2021-10-19"},{"lineNumber":68,"author":{"gitId":"tryyang2001"},"content":"     * @return The string of the item list of a specific date","lastModifiedDate":"2021-10-19"},{"lineNumber":69,"author":{"gitId":"tryyang2001"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":70,"author":{"gitId":"tryyang2001"},"content":"    public abstract String convertToStringBySpecificDate(LocalDate date);","lastModifiedDate":"2021-10-19"},{"lineNumber":71,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":72,"author":{"gitId":"tryyang2001"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":73,"author":{"gitId":"tryyang2001"},"content":"     * Adds all items in the filtered list to the list, also prevents adding duplicate items.","lastModifiedDate":"2021-10-26"},{"lineNumber":74,"author":{"gitId":"tryyang2001"},"content":"     *","lastModifiedDate":"2021-10-26"},{"lineNumber":75,"author":{"gitId":"tryyang2001"},"content":"     * @param filteredItemList The other item list","lastModifiedDate":"2021-10-26"},{"lineNumber":76,"author":{"gitId":"tryyang2001"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":77,"author":{"gitId":"tryyang2001"},"content":"    public void addAll(ItemList filteredItemList) {","lastModifiedDate":"2021-10-26"},{"lineNumber":78,"author":{"gitId":"tryyang2001"},"content":"        LocalDate today \u003d LocalDate.now();","lastModifiedDate":"2021-10-26"},{"lineNumber":79,"author":{"gitId":"tryyang2001"},"content":"        ArrayList\u003cItem\u003e listToRemove \u003d (ArrayList\u003cItem\u003e) internalItems","lastModifiedDate":"2021-10-26"},{"lineNumber":80,"author":{"gitId":"tryyang2001"},"content":"                .stream()","lastModifiedDate":"2021-10-26"},{"lineNumber":81,"author":{"gitId":"tryyang2001"},"content":"                .filter(f -\u003e f.getDate().isAfter(today.minusDays(8)))","lastModifiedDate":"2021-10-26"},{"lineNumber":82,"author":{"gitId":"tryyang2001"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2021-10-26"},{"lineNumber":83,"author":{"gitId":"tryyang2001"},"content":"        internalItems.removeAll(listToRemove);","lastModifiedDate":"2021-10-26"},{"lineNumber":84,"author":{"gitId":"tryyang2001"},"content":"        for (int i \u003d 0; i \u003c filteredItemList.getSize(); i++) {","lastModifiedDate":"2021-10-26"},{"lineNumber":85,"author":{"gitId":"tryyang2001"},"content":"            internalItems.add(filteredItemList.getItem(i));","lastModifiedDate":"2021-10-26"},{"lineNumber":86,"author":{"gitId":"tryyang2001"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":87,"author":{"gitId":"tryyang2001"},"content":"        this.sortList();","lastModifiedDate":"2021-10-26"},{"lineNumber":88,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":89,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":90,"author":{"gitId":"tryyang2001"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":91,"author":{"gitId":"tryyang2001"},"content":"     * Gets the day of the week of the given date.","lastModifiedDate":"2021-10-16"},{"lineNumber":92,"author":{"gitId":"tryyang2001"},"content":"     *","lastModifiedDate":"2021-10-16"},{"lineNumber":93,"author":{"gitId":"tryyang2001"},"content":"     * @param currentDate The date to query the day of the week","lastModifiedDate":"2021-10-16"},{"lineNumber":94,"author":{"gitId":"tryyang2001"},"content":"     * @return The day of the week in string","lastModifiedDate":"2021-10-16"},{"lineNumber":95,"author":{"gitId":"tryyang2001"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":96,"author":{"gitId":"tryyang2001"},"content":"    protected String getDayOfWeek(LocalDate currentDate) {","lastModifiedDate":"2021-10-19"},{"lineNumber":97,"author":{"gitId":"tryyang2001"},"content":"        String day \u003d currentDate.getDayOfWeek().toString();","lastModifiedDate":"2021-10-16"},{"lineNumber":98,"author":{"gitId":"tryyang2001"},"content":"        day \u003d day.charAt(0) + day.substring(1).toLowerCase();","lastModifiedDate":"2021-10-16"},{"lineNumber":99,"author":{"gitId":"tryyang2001"},"content":"        return day;","lastModifiedDate":"2021-10-16"},{"lineNumber":100,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":101,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":102,"author":{"gitId":"tryyang2001"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":103,"author":{"gitId":"tryyang2001"},"content":"     * Common method used in food list and exercise list to generate the item count string.","lastModifiedDate":"2021-10-18"},{"lineNumber":104,"author":{"gitId":"tryyang2001"},"content":"     *","lastModifiedDate":"2021-10-18"},{"lineNumber":105,"author":{"gitId":"tryyang2001"},"content":"     * @param itemListInString The StringBuilder that will contain the correct output string format","lastModifiedDate":"2021-10-18"},{"lineNumber":106,"author":{"gitId":"tryyang2001"},"content":"     * @param size             The size of the item list","lastModifiedDate":"2021-10-18"},{"lineNumber":107,"author":{"gitId":"tryyang2001"},"content":"     * @param date             The date to query the item count","lastModifiedDate":"2021-10-18"},{"lineNumber":108,"author":{"gitId":"tryyang2001"},"content":"     * @param message          The string format to display","lastModifiedDate":"2021-10-18"},{"lineNumber":109,"author":{"gitId":"tryyang2001"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":110,"author":{"gitId":"tryyang2001"},"content":"    protected void convertItemCountToString(StringBuilder itemListInString, int size, LocalDate date, String message) {","lastModifiedDate":"2021-10-18"},{"lineNumber":111,"author":{"gitId":"tryyang2001"},"content":"        itemListInString","lastModifiedDate":"2021-10-18"},{"lineNumber":112,"author":{"gitId":"tryyang2001"},"content":"                .append(String.format(message, size, getDayOfWeek(date),","lastModifiedDate":"2021-10-19"},{"lineNumber":113,"author":{"gitId":"tryyang2001"},"content":"                        date.format(DateTimeFormatter.ofPattern(DATE_FORMAT))))","lastModifiedDate":"2021-10-18"},{"lineNumber":114,"author":{"gitId":"tryyang2001"},"content":"                .append(ItemList.LS);","lastModifiedDate":"2021-10-18"},{"lineNumber":115,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":116,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":117,"author":{"gitId":"tryyang2001"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":118,"author":{"gitId":"tryyang2001"},"content":"     * Common method used in food list and exercise list to generate the item string.","lastModifiedDate":"2021-10-18"},{"lineNumber":119,"author":{"gitId":"tryyang2001"},"content":"     *","lastModifiedDate":"2021-10-18"},{"lineNumber":120,"author":{"gitId":"tryyang2001"},"content":"     * @param itemListInString The StringBuilder that will contain the correct output string format","lastModifiedDate":"2021-10-18"},{"lineNumber":121,"author":{"gitId":"tryyang2001"},"content":"     * @param index            The index of the item in the list","lastModifiedDate":"2021-10-18"},{"lineNumber":122,"author":{"gitId":"tryyang2001"},"content":"     * @param item             The item to convert to string","lastModifiedDate":"2021-10-18"},{"lineNumber":123,"author":{"gitId":"tryyang2001"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":124,"author":{"gitId":"tryyang2001"},"content":"    protected void convertItemToString(StringBuilder itemListInString, int index, Item item) {","lastModifiedDate":"2021-10-18"},{"lineNumber":125,"author":{"gitId":"tryyang2001"},"content":"        itemListInString.append(ItemList.TAB).append(String.format(MESSAGE_ITEM, index, item)).append(ItemList.LS);","lastModifiedDate":"2021-10-19"},{"lineNumber":126,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":127,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":128,"author":{"gitId":"tryyang2001"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":129,"author":{"gitId":"tryyang2001"},"content":"     * Common method used in food list and exercise list to generate the total calorie string.","lastModifiedDate":"2021-10-18"},{"lineNumber":130,"author":{"gitId":"tryyang2001"},"content":"     *","lastModifiedDate":"2021-10-18"},{"lineNumber":131,"author":{"gitId":"tryyang2001"},"content":"     * @param itemListInString The StringBuilder that will contain the correct output string format","lastModifiedDate":"2021-10-18"},{"lineNumber":132,"author":{"gitId":"tryyang2001"},"content":"     * @param totalCalories    The sum of calorie for each item stored inside the list","lastModifiedDate":"2021-10-18"},{"lineNumber":133,"author":{"gitId":"tryyang2001"},"content":"     * @param message          The string format to display","lastModifiedDate":"2021-10-18"},{"lineNumber":134,"author":{"gitId":"tryyang2001"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":135,"author":{"gitId":"tryyang2001"},"content":"    protected void convertTotalCaloriesToString(StringBuilder itemListInString, int totalCalories, String message) {","lastModifiedDate":"2021-10-18"},{"lineNumber":136,"author":{"gitId":"tryyang2001"},"content":"        itemListInString.append(String.format(message, totalCalories)).append(ItemList.LS);","lastModifiedDate":"2021-10-19"},{"lineNumber":137,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":138,"author":{"gitId":"tryyang2001"},"content":"}","lastModifiedDate":"2021-10-16"}],"authorContributionMap":{"weidak":1,"tryyang2001":136,"tlyi":1}},{"path":"src/main/java/seedu/duke/data/item/exceptions/DuplicateItemInBankException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.data.item.exceptions;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"tlyi"},"content":"/**","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"tlyi"},"content":" * Represents an error where the item to be added to the bank already exists (compared by name).","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"tlyi"},"content":" */","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"tlyi"},"content":"public class DuplicateItemInBankException extends Exception {","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"tlyi"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"tlyi":8}},{"path":"src/main/java/seedu/duke/data/item/exceptions/ItemNotFoundInBankException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.data.item.exceptions;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"tlyi"},"content":"/**","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"tlyi"},"content":" * Represents an error where the item is not found in the item bank.","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"tlyi"},"content":" */","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"tlyi"},"content":"public class ItemNotFoundInBankException extends Exception {","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"tlyi"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"tlyi":7}},{"path":"src/main/java/seedu/duke/data/item/exercise/Exercise.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.data.item.exercise;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"tlyi"},"content":"import seedu.duke.data.item.Item;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":5,"author":{"gitId":"tryyang2001"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-16"},{"lineNumber":6,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"tryyang2001"},"content":"public class Exercise extends Item {","lastModifiedDate":"2021-10-16"},{"lineNumber":8,"author":{"gitId":"xingjie99"},"content":"    public static final String EXERCISE_TYPE \u003d \"E\";","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"tryyang2001"},"content":"    public static final String AT \u003d \" @ \";","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"tryyang2001"},"content":"    protected LocalDate date;","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"xingjie99"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"tryyang2001"},"content":"     * Constructor for exercise object when the date is not provided.","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"xingjie99"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"tryyang2001"},"content":"     * @param name     The name or description of the exercise.","lastModifiedDate":"2021-10-16"},{"lineNumber":16,"author":{"gitId":"tryyang2001"},"content":"     * @param calories The calorie burnt from the exercise.","lastModifiedDate":"2021-10-16"},{"lineNumber":17,"author":{"gitId":"xingjie99"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"xingjie99"},"content":"    public Exercise(String name, int calories) {","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"tryyang2001"},"content":"        super(name, calories);","lastModifiedDate":"2021-10-16"},{"lineNumber":20,"author":{"gitId":"tryyang2001"},"content":"        this.date \u003d LocalDate.now();","lastModifiedDate":"2021-10-16"},{"lineNumber":21,"author":{"gitId":"xingjie99"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"tryyang2001"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":24,"author":{"gitId":"tryyang2001"},"content":"     * Constructor for the exercise object when all attributes are provided.","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"tryyang2001"},"content":"     *","lastModifiedDate":"2021-10-16"},{"lineNumber":26,"author":{"gitId":"tryyang2001"},"content":"     * @param name     The name or description of the exercise","lastModifiedDate":"2021-10-16"},{"lineNumber":27,"author":{"gitId":"tryyang2001"},"content":"     * @param calories The calorie burnt from the exercise","lastModifiedDate":"2021-10-16"},{"lineNumber":28,"author":{"gitId":"tryyang2001"},"content":"     * @param date     The date when the exercise is taken","lastModifiedDate":"2021-10-16"},{"lineNumber":29,"author":{"gitId":"tryyang2001"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":30,"author":{"gitId":"tryyang2001"},"content":"    public Exercise(String name, int calories, LocalDate date) {","lastModifiedDate":"2021-10-16"},{"lineNumber":31,"author":{"gitId":"tryyang2001"},"content":"        super(name, calories);","lastModifiedDate":"2021-10-16"},{"lineNumber":32,"author":{"gitId":"tryyang2001"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-10-16"},{"lineNumber":33,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":34,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":35,"author":{"gitId":"tryyang2001"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":36,"author":{"gitId":"tryyang2001"},"content":"     * Gets the date of the exercise taken.","lastModifiedDate":"2021-10-16"},{"lineNumber":37,"author":{"gitId":"tryyang2001"},"content":"     *","lastModifiedDate":"2021-10-16"},{"lineNumber":38,"author":{"gitId":"tryyang2001"},"content":"     * @return The date of the exercise done in LocalDate","lastModifiedDate":"2021-10-16"},{"lineNumber":39,"author":{"gitId":"tryyang2001"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":40,"author":{"gitId":"tryyang2001"},"content":"    @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":41,"author":{"gitId":"tryyang2001"},"content":"    public LocalDate getDate() {","lastModifiedDate":"2021-10-16"},{"lineNumber":42,"author":{"gitId":"tryyang2001"},"content":"        return date;","lastModifiedDate":"2021-10-16"},{"lineNumber":43,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":44,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":45,"author":{"gitId":"tryyang2001"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":46,"author":{"gitId":"tryyang2001"},"content":"     * Updates the date of the exercise taken.","lastModifiedDate":"2021-10-16"},{"lineNumber":47,"author":{"gitId":"tryyang2001"},"content":"     *","lastModifiedDate":"2021-10-16"},{"lineNumber":48,"author":{"gitId":"tryyang2001"},"content":"     * @param date The new date of the exercise done in LocalDate","lastModifiedDate":"2021-10-16"},{"lineNumber":49,"author":{"gitId":"tryyang2001"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":50,"author":{"gitId":"tlyi"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":51,"author":{"gitId":"tryyang2001"},"content":"    public void setDate(LocalDate date) {","lastModifiedDate":"2021-10-16"},{"lineNumber":52,"author":{"gitId":"tryyang2001"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-10-16"},{"lineNumber":53,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":54,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":55,"author":{"gitId":"xingjie99"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":56,"author":{"gitId":"tryyang2001"},"content":"     * Converts the exercise to external file string format.","lastModifiedDate":"2021-10-16"},{"lineNumber":57,"author":{"gitId":"xingjie99"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":58,"author":{"gitId":"tryyang2001"},"content":"     * @return Name, calorie and date of the exercise in string","lastModifiedDate":"2021-10-18"},{"lineNumber":59,"author":{"gitId":"xingjie99"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":60,"author":{"gitId":"tryyang2001"},"content":"    @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":61,"author":{"gitId":"xingjie99"},"content":"    public String toFileTextString() {","lastModifiedDate":"2021-10-11"},{"lineNumber":62,"author":{"gitId":"tryyang2001"},"content":"        return EXERCISE_TYPE","lastModifiedDate":"2021-10-18"},{"lineNumber":63,"author":{"gitId":"tryyang2001"},"content":"                + super.toFileTextString()","lastModifiedDate":"2021-10-18"},{"lineNumber":64,"author":{"gitId":"tryyang2001"},"content":"                + FILE_TEXT_DELIMITER","lastModifiedDate":"2021-10-18"},{"lineNumber":65,"author":{"gitId":"tryyang2001"},"content":"                + this.getDate().format(DATE_FORMATTER_FOR_STORAGE);","lastModifiedDate":"2021-10-27"},{"lineNumber":66,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":67,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":68,"author":{"gitId":"tryyang2001"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":69,"author":{"gitId":"tryyang2001"},"content":"     * Converts the Exercise item to string for printing after adding or deleting Exercise.","lastModifiedDate":"2021-10-27"},{"lineNumber":70,"author":{"gitId":"tryyang2001"},"content":"     *","lastModifiedDate":"2021-10-27"},{"lineNumber":71,"author":{"gitId":"tryyang2001"},"content":"     * @return String pattern of Food item with time and date","lastModifiedDate":"2021-10-27"},{"lineNumber":72,"author":{"gitId":"tryyang2001"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":73,"author":{"gitId":"tryyang2001"},"content":"    public String toStringWithDate() {","lastModifiedDate":"2021-10-27"},{"lineNumber":74,"author":{"gitId":"tryyang2001"},"content":"        return super.toString() + AT + this.getDate().format(DATE_FORMAT_FOR_PRINTING);","lastModifiedDate":"2021-10-27"},{"lineNumber":75,"author":{"gitId":"xingjie99"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":76,"author":{"gitId":"xingjie99"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"xingjie99":15,"tryyang2001":58,"tlyi":3}},{"path":"src/main/java/seedu/duke/data/item/exercise/ExerciseList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.data.item.exercise;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"tlyi"},"content":"import seedu.duke.data.item.Item;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"tlyi"},"content":"import seedu.duke.data.item.ItemList;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"tryyang2001"},"content":"import seedu.duke.data.item.food.FoodList;","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"tryyang2001"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-16"},{"lineNumber":8,"author":{"gitId":"xingjie99"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"tryyang2001"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"tryyang2001"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"tryyang2001"},"content":"public class ExerciseList extends ItemList {","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"tryyang2001"},"content":"    public static final String MESSAGE_EXERCISE_DONE_PER_DAY \u003d \"You have done %d exercise(s) on %s (%s):\";","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"tryyang2001"},"content":"    public static final String MESSAGE_TOTAL_CALORIE_BURNT_PER_DAY \u003d \"Total calories burnt in the day: %d cal\";","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"tryyang2001"},"content":"    public static final String MESSAGE_TOTAL_CALORIE_BURNT_PER_WEEK \u003d \"Total calorie burnt in this week: %d\";","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"tryyang2001"},"content":"    public static final String MESSAGE_TOTAL_EXERCISE_DONE_PER_WEEK \u003d \"Total exercises done in this week: %d\";","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"xingjie99"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"tryyang2001"},"content":"     * Default constructor for exercise list.","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"xingjie99"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"tryyang2001"},"content":"    public ExerciseList() {","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"tryyang2001"},"content":"        internalItems \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-23"},{"lineNumber":23,"author":{"gitId":"xingjie99"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"xingjie99"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"tryyang2001"},"content":"     * Deletes a food item according to its index number, date and time.","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"xingjie99"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"tryyang2001"},"content":"     * @param index The index of the exercise as shown in the view e/ command","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"tryyang2001"},"content":"     * @param date  The date of the exercise taken","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"tryyang2001"},"content":"     * @return The deleted exercise","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"xingjie99"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"tryyang2001"},"content":"    public Exercise deleteItem(int index, LocalDate date) {","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"tryyang2001"},"content":"        Exercise deletedExercise \u003d new Exercise(\"\", 1, date);","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"tryyang2001"},"content":"        int actualIndex \u003d getActualIndex(index, deletedExercise);","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"tryyang2001"},"content":"        deletedExercise \u003d (Exercise) internalItems.remove(actualIndex);","lastModifiedDate":"2021-10-23"},{"lineNumber":36,"author":{"gitId":"tryyang2001"},"content":"        return deletedExercise;","lastModifiedDate":"2021-10-19"},{"lineNumber":37,"author":{"gitId":"xingjie99"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":38,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":39,"author":{"gitId":"xingjie99"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":40,"author":{"gitId":"tryyang2001"},"content":"     * Converts the entire exercise list to string format for printing purpose.","lastModifiedDate":"2021-10-16"},{"lineNumber":41,"author":{"gitId":"xingjie99"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"tryyang2001"},"content":"     * @return The exercise list in a single string","lastModifiedDate":"2021-10-16"},{"lineNumber":43,"author":{"gitId":"xingjie99"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":44,"author":{"gitId":"tryyang2001"},"content":"    @Override","lastModifiedDate":"2021-10-16"},{"lineNumber":45,"author":{"gitId":"xingjie99"},"content":"    public String convertToString() {","lastModifiedDate":"2021-10-11"},{"lineNumber":46,"author":{"gitId":"tryyang2001"},"content":"        StringBuilder exerciseListInString \u003d extractExerciseListByEachDate();","lastModifiedDate":"2021-10-16"},{"lineNumber":47,"author":{"gitId":"tryyang2001"},"content":"        return exerciseListInString.toString().stripTrailing();","lastModifiedDate":"2021-10-16"},{"lineNumber":48,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":49,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":50,"author":{"gitId":"tryyang2001"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":51,"author":{"gitId":"tryyang2001"},"content":"     * Converts the food list of a specific date to string format for printing purpose.","lastModifiedDate":"2021-10-16"},{"lineNumber":52,"author":{"gitId":"tryyang2001"},"content":"     *","lastModifiedDate":"2021-10-16"},{"lineNumber":53,"author":{"gitId":"tryyang2001"},"content":"     * @param date The date for the food list","lastModifiedDate":"2021-10-16"},{"lineNumber":54,"author":{"gitId":"tryyang2001"},"content":"     * @return The food list of the specific date in a single string","lastModifiedDate":"2021-10-16"},{"lineNumber":55,"author":{"gitId":"tryyang2001"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":56,"author":{"gitId":"tryyang2001"},"content":"    public String convertToStringBySpecificDate(LocalDate date) {","lastModifiedDate":"2021-10-17"},{"lineNumber":57,"author":{"gitId":"tryyang2001"},"content":"        StringBuilder exerciseListInString \u003d extractExerciseListBySpecificDate(date);","lastModifiedDate":"2021-10-16"},{"lineNumber":58,"author":{"gitId":"tryyang2001"},"content":"        return exerciseListInString.toString().stripTrailing();","lastModifiedDate":"2021-10-16"},{"lineNumber":59,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":60,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":61,"author":{"gitId":"xingjie99"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":62,"author":{"gitId":"tryyang2001"},"content":"     * Sorts the exercise list in ascending format according to the date.","lastModifiedDate":"2021-10-19"},{"lineNumber":63,"author":{"gitId":"xingjie99"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":64,"author":{"gitId":"tryyang2001"},"content":"    public void sortList() {","lastModifiedDate":"2021-10-19"},{"lineNumber":65,"author":{"gitId":"tryyang2001"},"content":"        this.internalItems.sort(Comparator.comparing(Item::getDate));","lastModifiedDate":"2021-10-23"},{"lineNumber":66,"author":{"gitId":"xingjie99"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":67,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":68,"author":{"gitId":"tryyang2001"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":69,"author":{"gitId":"tryyang2001"},"content":"     * Helper method used in deleteItem for exercise to get the","lastModifiedDate":"2021-10-20"},{"lineNumber":70,"author":{"gitId":"tryyang2001"},"content":"     * actual index from the entire exercise list of the exercise to delete.","lastModifiedDate":"2021-10-20"},{"lineNumber":71,"author":{"gitId":"tryyang2001"},"content":"     *","lastModifiedDate":"2021-10-16"},{"lineNumber":72,"author":{"gitId":"tryyang2001"},"content":"     * @param index           The index of the exercise as shown in the view e/ command","lastModifiedDate":"2021-10-20"},{"lineNumber":73,"author":{"gitId":"tryyang2001"},"content":"     * @param deletedExercise The exercise to delete","lastModifiedDate":"2021-10-20"},{"lineNumber":74,"author":{"gitId":"tryyang2001"},"content":"     * @return The actual index of the exercise in the entire exercise list","lastModifiedDate":"2021-10-20"},{"lineNumber":75,"author":{"gitId":"tryyang2001"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":76,"author":{"gitId":"tryyang2001"},"content":"    private int getActualIndex(int index, Item deletedExercise) {","lastModifiedDate":"2021-10-19"},{"lineNumber":77,"author":{"gitId":"tryyang2001"},"content":"        for (int i \u003d 0; i \u003c internalItems.size(); i++) {","lastModifiedDate":"2021-10-23"},{"lineNumber":78,"author":{"gitId":"tryyang2001"},"content":"            if (isListToQuery(deletedExercise, i)) {","lastModifiedDate":"2021-10-19"},{"lineNumber":79,"author":{"gitId":"tryyang2001"},"content":"                if (isExerciseToDelete(deletedExercise, i, index)) {","lastModifiedDate":"2021-10-19"},{"lineNumber":80,"author":{"gitId":"tryyang2001"},"content":"                    return i + index;","lastModifiedDate":"2021-10-19"},{"lineNumber":81,"author":{"gitId":"xingjie99"},"content":"                }","lastModifiedDate":"2021-10-10"},{"lineNumber":82,"author":{"gitId":"tryyang2001"},"content":"                break;","lastModifiedDate":"2021-10-19"},{"lineNumber":83,"author":{"gitId":"xingjie99"},"content":"            }","lastModifiedDate":"2021-10-10"},{"lineNumber":84,"author":{"gitId":"tryyang2001"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":85,"author":{"gitId":"tryyang2001"},"content":"        return -1;","lastModifiedDate":"2021-10-19"},{"lineNumber":86,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":87,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":88,"author":{"gitId":"xingjie99"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":89,"author":{"gitId":"tryyang2001"},"content":"     * Helper boolean method used in getActualIndex to determine if the exercise is the exercise to delete.","lastModifiedDate":"2021-10-20"},{"lineNumber":90,"author":{"gitId":"tryyang2001"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":91,"author":{"gitId":"tryyang2001"},"content":"     * @param deletedExercise The exercise to delete","lastModifiedDate":"2021-10-20"},{"lineNumber":92,"author":{"gitId":"tryyang2001"},"content":"     * @param currentIndex    The current index of the entire exercise list","lastModifiedDate":"2021-10-20"},{"lineNumber":93,"author":{"gitId":"tryyang2001"},"content":"     * @param index           The exercise index to delete as shown in view e/","lastModifiedDate":"2021-10-20"},{"lineNumber":94,"author":{"gitId":"tryyang2001"},"content":"     * @return True if the current exercise is the exercise to delete, false otherwise","lastModifiedDate":"2021-10-20"},{"lineNumber":95,"author":{"gitId":"xingjie99"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":96,"author":{"gitId":"tryyang2001"},"content":"    private boolean isExerciseToDelete(Item deletedExercise, int currentIndex, int index) {","lastModifiedDate":"2021-10-19"},{"lineNumber":97,"author":{"gitId":"tryyang2001"},"content":"        return internalItems.get(currentIndex + index).getDate().equals(deletedExercise.getDate());","lastModifiedDate":"2021-10-23"},{"lineNumber":98,"author":{"gitId":"xingjie99"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":99,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":100,"author":{"gitId":"tryyang2001"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":101,"author":{"gitId":"tryyang2001"},"content":"     * Helper method used in getActualIndex to determine if the current index points to the correct exercise position.","lastModifiedDate":"2021-10-20"},{"lineNumber":102,"author":{"gitId":"tryyang2001"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":103,"author":{"gitId":"tryyang2001"},"content":"     * @param deletedExercise The exercise to delete","lastModifiedDate":"2021-10-20"},{"lineNumber":104,"author":{"gitId":"tryyang2001"},"content":"     * @param currentIndex    The current index of the entire exerciselist","lastModifiedDate":"2021-10-20"},{"lineNumber":105,"author":{"gitId":"tryyang2001"},"content":"     * @return True if the current exercise has the same date and time period as the deletedItem, false otherwise","lastModifiedDate":"2021-10-20"},{"lineNumber":106,"author":{"gitId":"tryyang2001"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":107,"author":{"gitId":"tryyang2001"},"content":"    private boolean isListToQuery(Item deletedExercise, int currentIndex) {","lastModifiedDate":"2021-10-19"},{"lineNumber":108,"author":{"gitId":"tryyang2001"},"content":"        return internalItems.get(currentIndex).getDate().equals(deletedExercise.getDate());","lastModifiedDate":"2021-10-23"},{"lineNumber":109,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":110,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":111,"author":{"gitId":"tryyang2001"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":112,"author":{"gitId":"tryyang2001"},"content":"     * Helper function used in convertToString to extract exercises list","lastModifiedDate":"2021-10-18"},{"lineNumber":113,"author":{"gitId":"tryyang2001"},"content":"     * according to each date presented in the entire exercise list.","lastModifiedDate":"2021-10-18"},{"lineNumber":114,"author":{"gitId":"tryyang2001"},"content":"     *","lastModifiedDate":"2021-10-17"},{"lineNumber":115,"author":{"gitId":"tryyang2001"},"content":"     * @return String which contains exercise lists with different date","lastModifiedDate":"2021-10-17"},{"lineNumber":116,"author":{"gitId":"tryyang2001"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":117,"author":{"gitId":"tryyang2001"},"content":"    private StringBuilder extractExerciseListByEachDate() {","lastModifiedDate":"2021-10-17"},{"lineNumber":118,"author":{"gitId":"tryyang2001"},"content":"        StringBuilder exerciseListInString \u003d new StringBuilder();","lastModifiedDate":"2021-10-17"},{"lineNumber":119,"author":{"gitId":"tryyang2001"},"content":"        for (int index \u003d 0; index \u003c internalItems.size(); index++) {","lastModifiedDate":"2021-10-23"},{"lineNumber":120,"author":{"gitId":"tryyang2001"},"content":"            LocalDate currentDate \u003d internalItems.get(index).getDate();","lastModifiedDate":"2021-10-23"},{"lineNumber":121,"author":{"gitId":"tryyang2001"},"content":"            ExerciseList subList \u003d new ExerciseList();","lastModifiedDate":"2021-10-17"},{"lineNumber":122,"author":{"gitId":"tryyang2001"},"content":"            while (index \u003c internalItems.size() \u0026\u0026 currentDate.isEqual(internalItems.get(index).getDate())) {","lastModifiedDate":"2021-10-23"},{"lineNumber":123,"author":{"gitId":"tryyang2001"},"content":"                subList.addItem(internalItems.get(index++));","lastModifiedDate":"2021-10-23"},{"lineNumber":124,"author":{"gitId":"tryyang2001"},"content":"            }","lastModifiedDate":"2021-10-17"},{"lineNumber":125,"author":{"gitId":"tryyang2001"},"content":"            exerciseListInString.append(ITEM_LIST_DIVIDER).append(LS);","lastModifiedDate":"2021-10-24"},{"lineNumber":126,"author":{"gitId":"tryyang2001"},"content":"            convertItemCountToString(exerciseListInString,","lastModifiedDate":"2021-10-24"},{"lineNumber":127,"author":{"gitId":"tryyang2001"},"content":"                    subList.getSize(),","lastModifiedDate":"2021-10-24"},{"lineNumber":128,"author":{"gitId":"tryyang2001"},"content":"                    currentDate,","lastModifiedDate":"2021-10-24"},{"lineNumber":129,"author":{"gitId":"tryyang2001"},"content":"                    MESSAGE_EXERCISE_DONE_PER_DAY);","lastModifiedDate":"2021-10-24"},{"lineNumber":130,"author":{"gitId":"tryyang2001"},"content":"            for (int i \u003d 1; i \u003c\u003d subList.getSize(); i++) {","lastModifiedDate":"2021-10-17"},{"lineNumber":131,"author":{"gitId":"tryyang2001"},"content":"                convertItemToString(exerciseListInString, i, subList.getItem(i - 1));","lastModifiedDate":"2021-10-19"},{"lineNumber":132,"author":{"gitId":"tryyang2001"},"content":"            }","lastModifiedDate":"2021-10-18"},{"lineNumber":133,"author":{"gitId":"tryyang2001"},"content":"            convertTotalCaloriesToString(","lastModifiedDate":"2021-10-18"},{"lineNumber":134,"author":{"gitId":"tryyang2001"},"content":"                    exerciseListInString,","lastModifiedDate":"2021-10-18"},{"lineNumber":135,"author":{"gitId":"tryyang2001"},"content":"                    this.getTotalCaloriesWithDate(currentDate),","lastModifiedDate":"2021-10-18"},{"lineNumber":136,"author":{"gitId":"tryyang2001"},"content":"                    MESSAGE_TOTAL_CALORIE_BURNT_PER_DAY);","lastModifiedDate":"2021-10-24"},{"lineNumber":137,"author":{"gitId":"tryyang2001"},"content":"            index--;","lastModifiedDate":"2021-10-17"},{"lineNumber":138,"author":{"gitId":"tryyang2001"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":139,"author":{"gitId":"tryyang2001"},"content":"        exerciseListInString.append(ITEM_LIST_DIVIDER).append(LS);","lastModifiedDate":"2021-10-24"},{"lineNumber":140,"author":{"gitId":"tryyang2001"},"content":"        exerciseListInString.append(String.format(MESSAGE_TOTAL_EXERCISE_DONE_PER_WEEK, getSize())).append(LS);","lastModifiedDate":"2021-10-24"},{"lineNumber":141,"author":{"gitId":"tryyang2001"},"content":"        exerciseListInString.append(String.format(MESSAGE_TOTAL_CALORIE_BURNT_PER_WEEK, getTotalCalories()));","lastModifiedDate":"2021-10-24"},{"lineNumber":142,"author":{"gitId":"tryyang2001"},"content":"        exerciseListInString.append(LS);","lastModifiedDate":"2021-10-24"},{"lineNumber":143,"author":{"gitId":"tryyang2001"},"content":"        return exerciseListInString;","lastModifiedDate":"2021-10-17"},{"lineNumber":144,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":145,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":146,"author":{"gitId":"tryyang2001"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":147,"author":{"gitId":"tryyang2001"},"content":"     * Helper method used in convertToStringBySpecificDate for extracting","lastModifiedDate":"2021-10-18"},{"lineNumber":148,"author":{"gitId":"tryyang2001"},"content":"     * exercise list which contains all the exercises done on the date.","lastModifiedDate":"2021-10-18"},{"lineNumber":149,"author":{"gitId":"tryyang2001"},"content":"     *","lastModifiedDate":"2021-10-17"},{"lineNumber":150,"author":{"gitId":"tryyang2001"},"content":"     * @param date The date to query all the exercises done","lastModifiedDate":"2021-10-17"},{"lineNumber":151,"author":{"gitId":"tryyang2001"},"content":"     * @return StringBuilder type string which contains an exercise list with the given date","lastModifiedDate":"2021-10-17"},{"lineNumber":152,"author":{"gitId":"tryyang2001"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":153,"author":{"gitId":"tryyang2001"},"content":"    private StringBuilder extractExerciseListBySpecificDate(LocalDate date) {","lastModifiedDate":"2021-10-17"},{"lineNumber":154,"author":{"gitId":"tryyang2001"},"content":"        StringBuilder exerciseListInString \u003d new StringBuilder();","lastModifiedDate":"2021-10-19"},{"lineNumber":155,"author":{"gitId":"tryyang2001"},"content":"        ArrayList\u003cItem\u003e subList \u003d (ArrayList\u003cItem\u003e) this.internalItems.stream()","lastModifiedDate":"2021-10-23"},{"lineNumber":156,"author":{"gitId":"tryyang2001"},"content":"                .filter(e -\u003e e.getDate().isEqual(date))","lastModifiedDate":"2021-10-17"},{"lineNumber":157,"author":{"gitId":"tryyang2001"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2021-10-17"},{"lineNumber":158,"author":{"gitId":"tryyang2001"},"content":"        convertItemCountToString(exerciseListInString, subList.size(), date, MESSAGE_EXERCISE_DONE_PER_DAY);","lastModifiedDate":"2021-10-24"},{"lineNumber":159,"author":{"gitId":"tryyang2001"},"content":"        for (int i \u003d 1; i \u003c\u003d subList.size(); i++) {","lastModifiedDate":"2021-10-17"},{"lineNumber":160,"author":{"gitId":"tryyang2001"},"content":"            convertItemToString(exerciseListInString, i, subList.get(i - 1));","lastModifiedDate":"2021-10-18"},{"lineNumber":161,"author":{"gitId":"tryyang2001"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":162,"author":{"gitId":"tryyang2001"},"content":"        convertTotalCaloriesToString(","lastModifiedDate":"2021-10-18"},{"lineNumber":163,"author":{"gitId":"tryyang2001"},"content":"                exerciseListInString,","lastModifiedDate":"2021-10-18"},{"lineNumber":164,"author":{"gitId":"tryyang2001"},"content":"                this.getTotalCaloriesWithDate(date),","lastModifiedDate":"2021-10-18"},{"lineNumber":165,"author":{"gitId":"tryyang2001"},"content":"                MESSAGE_TOTAL_CALORIE_BURNT_PER_DAY);","lastModifiedDate":"2021-10-24"},{"lineNumber":166,"author":{"gitId":"tryyang2001"},"content":"        return exerciseListInString;","lastModifiedDate":"2021-10-17"},{"lineNumber":167,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":168,"author":{"gitId":"xingjie99"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"xingjie99":28,"tryyang2001":137,"tlyi":3}},{"path":"src/main/java/seedu/duke/data/item/exercise/FutureExerciseList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.data.item.exercise;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"xingjie99"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"xingjie99"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"xingjie99"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"xingjie99"},"content":"public class FutureExerciseList extends ExerciseList {","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"xingjie99"},"content":"    private static final int ONE_DAY \u003d 1;","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"xingjie99"},"content":"    private static final int ONE_WEEK \u003d 7;","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"xingjie99"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"xingjie99"},"content":"     * Deletes and exercise item from the future exercise list.","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"xingjie99"},"content":"     *","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"xingjie99"},"content":"     * @param index Index of the exercise to be deleted.","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"xingjie99"},"content":"     * @return Exercise object removed.","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"xingjie99"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"tryyang2001"},"content":"    public Exercise deleteItem(int index) {","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"tryyang2001"},"content":"        return (Exercise) internalItems.remove(index);","lastModifiedDate":"2021-10-23"},{"lineNumber":20,"author":{"gitId":"xingjie99"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"xingjie99"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"xingjie99"},"content":"     * Converts the entire future exercise list to string format for printing purpose.","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"xingjie99"},"content":"     *","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"xingjie99"},"content":"     * @return The future exercise list in a single string.","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"xingjie99"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":27,"author":{"gitId":"xingjie99"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"xingjie99"},"content":"     * Converts the entire future exercise list to string format for printing purpose.","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"xingjie99"},"content":"     *","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"xingjie99"},"content":"     * @return The future exercise list in a single string.","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"xingjie99"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"xingjie99"},"content":"    @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":33,"author":{"gitId":"xingjie99"},"content":"    public String convertToString() {","lastModifiedDate":"2021-10-18"},{"lineNumber":34,"author":{"gitId":"xingjie99"},"content":"        StringBuilder futureExerciseListToString \u003d new StringBuilder();","lastModifiedDate":"2021-10-18"},{"lineNumber":35,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":36,"author":{"gitId":"tryyang2001"},"content":"        for (int i \u003d 0; i \u003c internalItems.size(); i++) {","lastModifiedDate":"2021-10-23"},{"lineNumber":37,"author":{"gitId":"xingjie99"},"content":"            futureExerciseListToString","lastModifiedDate":"2021-10-18"},{"lineNumber":38,"author":{"gitId":"xingjie99"},"content":"                    .append(TAB)","lastModifiedDate":"2021-10-18"},{"lineNumber":39,"author":{"gitId":"xingjie99"},"content":"                    .append(i + 1)","lastModifiedDate":"2021-10-18"},{"lineNumber":40,"author":{"gitId":"xingjie99"},"content":"                    .append(\". \")","lastModifiedDate":"2021-10-18"},{"lineNumber":41,"author":{"gitId":"tryyang2001"},"content":"                    .append(internalItems.get(i))","lastModifiedDate":"2021-10-23"},{"lineNumber":42,"author":{"gitId":"xingjie99"},"content":"                    .append(\" (\")","lastModifiedDate":"2021-10-18"},{"lineNumber":43,"author":{"gitId":"tryyang2001"},"content":"                    .append(getDayOfWeek(internalItems.get(i).getDate()))","lastModifiedDate":"2021-10-23"},{"lineNumber":44,"author":{"gitId":"xingjie99"},"content":"                    .append(\" \")","lastModifiedDate":"2021-10-18"},{"lineNumber":45,"author":{"gitId":"tryyang2001"},"content":"                    .append(internalItems.get(i).getDate().format(DateTimeFormatter.ofPattern(DATE_FORMAT)))","lastModifiedDate":"2021-10-23"},{"lineNumber":46,"author":{"gitId":"xingjie99"},"content":"                    .append(\")\")","lastModifiedDate":"2021-10-18"},{"lineNumber":47,"author":{"gitId":"xingjie99"},"content":"                    .append(LS);","lastModifiedDate":"2021-10-18"},{"lineNumber":48,"author":{"gitId":"xingjie99"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":49,"author":{"gitId":"xingjie99"},"content":"        return futureExerciseListToString.toString().stripTrailing();","lastModifiedDate":"2021-10-18"},{"lineNumber":50,"author":{"gitId":"xingjie99"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":51,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":52,"author":{"gitId":"xingjie99"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":53,"author":{"gitId":"xingjie99"},"content":"     * Adds all recurring exercises between two dates into the FutureExerciseList.","lastModifiedDate":"2021-10-20"},{"lineNumber":54,"author":{"gitId":"xingjie99"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":55,"author":{"gitId":"xingjie99"},"content":"    public void addRecurringExercises(String description, int calories,","lastModifiedDate":"2021-10-20"},{"lineNumber":56,"author":{"gitId":"xingjie99"},"content":"                                      LocalDate startDate, LocalDate endDate, ArrayList\u003cInteger\u003e dayOfTheWeek) {","lastModifiedDate":"2021-10-20"},{"lineNumber":57,"author":{"gitId":"xingjie99"},"content":"        for (Integer day : dayOfTheWeek) {","lastModifiedDate":"2021-10-20"},{"lineNumber":58,"author":{"gitId":"xingjie99"},"content":"            int dayOfReoccurrence \u003d startDate.getDayOfWeek().getValue();","lastModifiedDate":"2021-10-20"},{"lineNumber":59,"author":{"gitId":"xingjie99"},"content":"            LocalDate currentDate \u003d startDate;","lastModifiedDate":"2021-10-20"},{"lineNumber":60,"author":{"gitId":"xingjie99"},"content":"            while (currentDate.isBefore(endDate) || currentDate.isEqual(endDate)) {","lastModifiedDate":"2021-10-20"},{"lineNumber":61,"author":{"gitId":"xingjie99"},"content":"                if (dayOfReoccurrence \u003d\u003d day) {","lastModifiedDate":"2021-10-20"},{"lineNumber":62,"author":{"gitId":"tryyang2001"},"content":"                    super.addItem(new Exercise(description, calories, currentDate));","lastModifiedDate":"2021-10-24"},{"lineNumber":63,"author":{"gitId":"xingjie99"},"content":"                    currentDate \u003d currentDate.plusDays(ONE_WEEK);","lastModifiedDate":"2021-10-20"},{"lineNumber":64,"author":{"gitId":"xingjie99"},"content":"                    dayOfReoccurrence \u003d currentDate.getDayOfWeek().getValue();","lastModifiedDate":"2021-10-20"},{"lineNumber":65,"author":{"gitId":"xingjie99"},"content":"                } else {","lastModifiedDate":"2021-10-20"},{"lineNumber":66,"author":{"gitId":"xingjie99"},"content":"                    currentDate \u003d currentDate.plusDays(ONE_DAY);","lastModifiedDate":"2021-10-20"},{"lineNumber":67,"author":{"gitId":"xingjie99"},"content":"                    dayOfReoccurrence \u003d currentDate.getDayOfWeek().getValue();","lastModifiedDate":"2021-10-20"},{"lineNumber":68,"author":{"gitId":"xingjie99"},"content":"                }","lastModifiedDate":"2021-10-18"},{"lineNumber":69,"author":{"gitId":"xingjie99"},"content":"            }","lastModifiedDate":"2021-10-18"},{"lineNumber":70,"author":{"gitId":"xingjie99"},"content":"            super.sortList();","lastModifiedDate":"2021-10-27"},{"lineNumber":71,"author":{"gitId":"xingjie99"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":72,"author":{"gitId":"xingjie99"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":73,"author":{"gitId":"xingjie99"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"xingjie99":65,"tryyang2001":7,"tlyi":1}},{"path":"src/main/java/seedu/duke/data/item/food/Food.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.data.item.food;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"tlyi"},"content":"import seedu.duke.data.item.Item;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"tryyang2001"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-16"},{"lineNumber":6,"author":{"gitId":"tryyang2001"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"tryyang2001"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-10-16"},{"lineNumber":8,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":9,"author":{"gitId":"tryyang2001"},"content":"public class Food extends Item {","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"tryyang2001"},"content":"    public static final String FOOD_TYPE \u003d \"F\";","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"tryyang2001"},"content":"    private static final int EARLIEST_NIGHT_HOUR \u003d 21;","lastModifiedDate":"2021-10-17"},{"lineNumber":12,"author":{"gitId":"tryyang2001"},"content":"    private static final int LATEST_NIGHT_HOUR \u003d 4;","lastModifiedDate":"2021-10-17"},{"lineNumber":13,"author":{"gitId":"tryyang2001"},"content":"    private static final int EARLIEST_EVENING_HOUR \u003d 17;","lastModifiedDate":"2021-10-17"},{"lineNumber":14,"author":{"gitId":"tryyang2001"},"content":"    private static final int LATEST_EVENING_HOUR \u003d 20;","lastModifiedDate":"2021-10-17"},{"lineNumber":15,"author":{"gitId":"tryyang2001"},"content":"    private static final int EARLIEST_AFTERNOON_HOUR \u003d 12;","lastModifiedDate":"2021-10-17"},{"lineNumber":16,"author":{"gitId":"tryyang2001"},"content":"    private static final int LATEST_AFTERNOON_HOUR \u003d 16;","lastModifiedDate":"2021-10-17"},{"lineNumber":17,"author":{"gitId":"tryyang2001"},"content":"    private static final int EARLIEST_MORNING_HOUR \u003d 5;","lastModifiedDate":"2021-10-17"},{"lineNumber":18,"author":{"gitId":"tryyang2001"},"content":"    private static final int LATEST_MORNING_HOUR \u003d 11;","lastModifiedDate":"2021-10-17"},{"lineNumber":19,"author":{"gitId":"tryyang2001"},"content":"    public static final String MESSAGE_FOOD \u003d \"%s @ %s\";","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"tryyang2001"},"content":"    protected LocalDateTime dateTime;","lastModifiedDate":"2021-10-16"},{"lineNumber":21,"author":{"gitId":"tryyang2001"},"content":"    protected TimePeriod timePeriod;","lastModifiedDate":"2021-10-17"},{"lineNumber":22,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"tryyang2001"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"tryyang2001"},"content":"     * Constructor for the food object when the date and time are not provided.","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"tryyang2001"},"content":"     *","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"tryyang2001"},"content":"     * @param name     The name or description of the food","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"tryyang2001"},"content":"     * @param calories The calorie of the food consumed","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"tryyang2001"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"tryyang2001"},"content":"    public Food(String name, int calories) {","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"tryyang2001"},"content":"        super(name, calories);","lastModifiedDate":"2021-10-16"},{"lineNumber":31,"author":{"gitId":"tryyang2001"},"content":"        this.dateTime \u003d LocalDateTime.now(); //sets to current date and time","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"tryyang2001"},"content":"        setTimePeriod(this.dateTime);","lastModifiedDate":"2021-10-17"},{"lineNumber":33,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":34,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"tryyang2001"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":36,"author":{"gitId":"tryyang2001"},"content":"     * Constructor for the food object when all attributes are provided.","lastModifiedDate":"2021-10-19"},{"lineNumber":37,"author":{"gitId":"tryyang2001"},"content":"     *","lastModifiedDate":"2021-10-16"},{"lineNumber":38,"author":{"gitId":"tryyang2001"},"content":"     * @param name     The name or description of the food","lastModifiedDate":"2021-10-16"},{"lineNumber":39,"author":{"gitId":"tryyang2001"},"content":"     * @param calories The calorie intake from the food","lastModifiedDate":"2021-10-16"},{"lineNumber":40,"author":{"gitId":"tryyang2001"},"content":"     * @param dateTime The date and time when the food is consumed","lastModifiedDate":"2021-10-16"},{"lineNumber":41,"author":{"gitId":"tryyang2001"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":42,"author":{"gitId":"tryyang2001"},"content":"    public Food(String name, int calories, LocalDateTime dateTime) {","lastModifiedDate":"2021-10-16"},{"lineNumber":43,"author":{"gitId":"tryyang2001"},"content":"        super(name, calories);","lastModifiedDate":"2021-10-16"},{"lineNumber":44,"author":{"gitId":"tryyang2001"},"content":"        this.dateTime \u003d dateTime;","lastModifiedDate":"2021-10-16"},{"lineNumber":45,"author":{"gitId":"tryyang2001"},"content":"        setTimePeriod(this.dateTime);","lastModifiedDate":"2021-10-17"},{"lineNumber":46,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":47,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":48,"author":{"gitId":"tryyang2001"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":49,"author":{"gitId":"tryyang2001"},"content":"     * Gets the date and time of the food consumed.","lastModifiedDate":"2021-10-16"},{"lineNumber":50,"author":{"gitId":"tryyang2001"},"content":"     *","lastModifiedDate":"2021-10-16"},{"lineNumber":51,"author":{"gitId":"tryyang2001"},"content":"     * @return The date and time of the food consumed in LocalDateTime","lastModifiedDate":"2021-10-16"},{"lineNumber":52,"author":{"gitId":"tryyang2001"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":53,"author":{"gitId":"tryyang2001"},"content":"    public LocalDateTime getDateTime() {","lastModifiedDate":"2021-10-16"},{"lineNumber":54,"author":{"gitId":"tryyang2001"},"content":"        return dateTime;","lastModifiedDate":"2021-10-16"},{"lineNumber":55,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":56,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":57,"author":{"gitId":"tryyang2001"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":58,"author":{"gitId":"tryyang2001"},"content":"     * Updates the date and time of the food consumed.","lastModifiedDate":"2021-10-16"},{"lineNumber":59,"author":{"gitId":"tryyang2001"},"content":"     *","lastModifiedDate":"2021-10-16"},{"lineNumber":60,"author":{"gitId":"tryyang2001"},"content":"     * @param dateTime The new date and time of the food consumed in LocalDateTime","lastModifiedDate":"2021-10-16"},{"lineNumber":61,"author":{"gitId":"tryyang2001"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":62,"author":{"gitId":"tryyang2001"},"content":"    public void setDateTime(LocalDateTime dateTime) {","lastModifiedDate":"2021-10-16"},{"lineNumber":63,"author":{"gitId":"tryyang2001"},"content":"        this.dateTime \u003d dateTime;","lastModifiedDate":"2021-10-16"},{"lineNumber":64,"author":{"gitId":"tryyang2001"},"content":"        setTimePeriod(this.dateTime);","lastModifiedDate":"2021-10-17"},{"lineNumber":65,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":66,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":67,"author":{"gitId":"tryyang2001"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":68,"author":{"gitId":"tryyang2001"},"content":"     * Gets the date of the food consumed.","lastModifiedDate":"2021-10-16"},{"lineNumber":69,"author":{"gitId":"tryyang2001"},"content":"     *","lastModifiedDate":"2021-10-16"},{"lineNumber":70,"author":{"gitId":"tryyang2001"},"content":"     * @return The date of the food consumed in LocalDate","lastModifiedDate":"2021-10-16"},{"lineNumber":71,"author":{"gitId":"tryyang2001"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":72,"author":{"gitId":"tryyang2001"},"content":"    @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":73,"author":{"gitId":"tryyang2001"},"content":"    public LocalDate getDate() {","lastModifiedDate":"2021-10-16"},{"lineNumber":74,"author":{"gitId":"tryyang2001"},"content":"        return this.dateTime.toLocalDate();","lastModifiedDate":"2021-10-16"},{"lineNumber":75,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":76,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":77,"author":{"gitId":"tryyang2001"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":78,"author":{"gitId":"tryyang2001"},"content":"     * Updates the date of the food consumed.","lastModifiedDate":"2021-10-19"},{"lineNumber":79,"author":{"gitId":"tryyang2001"},"content":"     *","lastModifiedDate":"2021-10-19"},{"lineNumber":80,"author":{"gitId":"tryyang2001"},"content":"     * @param date The new date of the food consumed in LocalDate","lastModifiedDate":"2021-10-19"},{"lineNumber":81,"author":{"gitId":"tryyang2001"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":82,"author":{"gitId":"tryyang2001"},"content":"    public void setDate(LocalDate date) {","lastModifiedDate":"2021-10-19"},{"lineNumber":83,"author":{"gitId":"tryyang2001"},"content":"        LocalTime time \u003d this.dateTime.toLocalTime();","lastModifiedDate":"2021-10-19"},{"lineNumber":84,"author":{"gitId":"tryyang2001"},"content":"        setDateTime(date.atTime(time));","lastModifiedDate":"2021-10-19"},{"lineNumber":85,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":86,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":87,"author":{"gitId":"tryyang2001"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":88,"author":{"gitId":"tryyang2001"},"content":"     * Gets the time of the food consumed.","lastModifiedDate":"2021-10-16"},{"lineNumber":89,"author":{"gitId":"tryyang2001"},"content":"     *","lastModifiedDate":"2021-10-16"},{"lineNumber":90,"author":{"gitId":"tryyang2001"},"content":"     * @return The time of the food consumed in LocalTime","lastModifiedDate":"2021-10-16"},{"lineNumber":91,"author":{"gitId":"tryyang2001"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":92,"author":{"gitId":"tryyang2001"},"content":"    public LocalTime getTime() {","lastModifiedDate":"2021-10-16"},{"lineNumber":93,"author":{"gitId":"tryyang2001"},"content":"        return this.dateTime.toLocalTime();","lastModifiedDate":"2021-10-16"},{"lineNumber":94,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":95,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":96,"author":{"gitId":"tryyang2001"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":97,"author":{"gitId":"tryyang2001"},"content":"     * Updates the time of the food consumed.","lastModifiedDate":"2021-10-19"},{"lineNumber":98,"author":{"gitId":"tryyang2001"},"content":"     *","lastModifiedDate":"2021-10-19"},{"lineNumber":99,"author":{"gitId":"tryyang2001"},"content":"     * @param time The new time of the food consumed","lastModifiedDate":"2021-10-19"},{"lineNumber":100,"author":{"gitId":"tryyang2001"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":101,"author":{"gitId":"tryyang2001"},"content":"    public void setTime(LocalTime time) {","lastModifiedDate":"2021-10-19"},{"lineNumber":102,"author":{"gitId":"tryyang2001"},"content":"        LocalDate date \u003d this.dateTime.toLocalDate();","lastModifiedDate":"2021-10-19"},{"lineNumber":103,"author":{"gitId":"tryyang2001"},"content":"        setDateTime(date.atTime(time));","lastModifiedDate":"2021-10-19"},{"lineNumber":104,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":105,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":106,"author":{"gitId":"tryyang2001"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":107,"author":{"gitId":"tryyang2001"},"content":"     * Gets the time period of the food consumed.","lastModifiedDate":"2021-10-17"},{"lineNumber":108,"author":{"gitId":"tryyang2001"},"content":"     *","lastModifiedDate":"2021-10-19"},{"lineNumber":109,"author":{"gitId":"tryyang2001"},"content":"     * @return TimePeriod enum which represents the time period","lastModifiedDate":"2021-10-17"},{"lineNumber":110,"author":{"gitId":"tryyang2001"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":111,"author":{"gitId":"tryyang2001"},"content":"    public TimePeriod getTimePeriod() {","lastModifiedDate":"2021-10-17"},{"lineNumber":112,"author":{"gitId":"tryyang2001"},"content":"        return timePeriod;","lastModifiedDate":"2021-10-17"},{"lineNumber":113,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":114,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":115,"author":{"gitId":"tryyang2001"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":116,"author":{"gitId":"tryyang2001"},"content":"     * Converts the Food item to string for printing in the Food List.","lastModifiedDate":"2021-10-27"},{"lineNumber":117,"author":{"gitId":"tryyang2001"},"content":"     *","lastModifiedDate":"2021-10-27"},{"lineNumber":118,"author":{"gitId":"tryyang2001"},"content":"     * @return String pattern of Food item with time but no date","lastModifiedDate":"2021-10-27"},{"lineNumber":119,"author":{"gitId":"tryyang2001"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":120,"author":{"gitId":"tlyi"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":121,"author":{"gitId":"tryyang2001"},"content":"    public String toString() {","lastModifiedDate":"2021-10-19"},{"lineNumber":122,"author":{"gitId":"tryyang2001"},"content":"        return String.format(MESSAGE_FOOD, super.toString(), this.getTime().format(TIME_FORMATTER));","lastModifiedDate":"2021-10-24"},{"lineNumber":123,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":124,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":125,"author":{"gitId":"tryyang2001"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":126,"author":{"gitId":"tryyang2001"},"content":"     * Converts the Food item to string for printing after adding or deleting food.","lastModifiedDate":"2021-10-27"},{"lineNumber":127,"author":{"gitId":"tryyang2001"},"content":"     *","lastModifiedDate":"2021-10-27"},{"lineNumber":128,"author":{"gitId":"tryyang2001"},"content":"     * @return String pattern of Food item with time and date","lastModifiedDate":"2021-10-27"},{"lineNumber":129,"author":{"gitId":"tryyang2001"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":130,"author":{"gitId":"tryyang2001"},"content":"    public String toStringWithDate() {","lastModifiedDate":"2021-10-27"},{"lineNumber":131,"author":{"gitId":"tryyang2001"},"content":"        return this + \", \" + this.getDate().format(DATE_FORMAT_FOR_PRINTING);","lastModifiedDate":"2021-10-27"},{"lineNumber":132,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":133,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":134,"author":{"gitId":"tryyang2001"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":135,"author":{"gitId":"tryyang2001"},"content":"     * Converts the food to external file string format.","lastModifiedDate":"2021-10-16"},{"lineNumber":136,"author":{"gitId":"tlyi"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":137,"author":{"gitId":"tryyang2001"},"content":"     * @return Name, calorie, date and time of the food in string","lastModifiedDate":"2021-10-18"},{"lineNumber":138,"author":{"gitId":"tryyang2001"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":139,"author":{"gitId":"tryyang2001"},"content":"    @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":140,"author":{"gitId":"tryyang2001"},"content":"    public String toFileTextString() {","lastModifiedDate":"2021-10-11"},{"lineNumber":141,"author":{"gitId":"tryyang2001"},"content":"        return FOOD_TYPE","lastModifiedDate":"2021-10-18"},{"lineNumber":142,"author":{"gitId":"tryyang2001"},"content":"                + super.toFileTextString()","lastModifiedDate":"2021-10-18"},{"lineNumber":143,"author":{"gitId":"tryyang2001"},"content":"                + FILE_TEXT_DELIMITER","lastModifiedDate":"2021-10-18"},{"lineNumber":144,"author":{"gitId":"tryyang2001"},"content":"                + this.getDateTime().format(DATE_TIME_FORMATTER);","lastModifiedDate":"2021-10-19"},{"lineNumber":145,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":146,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":147,"author":{"gitId":"tryyang2001"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":148,"author":{"gitId":"tryyang2001"},"content":"     * Sets or updates time period according to the time provided in dateTime.","lastModifiedDate":"2021-10-17"},{"lineNumber":149,"author":{"gitId":"tryyang2001"},"content":"     *","lastModifiedDate":"2021-10-17"},{"lineNumber":150,"author":{"gitId":"tryyang2001"},"content":"     * @param dateTime Date and time provided","lastModifiedDate":"2021-10-17"},{"lineNumber":151,"author":{"gitId":"tryyang2001"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":152,"author":{"gitId":"tryyang2001"},"content":"    private void setTimePeriod(LocalDateTime dateTime) {","lastModifiedDate":"2021-10-17"},{"lineNumber":153,"author":{"gitId":"tryyang2001"},"content":"        if (isMorning(dateTime)) {","lastModifiedDate":"2021-10-17"},{"lineNumber":154,"author":{"gitId":"tryyang2001"},"content":"            this.timePeriod \u003d TimePeriod.Morning;","lastModifiedDate":"2021-10-17"},{"lineNumber":155,"author":{"gitId":"tryyang2001"},"content":"        } else if (isAfternoon(dateTime)) {","lastModifiedDate":"2021-10-17"},{"lineNumber":156,"author":{"gitId":"tryyang2001"},"content":"            this.timePeriod \u003d TimePeriod.Afternoon;","lastModifiedDate":"2021-10-17"},{"lineNumber":157,"author":{"gitId":"tryyang2001"},"content":"        } else if (isEvening(dateTime)) {","lastModifiedDate":"2021-10-17"},{"lineNumber":158,"author":{"gitId":"tryyang2001"},"content":"            this.timePeriod \u003d TimePeriod.Evening;","lastModifiedDate":"2021-10-17"},{"lineNumber":159,"author":{"gitId":"tryyang2001"},"content":"        } else if (isNight(dateTime)) {","lastModifiedDate":"2021-10-17"},{"lineNumber":160,"author":{"gitId":"tryyang2001"},"content":"            this.timePeriod \u003d TimePeriod.Night;","lastModifiedDate":"2021-10-17"},{"lineNumber":161,"author":{"gitId":"tryyang2001"},"content":"        } else {","lastModifiedDate":"2021-10-17"},{"lineNumber":162,"author":{"gitId":"tryyang2001"},"content":"            this.timePeriod \u003d null;","lastModifiedDate":"2021-10-17"},{"lineNumber":163,"author":{"gitId":"tryyang2001"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":164,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":165,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":166,"author":{"gitId":"tryyang2001"},"content":"    private boolean isNight(LocalDateTime dateTime) {","lastModifiedDate":"2021-10-17"},{"lineNumber":167,"author":{"gitId":"tryyang2001"},"content":"        return dateTime.getHour() \u003e\u003d EARLIEST_NIGHT_HOUR || dateTime.getHour() \u003c\u003d LATEST_NIGHT_HOUR;","lastModifiedDate":"2021-10-17"},{"lineNumber":168,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":169,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":170,"author":{"gitId":"tryyang2001"},"content":"    private boolean isEvening(LocalDateTime dateTime) {","lastModifiedDate":"2021-10-17"},{"lineNumber":171,"author":{"gitId":"tryyang2001"},"content":"        return dateTime.getHour() \u003e\u003d EARLIEST_EVENING_HOUR \u0026\u0026 dateTime.getHour() \u003c\u003d LATEST_EVENING_HOUR;","lastModifiedDate":"2021-10-17"},{"lineNumber":172,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":173,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":174,"author":{"gitId":"tryyang2001"},"content":"    private boolean isAfternoon(LocalDateTime dateTime) {","lastModifiedDate":"2021-10-17"},{"lineNumber":175,"author":{"gitId":"tryyang2001"},"content":"        return dateTime.getHour() \u003e\u003d EARLIEST_AFTERNOON_HOUR \u0026\u0026 dateTime.getHour() \u003c\u003d LATEST_AFTERNOON_HOUR;","lastModifiedDate":"2021-10-17"},{"lineNumber":176,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":177,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":178,"author":{"gitId":"tryyang2001"},"content":"    private boolean isMorning(LocalDateTime dateTime) {","lastModifiedDate":"2021-10-17"},{"lineNumber":179,"author":{"gitId":"tryyang2001"},"content":"        return dateTime.getHour() \u003e\u003d EARLIEST_MORNING_HOUR \u0026\u0026 dateTime.getHour() \u003c\u003d LATEST_MORNING_HOUR;","lastModifiedDate":"2021-10-17"},{"lineNumber":180,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":181,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":182,"author":{"gitId":"tryyang2001"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"tryyang2001":178,"tlyi":4}},{"path":"src/main/java/seedu/duke/data/item/food/FoodList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.data.item.food;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"tlyi"},"content":"import seedu.duke.data.item.Item;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"tlyi"},"content":"import seedu.duke.data.item.ItemList;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"tryyang2001"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"tryyang2001"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"tryyang2001"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"tryyang2001"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"tryyang2001"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"tryyang2001"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-10-16"},{"lineNumber":12,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"tryyang2001"},"content":"public class FoodList extends ItemList {","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"tryyang2001"},"content":"    public static final String MESSAGE_FOOD_CONSUMED \u003d \"You have consumed %d food item(s) on %s (%s):\";","lastModifiedDate":"2021-10-17"},{"lineNumber":15,"author":{"gitId":"tryyang2001"},"content":"    public static final String MESSAGE_TOTAL_CALORIE_CONSUMED_PER_DAY \u003d \"Total calories consumed in the day: %d cal\";","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"tryyang2001"},"content":"    public static final String MESSAGE_TOTAL_CALORIE_CONSUMED_PER_WEEK \u003d \"Total calories consumed in this week: %d cal\";","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"tryyang2001"},"content":"    public static final String MESSAGE_MORNING \u003d \"In the morning:\";","lastModifiedDate":"2021-10-17"},{"lineNumber":18,"author":{"gitId":"tryyang2001"},"content":"    public static final String MESSAGE_AFTERNOON \u003d \"In the afternoon:\";","lastModifiedDate":"2021-10-17"},{"lineNumber":19,"author":{"gitId":"tryyang2001"},"content":"    public static final String MESSAGE_EVENING \u003d \"In the evening:\";","lastModifiedDate":"2021-10-17"},{"lineNumber":20,"author":{"gitId":"tryyang2001"},"content":"    public static final String MESSAGE_NIGHT \u003d \"At night:\";","lastModifiedDate":"2021-10-17"},{"lineNumber":21,"author":{"gitId":"tryyang2001"},"content":"    public static final String MESSAGE_NO_FOOD_IN_DATE_TIME \u003d","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"tryyang2001"},"content":"            \"There is no food item found by the given date and time period\";","lastModifiedDate":"2021-10-17"},{"lineNumber":23,"author":{"gitId":"tryyang2001"},"content":"    public static final String MESSAGE_NO_FOOD_IN_DATE \u003d \"There is no food item found by the given date\";","lastModifiedDate":"2021-10-17"},{"lineNumber":24,"author":{"gitId":"tryyang2001"},"content":"    public static final String MESSAGE_TOTAL_FOOD_CONSUMED_PER_WEEK \u003d \"Total number of food consumed in this week: %d\";","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"tryyang2001"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"tryyang2001"},"content":"     * Default constructor for food list.","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"tryyang2001"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"tryyang2001"},"content":"    public FoodList() {","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"tryyang2001"},"content":"        internalItems \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-23"},{"lineNumber":31,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":33,"author":{"gitId":"tryyang2001"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":34,"author":{"gitId":"tryyang2001"},"content":"     * Deletes a food item according to its index number, date and time.","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"tryyang2001"},"content":"     *","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"tryyang2001"},"content":"     * @param index The index of the food item as shown in the view f/ command","lastModifiedDate":"2021-10-19"},{"lineNumber":37,"author":{"gitId":"tryyang2001"},"content":"     * @param date  The date of the food item consumed","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"tryyang2001"},"content":"     * @param time  The time of the food item consumed","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"tryyang2001"},"content":"     * @return The deleted food item","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"tryyang2001"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":41,"author":{"gitId":"tryyang2001"},"content":"    public Food deleteItem(int index, LocalDate date, LocalTime time) {","lastModifiedDate":"2021-10-19"},{"lineNumber":42,"author":{"gitId":"tryyang2001"},"content":"        LocalDateTime dateTime \u003d date.atTime(time);","lastModifiedDate":"2021-10-19"},{"lineNumber":43,"author":{"gitId":"tryyang2001"},"content":"        Food deletedFood \u003d new Food(\"\", 0, dateTime); //constructs food object to get the time period","lastModifiedDate":"2021-10-19"},{"lineNumber":44,"author":{"gitId":"tryyang2001"},"content":"        int actualIndex \u003d getActualIndex(index, deletedFood);","lastModifiedDate":"2021-10-19"},{"lineNumber":45,"author":{"gitId":"tryyang2001"},"content":"        //actualIndex is set to -1 if the provided index is not correct","lastModifiedDate":"2021-10-19"},{"lineNumber":46,"author":{"gitId":"tryyang2001"},"content":"        deletedFood \u003d (Food) internalItems.remove(actualIndex);","lastModifiedDate":"2021-10-23"},{"lineNumber":47,"author":{"gitId":"tryyang2001"},"content":"        return deletedFood;","lastModifiedDate":"2021-10-19"},{"lineNumber":48,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":49,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":50,"author":{"gitId":"tryyang2001"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":51,"author":{"gitId":"tryyang2001"},"content":"     * Converts the entire food list to string format for printing purpose.","lastModifiedDate":"2021-10-11"},{"lineNumber":52,"author":{"gitId":"tryyang2001"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":53,"author":{"gitId":"tryyang2001"},"content":"     * @return The food list in a single string","lastModifiedDate":"2021-10-10"},{"lineNumber":54,"author":{"gitId":"tryyang2001"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":55,"author":{"gitId":"tryyang2001"},"content":"    @Override","lastModifiedDate":"2021-10-16"},{"lineNumber":56,"author":{"gitId":"tryyang2001"},"content":"    public String convertToString() {","lastModifiedDate":"2021-10-10"},{"lineNumber":57,"author":{"gitId":"tryyang2001"},"content":"        StringBuilder foodListInString \u003d extractFoodListByEachDateAndTimePeriod();","lastModifiedDate":"2021-10-18"},{"lineNumber":58,"author":{"gitId":"tryyang2001"},"content":"        return foodListInString.toString().stripTrailing();","lastModifiedDate":"2021-10-16"},{"lineNumber":59,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":60,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":61,"author":{"gitId":"tryyang2001"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":62,"author":{"gitId":"tryyang2001"},"content":"     * Converts the food list of a specific date to string format for printing purpose.","lastModifiedDate":"2021-10-16"},{"lineNumber":63,"author":{"gitId":"tryyang2001"},"content":"     *","lastModifiedDate":"2021-10-16"},{"lineNumber":64,"author":{"gitId":"tryyang2001"},"content":"     * @param date The date for the food list","lastModifiedDate":"2021-10-16"},{"lineNumber":65,"author":{"gitId":"tryyang2001"},"content":"     * @return The food list of the specific date in a single string","lastModifiedDate":"2021-10-16"},{"lineNumber":66,"author":{"gitId":"tryyang2001"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":67,"author":{"gitId":"tryyang2001"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":68,"author":{"gitId":"tryyang2001"},"content":"    public String convertToStringBySpecificDate(LocalDate date) {","lastModifiedDate":"2021-10-18"},{"lineNumber":69,"author":{"gitId":"tryyang2001"},"content":"        StringBuilder foodListInString \u003d extractFoodListBySpecificDate(date);","lastModifiedDate":"2021-10-16"},{"lineNumber":70,"author":{"gitId":"weidak"},"content":"        return foodListInString.toString().stripTrailing();","lastModifiedDate":"2021-10-14"},{"lineNumber":71,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":72,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":73,"author":{"gitId":"tryyang2001"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":74,"author":{"gitId":"tryyang2001"},"content":"     * Extracts a food list according to the given date and time period and converts it to string for printing purpose.","lastModifiedDate":"2021-10-17"},{"lineNumber":75,"author":{"gitId":"tryyang2001"},"content":"     *","lastModifiedDate":"2021-10-17"},{"lineNumber":76,"author":{"gitId":"tryyang2001"},"content":"     * @param date       The date given to query the food list","lastModifiedDate":"2021-10-17"},{"lineNumber":77,"author":{"gitId":"tryyang2001"},"content":"     * @param timePeriod The time period given to query the food list","lastModifiedDate":"2021-10-17"},{"lineNumber":78,"author":{"gitId":"tryyang2001"},"content":"     * @return The food list of the specific date and time period in a single string","lastModifiedDate":"2021-10-18"},{"lineNumber":79,"author":{"gitId":"tryyang2001"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":80,"author":{"gitId":"tryyang2001"},"content":"    public String convertToStringBySpecificDateAndTime(LocalDate date, TimePeriod timePeriod) {","lastModifiedDate":"2021-10-17"},{"lineNumber":81,"author":{"gitId":"tryyang2001"},"content":"        StringBuilder foodListInString \u003d new StringBuilder();","lastModifiedDate":"2021-10-17"},{"lineNumber":82,"author":{"gitId":"tryyang2001"},"content":"        ArrayList\u003cItem\u003e subList \u003d filterListAccordingToDateAndTimePeriod(date, timePeriod);","lastModifiedDate":"2021-10-19"},{"lineNumber":83,"author":{"gitId":"tryyang2001"},"content":"        if (subList.size() \u003d\u003d 0) {","lastModifiedDate":"2021-10-17"},{"lineNumber":84,"author":{"gitId":"tryyang2001"},"content":"            foodListInString","lastModifiedDate":"2021-10-17"},{"lineNumber":85,"author":{"gitId":"tryyang2001"},"content":"                    .append(MESSAGE_NO_FOOD_IN_DATE_TIME)","lastModifiedDate":"2021-10-18"},{"lineNumber":86,"author":{"gitId":"tryyang2001"},"content":"                    .append(ItemList.LS);","lastModifiedDate":"2021-10-17"},{"lineNumber":87,"author":{"gitId":"tryyang2001"},"content":"            return foodListInString.toString().stripTrailing();","lastModifiedDate":"2021-10-17"},{"lineNumber":88,"author":{"gitId":"tryyang2001"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":89,"author":{"gitId":"tryyang2001"},"content":"        processListToString(date, timePeriod, foodListInString, subList);","lastModifiedDate":"2021-10-18"},{"lineNumber":90,"author":{"gitId":"tryyang2001"},"content":"        return foodListInString.toString().stripTrailing();","lastModifiedDate":"2021-10-17"},{"lineNumber":91,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":92,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":93,"author":{"gitId":"tryyang2001"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":94,"author":{"gitId":"tryyang2001"},"content":"     * Sorts the food list in ascending format according to the date and time.","lastModifiedDate":"2021-10-16"},{"lineNumber":95,"author":{"gitId":"tryyang2001"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":96,"author":{"gitId":"tryyang2001"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":97,"author":{"gitId":"tryyang2001"},"content":"    public void sortList() {","lastModifiedDate":"2021-10-19"},{"lineNumber":98,"author":{"gitId":"tryyang2001"},"content":"        this.internalItems.sort(Comparator.comparing(Item::getDateTime));","lastModifiedDate":"2021-10-23"},{"lineNumber":99,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":100,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":101,"author":{"gitId":"tryyang2001"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":102,"author":{"gitId":"tryyang2001"},"content":"     * Counts the number of food items consumed at night.","lastModifiedDate":"2021-10-17"},{"lineNumber":103,"author":{"gitId":"tryyang2001"},"content":"     *","lastModifiedDate":"2021-10-17"},{"lineNumber":104,"author":{"gitId":"tryyang2001"},"content":"     * @return The integer value count which indicates the number of food items consumed at night","lastModifiedDate":"2021-10-17"},{"lineNumber":105,"author":{"gitId":"tryyang2001"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":106,"author":{"gitId":"tryyang2001"},"content":"    public int getSupperCount() {","lastModifiedDate":"2021-10-17"},{"lineNumber":107,"author":{"gitId":"tryyang2001"},"content":"        return (int) internalItems.stream().filter(f -\u003e f.getTimePeriod().equals(TimePeriod.Night)).count();","lastModifiedDate":"2021-10-23"},{"lineNumber":108,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":109,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":110,"author":{"gitId":"tryyang2001"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":111,"author":{"gitId":"tryyang2001"},"content":"     * Helper method used in deleteItem for food to get the","lastModifiedDate":"2021-10-20"},{"lineNumber":112,"author":{"gitId":"tryyang2001"},"content":"     * actual index from the entire food list of the food item to delete.","lastModifiedDate":"2021-10-20"},{"lineNumber":113,"author":{"gitId":"tryyang2001"},"content":"     *","lastModifiedDate":"2021-10-18"},{"lineNumber":114,"author":{"gitId":"tryyang2001"},"content":"     * @param index       The index of the food item as shown in the view f/ command","lastModifiedDate":"2021-10-18"},{"lineNumber":115,"author":{"gitId":"tryyang2001"},"content":"     * @param deletedFood The food item to delete","lastModifiedDate":"2021-10-18"},{"lineNumber":116,"author":{"gitId":"tryyang2001"},"content":"     * @return The actual index of the food item in the entire food list","lastModifiedDate":"2021-10-18"},{"lineNumber":117,"author":{"gitId":"tryyang2001"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":118,"author":{"gitId":"tryyang2001"},"content":"    private int getActualIndex(int index, Item deletedFood) {","lastModifiedDate":"2021-10-19"},{"lineNumber":119,"author":{"gitId":"tryyang2001"},"content":"        for (int i \u003d 0; i \u003c internalItems.size(); i++) {","lastModifiedDate":"2021-10-23"},{"lineNumber":120,"author":{"gitId":"tryyang2001"},"content":"            if (isListToQuery(deletedFood, i)) {","lastModifiedDate":"2021-10-19"},{"lineNumber":121,"author":{"gitId":"tryyang2001"},"content":"                if (isFoodToDelete(deletedFood, i, index)) {","lastModifiedDate":"2021-10-18"},{"lineNumber":122,"author":{"gitId":"tryyang2001"},"content":"                    return i + index;","lastModifiedDate":"2021-10-18"},{"lineNumber":123,"author":{"gitId":"tryyang2001"},"content":"                }","lastModifiedDate":"2021-10-18"},{"lineNumber":124,"author":{"gitId":"tryyang2001"},"content":"                break;","lastModifiedDate":"2021-10-19"},{"lineNumber":125,"author":{"gitId":"tryyang2001"},"content":"            }","lastModifiedDate":"2021-10-19"},{"lineNumber":126,"author":{"gitId":"tryyang2001"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":127,"author":{"gitId":"tryyang2001"},"content":"        return -1;","lastModifiedDate":"2021-10-18"},{"lineNumber":128,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":129,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":130,"author":{"gitId":"tryyang2001"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":131,"author":{"gitId":"tryyang2001"},"content":"     * Helper method used in getActualIndex to determine if the current index points to the correct food position.","lastModifiedDate":"2021-10-19"},{"lineNumber":132,"author":{"gitId":"tryyang2001"},"content":"     *","lastModifiedDate":"2021-10-18"},{"lineNumber":133,"author":{"gitId":"tryyang2001"},"content":"     * @param deletedFood  The food item to delete","lastModifiedDate":"2021-10-18"},{"lineNumber":134,"author":{"gitId":"tryyang2001"},"content":"     * @param currentIndex The current index of the entire food list","lastModifiedDate":"2021-10-18"},{"lineNumber":135,"author":{"gitId":"tryyang2001"},"content":"     * @return True if the current food item has the same date and time period as the deletedFood, false otherwise","lastModifiedDate":"2021-10-19"},{"lineNumber":136,"author":{"gitId":"tryyang2001"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":137,"author":{"gitId":"tryyang2001"},"content":"    private boolean isListToQuery(Item deletedFood, int currentIndex) {","lastModifiedDate":"2021-10-19"},{"lineNumber":138,"author":{"gitId":"tryyang2001"},"content":"        boolean isSameDate \u003d internalItems.get(currentIndex).getDate().equals(deletedFood.getDate());","lastModifiedDate":"2021-10-23"},{"lineNumber":139,"author":{"gitId":"tryyang2001"},"content":"        boolean isSameTimePeriod \u003d internalItems.get(currentIndex).getTimePeriod().equals(deletedFood.getTimePeriod());","lastModifiedDate":"2021-10-23"},{"lineNumber":140,"author":{"gitId":"tryyang2001"},"content":"        return isSameDate \u0026\u0026 isSameTimePeriod;","lastModifiedDate":"2021-10-19"},{"lineNumber":141,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":142,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":143,"author":{"gitId":"tryyang2001"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":144,"author":{"gitId":"tryyang2001"},"content":"     * Helper boolean method used in getActualIndex to determine if the food item is the food to delete.","lastModifiedDate":"2021-10-19"},{"lineNumber":145,"author":{"gitId":"tryyang2001"},"content":"     *","lastModifiedDate":"2021-10-19"},{"lineNumber":146,"author":{"gitId":"tryyang2001"},"content":"     * @param deletedFood  The food item to delete","lastModifiedDate":"2021-10-19"},{"lineNumber":147,"author":{"gitId":"tryyang2001"},"content":"     * @param currentIndex The current index of the entire food list","lastModifiedDate":"2021-10-19"},{"lineNumber":148,"author":{"gitId":"tryyang2001"},"content":"     * @param index        The food index to delete as shown in view f/","lastModifiedDate":"2021-10-19"},{"lineNumber":149,"author":{"gitId":"tryyang2001"},"content":"     * @return True if the current food item is the food to delete, false otherwise","lastModifiedDate":"2021-10-19"},{"lineNumber":150,"author":{"gitId":"tryyang2001"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":151,"author":{"gitId":"tryyang2001"},"content":"    private boolean isFoodToDelete(Item deletedFood, int currentIndex, int index) {","lastModifiedDate":"2021-10-19"},{"lineNumber":152,"author":{"gitId":"tryyang2001"},"content":"        return internalItems.get(currentIndex + index).getTimePeriod().equals(deletedFood.getTimePeriod());","lastModifiedDate":"2021-10-23"},{"lineNumber":153,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":154,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":155,"author":{"gitId":"tryyang2001"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":156,"author":{"gitId":"tryyang2001"},"content":"     * Helper method used in convertToStringBySpecificDateAndTime to append strings to the string builder.","lastModifiedDate":"2021-10-18"},{"lineNumber":157,"author":{"gitId":"tryyang2001"},"content":"     *","lastModifiedDate":"2021-10-18"},{"lineNumber":158,"author":{"gitId":"tryyang2001"},"content":"     * @param date             The date to query the food list","lastModifiedDate":"2021-10-18"},{"lineNumber":159,"author":{"gitId":"tryyang2001"},"content":"     * @param timePeriod       The time period to query the food list","lastModifiedDate":"2021-10-18"},{"lineNumber":160,"author":{"gitId":"tryyang2001"},"content":"     * @param foodListInString The StringBuilder food list which contains the correct output string","lastModifiedDate":"2021-10-18"},{"lineNumber":161,"author":{"gitId":"tryyang2001"},"content":"     * @param subList          The array list of food items that contains all the food items with same date and time","lastModifiedDate":"2021-10-18"},{"lineNumber":162,"author":{"gitId":"tryyang2001"},"content":"     *                         period as the given date and timePeriod","lastModifiedDate":"2021-10-18"},{"lineNumber":163,"author":{"gitId":"tryyang2001"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":164,"author":{"gitId":"tryyang2001"},"content":"    private void processListToString(LocalDate date, TimePeriod timePeriod,","lastModifiedDate":"2021-10-18"},{"lineNumber":165,"author":{"gitId":"tryyang2001"},"content":"                                     StringBuilder foodListInString, ArrayList\u003cItem\u003e subList) {","lastModifiedDate":"2021-10-19"},{"lineNumber":166,"author":{"gitId":"tryyang2001"},"content":"        FoodList timePeriodList \u003d new FoodList();","lastModifiedDate":"2021-10-18"},{"lineNumber":167,"author":{"gitId":"tryyang2001"},"content":"        for (Item f : subList) {","lastModifiedDate":"2021-10-19"},{"lineNumber":168,"author":{"gitId":"tryyang2001"},"content":"            if (f.getTimePeriod().equals(timePeriod)) {","lastModifiedDate":"2021-10-18"},{"lineNumber":169,"author":{"gitId":"tryyang2001"},"content":"                timePeriodList.addItem(f);","lastModifiedDate":"2021-10-19"},{"lineNumber":170,"author":{"gitId":"tryyang2001"},"content":"            }","lastModifiedDate":"2021-10-18"},{"lineNumber":171,"author":{"gitId":"tryyang2001"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":172,"author":{"gitId":"tryyang2001"},"content":"        convertItemCountToString(foodListInString, subList.size(), date, MESSAGE_FOOD_CONSUMED);","lastModifiedDate":"2021-10-18"},{"lineNumber":173,"author":{"gitId":"tryyang2001"},"content":"        addTimePeriodMessage(timePeriod, foodListInString);","lastModifiedDate":"2021-10-18"},{"lineNumber":174,"author":{"gitId":"tryyang2001"},"content":"        for (int i \u003d 1; i \u003c\u003d timePeriodList.getSize(); i++) {","lastModifiedDate":"2021-10-18"},{"lineNumber":175,"author":{"gitId":"tryyang2001"},"content":"            convertItemToString(foodListInString, i, timePeriodList.getItem(i - 1));","lastModifiedDate":"2021-10-19"},{"lineNumber":176,"author":{"gitId":"tryyang2001"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":177,"author":{"gitId":"tryyang2001"},"content":"        convertTotalCaloriesToString(","lastModifiedDate":"2021-10-18"},{"lineNumber":178,"author":{"gitId":"tryyang2001"},"content":"                foodListInString,","lastModifiedDate":"2021-10-18"},{"lineNumber":179,"author":{"gitId":"tryyang2001"},"content":"                subList.stream().mapToInt(Item::getCalories).sum(),","lastModifiedDate":"2021-10-19"},{"lineNumber":180,"author":{"gitId":"tryyang2001"},"content":"                MESSAGE_TOTAL_CALORIE_CONSUMED_PER_DAY);","lastModifiedDate":"2021-10-24"},{"lineNumber":181,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":182,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":183,"author":{"gitId":"tryyang2001"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":184,"author":{"gitId":"tryyang2001"},"content":"     * Helper method used in convertToStringBySpecificDateAndTime to filter the original food list.","lastModifiedDate":"2021-10-18"},{"lineNumber":185,"author":{"gitId":"tryyang2001"},"content":"     *","lastModifiedDate":"2021-10-18"},{"lineNumber":186,"author":{"gitId":"tryyang2001"},"content":"     * @param date       The date to query the food list","lastModifiedDate":"2021-10-18"},{"lineNumber":187,"author":{"gitId":"tryyang2001"},"content":"     * @param timePeriod The time period to query the food list","lastModifiedDate":"2021-10-18"},{"lineNumber":188,"author":{"gitId":"tryyang2001"},"content":"     * @return The array list which contains food items with same date and time period as provided","lastModifiedDate":"2021-10-18"},{"lineNumber":189,"author":{"gitId":"tryyang2001"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":190,"author":{"gitId":"tryyang2001"},"content":"    private ArrayList\u003cItem\u003e filterListAccordingToDateAndTimePeriod(LocalDate date, TimePeriod timePeriod) {","lastModifiedDate":"2021-10-19"},{"lineNumber":191,"author":{"gitId":"tryyang2001"},"content":"        return (ArrayList\u003cItem\u003e) this.internalItems.stream()","lastModifiedDate":"2021-10-23"},{"lineNumber":192,"author":{"gitId":"tryyang2001"},"content":"                .filter(f -\u003e f.getDate().isEqual(date) \u0026\u0026 f.getTimePeriod().equals(timePeriod))","lastModifiedDate":"2021-10-18"},{"lineNumber":193,"author":{"gitId":"tryyang2001"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2021-10-18"},{"lineNumber":194,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":195,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":196,"author":{"gitId":"tryyang2001"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":197,"author":{"gitId":"tryyang2001"},"content":"     * Helper method used in processListToString to retrieve the relevant message to the provided time period.","lastModifiedDate":"2021-10-18"},{"lineNumber":198,"author":{"gitId":"tryyang2001"},"content":"     *","lastModifiedDate":"2021-10-18"},{"lineNumber":199,"author":{"gitId":"tryyang2001"},"content":"     * @param timePeriod       The time period to query the food list","lastModifiedDate":"2021-10-18"},{"lineNumber":200,"author":{"gitId":"tryyang2001"},"content":"     * @param foodListInString The StringBuilder food list which contains the correct output string","lastModifiedDate":"2021-10-18"},{"lineNumber":201,"author":{"gitId":"tryyang2001"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":202,"author":{"gitId":"tryyang2001"},"content":"    private void addTimePeriodMessage(TimePeriod timePeriod, StringBuilder foodListInString) {","lastModifiedDate":"2021-10-17"},{"lineNumber":203,"author":{"gitId":"tryyang2001"},"content":"        switch (timePeriod) {","lastModifiedDate":"2021-10-17"},{"lineNumber":204,"author":{"gitId":"tryyang2001"},"content":"        case Morning:","lastModifiedDate":"2021-10-17"},{"lineNumber":205,"author":{"gitId":"tryyang2001"},"content":"            foodListInString.append(MESSAGE_MORNING).append(ItemList.LS);","lastModifiedDate":"2021-10-17"},{"lineNumber":206,"author":{"gitId":"tryyang2001"},"content":"            break;","lastModifiedDate":"2021-10-17"},{"lineNumber":207,"author":{"gitId":"tryyang2001"},"content":"        case Afternoon:","lastModifiedDate":"2021-10-17"},{"lineNumber":208,"author":{"gitId":"tryyang2001"},"content":"            foodListInString.append(MESSAGE_AFTERNOON).append(ItemList.LS);","lastModifiedDate":"2021-10-17"},{"lineNumber":209,"author":{"gitId":"tryyang2001"},"content":"            break;","lastModifiedDate":"2021-10-17"},{"lineNumber":210,"author":{"gitId":"tryyang2001"},"content":"        case Evening:","lastModifiedDate":"2021-10-17"},{"lineNumber":211,"author":{"gitId":"tryyang2001"},"content":"            foodListInString.append(MESSAGE_EVENING).append(ItemList.LS);","lastModifiedDate":"2021-10-17"},{"lineNumber":212,"author":{"gitId":"tryyang2001"},"content":"            break;","lastModifiedDate":"2021-10-17"},{"lineNumber":213,"author":{"gitId":"tryyang2001"},"content":"        case Night:","lastModifiedDate":"2021-10-17"},{"lineNumber":214,"author":{"gitId":"tryyang2001"},"content":"            foodListInString.append(MESSAGE_NIGHT).append(ItemList.LS);","lastModifiedDate":"2021-10-17"},{"lineNumber":215,"author":{"gitId":"tryyang2001"},"content":"            break;","lastModifiedDate":"2021-10-17"},{"lineNumber":216,"author":{"gitId":"tryyang2001"},"content":"        default:","lastModifiedDate":"2021-10-17"},{"lineNumber":217,"author":{"gitId":"tryyang2001"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":218,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":219,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":220,"author":{"gitId":"tryyang2001"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":221,"author":{"gitId":"tryyang2001"},"content":"     * Helper method used in convertToString for extracting each food list","lastModifiedDate":"2021-10-18"},{"lineNumber":222,"author":{"gitId":"tryyang2001"},"content":"     * according to the date and time presented in the entire food list.","lastModifiedDate":"2021-10-18"},{"lineNumber":223,"author":{"gitId":"tryyang2001"},"content":"     *","lastModifiedDate":"2021-10-17"},{"lineNumber":224,"author":{"gitId":"tryyang2001"},"content":"     * @return StringBuilder type string which contains food lists with different date and time","lastModifiedDate":"2021-10-17"},{"lineNumber":225,"author":{"gitId":"tryyang2001"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":226,"author":{"gitId":"tryyang2001"},"content":"    private StringBuilder extractFoodListByEachDateAndTimePeriod() {","lastModifiedDate":"2021-10-18"},{"lineNumber":227,"author":{"gitId":"tryyang2001"},"content":"        if (getSize() \u003d\u003d 0) {","lastModifiedDate":"2021-10-25"},{"lineNumber":228,"author":{"gitId":"tryyang2001"},"content":"            return new StringBuilder();","lastModifiedDate":"2021-10-25"},{"lineNumber":229,"author":{"gitId":"tryyang2001"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":230,"author":{"gitId":"tryyang2001"},"content":"        StringBuilder foodListInString \u003d new StringBuilder(); //declares as StringBuilder for mutable String object","lastModifiedDate":"2021-10-17"},{"lineNumber":231,"author":{"gitId":"tryyang2001"},"content":"        for (int index \u003d 0; index \u003c internalItems.size(); index++) {","lastModifiedDate":"2021-10-23"},{"lineNumber":232,"author":{"gitId":"tryyang2001"},"content":"            LocalDate currentDate \u003d internalItems.get(index).getDate();","lastModifiedDate":"2021-10-23"},{"lineNumber":233,"author":{"gitId":"tryyang2001"},"content":"            FoodList subList \u003d new FoodList();","lastModifiedDate":"2021-10-17"},{"lineNumber":234,"author":{"gitId":"tryyang2001"},"content":"            while (index \u003c internalItems.size() \u0026\u0026 currentDate.isEqual(internalItems.get(index).getDate())) {","lastModifiedDate":"2021-10-23"},{"lineNumber":235,"author":{"gitId":"tryyang2001"},"content":"                subList.addItem(internalItems.get(index++));","lastModifiedDate":"2021-10-23"},{"lineNumber":236,"author":{"gitId":"tryyang2001"},"content":"            }","lastModifiedDate":"2021-10-17"},{"lineNumber":237,"author":{"gitId":"tryyang2001"},"content":"            assert subList.getSize() \u003e 0 : \"Sub list should not be empty.\";","lastModifiedDate":"2021-10-17"},{"lineNumber":238,"author":{"gitId":"tryyang2001"},"content":"            foodListInString.append(ITEM_LIST_DIVIDER).append(LS);","lastModifiedDate":"2021-10-24"},{"lineNumber":239,"author":{"gitId":"tryyang2001"},"content":"            convertItemCountToString(foodListInString, subList.getSize(), currentDate, MESSAGE_FOOD_CONSUMED);","lastModifiedDate":"2021-10-18"},{"lineNumber":240,"author":{"gitId":"tryyang2001"},"content":"            separateDifferentTimePeriodFoodList(foodListInString, subList);","lastModifiedDate":"2021-10-17"},{"lineNumber":241,"author":{"gitId":"tryyang2001"},"content":"            convertTotalCaloriesToString(","lastModifiedDate":"2021-10-18"},{"lineNumber":242,"author":{"gitId":"tryyang2001"},"content":"                    foodListInString,","lastModifiedDate":"2021-10-18"},{"lineNumber":243,"author":{"gitId":"tryyang2001"},"content":"                    this.getTotalCaloriesWithDate(currentDate),","lastModifiedDate":"2021-10-18"},{"lineNumber":244,"author":{"gitId":"tryyang2001"},"content":"                    MESSAGE_TOTAL_CALORIE_CONSUMED_PER_DAY);","lastModifiedDate":"2021-10-24"},{"lineNumber":245,"author":{"gitId":"tryyang2001"},"content":"            index--; //prevents double adding of index","lastModifiedDate":"2021-10-17"},{"lineNumber":246,"author":{"gitId":"tryyang2001"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":247,"author":{"gitId":"tryyang2001"},"content":"        foodListInString.append(ITEM_LIST_DIVIDER).append(LS);","lastModifiedDate":"2021-10-24"},{"lineNumber":248,"author":{"gitId":"tryyang2001"},"content":"        foodListInString.append(String.format(MESSAGE_TOTAL_FOOD_CONSUMED_PER_WEEK, getSize())).append(LS);","lastModifiedDate":"2021-10-24"},{"lineNumber":249,"author":{"gitId":"tryyang2001"},"content":"        foodListInString.append(String.format(MESSAGE_TOTAL_CALORIE_CONSUMED_PER_WEEK, getTotalCalories()));","lastModifiedDate":"2021-10-24"},{"lineNumber":250,"author":{"gitId":"tryyang2001"},"content":"        foodListInString.append(LS);","lastModifiedDate":"2021-10-24"},{"lineNumber":251,"author":{"gitId":"tryyang2001"},"content":"        return foodListInString;","lastModifiedDate":"2021-10-17"},{"lineNumber":252,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":253,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":254,"author":{"gitId":"tryyang2001"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":255,"author":{"gitId":"tryyang2001"},"content":"     * Helper method used in extractFoodListByEachDateAndTimePeriod to extract food list","lastModifiedDate":"2021-10-18"},{"lineNumber":256,"author":{"gitId":"tryyang2001"},"content":"     * on the same date according to its different time period.","lastModifiedDate":"2021-10-18"},{"lineNumber":257,"author":{"gitId":"tryyang2001"},"content":"     *","lastModifiedDate":"2021-10-17"},{"lineNumber":258,"author":{"gitId":"tryyang2001"},"content":"     * @param foodListInString The StringBuilder food list.","lastModifiedDate":"2021-10-17"},{"lineNumber":259,"author":{"gitId":"tryyang2001"},"content":"     * @param subList          FoodList which contains only the food items for the same date","lastModifiedDate":"2021-10-17"},{"lineNumber":260,"author":{"gitId":"tryyang2001"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":261,"author":{"gitId":"tryyang2001"},"content":"    private void separateDifferentTimePeriodFoodList(StringBuilder foodListInString, FoodList subList) {","lastModifiedDate":"2021-10-17"},{"lineNumber":262,"author":{"gitId":"tryyang2001"},"content":"        FoodList morningList \u003d new FoodList();","lastModifiedDate":"2021-10-17"},{"lineNumber":263,"author":{"gitId":"tryyang2001"},"content":"        FoodList afternoonList \u003d new FoodList();","lastModifiedDate":"2021-10-17"},{"lineNumber":264,"author":{"gitId":"tryyang2001"},"content":"        FoodList eveningList \u003d new FoodList();","lastModifiedDate":"2021-10-17"},{"lineNumber":265,"author":{"gitId":"tryyang2001"},"content":"        FoodList midnightList \u003d new FoodList();","lastModifiedDate":"2021-10-17"},{"lineNumber":266,"author":{"gitId":"tryyang2001"},"content":"        extractFoodListByEachTimePeriod(subList, morningList, afternoonList, eveningList, midnightList);","lastModifiedDate":"2021-10-17"},{"lineNumber":267,"author":{"gitId":"tryyang2001"},"content":"        appendWithList(foodListInString, morningList, MESSAGE_MORNING);","lastModifiedDate":"2021-10-17"},{"lineNumber":268,"author":{"gitId":"tryyang2001"},"content":"        appendWithList(foodListInString, afternoonList, MESSAGE_AFTERNOON);","lastModifiedDate":"2021-10-17"},{"lineNumber":269,"author":{"gitId":"tryyang2001"},"content":"        appendWithList(foodListInString, eveningList, MESSAGE_EVENING);","lastModifiedDate":"2021-10-17"},{"lineNumber":270,"author":{"gitId":"tryyang2001"},"content":"        appendWithList(foodListInString, midnightList, MESSAGE_NIGHT);","lastModifiedDate":"2021-10-17"},{"lineNumber":271,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":272,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":273,"author":{"gitId":"tryyang2001"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":274,"author":{"gitId":"tryyang2001"},"content":"     * Helper method used in separateDifferentTimePeriodFoodList to append","lastModifiedDate":"2021-10-18"},{"lineNumber":275,"author":{"gitId":"tryyang2001"},"content":"     * the StringBuilder foodListInString with each time period food list.","lastModifiedDate":"2021-10-18"},{"lineNumber":276,"author":{"gitId":"tryyang2001"},"content":"     *","lastModifiedDate":"2021-10-17"},{"lineNumber":277,"author":{"gitId":"tryyang2001"},"content":"     * @param foodListInString The StringBuilder food list which contains the correct output string","lastModifiedDate":"2021-10-17"},{"lineNumber":278,"author":{"gitId":"tryyang2001"},"content":"     * @param timePeriodList   The food list that contains food items that consumed within the time period","lastModifiedDate":"2021-10-17"},{"lineNumber":279,"author":{"gitId":"tryyang2001"},"content":"     * @param periodMessage    The message to indicate the time period","lastModifiedDate":"2021-10-17"},{"lineNumber":280,"author":{"gitId":"tryyang2001"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":281,"author":{"gitId":"tryyang2001"},"content":"    private void appendWithList(StringBuilder foodListInString, FoodList timePeriodList, String periodMessage) {","lastModifiedDate":"2021-10-17"},{"lineNumber":282,"author":{"gitId":"tryyang2001"},"content":"        if (timePeriodList.getSize() \u003e 0) {","lastModifiedDate":"2021-10-17"},{"lineNumber":283,"author":{"gitId":"tryyang2001"},"content":"            foodListInString.append(periodMessage).append(ItemList.LS);","lastModifiedDate":"2021-10-17"},{"lineNumber":284,"author":{"gitId":"tryyang2001"},"content":"            for (int i \u003d 1; i \u003c\u003d timePeriodList.getSize(); i++) {","lastModifiedDate":"2021-10-17"},{"lineNumber":285,"author":{"gitId":"tryyang2001"},"content":"                convertItemToString(foodListInString, i, timePeriodList.getItem(i - 1));","lastModifiedDate":"2021-10-19"},{"lineNumber":286,"author":{"gitId":"tryyang2001"},"content":"            }","lastModifiedDate":"2021-10-17"},{"lineNumber":287,"author":{"gitId":"tryyang2001"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":288,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":289,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":290,"author":{"gitId":"tryyang2001"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":291,"author":{"gitId":"tryyang2001"},"content":"     * Helper method used in separateDifferentTimePeriodFoodList to extract the larger subList into 4 smaller lists","lastModifiedDate":"2021-10-18"},{"lineNumber":292,"author":{"gitId":"tryyang2001"},"content":"     * which contain food items with same date according to the time period.","lastModifiedDate":"2021-10-18"},{"lineNumber":293,"author":{"gitId":"tryyang2001"},"content":"     *","lastModifiedDate":"2021-10-18"},{"lineNumber":294,"author":{"gitId":"tryyang2001"},"content":"     * @param subList       The food list that contains all the food items consumed on the same date","lastModifiedDate":"2021-10-18"},{"lineNumber":295,"author":{"gitId":"tryyang2001"},"content":"     * @param morningList   The food list that contains all the food items consumed in the morning of a given date","lastModifiedDate":"2021-10-18"},{"lineNumber":296,"author":{"gitId":"tryyang2001"},"content":"     * @param afternoonList The food list that contains all the food items consumed in the afternoon of a given date","lastModifiedDate":"2021-10-18"},{"lineNumber":297,"author":{"gitId":"tryyang2001"},"content":"     * @param eveningList   The food list that contains all the food items consumed in the evening of a given date","lastModifiedDate":"2021-10-18"},{"lineNumber":298,"author":{"gitId":"tryyang2001"},"content":"     * @param nightList     The food list that contains all the food items consumed at night of a given date","lastModifiedDate":"2021-10-18"},{"lineNumber":299,"author":{"gitId":"tryyang2001"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":300,"author":{"gitId":"tryyang2001"},"content":"    private void extractFoodListByEachTimePeriod(FoodList subList, FoodList morningList, FoodList afternoonList,","lastModifiedDate":"2021-10-17"},{"lineNumber":301,"author":{"gitId":"tryyang2001"},"content":"                                                 FoodList eveningList, FoodList nightList) {","lastModifiedDate":"2021-10-17"},{"lineNumber":302,"author":{"gitId":"tryyang2001"},"content":"        for (int i \u003d 1; i \u003c\u003d subList.getSize(); i++) {","lastModifiedDate":"2021-10-17"},{"lineNumber":303,"author":{"gitId":"tryyang2001"},"content":"            switch (subList.getItem(i - 1).getTimePeriod()) {","lastModifiedDate":"2021-10-19"},{"lineNumber":304,"author":{"gitId":"tryyang2001"},"content":"            case Morning:","lastModifiedDate":"2021-10-17"},{"lineNumber":305,"author":{"gitId":"tryyang2001"},"content":"                morningList.addItem(subList.getItem(i - 1));","lastModifiedDate":"2021-10-19"},{"lineNumber":306,"author":{"gitId":"tryyang2001"},"content":"                break;","lastModifiedDate":"2021-10-17"},{"lineNumber":307,"author":{"gitId":"tryyang2001"},"content":"            case Afternoon:","lastModifiedDate":"2021-10-17"},{"lineNumber":308,"author":{"gitId":"tryyang2001"},"content":"                afternoonList.addItem(subList.getItem(i - 1));","lastModifiedDate":"2021-10-19"},{"lineNumber":309,"author":{"gitId":"tryyang2001"},"content":"                break;","lastModifiedDate":"2021-10-17"},{"lineNumber":310,"author":{"gitId":"tryyang2001"},"content":"            case Evening:","lastModifiedDate":"2021-10-17"},{"lineNumber":311,"author":{"gitId":"tryyang2001"},"content":"                eveningList.addItem(subList.getItem(i - 1));","lastModifiedDate":"2021-10-19"},{"lineNumber":312,"author":{"gitId":"tryyang2001"},"content":"                break;","lastModifiedDate":"2021-10-17"},{"lineNumber":313,"author":{"gitId":"tryyang2001"},"content":"            case Night:","lastModifiedDate":"2021-10-17"},{"lineNumber":314,"author":{"gitId":"tryyang2001"},"content":"                nightList.addItem(subList.getItem(i - 1));","lastModifiedDate":"2021-10-19"},{"lineNumber":315,"author":{"gitId":"tryyang2001"},"content":"                break;","lastModifiedDate":"2021-10-17"},{"lineNumber":316,"author":{"gitId":"tryyang2001"},"content":"            default:","lastModifiedDate":"2021-10-17"},{"lineNumber":317,"author":{"gitId":"tryyang2001"},"content":"            }","lastModifiedDate":"2021-10-17"},{"lineNumber":318,"author":{"gitId":"tryyang2001"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":319,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":320,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":321,"author":{"gitId":"tryyang2001"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":322,"author":{"gitId":"tryyang2001"},"content":"     * Helper method used in convertToStringBySpecificDate for extracting","lastModifiedDate":"2021-10-18"},{"lineNumber":323,"author":{"gitId":"tryyang2001"},"content":"     * food list which contains all the food item consumed on the date.","lastModifiedDate":"2021-10-18"},{"lineNumber":324,"author":{"gitId":"tryyang2001"},"content":"     *","lastModifiedDate":"2021-10-17"},{"lineNumber":325,"author":{"gitId":"tryyang2001"},"content":"     * @param date The date to query all the food items consumed","lastModifiedDate":"2021-10-17"},{"lineNumber":326,"author":{"gitId":"tryyang2001"},"content":"     * @return StringBuilder type string which contains a food list with the given date","lastModifiedDate":"2021-10-17"},{"lineNumber":327,"author":{"gitId":"tryyang2001"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":328,"author":{"gitId":"tryyang2001"},"content":"    private StringBuilder extractFoodListBySpecificDate(LocalDate date) {","lastModifiedDate":"2021-10-17"},{"lineNumber":329,"author":{"gitId":"tryyang2001"},"content":"        StringBuilder foodListInString \u003d new StringBuilder(); //declares as StringBuilder for mutable String object","lastModifiedDate":"2021-10-17"},{"lineNumber":330,"author":{"gitId":"tryyang2001"},"content":"        ArrayList\u003cItem\u003e subList \u003d (ArrayList\u003cItem\u003e) this.internalItems.stream()","lastModifiedDate":"2021-10-23"},{"lineNumber":331,"author":{"gitId":"tryyang2001"},"content":"                .filter(f -\u003e f.getDate().isEqual(date))","lastModifiedDate":"2021-10-17"},{"lineNumber":332,"author":{"gitId":"tryyang2001"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2021-10-17"},{"lineNumber":333,"author":{"gitId":"tryyang2001"},"content":"        if (subList.size() \u003d\u003d 0) {","lastModifiedDate":"2021-10-17"},{"lineNumber":334,"author":{"gitId":"tryyang2001"},"content":"            foodListInString","lastModifiedDate":"2021-10-17"},{"lineNumber":335,"author":{"gitId":"tryyang2001"},"content":"                    .append(MESSAGE_NO_FOOD_IN_DATE)","lastModifiedDate":"2021-10-17"},{"lineNumber":336,"author":{"gitId":"tryyang2001"},"content":"                    .append(ItemList.LS);","lastModifiedDate":"2021-10-17"},{"lineNumber":337,"author":{"gitId":"tryyang2001"},"content":"            return foodListInString;","lastModifiedDate":"2021-10-17"},{"lineNumber":338,"author":{"gitId":"tryyang2001"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":339,"author":{"gitId":"tryyang2001"},"content":"        convertItemCountToString(foodListInString, subList.size(), date, MESSAGE_FOOD_CONSUMED);","lastModifiedDate":"2021-10-18"},{"lineNumber":340,"author":{"gitId":"tryyang2001"},"content":"        for (int i \u003d 1; i \u003c\u003d subList.size(); i++) {","lastModifiedDate":"2021-10-17"},{"lineNumber":341,"author":{"gitId":"tryyang2001"},"content":"            convertItemToString(foodListInString, i, subList.get(i - 1));","lastModifiedDate":"2021-10-18"},{"lineNumber":342,"author":{"gitId":"tryyang2001"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":343,"author":{"gitId":"tryyang2001"},"content":"        convertTotalCaloriesToString(","lastModifiedDate":"2021-10-18"},{"lineNumber":344,"author":{"gitId":"tryyang2001"},"content":"                foodListInString,","lastModifiedDate":"2021-10-18"},{"lineNumber":345,"author":{"gitId":"tryyang2001"},"content":"                this.getTotalCaloriesWithDate(date),","lastModifiedDate":"2021-10-18"},{"lineNumber":346,"author":{"gitId":"tryyang2001"},"content":"                MESSAGE_TOTAL_CALORIE_CONSUMED_PER_DAY);","lastModifiedDate":"2021-10-24"},{"lineNumber":347,"author":{"gitId":"tryyang2001"},"content":"        return foodListInString;","lastModifiedDate":"2021-10-17"},{"lineNumber":348,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":349,"author":{"gitId":"tryyang2001"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"weidak":1,"tryyang2001":344,"tlyi":4}},{"path":"src/main/java/seedu/duke/data/item/food/TimePeriod.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.data.item.food;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":3,"author":{"gitId":"tryyang2001"},"content":"public enum TimePeriod {","lastModifiedDate":"2021-10-17"},{"lineNumber":4,"author":{"gitId":"tryyang2001"},"content":"    Morning, Afternoon, Evening, Night","lastModifiedDate":"2021-10-17"},{"lineNumber":5,"author":{"gitId":"tryyang2001"},"content":"}","lastModifiedDate":"2021-10-17"}],"authorContributionMap":{"tryyang2001":4,"tlyi":1}},{"path":"src/main/java/seedu/duke/data/profile/Profile.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.data.profile;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"tlyi"},"content":"import seedu.duke.data.profile.attributes.ActivityFactor;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"tlyi"},"content":"import seedu.duke.data.profile.attributes.Age;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"tlyi"},"content":"import seedu.duke.data.profile.attributes.CalorieGoal;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"tlyi"},"content":"import seedu.duke.data.profile.attributes.Gender;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"tlyi"},"content":"import seedu.duke.data.profile.attributes.Height;","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"tlyi"},"content":"import seedu.duke.data.profile.attributes.Name;","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"tlyi"},"content":"import seedu.duke.data.profile.attributes.Weight;","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"tlyi"},"content":"import seedu.duke.data.profile.exceptions.InvalidCharacteristicException;","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"weidak"},"content":"/**","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"weidak"},"content":" * Profile that contains the relevant details input by user.","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"weidak"},"content":" */","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"weidak"},"content":"public class Profile {","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"weidak"},"content":"    public static final String FILE_TEXT_DELIMITER \u003d \"|\";","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"weidak"},"content":"    private static final String LS \u003d System.lineSeparator();","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"tlyi"},"content":"    private static final String TAB \u003d \"\\t\";","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"tlyi"},"content":"    private static final String INDENTED_LS \u003d LS + TAB;","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"weidak"},"content":"    public static final int NON_POSITIVE_LIMIT \u003d 0;","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"tttyyzzz"},"content":"    public static final String ERROR_NAME \u003d \"Try not to use / and | in your name as it can make our commands invalid.\\n\"","lastModifiedDate":"2021-10-25"},{"lineNumber":25,"author":{"gitId":"tttyyzzz"},"content":"            + \"Maybe you can replace them with \\\\ or - and try again:\";","lastModifiedDate":"2021-10-25"},{"lineNumber":26,"author":{"gitId":"weidak"},"content":"    public static final String ERROR_HEIGHT \u003d \"Height cannot be less than or equal to 0.\" + LS","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"weidak"},"content":"            + \"Try a positive value instead!\";","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"weidak"},"content":"    public static final String ERROR_WEIGHT \u003d \"Weight cannot be less than or equal to 0.\" + LS","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"weidak"},"content":"            + \"Try a positive value instead!\";","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"weidak"},"content":"    public static final String ERROR_GENDER \u003d \"Please type in M or F only!\";","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"weidak"},"content":"    public static final String ERROR_AGE \u003d \"Age cannot be less than or equal to 0.\" + LS","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"weidak"},"content":"            + \"Try a positive value instead!\";","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"weidak"},"content":"    public static final String ERROR_ACTIVITY_FACTOR \u003d \"Please key in a value from \"","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"weidak"},"content":"            + ActivityFactor.LIMIT_LOWER_ACTIVITY_FACTOR","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"weidak"},"content":"            + \" to \"","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"weidak"},"content":"            + ActivityFactor.LIMIT_UPPER_ACTIVITY_LEVEL;","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"weidak"},"content":"    public static final String ERROR_CALORIE_GOAL \u003d","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"weidak"},"content":"            \"I don\u0027t think you should be aiming to be setting such a extreme goal of %d\" + LS","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"weidak"},"content":"                    + \"Try a range of \" + CalorieGoal.LIMIT_LOWER_CALORIES + \" to \" + CalorieGoal.LIMIT_UPPER_CALORIES;","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"weidak"},"content":"    private static final String BMI_STATUS_UNDERWEIGHT \u003d \"Underweight\";","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"weidak"},"content":"    private static final String BMI_STATUS_HEALTHY \u003d \"Healthy\";","lastModifiedDate":"2021-10-11"},{"lineNumber":43,"author":{"gitId":"weidak"},"content":"    private static final String BMI_STATUS_OVERWEIGHT \u003d \"Overweight\";","lastModifiedDate":"2021-10-11"},{"lineNumber":44,"author":{"gitId":"weidak"},"content":"    private static final String BMI_STATUS_OBESE \u003d \"Obese\";","lastModifiedDate":"2021-10-11"},{"lineNumber":45,"author":{"gitId":"weidak"},"content":"    public static final double BMI_LIMIT_UNDERWEIGHT \u003d 18.5;","lastModifiedDate":"2021-10-18"},{"lineNumber":46,"author":{"gitId":"weidak"},"content":"    public static final double BMI_LIMIT_HEALTHY \u003d 24.9;","lastModifiedDate":"2021-10-18"},{"lineNumber":47,"author":{"gitId":"weidak"},"content":"    public static final double BMI_LIMIT_OVERWEIGHT \u003d 29.9;","lastModifiedDate":"2021-10-18"},{"lineNumber":48,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":49,"author":{"gitId":"weidak"},"content":"    public static final double FACTOR_SEDENTARY \u003d 1.2;","lastModifiedDate":"2021-10-18"},{"lineNumber":50,"author":{"gitId":"weidak"},"content":"    public static final double FACTOR_LIGHT \u003d 1.375;","lastModifiedDate":"2021-10-18"},{"lineNumber":51,"author":{"gitId":"weidak"},"content":"    public static final double FACTOR_MODERATE \u003d 1.55;","lastModifiedDate":"2021-10-18"},{"lineNumber":52,"author":{"gitId":"weidak"},"content":"    public static final double FACTOR_INTENSE \u003d 1.725;","lastModifiedDate":"2021-10-18"},{"lineNumber":53,"author":{"gitId":"weidak"},"content":"    public static final double FACTOR_EXTREME \u003d 1.9;","lastModifiedDate":"2021-10-18"},{"lineNumber":54,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":55,"author":{"gitId":"weidak"},"content":"    private static final char GENDER_M \u003d \u0027M\u0027;","lastModifiedDate":"2021-10-18"},{"lineNumber":56,"author":{"gitId":"weidak"},"content":"    private static final char GENDER_F \u003d \u0027F\u0027;","lastModifiedDate":"2021-10-18"},{"lineNumber":57,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":58,"author":{"gitId":"weidak"},"content":"    public static final double GENDER_M_WEIGHT_FACTOR \u003d 13.397;","lastModifiedDate":"2021-10-18"},{"lineNumber":59,"author":{"gitId":"weidak"},"content":"    public static final double GENDER_M_HEIGHT_FACTOR \u003d 4.799;","lastModifiedDate":"2021-10-18"},{"lineNumber":60,"author":{"gitId":"weidak"},"content":"    public static final double GENDER_M_AGE_FACTOR \u003d 5.677;","lastModifiedDate":"2021-10-18"},{"lineNumber":61,"author":{"gitId":"weidak"},"content":"    public static final double GENDER_M_CONSTANT \u003d 88.362;","lastModifiedDate":"2021-10-18"},{"lineNumber":62,"author":{"gitId":"weidak"},"content":"    public static final double GENDER_F_WEIGHT_FACTOR \u003d 9.247;","lastModifiedDate":"2021-10-18"},{"lineNumber":63,"author":{"gitId":"weidak"},"content":"    public static final double GENDER_F_HEIGHT_FACTOR \u003d 3.098;","lastModifiedDate":"2021-10-18"},{"lineNumber":64,"author":{"gitId":"weidak"},"content":"    public static final double GENDER_F_AGE_FACTOR \u003d 4.330;","lastModifiedDate":"2021-10-18"},{"lineNumber":65,"author":{"gitId":"weidak"},"content":"    public static final double GENDER_F_CONSTANT \u003d 447.593;","lastModifiedDate":"2021-10-18"},{"lineNumber":66,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":67,"author":{"gitId":"weidak"},"content":"    public static final String MESSAGE_PROFILE \u003d \"Hello %1$s! This is your profile:\" + LS","lastModifiedDate":"2021-10-27"},{"lineNumber":68,"author":{"gitId":"weidak"},"content":"            + \"*\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\"","lastModifiedDate":"2021-10-27"},{"lineNumber":69,"author":{"gitId":"weidak"},"content":"            + INDENTED_LS + \"Height                 %2$scm\"","lastModifiedDate":"2021-10-27"},{"lineNumber":70,"author":{"gitId":"weidak"},"content":"            + INDENTED_LS + \"Weight                 %3$skg\"","lastModifiedDate":"2021-10-27"},{"lineNumber":71,"author":{"gitId":"weidak"},"content":"            + INDENTED_LS + \"Gender                 %4$s\"","lastModifiedDate":"2021-10-27"},{"lineNumber":72,"author":{"gitId":"weidak"},"content":"            + INDENTED_LS + \"Age                    %5$s\"","lastModifiedDate":"2021-10-27"},{"lineNumber":73,"author":{"gitId":"weidak"},"content":"            + INDENTED_LS + \"Calorie Goal           %6$s cal\"","lastModifiedDate":"2021-10-27"},{"lineNumber":74,"author":{"gitId":"weidak"},"content":"            + INDENTED_LS + \"Activity Factor        %7$s\"","lastModifiedDate":"2021-10-27"},{"lineNumber":75,"author":{"gitId":"weidak"},"content":"            + LS + \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d*\";","lastModifiedDate":"2021-10-27"},{"lineNumber":76,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":77,"author":{"gitId":"weidak"},"content":"    protected Name name \u003d new Name();","lastModifiedDate":"2021-10-20"},{"lineNumber":78,"author":{"gitId":"weidak"},"content":"    protected Height height \u003d new Height();","lastModifiedDate":"2021-10-20"},{"lineNumber":79,"author":{"gitId":"weidak"},"content":"    protected Weight weight \u003d new Weight();","lastModifiedDate":"2021-10-20"},{"lineNumber":80,"author":{"gitId":"weidak"},"content":"    protected Gender gender \u003d new Gender();","lastModifiedDate":"2021-10-20"},{"lineNumber":81,"author":{"gitId":"weidak"},"content":"    protected Age age \u003d new Age();","lastModifiedDate":"2021-10-20"},{"lineNumber":82,"author":{"gitId":"weidak"},"content":"    protected CalorieGoal calorieGoal \u003d new CalorieGoal();","lastModifiedDate":"2021-10-20"},{"lineNumber":83,"author":{"gitId":"weidak"},"content":"    protected ActivityFactor activityFactor \u003d new ActivityFactor();","lastModifiedDate":"2021-10-20"},{"lineNumber":84,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":85,"author":{"gitId":"tlyi"},"content":"    public Profile() {","lastModifiedDate":"2021-10-11"},{"lineNumber":86,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":87,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":88,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":89,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":90,"author":{"gitId":"weidak"},"content":"     * Constructor for the Profile class.","lastModifiedDate":"2021-10-20"},{"lineNumber":91,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-10-19"},{"lineNumber":92,"author":{"gitId":"weidak"},"content":"     * @param name           Name of user","lastModifiedDate":"2021-10-19"},{"lineNumber":93,"author":{"gitId":"weidak"},"content":"     * @param height         Height of user","lastModifiedDate":"2021-10-19"},{"lineNumber":94,"author":{"gitId":"weidak"},"content":"     * @param weight         Weight of user","lastModifiedDate":"2021-10-19"},{"lineNumber":95,"author":{"gitId":"weidak"},"content":"     * @param calorieGoal    Calorie target of user","lastModifiedDate":"2021-10-19"},{"lineNumber":96,"author":{"gitId":"weidak"},"content":"     * @param gender         Gender of user (M/F)","lastModifiedDate":"2021-10-19"},{"lineNumber":97,"author":{"gitId":"weidak"},"content":"     * @param age            Age of user","lastModifiedDate":"2021-10-19"},{"lineNumber":98,"author":{"gitId":"weidak"},"content":"     * @param activityFactor Activity level of user","lastModifiedDate":"2021-10-19"},{"lineNumber":99,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":100,"author":{"gitId":"weidak"},"content":"    public Profile(Name name, Height height, Weight weight, Gender gender,","lastModifiedDate":"2021-10-20"},{"lineNumber":101,"author":{"gitId":"weidak"},"content":"                   Age age, CalorieGoal calorieGoal, ActivityFactor activityFactor) {","lastModifiedDate":"2021-10-20"},{"lineNumber":102,"author":{"gitId":"weidak"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-10-20"},{"lineNumber":103,"author":{"gitId":"weidak"},"content":"        this.height \u003d height;","lastModifiedDate":"2021-10-20"},{"lineNumber":104,"author":{"gitId":"weidak"},"content":"        this.weight \u003d weight;","lastModifiedDate":"2021-10-20"},{"lineNumber":105,"author":{"gitId":"weidak"},"content":"        this.gender \u003d gender;","lastModifiedDate":"2021-10-20"},{"lineNumber":106,"author":{"gitId":"weidak"},"content":"        this.age \u003d age;","lastModifiedDate":"2021-10-20"},{"lineNumber":107,"author":{"gitId":"weidak"},"content":"        this.calorieGoal \u003d calorieGoal;","lastModifiedDate":"2021-10-20"},{"lineNumber":108,"author":{"gitId":"weidak"},"content":"        this.activityFactor \u003d activityFactor;","lastModifiedDate":"2021-10-20"},{"lineNumber":109,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":110,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":111,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":112,"author":{"gitId":"weidak"},"content":"     * A set command that enables setting of profile through passing by reference.","lastModifiedDate":"2021-10-21"},{"lineNumber":113,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-10-21"},{"lineNumber":114,"author":{"gitId":"weidak"},"content":"     * @param name           Name of user","lastModifiedDate":"2021-10-21"},{"lineNumber":115,"author":{"gitId":"weidak"},"content":"     * @param height         Height of user","lastModifiedDate":"2021-10-21"},{"lineNumber":116,"author":{"gitId":"weidak"},"content":"     * @param weight         Weight of user","lastModifiedDate":"2021-10-21"},{"lineNumber":117,"author":{"gitId":"weidak"},"content":"     * @param calorieGoal    Calorie target of user","lastModifiedDate":"2021-10-21"},{"lineNumber":118,"author":{"gitId":"weidak"},"content":"     * @param gender         Gender of user (M/F)","lastModifiedDate":"2021-10-21"},{"lineNumber":119,"author":{"gitId":"weidak"},"content":"     * @param age            Age of user","lastModifiedDate":"2021-10-21"},{"lineNumber":120,"author":{"gitId":"weidak"},"content":"     * @param activityFactor Activity level of user","lastModifiedDate":"2021-10-21"},{"lineNumber":121,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":122,"author":{"gitId":"weidak"},"content":"    public void setProfile(Name name, Height height, Weight weight, Gender gender,","lastModifiedDate":"2021-10-21"},{"lineNumber":123,"author":{"gitId":"weidak"},"content":"                           Age age, CalorieGoal calorieGoal, ActivityFactor activityFactor) {","lastModifiedDate":"2021-10-21"},{"lineNumber":124,"author":{"gitId":"weidak"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-10-21"},{"lineNumber":125,"author":{"gitId":"weidak"},"content":"        this.height \u003d height;","lastModifiedDate":"2021-10-21"},{"lineNumber":126,"author":{"gitId":"weidak"},"content":"        this.weight \u003d weight;","lastModifiedDate":"2021-10-21"},{"lineNumber":127,"author":{"gitId":"weidak"},"content":"        this.gender \u003d gender;","lastModifiedDate":"2021-10-21"},{"lineNumber":128,"author":{"gitId":"weidak"},"content":"        this.age \u003d age;","lastModifiedDate":"2021-10-21"},{"lineNumber":129,"author":{"gitId":"weidak"},"content":"        this.calorieGoal \u003d calorieGoal;","lastModifiedDate":"2021-10-21"},{"lineNumber":130,"author":{"gitId":"weidak"},"content":"        this.activityFactor \u003d activityFactor;","lastModifiedDate":"2021-10-21"},{"lineNumber":131,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":132,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":133,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":134,"author":{"gitId":"weidak"},"content":"     * Sets the profile in various commands with the raw inputs if necessary.","lastModifiedDate":"2021-10-20"},{"lineNumber":135,"author":{"gitId":"weidak"},"content":"     * Usually used for retrieving data from storage.","lastModifiedDate":"2021-10-20"},{"lineNumber":136,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-10-19"},{"lineNumber":137,"author":{"gitId":"weidak"},"content":"     * @param name           Name of user","lastModifiedDate":"2021-10-19"},{"lineNumber":138,"author":{"gitId":"weidak"},"content":"     * @param height         Height of user","lastModifiedDate":"2021-10-19"},{"lineNumber":139,"author":{"gitId":"weidak"},"content":"     * @param weight         Weight of user","lastModifiedDate":"2021-10-19"},{"lineNumber":140,"author":{"gitId":"weidak"},"content":"     * @param calorieGoal    Calorie target of user","lastModifiedDate":"2021-10-19"},{"lineNumber":141,"author":{"gitId":"weidak"},"content":"     * @param gender         Gender of user (M/F)","lastModifiedDate":"2021-10-19"},{"lineNumber":142,"author":{"gitId":"weidak"},"content":"     * @param age            Age of user","lastModifiedDate":"2021-10-19"},{"lineNumber":143,"author":{"gitId":"weidak"},"content":"     * @param activityFactor Activity level of user","lastModifiedDate":"2021-10-19"},{"lineNumber":144,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":145,"author":{"gitId":"weidak"},"content":"    public void setProfileWithRawInputs(String name, double height, double weight,","lastModifiedDate":"2021-10-20"},{"lineNumber":146,"author":{"gitId":"weidak"},"content":"                                        char gender, int age, int calorieGoal, int activityFactor) {","lastModifiedDate":"2021-10-20"},{"lineNumber":147,"author":{"gitId":"weidak"},"content":"        this.name.setName(name);","lastModifiedDate":"2021-10-20"},{"lineNumber":148,"author":{"gitId":"weidak"},"content":"        this.height.setHeight(height);","lastModifiedDate":"2021-10-20"},{"lineNumber":149,"author":{"gitId":"weidak"},"content":"        this.weight.setWeight(weight);","lastModifiedDate":"2021-10-20"},{"lineNumber":150,"author":{"gitId":"weidak"},"content":"        this.gender.setGender(gender);","lastModifiedDate":"2021-10-20"},{"lineNumber":151,"author":{"gitId":"weidak"},"content":"        this.age.setAge(age);","lastModifiedDate":"2021-10-20"},{"lineNumber":152,"author":{"gitId":"weidak"},"content":"        this.calorieGoal.setCalorieGoal(calorieGoal);","lastModifiedDate":"2021-10-20"},{"lineNumber":153,"author":{"gitId":"weidak"},"content":"        this.activityFactor.setActivityFactor(activityFactor);","lastModifiedDate":"2021-10-20"},{"lineNumber":154,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":155,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":156,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":157,"author":{"gitId":"weidak"},"content":"     * Sets the profile name with a new Name object.","lastModifiedDate":"2021-10-20"},{"lineNumber":158,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":159,"author":{"gitId":"weidak"},"content":"     * @param name Name object to be set","lastModifiedDate":"2021-10-20"},{"lineNumber":160,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":161,"author":{"gitId":"weidak"},"content":"    public void setProfileName(Name name) {","lastModifiedDate":"2021-10-20"},{"lineNumber":162,"author":{"gitId":"weidak"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-10-09"},{"lineNumber":163,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":164,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":165,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":166,"author":{"gitId":"weidak"},"content":"     * Sets the profile height with a new Height object.","lastModifiedDate":"2021-10-20"},{"lineNumber":167,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":168,"author":{"gitId":"weidak"},"content":"     * @param height Height object to be set","lastModifiedDate":"2021-10-20"},{"lineNumber":169,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":170,"author":{"gitId":"weidak"},"content":"    public void setProfileHeight(Height height) {","lastModifiedDate":"2021-10-20"},{"lineNumber":171,"author":{"gitId":"weidak"},"content":"        this.height \u003d height;","lastModifiedDate":"2021-10-18"},{"lineNumber":172,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":173,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":174,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":175,"author":{"gitId":"weidak"},"content":"     * Sets the profile weight with a new Weight object.","lastModifiedDate":"2021-10-20"},{"lineNumber":176,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":177,"author":{"gitId":"weidak"},"content":"     * @param weight Weight object to be set","lastModifiedDate":"2021-10-20"},{"lineNumber":178,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":179,"author":{"gitId":"weidak"},"content":"    public void setProfileWeight(Weight weight) {","lastModifiedDate":"2021-10-20"},{"lineNumber":180,"author":{"gitId":"weidak"},"content":"        this.weight \u003d weight;","lastModifiedDate":"2021-10-20"},{"lineNumber":181,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":182,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":183,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":184,"author":{"gitId":"weidak"},"content":"     * Sets the profile gender with a new Profile object.","lastModifiedDate":"2021-10-20"},{"lineNumber":185,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":186,"author":{"gitId":"weidak"},"content":"     * @param gender Gender object to be set","lastModifiedDate":"2021-10-20"},{"lineNumber":187,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":188,"author":{"gitId":"weidak"},"content":"    public void setProfileGender(Gender gender) {","lastModifiedDate":"2021-10-20"},{"lineNumber":189,"author":{"gitId":"weidak"},"content":"        this.gender \u003d gender;","lastModifiedDate":"2021-10-19"},{"lineNumber":190,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":191,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":192,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":193,"author":{"gitId":"weidak"},"content":"     * Sets the profile age with a new Age object.","lastModifiedDate":"2021-10-20"},{"lineNumber":194,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":195,"author":{"gitId":"weidak"},"content":"     * @param age Age object to be set","lastModifiedDate":"2021-10-20"},{"lineNumber":196,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":197,"author":{"gitId":"weidak"},"content":"    public void setProfileAge(Age age) {","lastModifiedDate":"2021-10-20"},{"lineNumber":198,"author":{"gitId":"weidak"},"content":"        this.age \u003d age;","lastModifiedDate":"2021-10-19"},{"lineNumber":199,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":200,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":201,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":202,"author":{"gitId":"weidak"},"content":"     * Sets the profile calorie goal with a new CalorieGoal object.","lastModifiedDate":"2021-10-20"},{"lineNumber":203,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":204,"author":{"gitId":"weidak"},"content":"     * @param calorieGoal CalorieGoal object to be set","lastModifiedDate":"2021-10-20"},{"lineNumber":205,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":206,"author":{"gitId":"weidak"},"content":"    public void setProfileCalorieGoal(CalorieGoal calorieGoal) {","lastModifiedDate":"2021-10-20"},{"lineNumber":207,"author":{"gitId":"weidak"},"content":"        this.calorieGoal \u003d calorieGoal;","lastModifiedDate":"2021-10-19"},{"lineNumber":208,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":209,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":210,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":211,"author":{"gitId":"weidak"},"content":"     * Sets the profile activity factor with a new ActivityFactor object.","lastModifiedDate":"2021-10-20"},{"lineNumber":212,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":213,"author":{"gitId":"weidak"},"content":"     * @param activityFactor ActivityFactor object to be set","lastModifiedDate":"2021-10-20"},{"lineNumber":214,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":215,"author":{"gitId":"weidak"},"content":"    public void setProfileActivityFactor(ActivityFactor activityFactor) {","lastModifiedDate":"2021-10-20"},{"lineNumber":216,"author":{"gitId":"weidak"},"content":"        this.activityFactor \u003d activityFactor;","lastModifiedDate":"2021-10-20"},{"lineNumber":217,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":218,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":219,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":220,"author":{"gitId":"weidak"},"content":"     * Retrieves the Name object from the profile.","lastModifiedDate":"2021-10-20"},{"lineNumber":221,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":222,"author":{"gitId":"weidak"},"content":"     * @return Name object","lastModifiedDate":"2021-10-20"},{"lineNumber":223,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":224,"author":{"gitId":"weidak"},"content":"    public Name getProfileName() {","lastModifiedDate":"2021-10-20"},{"lineNumber":225,"author":{"gitId":"weidak"},"content":"        return this.name;","lastModifiedDate":"2021-10-20"},{"lineNumber":226,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":227,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":228,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":229,"author":{"gitId":"weidak"},"content":"     * Retrieves the Height object from the profile.","lastModifiedDate":"2021-10-20"},{"lineNumber":230,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":231,"author":{"gitId":"weidak"},"content":"     * @return Height object","lastModifiedDate":"2021-10-20"},{"lineNumber":232,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":233,"author":{"gitId":"weidak"},"content":"    public Height getProfileHeight() {","lastModifiedDate":"2021-10-20"},{"lineNumber":234,"author":{"gitId":"weidak"},"content":"        return this.height;","lastModifiedDate":"2021-10-19"},{"lineNumber":235,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":236,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":237,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":238,"author":{"gitId":"weidak"},"content":"     * Retrieves the Weight object from the profile.","lastModifiedDate":"2021-10-20"},{"lineNumber":239,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":240,"author":{"gitId":"weidak"},"content":"     * @return Weight object","lastModifiedDate":"2021-10-20"},{"lineNumber":241,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":242,"author":{"gitId":"weidak"},"content":"    public Weight getProfileWeight() {","lastModifiedDate":"2021-10-20"},{"lineNumber":243,"author":{"gitId":"weidak"},"content":"        return this.weight;","lastModifiedDate":"2021-10-19"},{"lineNumber":244,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":245,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":246,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":247,"author":{"gitId":"weidak"},"content":"     * Retrieves the Gender object from the profile.","lastModifiedDate":"2021-10-20"},{"lineNumber":248,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":249,"author":{"gitId":"weidak"},"content":"     * @return Gender object","lastModifiedDate":"2021-10-20"},{"lineNumber":250,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":251,"author":{"gitId":"weidak"},"content":"    public Gender getProfileGender() {","lastModifiedDate":"2021-10-20"},{"lineNumber":252,"author":{"gitId":"weidak"},"content":"        return this.gender;","lastModifiedDate":"2021-10-20"},{"lineNumber":253,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":254,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":255,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":256,"author":{"gitId":"weidak"},"content":"     * Retrieves the Age object from the profile.","lastModifiedDate":"2021-10-20"},{"lineNumber":257,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":258,"author":{"gitId":"weidak"},"content":"     * @return Age object","lastModifiedDate":"2021-10-20"},{"lineNumber":259,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":260,"author":{"gitId":"weidak"},"content":"    public Age getProfileAge() {","lastModifiedDate":"2021-10-20"},{"lineNumber":261,"author":{"gitId":"weidak"},"content":"        return this.age;","lastModifiedDate":"2021-10-20"},{"lineNumber":262,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":263,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":264,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":265,"author":{"gitId":"weidak"},"content":"     * Retrieves the CalorieGoal object from the profile.","lastModifiedDate":"2021-10-20"},{"lineNumber":266,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":267,"author":{"gitId":"weidak"},"content":"     * @return CalorieGoal object","lastModifiedDate":"2021-10-20"},{"lineNumber":268,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":269,"author":{"gitId":"weidak"},"content":"    public CalorieGoal getProfileCalorieGoal() {","lastModifiedDate":"2021-10-20"},{"lineNumber":270,"author":{"gitId":"weidak"},"content":"        return this.calorieGoal;","lastModifiedDate":"2021-10-20"},{"lineNumber":271,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":272,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":273,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":274,"author":{"gitId":"weidak"},"content":"     * Retrieves the ActivityFactor object from the profile.","lastModifiedDate":"2021-10-20"},{"lineNumber":275,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":276,"author":{"gitId":"weidak"},"content":"     * @return ActivityFactor object","lastModifiedDate":"2021-10-20"},{"lineNumber":277,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":278,"author":{"gitId":"weidak"},"content":"    public ActivityFactor getProfileActivityFactor() {","lastModifiedDate":"2021-10-20"},{"lineNumber":279,"author":{"gitId":"weidak"},"content":"        return this.activityFactor;","lastModifiedDate":"2021-10-20"},{"lineNumber":280,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":281,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":282,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":283,"author":{"gitId":"weidak"},"content":"     * Retrieves the Basal Metabolic Rate of the user based on their activity factor indicated on the profile.","lastModifiedDate":"2021-10-18"},{"lineNumber":284,"author":{"gitId":"weidak"},"content":"     * A higher activity factor indicates a greater metabolic rate and thus more calories they burn off.","lastModifiedDate":"2021-10-18"},{"lineNumber":285,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-10-18"},{"lineNumber":286,"author":{"gitId":"weidak"},"content":"     * @return BMR value based on their indicated activity factor","lastModifiedDate":"2021-10-18"},{"lineNumber":287,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":288,"author":{"gitId":"weidak"},"content":"    public int getBmr() {","lastModifiedDate":"2021-10-18"},{"lineNumber":289,"author":{"gitId":"weidak"},"content":"        double bmr \u003d getBaseBmrValue();","lastModifiedDate":"2021-10-18"},{"lineNumber":290,"author":{"gitId":"weidak"},"content":"        double factor \u003d 1.0; //Initialise to 1","lastModifiedDate":"2021-10-18"},{"lineNumber":291,"author":{"gitId":"weidak"},"content":"        switch (activityFactor.getActivityFactor()) {","lastModifiedDate":"2021-10-20"},{"lineNumber":292,"author":{"gitId":"weidak"},"content":"        case 1:","lastModifiedDate":"2021-10-18"},{"lineNumber":293,"author":{"gitId":"weidak"},"content":"            factor \u003d FACTOR_SEDENTARY;","lastModifiedDate":"2021-10-18"},{"lineNumber":294,"author":{"gitId":"weidak"},"content":"            break;","lastModifiedDate":"2021-10-18"},{"lineNumber":295,"author":{"gitId":"weidak"},"content":"        case 2:","lastModifiedDate":"2021-10-18"},{"lineNumber":296,"author":{"gitId":"weidak"},"content":"            factor \u003d FACTOR_LIGHT;","lastModifiedDate":"2021-10-18"},{"lineNumber":297,"author":{"gitId":"weidak"},"content":"            break;","lastModifiedDate":"2021-10-18"},{"lineNumber":298,"author":{"gitId":"weidak"},"content":"        case 3:","lastModifiedDate":"2021-10-18"},{"lineNumber":299,"author":{"gitId":"weidak"},"content":"            factor \u003d FACTOR_MODERATE;","lastModifiedDate":"2021-10-18"},{"lineNumber":300,"author":{"gitId":"weidak"},"content":"            break;","lastModifiedDate":"2021-10-18"},{"lineNumber":301,"author":{"gitId":"weidak"},"content":"        case 4:","lastModifiedDate":"2021-10-18"},{"lineNumber":302,"author":{"gitId":"weidak"},"content":"            factor \u003d FACTOR_INTENSE;","lastModifiedDate":"2021-10-18"},{"lineNumber":303,"author":{"gitId":"weidak"},"content":"            break;","lastModifiedDate":"2021-10-18"},{"lineNumber":304,"author":{"gitId":"weidak"},"content":"        case 5:","lastModifiedDate":"2021-10-18"},{"lineNumber":305,"author":{"gitId":"weidak"},"content":"            factor \u003d FACTOR_EXTREME;","lastModifiedDate":"2021-10-18"},{"lineNumber":306,"author":{"gitId":"weidak"},"content":"            break;","lastModifiedDate":"2021-10-18"},{"lineNumber":307,"author":{"gitId":"weidak"},"content":"        default:","lastModifiedDate":"2021-10-18"},{"lineNumber":308,"author":{"gitId":"weidak"},"content":"            break;","lastModifiedDate":"2021-10-18"},{"lineNumber":309,"author":{"gitId":"weidak"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":310,"author":{"gitId":"weidak"},"content":"        return (int) Math.round(bmr * factor);","lastModifiedDate":"2021-10-18"},{"lineNumber":311,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":312,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":313,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":314,"author":{"gitId":"weidak"},"content":"     * Calculates the BMI based on the profile\u0027s characteristics.","lastModifiedDate":"2021-10-18"},{"lineNumber":315,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-10-18"},{"lineNumber":316,"author":{"gitId":"weidak"},"content":"     * @return The calculated BMI of the profile\u0027s height and weight","lastModifiedDate":"2021-10-18"},{"lineNumber":317,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":318,"author":{"gitId":"weidak"},"content":"    public double calculateBmi() {","lastModifiedDate":"2021-10-20"},{"lineNumber":319,"author":{"gitId":"weidak"},"content":"        return computeBmi(height.getHeight(), weight.getWeight());","lastModifiedDate":"2021-10-20"},{"lineNumber":320,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":321,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":322,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":323,"author":{"gitId":"weidak"},"content":"     * Manually calculates the BMI.","lastModifiedDate":"2021-10-09"},{"lineNumber":324,"author":{"gitId":"weidak"},"content":"     * Used when the user input values that is not be stored in his/her profile.","lastModifiedDate":"2021-10-09"},{"lineNumber":325,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-10-09"},{"lineNumber":326,"author":{"gitId":"weidak"},"content":"     * @param height Value of manual input of height","lastModifiedDate":"2021-10-09"},{"lineNumber":327,"author":{"gitId":"weidak"},"content":"     * @param weight Value of manual input of weight","lastModifiedDate":"2021-10-09"},{"lineNumber":328,"author":{"gitId":"weidak"},"content":"     * @return The calculated BMI of the manual inputs","lastModifiedDate":"2021-10-09"},{"lineNumber":329,"author":{"gitId":"weidak"},"content":"     * @throws InvalidCharacteristicException When the user inputs negative values for either height or weight","lastModifiedDate":"2021-10-09"},{"lineNumber":330,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":331,"author":{"gitId":"weidak"},"content":"    public static double calculateBmi(double height, double weight) throws InvalidCharacteristicException {","lastModifiedDate":"2021-10-09"},{"lineNumber":332,"author":{"gitId":"weidak"},"content":"        checkHeightValidity(height);","lastModifiedDate":"2021-10-20"},{"lineNumber":333,"author":{"gitId":"weidak"},"content":"        checkWeightValidity(weight);","lastModifiedDate":"2021-10-20"},{"lineNumber":334,"author":{"gitId":"weidak"},"content":"        assert weight \u003e 0 : \"Weight cannot be non-positive.\";","lastModifiedDate":"2021-10-19"},{"lineNumber":335,"author":{"gitId":"weidak"},"content":"        assert height \u003e 0 : \"Height cannot be non-positive.\";","lastModifiedDate":"2021-10-19"},{"lineNumber":336,"author":{"gitId":"weidak"},"content":"        return computeBmi(height, weight);","lastModifiedDate":"2021-10-09"},{"lineNumber":337,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":338,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":339,"author":{"gitId":"weidak"},"content":"    private static double computeBmi(double height, double weight) {","lastModifiedDate":"2021-10-09"},{"lineNumber":340,"author":{"gitId":"weidak"},"content":"        double heightInM \u003d height / 100.0;","lastModifiedDate":"2021-10-09"},{"lineNumber":341,"author":{"gitId":"weidak"},"content":"        return Math.round((weight / (Math.pow(heightInM, 2))) * 10) / 10.0;","lastModifiedDate":"2021-10-09"},{"lineNumber":342,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":343,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":344,"author":{"gitId":"weidak"},"content":"    public static void checkWeightValidity(double weight) throws InvalidCharacteristicException {","lastModifiedDate":"2021-10-20"},{"lineNumber":345,"author":{"gitId":"weidak"},"content":"        if (weight \u003c\u003d NON_POSITIVE_LIMIT) {","lastModifiedDate":"2021-10-20"},{"lineNumber":346,"author":{"gitId":"weidak"},"content":"            throw new InvalidCharacteristicException(ERROR_WEIGHT);","lastModifiedDate":"2021-10-20"},{"lineNumber":347,"author":{"gitId":"weidak"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":348,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":349,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":350,"author":{"gitId":"weidak"},"content":"    public static void checkHeightValidity(double height) throws InvalidCharacteristicException {","lastModifiedDate":"2021-10-20"},{"lineNumber":351,"author":{"gitId":"weidak"},"content":"        if (height \u003c\u003d NON_POSITIVE_LIMIT) {","lastModifiedDate":"2021-10-20"},{"lineNumber":352,"author":{"gitId":"weidak"},"content":"            throw new InvalidCharacteristicException(ERROR_HEIGHT);","lastModifiedDate":"2021-10-20"},{"lineNumber":353,"author":{"gitId":"weidak"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":354,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":355,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":356,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":357,"author":{"gitId":"weidak"},"content":"     * Retrieves the indication with regard to the value of their BMI.","lastModifiedDate":"2021-10-09"},{"lineNumber":358,"author":{"gitId":"weidak"},"content":"     * Should not have any exceptions thrown since the other functions handled invalid cases.","lastModifiedDate":"2021-10-09"},{"lineNumber":359,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-10-09"},{"lineNumber":360,"author":{"gitId":"weidak"},"content":"     * @param bmi The bmi of the user","lastModifiedDate":"2021-10-09"},{"lineNumber":361,"author":{"gitId":"weidak"},"content":"     * @return The status of his current body","lastModifiedDate":"2021-10-09"},{"lineNumber":362,"author":{"gitId":"weidak"},"content":"     **/","lastModifiedDate":"2021-10-09"},{"lineNumber":363,"author":{"gitId":"weidak"},"content":"    public static String retrieveBmiStatus(double bmi) {","lastModifiedDate":"2021-10-09"},{"lineNumber":364,"author":{"gitId":"weidak"},"content":"        String result;","lastModifiedDate":"2021-10-09"},{"lineNumber":365,"author":{"gitId":"weidak"},"content":"        assert bmi \u003e 0 : \"BMI cannot be non-positive.\";","lastModifiedDate":"2021-10-13"},{"lineNumber":366,"author":{"gitId":"weidak"},"content":"        if (bmi \u003c BMI_LIMIT_UNDERWEIGHT) {","lastModifiedDate":"2021-10-18"},{"lineNumber":367,"author":{"gitId":"weidak"},"content":"            result \u003d BMI_STATUS_UNDERWEIGHT;","lastModifiedDate":"2021-10-11"},{"lineNumber":368,"author":{"gitId":"weidak"},"content":"        } else if (bmi \u003c\u003d BMI_LIMIT_HEALTHY) {","lastModifiedDate":"2021-10-18"},{"lineNumber":369,"author":{"gitId":"weidak"},"content":"            result \u003d BMI_STATUS_HEALTHY;","lastModifiedDate":"2021-10-11"},{"lineNumber":370,"author":{"gitId":"weidak"},"content":"        } else if (bmi \u003c\u003d BMI_LIMIT_OVERWEIGHT) {","lastModifiedDate":"2021-10-18"},{"lineNumber":371,"author":{"gitId":"weidak"},"content":"            result \u003d BMI_STATUS_OVERWEIGHT;","lastModifiedDate":"2021-10-11"},{"lineNumber":372,"author":{"gitId":"weidak"},"content":"        } else {","lastModifiedDate":"2021-10-09"},{"lineNumber":373,"author":{"gitId":"weidak"},"content":"            result \u003d BMI_STATUS_OBESE;","lastModifiedDate":"2021-10-11"},{"lineNumber":374,"author":{"gitId":"weidak"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":375,"author":{"gitId":"weidak"},"content":"        return result;","lastModifiedDate":"2021-10-09"},{"lineNumber":376,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":377,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":378,"author":{"gitId":"weidak"},"content":"    private double getBaseBmrValue() {","lastModifiedDate":"2021-10-20"},{"lineNumber":379,"author":{"gitId":"weidak"},"content":"        double bmr;","lastModifiedDate":"2021-10-20"},{"lineNumber":380,"author":{"gitId":"weidak"},"content":"        if (gender.getGender() \u003d\u003d GENDER_M) {","lastModifiedDate":"2021-10-20"},{"lineNumber":381,"author":{"gitId":"weidak"},"content":"            bmr \u003d GENDER_M_WEIGHT_FACTOR * weight.getWeight()","lastModifiedDate":"2021-10-20"},{"lineNumber":382,"author":{"gitId":"weidak"},"content":"                    + GENDER_M_HEIGHT_FACTOR * height.getHeight()","lastModifiedDate":"2021-10-20"},{"lineNumber":383,"author":{"gitId":"weidak"},"content":"                    - GENDER_M_AGE_FACTOR * age.getAge()","lastModifiedDate":"2021-10-20"},{"lineNumber":384,"author":{"gitId":"weidak"},"content":"                    + GENDER_M_CONSTANT;","lastModifiedDate":"2021-10-20"},{"lineNumber":385,"author":{"gitId":"weidak"},"content":"        } else {","lastModifiedDate":"2021-10-20"},{"lineNumber":386,"author":{"gitId":"weidak"},"content":"            bmr \u003d GENDER_F_WEIGHT_FACTOR * weight.getWeight()","lastModifiedDate":"2021-10-20"},{"lineNumber":387,"author":{"gitId":"weidak"},"content":"                    + GENDER_F_HEIGHT_FACTOR * height.getHeight()","lastModifiedDate":"2021-10-20"},{"lineNumber":388,"author":{"gitId":"weidak"},"content":"                    - GENDER_F_AGE_FACTOR * age.getAge()","lastModifiedDate":"2021-10-20"},{"lineNumber":389,"author":{"gitId":"weidak"},"content":"                    + GENDER_F_CONSTANT;","lastModifiedDate":"2021-10-20"},{"lineNumber":390,"author":{"gitId":"weidak"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":391,"author":{"gitId":"weidak"},"content":"        return bmr;","lastModifiedDate":"2021-10-20"},{"lineNumber":392,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":393,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":394,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":395,"author":{"gitId":"weidak"},"content":"     * Calculates the difference between food calories and exercise calories, factoring in metabolic rate.","lastModifiedDate":"2021-10-18"},{"lineNumber":396,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":397,"author":{"gitId":"weidak"},"content":"     * @param foodCalories     Total intake consumption","lastModifiedDate":"2021-10-13"},{"lineNumber":398,"author":{"gitId":"weidak"},"content":"     * @param exerciseCalories Total output exerted","lastModifiedDate":"2021-10-13"},{"lineNumber":399,"author":{"gitId":"weidak"},"content":"     * @return The net calories of food - (exercise + BMR)","lastModifiedDate":"2021-10-19"},{"lineNumber":400,"author":{"gitId":"weidak"},"content":"     * @throws InvalidCharacteristicException Only if activity factor has been misappropriated in .txt file","lastModifiedDate":"2021-10-18"},{"lineNumber":401,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":402,"author":{"gitId":"weidak"},"content":"    public int calculateNetCalories(int foodCalories, int exerciseCalories) throws InvalidCharacteristicException {","lastModifiedDate":"2021-10-18"},{"lineNumber":403,"author":{"gitId":"weidak"},"content":"        return foodCalories - exerciseCalories - getBmr();","lastModifiedDate":"2021-10-18"},{"lineNumber":404,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":405,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":406,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":407,"author":{"gitId":"weidak"},"content":"     * Converts the file into a string that is used for storage.","lastModifiedDate":"2021-10-13"},{"lineNumber":408,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":409,"author":{"gitId":"weidak"},"content":"     * @return String that is used for storage.","lastModifiedDate":"2021-10-13"},{"lineNumber":410,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":411,"author":{"gitId":"weidak"},"content":"    public String toFileTextString() {","lastModifiedDate":"2021-10-12"},{"lineNumber":412,"author":{"gitId":"weidak"},"content":"        return name.getName() + FILE_TEXT_DELIMITER + height.getHeight() + FILE_TEXT_DELIMITER","lastModifiedDate":"2021-10-20"},{"lineNumber":413,"author":{"gitId":"weidak"},"content":"                + weight.getWeight() + FILE_TEXT_DELIMITER + gender.getGender() + FILE_TEXT_DELIMITER","lastModifiedDate":"2021-10-20"},{"lineNumber":414,"author":{"gitId":"weidak"},"content":"                + age.getAge() + FILE_TEXT_DELIMITER + calorieGoal.getCalorieGoal() + FILE_TEXT_DELIMITER","lastModifiedDate":"2021-10-20"},{"lineNumber":415,"author":{"gitId":"weidak"},"content":"                + activityFactor.getActivityFactor();","lastModifiedDate":"2021-10-20"},{"lineNumber":416,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":417,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":418,"author":{"gitId":"tttyyzzz"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":419,"author":{"gitId":"tttyyzzz"},"content":"     * Check if all attributes of profile are valid.","lastModifiedDate":"2021-10-16"},{"lineNumber":420,"author":{"gitId":"tttyyzzz"},"content":"     *","lastModifiedDate":"2021-10-16"},{"lineNumber":421,"author":{"gitId":"tttyyzzz"},"content":"     * @return false if at least one of the profile attributes are invalid.","lastModifiedDate":"2021-10-16"},{"lineNumber":422,"author":{"gitId":"tttyyzzz"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":423,"author":{"gitId":"tttyyzzz"},"content":"    public boolean checkProfileComplete() {","lastModifiedDate":"2021-10-20"},{"lineNumber":424,"author":{"gitId":"tttyyzzz"},"content":"        return getProfileName().isValid() \u0026\u0026 getProfileHeight().isValid() \u0026\u0026 getProfileWeight().isValid()","lastModifiedDate":"2021-10-20"},{"lineNumber":425,"author":{"gitId":"tttyyzzz"},"content":"                \u0026\u0026 getProfileGender().isValid() \u0026\u0026 getProfileAge().isValid() \u0026\u0026 getProfileActivityFactor().isValid()","lastModifiedDate":"2021-10-28"},{"lineNumber":426,"author":{"gitId":"tttyyzzz"},"content":"                \u0026\u0026 getProfileCalorieGoal().isValid();","lastModifiedDate":"2021-10-28"},{"lineNumber":427,"author":{"gitId":"tttyyzzz"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":428,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":429,"author":{"gitId":"tttyyzzz"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":430,"author":{"gitId":"tttyyzzz"},"content":"     * Check if any of profile attributes is valid.","lastModifiedDate":"2021-10-20"},{"lineNumber":431,"author":{"gitId":"tttyyzzz"},"content":"     * If all profile attributes are incorrect, it will be deemed as profile not present.","lastModifiedDate":"2021-10-20"},{"lineNumber":432,"author":{"gitId":"tttyyzzz"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":433,"author":{"gitId":"tttyyzzz"},"content":"     * @return true if at least one of the profile attributes is valid.","lastModifiedDate":"2021-10-28"},{"lineNumber":434,"author":{"gitId":"tttyyzzz"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":435,"author":{"gitId":"tttyyzzz"},"content":"    public boolean checkProfilePresent() {","lastModifiedDate":"2021-10-20"},{"lineNumber":436,"author":{"gitId":"tttyyzzz"},"content":"        return getProfileName().isValid() || getProfileHeight().isValid() || getProfileWeight().isValid()","lastModifiedDate":"2021-10-20"},{"lineNumber":437,"author":{"gitId":"tttyyzzz"},"content":"                || getProfileGender().isValid() || getProfileAge().isValid() || getProfileActivityFactor().isValid();","lastModifiedDate":"2021-10-20"},{"lineNumber":438,"author":{"gitId":"tttyyzzz"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":439,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":440,"author":{"gitId":"tlyi"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":441,"author":{"gitId":"tlyi"},"content":"     * Converts the Profile to a String for printing purposes.","lastModifiedDate":"2021-10-21"},{"lineNumber":442,"author":{"gitId":"tlyi"},"content":"     *","lastModifiedDate":"2021-10-21"},{"lineNumber":443,"author":{"gitId":"tlyi"},"content":"     * @return Formatted String with all Profile attributes.","lastModifiedDate":"2021-10-21"},{"lineNumber":444,"author":{"gitId":"tlyi"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":445,"author":{"gitId":"tlyi"},"content":"    public String convertToString() {","lastModifiedDate":"2021-10-21"},{"lineNumber":446,"author":{"gitId":"tlyi"},"content":"        return String.format(MESSAGE_PROFILE,","lastModifiedDate":"2021-10-21"},{"lineNumber":447,"author":{"gitId":"tlyi"},"content":"                this.name.getName(),","lastModifiedDate":"2021-10-21"},{"lineNumber":448,"author":{"gitId":"tlyi"},"content":"                this.height.getHeight(),","lastModifiedDate":"2021-10-21"},{"lineNumber":449,"author":{"gitId":"tlyi"},"content":"                this.weight.getWeight(),","lastModifiedDate":"2021-10-21"},{"lineNumber":450,"author":{"gitId":"tlyi"},"content":"                this.gender.getGender(),","lastModifiedDate":"2021-10-21"},{"lineNumber":451,"author":{"gitId":"tlyi"},"content":"                this.age.getAge(),","lastModifiedDate":"2021-10-21"},{"lineNumber":452,"author":{"gitId":"tlyi"},"content":"                this.calorieGoal.getCalorieGoal(),","lastModifiedDate":"2021-10-21"},{"lineNumber":453,"author":{"gitId":"tlyi"},"content":"                this.activityFactor.getActivityFactor());","lastModifiedDate":"2021-10-21"},{"lineNumber":454,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":455,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":456,"author":{"gitId":"weidak"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"weidak":396,"tttyyzzz":24,"tlyi":36}},{"path":"src/main/java/seedu/duke/data/profile/attributes/ActivityFactor.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.data.profile.attributes;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"weidak"},"content":"/**","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"weidak"},"content":" * Activity Factor attribute of profile.","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"weidak"},"content":" */","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"weidak"},"content":"public class ActivityFactor implements Verifiable {","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"weidak"},"content":"    public static final int LIMIT_LOWER_ACTIVITY_FACTOR \u003d 1;","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"weidak"},"content":"    public static final int LIMIT_UPPER_ACTIVITY_LEVEL \u003d 5;","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"weidak"},"content":"    protected int activityFactor;","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"weidak"},"content":"    public ActivityFactor() {","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"weidak"},"content":"     * Constructs an activity factor object.","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"weidak"},"content":"     * @param activityFactor activity factor input by user","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"weidak"},"content":"    public ActivityFactor(int activityFactor) {","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"weidak"},"content":"        setActivityFactor(activityFactor);","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"weidak"},"content":"     * Retrieves the activity factor of ActivityFactor object.","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"weidak"},"content":"     * @return the activity factor of ActivityFactor object","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"weidak"},"content":"    public int getActivityFactor() {","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"weidak"},"content":"        return activityFactor;","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"weidak"},"content":"     * Sets the activity factor of ActivityFactor object.","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"weidak"},"content":"     * @param activityFactor activity factor input by user","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"weidak"},"content":"    public void setActivityFactor(int activityFactor) {","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"weidak"},"content":"        this.activityFactor \u003d activityFactor;","lastModifiedDate":"2021-10-20"},{"lineNumber":42,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":43,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":44,"author":{"gitId":"weidak"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":45,"author":{"gitId":"weidak"},"content":"    public boolean isValid() {","lastModifiedDate":"2021-10-20"},{"lineNumber":46,"author":{"gitId":"weidak"},"content":"        if (activityFactor \u003c 1 || activityFactor \u003e 5) {","lastModifiedDate":"2021-10-20"},{"lineNumber":47,"author":{"gitId":"weidak"},"content":"            return false;","lastModifiedDate":"2021-10-20"},{"lineNumber":48,"author":{"gitId":"weidak"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":49,"author":{"gitId":"weidak"},"content":"        return true;","lastModifiedDate":"2021-10-20"},{"lineNumber":50,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":51,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":52,"author":{"gitId":"weidak"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"weidak":51,"tlyi":1}},{"path":"src/main/java/seedu/duke/data/profile/attributes/Age.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.data.profile.attributes;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"weidak"},"content":"/**","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"weidak"},"content":" * Age attribute of profile.","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"weidak"},"content":" */","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"weidak"},"content":"public class Age implements Verifiable {","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"weidak"},"content":"    public static final int NON_POSITIVE_LIMIT \u003d 0;","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"weidak"},"content":"    protected int age;","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"weidak"},"content":"    public Age() {","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"weidak"},"content":"     * Constructs an age object.","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"weidak"},"content":"     * @param age age input by user","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"weidak"},"content":"    public Age(int age) {","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"weidak"},"content":"        setAge(age);","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"weidak"},"content":"     * Retrieves age of Age object.","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"weidak"},"content":"     * @return age of Age object","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"weidak"},"content":"    public int getAge() {","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"weidak"},"content":"        return age;","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"weidak"},"content":"     * Sets the age of Age object.","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"weidak"},"content":"     * @param age age input by user","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"weidak"},"content":"    public void setAge(int age) {","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"weidak"},"content":"        this.age \u003d age;","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":42,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":43,"author":{"gitId":"weidak"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":44,"author":{"gitId":"weidak"},"content":"    public boolean isValid() {","lastModifiedDate":"2021-10-20"},{"lineNumber":45,"author":{"gitId":"weidak"},"content":"        if (age \u003c\u003d NON_POSITIVE_LIMIT) {","lastModifiedDate":"2021-10-20"},{"lineNumber":46,"author":{"gitId":"weidak"},"content":"            return false;","lastModifiedDate":"2021-10-20"},{"lineNumber":47,"author":{"gitId":"weidak"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":48,"author":{"gitId":"weidak"},"content":"        return true;","lastModifiedDate":"2021-10-20"},{"lineNumber":49,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":50,"author":{"gitId":"weidak"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"weidak":49,"tlyi":1}},{"path":"src/main/java/seedu/duke/data/profile/attributes/CalorieGoal.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.data.profile.attributes;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"weidak"},"content":"/**","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"weidak"},"content":" * Calorie Goal attribute of profile.","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"weidak"},"content":" */","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"weidak"},"content":"public class CalorieGoal implements Verifiable {","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"weidak"},"content":"    private static final String LS \u003d System.lineSeparator();","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"weidak"},"content":"    public static final int LIMIT_UPPER_CALORIES \u003d 2500;","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"weidak"},"content":"    public static final int LIMIT_LOWER_CALORIES \u003d -LIMIT_UPPER_CALORIES;","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"weidak"},"content":"    protected int calorieGoal;","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"weidak"},"content":"    public CalorieGoal() {","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"weidak"},"content":"     * Constructs a calorie goal object.","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"weidak"},"content":"     * @param calorieGoal goal input by user","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"weidak"},"content":"    public CalorieGoal(int calorieGoal) {","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"weidak"},"content":"        setCalorieGoal(calorieGoal);","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"weidak"},"content":"     * Retrieves the calorie goal of CalorieGoal object.","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"weidak"},"content":"     * @return the calorie goal stored in CalorieGoal object","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"weidak"},"content":"    public int getCalorieGoal() {","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"weidak"},"content":"        return calorieGoal;","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"weidak"},"content":"     * Sets the calorie goal for CalorieGoal object.","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"weidak"},"content":"     * @param calorieGoal calorie goal input by user","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":42,"author":{"gitId":"weidak"},"content":"    public void setCalorieGoal(int calorieGoal) {","lastModifiedDate":"2021-10-20"},{"lineNumber":43,"author":{"gitId":"weidak"},"content":"        this.calorieGoal \u003d calorieGoal;","lastModifiedDate":"2021-10-20"},{"lineNumber":44,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":45,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":46,"author":{"gitId":"weidak"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":47,"author":{"gitId":"weidak"},"content":"    public boolean isValid() {","lastModifiedDate":"2021-10-20"},{"lineNumber":48,"author":{"gitId":"weidak"},"content":"        if (calorieGoal \u003c LIMIT_LOWER_CALORIES || calorieGoal \u003e LIMIT_UPPER_CALORIES) {","lastModifiedDate":"2021-10-20"},{"lineNumber":49,"author":{"gitId":"weidak"},"content":"            return false;","lastModifiedDate":"2021-10-20"},{"lineNumber":50,"author":{"gitId":"weidak"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":51,"author":{"gitId":"weidak"},"content":"        return true;","lastModifiedDate":"2021-10-20"},{"lineNumber":52,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":53,"author":{"gitId":"weidak"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"weidak":52,"tlyi":1}},{"path":"src/main/java/seedu/duke/data/profile/attributes/Gender.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.data.profile.attributes;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"weidak"},"content":"/**","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"weidak"},"content":" * Gender attribute of profile.","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"weidak"},"content":" */","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"weidak"},"content":"public class Gender implements Verifiable {","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"weidak"},"content":"    private static final char GENDER_M \u003d \u0027M\u0027;","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"weidak"},"content":"    private static final char GENDER_F \u003d \u0027F\u0027;","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"weidak"},"content":"    protected char gender;","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"weidak"},"content":"    public Gender() {","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"weidak"},"content":"     * Constructs a gender object.","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"weidak"},"content":"     * @param gender gender input by user.","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"weidak"},"content":"    public Gender(char gender) {","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"tlyi"},"content":"        this.gender \u003d Character.toUpperCase(gender);","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"weidak"},"content":"     * Retrieves the gender of the Gender object.","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"weidak"},"content":"     * @return the gender of the gender object.","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"weidak"},"content":"    public char getGender() {","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"weidak"},"content":"        return gender;","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"weidak"},"content":"     * Sets the gender of the Gender object.","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"weidak"},"content":"     * @param gender gender input by user","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"weidak"},"content":"    public void setGender(char gender) {","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"tlyi"},"content":"        this.gender \u003d Character.toUpperCase(gender);","lastModifiedDate":"2021-10-24"},{"lineNumber":42,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":43,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":44,"author":{"gitId":"weidak"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":45,"author":{"gitId":"weidak"},"content":"    public boolean isValid() {","lastModifiedDate":"2021-10-20"},{"lineNumber":46,"author":{"gitId":"weidak"},"content":"        if (!(gender \u003d\u003d GENDER_F || gender \u003d\u003d GENDER_M)) {","lastModifiedDate":"2021-10-20"},{"lineNumber":47,"author":{"gitId":"weidak"},"content":"            return false;","lastModifiedDate":"2021-10-20"},{"lineNumber":48,"author":{"gitId":"weidak"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":49,"author":{"gitId":"weidak"},"content":"        return true;","lastModifiedDate":"2021-10-20"},{"lineNumber":50,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":51,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":52,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":53,"author":{"gitId":"weidak"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"weidak":50,"tlyi":3}},{"path":"src/main/java/seedu/duke/data/profile/attributes/Height.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.data.profile.attributes;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"weidak"},"content":"/**","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"weidak"},"content":" * Height attribute of profile.","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"weidak"},"content":" */","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"weidak"},"content":"public class Height implements Verifiable {","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"weidak"},"content":"    public static final int NON_POSITIVE_LIMIT \u003d 0;","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"weidak"},"content":"    protected double height;","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"weidak"},"content":"    public Height() {","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"weidak"},"content":"     * Constructs a height object.","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"weidak"},"content":"     * @param height height input by user.","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"weidak"},"content":"    public Height(double height) {","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"weidak"},"content":"        setHeight(height);","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"weidak"},"content":"     * Retrieves the height of Height object.","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"weidak"},"content":"     * @return the height of Height object","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"weidak"},"content":"    public double getHeight() {","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"weidak"},"content":"        return height;","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"weidak"},"content":"     * Sets the height for Height object.","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"weidak"},"content":"     * @param height height input by user","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"weidak"},"content":"    public void setHeight(double height) {","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"weidak"},"content":"        this.height \u003d height;","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":42,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":43,"author":{"gitId":"weidak"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":44,"author":{"gitId":"weidak"},"content":"    public boolean isValid() {","lastModifiedDate":"2021-10-20"},{"lineNumber":45,"author":{"gitId":"weidak"},"content":"        if (height \u003c\u003d NON_POSITIVE_LIMIT) {","lastModifiedDate":"2021-10-20"},{"lineNumber":46,"author":{"gitId":"weidak"},"content":"            return false;","lastModifiedDate":"2021-10-20"},{"lineNumber":47,"author":{"gitId":"weidak"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":48,"author":{"gitId":"weidak"},"content":"        return true;","lastModifiedDate":"2021-10-20"},{"lineNumber":49,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":50,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":51,"author":{"gitId":"weidak"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"weidak":50,"tlyi":1}},{"path":"src/main/java/seedu/duke/data/profile/attributes/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.data.profile.attributes;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"weidak"},"content":"/**","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"weidak"},"content":" * Name attribute of profile.","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"weidak"},"content":" */","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"weidak"},"content":"public class Name implements Verifiable {","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"weidak"},"content":"    protected String name;","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"tttyyzzz"},"content":"    private static final String EMPTY_STRING \u003d \"\";","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"weidak"},"content":"    public Name() {","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"weidak"},"content":"     * Constructs a name object.","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"weidak"},"content":"     * @param name name input of user","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"weidak"},"content":"    public Name(String name) {","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"weidak"},"content":"        setName(name);","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"weidak"},"content":"     * Retrieves the name from Name object.","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"weidak"},"content":"     * @return name of Name object","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"weidak"},"content":"    public String getName() {","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"weidak"},"content":"        return name;","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"weidak"},"content":"     * Sets the name for the Name Object.","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"weidak"},"content":"     * @param name name input by the user","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"weidak"},"content":"    public void setName(String name) {","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"tttyyzzz"},"content":"        this.name \u003d name.trim();","lastModifiedDate":"2021-10-27"},{"lineNumber":40,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":42,"author":{"gitId":"weidak"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":43,"author":{"gitId":"weidak"},"content":"    public boolean isValid() {","lastModifiedDate":"2021-10-20"},{"lineNumber":44,"author":{"gitId":"tttyyzzz"},"content":"        if (name \u003d\u003d null || name.equals(EMPTY_STRING)) {","lastModifiedDate":"2021-10-20"},{"lineNumber":45,"author":{"gitId":"tttyyzzz"},"content":"            return false;","lastModifiedDate":"2021-10-20"},{"lineNumber":46,"author":{"gitId":"tttyyzzz"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":47,"author":{"gitId":"weidak"},"content":"        for (int i \u003d 0; i \u003c name.length(); i++) {","lastModifiedDate":"2021-10-20"},{"lineNumber":48,"author":{"gitId":"weidak"},"content":"            if (name.charAt(i) \u003d\u003d \u0027|\u0027 || name.charAt(i) \u003d\u003d \u0027/\u0027) {","lastModifiedDate":"2021-10-20"},{"lineNumber":49,"author":{"gitId":"weidak"},"content":"                return false;","lastModifiedDate":"2021-10-20"},{"lineNumber":50,"author":{"gitId":"weidak"},"content":"            }","lastModifiedDate":"2021-10-20"},{"lineNumber":51,"author":{"gitId":"weidak"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":52,"author":{"gitId":"weidak"},"content":"        return true;","lastModifiedDate":"2021-10-20"},{"lineNumber":53,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":54,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":55,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":56,"author":{"gitId":"weidak"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"weidak":50,"tttyyzzz":5,"tlyi":1}},{"path":"src/main/java/seedu/duke/data/profile/attributes/Verifiable.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.data.profile.attributes;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"weidak"},"content":"/**","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"weidak"},"content":" * Interface that implements verifiability to various objects.","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"weidak"},"content":" */","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"weidak"},"content":"interface Verifiable {","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"weidak"},"content":"     * Implements a simple check that verifies if the attribute tied to Verifiable is valid.","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"weidak"},"content":"     * @return True if valid, false if invalid as specified by each attribute","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"weidak"},"content":"    boolean isValid();","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"weidak"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"weidak":12,"tlyi":1}},{"path":"src/main/java/seedu/duke/data/profile/attributes/Weight.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.data.profile.attributes;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"weidak"},"content":"/**","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"weidak"},"content":" * Weight attribute of profile.","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"weidak"},"content":" */","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"weidak"},"content":"public class Weight implements Verifiable {","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"weidak"},"content":"    public static final int NON_POSITIVE_LIMIT \u003d 0;","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"weidak"},"content":"    protected double weight;","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"weidak"},"content":"    public Weight() {","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"weidak"},"content":"     * Constructs a weight object.","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"weidak"},"content":"     * @param weight weight input by user","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"weidak"},"content":"    public Weight(double weight) {","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"weidak"},"content":"        setWeight(weight);","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"weidak"},"content":"     * Retrieves the weight from the Weight object.","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"weidak"},"content":"     * @return the weight of Weight object","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"weidak"},"content":"    public double getWeight() {","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"weidak"},"content":"        return weight;","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"weidak"},"content":"     * Sets the weight of the Weight object.","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"weidak"},"content":"     * @param weight weight input by user","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"weidak"},"content":"    public void setWeight(double weight) {","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"weidak"},"content":"        this.weight \u003d weight;","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":42,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":43,"author":{"gitId":"weidak"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":44,"author":{"gitId":"weidak"},"content":"    public boolean isValid() {","lastModifiedDate":"2021-10-20"},{"lineNumber":45,"author":{"gitId":"weidak"},"content":"        if (weight \u003c\u003d NON_POSITIVE_LIMIT) {","lastModifiedDate":"2021-10-20"},{"lineNumber":46,"author":{"gitId":"weidak"},"content":"            return false;","lastModifiedDate":"2021-10-20"},{"lineNumber":47,"author":{"gitId":"weidak"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":48,"author":{"gitId":"weidak"},"content":"        return true;","lastModifiedDate":"2021-10-20"},{"lineNumber":49,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":50,"author":{"gitId":"weidak"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"weidak":49,"tlyi":1}},{"path":"src/main/java/seedu/duke/data/profile/exceptions/InvalidCharacteristicException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.data.profile.exceptions;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"weidak"},"content":"/**","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"weidak"},"content":" * Exception that is thrown when the input human characteristics are invalid.","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"weidak"},"content":" */","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"weidak"},"content":"public class InvalidCharacteristicException extends Exception {","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"weidak"},"content":"    public InvalidCharacteristicException(String message) {","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"weidak"},"content":"        super(message);","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"weidak"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"weidak":10,"tlyi":1}},{"path":"src/main/java/seedu/duke/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.logic;","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":3,"author":{"gitId":"weidak"},"content":"import seedu.duke.data.DataManager;","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"tlyi"},"content":"import seedu.duke.logic.commands.ByeCommand;","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"tlyi"},"content":"import seedu.duke.logic.commands.Command;","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"tlyi"},"content":"import seedu.duke.logic.commands.CommandResult;","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"tlyi"},"content":"import seedu.duke.logic.parser.ParserManager;","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"tlyi"},"content":"import seedu.duke.storage.StorageManager;","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"tlyi"},"content":"import seedu.duke.storage.exceptions.UnableToWriteFileException;","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"tlyi"},"content":"//@@author tlyi","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"tlyi"},"content":"/**","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"tlyi"},"content":" * Handles the parsing and execution of all commands.","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"tlyi"},"content":" */","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"tlyi"},"content":"public class LogicManager {","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"tlyi"},"content":"    final ParserManager parserManager;","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"tlyi"},"content":"    final StorageManager storageManager;","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"tlyi"},"content":"    final DataManager dataManager;","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"tlyi"},"content":"    public LogicManager(StorageManager storageManager, DataManager dataManager) {","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"tlyi"},"content":"        this.parserManager \u003d new ParserManager();","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"tlyi"},"content":"        this.storageManager \u003d storageManager;","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"tlyi"},"content":"        this.dataManager \u003d dataManager;","lastModifiedDate":"2021-10-27"},{"lineNumber":25,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"tlyi"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":28,"author":{"gitId":"tlyi"},"content":"     * Executes the given Command and (to be implemented) calls for storage operation if required.","lastModifiedDate":"2021-10-27"},{"lineNumber":29,"author":{"gitId":"tlyi"},"content":"     *","lastModifiedDate":"2021-10-27"},{"lineNumber":30,"author":{"gitId":"tlyi"},"content":"     * @param userInput Raw user input","lastModifiedDate":"2021-10-27"},{"lineNumber":31,"author":{"gitId":"tlyi"},"content":"     * @return CommandResult representing result of execution of the command","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"tlyi"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":33,"author":{"gitId":"tlyi"},"content":"    public CommandResult execute(String userInput) {","lastModifiedDate":"2021-10-27"},{"lineNumber":34,"author":{"gitId":"tlyi"},"content":"        final Command command \u003d parserManager.parseCommand(userInput);","lastModifiedDate":"2021-10-27"},{"lineNumber":35,"author":{"gitId":"tlyi"},"content":"        command.setData(dataManager);","lastModifiedDate":"2021-10-27"},{"lineNumber":36,"author":{"gitId":"tlyi"},"content":"        final CommandResult result \u003d command.execute();","lastModifiedDate":"2021-10-27"},{"lineNumber":37,"author":{"gitId":"tlyi"},"content":"        try {","lastModifiedDate":"2021-10-27"},{"lineNumber":38,"author":{"gitId":"tlyi"},"content":"            if (ByeCommand.isBye(command)) {","lastModifiedDate":"2021-10-27"},{"lineNumber":39,"author":{"gitId":"tlyi"},"content":"                storageManager.saveAll(dataManager);","lastModifiedDate":"2021-10-27"},{"lineNumber":40,"author":{"gitId":"tlyi"},"content":"            }","lastModifiedDate":"2021-10-27"},{"lineNumber":41,"author":{"gitId":"tlyi"},"content":"            if (Command.requiresProfileStorageRewrite(command)) {","lastModifiedDate":"2021-10-27"},{"lineNumber":42,"author":{"gitId":"tlyi"},"content":"                storageManager.saveProfile(dataManager.getProfile());","lastModifiedDate":"2021-10-27"},{"lineNumber":43,"author":{"gitId":"tlyi"},"content":"            }","lastModifiedDate":"2021-10-27"},{"lineNumber":44,"author":{"gitId":"tlyi"},"content":"            if (Command.requiresExerciseListStorageRewrite(command)) {","lastModifiedDate":"2021-10-27"},{"lineNumber":45,"author":{"gitId":"tlyi"},"content":"                dataManager.getExerciseItems().addAll(dataManager.getFilteredExerciseItems());","lastModifiedDate":"2021-10-28"},{"lineNumber":46,"author":{"gitId":"tlyi"},"content":"                storageManager.saveExerciseList(dataManager.getExerciseItems());","lastModifiedDate":"2021-10-27"},{"lineNumber":47,"author":{"gitId":"tlyi"},"content":"            }","lastModifiedDate":"2021-10-27"},{"lineNumber":48,"author":{"gitId":"tlyi"},"content":"            if (Command.requiresFoodListStorageRewrite(command)) {","lastModifiedDate":"2021-10-27"},{"lineNumber":49,"author":{"gitId":"tlyi"},"content":"                dataManager.getFoodItems().addAll(dataManager.getFilteredFoodItems());","lastModifiedDate":"2021-10-28"},{"lineNumber":50,"author":{"gitId":"tlyi"},"content":"                storageManager.saveFoodList(dataManager.getFoodItems());","lastModifiedDate":"2021-10-27"},{"lineNumber":51,"author":{"gitId":"tlyi"},"content":"            }","lastModifiedDate":"2021-10-27"},{"lineNumber":52,"author":{"gitId":"tlyi"},"content":"            if (Command.requiresFutureExerciseListStorageRewrite(command)) {","lastModifiedDate":"2021-10-27"},{"lineNumber":53,"author":{"gitId":"tlyi"},"content":"                storageManager.saveFutureExerciseList(dataManager.getFutureExerciseItems());","lastModifiedDate":"2021-10-27"},{"lineNumber":54,"author":{"gitId":"tlyi"},"content":"            }","lastModifiedDate":"2021-10-27"},{"lineNumber":55,"author":{"gitId":"tlyi"},"content":"            if (Command.requiresFoodBankStorageRewrite(command)) {","lastModifiedDate":"2021-10-27"},{"lineNumber":56,"author":{"gitId":"tlyi"},"content":"                storageManager.saveFoodBank(dataManager.getFoodBank());","lastModifiedDate":"2021-10-27"},{"lineNumber":57,"author":{"gitId":"tlyi"},"content":"            }","lastModifiedDate":"2021-10-27"},{"lineNumber":58,"author":{"gitId":"tlyi"},"content":"            if (Command.requiresExerciseBankStorageRewrite(command)) {","lastModifiedDate":"2021-10-27"},{"lineNumber":59,"author":{"gitId":"tlyi"},"content":"                storageManager.saveExerciseBank(dataManager.getExerciseBank());","lastModifiedDate":"2021-10-27"},{"lineNumber":60,"author":{"gitId":"tlyi"},"content":"            }","lastModifiedDate":"2021-10-27"},{"lineNumber":61,"author":{"gitId":"tlyi"},"content":"        } catch (UnableToWriteFileException e) {","lastModifiedDate":"2021-10-27"},{"lineNumber":62,"author":{"gitId":"tlyi"},"content":"            return new CommandResult(e.getMessage());","lastModifiedDate":"2021-10-27"},{"lineNumber":63,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":64,"author":{"gitId":"tlyi"},"content":"        return result;","lastModifiedDate":"2021-10-27"},{"lineNumber":65,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":66,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":67,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":68,"author":{"gitId":"tlyi"},"content":"}","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"weidak":1,"tlyi":67}},{"path":"src/main/java/seedu/duke/logic/commands/AddExerciseBankCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.logic.commands;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"tlyi"},"content":"import seedu.duke.data.item.exceptions.DuplicateItemInBankException;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"tlyi"},"content":"import seedu.duke.data.item.exercise.Exercise;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"tlyi"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"tlyi"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"tlyi"},"content":"/**","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"tlyi"},"content":" * Represents the command that when executed, adds an Exercise item to the ExerciseBank.","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"tlyi"},"content":" */","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"tlyi"},"content":"public class AddExerciseBankCommand extends Command {","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_COMMAND_FORMAT \u003d CommandMessages.QUOTATION + COMMAND_WORD_ADD","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"tlyi"},"content":"            + \" \" + COMMAND_PREFIX_EXERCISE_BANK + COMMAND_PREFIX_DELIMITER + \"exercise name\"","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"tlyi"},"content":"            + \" \" + COMMAND_PREFIX_CALORIES + COMMAND_PREFIX_DELIMITER + \"calories\" + CommandMessages.QUOTATION;","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"An exercise item has been added to the exercise bank:\"","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"tlyi"},"content":"            + CommandMessages.INDENTED_LS + \"%s\";","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_INVALID_EXERCISE_CALORIES \u003d \"Exercise calories cannot be less than or equal to 0\"","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"tlyi"},"content":"            + CommandMessages.LS + \"Try a positive value instead\";","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_EXERCISE_ALREADY_EXISTS \u003d \"The exercise with name \"","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"tlyi"},"content":"            + CommandMessages.QUOTATION + \"%s\" + CommandMessages.QUOTATION","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"tlyi"},"content":"            + \" already exists in the exercise bank! (Names are case insensitive)\"","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"tlyi"},"content":"            + CommandMessages.LS + \"Try using another name, or delete/edit the existing item first!\";","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"tlyi"},"content":"    public static final String[] EXPECTED_PREFIXES \u003d {","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"tlyi"},"content":"            COMMAND_PREFIX_EXERCISE_BANK,","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"tlyi"},"content":"            COMMAND_PREFIX_CALORIES","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"tlyi"},"content":"    };","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"tlyi"},"content":"    private static Logger logger \u003d Logger.getLogger(AddExerciseBankCommand.class.getName());","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"tlyi"},"content":"    private Exercise exercise;","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"tlyi"},"content":"    public AddExerciseBankCommand(String description, int calories) {","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"tlyi"},"content":"        this.exercise \u003d new Exercise(description, calories);","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":37,"author":{"gitId":"tlyi"},"content":"    @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"tlyi"},"content":"    public CommandResult execute() {","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"tlyi"},"content":"        if (exercise.getCalories() \u003c\u003d 0) {","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"tlyi"},"content":"            logger.log(Level.WARNING, \"Exercise calorie is invalid\");","lastModifiedDate":"2021-10-19"},{"lineNumber":41,"author":{"gitId":"tlyi"},"content":"            return new CommandResult(MESSAGE_INVALID_EXERCISE_CALORIES);","lastModifiedDate":"2021-10-19"},{"lineNumber":42,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":43,"author":{"gitId":"tlyi"},"content":"        assert exercise.getCalories() \u003e 0 : \"Exercise calorie is valid\";","lastModifiedDate":"2021-10-19"},{"lineNumber":44,"author":{"gitId":"tlyi"},"content":"        try {","lastModifiedDate":"2021-10-20"},{"lineNumber":45,"author":{"gitId":"tlyi"},"content":"            super.exerciseBank.addItem(this.exercise);","lastModifiedDate":"2021-10-19"},{"lineNumber":46,"author":{"gitId":"tlyi"},"content":"            logger.log(Level.FINE, \"Exercise is successfully added to exercise bank\");","lastModifiedDate":"2021-10-19"},{"lineNumber":47,"author":{"gitId":"tlyi"},"content":"            return new CommandResult(String.format(MESSAGE_SUCCESS, this.exercise));","lastModifiedDate":"2021-10-19"},{"lineNumber":48,"author":{"gitId":"tlyi"},"content":"        } catch (DuplicateItemInBankException e) {","lastModifiedDate":"2021-10-20"},{"lineNumber":49,"author":{"gitId":"tlyi"},"content":"            return new CommandResult(String.format(MESSAGE_EXERCISE_ALREADY_EXISTS, this.exercise.getName()));","lastModifiedDate":"2021-10-20"},{"lineNumber":50,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":51,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":52,"author":{"gitId":"tlyi"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"tlyi":52}},{"path":"src/main/java/seedu/duke/logic/commands/AddExerciseCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.logic.commands;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"tlyi"},"content":"import seedu.duke.data.item.exceptions.ItemNotFoundInBankException;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"tlyi"},"content":"import seedu.duke.data.item.exercise.Exercise;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"tlyi"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"xingjie99"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"xingjie99"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"tlyi"},"content":"/**","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"tlyi"},"content":" * Represents the command that when executed, adds an Exercise item to the ExerciseList.","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"tlyi"},"content":" */","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"tlyi"},"content":"public class AddExerciseCommand extends Command {","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_COMMAND_FORMAT \u003d CommandMessages.QUOTATION + COMMAND_WORD_ADD","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"tlyi"},"content":"            + \" \" + COMMAND_PREFIX_EXERCISE + COMMAND_PREFIX_DELIMITER + \"exercise name\"","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"tlyi"},"content":"            + \" \" + COMMAND_PREFIX_CALORIES + COMMAND_PREFIX_DELIMITER + \"calories\"","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"tlyi"},"content":"            + \" \" + COMMAND_PREFIX_DATE + COMMAND_PREFIX_DELIMITER + \"date\" + CommandMessages.QUOTATION;","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"An exercise item has been added:\"","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"tlyi"},"content":"            + CommandMessages.INDENTED_LS + \"%s\";","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"xingjie99"},"content":"    public static final String MESSAGE_INVALID_EXERCISE_CALORIES \u003d \"Exercise calories cannot be less than or equal to 0\"","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"tlyi"},"content":"            + CommandMessages.LS + \"Try a positive value instead\";","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"tlyi"},"content":"    public static final String[] EXPECTED_PREFIXES \u003d {","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"tlyi"},"content":"            COMMAND_PREFIX_EXERCISE,","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"tlyi"},"content":"            COMMAND_PREFIX_CALORIES,","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"tlyi"},"content":"            COMMAND_PREFIX_DATE","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"tlyi"},"content":"    };","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"tttyyzzz"},"content":"    private static Logger logger \u003d Logger.getLogger(AddExerciseCommand.class.getName());","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"tlyi"},"content":"    private final String description;","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"tlyi"},"content":"    private int calories;","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"tlyi"},"content":"    private final LocalDate date;","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"tlyi"},"content":"    private final boolean isCaloriesFromBank;","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":37,"author":{"gitId":"tlyi"},"content":"    public AddExerciseCommand(String description, int calories, LocalDate date, boolean isCaloriesFromBank) {","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"tlyi"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-10-10"},{"lineNumber":39,"author":{"gitId":"tlyi"},"content":"        this.calories \u003d calories;","lastModifiedDate":"2021-10-10"},{"lineNumber":40,"author":{"gitId":"tlyi"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-10-19"},{"lineNumber":41,"author":{"gitId":"tlyi"},"content":"        this.isCaloriesFromBank \u003d isCaloriesFromBank;","lastModifiedDate":"2021-10-19"},{"lineNumber":42,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":43,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":44,"author":{"gitId":"tlyi"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":45,"author":{"gitId":"tlyi"},"content":"    public CommandResult execute() {","lastModifiedDate":"2021-10-10"},{"lineNumber":46,"author":{"gitId":"tlyi"},"content":"        final Exercise exercise;","lastModifiedDate":"2021-10-19"},{"lineNumber":47,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":48,"author":{"gitId":"tlyi"},"content":"        if (isCaloriesFromBank) {","lastModifiedDate":"2021-10-19"},{"lineNumber":49,"author":{"gitId":"tlyi"},"content":"            try {","lastModifiedDate":"2021-10-19"},{"lineNumber":50,"author":{"gitId":"tlyi"},"content":"                this.calories \u003d super.exerciseBank.getCaloriesOfItemWithMatchingName(this.description);","lastModifiedDate":"2021-10-19"},{"lineNumber":51,"author":{"gitId":"tlyi"},"content":"            } catch (ItemNotFoundInBankException e) {","lastModifiedDate":"2021-10-19"},{"lineNumber":52,"author":{"gitId":"tlyi"},"content":"                return new CommandResult(String.format(","lastModifiedDate":"2021-10-27"},{"lineNumber":53,"author":{"gitId":"tlyi"},"content":"                        CommandMessages.MESSAGE_INVALID_EXERCISE_NOT_IN_BANK, this.description));","lastModifiedDate":"2021-10-27"},{"lineNumber":54,"author":{"gitId":"tlyi"},"content":"            }","lastModifiedDate":"2021-10-19"},{"lineNumber":55,"author":{"gitId":"tlyi"},"content":"        } else {","lastModifiedDate":"2021-10-19"},{"lineNumber":56,"author":{"gitId":"tlyi"},"content":"            if (this.calories \u003c\u003d 0) {","lastModifiedDate":"2021-10-19"},{"lineNumber":57,"author":{"gitId":"xingjie99"},"content":"                logger.log(Level.WARNING, \"Exercise calorie is invalid\");","lastModifiedDate":"2021-10-13"},{"lineNumber":58,"author":{"gitId":"xingjie99"},"content":"                return new CommandResult(MESSAGE_INVALID_EXERCISE_CALORIES);","lastModifiedDate":"2021-10-11"},{"lineNumber":59,"author":{"gitId":"weidak"},"content":"            }","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":61,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":62,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":63,"author":{"gitId":"tlyi"},"content":"        exercise \u003d new Exercise(this.description, this.calories, this.date);","lastModifiedDate":"2021-10-27"},{"lineNumber":64,"author":{"gitId":"xingjie99"},"content":"        assert exercise.getCalories() \u003e 0 : \"Exercise calorie is valid\";","lastModifiedDate":"2021-10-13"},{"lineNumber":65,"author":{"gitId":"tryyang2001"},"content":"        super.exerciseItems.addItem(exercise);","lastModifiedDate":"2021-10-20"},{"lineNumber":66,"author":{"gitId":"tryyang2001"},"content":"        logger.log(Level.FINE, \"Exercise is successfully added\");","lastModifiedDate":"2021-10-14"},{"lineNumber":67,"author":{"gitId":"tryyang2001"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, exercise.toStringWithDate()));","lastModifiedDate":"2021-10-27"},{"lineNumber":68,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":69,"author":{"gitId":"tlyi"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"weidak":1,"tttyyzzz":2,"xingjie99":7,"tryyang2001":3,"tlyi":56}},{"path":"src/main/java/seedu/duke/logic/commands/AddFoodBankCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.logic.commands;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"tlyi"},"content":"import seedu.duke.data.item.exceptions.DuplicateItemInBankException;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"tlyi"},"content":"import seedu.duke.data.item.food.Food;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"tlyi"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"tlyi"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"tlyi"},"content":"/**","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"tlyi"},"content":" * Represents the command that when executed, adds a Food item to the FoodBank.","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"tlyi"},"content":" */","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"tlyi"},"content":"public class AddFoodBankCommand extends Command {","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_COMMAND_FORMAT \u003d CommandMessages.QUOTATION + COMMAND_WORD_ADD","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"tlyi"},"content":"            + \" \" + COMMAND_PREFIX_FOOD_BANK + COMMAND_PREFIX_DELIMITER + \"exercise name\"","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"tlyi"},"content":"            + \" \" + COMMAND_PREFIX_CALORIES + COMMAND_PREFIX_DELIMITER + \"calories\" + CommandMessages.QUOTATION;","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"A food item has been added to the food bank:\"","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"tlyi"},"content":"            + CommandMessages.INDENTED_LS + \"%s\";","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_INVALID_FOOD_CALORIES \u003d \"Food calories cannot be less than 0\"","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"tlyi"},"content":"            + CommandMessages.LS + \"Try a positive value instead\";","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_FOOD_ALREADY_EXISTS \u003d \"The food with name \"","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"tlyi"},"content":"            + CommandMessages.QUOTATION + \"%s\" + CommandMessages.QUOTATION","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"tlyi"},"content":"            + \" already exists in the food bank! (Names are case insensitive)\"","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"tlyi"},"content":"            + CommandMessages.LS + \"Try using another name, or delete/edit the existing item first!\";","lastModifiedDate":"2021-10-27"},{"lineNumber":25,"author":{"gitId":"tlyi"},"content":"    public static final String[] EXPECTED_PREFIXES \u003d {","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"tlyi"},"content":"            COMMAND_PREFIX_FOOD_BANK,","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"tlyi"},"content":"            COMMAND_PREFIX_CALORIES","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"tlyi"},"content":"    };","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"tlyi"},"content":"    private static Logger logger \u003d Logger.getLogger(AddFoodBankCommand.class.getName());","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"tlyi"},"content":"    private Food food;","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"tlyi"},"content":"    public AddFoodBankCommand(String description, int calories) {","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"tlyi"},"content":"        this.food \u003d new Food(description, calories);","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":37,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"tlyi"},"content":"    @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"tlyi"},"content":"    public CommandResult execute() {","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"tlyi"},"content":"        if (food.getCalories() \u003c 0) {","lastModifiedDate":"2021-10-19"},{"lineNumber":41,"author":{"gitId":"tlyi"},"content":"            logger.log(Level.WARNING, \"Food calorie is invalid\");","lastModifiedDate":"2021-10-19"},{"lineNumber":42,"author":{"gitId":"tlyi"},"content":"            return new CommandResult(MESSAGE_INVALID_FOOD_CALORIES);","lastModifiedDate":"2021-10-19"},{"lineNumber":43,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":44,"author":{"gitId":"tlyi"},"content":"        assert food.getCalories() \u003e\u003d 0 : \"Food calorie is valid\";","lastModifiedDate":"2021-10-19"},{"lineNumber":45,"author":{"gitId":"tlyi"},"content":"        try {","lastModifiedDate":"2021-10-20"},{"lineNumber":46,"author":{"gitId":"tlyi"},"content":"            super.foodBank.addItem(this.food);","lastModifiedDate":"2021-10-19"},{"lineNumber":47,"author":{"gitId":"tlyi"},"content":"            logger.log(Level.FINE, \"Food is successfully added to food bank\");","lastModifiedDate":"2021-10-19"},{"lineNumber":48,"author":{"gitId":"tlyi"},"content":"            return new CommandResult(String.format(MESSAGE_SUCCESS, this.food.toStringWithoutTime()));","lastModifiedDate":"2021-10-24"},{"lineNumber":49,"author":{"gitId":"tlyi"},"content":"        } catch (DuplicateItemInBankException e) {","lastModifiedDate":"2021-10-20"},{"lineNumber":50,"author":{"gitId":"tlyi"},"content":"            return new CommandResult(String.format(MESSAGE_FOOD_ALREADY_EXISTS, this.food.getName()));","lastModifiedDate":"2021-10-20"},{"lineNumber":51,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":52,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":53,"author":{"gitId":"tlyi"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"tlyi":53}},{"path":"src/main/java/seedu/duke/logic/commands/AddFoodCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.logic.commands;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"tlyi"},"content":"import seedu.duke.data.item.exceptions.ItemNotFoundInBankException;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"tlyi"},"content":"import seedu.duke.data.item.food.Food;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"tlyi"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"tryyang2001"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-10-14"},{"lineNumber":8,"author":{"gitId":"tryyang2001"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-14"},{"lineNumber":9,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":10,"author":{"gitId":"tlyi"},"content":"/**","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"tlyi"},"content":" * Represents the command that when executed, adds a Food item to the FoodList.","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"tlyi"},"content":" */","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"tlyi"},"content":"public class AddFoodCommand extends Command {","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_COMMAND_FORMAT \u003d CommandMessages.QUOTATION + COMMAND_WORD_ADD","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"tlyi"},"content":"            + \" \" + COMMAND_PREFIX_FOOD + COMMAND_PREFIX_DELIMITER + \"food name\"","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"tlyi"},"content":"            + \" \" + COMMAND_PREFIX_CALORIES + COMMAND_PREFIX_DELIMITER + \"calories\"","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"tlyi"},"content":"            + \" \" + COMMAND_PREFIX_DATE + COMMAND_PREFIX_DELIMITER + \"date\"","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"tlyi"},"content":"            + \" \" + COMMAND_PREFIX_TIME + COMMAND_PREFIX_DELIMITER + \"time\" + CommandMessages.QUOTATION;","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"A food item has been added:\"","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"tlyi"},"content":"            + CommandMessages.INDENTED_LS + \"%s\";","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_INVALID_FOOD_CALORIES \u003d","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"tlyi"},"content":"            \"Food calories cannot be less than 0\" + CommandMessages.LS","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"tryyang2001"},"content":"                    + \"Try a positive value instead\";","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"tlyi"},"content":"    public static final String[] EXPECTED_PREFIXES \u003d {","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"tlyi"},"content":"            COMMAND_PREFIX_FOOD,","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"tlyi"},"content":"            COMMAND_PREFIX_CALORIES,","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"tlyi"},"content":"            COMMAND_PREFIX_DATE,","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"tlyi"},"content":"            COMMAND_PREFIX_TIME","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"tlyi"},"content":"    };","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":31,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"tryyang2001"},"content":"    private Logger logger \u003d Logger.getLogger(AddFoodCommand.class.getName());","lastModifiedDate":"2021-10-14"},{"lineNumber":33,"author":{"gitId":"tlyi"},"content":"    private final String description;","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"tlyi"},"content":"    private int calories;","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"tlyi"},"content":"    private final LocalDateTime dateTime;","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"tlyi"},"content":"    private final boolean isCaloriesFromBank;","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":38,"author":{"gitId":"tlyi"},"content":"    public AddFoodCommand(String description, int calories, LocalDateTime dateTime, boolean isCaloriesFromBank) {","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"tlyi"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"tlyi"},"content":"        this.calories \u003d calories;","lastModifiedDate":"2021-10-19"},{"lineNumber":41,"author":{"gitId":"tlyi"},"content":"        this.dateTime \u003d dateTime;","lastModifiedDate":"2021-10-19"},{"lineNumber":42,"author":{"gitId":"tlyi"},"content":"        this.isCaloriesFromBank \u003d isCaloriesFromBank;","lastModifiedDate":"2021-10-19"},{"lineNumber":43,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":44,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":45,"author":{"gitId":"tlyi"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":46,"author":{"gitId":"tlyi"},"content":"    public CommandResult execute() {","lastModifiedDate":"2021-10-10"},{"lineNumber":47,"author":{"gitId":"tlyi"},"content":"        final Food food;","lastModifiedDate":"2021-10-19"},{"lineNumber":48,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":49,"author":{"gitId":"tlyi"},"content":"        if (isCaloriesFromBank) {","lastModifiedDate":"2021-10-19"},{"lineNumber":50,"author":{"gitId":"tlyi"},"content":"            try {","lastModifiedDate":"2021-10-19"},{"lineNumber":51,"author":{"gitId":"tlyi"},"content":"                this.calories \u003d super.foodBank.getCaloriesOfItemWithMatchingName(this.description);","lastModifiedDate":"2021-10-19"},{"lineNumber":52,"author":{"gitId":"tlyi"},"content":"            } catch (ItemNotFoundInBankException e) {","lastModifiedDate":"2021-10-19"},{"lineNumber":53,"author":{"gitId":"tlyi"},"content":"                return new CommandResult(String.format(","lastModifiedDate":"2021-10-27"},{"lineNumber":54,"author":{"gitId":"tlyi"},"content":"                        CommandMessages.MESSAGE_INVALID_FOOD_NOT_IN_BANK, this.description));","lastModifiedDate":"2021-10-27"},{"lineNumber":55,"author":{"gitId":"tlyi"},"content":"            }","lastModifiedDate":"2021-10-19"},{"lineNumber":56,"author":{"gitId":"tlyi"},"content":"        } else {","lastModifiedDate":"2021-10-19"},{"lineNumber":57,"author":{"gitId":"tlyi"},"content":"            if (this.calories \u003c 0) {","lastModifiedDate":"2021-10-19"},{"lineNumber":58,"author":{"gitId":"tryyang2001"},"content":"                logger.log(Level.WARNING, \"Detected negative food calorie\");","lastModifiedDate":"2021-10-14"},{"lineNumber":59,"author":{"gitId":"tryyang2001"},"content":"                return new CommandResult(MESSAGE_INVALID_FOOD_CALORIES);","lastModifiedDate":"2021-10-11"},{"lineNumber":60,"author":{"gitId":"tryyang2001"},"content":"            }","lastModifiedDate":"2021-10-11"},{"lineNumber":61,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":62,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":63,"author":{"gitId":"tlyi"},"content":"        food \u003d new Food(this.description, this.calories, this.dateTime);","lastModifiedDate":"2021-10-27"},{"lineNumber":64,"author":{"gitId":"tryyang2001"},"content":"        super.foodItems.addItem(food);","lastModifiedDate":"2021-10-20"},{"lineNumber":65,"author":{"gitId":"tryyang2001"},"content":"        assert foodItems.getSize() \u003e 0 : \"The size of the food list should at least larger than 0\";","lastModifiedDate":"2021-10-12"},{"lineNumber":66,"author":{"gitId":"tryyang2001"},"content":"        logger.log(Level.FINE, \"New food item has been added to the food list\");","lastModifiedDate":"2021-10-14"},{"lineNumber":67,"author":{"gitId":"tlyi"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, food));","lastModifiedDate":"2021-10-19"},{"lineNumber":68,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":69,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":70,"author":{"gitId":"tlyi"},"content":"}","lastModifiedDate":"2021-10-10"},{"lineNumber":71,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"tryyang2001":11,"tlyi":60}},{"path":"src/main/java/seedu/duke/logic/commands/AddFutureExerciseCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.logic.commands;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"tlyi"},"content":"import seedu.duke.data.item.exceptions.ItemNotFoundInBankException;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"tlyi"},"content":"import seedu.duke.data.item.exercise.Exercise;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"xingjie99"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"xingjie99"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"xingjie99"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"xingjie99"},"content":"/**","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"xingjie99"},"content":" * Represents the command that when executed, adds an Exercise item to the FutureExerciseList.","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"xingjie99"},"content":" */","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"xingjie99"},"content":"public class AddFutureExerciseCommand extends Command {","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_COMMAND_FORMAT \u003d CommandMessages.QUOTATION + COMMAND_WORD_ADD","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"xingjie99"},"content":"            + \" \" + COMMAND_PREFIX_EXERCISE + COMMAND_PREFIX_DELIMITER + \"exercise name\"","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"tlyi"},"content":"            + \" \" + COMMAND_PREFIX_CALORIES + COMMAND_PREFIX_DELIMITER + \"calories\"","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"tlyi"},"content":"            + \" \" + COMMAND_PREFIX_DATE + COMMAND_PREFIX_DELIMITER + \"date\" + CommandMessages.QUOTATION;","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"xingjie99"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"An exercise item for the future has been added:\"","lastModifiedDate":"2021-10-18"},{"lineNumber":19,"author":{"gitId":"tlyi"},"content":"            + CommandMessages.INDENTED_LS + \"%s\";","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"xingjie99"},"content":"    public static final String MESSAGE_INVALID_EXERCISE_CALORIES \u003d \"Exercise calories cannot be less than or equal to 0\"","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"tlyi"},"content":"            + CommandMessages.LS + \"Try a positive value instead\";","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":23,"author":{"gitId":"xingjie99"},"content":"    private static Logger logger \u003d Logger.getLogger(AddFutureExerciseCommand.class.getName());","lastModifiedDate":"2021-10-18"},{"lineNumber":24,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":25,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"xingjie99"},"content":"    private final String description;","lastModifiedDate":"2021-10-18"},{"lineNumber":27,"author":{"gitId":"tlyi"},"content":"    private int calories;","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"xingjie99"},"content":"    private final LocalDate date;","lastModifiedDate":"2021-10-18"},{"lineNumber":29,"author":{"gitId":"tlyi"},"content":"    private boolean isCaloriesFromBank;","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":32,"author":{"gitId":"tlyi"},"content":"    public AddFutureExerciseCommand(String description, int calories, LocalDate date, boolean isCaloriesFromBank) {","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"xingjie99"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-10-18"},{"lineNumber":34,"author":{"gitId":"xingjie99"},"content":"        this.calories \u003d calories;","lastModifiedDate":"2021-10-18"},{"lineNumber":35,"author":{"gitId":"xingjie99"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-10-18"},{"lineNumber":36,"author":{"gitId":"tlyi"},"content":"        this.isCaloriesFromBank \u003d isCaloriesFromBank;","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"xingjie99"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":38,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":39,"author":{"gitId":"xingjie99"},"content":"    @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":40,"author":{"gitId":"xingjie99"},"content":"    public CommandResult execute() {","lastModifiedDate":"2021-10-18"},{"lineNumber":41,"author":{"gitId":"tlyi"},"content":"        final Exercise exercise;","lastModifiedDate":"2021-10-20"},{"lineNumber":42,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":43,"author":{"gitId":"tlyi"},"content":"        if (isCaloriesFromBank) {","lastModifiedDate":"2021-10-20"},{"lineNumber":44,"author":{"gitId":"tlyi"},"content":"            try {","lastModifiedDate":"2021-10-20"},{"lineNumber":45,"author":{"gitId":"tlyi"},"content":"                this.calories \u003d super.exerciseBank.getCaloriesOfItemWithMatchingName(this.description);","lastModifiedDate":"2021-10-20"},{"lineNumber":46,"author":{"gitId":"tlyi"},"content":"            } catch (ItemNotFoundInBankException e) {","lastModifiedDate":"2021-10-20"},{"lineNumber":47,"author":{"gitId":"tlyi"},"content":"                return new CommandResult(String.format(","lastModifiedDate":"2021-10-27"},{"lineNumber":48,"author":{"gitId":"tlyi"},"content":"                        CommandMessages.MESSAGE_INVALID_EXERCISE_NOT_IN_BANK, this.description));","lastModifiedDate":"2021-10-27"},{"lineNumber":49,"author":{"gitId":"tlyi"},"content":"            }","lastModifiedDate":"2021-10-20"},{"lineNumber":50,"author":{"gitId":"tlyi"},"content":"        } else {","lastModifiedDate":"2021-10-20"},{"lineNumber":51,"author":{"gitId":"tlyi"},"content":"            if (this.calories \u003c\u003d 0) {","lastModifiedDate":"2021-10-20"},{"lineNumber":52,"author":{"gitId":"xingjie99"},"content":"                logger.log(Level.WARNING, \"Exercise calorie is invalid\");","lastModifiedDate":"2021-10-18"},{"lineNumber":53,"author":{"gitId":"xingjie99"},"content":"                return new CommandResult(MESSAGE_INVALID_EXERCISE_CALORIES);","lastModifiedDate":"2021-10-18"},{"lineNumber":54,"author":{"gitId":"xingjie99"},"content":"            }","lastModifiedDate":"2021-10-18"},{"lineNumber":55,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":56,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":57,"author":{"gitId":"tlyi"},"content":"        exercise \u003d new Exercise(this.description, this.calories, this.date);","lastModifiedDate":"2021-10-27"},{"lineNumber":58,"author":{"gitId":"xingjie99"},"content":"        assert exercise.getCalories() \u003e 0 : \"Exercise calorie is valid\";","lastModifiedDate":"2021-10-18"},{"lineNumber":59,"author":{"gitId":"tlyi"},"content":"        super.futureExerciseItems.addItem(exercise);","lastModifiedDate":"2021-10-21"},{"lineNumber":60,"author":{"gitId":"xingjie99"},"content":"        logger.log(Level.FINE, \"Exercise is successfully added\");","lastModifiedDate":"2021-10-18"},{"lineNumber":61,"author":{"gitId":"tlyi"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, exercise));","lastModifiedDate":"2021-10-20"},{"lineNumber":62,"author":{"gitId":"xingjie99"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":63,"author":{"gitId":"xingjie99"},"content":"}","lastModifiedDate":"2021-10-18"},{"lineNumber":64,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"xingjie99":34,"tlyi":30}},{"path":"src/main/java/seedu/duke/logic/commands/AddRecurringExerciseCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.logic.commands;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"tlyi"},"content":"import seedu.duke.data.item.exceptions.ItemNotFoundInBankException;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"xingjie99"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"xingjie99"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"xingjie99"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"xingjie99"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"xingjie99"},"content":"/**","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"xingjie99"},"content":" * Represent the command that when executed, adds all recurring Exercise items to the FutureExerciseList.","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"xingjie99"},"content":" */","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"xingjie99"},"content":"public class AddRecurringExerciseCommand extends Command {","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_COMMAND_FORMAT \u003d CommandMessages.QUOTATION + COMMAND_WORD_ADD","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"tlyi"},"content":"            + \" \" + COMMAND_PREFIX_RECURRING + COMMAND_PREFIX_DELIMITER + \"exercise name\"","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"tlyi"},"content":"            + \" \" + COMMAND_PREFIX_CALORIES + COMMAND_PREFIX_DELIMITER + \"calories\"","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"tlyi"},"content":"            + \" \" + COMMAND_PREFIX_START_DATE + COMMAND_PREFIX_DELIMITER + \"start date\"","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"tlyi"},"content":"            + \" \" + COMMAND_PREFIX_END_DATE + COMMAND_PREFIX_DELIMITER + \"end date\"","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"tlyi"},"content":"            + \" \" + COMMAND_PREFIX_DAY_OF_THE_WEEK + COMMAND_PREFIX_DELIMITER + \"days of the week (Mon:1 - Sun:7)\"","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"tlyi"},"content":"            + CommandMessages.QUOTATION;","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"xingjie99"},"content":"    public static final String MESSAGE_INVALID_DATES \u003d \"Your start date %s is later than your end date %s\";","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"xingjie99"},"content":"    public static final String MESSAGE_INVALID_FUTURE_DATES \u003d \"Make sure that your start date (%s) \"","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"tlyi"},"content":"            + \"and end date (%s) are in the future\";","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"xingjie99"},"content":"    public static final String MESSAGE_NO_EXERCISE_ADDED \u003d \"Day(s) not present between %s and %s\";","lastModifiedDate":"2021-10-18"},{"lineNumber":25,"author":{"gitId":"xingjie99"},"content":"    public static final String MESSAGE_INVALID_EXERCISE_CALORIES \u003d \"Exercise calories cannot be less than or equal to 0\"","lastModifiedDate":"2021-10-18"},{"lineNumber":26,"author":{"gitId":"tlyi"},"content":"            + CommandMessages.LS + \"Try a positive value instead\";","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"xingjie99"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Recurring exercise item for the future has been added\";","lastModifiedDate":"2021-10-18"},{"lineNumber":28,"author":{"gitId":"tlyi"},"content":"    private static final int ONE_WEEK \u003d 7;","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"tlyi"},"content":"    private static final int ONE_DAY \u003d 1;","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"tlyi"},"content":"    public static final String[] EXPECTED_PREFIXES \u003d {","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"tlyi"},"content":"            COMMAND_PREFIX_RECURRING,","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"tlyi"},"content":"            COMMAND_PREFIX_CALORIES,","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"tlyi"},"content":"            COMMAND_PREFIX_START_DATE,","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"tlyi"},"content":"            COMMAND_PREFIX_END_DATE,","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"tlyi"},"content":"            COMMAND_PREFIX_DAY_OF_THE_WEEK","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"tlyi"},"content":"    };","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"xingjie99"},"content":"    private final String description;","lastModifiedDate":"2021-10-18"},{"lineNumber":39,"author":{"gitId":"tlyi"},"content":"    private int calories;","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"tlyi"},"content":"    private boolean isCaloriesFromBank;","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"xingjie99"},"content":"    private final LocalDate startDate;","lastModifiedDate":"2021-10-18"},{"lineNumber":42,"author":{"gitId":"xingjie99"},"content":"    private final LocalDate endDate;","lastModifiedDate":"2021-10-18"},{"lineNumber":43,"author":{"gitId":"xingjie99"},"content":"    private final ArrayList\u003cInteger\u003e dayOfTheWeek;","lastModifiedDate":"2021-10-20"},{"lineNumber":44,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":45,"author":{"gitId":"xingjie99"},"content":"    private static Logger logger \u003d Logger.getLogger(AddRecurringExerciseCommand.class.getName());","lastModifiedDate":"2021-10-18"},{"lineNumber":46,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":47,"author":{"gitId":"xingjie99"},"content":"    public AddRecurringExerciseCommand(String description, int calories, LocalDate startDate,","lastModifiedDate":"2021-10-18"},{"lineNumber":48,"author":{"gitId":"tlyi"},"content":"                                       LocalDate endDate, ArrayList\u003cInteger\u003e dayOfTheWeek,","lastModifiedDate":"2021-10-20"},{"lineNumber":49,"author":{"gitId":"tlyi"},"content":"                                       boolean isCaloriesFromBank) {","lastModifiedDate":"2021-10-20"},{"lineNumber":50,"author":{"gitId":"xingjie99"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-10-18"},{"lineNumber":51,"author":{"gitId":"xingjie99"},"content":"        this.calories \u003d calories;","lastModifiedDate":"2021-10-18"},{"lineNumber":52,"author":{"gitId":"xingjie99"},"content":"        this.startDate \u003d startDate;","lastModifiedDate":"2021-10-18"},{"lineNumber":53,"author":{"gitId":"xingjie99"},"content":"        this.endDate \u003d endDate;","lastModifiedDate":"2021-10-18"},{"lineNumber":54,"author":{"gitId":"xingjie99"},"content":"        this.dayOfTheWeek \u003d dayOfTheWeek;","lastModifiedDate":"2021-10-20"},{"lineNumber":55,"author":{"gitId":"tlyi"},"content":"        this.isCaloriesFromBank \u003d isCaloriesFromBank;","lastModifiedDate":"2021-10-20"},{"lineNumber":56,"author":{"gitId":"xingjie99"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":57,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":58,"author":{"gitId":"xingjie99"},"content":"    @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":59,"author":{"gitId":"xingjie99"},"content":"    public CommandResult execute() {","lastModifiedDate":"2021-10-18"},{"lineNumber":60,"author":{"gitId":"xingjie99"},"content":"        if (this.startDate.isAfter(this.endDate)) {","lastModifiedDate":"2021-10-18"},{"lineNumber":61,"author":{"gitId":"xingjie99"},"content":"            logger.log(Level.WARNING, \"Start date is after end date\");","lastModifiedDate":"2021-10-18"},{"lineNumber":62,"author":{"gitId":"xingjie99"},"content":"            return new CommandResult(String.format(MESSAGE_INVALID_DATES, this.startDate, this.endDate));","lastModifiedDate":"2021-10-18"},{"lineNumber":63,"author":{"gitId":"xingjie99"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":64,"author":{"gitId":"tlyi"},"content":"        if (isCaloriesFromBank) {","lastModifiedDate":"2021-10-20"},{"lineNumber":65,"author":{"gitId":"tlyi"},"content":"            try {","lastModifiedDate":"2021-10-20"},{"lineNumber":66,"author":{"gitId":"tlyi"},"content":"                this.calories \u003d super.exerciseBank.getCaloriesOfItemWithMatchingName(this.description);","lastModifiedDate":"2021-10-20"},{"lineNumber":67,"author":{"gitId":"tlyi"},"content":"            } catch (ItemNotFoundInBankException e) {","lastModifiedDate":"2021-10-20"},{"lineNumber":68,"author":{"gitId":"tlyi"},"content":"                return new CommandResult(String.format(","lastModifiedDate":"2021-10-27"},{"lineNumber":69,"author":{"gitId":"tlyi"},"content":"                        CommandMessages.MESSAGE_INVALID_EXERCISE_NOT_IN_BANK, this.description));","lastModifiedDate":"2021-10-27"},{"lineNumber":70,"author":{"gitId":"tlyi"},"content":"            }","lastModifiedDate":"2021-10-20"},{"lineNumber":71,"author":{"gitId":"tlyi"},"content":"        } else {","lastModifiedDate":"2021-10-20"},{"lineNumber":72,"author":{"gitId":"xingjie99"},"content":"            if (this.calories \u003c\u003d 0) {","lastModifiedDate":"2021-10-18"},{"lineNumber":73,"author":{"gitId":"xingjie99"},"content":"                logger.log(Level.WARNING, \"Exercise calorie is invalid\");","lastModifiedDate":"2021-10-18"},{"lineNumber":74,"author":{"gitId":"xingjie99"},"content":"                return new CommandResult(MESSAGE_INVALID_EXERCISE_CALORIES);","lastModifiedDate":"2021-10-18"},{"lineNumber":75,"author":{"gitId":"xingjie99"},"content":"            }","lastModifiedDate":"2021-10-18"},{"lineNumber":76,"author":{"gitId":"xingjie99"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":77,"author":{"gitId":"xingjie99"},"content":"        assert this.endDate.isAfter(this.startDate) : \"End date is after start date\";","lastModifiedDate":"2021-10-20"},{"lineNumber":78,"author":{"gitId":"tlyi"},"content":"        if (!this.startDate.isAfter(LocalDate.now())) {","lastModifiedDate":"2021-10-24"},{"lineNumber":79,"author":{"gitId":"xingjie99"},"content":"            logger.log(Level.WARNING, \"Recurring exercises are for future only\");","lastModifiedDate":"2021-10-27"},{"lineNumber":80,"author":{"gitId":"xingjie99"},"content":"            return new CommandResult(String.format(MESSAGE_INVALID_FUTURE_DATES, this.startDate, this.endDate));","lastModifiedDate":"2021-10-20"},{"lineNumber":81,"author":{"gitId":"xingjie99"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":82,"author":{"gitId":"xingjie99"},"content":"        assert this.startDate.isAfter(LocalDate.now()) : \"Start and end dates are in the future\";","lastModifiedDate":"2021-10-20"},{"lineNumber":83,"author":{"gitId":"xingjie99"},"content":"        if (this.calories \u003c\u003d 0) {","lastModifiedDate":"2021-10-18"},{"lineNumber":84,"author":{"gitId":"xingjie99"},"content":"            logger.log(Level.WARNING, \"Exercise calorie is invalid\");","lastModifiedDate":"2021-10-18"},{"lineNumber":85,"author":{"gitId":"xingjie99"},"content":"            return new CommandResult(MESSAGE_INVALID_EXERCISE_CALORIES);","lastModifiedDate":"2021-10-18"},{"lineNumber":86,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":87,"author":{"gitId":"xingjie99"},"content":"        assert this.calories \u003e 0 : \"Exercise calorie is valid\";","lastModifiedDate":"2021-10-18"},{"lineNumber":88,"author":{"gitId":"xingjie99"},"content":"        int numberOfFutureExercises \u003d futureExerciseItems.getSize();","lastModifiedDate":"2021-10-18"},{"lineNumber":89,"author":{"gitId":"xingjie99"},"content":"        futureExerciseItems.addRecurringExercises(this.description, this.calories,","lastModifiedDate":"2021-10-20"},{"lineNumber":90,"author":{"gitId":"xingjie99"},"content":"                this.startDate, this.endDate, this.dayOfTheWeek);","lastModifiedDate":"2021-10-20"},{"lineNumber":91,"author":{"gitId":"xingjie99"},"content":"        if (futureExerciseItems.getSize() \u003d\u003d numberOfFutureExercises) {","lastModifiedDate":"2021-10-18"},{"lineNumber":92,"author":{"gitId":"xingjie99"},"content":"            return new CommandResult(String.format(MESSAGE_NO_EXERCISE_ADDED, this.startDate, this.endDate));","lastModifiedDate":"2021-10-18"},{"lineNumber":93,"author":{"gitId":"xingjie99"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":94,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":95,"author":{"gitId":"xingjie99"},"content":"        logger.log(Level.FINE, \"Recurring exercise is successfully added\");","lastModifiedDate":"2021-10-27"},{"lineNumber":96,"author":{"gitId":"xingjie99"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2021-10-18"},{"lineNumber":97,"author":{"gitId":"xingjie99"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":98,"author":{"gitId":"xingjie99"},"content":"}","lastModifiedDate":"2021-10-18"},{"lineNumber":99,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":100,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":101,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"xingjie99":65,"tlyi":36}},{"path":"src/main/java/seedu/duke/logic/commands/ByeCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.logic.commands;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"tlyi"},"content":"/**","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"tlyi"},"content":" * Represents the command that when executed, signaCommandMessages.LS to the application to exit.","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"tlyi"},"content":" */","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"tlyi"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"tlyi"},"content":"    public static final String COMMAND_WORD \u003d \"bye\";","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_COMMAND_FORMAT \u003d","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"tlyi"},"content":"            CommandMessages.QUOTATION + COMMAND_WORD + CommandMessages.QUOTATION;","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"tlyi"},"content":"    private static final String MESSAGE_SUCCESS \u003d \"Exiting Fitbot....\" + CommandMessages.LS","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"tlyi"},"content":"            + \"Bye! Hope to see you again soon!!\";","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":14,"author":{"gitId":"tlyi"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"tlyi"},"content":"    public CommandResult execute() {","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"tlyi"},"content":"        CommandResult result \u003d new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"tlyi"},"content":"        result.setBye(true);","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"tlyi"},"content":"        return result;","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"tlyi"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"tlyi"},"content":"     * Determines if command is the Bye command so that the main program knows when to exit.","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"tlyi"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"tlyi"},"content":"    public static boolean isBye(Command command) {","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"tlyi"},"content":"        return command instanceof ByeCommand;","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"tlyi"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"tttyyzzz":1,"tlyi":26}},{"path":"src/main/java/seedu/duke/logic/commands/CalculateBmiCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.logic.commands;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"tlyi"},"content":"import seedu.duke.data.profile.exceptions.InvalidCharacteristicException;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"tlyi"},"content":"/**","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"tlyi"},"content":" * Represents the command that when executed, calculates the BMI with the given height and weight data.","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"tlyi"},"content":" */","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"tlyi"},"content":"public class CalculateBmiCommand extends Command {","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_COMMAND_FORMAT \u003d CommandMessages.QUOTATION + COMMAND_WORD_BMI","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"tlyi"},"content":"            + \" \" + COMMAND_PREFIX_HEIGHT + COMMAND_PREFIX_DELIMITER + \"Y \"","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"tlyi"},"content":"            + COMMAND_PREFIX_WEIGHT + COMMAND_PREFIX_DELIMITER + \"Z\"","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"tlyi"},"content":"            + CommandMessages.QUOTATION + \" where X is the height in CM and Y is the weight in KG\";","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid format! \"","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"tlyi"},"content":"            + \"Trying to calculate BMI for a certain height and weight? Use this format:\"","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"tlyi"},"content":"            + CommandMessages.INDENTED_LS + MESSAGE_COMMAND_FORMAT;","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"The calculated BMI value is %1$,.1f (%2$s)\";","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"tlyi"},"content":"    public static final String[] EXPECTED_PREFIXES \u003d {","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"tlyi"},"content":"            COMMAND_PREFIX_HEIGHT,","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"tlyi"},"content":"            COMMAND_PREFIX_WEIGHT","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"tlyi"},"content":"    };","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"tlyi"},"content":"    private final double height;","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"tlyi"},"content":"    private final double weight;","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"tlyi"},"content":"    public CalculateBmiCommand(double height, double weight) {","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"tlyi"},"content":"        this.height \u003d height;","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"tlyi"},"content":"        this.weight \u003d weight;","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":31,"author":{"gitId":"tlyi"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"tlyi"},"content":"    public CommandResult execute() {","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"tlyi"},"content":"        try {","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"tlyi"},"content":"            final double bmi \u003d super.profile.calculateBmi(this.height, this.weight);","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"tlyi"},"content":"            return new CommandResult(String.format(MESSAGE_SUCCESS, bmi, super.profile.retrieveBmiStatus(bmi)));","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"tlyi"},"content":"        } catch (InvalidCharacteristicException e) {","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"tlyi"},"content":"            return new CommandResult(e.getMessage());","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":39,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":40,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":41,"author":{"gitId":"tlyi"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"tlyi":41}},{"path":"src/main/java/seedu/duke/logic/commands/CalculateBmiWithProfileCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.logic.commands;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"tlyi"},"content":"import seedu.duke.data.profile.Profile;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"tlyi"},"content":"import seedu.duke.data.profile.exceptions.InvalidCharacteristicException;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"tlyi"},"content":"/**","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"tlyi"},"content":" * Represents the command that when executed, calculates the BMI of the current Profile.","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"tlyi"},"content":" */","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"tlyi"},"content":"public class CalculateBmiWithProfileCommand extends Command {","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_COMMAND_FORMAT \u003d","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"tlyi"},"content":"            CommandMessages.QUOTATION + COMMAND_WORD_BMI + CommandMessages.QUOTATION;","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Your BMI value according to your current profile is:\"","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"tlyi"},"content":"            + CommandMessages.INDENTED_LS + \"%1$,.1f (%2$s)\";","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"weidak"},"content":"    public static final String MESSAGE_UNINITIALIZED_PROFILE \u003d \"Your profile has not been initialized yet.\";","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"weidak"},"content":"    private void checkIfCommandShouldExecute() throws InvalidCharacteristicException {","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"weidak"},"content":"        if (!super.profile.getProfileWeight().isValid()) {","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"weidak"},"content":"            throw new InvalidCharacteristicException(Profile.ERROR_WEIGHT);","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"weidak"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"weidak"},"content":"        if (!super.profile.getProfileHeight().isValid()) {","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"weidak"},"content":"            throw new InvalidCharacteristicException(Profile.ERROR_HEIGHT);","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"weidak"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"tlyi"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"tlyi"},"content":"    public CommandResult execute() {","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"weidak"},"content":"        try {","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"weidak"},"content":"            checkIfCommandShouldExecute();","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"tlyi"},"content":"            final double bmi \u003d super.profile.calculateBmi();","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"tlyi"},"content":"            return new CommandResult(String.format(MESSAGE_SUCCESS, bmi, super.profile.retrieveBmiStatus(bmi)));","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"weidak"},"content":"        } catch (InvalidCharacteristicException e) {","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"weidak"},"content":"            return new CommandResult(MESSAGE_UNINITIALIZED_PROFILE);","lastModifiedDate":"2021-10-13"},{"lineNumber":33,"author":{"gitId":"weidak"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":34,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":35,"author":{"gitId":"tlyi"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"weidak":15,"tlyi":20}},{"path":"src/main/java/seedu/duke/logic/commands/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.logic.commands;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"tlyi"},"content":"import seedu.duke.data.DataManager;","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"tlyi"},"content":"import seedu.duke.data.item.ItemBank;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"tlyi"},"content":"import seedu.duke.data.item.exercise.ExerciseList;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"tlyi"},"content":"import seedu.duke.data.item.exercise.FutureExerciseList;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"tlyi"},"content":"import seedu.duke.data.item.food.FoodList;","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"tlyi"},"content":"import seedu.duke.data.profile.Profile;","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"tlyi"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"tlyi"},"content":"/**","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"tlyi"},"content":" * Abstract class used to represent executable Commands.","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"tlyi"},"content":" * All Commands can be executed to return a CommandResult.","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"tlyi"},"content":" */","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"tlyi"},"content":"public abstract class Command {","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"tlyi"},"content":"    public static final String COMMAND_PREFIX_DELIMITER \u003d \"/\";","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"tlyi"},"content":"    public static final String COMMAND_PREFIX_EXERCISE \u003d \"e\";","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"xingjie99"},"content":"    public static final String COMMAND_PREFIX_UPCOMING_EXERCISE \u003d \"u\";","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"tlyi"},"content":"    public static final String COMMAND_PREFIX_RECURRING \u003d \"r\";","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"tlyi"},"content":"    public static final String COMMAND_PREFIX_FOOD \u003d \"f\";","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"tlyi"},"content":"    public static final String COMMAND_PREFIX_EXERCISE_BANK \u003d \"ebank\";","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"tlyi"},"content":"    public static final String COMMAND_PREFIX_FOOD_BANK \u003d \"fbank\";","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"tlyi"},"content":"    public static final String COMMAND_PREFIX_CALORIES \u003d \"c\";","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"tlyi"},"content":"    public static final String COMMAND_PREFIX_NAME \u003d \"n\";","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"tlyi"},"content":"    public static final String COMMAND_PREFIX_HEIGHT \u003d \"h\";","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"tlyi"},"content":"    public static final String COMMAND_PREFIX_WEIGHT \u003d \"w\";","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"tryyang2001"},"content":"    public static final String COMMAND_PREFIX_GOAL \u003d \"g\";","lastModifiedDate":"2021-10-14"},{"lineNumber":29,"author":{"gitId":"tlyi"},"content":"    public static final String COMMAND_PREFIX_DATE \u003d \"d\";","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"tlyi"},"content":"    public static final String COMMAND_PREFIX_TIME \u003d \"t\";","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"tlyi"},"content":"    public static final String COMMAND_PREFIX_GENDER \u003d \"s\";","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"tlyi"},"content":"    public static final String COMMAND_PREFIX_AGE \u003d \"a\";","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"tlyi"},"content":"    public static final String COMMAND_PREFIX_ACTIVITY_FACTOR \u003d \"x\";","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"xingjie99"},"content":"    public static final String COMMAND_PREFIX_START_DATE \u003d \":\";","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"xingjie99"},"content":"    public static final String COMMAND_PREFIX_END_DATE \u003d \"-\";","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"xingjie99"},"content":"    public static final String COMMAND_PREFIX_DAY_OF_THE_WEEK \u003d \"@\";","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"tlyi"},"content":"    public static final String COMMAND_WORD_ADD \u003d \"add\";","lastModifiedDate":"2021-10-10"},{"lineNumber":38,"author":{"gitId":"tlyi"},"content":"    public static final String COMMAND_WORD_DELETE \u003d \"delete\";","lastModifiedDate":"2021-10-10"},{"lineNumber":39,"author":{"gitId":"tlyi"},"content":"    public static final String COMMAND_WORD_VIEW \u003d \"view\";","lastModifiedDate":"2021-10-10"},{"lineNumber":40,"author":{"gitId":"xingjie99"},"content":"    public static final String COMMAND_WORD_EDIT \u003d \"edit\";","lastModifiedDate":"2021-10-24"},{"lineNumber":41,"author":{"gitId":"tlyi"},"content":"    public static final String COMMAND_WORD_BMI \u003d \"bmi\";","lastModifiedDate":"2021-10-10"},{"lineNumber":42,"author":{"gitId":"tlyi"},"content":"    public static final String COMMAND_WORD_PROFILE \u003d \"profile\";","lastModifiedDate":"2021-10-13"},{"lineNumber":43,"author":{"gitId":"tryyang2001"},"content":"    public static final String COMMAND_WORD_DELETE_ALL \u003d \"all\";","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"tlyi"},"content":"    public static final double NULL_DOUBLE \u003d 0;","lastModifiedDate":"2021-10-19"},{"lineNumber":45,"author":{"gitId":"tlyi"},"content":"    public static final int NULL_INT \u003d 0;","lastModifiedDate":"2021-10-19"},{"lineNumber":46,"author":{"gitId":"tlyi"},"content":"    public static final char NULL_CHAR \u003d Character.MIN_VALUE;","lastModifiedDate":"2021-10-19"},{"lineNumber":47,"author":{"gitId":"tlyi"},"content":"    public static final int NULL_CALORIES \u003d -1;","lastModifiedDate":"2021-10-19"},{"lineNumber":48,"author":{"gitId":"tlyi"},"content":"    public static final String NULL_STRING \u003d \"\";","lastModifiedDate":"2021-10-19"},{"lineNumber":49,"author":{"gitId":"tlyi"},"content":"    public static final LocalDate NULL_DATE \u003d LocalDate.MIN;","lastModifiedDate":"2021-10-24"},{"lineNumber":50,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":51,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":52,"author":{"gitId":"tlyi"},"content":"    protected Profile profile;","lastModifiedDate":"2021-10-10"},{"lineNumber":53,"author":{"gitId":"tlyi"},"content":"    protected ExerciseList exerciseItems;","lastModifiedDate":"2021-10-11"},{"lineNumber":54,"author":{"gitId":"tlyi"},"content":"    protected FoodList foodItems;","lastModifiedDate":"2021-10-11"},{"lineNumber":55,"author":{"gitId":"xingjie99"},"content":"    protected FutureExerciseList futureExerciseItems;","lastModifiedDate":"2021-10-18"},{"lineNumber":56,"author":{"gitId":"tlyi"},"content":"    protected ItemBank exerciseBank;","lastModifiedDate":"2021-10-19"},{"lineNumber":57,"author":{"gitId":"tlyi"},"content":"    protected ItemBank foodBank;","lastModifiedDate":"2021-10-19"},{"lineNumber":58,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":59,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":60,"author":{"gitId":"tlyi"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":61,"author":{"gitId":"tlyi"},"content":"     * Returns the appropriate CommandResult after execution of the command.","lastModifiedDate":"2021-10-10"},{"lineNumber":62,"author":{"gitId":"tlyi"},"content":"     * Each child class that inherits this class represents an executable command and will have its own implementation","lastModifiedDate":"2021-10-10"},{"lineNumber":63,"author":{"gitId":"tlyi"},"content":"     * of this method specific to its functionality.","lastModifiedDate":"2021-10-10"},{"lineNumber":64,"author":{"gitId":"tlyi"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":65,"author":{"gitId":"tlyi"},"content":"    public abstract CommandResult execute();","lastModifiedDate":"2021-10-10"},{"lineNumber":66,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":67,"author":{"gitId":"tlyi"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":68,"author":{"gitId":"tlyi"},"content":"     * Provides the necessary data structures for the command to operate on.","lastModifiedDate":"2021-10-12"},{"lineNumber":69,"author":{"gitId":"tlyi"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":70,"author":{"gitId":"tlyi"},"content":"    public void setData(DataManager dataManager) {","lastModifiedDate":"2021-10-27"},{"lineNumber":71,"author":{"gitId":"tlyi"},"content":"        this.profile \u003d dataManager.getProfile();","lastModifiedDate":"2021-10-27"},{"lineNumber":72,"author":{"gitId":"tryyang2001"},"content":"        this.exerciseItems \u003d dataManager.getFilteredExerciseItems();","lastModifiedDate":"2021-10-28"},{"lineNumber":73,"author":{"gitId":"tryyang2001"},"content":"        this.foodItems \u003d dataManager.getFilteredFoodItems();","lastModifiedDate":"2021-10-28"},{"lineNumber":74,"author":{"gitId":"tlyi"},"content":"        this.futureExerciseItems \u003d dataManager.getFutureExerciseItems();","lastModifiedDate":"2021-10-27"},{"lineNumber":75,"author":{"gitId":"tlyi"},"content":"        this.exerciseBank \u003d dataManager.getExerciseBank();","lastModifiedDate":"2021-10-27"},{"lineNumber":76,"author":{"gitId":"tlyi"},"content":"        this.foodBank \u003d dataManager.getFoodBank();","lastModifiedDate":"2021-10-27"},{"lineNumber":77,"author":{"gitId":"tlyi"},"content":"        assert profile !\u003d null : \"Profile supplied to command should not be null\";","lastModifiedDate":"2021-10-13"},{"lineNumber":78,"author":{"gitId":"tlyi"},"content":"        assert exerciseItems !\u003d null : \"Exercise items supplied to command should not be null\";","lastModifiedDate":"2021-10-13"},{"lineNumber":79,"author":{"gitId":"tlyi"},"content":"        assert foodItems !\u003d null : \"Food items supplied to command should not be null\";","lastModifiedDate":"2021-10-13"},{"lineNumber":80,"author":{"gitId":"xingjie99"},"content":"        assert futureExerciseItems !\u003d null : \"Future exercise items supplied to command should not be null\";","lastModifiedDate":"2021-10-18"},{"lineNumber":81,"author":{"gitId":"tlyi"},"content":"        assert exerciseBank !\u003d null : \"Exercise bank supplied to command should not be null\";","lastModifiedDate":"2021-10-27"},{"lineNumber":82,"author":{"gitId":"tlyi"},"content":"        assert foodBank !\u003d null : \"Food bank supplied to command should not be null\";","lastModifiedDate":"2021-10-27"},{"lineNumber":83,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":84,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":85,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":86,"author":{"gitId":"tlyi"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":87,"author":{"gitId":"tlyi"},"content":"     * Returns true if the command requires the profile storage file to be rewritten after execution.","lastModifiedDate":"2021-10-12"},{"lineNumber":88,"author":{"gitId":"tlyi"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":89,"author":{"gitId":"tlyi"},"content":"     * @param command Command that has just been executed","lastModifiedDate":"2021-10-12"},{"lineNumber":90,"author":{"gitId":"tlyi"},"content":"     * @return True if profile storage file is to be rewritten after execution of the command","lastModifiedDate":"2021-10-12"},{"lineNumber":91,"author":{"gitId":"tlyi"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":92,"author":{"gitId":"tlyi"},"content":"    public static boolean requiresProfileStorageRewrite(Command command) {","lastModifiedDate":"2021-10-12"},{"lineNumber":93,"author":{"gitId":"tlyi"},"content":"        return command instanceof ProfileUpdateCommand;","lastModifiedDate":"2021-10-21"},{"lineNumber":94,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":95,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":96,"author":{"gitId":"tlyi"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":97,"author":{"gitId":"tlyi"},"content":"     * Returns true if the command requires the exercise list storage file to be rewritten after execution.","lastModifiedDate":"2021-10-12"},{"lineNumber":98,"author":{"gitId":"tlyi"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":99,"author":{"gitId":"tlyi"},"content":"     * @param command Command that has just been executed","lastModifiedDate":"2021-10-12"},{"lineNumber":100,"author":{"gitId":"tlyi"},"content":"     * @return True if exercise list storage file is to be rewritten after execution of the command","lastModifiedDate":"2021-10-12"},{"lineNumber":101,"author":{"gitId":"tlyi"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":102,"author":{"gitId":"tlyi"},"content":"    public static boolean requiresExerciseListStorageRewrite(Command command) {","lastModifiedDate":"2021-10-12"},{"lineNumber":103,"author":{"gitId":"tlyi"},"content":"        return command instanceof AddExerciseCommand","lastModifiedDate":"2021-10-12"},{"lineNumber":104,"author":{"gitId":"tlyi"},"content":"                || command instanceof DeleteExerciseCommand;","lastModifiedDate":"2021-10-12"},{"lineNumber":105,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":106,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":107,"author":{"gitId":"tlyi"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":108,"author":{"gitId":"tlyi"},"content":"     * Returns true if the command requires the food list storage file to be rewritten after execution.","lastModifiedDate":"2021-10-12"},{"lineNumber":109,"author":{"gitId":"tlyi"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":110,"author":{"gitId":"tlyi"},"content":"     * @param command Command that has just been executed","lastModifiedDate":"2021-10-12"},{"lineNumber":111,"author":{"gitId":"tlyi"},"content":"     * @return True if food list storage file is to be rewritten after execution of the command","lastModifiedDate":"2021-10-12"},{"lineNumber":112,"author":{"gitId":"tlyi"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":113,"author":{"gitId":"tlyi"},"content":"    public static boolean requiresFoodListStorageRewrite(Command command) {","lastModifiedDate":"2021-10-12"},{"lineNumber":114,"author":{"gitId":"tlyi"},"content":"        return command instanceof AddFoodCommand","lastModifiedDate":"2021-10-12"},{"lineNumber":115,"author":{"gitId":"tlyi"},"content":"                || command instanceof DeleteFoodCommand;","lastModifiedDate":"2021-10-12"},{"lineNumber":116,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":117,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":118,"author":{"gitId":"tlyi"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":119,"author":{"gitId":"tlyi"},"content":"     * Returns true if the command requires the future exercise list storage file to be rewritten after execution.","lastModifiedDate":"2021-10-21"},{"lineNumber":120,"author":{"gitId":"tlyi"},"content":"     *","lastModifiedDate":"2021-10-21"},{"lineNumber":121,"author":{"gitId":"tlyi"},"content":"     * @param command Command that has just been executed","lastModifiedDate":"2021-10-21"},{"lineNumber":122,"author":{"gitId":"tlyi"},"content":"     * @return True if future exercise list storage file is to be rewritten after execution of the command","lastModifiedDate":"2021-10-21"},{"lineNumber":123,"author":{"gitId":"tlyi"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":124,"author":{"gitId":"xingjie99"},"content":"    public static boolean requiresFutureExerciseListStorageRewrite(Command command) {","lastModifiedDate":"2021-10-18"},{"lineNumber":125,"author":{"gitId":"xingjie99"},"content":"        return command instanceof AddFutureExerciseCommand","lastModifiedDate":"2021-10-18"},{"lineNumber":126,"author":{"gitId":"tlyi"},"content":"                || command instanceof DeleteFutureExerciseCommand","lastModifiedDate":"2021-10-21"},{"lineNumber":127,"author":{"gitId":"tlyi"},"content":"                || command instanceof AddRecurringExerciseCommand;","lastModifiedDate":"2021-10-21"},{"lineNumber":128,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":129,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":130,"author":{"gitId":"tlyi"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":131,"author":{"gitId":"tlyi"},"content":"     * Returns true if the command requires the food bank storage file to be rewritten after execution.","lastModifiedDate":"2021-10-21"},{"lineNumber":132,"author":{"gitId":"tlyi"},"content":"     *","lastModifiedDate":"2021-10-21"},{"lineNumber":133,"author":{"gitId":"tlyi"},"content":"     * @param command Command that has just been executed","lastModifiedDate":"2021-10-21"},{"lineNumber":134,"author":{"gitId":"tlyi"},"content":"     * @return True if food bank storage file is to be rewritten after execution of the command","lastModifiedDate":"2021-10-21"},{"lineNumber":135,"author":{"gitId":"tlyi"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":136,"author":{"gitId":"tlyi"},"content":"    public static boolean requiresFoodBankStorageRewrite(Command command) {","lastModifiedDate":"2021-10-21"},{"lineNumber":137,"author":{"gitId":"tlyi"},"content":"        return command instanceof AddFoodBankCommand","lastModifiedDate":"2021-10-21"},{"lineNumber":138,"author":{"gitId":"xingjie99"},"content":"                || command instanceof DeleteFoodBankCommand","lastModifiedDate":"2021-10-24"},{"lineNumber":139,"author":{"gitId":"xingjie99"},"content":"                || command instanceof EditFoodBankCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":140,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":141,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":142,"author":{"gitId":"tlyi"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":143,"author":{"gitId":"tlyi"},"content":"     * Returns true if the command requires the exercise bank storage file to be rewritten after execution.","lastModifiedDate":"2021-10-21"},{"lineNumber":144,"author":{"gitId":"tlyi"},"content":"     *","lastModifiedDate":"2021-10-21"},{"lineNumber":145,"author":{"gitId":"tlyi"},"content":"     * @param command Command that has just been executed","lastModifiedDate":"2021-10-21"},{"lineNumber":146,"author":{"gitId":"tlyi"},"content":"     * @return True if food bank storage file is to be rewritten after execution of the command","lastModifiedDate":"2021-10-21"},{"lineNumber":147,"author":{"gitId":"tlyi"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":148,"author":{"gitId":"tlyi"},"content":"    public static boolean requiresExerciseBankStorageRewrite(Command command) {","lastModifiedDate":"2021-10-21"},{"lineNumber":149,"author":{"gitId":"tlyi"},"content":"        return command instanceof AddExerciseBankCommand","lastModifiedDate":"2021-10-21"},{"lineNumber":150,"author":{"gitId":"xingjie99"},"content":"                || command instanceof DeleteExerciseBankCommand","lastModifiedDate":"2021-10-24"},{"lineNumber":151,"author":{"gitId":"xingjie99"},"content":"                || command instanceof EditExerciseBankCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":152,"author":{"gitId":"xingjie99"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":153,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":154,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":155,"author":{"gitId":"tlyi"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"tttyyzzz":1,"xingjie99":16,"tryyang2001":4,"tlyi":134}},{"path":"src/main/java/seedu/duke/logic/commands/CommandMessages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.logic.commands;","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":3,"author":{"gitId":"tlyi"},"content":"/**","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"tlyi"},"content":" * Contains all the general error messages that can be returned from Command classes.","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"tlyi"},"content":" */","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"tlyi"},"content":"public class CommandMessages {","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"tlyi"},"content":"    public static final String LS \u003d System.lineSeparator();","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"tlyi"},"content":"    public static final String TAB \u003d \"\\t\";","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"tlyi"},"content":"    public static final String INDENTED_LS \u003d CommandMessages.LS + TAB;","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"tlyi"},"content":"    public static final String QUOTATION \u003d \"\\\"\";","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_EMPTY_EXERCISE_LIST \u003d \"No exercise items yet in the past 7 days!\";","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_EMPTY_FUTURE_EXERCISE_LIST \u003d \"No future exercise items yet!\";","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_EMPTY_FOOD_LIST \u003d \"No food items yet in the past 7 days!\";","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_EMPTY_EXERCISE_BANK \u003d \"No exercise items yet in the exercise bank!\";","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_EMPTY_FOOD_BANK \u003d \"No food items yet in the food bank!\";","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_ONLY_ONE_IN_LIST \u003d \"You have only 1 item in the list!\";","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_LIST_OUT_OF_BOUNDS \u003d \"Please input a valid item number from 1 to %s\";","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_INVALID_EXERCISE_NOT_IN_BANK \u003d \"%s was not found in the exercise bank! \"","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"tlyi"},"content":"            + \"Please specify the calories for this item.\";","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_INVALID_FOOD_NOT_IN_BANK \u003d \"%s was not found in the food bank! \"","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"tlyi"},"content":"            + \"Please specify the calories for this item.\";","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"tlyi"},"content":"    public static final String LONG_SPACE \u003d \"              \";","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"tlyi"},"content":"    public static final String BANK_SPACE \u003d \"          \";","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_EXERCISE_LIST_FORMAT \u003d","lastModifiedDate":"2021-10-27"},{"lineNumber":25,"author":{"gitId":"tlyi"},"content":"            Command.COMMAND_PREFIX_EXERCISE + Command.COMMAND_PREFIX_DELIMITER + LONG_SPACE + \"exercise list\";","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_FOOD_LIST_FORMAT \u003d","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"tlyi"},"content":"            Command.COMMAND_PREFIX_FOOD + Command.COMMAND_PREFIX_DELIMITER + LONG_SPACE + \"food list\";","lastModifiedDate":"2021-10-27"},{"lineNumber":28,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_EXERCISE_BANK_FORMAT \u003d","lastModifiedDate":"2021-10-27"},{"lineNumber":29,"author":{"gitId":"tlyi"},"content":"            Command.COMMAND_PREFIX_EXERCISE_BANK + Command.COMMAND_PREFIX_DELIMITER + BANK_SPACE + \"exercise bank\";","lastModifiedDate":"2021-10-27"},{"lineNumber":30,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_FOOD_BANK_FORMAT \u003d","lastModifiedDate":"2021-10-27"},{"lineNumber":31,"author":{"gitId":"tlyi"},"content":"            Command.COMMAND_PREFIX_FOOD_BANK + Command.COMMAND_PREFIX_DELIMITER + BANK_SPACE + \"food bank\";","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_UPCOMING_EXERCISE_LIST_FORMAT \u003d","lastModifiedDate":"2021-10-27"},{"lineNumber":33,"author":{"gitId":"tlyi"},"content":"            Command.COMMAND_PREFIX_UPCOMING_EXERCISE + Command.COMMAND_PREFIX_DELIMITER","lastModifiedDate":"2021-10-27"},{"lineNumber":34,"author":{"gitId":"tlyi"},"content":"                    + LONG_SPACE + \"upcoming exercise list\";","lastModifiedDate":"2021-10-27"},{"lineNumber":35,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_RECURRING_EXERCISE_FORMAT \u003d","lastModifiedDate":"2021-10-27"},{"lineNumber":36,"author":{"gitId":"tlyi"},"content":"            Command.COMMAND_PREFIX_RECURRING + Command.COMMAND_PREFIX_DELIMITER + LONG_SPACE + \"recurring exercise\";","lastModifiedDate":"2021-10-27"},{"lineNumber":37,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_ADD_COMMAND_INVALID_FORMAT \u003d","lastModifiedDate":"2021-10-27"},{"lineNumber":38,"author":{"gitId":"tlyi"},"content":"            \"Oops! Invalid format! Trying to add to your lists?\" + LS","lastModifiedDate":"2021-10-27"},{"lineNumber":39,"author":{"gitId":"tlyi"},"content":"                    + \"Type \" + QUOTATION + Command.COMMAND_WORD_ADD + QUOTATION","lastModifiedDate":"2021-10-27"},{"lineNumber":40,"author":{"gitId":"tlyi"},"content":"                    + \" followed by one of the following prefixes:\" + LS + INDENTED_LS","lastModifiedDate":"2021-10-27"},{"lineNumber":41,"author":{"gitId":"tlyi"},"content":"                    + MESSAGE_EXERCISE_LIST_FORMAT + INDENTED_LS","lastModifiedDate":"2021-10-27"},{"lineNumber":42,"author":{"gitId":"tlyi"},"content":"                    + MESSAGE_FOOD_LIST_FORMAT + INDENTED_LS","lastModifiedDate":"2021-10-27"},{"lineNumber":43,"author":{"gitId":"tlyi"},"content":"                    + MESSAGE_EXERCISE_BANK_FORMAT + INDENTED_LS","lastModifiedDate":"2021-10-27"},{"lineNumber":44,"author":{"gitId":"tlyi"},"content":"                    + MESSAGE_FOOD_BANK_FORMAT + INDENTED_LS","lastModifiedDate":"2021-10-27"},{"lineNumber":45,"author":{"gitId":"tlyi"},"content":"                    + MESSAGE_RECURRING_EXERCISE_FORMAT + LS + LS","lastModifiedDate":"2021-10-27"},{"lineNumber":46,"author":{"gitId":"tlyi"},"content":"                    + \"Type \" + QUOTATION + HelpCommand.COMMAND_WORD + QUOTATION","lastModifiedDate":"2021-10-27"},{"lineNumber":47,"author":{"gitId":"tlyi"},"content":"                    + \" if you need more details on how to add to each list!\";","lastModifiedDate":"2021-10-27"},{"lineNumber":48,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_DELETE_COMMAND_INVALID_FORMAT \u003d","lastModifiedDate":"2021-10-27"},{"lineNumber":49,"author":{"gitId":"tlyi"},"content":"            \"Oops! Invalid format! Trying to delete from your lists?\" + LS","lastModifiedDate":"2021-10-27"},{"lineNumber":50,"author":{"gitId":"tlyi"},"content":"                    + \"Type \" + QUOTATION + Command.COMMAND_WORD_DELETE + QUOTATION","lastModifiedDate":"2021-10-27"},{"lineNumber":51,"author":{"gitId":"tlyi"},"content":"                    + \" followed by one of the following prefixes:\" + LS + INDENTED_LS","lastModifiedDate":"2021-10-27"},{"lineNumber":52,"author":{"gitId":"tlyi"},"content":"                    + MESSAGE_EXERCISE_LIST_FORMAT + INDENTED_LS","lastModifiedDate":"2021-10-27"},{"lineNumber":53,"author":{"gitId":"tlyi"},"content":"                    + MESSAGE_FOOD_LIST_FORMAT + INDENTED_LS","lastModifiedDate":"2021-10-27"},{"lineNumber":54,"author":{"gitId":"tlyi"},"content":"                    + MESSAGE_EXERCISE_BANK_FORMAT + INDENTED_LS","lastModifiedDate":"2021-10-27"},{"lineNumber":55,"author":{"gitId":"tlyi"},"content":"                    + MESSAGE_FOOD_BANK_FORMAT + INDENTED_LS","lastModifiedDate":"2021-10-27"},{"lineNumber":56,"author":{"gitId":"tlyi"},"content":"                    + MESSAGE_UPCOMING_EXERCISE_LIST_FORMAT + LS + LS","lastModifiedDate":"2021-10-27"},{"lineNumber":57,"author":{"gitId":"tlyi"},"content":"                    + \"Type \" + QUOTATION + HelpCommand.COMMAND_WORD + QUOTATION","lastModifiedDate":"2021-10-27"},{"lineNumber":58,"author":{"gitId":"tlyi"},"content":"                    + \" if you need more details on how to delete from each list!\";","lastModifiedDate":"2021-10-27"},{"lineNumber":59,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_VIEW_COMMAND_INVALID_FORMAT \u003d","lastModifiedDate":"2021-10-27"},{"lineNumber":60,"author":{"gitId":"tlyi"},"content":"            \"Oops! Invalid format! Trying to view your lists?\" + LS","lastModifiedDate":"2021-10-27"},{"lineNumber":61,"author":{"gitId":"tlyi"},"content":"                    + \"Type \" + QUOTATION + Command.COMMAND_WORD_VIEW + QUOTATION","lastModifiedDate":"2021-10-27"},{"lineNumber":62,"author":{"gitId":"tlyi"},"content":"                    + \" followed by one of the following prefixes:\" + LS + INDENTED_LS","lastModifiedDate":"2021-10-27"},{"lineNumber":63,"author":{"gitId":"tlyi"},"content":"                    + MESSAGE_EXERCISE_LIST_FORMAT + INDENTED_LS","lastModifiedDate":"2021-10-27"},{"lineNumber":64,"author":{"gitId":"tlyi"},"content":"                    + MESSAGE_FOOD_LIST_FORMAT + INDENTED_LS","lastModifiedDate":"2021-10-27"},{"lineNumber":65,"author":{"gitId":"tlyi"},"content":"                    + MESSAGE_EXERCISE_BANK_FORMAT + INDENTED_LS","lastModifiedDate":"2021-10-27"},{"lineNumber":66,"author":{"gitId":"tlyi"},"content":"                    + MESSAGE_FOOD_BANK_FORMAT + INDENTED_LS","lastModifiedDate":"2021-10-27"},{"lineNumber":67,"author":{"gitId":"tlyi"},"content":"                    + MESSAGE_UPCOMING_EXERCISE_LIST_FORMAT + LS + LS","lastModifiedDate":"2021-10-27"},{"lineNumber":68,"author":{"gitId":"tlyi"},"content":"                    + \"E.G: view e/\";","lastModifiedDate":"2021-10-27"},{"lineNumber":69,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_EDIT_COMMAND_INVALID_FORMAT \u003d","lastModifiedDate":"2021-10-27"},{"lineNumber":70,"author":{"gitId":"tlyi"},"content":"            \"Oops! Invalid format! Trying to edit your lists?\" + LS","lastModifiedDate":"2021-10-27"},{"lineNumber":71,"author":{"gitId":"tlyi"},"content":"                    + \"Type \" + QUOTATION + Command.COMMAND_WORD_EDIT + QUOTATION","lastModifiedDate":"2021-10-27"},{"lineNumber":72,"author":{"gitId":"tlyi"},"content":"                    + \" followed by one of the following prefixes:\" + LS + INDENTED_LS","lastModifiedDate":"2021-10-27"},{"lineNumber":73,"author":{"gitId":"tlyi"},"content":"                    + MESSAGE_EXERCISE_BANK_FORMAT + INDENTED_LS","lastModifiedDate":"2021-10-27"},{"lineNumber":74,"author":{"gitId":"tlyi"},"content":"                    + MESSAGE_FOOD_BANK_FORMAT + INDENTED_LS","lastModifiedDate":"2021-10-27"},{"lineNumber":75,"author":{"gitId":"tlyi"},"content":"                    + MESSAGE_UPCOMING_EXERCISE_LIST_FORMAT + LS + LS","lastModifiedDate":"2021-10-27"},{"lineNumber":76,"author":{"gitId":"tlyi"},"content":"                    + \"Type \" + QUOTATION + HelpCommand.COMMAND_WORD + QUOTATION","lastModifiedDate":"2021-10-27"},{"lineNumber":77,"author":{"gitId":"tlyi"},"content":"                    + \" if you need more details on how to edit each list!\";","lastModifiedDate":"2021-10-27"},{"lineNumber":78,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_ITEM_NAME_FORMAT \u003d","lastModifiedDate":"2021-10-27"},{"lineNumber":79,"author":{"gitId":"tlyi"},"content":"            Command.COMMAND_PREFIX_NAME + Command.COMMAND_PREFIX_DELIMITER + LONG_SPACE + \"name\";","lastModifiedDate":"2021-10-27"},{"lineNumber":80,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_ITEM_CALORIES_FORMAT \u003d","lastModifiedDate":"2021-10-27"},{"lineNumber":81,"author":{"gitId":"tlyi"},"content":"            Command.COMMAND_PREFIX_CALORIES + Command.COMMAND_PREFIX_DELIMITER + LONG_SPACE + \"calories\";","lastModifiedDate":"2021-10-27"},{"lineNumber":82,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_ITEM_DATE_FORMAT \u003d","lastModifiedDate":"2021-10-27"},{"lineNumber":83,"author":{"gitId":"tlyi"},"content":"            Command.COMMAND_PREFIX_DATE + Command.COMMAND_PREFIX_DELIMITER + LONG_SPACE + \"date (DD-MM-YYYY)\";","lastModifiedDate":"2021-10-27"},{"lineNumber":84,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_EDIT_BANK_NEED_DETAILS \u003d","lastModifiedDate":"2021-10-27"},{"lineNumber":85,"author":{"gitId":"tlyi"},"content":"            \"Please specify what you wish to change about this item using the following prefixes:\" + INDENTED_LS","lastModifiedDate":"2021-10-27"},{"lineNumber":86,"author":{"gitId":"tlyi"},"content":"                    + MESSAGE_ITEM_NAME_FORMAT + INDENTED_LS","lastModifiedDate":"2021-10-27"},{"lineNumber":87,"author":{"gitId":"tlyi"},"content":"                    + MESSAGE_ITEM_CALORIES_FORMAT;","lastModifiedDate":"2021-10-27"},{"lineNumber":88,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_EDIT_UPCOMING_EXERCISE_LIST_NEED_DETAILS \u003d","lastModifiedDate":"2021-10-27"},{"lineNumber":89,"author":{"gitId":"tlyi"},"content":"            \"Please specify what you wish to change about this item using the following prefixes:\" + INDENTED_LS","lastModifiedDate":"2021-10-27"},{"lineNumber":90,"author":{"gitId":"tlyi"},"content":"                    + MESSAGE_ITEM_NAME_FORMAT + INDENTED_LS","lastModifiedDate":"2021-10-27"},{"lineNumber":91,"author":{"gitId":"tlyi"},"content":"                    + MESSAGE_ITEM_CALORIES_FORMAT + INDENTED_LS","lastModifiedDate":"2021-10-27"},{"lineNumber":92,"author":{"gitId":"tlyi"},"content":"                    + MESSAGE_ITEM_DATE_FORMAT;","lastModifiedDate":"2021-10-27"},{"lineNumber":93,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":94,"author":{"gitId":"tlyi"},"content":"}","lastModifiedDate":"2021-10-27"},{"lineNumber":95,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":96,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"tlyi":96}},{"path":"src/main/java/seedu/duke/logic/commands/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.logic.commands;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"tlyi"},"content":"/**","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"tlyi"},"content":" * Represents the result of the execution of the commands to be displayed to the user.","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"tlyi"},"content":" */","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"tlyi"},"content":"public class CommandResult {","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"tlyi"},"content":"    public final String messageToBeShown;","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"tlyi"},"content":"    private boolean isBye \u003d false;","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"tlyi"},"content":"    public CommandResult(String messageToBeShown) {","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"tlyi"},"content":"        this.messageToBeShown \u003d messageToBeShown;","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"tlyi"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"tlyi"},"content":"    public String toString() {","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"tlyi"},"content":"        return this.messageToBeShown;","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"tlyi"},"content":"    public boolean isBye() {","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"tlyi"},"content":"        return isBye;","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"tlyi"},"content":"    public void setBye(boolean bye) {","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"tlyi"},"content":"        isBye \u003d bye;","lastModifiedDate":"2021-10-27"},{"lineNumber":25,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"tlyi"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"tlyi":26}},{"path":"src/main/java/seedu/duke/logic/commands/DeleteExerciseBankCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.logic.commands;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"tlyi"},"content":"import seedu.duke.data.item.exercise.Exercise;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"tlyi"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"tlyi"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"tlyi"},"content":"/**","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"tlyi"},"content":" * Represents the command that when executed, deletes an Exercise item from the ExerciseBank.","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"tlyi"},"content":" */","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"tlyi"},"content":"public class DeleteExerciseBankCommand extends Command {","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_COMMAND_FORMAT \u003d CommandMessages.QUOTATION + COMMAND_WORD_DELETE","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"tlyi"},"content":"            + \" \" + COMMAND_PREFIX_EXERCISE_BANK + COMMAND_PREFIX_DELIMITER + \"X\" + CommandMessages.QUOTATION","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"tlyi"},"content":"            + \", where X is the item number in the exercise bank list\";","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"An exercise item has been deleted from the exercise bank:\"","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"tlyi"},"content":"            + CommandMessages.INDENTED_LS + \"%s\"","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"tlyi"},"content":"            + CommandMessages.LS + \"Number of exercise item(s) left in the exercise bank: %2$d\";","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"tlyi"},"content":"    private static final String MESSAGE_EXERCISE_CLEAR \u003d \"All exercise items in the exercise bank have been removed.\";","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"tlyi"},"content":"    public static final String[] EXPECTED_PREFIXES \u003d {COMMAND_PREFIX_EXERCISE_BANK};","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"tlyi"},"content":"    private static Logger logger \u003d Logger.getLogger(DeleteExerciseBankCommand.class.getName());","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"tlyi"},"content":"    private final int itemIndex;","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"tlyi"},"content":"    private boolean isClear \u003d false;","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"tlyi"},"content":"    public DeleteExerciseBankCommand(int itemIndex) {","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"tlyi"},"content":"        this.itemIndex \u003d itemIndex; //-2","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"tlyi"},"content":"    public DeleteExerciseBankCommand(boolean isClear) {","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"tlyi"},"content":"        this.itemIndex \u003d -1;","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"tlyi"},"content":"        this.isClear \u003d isClear;","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"tlyi"},"content":"    @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":37,"author":{"gitId":"tlyi"},"content":"    public CommandResult execute() {","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"tlyi"},"content":"        if (this.isClear) {","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"tlyi"},"content":"            logger.log(Level.FINE, \"Clearing exercise bank\");","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"tlyi"},"content":"            super.exerciseBank.clearList();","lastModifiedDate":"2021-10-19"},{"lineNumber":41,"author":{"gitId":"tlyi"},"content":"            return new CommandResult(MESSAGE_EXERCISE_CLEAR);","lastModifiedDate":"2021-10-19"},{"lineNumber":42,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":43,"author":{"gitId":"tlyi"},"content":"        assert this.itemIndex \u003e 0 : \"Deleting an item only\";","lastModifiedDate":"2021-10-19"},{"lineNumber":44,"author":{"gitId":"tlyi"},"content":"        if (super.exerciseBank.getSize() \u003d\u003d 0) {","lastModifiedDate":"2021-10-19"},{"lineNumber":45,"author":{"gitId":"tlyi"},"content":"            logger.log(Level.WARNING, \"Exercise bank is empty.\");","lastModifiedDate":"2021-10-19"},{"lineNumber":46,"author":{"gitId":"tlyi"},"content":"            return new CommandResult(CommandMessages.MESSAGE_EMPTY_EXERCISE_BANK);","lastModifiedDate":"2021-10-27"},{"lineNumber":47,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":48,"author":{"gitId":"tlyi"},"content":"        logger.log(Level.FINE, \"Trying to delete item now\");","lastModifiedDate":"2021-10-19"},{"lineNumber":49,"author":{"gitId":"tlyi"},"content":"        try {","lastModifiedDate":"2021-10-19"},{"lineNumber":50,"author":{"gitId":"tlyi"},"content":"            Exercise deletedExercise;","lastModifiedDate":"2021-10-19"},{"lineNumber":51,"author":{"gitId":"tlyi"},"content":"            deletedExercise \u003d (Exercise) super.exerciseBank.deleteItem(this.itemIndex);","lastModifiedDate":"2021-10-19"},{"lineNumber":52,"author":{"gitId":"tlyi"},"content":"            return new CommandResult(String.format(MESSAGE_SUCCESS, deletedExercise, super.exerciseBank.getSize()));","lastModifiedDate":"2021-10-19"},{"lineNumber":53,"author":{"gitId":"tlyi"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-10-19"},{"lineNumber":54,"author":{"gitId":"tlyi"},"content":"            logger.log(Level.WARNING, \"Detected invalid exercise item index.\");","lastModifiedDate":"2021-10-19"},{"lineNumber":55,"author":{"gitId":"tlyi"},"content":"            if (super.exerciseBank.getSize() \u003d\u003d 1) {","lastModifiedDate":"2021-10-19"},{"lineNumber":56,"author":{"gitId":"tlyi"},"content":"                return new CommandResult(CommandMessages.MESSAGE_ONLY_ONE_IN_LIST);","lastModifiedDate":"2021-10-27"},{"lineNumber":57,"author":{"gitId":"tlyi"},"content":"            }","lastModifiedDate":"2021-10-19"},{"lineNumber":58,"author":{"gitId":"tlyi"},"content":"            return new CommandResult(String.format(","lastModifiedDate":"2021-10-27"},{"lineNumber":59,"author":{"gitId":"tlyi"},"content":"                    CommandMessages.MESSAGE_LIST_OUT_OF_BOUNDS, super.exerciseBank.getSize()));","lastModifiedDate":"2021-10-27"},{"lineNumber":60,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":61,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":62,"author":{"gitId":"tlyi"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"tlyi":62}},{"path":"src/main/java/seedu/duke/logic/commands/DeleteExerciseCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.logic.commands;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"tlyi"},"content":"import seedu.duke.data.item.exercise.Exercise;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"tlyi"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"xingjie99"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"xingjie99"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"tlyi"},"content":"/**","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"tlyi"},"content":" * Represents the command that when executed, deletes an Exercise item from the ExerciseList.","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"tlyi"},"content":" */","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"tlyi"},"content":"public class DeleteExerciseCommand extends Command {","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_COMMAND_FORMAT \u003d CommandMessages.QUOTATION + COMMAND_WORD_DELETE","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"tttyyzzz"},"content":"            + \" \" + COMMAND_PREFIX_EXERCISE + COMMAND_PREFIX_DELIMITER + \"INDEX \" + COMMAND_PREFIX_DATE","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"tlyi"},"content":"            + COMMAND_PREFIX_DELIMITER + \"DATE_IN_DD-MM-YYYY\" + CommandMessages.QUOTATION","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"tttyyzzz"},"content":"            + \", where INDEX is the item number in the exercise list\";","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"An exercise item has been deleted:\"","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"tlyi"},"content":"            + CommandMessages.INDENTED_LS + \"%s\"","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"tlyi"},"content":"            + CommandMessages.LS + \"Number of exercise item(s) left: %2$d\";","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"xingjie99"},"content":"    private static final String MESSAGE_EXERCISE_CLEAR \u003d \"All exercise items have been removed.\";","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"tryyang2001"},"content":"    private static Logger logger \u003d Logger.getLogger(DeleteExerciseCommand.class.getName());","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"tlyi"},"content":"    public static final String[] EXPECTED_PREFIXES \u003d {","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"tlyi"},"content":"            COMMAND_PREFIX_EXERCISE,","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"tlyi"},"content":"            COMMAND_PREFIX_DATE","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"tlyi"},"content":"    };","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"tlyi"},"content":"    private final int itemIndex;","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"tlyi"},"content":"    private final LocalDate date;","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"tryyang2001"},"content":"    private boolean isClear \u003d false;","lastModifiedDate":"2021-10-14"},{"lineNumber":32,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"tlyi"},"content":"    public DeleteExerciseCommand(int itemIndex, LocalDate date) {","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"tlyi"},"content":"        this.itemIndex \u003d itemIndex;","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"tlyi"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":37,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":38,"author":{"gitId":"tryyang2001"},"content":"    public DeleteExerciseCommand(boolean isClear) {","lastModifiedDate":"2021-10-14"},{"lineNumber":39,"author":{"gitId":"tryyang2001"},"content":"        this.itemIndex \u003d -1;","lastModifiedDate":"2021-10-14"},{"lineNumber":40,"author":{"gitId":"tryyang2001"},"content":"        this.isClear \u003d isClear;","lastModifiedDate":"2021-10-14"},{"lineNumber":41,"author":{"gitId":"tlyi"},"content":"        this.date \u003d LocalDate.now();","lastModifiedDate":"2021-10-19"},{"lineNumber":42,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":43,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":44,"author":{"gitId":"tlyi"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":45,"author":{"gitId":"tlyi"},"content":"    public CommandResult execute() {","lastModifiedDate":"2021-10-10"},{"lineNumber":46,"author":{"gitId":"tryyang2001"},"content":"        if (this.isClear) {","lastModifiedDate":"2021-10-14"},{"lineNumber":47,"author":{"gitId":"tryyang2001"},"content":"            logger.log(Level.FINE, \"Clearing exercise list\");","lastModifiedDate":"2021-10-14"},{"lineNumber":48,"author":{"gitId":"tryyang2001"},"content":"            super.exerciseItems.clearList();","lastModifiedDate":"2021-10-19"},{"lineNumber":49,"author":{"gitId":"xingjie99"},"content":"            return new CommandResult(MESSAGE_EXERCISE_CLEAR);","lastModifiedDate":"2021-10-11"},{"lineNumber":50,"author":{"gitId":"xingjie99"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":51,"author":{"gitId":"xingjie99"},"content":"        assert this.itemIndex \u003e 0 : \"Deleting an item only\";","lastModifiedDate":"2021-10-13"},{"lineNumber":52,"author":{"gitId":"tlyi"},"content":"        if (super.exerciseItems.getSize() \u003d\u003d 0) {","lastModifiedDate":"2021-10-11"},{"lineNumber":53,"author":{"gitId":"tryyang2001"},"content":"            logger.log(Level.WARNING, \"Exercise list is empty.\");","lastModifiedDate":"2021-10-13"},{"lineNumber":54,"author":{"gitId":"tlyi"},"content":"            return new CommandResult(CommandMessages.MESSAGE_EMPTY_EXERCISE_LIST);","lastModifiedDate":"2021-10-27"},{"lineNumber":55,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":56,"author":{"gitId":"tryyang2001"},"content":"        logger.log(Level.FINE, \"Trying to delete item now\");","lastModifiedDate":"2021-10-14"},{"lineNumber":57,"author":{"gitId":"tlyi"},"content":"        try {","lastModifiedDate":"2021-10-11"},{"lineNumber":58,"author":{"gitId":"tlyi"},"content":"            Exercise deletedExercise;","lastModifiedDate":"2021-10-11"},{"lineNumber":59,"author":{"gitId":"tryyang2001"},"content":"            deletedExercise \u003d super.exerciseItems.deleteItem(this.itemIndex, this.date); //edit by RY","lastModifiedDate":"2021-10-20"},{"lineNumber":60,"author":{"gitId":"tlyi"},"content":"            return new CommandResult(String.format(MESSAGE_SUCCESS, deletedExercise, super.exerciseItems.getSize()));","lastModifiedDate":"2021-10-11"},{"lineNumber":61,"author":{"gitId":"tlyi"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-10-11"},{"lineNumber":62,"author":{"gitId":"tryyang2001"},"content":"            logger.log(Level.WARNING, \"Detected invalid exercise item index.\");","lastModifiedDate":"2021-10-13"},{"lineNumber":63,"author":{"gitId":"tlyi"},"content":"            if (super.exerciseItems.getSize() \u003d\u003d 1) {","lastModifiedDate":"2021-10-11"},{"lineNumber":64,"author":{"gitId":"tlyi"},"content":"                return new CommandResult(CommandMessages.MESSAGE_ONLY_ONE_IN_LIST);","lastModifiedDate":"2021-10-27"},{"lineNumber":65,"author":{"gitId":"tlyi"},"content":"            }","lastModifiedDate":"2021-10-11"},{"lineNumber":66,"author":{"gitId":"tlyi"},"content":"            return new CommandResult(String.format(CommandMessages.MESSAGE_LIST_OUT_OF_BOUNDS,","lastModifiedDate":"2021-10-27"},{"lineNumber":67,"author":{"gitId":"tlyi"},"content":"                    super.exerciseItems.getSize()));","lastModifiedDate":"2021-10-27"},{"lineNumber":68,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":69,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":70,"author":{"gitId":"tlyi"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"tttyyzzz":2,"tryyang2001":15,"xingjie99":7,"tlyi":46}},{"path":"src/main/java/seedu/duke/logic/commands/DeleteFoodBankCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.logic.commands;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"tlyi"},"content":"import seedu.duke.data.item.food.Food;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"tlyi"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"tlyi"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"tlyi"},"content":"/**","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"tlyi"},"content":" * Represents the command that when executed, deletes a Food item from the FoodBank.","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"tlyi"},"content":" */","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"tlyi"},"content":"public class DeleteFoodBankCommand extends Command {","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_COMMAND_FORMAT \u003d CommandMessages.QUOTATION + COMMAND_WORD_DELETE","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"tlyi"},"content":"            + \" \" + COMMAND_PREFIX_FOOD_BANK + COMMAND_PREFIX_DELIMITER + \"X\" + CommandMessages.QUOTATION","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"tlyi"},"content":"            + \", where X is the item number in the food bank list\";","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"An food item has been deleted from the food bank:\"","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"tlyi"},"content":"            + CommandMessages.INDENTED_LS + \"%s\"","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"tlyi"},"content":"            + CommandMessages.LS + \"Number of food item(s) left in the food bank: %2$d\";","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"tlyi"},"content":"    private static final String MESSAGE_FOOD_CLEAR \u003d \"All food items in the food bank have been removed.\";","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"tlyi"},"content":"    public static final String[] EXPECTED_PREFIXES \u003d {COMMAND_PREFIX_FOOD_BANK};","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"tlyi"},"content":"    private static Logger logger \u003d Logger.getLogger(DeleteFoodBankCommand.class.getName());","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"tlyi"},"content":"    private final int itemIndex;","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"tlyi"},"content":"    private boolean isClear \u003d false;","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"tlyi"},"content":"    public DeleteFoodBankCommand(int itemIndex) {","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"tlyi"},"content":"        this.itemIndex \u003d itemIndex;","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"tlyi"},"content":"    public DeleteFoodBankCommand(boolean isClear) {","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"tlyi"},"content":"        this.itemIndex \u003d -1;","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"tlyi"},"content":"        this.isClear \u003d isClear;","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"tlyi"},"content":"    @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":37,"author":{"gitId":"tlyi"},"content":"    public CommandResult execute() {","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"tlyi"},"content":"        if (this.isClear) {","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"tlyi"},"content":"            logger.log(Level.FINE, \"Clearing food bank\");","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"tlyi"},"content":"            super.foodBank.clearList();","lastModifiedDate":"2021-10-19"},{"lineNumber":41,"author":{"gitId":"tlyi"},"content":"            return new CommandResult(MESSAGE_FOOD_CLEAR);","lastModifiedDate":"2021-10-19"},{"lineNumber":42,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":43,"author":{"gitId":"tlyi"},"content":"        assert this.itemIndex \u003e 0 : \"Deleting an item only\";","lastModifiedDate":"2021-10-19"},{"lineNumber":44,"author":{"gitId":"tlyi"},"content":"        if (super.foodBank.getSize() \u003d\u003d 0) {","lastModifiedDate":"2021-10-19"},{"lineNumber":45,"author":{"gitId":"tlyi"},"content":"            logger.log(Level.WARNING, \"food bank is empty.\");","lastModifiedDate":"2021-10-19"},{"lineNumber":46,"author":{"gitId":"tlyi"},"content":"            return new CommandResult(CommandMessages.MESSAGE_EMPTY_FOOD_BANK);","lastModifiedDate":"2021-10-27"},{"lineNumber":47,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":48,"author":{"gitId":"tlyi"},"content":"        logger.log(Level.FINE, \"Trying to delete item now\");","lastModifiedDate":"2021-10-19"},{"lineNumber":49,"author":{"gitId":"tlyi"},"content":"        try {","lastModifiedDate":"2021-10-19"},{"lineNumber":50,"author":{"gitId":"tlyi"},"content":"            Food deletedFood;","lastModifiedDate":"2021-10-19"},{"lineNumber":51,"author":{"gitId":"tlyi"},"content":"            deletedFood \u003d (Food) super.foodBank.deleteItem(this.itemIndex);","lastModifiedDate":"2021-10-19"},{"lineNumber":52,"author":{"gitId":"tlyi"},"content":"            return new CommandResult(String.format(MESSAGE_SUCCESS, deletedFood, super.foodBank.getSize()));","lastModifiedDate":"2021-10-19"},{"lineNumber":53,"author":{"gitId":"tlyi"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-10-19"},{"lineNumber":54,"author":{"gitId":"tlyi"},"content":"            logger.log(Level.WARNING, \"Detected invalid food item index.\");","lastModifiedDate":"2021-10-19"},{"lineNumber":55,"author":{"gitId":"tlyi"},"content":"            if (super.foodBank.getSize() \u003d\u003d 1) {","lastModifiedDate":"2021-10-19"},{"lineNumber":56,"author":{"gitId":"tlyi"},"content":"                return new CommandResult(CommandMessages.MESSAGE_ONLY_ONE_IN_LIST);","lastModifiedDate":"2021-10-27"},{"lineNumber":57,"author":{"gitId":"tlyi"},"content":"            }","lastModifiedDate":"2021-10-19"},{"lineNumber":58,"author":{"gitId":"tlyi"},"content":"            return new CommandResult(String.format(","lastModifiedDate":"2021-10-27"},{"lineNumber":59,"author":{"gitId":"tlyi"},"content":"                    CommandMessages.MESSAGE_LIST_OUT_OF_BOUNDS, super.foodBank.getSize()));","lastModifiedDate":"2021-10-27"},{"lineNumber":60,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":61,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":62,"author":{"gitId":"tlyi"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"tlyi":62}},{"path":"src/main/java/seedu/duke/logic/commands/DeleteFoodCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.logic.commands;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"tlyi"},"content":"import seedu.duke.data.item.food.Food;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"tlyi"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"tlyi"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"tryyang2001"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"tryyang2001"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"tlyi"},"content":"/**","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"tlyi"},"content":" * Represents the command that when executed, deletes a Food item from the FoodList.","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"tlyi"},"content":" */","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"tlyi"},"content":"public class DeleteFoodCommand extends Command {","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_COMMAND_FORMAT \u003d CommandMessages.QUOTATION + COMMAND_WORD_DELETE","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"tttyyzzz"},"content":"            + \" \" + COMMAND_PREFIX_FOOD + COMMAND_PREFIX_DELIMITER + \"INDEX \" + COMMAND_PREFIX_DATE","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"tttyyzzz"},"content":"            + COMMAND_PREFIX_DELIMITER + \"DATE_IN_DD-MM-YYYY \" + COMMAND_PREFIX_TIME + COMMAND_PREFIX_DELIMITER","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"tlyi"},"content":"            + \"TIME_IN_HHmm\" + CommandMessages.QUOTATION + \", where INDEX is the item number in the food list\";","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"A food item has been deleted:\"","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"tlyi"},"content":"            + CommandMessages.INDENTED_LS + \"%1$s\"","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"tlyi"},"content":"            + CommandMessages.INDENTED_LS + \"Number of food item(s) left: %2$d\";","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"tryyang2001"},"content":"    public static final String MESSAGE_FOOD_CLEAR \u003d \"All food items have been removed.\";","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"tlyi"},"content":"    public static final String[] EXPECTED_PREFIXES \u003d {","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"tlyi"},"content":"            COMMAND_PREFIX_FOOD,","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"tlyi"},"content":"            COMMAND_PREFIX_DATE,","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"tlyi"},"content":"            COMMAND_PREFIX_TIME,","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"tlyi"},"content":"    };","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"tlyi"},"content":"    private final int itemIndex;","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"tlyi"},"content":"    private final LocalDate date;","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"tlyi"},"content":"    private final LocalTime time;","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"tryyang2001"},"content":"    private boolean isClear \u003d false;","lastModifiedDate":"2021-10-14"},{"lineNumber":33,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":34,"author":{"gitId":"tryyang2001"},"content":"    private static final Logger logger \u003d Logger.getLogger(DeleteFoodCommand.class.getName());","lastModifiedDate":"2021-10-13"},{"lineNumber":35,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":36,"author":{"gitId":"tlyi"},"content":"    public DeleteFoodCommand(int itemIndex, LocalDate date, LocalTime time) {","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"tlyi"},"content":"        this.itemIndex \u003d itemIndex;","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"tlyi"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"tlyi"},"content":"        this.time \u003d time;","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":41,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":42,"author":{"gitId":"tryyang2001"},"content":"    public DeleteFoodCommand(boolean isClear) {","lastModifiedDate":"2021-10-14"},{"lineNumber":43,"author":{"gitId":"tryyang2001"},"content":"        this.itemIndex \u003d -1;","lastModifiedDate":"2021-10-14"},{"lineNumber":44,"author":{"gitId":"tryyang2001"},"content":"        this.isClear \u003d isClear;","lastModifiedDate":"2021-10-14"},{"lineNumber":45,"author":{"gitId":"tlyi"},"content":"        this.date \u003d LocalDate.now();","lastModifiedDate":"2021-10-19"},{"lineNumber":46,"author":{"gitId":"tlyi"},"content":"        this.time \u003d LocalTime.now();","lastModifiedDate":"2021-10-20"},{"lineNumber":47,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":48,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":49,"author":{"gitId":"tlyi"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":50,"author":{"gitId":"tlyi"},"content":"    public CommandResult execute() {","lastModifiedDate":"2021-10-10"},{"lineNumber":51,"author":{"gitId":"tryyang2001"},"content":"        if (this.isClear) {","lastModifiedDate":"2021-10-14"},{"lineNumber":52,"author":{"gitId":"tryyang2001"},"content":"            logger.log(Level.FINE, \"Clearing food list\");","lastModifiedDate":"2021-10-14"},{"lineNumber":53,"author":{"gitId":"tryyang2001"},"content":"            super.foodItems.clearList();","lastModifiedDate":"2021-10-19"},{"lineNumber":54,"author":{"gitId":"tryyang2001"},"content":"            assert foodItems.getSize() \u003d\u003d 0 : \"The size of the food list should be 0 after clear\";","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"tryyang2001"},"content":"            return new CommandResult(MESSAGE_FOOD_CLEAR);","lastModifiedDate":"2021-10-11"},{"lineNumber":56,"author":{"gitId":"tryyang2001"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":57,"author":{"gitId":"tryyang2001"},"content":"        assert this.itemIndex \u003e 0 : \"Deleting an object only\";","lastModifiedDate":"2021-10-13"},{"lineNumber":58,"author":{"gitId":"tryyang2001"},"content":"        if (super.foodItems.getSize() \u003d\u003d 0) {","lastModifiedDate":"2021-10-13"},{"lineNumber":59,"author":{"gitId":"tryyang2001"},"content":"            logger.log(Level.WARNING, \"Food list is empty.\");","lastModifiedDate":"2021-10-13"},{"lineNumber":60,"author":{"gitId":"tlyi"},"content":"            return new CommandResult(CommandMessages.MESSAGE_EMPTY_FOOD_LIST);","lastModifiedDate":"2021-10-27"},{"lineNumber":61,"author":{"gitId":"tryyang2001"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":62,"author":{"gitId":"tryyang2001"},"content":"        logger.log(Level.FINE, \"Trying to delete item now\");","lastModifiedDate":"2021-10-14"},{"lineNumber":63,"author":{"gitId":"tlyi"},"content":"        try {","lastModifiedDate":"2021-10-11"},{"lineNumber":64,"author":{"gitId":"tlyi"},"content":"            Food deletedFood;","lastModifiedDate":"2021-10-11"},{"lineNumber":65,"author":{"gitId":"tryyang2001"},"content":"            deletedFood \u003d super.foodItems.deleteItem(this.itemIndex, this.date, this.time);","lastModifiedDate":"2021-10-24"},{"lineNumber":66,"author":{"gitId":"tlyi"},"content":"            return new CommandResult(String.format(MESSAGE_SUCCESS, deletedFood, super.foodItems.getSize()));","lastModifiedDate":"2021-10-11"},{"lineNumber":67,"author":{"gitId":"tlyi"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-10-11"},{"lineNumber":68,"author":{"gitId":"tryyang2001"},"content":"            logger.log(Level.FINE, \"Detected invalid food item index.\");","lastModifiedDate":"2021-10-14"},{"lineNumber":69,"author":{"gitId":"tlyi"},"content":"            if (super.foodItems.getSize() \u003d\u003d 1) {","lastModifiedDate":"2021-10-11"},{"lineNumber":70,"author":{"gitId":"tlyi"},"content":"                return new CommandResult(CommandMessages.MESSAGE_ONLY_ONE_IN_LIST);","lastModifiedDate":"2021-10-27"},{"lineNumber":71,"author":{"gitId":"tlyi"},"content":"            }","lastModifiedDate":"2021-10-11"},{"lineNumber":72,"author":{"gitId":"tlyi"},"content":"            return new CommandResult(String.format(","lastModifiedDate":"2021-10-27"},{"lineNumber":73,"author":{"gitId":"tlyi"},"content":"                    CommandMessages.MESSAGE_LIST_OUT_OF_BOUNDS, super.foodItems.getSize()));","lastModifiedDate":"2021-10-27"},{"lineNumber":74,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":75,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":76,"author":{"gitId":"tlyi"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"tttyyzzz":2,"tryyang2001":25,"tlyi":49}},{"path":"src/main/java/seedu/duke/logic/commands/DeleteFutureExerciseCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.logic.commands;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"tlyi"},"content":"import seedu.duke.data.item.exercise.Exercise;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"xingjie99"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"xingjie99"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"xingjie99"},"content":"/**","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"xingjie99"},"content":" * Represents the command that when executed, deletes an Exercise item from the Future ExerciseList.","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"xingjie99"},"content":" */","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"xingjie99"},"content":"public class DeleteFutureExerciseCommand extends Command {","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_COMMAND_FORMAT \u003d CommandMessages.QUOTATION + COMMAND_WORD_DELETE","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"tlyi"},"content":"            + \" \" + COMMAND_PREFIX_UPCOMING_EXERCISE + COMMAND_PREFIX_DELIMITER + \"X\" + CommandMessages.QUOTATION","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"xingjie99"},"content":"            + \", where X is the item number in the future exercise list\";","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"xingjie99"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"An exercise item for the future has been deleted:\"","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"tlyi"},"content":"            + CommandMessages.INDENTED_LS + \"%s\"","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"tlyi"},"content":"            + CommandMessages.LS + \"Number of exercise item(s) left: %2$d\";","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"xingjie99"},"content":"    private static final String MESSAGE_FUTURE_EXERCISE_CLEAR \u003d \"All future exercise items have been removed.\";","lastModifiedDate":"2021-10-18"},{"lineNumber":19,"author":{"gitId":"tlyi"},"content":"    public static final String[] EXPECTED_PREFIXES \u003d {COMMAND_PREFIX_UPCOMING_EXERCISE};","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"xingjie99"},"content":"    private static Logger logger \u003d Logger.getLogger(DeleteFutureExerciseCommand.class.getName());","lastModifiedDate":"2021-10-18"},{"lineNumber":23,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":24,"author":{"gitId":"xingjie99"},"content":"    private final int itemIndex;","lastModifiedDate":"2021-10-18"},{"lineNumber":25,"author":{"gitId":"xingjie99"},"content":"    private boolean isClear \u003d false;","lastModifiedDate":"2021-10-18"},{"lineNumber":26,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":27,"author":{"gitId":"xingjie99"},"content":"    public DeleteFutureExerciseCommand(int itemIndex) {","lastModifiedDate":"2021-10-18"},{"lineNumber":28,"author":{"gitId":"xingjie99"},"content":"        this.itemIndex \u003d itemIndex;","lastModifiedDate":"2021-10-18"},{"lineNumber":29,"author":{"gitId":"xingjie99"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":30,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":31,"author":{"gitId":"xingjie99"},"content":"    public DeleteFutureExerciseCommand(boolean isClear) {","lastModifiedDate":"2021-10-18"},{"lineNumber":32,"author":{"gitId":"xingjie99"},"content":"        this.itemIndex \u003d -1;","lastModifiedDate":"2021-10-18"},{"lineNumber":33,"author":{"gitId":"xingjie99"},"content":"        this.isClear \u003d isClear;","lastModifiedDate":"2021-10-18"},{"lineNumber":34,"author":{"gitId":"xingjie99"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":35,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":36,"author":{"gitId":"xingjie99"},"content":"    @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":37,"author":{"gitId":"xingjie99"},"content":"    public CommandResult execute() {","lastModifiedDate":"2021-10-18"},{"lineNumber":38,"author":{"gitId":"xingjie99"},"content":"        if (this.isClear) {","lastModifiedDate":"2021-10-18"},{"lineNumber":39,"author":{"gitId":"xingjie99"},"content":"            logger.log(Level.FINE, \"Clearing future exercise list\");","lastModifiedDate":"2021-10-18"},{"lineNumber":40,"author":{"gitId":"tryyang2001"},"content":"            super.futureExerciseItems.clearList();","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"xingjie99"},"content":"            return new CommandResult(MESSAGE_FUTURE_EXERCISE_CLEAR);","lastModifiedDate":"2021-10-18"},{"lineNumber":42,"author":{"gitId":"xingjie99"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":43,"author":{"gitId":"xingjie99"},"content":"        assert this.itemIndex \u003e 0 : \"Deleting an item only\";","lastModifiedDate":"2021-10-18"},{"lineNumber":44,"author":{"gitId":"xingjie99"},"content":"        if (super.futureExerciseItems.getSize() \u003d\u003d 0) {","lastModifiedDate":"2021-10-18"},{"lineNumber":45,"author":{"gitId":"xingjie99"},"content":"            logger.log(Level.WARNING, \"Future exercise list is empty.\");","lastModifiedDate":"2021-10-18"},{"lineNumber":46,"author":{"gitId":"tlyi"},"content":"            return new CommandResult(CommandMessages.MESSAGE_EMPTY_FUTURE_EXERCISE_LIST);","lastModifiedDate":"2021-10-27"},{"lineNumber":47,"author":{"gitId":"xingjie99"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":48,"author":{"gitId":"xingjie99"},"content":"        logger.log(Level.FINE, \"Trying to delete item now\");","lastModifiedDate":"2021-10-18"},{"lineNumber":49,"author":{"gitId":"xingjie99"},"content":"        try {","lastModifiedDate":"2021-10-18"},{"lineNumber":50,"author":{"gitId":"xingjie99"},"content":"            Exercise deletedExercise;","lastModifiedDate":"2021-10-18"},{"lineNumber":51,"author":{"gitId":"tryyang2001"},"content":"            deletedExercise \u003d super.futureExerciseItems.deleteItem(this.itemIndex);","lastModifiedDate":"2021-10-20"},{"lineNumber":52,"author":{"gitId":"xingjie99"},"content":"            return new CommandResult(String.format(MESSAGE_SUCCESS, deletedExercise,","lastModifiedDate":"2021-10-18"},{"lineNumber":53,"author":{"gitId":"xingjie99"},"content":"                    super.futureExerciseItems.getSize()));","lastModifiedDate":"2021-10-18"},{"lineNumber":54,"author":{"gitId":"xingjie99"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-10-18"},{"lineNumber":55,"author":{"gitId":"xingjie99"},"content":"            logger.log(Level.WARNING, \"Detected invalid exercise item index.\");","lastModifiedDate":"2021-10-18"},{"lineNumber":56,"author":{"gitId":"xingjie99"},"content":"            if (super.futureExerciseItems.getSize() \u003d\u003d 1) {","lastModifiedDate":"2021-10-18"},{"lineNumber":57,"author":{"gitId":"tlyi"},"content":"                return new CommandResult(CommandMessages.MESSAGE_ONLY_ONE_IN_LIST);","lastModifiedDate":"2021-10-27"},{"lineNumber":58,"author":{"gitId":"xingjie99"},"content":"            }","lastModifiedDate":"2021-10-18"},{"lineNumber":59,"author":{"gitId":"tlyi"},"content":"            return new CommandResult(String.format(CommandMessages.MESSAGE_LIST_OUT_OF_BOUNDS,","lastModifiedDate":"2021-10-27"},{"lineNumber":60,"author":{"gitId":"tlyi"},"content":"                    super.futureExerciseItems.getSize()));","lastModifiedDate":"2021-10-27"},{"lineNumber":61,"author":{"gitId":"xingjie99"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":62,"author":{"gitId":"xingjie99"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":63,"author":{"gitId":"xingjie99"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"xingjie99":49,"tryyang2001":2,"tlyi":12}},{"path":"src/main/java/seedu/duke/logic/commands/EditExerciseBankCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.logic.commands;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"xingjie99"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"xingjie99"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"xingjie99"},"content":"public class EditExerciseBankCommand extends Command {","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_COMMAND_FORMAT \u003d CommandMessages.QUOTATION + COMMAND_WORD_EDIT","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"xingjie99"},"content":"            + \" \" + COMMAND_PREFIX_EXERCISE_BANK + COMMAND_PREFIX_DELIMITER + \"X \"","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"tlyi"},"content":"            + COMMAND_PREFIX_NAME + COMMAND_PREFIX_DELIMITER + \"Y \"","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"tlyi"},"content":"            + COMMAND_PREFIX_CALORIES + COMMAND_PREFIX_DELIMITER + \"Z \" + CommandMessages.QUOTATION","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"xingjie99"},"content":"            + \", where X is the item number in the exercise bank, Y is the new name, Z is the new calories\";","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"xingjie99"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Exercise bank item number %d has been changed to:\"","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"tlyi"},"content":"            + CommandMessages.INDENTED_LS + \"%s\";","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"tlyi"},"content":"    public static final String[] EXPECTED_PREFIXES \u003d {","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"tlyi"},"content":"            COMMAND_PREFIX_EXERCISE_BANK,","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"tlyi"},"content":"            COMMAND_PREFIX_NAME,","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"tlyi"},"content":"            COMMAND_PREFIX_CALORIES","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"tlyi"},"content":"    };","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"xingjie99"},"content":"    private static Logger logger \u003d Logger.getLogger(EditExerciseBankCommand.class.getName());","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"xingjie99"},"content":"    private final int itemIndex;","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"xingjie99"},"content":"    private final String newName;","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"xingjie99"},"content":"    private final int newCalories;","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"xingjie99"},"content":"    public EditExerciseBankCommand(int itemIndex, String newName, int newCalories) {","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"xingjie99"},"content":"        this.itemIndex \u003d itemIndex;","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"xingjie99"},"content":"        this.newName \u003d newName;","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"xingjie99"},"content":"        this.newCalories \u003d newCalories;","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"xingjie99"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"xingjie99"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"xingjie99"},"content":"    public CommandResult execute() {","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"xingjie99"},"content":"        if (super.exerciseBank.getSize() \u003d\u003d 0) {","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"xingjie99"},"content":"            logger.log(Level.WARNING, \"Exercise bank list is empty.\");","lastModifiedDate":"2021-10-24"},{"lineNumber":38,"author":{"gitId":"tlyi"},"content":"            return new CommandResult(CommandMessages.MESSAGE_EMPTY_EXERCISE_BANK);","lastModifiedDate":"2021-10-27"},{"lineNumber":39,"author":{"gitId":"xingjie99"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":40,"author":{"gitId":"xingjie99"},"content":"        try {","lastModifiedDate":"2021-10-24"},{"lineNumber":41,"author":{"gitId":"tlyi"},"content":"            if (!this.newName.equals(NULL_STRING)) {","lastModifiedDate":"2021-10-24"},{"lineNumber":42,"author":{"gitId":"xingjie99"},"content":"                super.exerciseBank.getItem(this.itemIndex).setName(this.newName);","lastModifiedDate":"2021-10-24"},{"lineNumber":43,"author":{"gitId":"tlyi"},"content":"            }","lastModifiedDate":"2021-10-24"},{"lineNumber":44,"author":{"gitId":"tlyi"},"content":"            if (this.newCalories !\u003d NULL_CALORIES) {","lastModifiedDate":"2021-10-24"},{"lineNumber":45,"author":{"gitId":"xingjie99"},"content":"                super.exerciseBank.getItem(this.itemIndex).setCalories(this.newCalories);","lastModifiedDate":"2021-10-24"},{"lineNumber":46,"author":{"gitId":"tlyi"},"content":"            }","lastModifiedDate":"2021-10-24"},{"lineNumber":47,"author":{"gitId":"tlyi"},"content":"            return new CommandResult(String.format(MESSAGE_SUCCESS, this.itemIndex + 1,","lastModifiedDate":"2021-10-24"},{"lineNumber":48,"author":{"gitId":"tlyi"},"content":"                    super.exerciseBank.getItem(this.itemIndex).toStringWithoutTime()));","lastModifiedDate":"2021-10-24"},{"lineNumber":49,"author":{"gitId":"xingjie99"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-10-24"},{"lineNumber":50,"author":{"gitId":"xingjie99"},"content":"            logger.log(Level.WARNING, \"Detected invalid exercise bank item index.\");","lastModifiedDate":"2021-10-24"},{"lineNumber":51,"author":{"gitId":"xingjie99"},"content":"            if (super.exerciseBank.getSize() \u003d\u003d 1) {","lastModifiedDate":"2021-10-24"},{"lineNumber":52,"author":{"gitId":"tlyi"},"content":"                return new CommandResult(CommandMessages.MESSAGE_ONLY_ONE_IN_LIST);","lastModifiedDate":"2021-10-27"},{"lineNumber":53,"author":{"gitId":"xingjie99"},"content":"            }","lastModifiedDate":"2021-10-24"},{"lineNumber":54,"author":{"gitId":"tlyi"},"content":"            return new CommandResult(String.format(","lastModifiedDate":"2021-10-27"},{"lineNumber":55,"author":{"gitId":"tlyi"},"content":"                    CommandMessages.MESSAGE_LIST_OUT_OF_BOUNDS, super.exerciseBank.getSize()));","lastModifiedDate":"2021-10-27"},{"lineNumber":56,"author":{"gitId":"xingjie99"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":57,"author":{"gitId":"xingjie99"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":58,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":59,"author":{"gitId":"xingjie99"},"content":"}","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"xingjie99":38,"tlyi":21}},{"path":"src/main/java/seedu/duke/logic/commands/EditFoodBankCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.logic.commands;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"xingjie99"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"xingjie99"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"xingjie99"},"content":"public class EditFoodBankCommand extends Command {","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_COMMAND_FORMAT \u003d CommandMessages.QUOTATION + COMMAND_WORD_EDIT","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"xingjie99"},"content":"            + \" \" + COMMAND_PREFIX_FOOD_BANK + COMMAND_PREFIX_DELIMITER + \"X \"","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"tlyi"},"content":"            + COMMAND_PREFIX_NAME + COMMAND_PREFIX_DELIMITER + \"Y \"","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"tlyi"},"content":"            + COMMAND_PREFIX_CALORIES + COMMAND_PREFIX_DELIMITER + \"Z \" + CommandMessages.QUOTATION","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"xingjie99"},"content":"            + \", where X is the item number in the food bank, Y is the new name, Z is the new calories\";","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"xingjie99"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Food bank item number %d has been changed to:\"","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"tlyi"},"content":"            + CommandMessages.INDENTED_LS + \"%s\";","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"tlyi"},"content":"    public static final String[] EXPECTED_PREFIXES \u003d {","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"tlyi"},"content":"            COMMAND_PREFIX_FOOD_BANK,","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"tlyi"},"content":"            COMMAND_PREFIX_NAME,","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"tlyi"},"content":"            COMMAND_PREFIX_CALORIES","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"tlyi"},"content":"    };","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"xingjie99"},"content":"    private static Logger logger \u003d Logger.getLogger(EditFoodBankCommand.class.getName());","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"xingjie99"},"content":"    private final int itemIndex;","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"xingjie99"},"content":"    private final String newName;","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"xingjie99"},"content":"    private final int newCalories;","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"xingjie99"},"content":"    public EditFoodBankCommand(int itemIndex, String newName, int newCalories) {","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"xingjie99"},"content":"        this.itemIndex \u003d itemIndex;","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"xingjie99"},"content":"        this.newName \u003d newName;","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"xingjie99"},"content":"        this.newCalories \u003d newCalories;","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"xingjie99"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"xingjie99"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"xingjie99"},"content":"    public CommandResult execute() {","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"xingjie99"},"content":"        if (super.foodBank.getSize() \u003d\u003d 0) {","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"xingjie99"},"content":"            logger.log(Level.WARNING, \"Food bank list is empty.\");","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"tlyi"},"content":"            return new CommandResult(CommandMessages.MESSAGE_EMPTY_FOOD_BANK);","lastModifiedDate":"2021-10-27"},{"lineNumber":37,"author":{"gitId":"xingjie99"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":38,"author":{"gitId":"xingjie99"},"content":"        try {","lastModifiedDate":"2021-10-24"},{"lineNumber":39,"author":{"gitId":"tlyi"},"content":"            if (!this.newName.equals(NULL_STRING)) {","lastModifiedDate":"2021-10-24"},{"lineNumber":40,"author":{"gitId":"xingjie99"},"content":"                super.foodBank.getItem(this.itemIndex).setName(this.newName);","lastModifiedDate":"2021-10-24"},{"lineNumber":41,"author":{"gitId":"tlyi"},"content":"            }","lastModifiedDate":"2021-10-24"},{"lineNumber":42,"author":{"gitId":"tlyi"},"content":"            if (this.newCalories !\u003d NULL_CALORIES) {","lastModifiedDate":"2021-10-24"},{"lineNumber":43,"author":{"gitId":"xingjie99"},"content":"                super.foodBank.getItem(this.itemIndex).setCalories(this.newCalories);","lastModifiedDate":"2021-10-24"},{"lineNumber":44,"author":{"gitId":"tlyi"},"content":"            }","lastModifiedDate":"2021-10-24"},{"lineNumber":45,"author":{"gitId":"tlyi"},"content":"            return new CommandResult(String.format(MESSAGE_SUCCESS, this.itemIndex + 1,","lastModifiedDate":"2021-10-24"},{"lineNumber":46,"author":{"gitId":"xingjie99"},"content":"                    super.foodBank.getItem(this.itemIndex).toString()));","lastModifiedDate":"2021-10-24"},{"lineNumber":47,"author":{"gitId":"xingjie99"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-10-24"},{"lineNumber":48,"author":{"gitId":"xingjie99"},"content":"            logger.log(Level.WARNING, \"Detected invalid food bank item index.\");","lastModifiedDate":"2021-10-24"},{"lineNumber":49,"author":{"gitId":"xingjie99"},"content":"            if (super.foodBank.getSize() \u003d\u003d 1) {","lastModifiedDate":"2021-10-24"},{"lineNumber":50,"author":{"gitId":"tlyi"},"content":"                return new CommandResult(CommandMessages.MESSAGE_ONLY_ONE_IN_LIST);","lastModifiedDate":"2021-10-27"},{"lineNumber":51,"author":{"gitId":"xingjie99"},"content":"            }","lastModifiedDate":"2021-10-24"},{"lineNumber":52,"author":{"gitId":"tlyi"},"content":"            return new CommandResult(String.format(","lastModifiedDate":"2021-10-27"},{"lineNumber":53,"author":{"gitId":"tlyi"},"content":"                    CommandMessages.MESSAGE_LIST_OUT_OF_BOUNDS, super.foodBank.getSize()));","lastModifiedDate":"2021-10-27"},{"lineNumber":54,"author":{"gitId":"xingjie99"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":55,"author":{"gitId":"xingjie99"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":56,"author":{"gitId":"xingjie99"},"content":"}","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"xingjie99":37,"tlyi":19}},{"path":"src/main/java/seedu/duke/logic/commands/EditFutureExerciseCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.logic.commands;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"tlyi"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"xingjie99"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"xingjie99"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"xingjie99"},"content":"public class EditFutureExerciseCommand extends Command {","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_COMMAND_FORMAT \u003d CommandMessages.QUOTATION + COMMAND_WORD_EDIT","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"tlyi"},"content":"            + \" \" + COMMAND_PREFIX_UPCOMING_EXERCISE + COMMAND_PREFIX_DELIMITER + \"W \"","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"tlyi"},"content":"            + COMMAND_PREFIX_NAME + COMMAND_PREFIX_DELIMITER + \"X \"","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"tlyi"},"content":"            + COMMAND_PREFIX_CALORIES + COMMAND_PREFIX_DELIMITER + \"Y \"","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"tlyi"},"content":"            + COMMAND_PREFIX_DATE + COMMAND_PREFIX_DELIMITER + \"Z\" + CommandMessages.QUOTATION","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"tlyi"},"content":"            + \", where W is the item number in the future exercise list, X is the new name,\"","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"tlyi"},"content":"            + \"Y is the new calories, Z is the new date\";","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"xingjie99"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Exercise item number %d has been changed to:\"","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"tlyi"},"content":"            + CommandMessages.INDENTED_LS + \"%s\";","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_INVALID_DATE \u003d \"The new date must be after today\u0027s date!\";","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"tlyi"},"content":"    public static final String[] EXPECTED_PREFIXES \u003d {","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"tlyi"},"content":"            COMMAND_PREFIX_EXERCISE_BANK,","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"tlyi"},"content":"            COMMAND_PREFIX_NAME,","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"tlyi"},"content":"            COMMAND_PREFIX_CALORIES,","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"tlyi"},"content":"            COMMAND_PREFIX_DATE,","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"tlyi"},"content":"    };","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"xingjie99"},"content":"    private static Logger logger \u003d Logger.getLogger(EditFutureExerciseCommand.class.getName());","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"xingjie99"},"content":"    private final int itemIndex;","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"xingjie99"},"content":"    private final String newName;","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"xingjie99"},"content":"    private final int newCalories;","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"tlyi"},"content":"    private final LocalDate newDate;","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"tlyi"},"content":"    public EditFutureExerciseCommand(int itemIndex, String newName, int newCalories, LocalDate newDate) {","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"xingjie99"},"content":"        this.itemIndex \u003d itemIndex;","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"xingjie99"},"content":"        this.newName \u003d newName;","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"xingjie99"},"content":"        this.newCalories \u003d newCalories;","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"tlyi"},"content":"        this.newDate \u003d newDate;","lastModifiedDate":"2021-10-24"},{"lineNumber":38,"author":{"gitId":"xingjie99"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":39,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":40,"author":{"gitId":"xingjie99"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":41,"author":{"gitId":"xingjie99"},"content":"    public CommandResult execute() {","lastModifiedDate":"2021-10-24"},{"lineNumber":42,"author":{"gitId":"tlyi"},"content":"        if (!this.newDate.isAfter(LocalDate.now())) {","lastModifiedDate":"2021-10-24"},{"lineNumber":43,"author":{"gitId":"tlyi"},"content":"            return new CommandResult(MESSAGE_INVALID_DATE);","lastModifiedDate":"2021-10-24"},{"lineNumber":44,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":45,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":46,"author":{"gitId":"xingjie99"},"content":"        if (super.futureExerciseItems.getSize() \u003d\u003d 0) {","lastModifiedDate":"2021-10-24"},{"lineNumber":47,"author":{"gitId":"xingjie99"},"content":"            logger.log(Level.WARNING, \"Future exercise list is empty.\");","lastModifiedDate":"2021-10-24"},{"lineNumber":48,"author":{"gitId":"tlyi"},"content":"            return new CommandResult(CommandMessages.MESSAGE_EMPTY_FUTURE_EXERCISE_LIST);","lastModifiedDate":"2021-10-27"},{"lineNumber":49,"author":{"gitId":"xingjie99"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":50,"author":{"gitId":"xingjie99"},"content":"        try {","lastModifiedDate":"2021-10-24"},{"lineNumber":51,"author":{"gitId":"tlyi"},"content":"            if (!this.newName.equals(NULL_STRING)) {","lastModifiedDate":"2021-10-24"},{"lineNumber":52,"author":{"gitId":"xingjie99"},"content":"                super.futureExerciseItems.getItem(this.itemIndex).setName(this.newName);","lastModifiedDate":"2021-10-24"},{"lineNumber":53,"author":{"gitId":"tlyi"},"content":"            }","lastModifiedDate":"2021-10-24"},{"lineNumber":54,"author":{"gitId":"tlyi"},"content":"            if (this.newCalories !\u003d NULL_CALORIES) {","lastModifiedDate":"2021-10-24"},{"lineNumber":55,"author":{"gitId":"xingjie99"},"content":"                super.futureExerciseItems.getItem(this.itemIndex).setCalories(this.newCalories);","lastModifiedDate":"2021-10-24"},{"lineNumber":56,"author":{"gitId":"tlyi"},"content":"            }","lastModifiedDate":"2021-10-24"},{"lineNumber":57,"author":{"gitId":"tlyi"},"content":"            if (!this.newName.equals(NULL_DATE)) {","lastModifiedDate":"2021-10-24"},{"lineNumber":58,"author":{"gitId":"tlyi"},"content":"                super.futureExerciseItems.getItem(this.itemIndex).setDate(this.newDate);","lastModifiedDate":"2021-10-24"},{"lineNumber":59,"author":{"gitId":"tlyi"},"content":"            }","lastModifiedDate":"2021-10-24"},{"lineNumber":60,"author":{"gitId":"tlyi"},"content":"            return new CommandResult(String.format(MESSAGE_SUCCESS, this.itemIndex + 1,","lastModifiedDate":"2021-10-24"},{"lineNumber":61,"author":{"gitId":"xingjie99"},"content":"                    super.futureExerciseItems.getItem(this.itemIndex).toString()));","lastModifiedDate":"2021-10-24"},{"lineNumber":62,"author":{"gitId":"xingjie99"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-10-24"},{"lineNumber":63,"author":{"gitId":"xingjie99"},"content":"            logger.log(Level.WARNING, \"Detected invalid exercise item index.\");","lastModifiedDate":"2021-10-24"},{"lineNumber":64,"author":{"gitId":"xingjie99"},"content":"            if (super.futureExerciseItems.getSize() \u003d\u003d 1) {","lastModifiedDate":"2021-10-24"},{"lineNumber":65,"author":{"gitId":"tlyi"},"content":"                return new CommandResult(CommandMessages.MESSAGE_ONLY_ONE_IN_LIST);","lastModifiedDate":"2021-10-27"},{"lineNumber":66,"author":{"gitId":"xingjie99"},"content":"            }","lastModifiedDate":"2021-10-24"},{"lineNumber":67,"author":{"gitId":"tlyi"},"content":"            return new CommandResult(String.format(","lastModifiedDate":"2021-10-27"},{"lineNumber":68,"author":{"gitId":"tlyi"},"content":"                    CommandMessages.MESSAGE_LIST_OUT_OF_BOUNDS, super.futureExerciseItems.getSize()));","lastModifiedDate":"2021-10-27"},{"lineNumber":69,"author":{"gitId":"xingjie99"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":70,"author":{"gitId":"xingjie99"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":71,"author":{"gitId":"xingjie99"},"content":"}","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"xingjie99":35,"tlyi":36}},{"path":"src/main/java/seedu/duke/logic/commands/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.logic.commands;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"tttyyzzz"},"content":"import static seedu.duke.logic.commands.CommandMessages.LS;","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"tlyi"},"content":"/**","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"tlyi"},"content":" * Represents the command that when executed, displays the list of available commands to the user.","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"tlyi"},"content":" */","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"tlyi"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"tlyi"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"tttyyzzz"},"content":"    public static final String MESSAGE_ADD_HELP \u003d \"add -- Add food or exercise record to the current list.\";","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"tttyyzzz"},"content":"    private static final String MESSAGE_HELP_INTRO \u003d \"Welcome to the help page.\" + LS","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"tttyyzzz"},"content":"            + \"Below are the commands to get you started.\" + LS","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"tttyyzzz"},"content":"            + \"More details could be found on: \" + LS","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"weidak"},"content":"            + \"https://tinyurl.com/fitbotUG\";","lastModifiedDate":"2021-10-14"},{"lineNumber":16,"author":{"gitId":"tttyyzzz"},"content":"    private static final String MESSAGE_COMMON_NOTATIONS \u003d \"In the formats of the command, identifiers wrapped in \"","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"tttyyzzz"},"content":"            + \"curly brackets{} means that they are optional.\";","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"tttyyzzz"},"content":"    private static final String EMPTY \u003d \"\";","lastModifiedDate":"2021-10-14"},{"lineNumber":19,"author":{"gitId":"tttyyzzz"},"content":"    public static final String MESSAGE_COMMAND_FORMAT \u003d","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"tttyyzzz"},"content":"            CommandMessages.QUOTATION + COMMAND_WORD + CommandMessages.QUOTATION;","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"tttyyzzz"},"content":"    public static final String MESSAGE_DELETE_HELP \u003d \"delete -- Delete entry of food or exercise added from a list.\";","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"tttyyzzz"},"content":"    public static final String MESSAGE_EDIT_HELP \u003d \"edit -- Edit entry of food or exercise added from a list.\";","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"tttyyzzz"},"content":"    public static final String MESSAGE_VIEW_HELP \u003d \"view -- View all the food and/or exercises added.\";","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"tttyyzzz"},"content":"    //TODO: --------------------------------------------deprecated---------------------------------------.","lastModifiedDate":"2021-10-27"},{"lineNumber":25,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"tttyyzzz"},"content":"    //    public static final String FORMAT_HEADER \u003d \"Format: \";","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"tttyyzzz"},"content":"    //    public static final String FORMAT_PLACEHOLDER \u003d \"        \";","lastModifiedDate":"2021-10-27"},{"lineNumber":28,"author":{"gitId":"tttyyzzz"},"content":"    //    private static final String MESSAGE_SUCCESS \u003d \"These are the available commands:\" + LS + \"%s\";","lastModifiedDate":"2021-10-27"},{"lineNumber":29,"author":{"gitId":"tttyyzzz"},"content":"    //    private static final String MESSAGE_HELP_ADD \u003d \"add -- Adds food or exercise record to the current list.\"","lastModifiedDate":"2021-10-27"},{"lineNumber":30,"author":{"gitId":"tttyyzzz"},"content":"    //            + LS","lastModifiedDate":"2021-10-27"},{"lineNumber":31,"author":{"gitId":"tttyyzzz"},"content":"    //            + FORMAT_HEADER + AddExerciseBankCommand.MESSAGE_COMMAND_FORMAT + LS","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"tttyyzzz"},"content":"    //            + FORMAT_PLACEHOLDER + AddFoodBankCommand.MESSAGE_COMMAND_FORMAT + LS","lastModifiedDate":"2021-10-27"},{"lineNumber":33,"author":{"gitId":"tttyyzzz"},"content":"    //            + FORMAT_PLACEHOLDER + AddFoodCommand.MESSAGE_COMMAND_FORMAT + LS","lastModifiedDate":"2021-10-27"},{"lineNumber":34,"author":{"gitId":"tttyyzzz"},"content":"    //            + FORMAT_PLACEHOLDER + AddFutureExerciseCommand.MESSAGE_COMMAND_FORMAT + LS","lastModifiedDate":"2021-10-27"},{"lineNumber":35,"author":{"gitId":"tttyyzzz"},"content":"    //            + FORMAT_PLACEHOLDER + AddRecurringExerciseCommand.MESSAGE_COMMAND_FORMAT + LS;","lastModifiedDate":"2021-10-27"},{"lineNumber":36,"author":{"gitId":"tttyyzzz"},"content":"    //    private static final String MESSAGE_HELP_BMI \u003d \"bmi -- \"","lastModifiedDate":"2021-10-27"},{"lineNumber":37,"author":{"gitId":"tttyyzzz"},"content":"    //            + \"Calculates the BMI value based on the user\u0027s input height and weight.\" + LS","lastModifiedDate":"2021-10-27"},{"lineNumber":38,"author":{"gitId":"tttyyzzz"},"content":"    //            + FORMAT_HEADER + CalculateBmiCommand.MESSAGE_COMMAND_FORMAT + LS","lastModifiedDate":"2021-10-27"},{"lineNumber":39,"author":{"gitId":"tttyyzzz"},"content":"    //            + FORMAT_PLACEHOLDER + CalculateBmiWithProfileCommand.MESSAGE_COMMAND_FORMAT + LS;","lastModifiedDate":"2021-10-27"},{"lineNumber":40,"author":{"gitId":"tttyyzzz"},"content":"    //    private static final String MESSAGE_HELP_BYE \u003d \"bye -- \"","lastModifiedDate":"2021-10-27"},{"lineNumber":41,"author":{"gitId":"tttyyzzz"},"content":"    //            + \"Exits the program and save results from food and exercise items.\" + LS","lastModifiedDate":"2021-10-27"},{"lineNumber":42,"author":{"gitId":"tttyyzzz"},"content":"    //            + FORMAT_HEADER + ByeCommand.MESSAGE_COMMAND_FORMAT + LS;","lastModifiedDate":"2021-10-27"},{"lineNumber":43,"author":{"gitId":"tttyyzzz"},"content":"    //    private static final String MESSAGE_HELP_DELETE \u003d \"delete -- Deletes entry of food or exercise added.\"","lastModifiedDate":"2021-10-27"},{"lineNumber":44,"author":{"gitId":"tttyyzzz"},"content":"    //            + LS","lastModifiedDate":"2021-10-27"},{"lineNumber":45,"author":{"gitId":"tttyyzzz"},"content":"    //            + FORMAT_HEADER + DeleteExerciseBankCommand.MESSAGE_COMMAND_FORMAT + LS","lastModifiedDate":"2021-10-27"},{"lineNumber":46,"author":{"gitId":"tttyyzzz"},"content":"    //            + FORMAT_PLACEHOLDER + DeleteExerciseCommand.MESSAGE_COMMAND_FORMAT + LS","lastModifiedDate":"2021-10-27"},{"lineNumber":47,"author":{"gitId":"tttyyzzz"},"content":"    //            + FORMAT_PLACEHOLDER + DeleteFoodBankCommand.MESSAGE_COMMAND_FORMAT + LS","lastModifiedDate":"2021-10-27"},{"lineNumber":48,"author":{"gitId":"tttyyzzz"},"content":"    //            + FORMAT_PLACEHOLDER + DeleteFoodCommand.MESSAGE_COMMAND_FORMAT + LS","lastModifiedDate":"2021-10-27"},{"lineNumber":49,"author":{"gitId":"tttyyzzz"},"content":"    //            + FORMAT_PLACEHOLDER + DeleteFutureExerciseCommand.MESSAGE_COMMAND_FORMAT + LS;","lastModifiedDate":"2021-10-27"},{"lineNumber":50,"author":{"gitId":"tttyyzzz"},"content":"    //    private static final String MESSAGE_HELP_HELP \u003d \"help -- \"","lastModifiedDate":"2021-10-27"},{"lineNumber":51,"author":{"gitId":"tttyyzzz"},"content":"    //            + \"Shows a list of commands and their usage with some examples.\" + LS","lastModifiedDate":"2021-10-27"},{"lineNumber":52,"author":{"gitId":"tttyyzzz"},"content":"    //            + FORMAT_HEADER + MESSAGE_COMMAND_FORMAT;","lastModifiedDate":"2021-10-27"},{"lineNumber":53,"author":{"gitId":"tttyyzzz"},"content":"    //    public static final String MESSAGE_HELP_OVERVIEW \u003d \"overview -- Shows relevant calories statistics.\"","lastModifiedDate":"2021-10-27"},{"lineNumber":54,"author":{"gitId":"tttyyzzz"},"content":"    //            + LS","lastModifiedDate":"2021-10-27"},{"lineNumber":55,"author":{"gitId":"tttyyzzz"},"content":"    //            + FORMAT_HEADER + OverviewCommand.MESSAGE_COMMAND_FORMAT + LS;","lastModifiedDate":"2021-10-27"},{"lineNumber":56,"author":{"gitId":"tttyyzzz"},"content":"    //    private static final String MESSAGE_HELP_PROFILE \u003d \"profile -- \"","lastModifiedDate":"2021-10-27"},{"lineNumber":57,"author":{"gitId":"tttyyzzz"},"content":"    //            + \"Edit profile particulars based on the given input. If no inputs is given,\\n\" + FORMAT_PLACEHOLDER","lastModifiedDate":"2021-10-27"},{"lineNumber":58,"author":{"gitId":"tttyyzzz"},"content":"    //            + \"profile is used to view the current profile attributes\" + LS","lastModifiedDate":"2021-10-27"},{"lineNumber":59,"author":{"gitId":"tttyyzzz"},"content":"    //            + FORMAT_HEADER + ProfileUpdateCommand.MESSAGE_COMMAND_FORMAT + LS;","lastModifiedDate":"2021-10-27"},{"lineNumber":60,"author":{"gitId":"tttyyzzz"},"content":"    //    private static final String MESSAGE_HELP_VIEW \u003d \"view -- Views all the food and/or exercises added.\"","lastModifiedDate":"2021-10-27"},{"lineNumber":61,"author":{"gitId":"tttyyzzz"},"content":"    //            + LS","lastModifiedDate":"2021-10-27"},{"lineNumber":62,"author":{"gitId":"tttyyzzz"},"content":"    //            + FORMAT_HEADER","lastModifiedDate":"2021-10-27"},{"lineNumber":63,"author":{"gitId":"tttyyzzz"},"content":"    //            + FORMAT_PLACEHOLDER + ViewExerciseBankCommand.MESSAGE_COMMAND_FORMAT + LS","lastModifiedDate":"2021-10-27"},{"lineNumber":64,"author":{"gitId":"tttyyzzz"},"content":"    //            + FORMAT_PLACEHOLDER + ViewExerciseListCommand.MESSAGE_COMMAND_FORMAT + LS","lastModifiedDate":"2021-10-27"},{"lineNumber":65,"author":{"gitId":"tttyyzzz"},"content":"    //            + FORMAT_PLACEHOLDER + ViewFoodBankCommand.MESSAGE_COMMAND_FORMAT + LS","lastModifiedDate":"2021-10-27"},{"lineNumber":66,"author":{"gitId":"tttyyzzz"},"content":"    //            + FORMAT_PLACEHOLDER + ViewFoodListCommand.MESSAGE_COMMAND_FORMAT + LS","lastModifiedDate":"2021-10-27"},{"lineNumber":67,"author":{"gitId":"tttyyzzz"},"content":"    //            + FORMAT_PLACEHOLDER + ViewFutureExerciseListCommand.MESSAGE_COMMAND_FORMAT;","lastModifiedDate":"2021-10-27"},{"lineNumber":68,"author":{"gitId":"tttyyzzz"},"content":"    //    private static final int REVERSE_APPEND \u003d 1;","lastModifiedDate":"2021-10-27"},{"lineNumber":69,"author":{"gitId":"tttyyzzz"},"content":"    //","lastModifiedDate":"2021-10-27"},{"lineNumber":70,"author":{"gitId":"tttyyzzz"},"content":"    //","lastModifiedDate":"2021-10-27"},{"lineNumber":71,"author":{"gitId":"tttyyzzz"},"content":"    //    private String buildHelpString() {//deprecated","lastModifiedDate":"2021-10-27"},{"lineNumber":72,"author":{"gitId":"tttyyzzz"},"content":"    //        StringBuilder helpMessage \u003d new StringBuilder(EMPTY);// need to include the format later","lastModifiedDate":"2021-10-27"},{"lineNumber":73,"author":{"gitId":"tttyyzzz"},"content":"    //        helpMessage.append(MESSAGE_HELP_INTRO).append(LS).append(LS)","lastModifiedDate":"2021-10-27"},{"lineNumber":74,"author":{"gitId":"tttyyzzz"},"content":"    //                .append(MESSAGE_HELP_ADD).append(LS)","lastModifiedDate":"2021-10-27"},{"lineNumber":75,"author":{"gitId":"tttyyzzz"},"content":"    //                .append(MESSAGE_HELP_BMI).append(LS)","lastModifiedDate":"2021-10-27"},{"lineNumber":76,"author":{"gitId":"tttyyzzz"},"content":"    //                .append(MESSAGE_HELP_BYE).append(LS)","lastModifiedDate":"2021-10-27"},{"lineNumber":77,"author":{"gitId":"tttyyzzz"},"content":"    //                .append(MESSAGE_HELP_DELETE).append(LS)","lastModifiedDate":"2021-10-27"},{"lineNumber":78,"author":{"gitId":"tttyyzzz"},"content":"    //                .append(MESSAGE_HELP_HELP).append(LS).append(LS)","lastModifiedDate":"2021-10-27"},{"lineNumber":79,"author":{"gitId":"tttyyzzz"},"content":"    //                .append(MESSAGE_HELP_PROFILE).append(LS)","lastModifiedDate":"2021-10-27"},{"lineNumber":80,"author":{"gitId":"tttyyzzz"},"content":"    //                .append(MESSAGE_HELP_OVERVIEW).append(LS)","lastModifiedDate":"2021-10-27"},{"lineNumber":81,"author":{"gitId":"tttyyzzz"},"content":"    //                .append(MESSAGE_HELP_VIEW).append(LS);","lastModifiedDate":"2021-10-27"},{"lineNumber":82,"author":{"gitId":"tttyyzzz"},"content":"    //","lastModifiedDate":"2021-10-27"},{"lineNumber":83,"author":{"gitId":"tttyyzzz"},"content":"    //","lastModifiedDate":"2021-10-27"},{"lineNumber":84,"author":{"gitId":"tttyyzzz"},"content":"    //        helpMessage.setLength(helpMessage.length() - REVERSE_APPEND);","lastModifiedDate":"2021-10-27"},{"lineNumber":85,"author":{"gitId":"tttyyzzz"},"content":"    //        return helpMessage.toString();","lastModifiedDate":"2021-10-27"},{"lineNumber":86,"author":{"gitId":"tttyyzzz"},"content":"    //    }","lastModifiedDate":"2021-10-27"},{"lineNumber":87,"author":{"gitId":"tttyyzzz"},"content":"    //TODO: --------------------------------------------deprecated---------------------------------------.","lastModifiedDate":"2021-10-27"},{"lineNumber":88,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":89,"author":{"gitId":"tttyyzzz"},"content":"    private static String bmi \u003d \"bmi -- Calculate the Body-Mass-Index of user\\n\"","lastModifiedDate":"2021-10-27"},{"lineNumber":90,"author":{"gitId":"tttyyzzz"},"content":"            + \"      Format: bmi {h/HEIGHT_IN_CM w/WEIGHT_IN_KG}\\n\"","lastModifiedDate":"2021-10-27"},{"lineNumber":91,"author":{"gitId":"tttyyzzz"},"content":"            + \"      Identifier         Input \\n\"","lastModifiedDate":"2021-10-27"},{"lineNumber":92,"author":{"gitId":"tttyyzzz"},"content":"            + \"\\t   h/           Height of user in cm\\n\"","lastModifiedDate":"2021-10-27"},{"lineNumber":93,"author":{"gitId":"tttyyzzz"},"content":"            + \"\\t   w/           Weight of user in kg\\n\"","lastModifiedDate":"2021-10-27"},{"lineNumber":94,"author":{"gitId":"tttyyzzz"},"content":"            + \"      If no identifiers are given, bmi will be calculated using the height and weight in the profile.\";","lastModifiedDate":"2021-10-27"},{"lineNumber":95,"author":{"gitId":"tttyyzzz"},"content":"    private static String help \u003d \"\\n\"","lastModifiedDate":"2021-10-27"},{"lineNumber":96,"author":{"gitId":"tttyyzzz"},"content":"            + \"help -- View help for commands\\n\"","lastModifiedDate":"2021-10-27"},{"lineNumber":97,"author":{"gitId":"tttyyzzz"},"content":"            + \"      Format: help\";","lastModifiedDate":"2021-10-27"},{"lineNumber":98,"author":{"gitId":"tttyyzzz"},"content":"    private static String profile \u003d \"\\n\"","lastModifiedDate":"2021-10-27"},{"lineNumber":99,"author":{"gitId":"tttyyzzz"},"content":"            + \"profile -- View or modify profile details\\n\"","lastModifiedDate":"2021-10-27"},{"lineNumber":100,"author":{"gitId":"tttyyzzz"},"content":"            + \"      Format: profile n/NAME h/HEIGHT(CM) w/WEIGHT(KG) a/AGE g/CALORIEGOAL s/GENDER(M/F)\"","lastModifiedDate":"2021-10-27"},{"lineNumber":101,"author":{"gitId":"tttyyzzz"},"content":"            + \" x/ACTIVITYFACTOR(1-5)\\n\"","lastModifiedDate":"2021-10-27"},{"lineNumber":102,"author":{"gitId":"tttyyzzz"},"content":"            + \"      Identifier         Input \\n\"","lastModifiedDate":"2021-10-27"},{"lineNumber":103,"author":{"gitId":"tttyyzzz"},"content":"            + \"\\t   n/           Name of user\\n\"","lastModifiedDate":"2021-10-27"},{"lineNumber":104,"author":{"gitId":"tttyyzzz"},"content":"            + \"\\t   h/           Height of user in cm\\n\"","lastModifiedDate":"2021-10-27"},{"lineNumber":105,"author":{"gitId":"tttyyzzz"},"content":"            + \"\\t   w/           Weight of user in kg\\n\"","lastModifiedDate":"2021-10-27"},{"lineNumber":106,"author":{"gitId":"tttyyzzz"},"content":"            + \"\\t   s/           Gender of user, m for male, f for female\\n\"","lastModifiedDate":"2021-10-27"},{"lineNumber":107,"author":{"gitId":"tttyyzzz"},"content":"            + \"\\t   a/           Age of user\\n\"","lastModifiedDate":"2021-10-27"},{"lineNumber":108,"author":{"gitId":"tttyyzzz"},"content":"            + \"\\t   g/           Net calorie goal of user. (Net calorie is based on calorie of food consumed\"","lastModifiedDate":"2021-10-27"},{"lineNumber":109,"author":{"gitId":"tttyyzzz"},"content":"            + \" - calories burnt from exercise and bmr\\n\"","lastModifiedDate":"2021-10-27"},{"lineNumber":110,"author":{"gitId":"tttyyzzz"},"content":"            + \"\\t   x/           Activity factor of user, range 1 to 5\\n\"","lastModifiedDate":"2021-10-27"},{"lineNumber":111,"author":{"gitId":"tttyyzzz"},"content":"            + \"      If no identifiers are given, user can view the profile particulars.\";","lastModifiedDate":"2021-10-27"},{"lineNumber":112,"author":{"gitId":"tttyyzzz"},"content":"    private static String overview \u003d \"\\n\"","lastModifiedDate":"2021-10-27"},{"lineNumber":113,"author":{"gitId":"tttyyzzz"},"content":"            + \"overview -- View weekly and daily summary of calories\\n\"","lastModifiedDate":"2021-10-27"},{"lineNumber":114,"author":{"gitId":"tttyyzzz"},"content":"            + \"      Format: overview\";","lastModifiedDate":"2021-10-27"},{"lineNumber":115,"author":{"gitId":"tttyyzzz"},"content":"    private static String bye \u003d \"\\n\"","lastModifiedDate":"2021-10-27"},{"lineNumber":116,"author":{"gitId":"tttyyzzz"},"content":"            + \"bye -- Exit the program.\\n\"","lastModifiedDate":"2021-10-27"},{"lineNumber":117,"author":{"gitId":"tttyyzzz"},"content":"            + \"      Format: bye\";","lastModifiedDate":"2021-10-27"},{"lineNumber":118,"author":{"gitId":"tttyyzzz"},"content":"    private static String add \u003d \"      Adding food items\\n\"","lastModifiedDate":"2021-10-27"},{"lineNumber":119,"author":{"gitId":"tttyyzzz"},"content":"            + \"      Format: add f/ITEM {c/CALORIES} {d/DD-MM-YYYY} {t/HHMM}\\n\"","lastModifiedDate":"2021-10-27"},{"lineNumber":120,"author":{"gitId":"tttyyzzz"},"content":"            + \"      Identifier         Input\\n\"","lastModifiedDate":"2021-10-27"},{"lineNumber":121,"author":{"gitId":"tttyyzzz"},"content":"            + \"           f/           Description of the food item\\n\"","lastModifiedDate":"2021-10-27"},{"lineNumber":122,"author":{"gitId":"tttyyzzz"},"content":"            + \"           c/           Calories of the food\\n\"","lastModifiedDate":"2021-10-27"},{"lineNumber":123,"author":{"gitId":"tttyyzzz"},"content":"            + \"           d/           Date of food in DD-MM-YYYY\\n\"","lastModifiedDate":"2021-10-27"},{"lineNumber":124,"author":{"gitId":"tttyyzzz"},"content":"            + \"           t/           Time of food in HHMM\\n\"","lastModifiedDate":"2021-10-27"},{"lineNumber":125,"author":{"gitId":"tttyyzzz"},"content":"            + \"\\n\"","lastModifiedDate":"2021-10-27"},{"lineNumber":126,"author":{"gitId":"tttyyzzz"},"content":"            + \"      Add Exercise Items\\n\"","lastModifiedDate":"2021-10-27"},{"lineNumber":127,"author":{"gitId":"tttyyzzz"},"content":"            + \"      Format: add f/ITEM {c/CALORIES} {d/DD-MM-YYYY} {t/HHMM}\\n\"","lastModifiedDate":"2021-10-27"},{"lineNumber":128,"author":{"gitId":"tttyyzzz"},"content":"            + \"      Identifier        Input\\n\"","lastModifiedDate":"2021-10-27"},{"lineNumber":129,"author":{"gitId":"tttyyzzz"},"content":"            + \"          e/            Description of exercise\\n\"","lastModifiedDate":"2021-10-27"},{"lineNumber":130,"author":{"gitId":"tttyyzzz"},"content":"            + \"          c/            Calories burnt from exercise\\n\"","lastModifiedDate":"2021-10-27"},{"lineNumber":131,"author":{"gitId":"tttyyzzz"},"content":"            + \"          d/            Date of exercise in DD-MM-YYYY\\n\"","lastModifiedDate":"2021-10-27"},{"lineNumber":132,"author":{"gitId":"tttyyzzz"},"content":"            + \"\\n\"","lastModifiedDate":"2021-10-27"},{"lineNumber":133,"author":{"gitId":"tttyyzzz"},"content":"            + \"      Add Recurring Exercise to Upcoming Exercise List\\n\"","lastModifiedDate":"2021-10-27"},{"lineNumber":134,"author":{"gitId":"tttyyzzz"},"content":"            + \"      Format: add r/ITEM c/CALORIES :/START_DATE -/END_DATE @/DAY_OF_THE_WEEK\\n\"","lastModifiedDate":"2021-10-27"},{"lineNumber":135,"author":{"gitId":"tttyyzzz"},"content":"            + \"      Format: delete e/LIST_NO. d/DD-MM-YYYY\\n\"","lastModifiedDate":"2021-10-27"},{"lineNumber":136,"author":{"gitId":"tttyyzzz"},"content":"            + \"      Identifier        Input\\n\"","lastModifiedDate":"2021-10-27"},{"lineNumber":137,"author":{"gitId":"tttyyzzz"},"content":"            + \"          r/            Description of upcoming exercise\\n\"","lastModifiedDate":"2021-10-27"},{"lineNumber":138,"author":{"gitId":"tttyyzzz"},"content":"            + \"          c/            Calories burnt from exercise\\n\"","lastModifiedDate":"2021-10-27"},{"lineNumber":139,"author":{"gitId":"tttyyzzz"},"content":"            + \"          :/            Start date of exercise in DD-MM-YYYY\\n\"","lastModifiedDate":"2021-10-27"},{"lineNumber":140,"author":{"gitId":"tttyyzzz"},"content":"            + \"          -/            End date of exercise in DD-MM-YYYY\\n\"","lastModifiedDate":"2021-10-27"},{"lineNumber":141,"author":{"gitId":"tttyyzzz"},"content":"            + \"          @/            Workout days of the week\\n\"","lastModifiedDate":"2021-10-27"},{"lineNumber":142,"author":{"gitId":"tttyyzzz"},"content":"            + \"\\n\"","lastModifiedDate":"2021-10-27"},{"lineNumber":143,"author":{"gitId":"tttyyzzz"},"content":"            + \"      Add food Item in FoodBank\\n\"","lastModifiedDate":"2021-10-27"},{"lineNumber":144,"author":{"gitId":"tttyyzzz"},"content":"            + \"      Format: add fbank/ITEM c/CALORIES\\n\"","lastModifiedDate":"2021-10-27"},{"lineNumber":145,"author":{"gitId":"tttyyzzz"},"content":"            + \"      Identifier        Input\\n\"","lastModifiedDate":"2021-10-27"},{"lineNumber":146,"author":{"gitId":"tttyyzzz"},"content":"            + \"          fbank/        Description of food\\n\"","lastModifiedDate":"2021-10-27"},{"lineNumber":147,"author":{"gitId":"tttyyzzz"},"content":"            + \"          c/            Calories burnt from exercise\\n\"","lastModifiedDate":"2021-10-27"},{"lineNumber":148,"author":{"gitId":"tttyyzzz"},"content":"            + \"\\n\"","lastModifiedDate":"2021-10-27"},{"lineNumber":149,"author":{"gitId":"tttyyzzz"},"content":"            + \"      Add exercise Item in ExerciseBank\\n\"","lastModifiedDate":"2021-10-27"},{"lineNumber":150,"author":{"gitId":"tttyyzzz"},"content":"            + \"      Format: add fbank/ITEM c/CALORIES\\n\"","lastModifiedDate":"2021-10-27"},{"lineNumber":151,"author":{"gitId":"tttyyzzz"},"content":"            + \"      Identifier        Input\\n\"","lastModifiedDate":"2021-10-27"},{"lineNumber":152,"author":{"gitId":"tttyyzzz"},"content":"            + \"          fbank/        Description of food\\n\"","lastModifiedDate":"2021-10-27"},{"lineNumber":153,"author":{"gitId":"tttyyzzz"},"content":"            + \"          c/            Calories burnt from exercise\";","lastModifiedDate":"2021-10-27"},{"lineNumber":154,"author":{"gitId":"tttyyzzz"},"content":"    private static String view \u003d \"\\n\"","lastModifiedDate":"2021-10-27"},{"lineNumber":155,"author":{"gitId":"tttyyzzz"},"content":"            + \"      Viewing Food List\\n\"","lastModifiedDate":"2021-10-27"},{"lineNumber":156,"author":{"gitId":"tttyyzzz"},"content":"            + \"      Format: view f/\\n\"","lastModifiedDate":"2021-10-27"},{"lineNumber":157,"author":{"gitId":"tttyyzzz"},"content":"            + \"\\n\"","lastModifiedDate":"2021-10-27"},{"lineNumber":158,"author":{"gitId":"tttyyzzz"},"content":"            + \"      View exercise List\\n\"","lastModifiedDate":"2021-10-27"},{"lineNumber":159,"author":{"gitId":"tttyyzzz"},"content":"            + \"      Format: view e/\\n\"","lastModifiedDate":"2021-10-27"},{"lineNumber":160,"author":{"gitId":"tttyyzzz"},"content":"            + \"\\n\"","lastModifiedDate":"2021-10-27"},{"lineNumber":161,"author":{"gitId":"tttyyzzz"},"content":"            + \"      View Upcoming Exercise List\\n\"","lastModifiedDate":"2021-10-27"},{"lineNumber":162,"author":{"gitId":"tttyyzzz"},"content":"            + \"      Format: view u/\\n\"","lastModifiedDate":"2021-10-27"},{"lineNumber":163,"author":{"gitId":"tttyyzzz"},"content":"            + \"\\n\"","lastModifiedDate":"2021-10-27"},{"lineNumber":164,"author":{"gitId":"tttyyzzz"},"content":"            + \"      View exercise bank\\n\"","lastModifiedDate":"2021-10-27"},{"lineNumber":165,"author":{"gitId":"tttyyzzz"},"content":"            + \"      Format: view e/\\n\"","lastModifiedDate":"2021-10-27"},{"lineNumber":166,"author":{"gitId":"tttyyzzz"},"content":"            + \"\\n\"","lastModifiedDate":"2021-10-27"},{"lineNumber":167,"author":{"gitId":"tttyyzzz"},"content":"            + \"      View food bank\\n\"","lastModifiedDate":"2021-10-27"},{"lineNumber":168,"author":{"gitId":"tttyyzzz"},"content":"            + \"      Format: view f/\";","lastModifiedDate":"2021-10-27"},{"lineNumber":169,"author":{"gitId":"tttyyzzz"},"content":"    private static String delete \u003d \"      Deleting food items\\n\"","lastModifiedDate":"2021-10-27"},{"lineNumber":170,"author":{"gitId":"tttyyzzz"},"content":"            + \"      Format: delete f/LIST_NO. d/DD-MM-YYYY t/HHMM\\n\"","lastModifiedDate":"2021-10-27"},{"lineNumber":171,"author":{"gitId":"tttyyzzz"},"content":"            + \"      Identifier         Input\\n\"","lastModifiedDate":"2021-10-27"},{"lineNumber":172,"author":{"gitId":"tttyyzzz"},"content":"            + \"           f/           Index of food in food list within the given date\\n\"","lastModifiedDate":"2021-10-27"},{"lineNumber":173,"author":{"gitId":"tttyyzzz"},"content":"            + \"           d/           Date of food in DD-MM-YYYY\\n\"","lastModifiedDate":"2021-10-27"},{"lineNumber":174,"author":{"gitId":"tttyyzzz"},"content":"            + \"           t/           Time of food in HHMM\\n\"","lastModifiedDate":"2021-10-27"},{"lineNumber":175,"author":{"gitId":"tttyyzzz"},"content":"            + \"\\n\"","lastModifiedDate":"2021-10-27"},{"lineNumber":176,"author":{"gitId":"tttyyzzz"},"content":"            + \"      Delete exercise items\\n\"","lastModifiedDate":"2021-10-27"},{"lineNumber":177,"author":{"gitId":"tttyyzzz"},"content":"            + \"      Format: delete e/LIST_NO. d/DD-MM-YYYY\\n\"","lastModifiedDate":"2021-10-27"},{"lineNumber":178,"author":{"gitId":"tttyyzzz"},"content":"            + \"      Identifier        Input\\n\"","lastModifiedDate":"2021-10-27"},{"lineNumber":179,"author":{"gitId":"tttyyzzz"},"content":"            + \"          e/            Description of exercise\\n\"","lastModifiedDate":"2021-10-27"},{"lineNumber":180,"author":{"gitId":"tttyyzzz"},"content":"            + \"          d/            Date of exercise in DD-MM-YYYY\\n\"","lastModifiedDate":"2021-10-27"},{"lineNumber":181,"author":{"gitId":"tttyyzzz"},"content":"            + \"\\t\\n\"","lastModifiedDate":"2021-10-27"},{"lineNumber":182,"author":{"gitId":"tttyyzzz"},"content":"            + \"      Delete Upcoming Exercise Item from Upcoming Exercise List\\n\"","lastModifiedDate":"2021-10-27"},{"lineNumber":183,"author":{"gitId":"tttyyzzz"},"content":"            + \"      Format: delete u/LIST_NO.\\n\"","lastModifiedDate":"2021-10-27"},{"lineNumber":184,"author":{"gitId":"tttyyzzz"},"content":"            + \"      Identifier        Input\\n\"","lastModifiedDate":"2021-10-27"},{"lineNumber":185,"author":{"gitId":"tttyyzzz"},"content":"            + \"          u/        The index of the item with in the upcoming exercise list\\n\"","lastModifiedDate":"2021-10-27"},{"lineNumber":186,"author":{"gitId":"tttyyzzz"},"content":"            + \"\\n\"","lastModifiedDate":"2021-10-27"},{"lineNumber":187,"author":{"gitId":"tttyyzzz"},"content":"            + \"      Delete food items from food bank\\n\"","lastModifiedDate":"2021-10-27"},{"lineNumber":188,"author":{"gitId":"tttyyzzz"},"content":"            + \"      Format: delete fbank/LIST_NO. {n/NEW_NAME} {c/NEW_CALORIES}\\n\"","lastModifiedDate":"2021-10-27"},{"lineNumber":189,"author":{"gitId":"tttyyzzz"},"content":"            + \"      Identifier        Input\\n\"","lastModifiedDate":"2021-10-27"},{"lineNumber":190,"author":{"gitId":"tttyyzzz"},"content":"            + \"          fbank/        The index of the item with in the food bank\\n\"","lastModifiedDate":"2021-10-27"},{"lineNumber":191,"author":{"gitId":"tttyyzzz"},"content":"            + \"\\n\"","lastModifiedDate":"2021-10-27"},{"lineNumber":192,"author":{"gitId":"tttyyzzz"},"content":"            + \"      Delete exercise items from exercise bank\\n\"","lastModifiedDate":"2021-10-27"},{"lineNumber":193,"author":{"gitId":"tttyyzzz"},"content":"            + \"      Format: delete ebank/LIST_NO. {n/NEW_NAME} {c/NEW_CALORIES}\\n\"","lastModifiedDate":"2021-10-27"},{"lineNumber":194,"author":{"gitId":"tttyyzzz"},"content":"            + \"      Identifier        Input\\n\"","lastModifiedDate":"2021-10-27"},{"lineNumber":195,"author":{"gitId":"tttyyzzz"},"content":"            + \"          ebank/        The index of the item with in the exercise bank\";","lastModifiedDate":"2021-10-27"},{"lineNumber":196,"author":{"gitId":"tttyyzzz"},"content":"    private static String edit \u003d \"      Edit FoodBank\\n\"","lastModifiedDate":"2021-10-27"},{"lineNumber":197,"author":{"gitId":"tttyyzzz"},"content":"            + \"      Format: edit fbank/LIST_NO. {n/NEW_NAME} {c/NEW_CALORIES}\\n\"","lastModifiedDate":"2021-10-27"},{"lineNumber":198,"author":{"gitId":"tttyyzzz"},"content":"            + \"      Identifier        Input\\n\"","lastModifiedDate":"2021-10-27"},{"lineNumber":199,"author":{"gitId":"tttyyzzz"},"content":"            + \"          fbank/        The index of the item with in the food bank\\n\"","lastModifiedDate":"2021-10-27"},{"lineNumber":200,"author":{"gitId":"tttyyzzz"},"content":"            + \"          n/            New description of food name\\n\"","lastModifiedDate":"2021-10-27"},{"lineNumber":201,"author":{"gitId":"tttyyzzz"},"content":"            + \"          c/            Calories of food\\n\"","lastModifiedDate":"2021-10-27"},{"lineNumber":202,"author":{"gitId":"tttyyzzz"},"content":"            + \"\\t \\n\"","lastModifiedDate":"2021-10-27"},{"lineNumber":203,"author":{"gitId":"tttyyzzz"},"content":"            + \"      Edit ExerciseBank\\n\"","lastModifiedDate":"2021-10-27"},{"lineNumber":204,"author":{"gitId":"tttyyzzz"},"content":"            + \"      Format: edit ebank/LIST_NO. {n/NEW_NAME} {c/NEW_CALORIES}\\n\"","lastModifiedDate":"2021-10-27"},{"lineNumber":205,"author":{"gitId":"tttyyzzz"},"content":"            + \"      Identifier        Input\\n\"","lastModifiedDate":"2021-10-27"},{"lineNumber":206,"author":{"gitId":"tttyyzzz"},"content":"            + \"          ebank/        The index of the item with in the exercise bank\\n\"","lastModifiedDate":"2021-10-27"},{"lineNumber":207,"author":{"gitId":"tttyyzzz"},"content":"            + \"          n/            New description of exercise name\\n\"","lastModifiedDate":"2021-10-27"},{"lineNumber":208,"author":{"gitId":"tttyyzzz"},"content":"            + \"          c/            Calories burnt from exercise\\n\"","lastModifiedDate":"2021-10-27"},{"lineNumber":209,"author":{"gitId":"tttyyzzz"},"content":"            + \"\\n\"","lastModifiedDate":"2021-10-27"},{"lineNumber":210,"author":{"gitId":"tttyyzzz"},"content":"            + \"     Edit Upcoming Exercise List\\n\"","lastModifiedDate":"2021-10-27"},{"lineNumber":211,"author":{"gitId":"tttyyzzz"},"content":"            + \"     Format: edit u/LIST_NO. {n/NEW_NAME} {c/NEW_CALORIES}\\n\"","lastModifiedDate":"2021-10-27"},{"lineNumber":212,"author":{"gitId":"tttyyzzz"},"content":"            + \"     Identifier        Input\\n\"","lastModifiedDate":"2021-10-27"},{"lineNumber":213,"author":{"gitId":"tttyyzzz"},"content":"            + \"          u/        The index of the item with in the upcoming exercise list\\n\"","lastModifiedDate":"2021-10-27"},{"lineNumber":214,"author":{"gitId":"tttyyzzz"},"content":"            + \"          n/            New description of exercise name\\n\"","lastModifiedDate":"2021-10-27"},{"lineNumber":215,"author":{"gitId":"tttyyzzz"},"content":"            + \"          c/            Calories burnt from exercise   \";","lastModifiedDate":"2021-10-27"},{"lineNumber":216,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":217,"author":{"gitId":"tttyyzzz"},"content":"    private String buildHelpString2() {","lastModifiedDate":"2021-10-27"},{"lineNumber":218,"author":{"gitId":"tttyyzzz"},"content":"        StringBuilder helpMessage \u003d new StringBuilder(EMPTY);// need to include the format later","lastModifiedDate":"2021-10-27"},{"lineNumber":219,"author":{"gitId":"tttyyzzz"},"content":"        helpMessage.append(MESSAGE_HELP_INTRO).append(LS).append(LS)","lastModifiedDate":"2021-10-27"},{"lineNumber":220,"author":{"gitId":"tttyyzzz"},"content":"                .append(MESSAGE_COMMON_NOTATIONS).append(LS).append(LS)","lastModifiedDate":"2021-10-27"},{"lineNumber":221,"author":{"gitId":"tttyyzzz"},"content":"                .append(MESSAGE_ADD_HELP).append(LS)","lastModifiedDate":"2021-10-27"},{"lineNumber":222,"author":{"gitId":"tttyyzzz"},"content":"                .append(add).append(LS).append(LS)","lastModifiedDate":"2021-10-27"},{"lineNumber":223,"author":{"gitId":"tttyyzzz"},"content":"                .append(bmi).append(LS)","lastModifiedDate":"2021-10-27"},{"lineNumber":224,"author":{"gitId":"tttyyzzz"},"content":"                .append(bye).append(LS).append(LS)","lastModifiedDate":"2021-10-27"},{"lineNumber":225,"author":{"gitId":"tttyyzzz"},"content":"                .append(MESSAGE_DELETE_HELP).append(LS)","lastModifiedDate":"2021-10-27"},{"lineNumber":226,"author":{"gitId":"tttyyzzz"},"content":"                .append(delete).append(LS).append(LS)","lastModifiedDate":"2021-10-27"},{"lineNumber":227,"author":{"gitId":"tttyyzzz"},"content":"                .append(MESSAGE_EDIT_HELP).append(LS)","lastModifiedDate":"2021-10-27"},{"lineNumber":228,"author":{"gitId":"tttyyzzz"},"content":"                .append(edit).append(LS)","lastModifiedDate":"2021-10-27"},{"lineNumber":229,"author":{"gitId":"tttyyzzz"},"content":"                .append(help).append(LS)","lastModifiedDate":"2021-10-27"},{"lineNumber":230,"author":{"gitId":"tttyyzzz"},"content":"                .append(profile).append(LS)","lastModifiedDate":"2021-10-27"},{"lineNumber":231,"author":{"gitId":"tttyyzzz"},"content":"                .append(overview).append(LS).append(LS)","lastModifiedDate":"2021-10-27"},{"lineNumber":232,"author":{"gitId":"tttyyzzz"},"content":"                .append(MESSAGE_VIEW_HELP).append(LS)","lastModifiedDate":"2021-10-27"},{"lineNumber":233,"author":{"gitId":"tttyyzzz"},"content":"                .append(view).append(LS);","lastModifiedDate":"2021-10-27"},{"lineNumber":234,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":235,"author":{"gitId":"tttyyzzz"},"content":"        return helpMessage.toString().trim();","lastModifiedDate":"2021-10-27"},{"lineNumber":236,"author":{"gitId":"tttyyzzz"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":237,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":238,"author":{"gitId":"tlyi"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":239,"author":{"gitId":"tlyi"},"content":"    public CommandResult execute() {","lastModifiedDate":"2021-10-10"},{"lineNumber":240,"author":{"gitId":"tttyyzzz"},"content":"        return new CommandResult(buildHelpString2());","lastModifiedDate":"2021-10-27"},{"lineNumber":241,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":242,"author":{"gitId":"tlyi"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"weidak":1,"tttyyzzz":229,"tlyi":12}},{"path":"src/main/java/seedu/duke/logic/commands/InvalidCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.logic.commands;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"tlyi"},"content":"/**","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"tlyi"},"content":" * Represents any command that cannot be executed due to invalid format.","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"tlyi"},"content":" * Contains a String of message that describes the error.","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"tlyi"},"content":" */","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"tlyi"},"content":"public class InvalidCommand extends Command {","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"tlyi"},"content":"    public final String errorMessage;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"tlyi"},"content":"    public InvalidCommand(String errorMessage) {","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"tlyi"},"content":"        this.errorMessage \u003d errorMessage;","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"tlyi"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"tlyi"},"content":"    public CommandResult execute() {","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"tlyi"},"content":"        return new CommandResult(this.errorMessage);","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"tlyi"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"tlyi":18}},{"path":"src/main/java/seedu/duke/logic/commands/OverviewCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.logic.commands;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"tttyyzzz"},"content":"import seedu.duke.ui.Statistics;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"tlyi"},"content":"/**","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"tlyi"},"content":" * Represents the command that when executed, displays the overview of calorie statistics.","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"tlyi"},"content":" */","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"tlyi"},"content":"public class OverviewCommand extends Command {","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"tlyi"},"content":"    public static final String COMMAND_WORD \u003d \"overview\";","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_COMMAND_FORMAT \u003d","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"tlyi"},"content":"            CommandMessages.QUOTATION + COMMAND_WORD + CommandMessages.QUOTATION;","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"tttyyzzz"},"content":"    protected Statistics statistics;","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"tlyi"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"tlyi"},"content":"    public CommandResult execute() {","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"tttyyzzz"},"content":"        statistics \u003d new Statistics(super.foodItems, super.exerciseItems, super.profile);","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"tttyyzzz"},"content":"        return new CommandResult(this.statistics.overviewSummary());","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"tlyi"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"tttyyzzz":5,"tlyi":15}},{"path":"src/main/java/seedu/duke/logic/commands/ProfileCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.logic.commands;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"tlyi"},"content":"/**","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"tlyi"},"content":" * Represents the command that when executed, shows the value of name, height and weight in the Profile.","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"tlyi"},"content":" */","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"tlyi"},"content":"public class ProfileCommand extends Command {","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"tlyi"},"content":"    public ProfileCommand() {","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"tlyi"},"content":"    @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"tlyi"},"content":"    public CommandResult execute() {","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"tlyi"},"content":"        return new CommandResult(super.profile.convertToString());","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"tlyi"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"tlyi":15}},{"path":"src/main/java/seedu/duke/logic/commands/ProfileUpdateCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.logic.commands;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"tlyi"},"content":"import seedu.duke.data.profile.Profile;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"tlyi"},"content":"import seedu.duke.data.profile.attributes.ActivityFactor;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"tlyi"},"content":"import seedu.duke.data.profile.attributes.Age;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"tlyi"},"content":"import seedu.duke.data.profile.attributes.CalorieGoal;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"tlyi"},"content":"import seedu.duke.data.profile.attributes.Gender;","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"tlyi"},"content":"import seedu.duke.data.profile.attributes.Height;","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"tlyi"},"content":"import seedu.duke.data.profile.attributes.Name;","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"tlyi"},"content":"import seedu.duke.data.profile.attributes.Weight;","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"tlyi"},"content":"import seedu.duke.data.profile.exceptions.InvalidCharacteristicException;","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"weidak"},"content":"/**","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"tlyi"},"content":" * Represents the command that when executed, changes the value of attributes in the Profile.","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"weidak"},"content":" */","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"weidak"},"content":"public class ProfileUpdateCommand extends Command {","lastModifiedDate":"2021-10-18"},{"lineNumber":17,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_COMMAND_FORMAT \u003d CommandMessages.QUOTATION + COMMAND_WORD_PROFILE","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"tlyi"},"content":"            + \" \" + COMMAND_PREFIX_NAME + COMMAND_PREFIX_DELIMITER + \"NAME \"","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"tlyi"},"content":"            + COMMAND_PREFIX_HEIGHT + COMMAND_PREFIX_DELIMITER + \"HEIGHT(CM) \"","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"tlyi"},"content":"            + COMMAND_PREFIX_WEIGHT + COMMAND_PREFIX_DELIMITER + \"WEIGHT(KG) \"","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"tlyi"},"content":"            + COMMAND_PREFIX_AGE + COMMAND_PREFIX_DELIMITER + \"AGE \"","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"tlyi"},"content":"            + COMMAND_PREFIX_GOAL + COMMAND_PREFIX_DELIMITER + \"CALORIEGOAL \"","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"tlyi"},"content":"            + COMMAND_PREFIX_GENDER + COMMAND_PREFIX_DELIMITER + \"GENDER(M/F) \"","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"tlyi"},"content":"            + COMMAND_PREFIX_ACTIVITY_FACTOR + COMMAND_PREFIX_DELIMITER + \"ACTIVITYFACTOR(1-5)\"","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"tlyi"},"content":"            + CommandMessages.QUOTATION;","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Trying to update your profile? \"","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"tlyi"},"content":"            + \"Use the following format:\" + CommandMessages.INDENTED_LS + MESSAGE_COMMAND_FORMAT;","lastModifiedDate":"2021-10-27"},{"lineNumber":28,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"tlyi"},"content":"    public static final String[] EXPECTED_PREFIXES \u003d {","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"tlyi"},"content":"            COMMAND_PREFIX_NAME,","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"tlyi"},"content":"            COMMAND_PREFIX_HEIGHT,","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"tlyi"},"content":"            COMMAND_PREFIX_WEIGHT,","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"tlyi"},"content":"            COMMAND_PREFIX_GOAL,","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"tlyi"},"content":"            COMMAND_PREFIX_AGE,","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"tlyi"},"content":"            COMMAND_PREFIX_ACTIVITY_FACTOR,","lastModifiedDate":"2021-10-19"},{"lineNumber":37,"author":{"gitId":"tlyi"},"content":"            COMMAND_PREFIX_GENDER","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"tlyi"},"content":"    };","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Your profile has been updated!\" + CommandMessages.LS + \"%s\";","lastModifiedDate":"2021-10-27"},{"lineNumber":41,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":42,"author":{"gitId":"weidak"},"content":"    private Name name;","lastModifiedDate":"2021-10-21"},{"lineNumber":43,"author":{"gitId":"weidak"},"content":"    private Weight weight;","lastModifiedDate":"2021-10-21"},{"lineNumber":44,"author":{"gitId":"weidak"},"content":"    private Height height;","lastModifiedDate":"2021-10-21"},{"lineNumber":45,"author":{"gitId":"weidak"},"content":"    private CalorieGoal calorieGoal;","lastModifiedDate":"2021-10-21"},{"lineNumber":46,"author":{"gitId":"weidak"},"content":"    private Age age;","lastModifiedDate":"2021-10-21"},{"lineNumber":47,"author":{"gitId":"weidak"},"content":"    private ActivityFactor activityFactor;","lastModifiedDate":"2021-10-21"},{"lineNumber":48,"author":{"gitId":"weidak"},"content":"    private Gender gender;","lastModifiedDate":"2021-10-21"},{"lineNumber":49,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":50,"author":{"gitId":"weidak"},"content":"    public ProfileUpdateCommand(String name, double height, double weight, int calorieGoal, int age,","lastModifiedDate":"2021-10-18"},{"lineNumber":51,"author":{"gitId":"weidak"},"content":"                                int activityFactor, char gender) {","lastModifiedDate":"2021-10-18"},{"lineNumber":52,"author":{"gitId":"weidak"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2021-10-21"},{"lineNumber":53,"author":{"gitId":"weidak"},"content":"        this.height \u003d new Height(height);","lastModifiedDate":"2021-10-21"},{"lineNumber":54,"author":{"gitId":"weidak"},"content":"        this.weight \u003d new Weight(weight);","lastModifiedDate":"2021-10-21"},{"lineNumber":55,"author":{"gitId":"weidak"},"content":"        this.calorieGoal \u003d new CalorieGoal(calorieGoal);","lastModifiedDate":"2021-10-21"},{"lineNumber":56,"author":{"gitId":"weidak"},"content":"        this.gender \u003d new Gender(gender);","lastModifiedDate":"2021-10-21"},{"lineNumber":57,"author":{"gitId":"weidak"},"content":"        this.age \u003d new Age(age);","lastModifiedDate":"2021-10-21"},{"lineNumber":58,"author":{"gitId":"weidak"},"content":"        this.activityFactor \u003d new ActivityFactor(activityFactor);","lastModifiedDate":"2021-10-21"},{"lineNumber":59,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":60,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":61,"author":{"gitId":"weidak"},"content":"    private void checkIfCommandShouldExecute() throws InvalidCharacteristicException {","lastModifiedDate":"2021-10-20"},{"lineNumber":62,"author":{"gitId":"weidak"},"content":"        if (!height.isValid()) {","lastModifiedDate":"2021-10-20"},{"lineNumber":63,"author":{"gitId":"weidak"},"content":"            throw new InvalidCharacteristicException(Profile.ERROR_HEIGHT);","lastModifiedDate":"2021-10-20"},{"lineNumber":64,"author":{"gitId":"weidak"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":65,"author":{"gitId":"weidak"},"content":"        if (!weight.isValid()) {","lastModifiedDate":"2021-10-20"},{"lineNumber":66,"author":{"gitId":"weidak"},"content":"            throw new InvalidCharacteristicException(Profile.ERROR_WEIGHT);","lastModifiedDate":"2021-10-20"},{"lineNumber":67,"author":{"gitId":"weidak"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":68,"author":{"gitId":"weidak"},"content":"        if (!gender.isValid()) {","lastModifiedDate":"2021-10-20"},{"lineNumber":69,"author":{"gitId":"weidak"},"content":"            throw new InvalidCharacteristicException(Profile.ERROR_GENDER);","lastModifiedDate":"2021-10-20"},{"lineNumber":70,"author":{"gitId":"weidak"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":71,"author":{"gitId":"weidak"},"content":"        if (!age.isValid()) {","lastModifiedDate":"2021-10-20"},{"lineNumber":72,"author":{"gitId":"weidak"},"content":"            throw new InvalidCharacteristicException(Profile.ERROR_AGE);","lastModifiedDate":"2021-10-20"},{"lineNumber":73,"author":{"gitId":"weidak"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":74,"author":{"gitId":"weidak"},"content":"        if (!calorieGoal.isValid()) {","lastModifiedDate":"2021-10-20"},{"lineNumber":75,"author":{"gitId":"weidak"},"content":"            throw new InvalidCharacteristicException(Profile.ERROR_CALORIE_GOAL);","lastModifiedDate":"2021-10-20"},{"lineNumber":76,"author":{"gitId":"weidak"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":77,"author":{"gitId":"weidak"},"content":"        if (!activityFactor.isValid()) {","lastModifiedDate":"2021-10-20"},{"lineNumber":78,"author":{"gitId":"weidak"},"content":"            throw new InvalidCharacteristicException(Profile.ERROR_ACTIVITY_FACTOR);","lastModifiedDate":"2021-10-20"},{"lineNumber":79,"author":{"gitId":"weidak"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":80,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":81,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":82,"author":{"gitId":"weidak"},"content":"    @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":83,"author":{"gitId":"weidak"},"content":"    public CommandResult execute() {","lastModifiedDate":"2021-10-18"},{"lineNumber":84,"author":{"gitId":"weidak"},"content":"        try {","lastModifiedDate":"2021-10-18"},{"lineNumber":85,"author":{"gitId":"weidak"},"content":"            this.name \u003d name.getName().equals(NULL_STRING) ? super.profile.getProfileName() : name;","lastModifiedDate":"2021-10-20"},{"lineNumber":86,"author":{"gitId":"weidak"},"content":"            this.height \u003d height.getHeight() \u003d\u003d NULL_DOUBLE ? super.profile.getProfileHeight() : height;","lastModifiedDate":"2021-10-20"},{"lineNumber":87,"author":{"gitId":"weidak"},"content":"            this.weight \u003d weight.getWeight() \u003d\u003d NULL_DOUBLE ? super.profile.getProfileWeight() : weight;","lastModifiedDate":"2021-10-20"},{"lineNumber":88,"author":{"gitId":"weidak"},"content":"            this.gender \u003d gender.getGender() \u003d\u003d NULL_CHAR ? super.profile.getProfileGender() : gender;","lastModifiedDate":"2021-10-20"},{"lineNumber":89,"author":{"gitId":"weidak"},"content":"            this.age \u003d age.getAge() \u003d\u003d NULL_INT ? super.profile.getProfileAge() : age;","lastModifiedDate":"2021-10-20"},{"lineNumber":90,"author":{"gitId":"weidak"},"content":"            this.calorieGoal \u003d calorieGoal.getCalorieGoal() \u003d\u003d NULL_INT","lastModifiedDate":"2021-10-20"},{"lineNumber":91,"author":{"gitId":"weidak"},"content":"                    ? super.profile.getProfileCalorieGoal()","lastModifiedDate":"2021-10-20"},{"lineNumber":92,"author":{"gitId":"weidak"},"content":"                    : calorieGoal;","lastModifiedDate":"2021-10-20"},{"lineNumber":93,"author":{"gitId":"weidak"},"content":"            this.activityFactor \u003d activityFactor.getActivityFactor() \u003d\u003d NULL_INT","lastModifiedDate":"2021-10-20"},{"lineNumber":94,"author":{"gitId":"weidak"},"content":"                    ? super.profile.getProfileActivityFactor()","lastModifiedDate":"2021-10-20"},{"lineNumber":95,"author":{"gitId":"weidak"},"content":"                    : activityFactor;","lastModifiedDate":"2021-10-20"},{"lineNumber":96,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":97,"author":{"gitId":"weidak"},"content":"            checkIfCommandShouldExecute();","lastModifiedDate":"2021-10-20"},{"lineNumber":98,"author":{"gitId":"weidak"},"content":"            super.profile.setProfile(this.name, this.height, this.weight,","lastModifiedDate":"2021-10-21"},{"lineNumber":99,"author":{"gitId":"weidak"},"content":"                    this.gender, this.age, this.calorieGoal, this.activityFactor);","lastModifiedDate":"2021-10-20"},{"lineNumber":100,"author":{"gitId":"weidak"},"content":"            return new CommandResult(String.format(","lastModifiedDate":"2021-10-18"},{"lineNumber":101,"author":{"gitId":"tlyi"},"content":"                    MESSAGE_SUCCESS, super.profile.convertToString()));","lastModifiedDate":"2021-10-21"},{"lineNumber":102,"author":{"gitId":"weidak"},"content":"        } catch (InvalidCharacteristicException e) {","lastModifiedDate":"2021-10-18"},{"lineNumber":103,"author":{"gitId":"weidak"},"content":"            return new CommandResult(e.getMessage());","lastModifiedDate":"2021-10-18"},{"lineNumber":104,"author":{"gitId":"weidak"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":105,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":106,"author":{"gitId":"weidak"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"weidak":70,"tlyi":36}},{"path":"src/main/java/seedu/duke/logic/commands/ViewExerciseBankCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.logic.commands;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"tlyi"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"tlyi"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"tlyi"},"content":"/**","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"tlyi"},"content":" * Represents the command that when executed, lists all the items in the ExerciseBank.","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"tlyi"},"content":" */","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"tlyi"},"content":"public class ViewExerciseBankCommand extends Command {","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_COMMAND_FORMAT \u003d CommandMessages.QUOTATION + COMMAND_WORD_VIEW","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"tlyi"},"content":"            + \" \" + COMMAND_PREFIX_EXERCISE_BANK + COMMAND_PREFIX_DELIMITER + CommandMessages.QUOTATION;","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"You have %1$d exercise(s) in your exercise bank:\"","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"tlyi"},"content":"            + CommandMessages.LS + \"%2$s\";","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"tlyi"},"content":"    private static Logger logger \u003d Logger.getLogger(\"ViewExerciseBankCommand\");","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"tlyi"},"content":"    @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"tlyi"},"content":"    public CommandResult execute() {","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"tlyi"},"content":"        if (super.exerciseBank.getSize() \u003d\u003d 0) {","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"tlyi"},"content":"            logger.log(Level.WARNING, \"Exercise bank is empty\");","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"tlyi"},"content":"            return new CommandResult(CommandMessages.MESSAGE_EMPTY_EXERCISE_BANK);","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"tlyi"},"content":"        assert exerciseBank.getSize() \u003e 0 : \"Exercise bank is not empty\";","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"tlyi"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, super.exerciseBank.getSize(),","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"tlyi"},"content":"                super.exerciseBank.convertToString()));","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"tlyi"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"tlyi":27}},{"path":"src/main/java/seedu/duke/logic/commands/ViewExerciseListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.logic.commands;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"xingjie99"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"xingjie99"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"tlyi"},"content":"/**","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"tlyi"},"content":" * Represents the command that when executed, lists all the items in the ExerciseList.","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"tlyi"},"content":" */","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"tlyi"},"content":"public class ViewExerciseListCommand extends Command {","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_COMMAND_FORMAT \u003d CommandMessages.QUOTATION + COMMAND_WORD_VIEW","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"tlyi"},"content":"            + \" \" + COMMAND_PREFIX_EXERCISE + COMMAND_PREFIX_DELIMITER + CommandMessages.QUOTATION;","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"tryyang2001"},"content":"    public static final String MESSAGE_SUCCESS \u003d \" Here is a summary of all the exercises you have done \"","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"tlyi"},"content":"            + \"in the past week:\" + CommandMessages.LS + \"%1$s\";","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"xingjie99"},"content":"    private static Logger logger \u003d Logger.getLogger(\"ViewExerciseCommand\");","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"tlyi"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"tlyi"},"content":"    public CommandResult execute() {","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"xingjie99"},"content":"        if (super.exerciseItems.getSize() \u003d\u003d 0) {","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"xingjie99"},"content":"            logger.log(Level.WARNING, \"Exercise list is empty\");","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"tlyi"},"content":"            return new CommandResult(CommandMessages.MESSAGE_EMPTY_EXERCISE_LIST);","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"xingjie99"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"xingjie99"},"content":"        assert exerciseItems.getSize() \u003e 0 : \"Exercise list is not empty\";","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"tryyang2001"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, super.exerciseItems.convertToString()));","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"tlyi"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"xingjie99":8,"tryyang2001":2,"tlyi":17}},{"path":"src/main/java/seedu/duke/logic/commands/ViewFoodBankCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.logic.commands;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"tlyi"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"tlyi"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"tlyi"},"content":"/**","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"tlyi"},"content":" * Represents the command that when executed, lists all the items in the FoodBank.","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"tlyi"},"content":" */","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"tlyi"},"content":"public class ViewFoodBankCommand extends Command {","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_COMMAND_FORMAT \u003d CommandMessages.QUOTATION + COMMAND_WORD_VIEW","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"tlyi"},"content":"            + \" \" + COMMAND_PREFIX_FOOD_BANK + COMMAND_PREFIX_DELIMITER + CommandMessages.QUOTATION;","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"You have %1$d food(s) in your food bank:\"","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"tlyi"},"content":"            + CommandMessages.LS + \"%2$s\";","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"tlyi"},"content":"    private static Logger logger \u003d Logger.getLogger(\"ViewFoodBankCommand\");","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"tlyi"},"content":"    @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"tlyi"},"content":"    public CommandResult execute() {","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"tlyi"},"content":"        if (super.foodBank.getSize() \u003d\u003d 0) {","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"tlyi"},"content":"            logger.log(Level.WARNING, \"Food bank is empty\");","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"tlyi"},"content":"            return new CommandResult(CommandMessages.MESSAGE_EMPTY_FOOD_BANK);","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"tlyi"},"content":"        assert foodBank.getSize() \u003e 0 : \"Food bank is not empty\";","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"tlyi"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, super.foodBank.getSize(),","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"tlyi"},"content":"                super.foodBank.convertToString()));","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"tlyi"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"tlyi":27}},{"path":"src/main/java/seedu/duke/logic/commands/ViewFoodListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.logic.commands;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"tlyi"},"content":"/**","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"tlyi"},"content":" * Represents the command that when executed, lists all the items in the FoodList.","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"tlyi"},"content":" */","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"tlyi"},"content":"public class ViewFoodListCommand extends Command {","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_COMMAND_FORMAT \u003d CommandMessages.QUOTATION + COMMAND_WORD_VIEW","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"tlyi"},"content":"            + \" \" + COMMAND_PREFIX_FOOD + COMMAND_PREFIX_DELIMITER + CommandMessages.QUOTATION;","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"tryyang2001"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Here is a summary of all the food items you have consumed \"","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"tlyi"},"content":"            + \"in the past week:\" + CommandMessages.LS + \"%1$s\";","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"tlyi"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"tlyi"},"content":"    public CommandResult execute() {","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"tlyi"},"content":"        if (super.foodItems.getSize() \u003d\u003d 0) {","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"tlyi"},"content":"            return new CommandResult(CommandMessages.MESSAGE_EMPTY_FOOD_LIST);","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"tryyang2001"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, super.foodItems.convertToString()));","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"tlyi"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"tryyang2001":2,"tlyi":18}},{"path":"src/main/java/seedu/duke/logic/commands/ViewFutureExerciseListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.logic.commands;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"xingjie99"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"xingjie99"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"xingjie99"},"content":"/**","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"xingjie99"},"content":" * Represents the command that when executed, lists all the items in the FutureExerciseList.","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"xingjie99"},"content":" */","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"tlyi"},"content":"public class ViewFutureExerciseListCommand extends Command {","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_COMMAND_FORMAT \u003d CommandMessages.QUOTATION + COMMAND_WORD_VIEW","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"tlyi"},"content":"            + \" \" + COMMAND_PREFIX_UPCOMING_EXERCISE + COMMAND_PREFIX_DELIMITER + CommandMessages.QUOTATION;","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"xingjie99"},"content":"    public static final String MESSAGE_FUTURE_EXERCISE \u003d \"You have %d upcoming exercise(s):\"","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"tlyi"},"content":"            + CommandMessages.LS + \"%2$s\";","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"tlyi"},"content":"    private static Logger logger \u003d Logger.getLogger(\"ViewFutureExerciseCommand\");","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":17,"author":{"gitId":"xingjie99"},"content":"    @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"xingjie99"},"content":"    public CommandResult execute() {","lastModifiedDate":"2021-10-18"},{"lineNumber":19,"author":{"gitId":"xingjie99"},"content":"        if (super.futureExerciseItems.getSize() \u003d\u003d 0) {","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"xingjie99"},"content":"            logger.log(Level.WARNING, \"Future exercise list is empty\");","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"tlyi"},"content":"            return new CommandResult(CommandMessages.MESSAGE_EMPTY_FUTURE_EXERCISE_LIST);","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"xingjie99"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":23,"author":{"gitId":"xingjie99"},"content":"        assert futureExerciseItems.getSize() \u003e 0 : \"Future exercise list is not empty\";","lastModifiedDate":"2021-10-18"},{"lineNumber":24,"author":{"gitId":"xingjie99"},"content":"        return new CommandResult(String.format(MESSAGE_FUTURE_EXERCISE, super.futureExerciseItems.getSize(),","lastModifiedDate":"2021-10-18"},{"lineNumber":25,"author":{"gitId":"xingjie99"},"content":"                super.futureExerciseItems.convertToString()));","lastModifiedDate":"2021-10-18"},{"lineNumber":26,"author":{"gitId":"xingjie99"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":27,"author":{"gitId":"xingjie99"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"xingjie99":20,"tlyi":7}},{"path":"src/main/java/seedu/duke/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.logic.parser;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"tlyi"},"content":"import seedu.duke.logic.commands.AddExerciseBankCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"tlyi"},"content":"import seedu.duke.logic.commands.AddExerciseCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"tlyi"},"content":"import seedu.duke.logic.commands.AddFoodBankCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"tlyi"},"content":"import seedu.duke.logic.commands.AddFoodCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"tlyi"},"content":"import seedu.duke.logic.commands.AddFutureExerciseCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"tlyi"},"content":"import seedu.duke.logic.commands.AddRecurringExerciseCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"tlyi"},"content":"import seedu.duke.logic.commands.Command;","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"tlyi"},"content":"import seedu.duke.logic.commands.CommandMessages;","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"tlyi"},"content":"import seedu.duke.logic.commands.InvalidCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"tlyi"},"content":"import seedu.duke.logic.parser.exceptions.ItemNotSpecifiedException;","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"tlyi"},"content":"import seedu.duke.logic.parser.exceptions.ParamInvalidException;","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"tlyi"},"content":"import seedu.duke.logic.parser.exceptions.ParamMissingException;","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"tlyi"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"tlyi"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"tryyang2001"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"tlyi"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"tlyi"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"tlyi"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"tlyi"},"content":"/**","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"tlyi"},"content":" * Parses input arguments for Add commands.","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"tlyi"},"content":" */","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"tlyi"},"content":"public class AddCommandParser implements Parser {","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"tryyang2001"},"content":"    public static final DateTimeFormatter DATE_FORMAT \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy\");","lastModifiedDate":"2021-10-27"},{"lineNumber":29,"author":{"gitId":"tlyi"},"content":"    protected static final Logger logger \u003d Logger.getLogger(AddCommandParser.class.getName());","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"tlyi"},"content":"    @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"tlyi"},"content":"    public Command parse(String params) {","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"tlyi"},"content":"        try {","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"tlyi"},"content":"            final String itemTypePrefix \u003d ParserUtils.extractItemTypePrefix(params);","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"tlyi"},"content":"            switch (itemTypePrefix) {","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"tlyi"},"content":"            case Command.COMMAND_PREFIX_EXERCISE:","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"tlyi"},"content":"                //Fallthrough","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"tlyi"},"content":"            case Command.COMMAND_PREFIX_FOOD:","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"tlyi"},"content":"                //Fallthrough","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"tlyi"},"content":"            case Command.COMMAND_PREFIX_RECURRING:","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"tlyi"},"content":"                return parseAddToItems(params, itemTypePrefix);","lastModifiedDate":"2021-10-21"},{"lineNumber":42,"author":{"gitId":"tlyi"},"content":"            case Command.COMMAND_PREFIX_EXERCISE_BANK:","lastModifiedDate":"2021-10-21"},{"lineNumber":43,"author":{"gitId":"tlyi"},"content":"                //Fallthrough","lastModifiedDate":"2021-10-21"},{"lineNumber":44,"author":{"gitId":"tlyi"},"content":"            case Command.COMMAND_PREFIX_FOOD_BANK:","lastModifiedDate":"2021-10-21"},{"lineNumber":45,"author":{"gitId":"tlyi"},"content":"                return parseAddToBank(params, itemTypePrefix);","lastModifiedDate":"2021-10-21"},{"lineNumber":46,"author":{"gitId":"tlyi"},"content":"            default:","lastModifiedDate":"2021-10-21"},{"lineNumber":47,"author":{"gitId":"tlyi"},"content":"                throw new ItemNotSpecifiedException();","lastModifiedDate":"2021-10-21"},{"lineNumber":48,"author":{"gitId":"tlyi"},"content":"            }","lastModifiedDate":"2021-10-21"},{"lineNumber":49,"author":{"gitId":"tlyi"},"content":"        } catch (ItemNotSpecifiedException e) {","lastModifiedDate":"2021-10-21"},{"lineNumber":50,"author":{"gitId":"tlyi"},"content":"            return new InvalidCommand(CommandMessages.MESSAGE_ADD_COMMAND_INVALID_FORMAT);","lastModifiedDate":"2021-10-27"},{"lineNumber":51,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":52,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":53,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":54,"author":{"gitId":"tlyi"},"content":"    protected Command parseAddToItems(String params, String itemTypePrefix) throws ItemNotSpecifiedException {","lastModifiedDate":"2021-10-21"},{"lineNumber":55,"author":{"gitId":"tlyi"},"content":"        try {","lastModifiedDate":"2021-10-21"},{"lineNumber":56,"author":{"gitId":"tlyi"},"content":"            final String description \u003d ParserUtils.extractItemDescription(params, itemTypePrefix);","lastModifiedDate":"2021-10-21"},{"lineNumber":57,"author":{"gitId":"tlyi"},"content":"            int calories \u003d Command.NULL_CALORIES;","lastModifiedDate":"2021-10-21"},{"lineNumber":58,"author":{"gitId":"tlyi"},"content":"            boolean isCaloriesFromBank \u003d false;","lastModifiedDate":"2021-10-21"},{"lineNumber":59,"author":{"gitId":"tlyi"},"content":"            try {","lastModifiedDate":"2021-10-21"},{"lineNumber":60,"author":{"gitId":"tlyi"},"content":"                calories \u003d ParserUtils.extractItemCalories(params, true);","lastModifiedDate":"2021-10-24"},{"lineNumber":61,"author":{"gitId":"tlyi"},"content":"            } catch (ParamMissingException e) {","lastModifiedDate":"2021-10-21"},{"lineNumber":62,"author":{"gitId":"tlyi"},"content":"                isCaloriesFromBank \u003d true; //signals to Command class to check for calories from the item bank","lastModifiedDate":"2021-10-21"},{"lineNumber":63,"author":{"gitId":"weidak"},"content":"                logger.log(Level.FINE, \"No calories detected, to try checking from item bank\");","lastModifiedDate":"2021-10-27"},{"lineNumber":64,"author":{"gitId":"tlyi"},"content":"            }","lastModifiedDate":"2021-10-21"},{"lineNumber":65,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":66,"author":{"gitId":"tlyi"},"content":"            switch (itemTypePrefix) {","lastModifiedDate":"2021-10-21"},{"lineNumber":67,"author":{"gitId":"tlyi"},"content":"            case Command.COMMAND_PREFIX_EXERCISE:","lastModifiedDate":"2021-10-21"},{"lineNumber":68,"author":{"gitId":"tlyi"},"content":"                final LocalDate date \u003d ParserUtils.extractDate(params, false);","lastModifiedDate":"2021-10-21"},{"lineNumber":69,"author":{"gitId":"weidak"},"content":"                logger.log(Level.FINE, String.format(\"date detected is: %s\", date));","lastModifiedDate":"2021-10-27"},{"lineNumber":70,"author":{"gitId":"tlyi"},"content":"                if (ParserUtils.hasExtraDelimiters(params, AddExerciseCommand.EXPECTED_PREFIXES)) {","lastModifiedDate":"2021-10-21"},{"lineNumber":71,"author":{"gitId":"tlyi"},"content":"                    return new InvalidCommand(ParserMessages.MESSAGE_ERROR_TOO_MANY_DELIMITERS);","lastModifiedDate":"2021-10-21"},{"lineNumber":72,"author":{"gitId":"tryyang2001"},"content":"                } else if (ParserUtils.isSevenDaysBeforeToday(date)) {","lastModifiedDate":"2021-10-27"},{"lineNumber":73,"author":{"gitId":"tryyang2001"},"content":"                    return new InvalidCommand(String.format(ParserMessages.MESSAGE_ERROR_ITEM_DATE_TOO_OLD,","lastModifiedDate":"2021-10-27"},{"lineNumber":74,"author":{"gitId":"tryyang2001"},"content":"                            LocalDate.now().minusDays(7).format(DATE_FORMAT),","lastModifiedDate":"2021-10-27"},{"lineNumber":75,"author":{"gitId":"tryyang2001"},"content":"                            LocalDate.now().format(DATE_FORMAT)));","lastModifiedDate":"2021-10-27"},{"lineNumber":76,"author":{"gitId":"tlyi"},"content":"                }","lastModifiedDate":"2021-10-21"},{"lineNumber":77,"author":{"gitId":"tlyi"},"content":"                if (ParserUtils.isFutureDate(date)) {","lastModifiedDate":"2021-10-21"},{"lineNumber":78,"author":{"gitId":"weidak"},"content":"                    logger.log(Level.FINE, String.format(\"adding to future list\"));","lastModifiedDate":"2021-10-27"},{"lineNumber":79,"author":{"gitId":"tlyi"},"content":"                    return new AddFutureExerciseCommand(description, calories, date, isCaloriesFromBank);","lastModifiedDate":"2021-10-21"},{"lineNumber":80,"author":{"gitId":"tlyi"},"content":"                }","lastModifiedDate":"2021-10-21"},{"lineNumber":81,"author":{"gitId":"tlyi"},"content":"                return new AddExerciseCommand(description, calories, date, isCaloriesFromBank);","lastModifiedDate":"2021-10-21"},{"lineNumber":82,"author":{"gitId":"tlyi"},"content":"            case Command.COMMAND_PREFIX_FOOD:","lastModifiedDate":"2021-10-21"},{"lineNumber":83,"author":{"gitId":"tlyi"},"content":"                final LocalDateTime dateTime \u003d ParserUtils.extractDateTime(params);","lastModifiedDate":"2021-10-21"},{"lineNumber":84,"author":{"gitId":"weidak"},"content":"                logger.log(Level.FINE, String.format(\"dateTime detected is: %s\", dateTime));","lastModifiedDate":"2021-10-27"},{"lineNumber":85,"author":{"gitId":"tlyi"},"content":"                if (ParserUtils.hasExtraDelimiters(params, AddFoodCommand.EXPECTED_PREFIXES)) {","lastModifiedDate":"2021-10-21"},{"lineNumber":86,"author":{"gitId":"tlyi"},"content":"                    return new InvalidCommand(ParserMessages.MESSAGE_ERROR_TOO_MANY_DELIMITERS);","lastModifiedDate":"2021-10-21"},{"lineNumber":87,"author":{"gitId":"tryyang2001"},"content":"                } else if (ParserUtils.isSevenDaysBeforeToday(dateTime.toLocalDate())) {","lastModifiedDate":"2021-10-27"},{"lineNumber":88,"author":{"gitId":"tryyang2001"},"content":"                    return new InvalidCommand(String.format(ParserMessages.MESSAGE_ERROR_ITEM_DATE_TOO_OLD,","lastModifiedDate":"2021-10-27"},{"lineNumber":89,"author":{"gitId":"tryyang2001"},"content":"                            LocalDate.now().minusDays(7).format(DATE_FORMAT),","lastModifiedDate":"2021-10-27"},{"lineNumber":90,"author":{"gitId":"tryyang2001"},"content":"                            LocalDate.now().format(DATE_FORMAT)));","lastModifiedDate":"2021-10-27"},{"lineNumber":91,"author":{"gitId":"tlyi"},"content":"                }","lastModifiedDate":"2021-10-21"},{"lineNumber":92,"author":{"gitId":"tlyi"},"content":"                return new AddFoodCommand(description, calories, dateTime, isCaloriesFromBank);","lastModifiedDate":"2021-10-21"},{"lineNumber":93,"author":{"gitId":"tlyi"},"content":"            case Command.COMMAND_PREFIX_RECURRING:","lastModifiedDate":"2021-10-21"},{"lineNumber":94,"author":{"gitId":"tlyi"},"content":"                final LocalDate startDate \u003d ParserUtils.extractStartDate(params);","lastModifiedDate":"2021-10-21"},{"lineNumber":95,"author":{"gitId":"tlyi"},"content":"                final LocalDate endDate \u003d ParserUtils.extractEndDate(params);","lastModifiedDate":"2021-10-21"},{"lineNumber":96,"author":{"gitId":"tlyi"},"content":"                final ArrayList\u003cInteger\u003e dayOfTheWeek \u003d ParserUtils.extractDayOfTheWeek(params);","lastModifiedDate":"2021-10-21"},{"lineNumber":97,"author":{"gitId":"tlyi"},"content":"                if (ParserUtils.hasExtraDelimiters(params, AddRecurringExerciseCommand.EXPECTED_PREFIXES)) {","lastModifiedDate":"2021-10-21"},{"lineNumber":98,"author":{"gitId":"tlyi"},"content":"                    return new InvalidCommand(ParserMessages.MESSAGE_ERROR_TOO_MANY_DELIMITERS);","lastModifiedDate":"2021-10-21"},{"lineNumber":99,"author":{"gitId":"tlyi"},"content":"                }","lastModifiedDate":"2021-10-21"},{"lineNumber":100,"author":{"gitId":"tlyi"},"content":"                return new AddRecurringExerciseCommand(description, calories,","lastModifiedDate":"2021-10-21"},{"lineNumber":101,"author":{"gitId":"tlyi"},"content":"                        startDate, endDate, dayOfTheWeek, isCaloriesFromBank);","lastModifiedDate":"2021-10-21"},{"lineNumber":102,"author":{"gitId":"tlyi"},"content":"            default:","lastModifiedDate":"2021-10-21"},{"lineNumber":103,"author":{"gitId":"tlyi"},"content":"                throw new ItemNotSpecifiedException();","lastModifiedDate":"2021-10-21"},{"lineNumber":104,"author":{"gitId":"tlyi"},"content":"            }","lastModifiedDate":"2021-10-21"},{"lineNumber":105,"author":{"gitId":"tlyi"},"content":"        } catch (ParamInvalidException | ParamMissingException e) {","lastModifiedDate":"2021-10-21"},{"lineNumber":106,"author":{"gitId":"tlyi"},"content":"            return new InvalidCommand(e.getMessage());","lastModifiedDate":"2021-10-21"},{"lineNumber":107,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":108,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":109,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":110,"author":{"gitId":"tlyi"},"content":"    protected Command parseAddToBank(String params, String itemTypePrefix) throws ItemNotSpecifiedException {","lastModifiedDate":"2021-10-21"},{"lineNumber":111,"author":{"gitId":"tlyi"},"content":"        try {","lastModifiedDate":"2021-10-21"},{"lineNumber":112,"author":{"gitId":"tlyi"},"content":"            final String description \u003d ParserUtils.extractItemDescription(params, itemTypePrefix);","lastModifiedDate":"2021-10-21"},{"lineNumber":113,"author":{"gitId":"tlyi"},"content":"            final int calories \u003d ParserUtils.extractItemCalories(params, true);","lastModifiedDate":"2021-10-24"},{"lineNumber":114,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":115,"author":{"gitId":"tlyi"},"content":"            switch (itemTypePrefix) {","lastModifiedDate":"2021-10-21"},{"lineNumber":116,"author":{"gitId":"tlyi"},"content":"            case Command.COMMAND_PREFIX_EXERCISE_BANK:","lastModifiedDate":"2021-10-21"},{"lineNumber":117,"author":{"gitId":"tlyi"},"content":"                if (ParserUtils.hasExtraDelimiters(params, AddExerciseBankCommand.EXPECTED_PREFIXES)) {","lastModifiedDate":"2021-10-21"},{"lineNumber":118,"author":{"gitId":"tlyi"},"content":"                    return new InvalidCommand(ParserMessages.MESSAGE_ERROR_TOO_MANY_DELIMITERS);","lastModifiedDate":"2021-10-21"},{"lineNumber":119,"author":{"gitId":"tlyi"},"content":"                }","lastModifiedDate":"2021-10-21"},{"lineNumber":120,"author":{"gitId":"tlyi"},"content":"                return new AddExerciseBankCommand(description, calories);","lastModifiedDate":"2021-10-21"},{"lineNumber":121,"author":{"gitId":"tlyi"},"content":"            case Command.COMMAND_PREFIX_FOOD_BANK:","lastModifiedDate":"2021-10-21"},{"lineNumber":122,"author":{"gitId":"tlyi"},"content":"                if (ParserUtils.hasExtraDelimiters(params, AddFoodBankCommand.EXPECTED_PREFIXES)) {","lastModifiedDate":"2021-10-21"},{"lineNumber":123,"author":{"gitId":"tlyi"},"content":"                    return new InvalidCommand(ParserMessages.MESSAGE_ERROR_TOO_MANY_DELIMITERS);","lastModifiedDate":"2021-10-21"},{"lineNumber":124,"author":{"gitId":"tlyi"},"content":"                }","lastModifiedDate":"2021-10-21"},{"lineNumber":125,"author":{"gitId":"tlyi"},"content":"                return new AddFoodBankCommand(description, calories);","lastModifiedDate":"2021-10-21"},{"lineNumber":126,"author":{"gitId":"tlyi"},"content":"            default:","lastModifiedDate":"2021-10-21"},{"lineNumber":127,"author":{"gitId":"tlyi"},"content":"                throw new ItemNotSpecifiedException();","lastModifiedDate":"2021-10-21"},{"lineNumber":128,"author":{"gitId":"tlyi"},"content":"            }","lastModifiedDate":"2021-10-21"},{"lineNumber":129,"author":{"gitId":"tlyi"},"content":"        } catch (ParamInvalidException | ParamMissingException e) {","lastModifiedDate":"2021-10-21"},{"lineNumber":130,"author":{"gitId":"tlyi"},"content":"            return new InvalidCommand(e.getMessage());","lastModifiedDate":"2021-10-21"},{"lineNumber":131,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":132,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":133,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":134,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":135,"author":{"gitId":"tlyi"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"weidak":4,"tryyang2001":10,"tlyi":121}},{"path":"src/main/java/seedu/duke/logic/parser/BmiParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.logic.parser;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"tlyi"},"content":"import seedu.duke.logic.commands.CalculateBmiCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"tlyi"},"content":"import seedu.duke.logic.commands.CalculateBmiWithProfileCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"tlyi"},"content":"import seedu.duke.logic.commands.Command;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"tlyi"},"content":"import seedu.duke.logic.commands.InvalidCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"tlyi"},"content":"import seedu.duke.logic.parser.exceptions.ParamInvalidException;","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"tlyi"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"tlyi"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"tlyi"},"content":"/**","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"tlyi"},"content":" * Parses input arguments for Bmi commands.","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"tlyi"},"content":" */","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"tlyi"},"content":"public class BmiParser implements Parser {","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"tlyi"},"content":"    protected static final Logger logger \u003d Logger.getLogger(BmiParser.class.getName());","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"tlyi"},"content":"    @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"tlyi"},"content":"    public Command parse(String params) {","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"tlyi"},"content":"        if (params.equals(ParserMessages.EMPTY)) { //no additional parameters, assumed to be bmi from current profile","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"tlyi"},"content":"            return new CalculateBmiWithProfileCommand();","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"tlyi"},"content":"        if (ParserUtils.hasRequiredParams(params, CalculateBmiCommand.EXPECTED_PREFIXES)) {","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"tlyi"},"content":"            if (ParserUtils.hasExtraDelimiters(params, CalculateBmiCommand.EXPECTED_PREFIXES)) {","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"tlyi"},"content":"                return new InvalidCommand(ParserMessages.MESSAGE_ERROR_TOO_MANY_DELIMITERS);","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"tlyi"},"content":"            }","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"tlyi"},"content":"            try {","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"tlyi"},"content":"                final double height \u003d ParserUtils.extractHeight(params);","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"tlyi"},"content":"                final double weight \u003d ParserUtils.extractWeight(params);","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"tlyi"},"content":"                return new CalculateBmiCommand(height, weight);","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"tlyi"},"content":"            } catch (ParamInvalidException e) {","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"tlyi"},"content":"                return new InvalidCommand(e.getMessage());","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"tlyi"},"content":"            }","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"tlyi"},"content":"        } else {","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"tlyi"},"content":"            logger.log(Level.WARNING, \"Detected invalid input parameters for BMI calculation.\");","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"tlyi"},"content":"            return new InvalidCommand(CalculateBmiCommand.MESSAGE_INVALID_COMMAND_FORMAT);","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"tlyi"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"tlyi":40}},{"path":"src/main/java/seedu/duke/logic/parser/DeleteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.logic.parser;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"tlyi"},"content":"import seedu.duke.logic.commands.Command;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"tlyi"},"content":"import seedu.duke.logic.commands.CommandMessages;","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"tlyi"},"content":"import seedu.duke.logic.commands.DeleteExerciseBankCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"tlyi"},"content":"import seedu.duke.logic.commands.DeleteExerciseCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"tlyi"},"content":"import seedu.duke.logic.commands.DeleteFoodBankCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"tlyi"},"content":"import seedu.duke.logic.commands.DeleteFoodCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"tlyi"},"content":"import seedu.duke.logic.commands.DeleteFutureExerciseCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"tlyi"},"content":"import seedu.duke.logic.commands.InvalidCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"tlyi"},"content":"import seedu.duke.logic.parser.exceptions.ItemNotSpecifiedException;","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"tlyi"},"content":"import seedu.duke.logic.parser.exceptions.ParamInvalidException;","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"tlyi"},"content":"import seedu.duke.logic.parser.exceptions.ParamMissingException;","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"tlyi"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"tlyi"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"tlyi"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"tlyi"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"tlyi"},"content":"/**","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"tlyi"},"content":" * Parses input arguments for Delete commands.","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"tlyi"},"content":" */","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"tlyi"},"content":"public class DeleteCommandParser implements Parser {","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"tlyi"},"content":"    protected static final Logger logger \u003d Logger.getLogger(DeleteCommandParser.class.getName());","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"tlyi"},"content":"    @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"tlyi"},"content":"    public Command parse(String params) {","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"tlyi"},"content":"        try {","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"tlyi"},"content":"            final String itemTypePrefix \u003d ParserUtils.extractItemTypePrefix(params);","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"tlyi"},"content":"            final String description \u003d ParserUtils.extractItemDescription(params, itemTypePrefix).split(\" \")[0].trim();","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"tlyi"},"content":"            boolean isClear \u003d description.equalsIgnoreCase(Command.COMMAND_WORD_DELETE_ALL);","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"tlyi"},"content":"            switch (itemTypePrefix) {","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"tlyi"},"content":"            case Command.COMMAND_PREFIX_EXERCISE:","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"tlyi"},"content":"                return isClear ? new DeleteExerciseCommand(true)","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"tlyi"},"content":"                        : parseDeleteFromItems(params, itemTypePrefix);","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"tlyi"},"content":"            case Command.COMMAND_PREFIX_FOOD:","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"tlyi"},"content":"                return isClear ? new DeleteFoodCommand(true)","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"tlyi"},"content":"                        : parseDeleteFromItems(params, itemTypePrefix);","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"tlyi"},"content":"            case Command.COMMAND_PREFIX_UPCOMING_EXERCISE:","lastModifiedDate":"2021-10-21"},{"lineNumber":42,"author":{"gitId":"tlyi"},"content":"                return isClear ? new DeleteFutureExerciseCommand(true)","lastModifiedDate":"2021-10-21"},{"lineNumber":43,"author":{"gitId":"tlyi"},"content":"                        : parseDeleteFromFutureOrBank(params, itemTypePrefix);","lastModifiedDate":"2021-10-21"},{"lineNumber":44,"author":{"gitId":"tlyi"},"content":"            case Command.COMMAND_PREFIX_EXERCISE_BANK:","lastModifiedDate":"2021-10-21"},{"lineNumber":45,"author":{"gitId":"tlyi"},"content":"                return isClear ? new DeleteExerciseBankCommand(true)","lastModifiedDate":"2021-10-21"},{"lineNumber":46,"author":{"gitId":"tlyi"},"content":"                        : parseDeleteFromFutureOrBank(params, itemTypePrefix);","lastModifiedDate":"2021-10-21"},{"lineNumber":47,"author":{"gitId":"tlyi"},"content":"            case Command.COMMAND_PREFIX_FOOD_BANK:","lastModifiedDate":"2021-10-21"},{"lineNumber":48,"author":{"gitId":"tlyi"},"content":"                return isClear ? new DeleteFoodBankCommand(true)","lastModifiedDate":"2021-10-21"},{"lineNumber":49,"author":{"gitId":"tlyi"},"content":"                        : parseDeleteFromFutureOrBank(params, itemTypePrefix);","lastModifiedDate":"2021-10-21"},{"lineNumber":50,"author":{"gitId":"tlyi"},"content":"            default:","lastModifiedDate":"2021-10-21"},{"lineNumber":51,"author":{"gitId":"tlyi"},"content":"                throw new ItemNotSpecifiedException();","lastModifiedDate":"2021-10-21"},{"lineNumber":52,"author":{"gitId":"tlyi"},"content":"            }","lastModifiedDate":"2021-10-21"},{"lineNumber":53,"author":{"gitId":"tlyi"},"content":"        } catch (ItemNotSpecifiedException e) {","lastModifiedDate":"2021-10-21"},{"lineNumber":54,"author":{"gitId":"tlyi"},"content":"            return new InvalidCommand(CommandMessages.MESSAGE_DELETE_COMMAND_INVALID_FORMAT);","lastModifiedDate":"2021-10-27"},{"lineNumber":55,"author":{"gitId":"tlyi"},"content":"        } catch (ParamInvalidException | ParamMissingException e) {","lastModifiedDate":"2021-10-21"},{"lineNumber":56,"author":{"gitId":"tlyi"},"content":"            return new InvalidCommand(e.getMessage());","lastModifiedDate":"2021-10-21"},{"lineNumber":57,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":58,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":59,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":60,"author":{"gitId":"tlyi"},"content":"    protected Command parseDeleteFromItems(String params, String itemTypePrefix) throws ItemNotSpecifiedException {","lastModifiedDate":"2021-10-21"},{"lineNumber":61,"author":{"gitId":"tlyi"},"content":"        try {","lastModifiedDate":"2021-10-21"},{"lineNumber":62,"author":{"gitId":"tlyi"},"content":"            final int itemIndex \u003d ParserUtils.extractItemIndex(params, itemTypePrefix);","lastModifiedDate":"2021-10-21"},{"lineNumber":63,"author":{"gitId":"tlyi"},"content":"            final LocalDate date \u003d ParserUtils.extractDate(params, true);","lastModifiedDate":"2021-10-21"},{"lineNumber":64,"author":{"gitId":"weidak"},"content":"            logger.log(Level.FINE, String.format(\"date detected is: %s\", date));","lastModifiedDate":"2021-10-27"},{"lineNumber":65,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":66,"author":{"gitId":"tlyi"},"content":"            switch (itemTypePrefix) {","lastModifiedDate":"2021-10-21"},{"lineNumber":67,"author":{"gitId":"tlyi"},"content":"            case Command.COMMAND_PREFIX_EXERCISE:","lastModifiedDate":"2021-10-21"},{"lineNumber":68,"author":{"gitId":"tlyi"},"content":"                if (ParserUtils.hasExtraDelimiters(params, DeleteExerciseCommand.EXPECTED_PREFIXES)) {","lastModifiedDate":"2021-10-21"},{"lineNumber":69,"author":{"gitId":"tlyi"},"content":"                    return new InvalidCommand(ParserMessages.MESSAGE_ERROR_TOO_MANY_DELIMITERS);","lastModifiedDate":"2021-10-21"},{"lineNumber":70,"author":{"gitId":"tlyi"},"content":"                }","lastModifiedDate":"2021-10-21"},{"lineNumber":71,"author":{"gitId":"weidak"},"content":"                logger.log(Level.FINE, String.format(\"deleting exercise item %s from %s\", itemIndex, date));","lastModifiedDate":"2021-10-27"},{"lineNumber":72,"author":{"gitId":"tlyi"},"content":"                return new DeleteExerciseCommand(itemIndex, date);","lastModifiedDate":"2021-10-21"},{"lineNumber":73,"author":{"gitId":"tlyi"},"content":"            case Command.COMMAND_PREFIX_FOOD:","lastModifiedDate":"2021-10-21"},{"lineNumber":74,"author":{"gitId":"tlyi"},"content":"                if (ParserUtils.hasExtraDelimiters(params, DeleteFoodCommand.EXPECTED_PREFIXES)) {","lastModifiedDate":"2021-10-21"},{"lineNumber":75,"author":{"gitId":"tlyi"},"content":"                    return new InvalidCommand(ParserMessages.MESSAGE_ERROR_TOO_MANY_DELIMITERS);","lastModifiedDate":"2021-10-21"},{"lineNumber":76,"author":{"gitId":"tlyi"},"content":"                }","lastModifiedDate":"2021-10-21"},{"lineNumber":77,"author":{"gitId":"tlyi"},"content":"                final LocalTime time \u003d ParserUtils.extractTime(params, true);","lastModifiedDate":"2021-10-21"},{"lineNumber":78,"author":{"gitId":"weidak"},"content":"                logger.log(Level.FINE, String.format(\"deleting food item %s from %s %s\", itemIndex, date, time));","lastModifiedDate":"2021-10-27"},{"lineNumber":79,"author":{"gitId":"tlyi"},"content":"                return new DeleteFoodCommand(itemIndex, date, time);","lastModifiedDate":"2021-10-21"},{"lineNumber":80,"author":{"gitId":"tlyi"},"content":"            default:","lastModifiedDate":"2021-10-21"},{"lineNumber":81,"author":{"gitId":"tlyi"},"content":"                throw new ItemNotSpecifiedException();","lastModifiedDate":"2021-10-21"},{"lineNumber":82,"author":{"gitId":"tlyi"},"content":"            }","lastModifiedDate":"2021-10-21"},{"lineNumber":83,"author":{"gitId":"tlyi"},"content":"        } catch (ParamInvalidException | ParamMissingException e) {","lastModifiedDate":"2021-10-21"},{"lineNumber":84,"author":{"gitId":"tlyi"},"content":"            return new InvalidCommand(e.getMessage());","lastModifiedDate":"2021-10-21"},{"lineNumber":85,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":86,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":87,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":88,"author":{"gitId":"tlyi"},"content":"    protected Command parseDeleteFromFutureOrBank(String params, String itemTypePrefix)","lastModifiedDate":"2021-10-21"},{"lineNumber":89,"author":{"gitId":"tlyi"},"content":"            throws ItemNotSpecifiedException {","lastModifiedDate":"2021-10-21"},{"lineNumber":90,"author":{"gitId":"tlyi"},"content":"        try {","lastModifiedDate":"2021-10-21"},{"lineNumber":91,"author":{"gitId":"tlyi"},"content":"            final int itemIndex \u003d ParserUtils.extractItemIndex(params, itemTypePrefix);","lastModifiedDate":"2021-10-21"},{"lineNumber":92,"author":{"gitId":"tlyi"},"content":"            switch (itemTypePrefix) {","lastModifiedDate":"2021-10-21"},{"lineNumber":93,"author":{"gitId":"tlyi"},"content":"            case Command.COMMAND_PREFIX_EXERCISE_BANK:","lastModifiedDate":"2021-10-21"},{"lineNumber":94,"author":{"gitId":"tlyi"},"content":"                if (ParserUtils.hasExtraDelimiters(params, DeleteExerciseBankCommand.EXPECTED_PREFIXES)) {","lastModifiedDate":"2021-10-21"},{"lineNumber":95,"author":{"gitId":"tlyi"},"content":"                    return new InvalidCommand(ParserMessages.MESSAGE_ERROR_TOO_MANY_DELIMITERS);","lastModifiedDate":"2021-10-21"},{"lineNumber":96,"author":{"gitId":"tlyi"},"content":"                }","lastModifiedDate":"2021-10-21"},{"lineNumber":97,"author":{"gitId":"tlyi"},"content":"                return new DeleteExerciseBankCommand(itemIndex);","lastModifiedDate":"2021-10-21"},{"lineNumber":98,"author":{"gitId":"tlyi"},"content":"            case Command.COMMAND_PREFIX_FOOD_BANK:","lastModifiedDate":"2021-10-21"},{"lineNumber":99,"author":{"gitId":"tlyi"},"content":"                if (ParserUtils.hasExtraDelimiters(params, DeleteFoodBankCommand.EXPECTED_PREFIXES)) {","lastModifiedDate":"2021-10-21"},{"lineNumber":100,"author":{"gitId":"tlyi"},"content":"                    return new InvalidCommand(ParserMessages.MESSAGE_ERROR_TOO_MANY_DELIMITERS);","lastModifiedDate":"2021-10-21"},{"lineNumber":101,"author":{"gitId":"tlyi"},"content":"                }","lastModifiedDate":"2021-10-21"},{"lineNumber":102,"author":{"gitId":"tlyi"},"content":"                return new DeleteFoodBankCommand(itemIndex);","lastModifiedDate":"2021-10-21"},{"lineNumber":103,"author":{"gitId":"tlyi"},"content":"            case Command.COMMAND_PREFIX_UPCOMING_EXERCISE:","lastModifiedDate":"2021-10-21"},{"lineNumber":104,"author":{"gitId":"tlyi"},"content":"                if (ParserUtils.hasExtraDelimiters(params, DeleteFutureExerciseCommand.EXPECTED_PREFIXES)) {","lastModifiedDate":"2021-10-21"},{"lineNumber":105,"author":{"gitId":"tlyi"},"content":"                    return new InvalidCommand(ParserMessages.MESSAGE_ERROR_TOO_MANY_DELIMITERS);","lastModifiedDate":"2021-10-21"},{"lineNumber":106,"author":{"gitId":"tlyi"},"content":"                }","lastModifiedDate":"2021-10-21"},{"lineNumber":107,"author":{"gitId":"tlyi"},"content":"                return new DeleteFutureExerciseCommand(itemIndex);","lastModifiedDate":"2021-10-21"},{"lineNumber":108,"author":{"gitId":"tlyi"},"content":"            default:","lastModifiedDate":"2021-10-21"},{"lineNumber":109,"author":{"gitId":"tlyi"},"content":"                throw new ItemNotSpecifiedException();","lastModifiedDate":"2021-10-21"},{"lineNumber":110,"author":{"gitId":"tlyi"},"content":"            }","lastModifiedDate":"2021-10-21"},{"lineNumber":111,"author":{"gitId":"tlyi"},"content":"        } catch (ParamInvalidException | ParamMissingException e) {","lastModifiedDate":"2021-10-21"},{"lineNumber":112,"author":{"gitId":"tlyi"},"content":"            return new InvalidCommand(e.getMessage());","lastModifiedDate":"2021-10-21"},{"lineNumber":113,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":114,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":115,"author":{"gitId":"tlyi"},"content":"}","lastModifiedDate":"2021-10-21"},{"lineNumber":116,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"weidak":3,"tlyi":113}},{"path":"src/main/java/seedu/duke/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.logic.parser;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"tlyi"},"content":"import seedu.duke.logic.commands.Command;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"tlyi"},"content":"import seedu.duke.logic.commands.CommandMessages;","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"tlyi"},"content":"import seedu.duke.logic.commands.EditExerciseBankCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"tlyi"},"content":"import seedu.duke.logic.commands.EditFoodBankCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"tlyi"},"content":"import seedu.duke.logic.commands.EditFutureExerciseCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"tlyi"},"content":"import seedu.duke.logic.commands.InvalidCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"tlyi"},"content":"import seedu.duke.logic.parser.exceptions.ItemNotSpecifiedException;","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"tlyi"},"content":"import seedu.duke.logic.parser.exceptions.ParamInvalidException;","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"tlyi"},"content":"import seedu.duke.logic.parser.exceptions.ParamMissingException;","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"xingjie99"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"xingjie99"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"xingjie99"},"content":"/**","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"xingjie99"},"content":" * Parses input arguments for Edit commands.","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"xingjie99"},"content":" */","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"xingjie99"},"content":"public class EditCommandParser implements Parser {","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"xingjie99"},"content":"    protected static final Logger logger \u003d Logger.getLogger(EditCommandParser.class.getName());","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"xingjie99"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"xingjie99"},"content":"    public Command parse(String params) {","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"xingjie99"},"content":"        try {","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"xingjie99"},"content":"            final String itemTypePrefix \u003d ParserUtils.extractItemTypePrefix(params);","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"xingjie99"},"content":"            switch (itemTypePrefix) {","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"xingjie99"},"content":"            case Command.COMMAND_PREFIX_EXERCISE_BANK:","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"xingjie99"},"content":"                //Fallthrough","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"xingjie99"},"content":"            case Command.COMMAND_PREFIX_FOOD_BANK:","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"xingjie99"},"content":"                return parseEditBank(params, itemTypePrefix);","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"tlyi"},"content":"            case Command.COMMAND_PREFIX_UPCOMING_EXERCISE:","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"tlyi"},"content":"                return parseEditUpcomingExercise(params, itemTypePrefix);","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"xingjie99"},"content":"            default:","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"xingjie99"},"content":"                throw new ItemNotSpecifiedException();","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"xingjie99"},"content":"            }","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"xingjie99"},"content":"        } catch (ItemNotSpecifiedException e) {","lastModifiedDate":"2021-10-24"},{"lineNumber":38,"author":{"gitId":"xingjie99"},"content":"            return new InvalidCommand(","lastModifiedDate":"2021-10-24"},{"lineNumber":39,"author":{"gitId":"tlyi"},"content":"                    CommandMessages.MESSAGE_EDIT_COMMAND_INVALID_FORMAT);","lastModifiedDate":"2021-10-27"},{"lineNumber":40,"author":{"gitId":"xingjie99"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":41,"author":{"gitId":"xingjie99"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":42,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":43,"author":{"gitId":"xingjie99"},"content":"    protected Command parseEditBank(String params, String itemTypePrefix)","lastModifiedDate":"2021-10-24"},{"lineNumber":44,"author":{"gitId":"xingjie99"},"content":"            throws ItemNotSpecifiedException {","lastModifiedDate":"2021-10-24"},{"lineNumber":45,"author":{"gitId":"xingjie99"},"content":"        try {","lastModifiedDate":"2021-10-24"},{"lineNumber":46,"author":{"gitId":"xingjie99"},"content":"            final int itemIndex \u003d ParserUtils.extractItemIndex(params, itemTypePrefix);","lastModifiedDate":"2021-10-24"},{"lineNumber":47,"author":{"gitId":"tlyi"},"content":"            if (ParserUtils.getNumberOfCorrectParamsDetected(params,","lastModifiedDate":"2021-10-24"},{"lineNumber":48,"author":{"gitId":"tlyi"},"content":"                    Command.COMMAND_PREFIX_NAME, Command.COMMAND_PREFIX_CALORIES) \u003d\u003d 0) {","lastModifiedDate":"2021-10-24"},{"lineNumber":49,"author":{"gitId":"tlyi"},"content":"                return new InvalidCommand(CommandMessages.MESSAGE_EDIT_BANK_NEED_DETAILS);","lastModifiedDate":"2021-10-27"},{"lineNumber":50,"author":{"gitId":"tlyi"},"content":"            }","lastModifiedDate":"2021-10-24"},{"lineNumber":51,"author":{"gitId":"tlyi"},"content":"            final String description \u003d ParserUtils.extractName(params);","lastModifiedDate":"2021-10-24"},{"lineNumber":52,"author":{"gitId":"tlyi"},"content":"            final int calories \u003d ParserUtils.extractItemCalories(params, false);","lastModifiedDate":"2021-10-24"},{"lineNumber":53,"author":{"gitId":"xingjie99"},"content":"            switch (itemTypePrefix) {","lastModifiedDate":"2021-10-24"},{"lineNumber":54,"author":{"gitId":"xingjie99"},"content":"            case Command.COMMAND_PREFIX_EXERCISE_BANK:","lastModifiedDate":"2021-10-24"},{"lineNumber":55,"author":{"gitId":"tlyi"},"content":"                if (ParserUtils.hasExtraDelimiters(params, EditExerciseBankCommand.EXPECTED_PREFIXES)) {","lastModifiedDate":"2021-10-24"},{"lineNumber":56,"author":{"gitId":"tlyi"},"content":"                    return new InvalidCommand(ParserMessages.MESSAGE_ERROR_TOO_MANY_DELIMITERS);","lastModifiedDate":"2021-10-24"},{"lineNumber":57,"author":{"gitId":"tlyi"},"content":"                }","lastModifiedDate":"2021-10-24"},{"lineNumber":58,"author":{"gitId":"xingjie99"},"content":"                return new EditExerciseBankCommand(itemIndex, description, calories);","lastModifiedDate":"2021-10-24"},{"lineNumber":59,"author":{"gitId":"xingjie99"},"content":"            case Command.COMMAND_PREFIX_FOOD_BANK:","lastModifiedDate":"2021-10-24"},{"lineNumber":60,"author":{"gitId":"tlyi"},"content":"                if (ParserUtils.hasExtraDelimiters(params, EditFoodBankCommand.EXPECTED_PREFIXES)) {","lastModifiedDate":"2021-10-24"},{"lineNumber":61,"author":{"gitId":"tlyi"},"content":"                    return new InvalidCommand(ParserMessages.MESSAGE_ERROR_TOO_MANY_DELIMITERS);","lastModifiedDate":"2021-10-24"},{"lineNumber":62,"author":{"gitId":"tlyi"},"content":"                }","lastModifiedDate":"2021-10-24"},{"lineNumber":63,"author":{"gitId":"xingjie99"},"content":"                return new EditFoodBankCommand(itemIndex, description, calories);","lastModifiedDate":"2021-10-24"},{"lineNumber":64,"author":{"gitId":"tlyi"},"content":"            default:","lastModifiedDate":"2021-10-24"},{"lineNumber":65,"author":{"gitId":"tlyi"},"content":"                throw new ItemNotSpecifiedException();","lastModifiedDate":"2021-10-24"},{"lineNumber":66,"author":{"gitId":"tlyi"},"content":"            }","lastModifiedDate":"2021-10-24"},{"lineNumber":67,"author":{"gitId":"tlyi"},"content":"        } catch (ParamInvalidException | ParamMissingException e) {","lastModifiedDate":"2021-10-24"},{"lineNumber":68,"author":{"gitId":"tlyi"},"content":"            return new InvalidCommand(e.getMessage());","lastModifiedDate":"2021-10-24"},{"lineNumber":69,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":70,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":71,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":72,"author":{"gitId":"tlyi"},"content":"    protected Command parseEditUpcomingExercise(String params, String itemTypePrefix)","lastModifiedDate":"2021-10-24"},{"lineNumber":73,"author":{"gitId":"tlyi"},"content":"            throws ItemNotSpecifiedException {","lastModifiedDate":"2021-10-24"},{"lineNumber":74,"author":{"gitId":"tlyi"},"content":"        try {","lastModifiedDate":"2021-10-24"},{"lineNumber":75,"author":{"gitId":"tlyi"},"content":"            final int itemIndex \u003d ParserUtils.extractItemIndex(params, itemTypePrefix);","lastModifiedDate":"2021-10-24"},{"lineNumber":76,"author":{"gitId":"tlyi"},"content":"            if (ParserUtils.getNumberOfCorrectParamsDetected(params,","lastModifiedDate":"2021-10-24"},{"lineNumber":77,"author":{"gitId":"tlyi"},"content":"                    Command.COMMAND_PREFIX_NAME, Command.COMMAND_PREFIX_CALORIES, Command.COMMAND_PREFIX_DATE) \u003d\u003d 0) {","lastModifiedDate":"2021-10-24"},{"lineNumber":78,"author":{"gitId":"tlyi"},"content":"                return new InvalidCommand(CommandMessages.MESSAGE_EDIT_UPCOMING_EXERCISE_LIST_NEED_DETAILS);","lastModifiedDate":"2021-10-27"},{"lineNumber":79,"author":{"gitId":"tlyi"},"content":"            }","lastModifiedDate":"2021-10-24"},{"lineNumber":80,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":81,"author":{"gitId":"tlyi"},"content":"            final String description \u003d ParserUtils.extractItemDescription(params, Command.COMMAND_PREFIX_NAME);","lastModifiedDate":"2021-10-24"},{"lineNumber":82,"author":{"gitId":"tlyi"},"content":"            final int calories \u003d ParserUtils.extractItemCalories(params, false);","lastModifiedDate":"2021-10-24"},{"lineNumber":83,"author":{"gitId":"tlyi"},"content":"            final LocalDate date \u003d ParserUtils.hasRequiredParams(params, Command.COMMAND_PREFIX_DATE)","lastModifiedDate":"2021-10-24"},{"lineNumber":84,"author":{"gitId":"tlyi"},"content":"                    ? ParserUtils.extractDate(params, false)","lastModifiedDate":"2021-10-24"},{"lineNumber":85,"author":{"gitId":"tlyi"},"content":"                    : Command.NULL_DATE;","lastModifiedDate":"2021-10-24"},{"lineNumber":86,"author":{"gitId":"tlyi"},"content":"            switch (itemTypePrefix) {","lastModifiedDate":"2021-10-24"},{"lineNumber":87,"author":{"gitId":"xingjie99"},"content":"            case Command.COMMAND_PREFIX_UPCOMING_EXERCISE:","lastModifiedDate":"2021-10-24"},{"lineNumber":88,"author":{"gitId":"tlyi"},"content":"                if (ParserUtils.hasExtraDelimiters(params, EditFutureExerciseCommand.EXPECTED_PREFIXES)) {","lastModifiedDate":"2021-10-24"},{"lineNumber":89,"author":{"gitId":"tlyi"},"content":"                    return new InvalidCommand(ParserMessages.MESSAGE_ERROR_TOO_MANY_DELIMITERS);","lastModifiedDate":"2021-10-24"},{"lineNumber":90,"author":{"gitId":"tlyi"},"content":"                }","lastModifiedDate":"2021-10-24"},{"lineNumber":91,"author":{"gitId":"tlyi"},"content":"                return new EditFutureExerciseCommand(itemIndex, description, calories, date);","lastModifiedDate":"2021-10-24"},{"lineNumber":92,"author":{"gitId":"xingjie99"},"content":"            default:","lastModifiedDate":"2021-10-24"},{"lineNumber":93,"author":{"gitId":"xingjie99"},"content":"                throw new ItemNotSpecifiedException();","lastModifiedDate":"2021-10-24"},{"lineNumber":94,"author":{"gitId":"xingjie99"},"content":"            }","lastModifiedDate":"2021-10-24"},{"lineNumber":95,"author":{"gitId":"xingjie99"},"content":"        } catch (ParamInvalidException | ParamMissingException e) {","lastModifiedDate":"2021-10-24"},{"lineNumber":96,"author":{"gitId":"xingjie99"},"content":"            return new InvalidCommand(e.getMessage());","lastModifiedDate":"2021-10-24"},{"lineNumber":97,"author":{"gitId":"xingjie99"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":98,"author":{"gitId":"xingjie99"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":99,"author":{"gitId":"xingjie99"},"content":"}","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"xingjie99":47,"tlyi":52}},{"path":"src/main/java/seedu/duke/logic/parser/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.logic.parser;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"tlyi"},"content":"import seedu.duke.logic.commands.Command;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"tlyi"},"content":"/**","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"tlyi"},"content":" * Represents a Parser that parses input arguments into their respective Command classes.","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"tlyi"},"content":" */","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"tlyi"},"content":"public interface Parser {","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"tlyi"},"content":"    Command parse(String params);","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"tlyi"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"tlyi":10}},{"path":"src/main/java/seedu/duke/logic/parser/ParserManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.logic.parser;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"tlyi"},"content":"import seedu.duke.logic.commands.ByeCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"tlyi"},"content":"import seedu.duke.logic.commands.Command;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"tlyi"},"content":"import seedu.duke.logic.commands.HelpCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"tlyi"},"content":"import seedu.duke.logic.commands.InvalidCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"tlyi"},"content":"import seedu.duke.logic.commands.OverviewCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"tlyi"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"tlyi"},"content":"/**","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"tlyi"},"content":" * Parses user input for the command word","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"tlyi"},"content":" * and calls the appropriate Parser class to determine which command to execute.","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"tlyi"},"content":" */","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"tlyi"},"content":"public class ParserManager {","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"tlyi"},"content":"    protected static final Logger logger \u003d Logger.getLogger(ParserManager.class.getName());","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"tlyi"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"tlyi"},"content":"     * Returns the correct command to be executed depending on user input.","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"tlyi"},"content":"     * Command words are case-insensitive.","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"tlyi"},"content":"     *","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"tlyi"},"content":"     * @param input Raw user input string","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"tlyi"},"content":"     * @return Command class representing the correct command to be executed","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"tlyi"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"tlyi"},"content":"    public Command parseCommand(String input) {","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"tlyi"},"content":"        if (hasTextFileDelimiter(input)) {","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"tlyi"},"content":"            return new InvalidCommand(ParserMessages.MESSAGE_ERROR_ILLEGAL_CHARACTER);","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"tlyi"},"content":"        final String[] commandAndParams \u003d splitInputIntoCommandAndParams(input);","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"tlyi"},"content":"        final String commandWord \u003d commandAndParams[0].toLowerCase(); //case-insensitive (all lower case)","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"tlyi"},"content":"        final String params \u003d commandAndParams[1];","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"tlyi"},"content":"        switch (commandWord) {","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"tlyi"},"content":"        case Command.COMMAND_WORD_ADD:","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"tlyi"},"content":"            return new AddCommandParser().parse(params);","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"tlyi"},"content":"        case Command.COMMAND_WORD_DELETE:","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"tlyi"},"content":"            return new DeleteCommandParser().parse(params);","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"tlyi"},"content":"        case Command.COMMAND_WORD_VIEW:","lastModifiedDate":"2021-10-21"},{"lineNumber":42,"author":{"gitId":"tlyi"},"content":"            return new ViewCommandParser().parse(params);","lastModifiedDate":"2021-10-21"},{"lineNumber":43,"author":{"gitId":"xingjie99"},"content":"        case Command.COMMAND_WORD_EDIT:","lastModifiedDate":"2021-10-24"},{"lineNumber":44,"author":{"gitId":"xingjie99"},"content":"            return new EditCommandParser().parse(params);","lastModifiedDate":"2021-10-24"},{"lineNumber":45,"author":{"gitId":"tlyi"},"content":"        case Command.COMMAND_WORD_BMI:","lastModifiedDate":"2021-10-21"},{"lineNumber":46,"author":{"gitId":"tlyi"},"content":"            return new BmiParser().parse(params);","lastModifiedDate":"2021-10-21"},{"lineNumber":47,"author":{"gitId":"tlyi"},"content":"        case Command.COMMAND_WORD_PROFILE:","lastModifiedDate":"2021-10-21"},{"lineNumber":48,"author":{"gitId":"tlyi"},"content":"            return new UpdateProfileParser().parse(params);","lastModifiedDate":"2021-10-21"},{"lineNumber":49,"author":{"gitId":"tlyi"},"content":"        case OverviewCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-21"},{"lineNumber":50,"author":{"gitId":"tlyi"},"content":"            return new OverviewCommand();","lastModifiedDate":"2021-10-21"},{"lineNumber":51,"author":{"gitId":"tlyi"},"content":"        case ByeCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-21"},{"lineNumber":52,"author":{"gitId":"tlyi"},"content":"            return new ByeCommand();","lastModifiedDate":"2021-10-21"},{"lineNumber":53,"author":{"gitId":"tlyi"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-21"},{"lineNumber":54,"author":{"gitId":"tlyi"},"content":"            return new HelpCommand();","lastModifiedDate":"2021-10-21"},{"lineNumber":55,"author":{"gitId":"tlyi"},"content":"        default:","lastModifiedDate":"2021-10-21"},{"lineNumber":56,"author":{"gitId":"tlyi"},"content":"            return new InvalidCommand(ParserMessages.MESSAGE_ERROR_COMMAND_DOES_NOT_EXIST);","lastModifiedDate":"2021-10-21"},{"lineNumber":57,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":58,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":59,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":60,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":61,"author":{"gitId":"tlyi"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":62,"author":{"gitId":"tlyi"},"content":"     * Returns a String array where 0th index is command string and 1st index is the remaining parameters.","lastModifiedDate":"2021-10-21"},{"lineNumber":63,"author":{"gitId":"tlyi"},"content":"     * Command string and parameter string is assumed to be separated by the first \" \" in input.","lastModifiedDate":"2021-10-21"},{"lineNumber":64,"author":{"gitId":"tlyi"},"content":"     * If no parameters are provided in the input, 1st index will be set to EMPTY.","lastModifiedDate":"2021-10-21"},{"lineNumber":65,"author":{"gitId":"tlyi"},"content":"     *","lastModifiedDate":"2021-10-21"},{"lineNumber":66,"author":{"gitId":"tlyi"},"content":"     * @param input Raw user input string","lastModifiedDate":"2021-10-21"},{"lineNumber":67,"author":{"gitId":"tlyi"},"content":"     * @return String array [command, parameters]","lastModifiedDate":"2021-10-21"},{"lineNumber":68,"author":{"gitId":"tlyi"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":69,"author":{"gitId":"tlyi"},"content":"    protected static String[] splitInputIntoCommandAndParams(String input) {","lastModifiedDate":"2021-10-21"},{"lineNumber":70,"author":{"gitId":"tlyi"},"content":"        String[] commandAndParams \u003d new String[2];","lastModifiedDate":"2021-10-21"},{"lineNumber":71,"author":{"gitId":"tlyi"},"content":"        final String[] inputSplit \u003d input.trim().split(\" \", 2);","lastModifiedDate":"2021-10-21"},{"lineNumber":72,"author":{"gitId":"tlyi"},"content":"        //command string","lastModifiedDate":"2021-10-21"},{"lineNumber":73,"author":{"gitId":"tlyi"},"content":"        commandAndParams[0] \u003d inputSplit[0];","lastModifiedDate":"2021-10-21"},{"lineNumber":74,"author":{"gitId":"tlyi"},"content":"        //param string; if not given, set to EMPTY for error handling","lastModifiedDate":"2021-10-21"},{"lineNumber":75,"author":{"gitId":"tlyi"},"content":"        commandAndParams[1] \u003d (inputSplit.length \u003d\u003d 2) ? inputSplit[1].trim() : ParserMessages.EMPTY;","lastModifiedDate":"2021-10-21"},{"lineNumber":76,"author":{"gitId":"tlyi"},"content":"        return commandAndParams;","lastModifiedDate":"2021-10-21"},{"lineNumber":77,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":78,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":79,"author":{"gitId":"tlyi"},"content":"    protected static boolean hasTextFileDelimiter(String input) {","lastModifiedDate":"2021-10-21"},{"lineNumber":80,"author":{"gitId":"tlyi"},"content":"        return input.contains(ParserMessages.FILE_TEXT_DELIMITER);","lastModifiedDate":"2021-10-21"},{"lineNumber":81,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":82,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":83,"author":{"gitId":"tlyi"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"xingjie99":2,"tlyi":81}},{"path":"src/main/java/seedu/duke/logic/parser/ParserMessages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.logic.parser;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"tlyi"},"content":"import seedu.duke.logic.commands.Command;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"tlyi"},"content":"import seedu.duke.logic.commands.HelpCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"tlyi"},"content":"/**","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"tlyi"},"content":" * Contains all message constants that Parser classes uses.","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"tlyi"},"content":" */","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"tlyi"},"content":"public class ParserMessages {","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"tlyi"},"content":"    protected static final String EMPTY \u003d \"\";","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"tlyi"},"content":"    protected static final String LS \u003d System.lineSeparator();","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"tlyi"},"content":"    protected static final String QUOTATION \u003d \"\\\"\";","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"tlyi"},"content":"    protected static final String MESSAGE_ERROR_COMMAND_DOES_NOT_EXIST \u003d \"Fitbot is unable to understand this command! \"","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"tlyi"},"content":"            + LS + \"Lost? Try typing \" + HelpCommand.MESSAGE_COMMAND_FORMAT + \" to see the list of commands!\";","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"tlyi"},"content":"    protected static final String MESSAGE_ERROR_NO_DESCRIPTION \u003d \"Please input a description for this item!\";","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"tlyi"},"content":"    protected static final String MESSAGE_ERROR_NAME_EMPTY_STRING \u003d \"Please do not use an empty string as your name!\";","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"tlyi"},"content":"    protected static final String MESSAGE_ERROR_NOT_A_NUMBER \u003d \"Please input %s as a number!\";","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"tlyi"},"content":"    protected static final String MESSAGE_ERROR_NO_CALORIES_INFO \u003d \"Please input the number of calories using \"","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"tlyi"},"content":"            + \"the prefix \"","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"tlyi"},"content":"            + QUOTATION + Command.COMMAND_PREFIX_CALORIES + Command.COMMAND_PREFIX_DELIMITER + QUOTATION + \"!\";","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"tlyi"},"content":"    protected static final String MESSAGE_ERROR_INVALID_CALORIES_INFO \u003d \"Please input calories as a number! E.g 123\";","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"tlyi"},"content":"    protected static final String MESSAGE_ERROR_NO_ITEM_NUM \u003d \"Please input the item number!\";","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"tlyi"},"content":"    protected static final String MESSAGE_ERROR_INVALID_ITEM_NUM \u003d \"Please input the item number as a number \"","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"tlyi"},"content":"            + \"greater than 0! E.g 1\";","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"tlyi"},"content":"    protected static final String MESSAGE_ERROR_TOO_MANY_DELIMITERS \u003d \"Please do not use the character \"","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"tlyi"},"content":"            + QUOTATION + Command.COMMAND_PREFIX_DELIMITER + QUOTATION","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"tlyi"},"content":"            + \" in your input other than to specify parameters!\";","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"tlyi"},"content":"    protected static final String FILE_TEXT_DELIMITER \u003d \"|\";","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"tlyi"},"content":"    protected static final String MESSAGE_ERROR_ILLEGAL_CHARACTER \u003d \"Please do not use the character \"","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"tlyi"},"content":"            + QUOTATION + FILE_TEXT_DELIMITER + QUOTATION","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"tlyi"},"content":"            + \" in your input!\";","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"tlyi"},"content":"    protected static final String DATE_FORMAT \u003d \"dd-MM-yyyy\";","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"tlyi"},"content":"    protected static final String TIME_FORMAT \u003d \"HHmm\";","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"tlyi"},"content":"    protected static final String MESSAGE_ERROR_INVALID_DATE_FORMAT \u003d \"Invalid date format! Please input date as \"","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"tlyi"},"content":"            + DATE_FORMAT;","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"tlyi"},"content":"    protected static final String MESSAGE_ERROR_INVALID_TIME_FORMAT \u003d \"Invalid time format! Please input time as \"","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"tlyi"},"content":"            + TIME_FORMAT;","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"tlyi"},"content":"    protected static final String MESSAGE_ERROR_INVALID_DAY_OF_THE_WEEK \u003d \"Invalid day format! Please input day(s) \"","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"tlyi"},"content":"            + \"between 1 and 7.\"","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"tlyi"},"content":"            + LS + \"1 : Monday\"","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"tlyi"},"content":"            + LS + \"2 : Tuesday\"","lastModifiedDate":"2021-10-21"},{"lineNumber":42,"author":{"gitId":"tlyi"},"content":"            + LS + \"3 : Wednesday\"","lastModifiedDate":"2021-10-21"},{"lineNumber":43,"author":{"gitId":"tlyi"},"content":"            + LS + \"4 : Thursday\"","lastModifiedDate":"2021-10-21"},{"lineNumber":44,"author":{"gitId":"tlyi"},"content":"            + LS + \"5 : Friday\"","lastModifiedDate":"2021-10-21"},{"lineNumber":45,"author":{"gitId":"tlyi"},"content":"            + LS + \"6 : Saturday\"","lastModifiedDate":"2021-10-21"},{"lineNumber":46,"author":{"gitId":"tlyi"},"content":"            + LS + \"7 : Sunday\";","lastModifiedDate":"2021-10-21"},{"lineNumber":47,"author":{"gitId":"tlyi"},"content":"    protected static final String MESSAGE_ERROR_NO_DATE \u003d \"Please input the date for this item using the prefix \"","lastModifiedDate":"2021-10-27"},{"lineNumber":48,"author":{"gitId":"tlyi"},"content":"            + QUOTATION + Command.COMMAND_PREFIX_DATE + Command.COMMAND_PREFIX_DELIMITER + QUOTATION + \"!\";","lastModifiedDate":"2021-10-27"},{"lineNumber":49,"author":{"gitId":"tlyi"},"content":"    protected static final String MESSAGE_ERROR_NO_START_DATE \u003d \"Please input the start date for this item \"","lastModifiedDate":"2021-10-27"},{"lineNumber":50,"author":{"gitId":"tlyi"},"content":"            + \"using the prefix \" + QUOTATION + Command.COMMAND_PREFIX_START_DATE + Command.COMMAND_PREFIX_DELIMITER","lastModifiedDate":"2021-10-27"},{"lineNumber":51,"author":{"gitId":"tlyi"},"content":"            + QUOTATION + \"!\";","lastModifiedDate":"2021-10-27"},{"lineNumber":52,"author":{"gitId":"tlyi"},"content":"    protected static final String MESSAGE_ERROR_NO_END_DATE \u003d \"Please input the end date for this item \"","lastModifiedDate":"2021-10-27"},{"lineNumber":53,"author":{"gitId":"tlyi"},"content":"            + \"using the prefix \" + QUOTATION + Command.COMMAND_PREFIX_END_DATE + Command.COMMAND_PREFIX_DELIMITER","lastModifiedDate":"2021-10-27"},{"lineNumber":54,"author":{"gitId":"tlyi"},"content":"            + QUOTATION + \"!\";","lastModifiedDate":"2021-10-27"},{"lineNumber":55,"author":{"gitId":"tlyi"},"content":"    protected static final String MESSAGE_ERROR_NO_TIME \u003d \"Please input the time for this item using the prefix \"","lastModifiedDate":"2021-10-27"},{"lineNumber":56,"author":{"gitId":"tlyi"},"content":"            + QUOTATION + Command.COMMAND_PREFIX_TIME + Command.COMMAND_PREFIX_DELIMITER + QUOTATION + \"!\";","lastModifiedDate":"2021-10-27"},{"lineNumber":57,"author":{"gitId":"tlyi"},"content":"    protected static final String MESSAGE_ERROR_NO_DAY_OF_THE_WEEK \u003d \"Please input the day(s) of reoccurrence \"","lastModifiedDate":"2021-10-27"},{"lineNumber":58,"author":{"gitId":"tlyi"},"content":"            + \"for this item using the prefix \"","lastModifiedDate":"2021-10-27"},{"lineNumber":59,"author":{"gitId":"tlyi"},"content":"            + QUOTATION + Command.COMMAND_PREFIX_DAY_OF_THE_WEEK + Command.COMMAND_PREFIX_DELIMITER + QUOTATION + \"!\";","lastModifiedDate":"2021-10-27"},{"lineNumber":60,"author":{"gitId":"tlyi"},"content":"    protected static final String MESSAGE_ERROR_REPEATED_DAY_OF_THE_WEEK \u003d \"Please check your input of the day(s) \"","lastModifiedDate":"2021-10-27"},{"lineNumber":61,"author":{"gitId":"tlyi"},"content":"            + \"of reoccurrence and make sure that there is no repeated day!\";","lastModifiedDate":"2021-10-27"},{"lineNumber":62,"author":{"gitId":"tlyi"},"content":"    protected static final int MONDAY \u003d 1;","lastModifiedDate":"2021-10-21"},{"lineNumber":63,"author":{"gitId":"tlyi"},"content":"    protected static final int SUNDAY \u003d 7;","lastModifiedDate":"2021-10-21"},{"lineNumber":64,"author":{"gitId":"tlyi"},"content":"    protected static final String MESSAGE_ERROR_EDIT_NO_PARAMETERS \u003d \"Please input at least one detail to change \"","lastModifiedDate":"2021-10-24"},{"lineNumber":65,"author":{"gitId":"tlyi"},"content":"            + \"about this item!\";","lastModifiedDate":"2021-10-24"},{"lineNumber":66,"author":{"gitId":"tryyang2001"},"content":"    protected static final String MESSAGE_ERROR_ITEM_DATE_TOO_OLD \u003d \"Please input a date that is within %s to %s!\";","lastModifiedDate":"2021-10-27"},{"lineNumber":67,"author":{"gitId":"tlyi"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"tryyang2001":1,"tlyi":66}},{"path":"src/main/java/seedu/duke/logic/parser/ParserUtils.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.logic.parser;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"tlyi"},"content":"import seedu.duke.logic.commands.Command;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"tlyi"},"content":"import seedu.duke.logic.parser.exceptions.ItemNotSpecifiedException;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"tlyi"},"content":"import seedu.duke.logic.parser.exceptions.ParamInvalidException;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"tlyi"},"content":"import seedu.duke.logic.parser.exceptions.ParamMissingException;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"tlyi"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"tlyi"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"tlyi"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"tlyi"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"tlyi"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"tlyi"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"tlyi"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"tlyi"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"tlyi"},"content":"/**","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"tlyi"},"content":" * Contains utility methods used by Parser classes to extract relevant parameters.","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"tlyi"},"content":" */","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"tlyi"},"content":"public class ParserUtils {","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"tlyi"},"content":"    protected static final Logger logger \u003d Logger.getLogger(ParserUtils.class.getName());","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"tryyang2001"},"content":"    protected static boolean isSevenDaysBeforeToday(LocalDate date) {","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"tryyang2001"},"content":"        return date.isBefore(LocalDate.now().minusDays(7));","lastModifiedDate":"2021-10-27"},{"lineNumber":25,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"tlyi"},"content":"    protected static boolean hasRequiredParams(String params, String... prefixes) {","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"tlyi"},"content":"        for (String prefix : prefixes) {","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"tlyi"},"content":"            if (!params.toLowerCase().contains(prefix + Command.COMMAND_PREFIX_DELIMITER)) {","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"tlyi"},"content":"                return false;","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"tlyi"},"content":"            }","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"tlyi"},"content":"        return true;","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"tlyi"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"tlyi"},"content":"     * Extracts the item type prefix for command words that are common across item types (add, delete, view).","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"tlyi"},"content":"     *","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"tlyi"},"content":"     * @param params String containing all parameters","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"tlyi"},"content":"     * @return String that is one of the item type prefixes","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"tlyi"},"content":"     * @throws ItemNotSpecifiedException If parameter does not contain any of the expected prefixes,","lastModifiedDate":"2021-10-21"},{"lineNumber":42,"author":{"gitId":"tlyi"},"content":"     *                                   or contains more than one.","lastModifiedDate":"2021-10-21"},{"lineNumber":43,"author":{"gitId":"tlyi"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":44,"author":{"gitId":"tlyi"},"content":"    protected static String extractItemTypePrefix(String params) throws ItemNotSpecifiedException {","lastModifiedDate":"2021-10-21"},{"lineNumber":45,"author":{"gitId":"tlyi"},"content":"        boolean isExercise \u003d","lastModifiedDate":"2021-10-21"},{"lineNumber":46,"author":{"gitId":"tlyi"},"content":"                params.toLowerCase().contains(Command.COMMAND_PREFIX_EXERCISE","lastModifiedDate":"2021-10-21"},{"lineNumber":47,"author":{"gitId":"tlyi"},"content":"                        + Command.COMMAND_PREFIX_DELIMITER);","lastModifiedDate":"2021-10-21"},{"lineNumber":48,"author":{"gitId":"tlyi"},"content":"        boolean isFood \u003d","lastModifiedDate":"2021-10-21"},{"lineNumber":49,"author":{"gitId":"tlyi"},"content":"                params.toLowerCase().contains(Command.COMMAND_PREFIX_FOOD","lastModifiedDate":"2021-10-21"},{"lineNumber":50,"author":{"gitId":"tlyi"},"content":"                        + Command.COMMAND_PREFIX_DELIMITER);","lastModifiedDate":"2021-10-21"},{"lineNumber":51,"author":{"gitId":"tlyi"},"content":"        boolean isUpcomingExercise \u003d","lastModifiedDate":"2021-10-21"},{"lineNumber":52,"author":{"gitId":"tlyi"},"content":"                params.toLowerCase().contains(Command.COMMAND_PREFIX_UPCOMING_EXERCISE","lastModifiedDate":"2021-10-21"},{"lineNumber":53,"author":{"gitId":"tlyi"},"content":"                        + Command.COMMAND_PREFIX_DELIMITER);","lastModifiedDate":"2021-10-21"},{"lineNumber":54,"author":{"gitId":"tlyi"},"content":"        boolean isExerciseBank \u003d","lastModifiedDate":"2021-10-21"},{"lineNumber":55,"author":{"gitId":"tlyi"},"content":"                params.toLowerCase().contains(Command.COMMAND_PREFIX_EXERCISE_BANK","lastModifiedDate":"2021-10-21"},{"lineNumber":56,"author":{"gitId":"tlyi"},"content":"                        + Command.COMMAND_PREFIX_DELIMITER);","lastModifiedDate":"2021-10-21"},{"lineNumber":57,"author":{"gitId":"tlyi"},"content":"        boolean isFoodBank \u003d","lastModifiedDate":"2021-10-21"},{"lineNumber":58,"author":{"gitId":"tlyi"},"content":"                params.toLowerCase().contains(Command.COMMAND_PREFIX_FOOD_BANK","lastModifiedDate":"2021-10-21"},{"lineNumber":59,"author":{"gitId":"tlyi"},"content":"                        + Command.COMMAND_PREFIX_DELIMITER);","lastModifiedDate":"2021-10-21"},{"lineNumber":60,"author":{"gitId":"tlyi"},"content":"        boolean isRecurringExercise \u003d","lastModifiedDate":"2021-10-21"},{"lineNumber":61,"author":{"gitId":"tlyi"},"content":"                params.toLowerCase().contains(Command.COMMAND_PREFIX_RECURRING","lastModifiedDate":"2021-10-21"},{"lineNumber":62,"author":{"gitId":"tlyi"},"content":"                        + Command.COMMAND_PREFIX_DELIMITER);","lastModifiedDate":"2021-10-21"},{"lineNumber":63,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":64,"author":{"gitId":"tlyi"},"content":"        boolean isItemSpecified \u003d ParserUtils.checkIsItemSpecified(isExercise, isFood, isUpcomingExercise,","lastModifiedDate":"2021-10-21"},{"lineNumber":65,"author":{"gitId":"tlyi"},"content":"                isExerciseBank, isFoodBank, isRecurringExercise);","lastModifiedDate":"2021-10-21"},{"lineNumber":66,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":67,"author":{"gitId":"tlyi"},"content":"        if (!isItemSpecified) {","lastModifiedDate":"2021-10-21"},{"lineNumber":68,"author":{"gitId":"tlyi"},"content":"            logger.log(Level.WARNING, \"Detected none or more than one item\");","lastModifiedDate":"2021-10-21"},{"lineNumber":69,"author":{"gitId":"tlyi"},"content":"            throw new ItemNotSpecifiedException();","lastModifiedDate":"2021-10-21"},{"lineNumber":70,"author":{"gitId":"tlyi"},"content":"        } else if (isExercise) {","lastModifiedDate":"2021-10-21"},{"lineNumber":71,"author":{"gitId":"tlyi"},"content":"            return Command.COMMAND_PREFIX_EXERCISE;","lastModifiedDate":"2021-10-21"},{"lineNumber":72,"author":{"gitId":"tlyi"},"content":"        } else if (isFood) {","lastModifiedDate":"2021-10-21"},{"lineNumber":73,"author":{"gitId":"tlyi"},"content":"            return Command.COMMAND_PREFIX_FOOD;","lastModifiedDate":"2021-10-21"},{"lineNumber":74,"author":{"gitId":"tlyi"},"content":"        } else if (isUpcomingExercise) {","lastModifiedDate":"2021-10-21"},{"lineNumber":75,"author":{"gitId":"tlyi"},"content":"            return Command.COMMAND_PREFIX_UPCOMING_EXERCISE;","lastModifiedDate":"2021-10-21"},{"lineNumber":76,"author":{"gitId":"tlyi"},"content":"        } else if (isExerciseBank) {","lastModifiedDate":"2021-10-21"},{"lineNumber":77,"author":{"gitId":"tlyi"},"content":"            return Command.COMMAND_PREFIX_EXERCISE_BANK;","lastModifiedDate":"2021-10-21"},{"lineNumber":78,"author":{"gitId":"tlyi"},"content":"        } else if (isRecurringExercise) {","lastModifiedDate":"2021-10-21"},{"lineNumber":79,"author":{"gitId":"tlyi"},"content":"            return Command.COMMAND_PREFIX_RECURRING;","lastModifiedDate":"2021-10-21"},{"lineNumber":80,"author":{"gitId":"tlyi"},"content":"        } else {","lastModifiedDate":"2021-10-21"},{"lineNumber":81,"author":{"gitId":"tlyi"},"content":"            assert isFoodBank : \"Must be food bank if all above conditions are not satisfied\";","lastModifiedDate":"2021-10-21"},{"lineNumber":82,"author":{"gitId":"tlyi"},"content":"            return Command.COMMAND_PREFIX_FOOD_BANK;","lastModifiedDate":"2021-10-21"},{"lineNumber":83,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":84,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":85,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":86,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":87,"author":{"gitId":"tlyi"},"content":"    protected static boolean checkIsItemSpecified(boolean... paramBool) {","lastModifiedDate":"2021-10-21"},{"lineNumber":88,"author":{"gitId":"tlyi"},"content":"        int numberOfParams \u003d 0;","lastModifiedDate":"2021-10-21"},{"lineNumber":89,"author":{"gitId":"tlyi"},"content":"        for (boolean isParam : paramBool) {","lastModifiedDate":"2021-10-21"},{"lineNumber":90,"author":{"gitId":"tlyi"},"content":"            if (isParam) {","lastModifiedDate":"2021-10-21"},{"lineNumber":91,"author":{"gitId":"tlyi"},"content":"                numberOfParams +\u003d 1;","lastModifiedDate":"2021-10-21"},{"lineNumber":92,"author":{"gitId":"tlyi"},"content":"            }","lastModifiedDate":"2021-10-21"},{"lineNumber":93,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":94,"author":{"gitId":"tlyi"},"content":"        return numberOfParams \u003d\u003d 1 ? true : false; // item must be exactly 1","lastModifiedDate":"2021-10-21"},{"lineNumber":95,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":96,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":97,"author":{"gitId":"tlyi"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":98,"author":{"gitId":"tlyi"},"content":"     * Extracts only the parameter required so that any additional parameter","lastModifiedDate":"2021-10-21"},{"lineNumber":99,"author":{"gitId":"tlyi"},"content":"     * specified behind this string (if any) is removed.","lastModifiedDate":"2021-10-21"},{"lineNumber":100,"author":{"gitId":"tlyi"},"content":"     * E.g. \"John Doe w/20\" is returned as \"John Doe\".","lastModifiedDate":"2021-10-21"},{"lineNumber":101,"author":{"gitId":"tlyi"},"content":"     * NOTE: This is why users are not allowed to include the character \"/\" in their inputs","lastModifiedDate":"2021-10-21"},{"lineNumber":102,"author":{"gitId":"tlyi"},"content":"     * other than to specify a parameter.","lastModifiedDate":"2021-10-21"},{"lineNumber":103,"author":{"gitId":"tlyi"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":104,"author":{"gitId":"tlyi"},"content":"    protected static String extractRelevantParameter(String params) {","lastModifiedDate":"2021-10-21"},{"lineNumber":105,"author":{"gitId":"tlyi"},"content":"        if (params.contains(Command.COMMAND_PREFIX_DELIMITER)) {","lastModifiedDate":"2021-10-21"},{"lineNumber":106,"author":{"gitId":"tlyi"},"content":"            return params.substring(0, params.indexOf(Command.COMMAND_PREFIX_DELIMITER) - 1).trim();","lastModifiedDate":"2021-10-21"},{"lineNumber":107,"author":{"gitId":"tlyi"},"content":"        } else {","lastModifiedDate":"2021-10-21"},{"lineNumber":108,"author":{"gitId":"tlyi"},"content":"            return params;","lastModifiedDate":"2021-10-21"},{"lineNumber":109,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":110,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":111,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":112,"author":{"gitId":"tlyi"},"content":"    protected static String extractItemDescription(String params, String prefix)","lastModifiedDate":"2021-10-21"},{"lineNumber":113,"author":{"gitId":"tlyi"},"content":"            throws ParamInvalidException, ParamMissingException {","lastModifiedDate":"2021-10-21"},{"lineNumber":114,"author":{"gitId":"tlyi"},"content":"        try {","lastModifiedDate":"2021-10-21"},{"lineNumber":115,"author":{"gitId":"tlyi"},"content":"            String stringAfterPrefix \u003d params.split(prefix + Command.COMMAND_PREFIX_DELIMITER, 2)[1];","lastModifiedDate":"2021-10-21"},{"lineNumber":116,"author":{"gitId":"tlyi"},"content":"            String description \u003d extractRelevantParameter(stringAfterPrefix);","lastModifiedDate":"2021-10-21"},{"lineNumber":117,"author":{"gitId":"tlyi"},"content":"            if (description.equals(ParserMessages.EMPTY)) {","lastModifiedDate":"2021-10-21"},{"lineNumber":118,"author":{"gitId":"tlyi"},"content":"                logger.log(Level.WARNING, \"Detected empty description\");","lastModifiedDate":"2021-10-21"},{"lineNumber":119,"author":{"gitId":"tlyi"},"content":"                throw new ParamInvalidException(ParserMessages.MESSAGE_ERROR_NO_DESCRIPTION);","lastModifiedDate":"2021-10-21"},{"lineNumber":120,"author":{"gitId":"tlyi"},"content":"            }","lastModifiedDate":"2021-10-21"},{"lineNumber":121,"author":{"gitId":"tlyi"},"content":"            return description;","lastModifiedDate":"2021-10-21"},{"lineNumber":122,"author":{"gitId":"tlyi"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-10-21"},{"lineNumber":123,"author":{"gitId":"tlyi"},"content":"            logger.log(Level.WARNING, String.format(\"Detected missing command prefix (%s)\", prefix));","lastModifiedDate":"2021-10-21"},{"lineNumber":124,"author":{"gitId":"tlyi"},"content":"            throw new ParamMissingException(ParserMessages.MESSAGE_ERROR_NO_DESCRIPTION);","lastModifiedDate":"2021-10-21"},{"lineNumber":125,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":126,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":127,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":128,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":129,"author":{"gitId":"tlyi"},"content":"    protected static int extractItemCalories(String params, boolean isRequired)","lastModifiedDate":"2021-10-24"},{"lineNumber":130,"author":{"gitId":"tlyi"},"content":"            throws ParamInvalidException, ParamMissingException {","lastModifiedDate":"2021-10-21"},{"lineNumber":131,"author":{"gitId":"tlyi"},"content":"        try {","lastModifiedDate":"2021-10-21"},{"lineNumber":132,"author":{"gitId":"tlyi"},"content":"            if (params.contains(Command.COMMAND_PREFIX_CALORIES + Command.COMMAND_PREFIX_DELIMITER)) {","lastModifiedDate":"2021-10-21"},{"lineNumber":133,"author":{"gitId":"tlyi"},"content":"                String stringAfterPrefix \u003d","lastModifiedDate":"2021-10-21"},{"lineNumber":134,"author":{"gitId":"tlyi"},"content":"                        params.split(Command.COMMAND_PREFIX_CALORIES","lastModifiedDate":"2021-10-21"},{"lineNumber":135,"author":{"gitId":"tlyi"},"content":"                                + Command.COMMAND_PREFIX_DELIMITER, 2)[1];","lastModifiedDate":"2021-10-21"},{"lineNumber":136,"author":{"gitId":"tlyi"},"content":"                String caloriesString \u003d stringAfterPrefix.split(\" \", 2)[0];","lastModifiedDate":"2021-10-21"},{"lineNumber":137,"author":{"gitId":"tlyi"},"content":"                return Integer.parseInt(caloriesString);","lastModifiedDate":"2021-10-21"},{"lineNumber":138,"author":{"gitId":"tlyi"},"content":"            } else {","lastModifiedDate":"2021-10-21"},{"lineNumber":139,"author":{"gitId":"tlyi"},"content":"                if (isRequired) {","lastModifiedDate":"2021-10-24"},{"lineNumber":140,"author":{"gitId":"tlyi"},"content":"                    logger.log(Level.WARNING, \"Detected missing calories prefix\");","lastModifiedDate":"2021-10-21"},{"lineNumber":141,"author":{"gitId":"tlyi"},"content":"                    throw new ParamMissingException(ParserMessages.MESSAGE_ERROR_NO_CALORIES_INFO);","lastModifiedDate":"2021-10-21"},{"lineNumber":142,"author":{"gitId":"tlyi"},"content":"                } else {","lastModifiedDate":"2021-10-24"},{"lineNumber":143,"author":{"gitId":"weidak"},"content":"                    logger.log(Level.FINE, \"Detected missing calories prefix but calories not required, \"","lastModifiedDate":"2021-10-27"},{"lineNumber":144,"author":{"gitId":"tlyi"},"content":"                            + \"returning null calorie value\");","lastModifiedDate":"2021-10-24"},{"lineNumber":145,"author":{"gitId":"tlyi"},"content":"                    return Command.NULL_CALORIES;","lastModifiedDate":"2021-10-24"},{"lineNumber":146,"author":{"gitId":"tlyi"},"content":"                }","lastModifiedDate":"2021-10-24"},{"lineNumber":147,"author":{"gitId":"tlyi"},"content":"            }","lastModifiedDate":"2021-10-21"},{"lineNumber":148,"author":{"gitId":"tlyi"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-10-21"},{"lineNumber":149,"author":{"gitId":"tlyi"},"content":"            logger.log(Level.WARNING, \"Detected non-digit calories input\");","lastModifiedDate":"2021-10-21"},{"lineNumber":150,"author":{"gitId":"tlyi"},"content":"            throw new ParamInvalidException(ParserMessages.MESSAGE_ERROR_INVALID_CALORIES_INFO);","lastModifiedDate":"2021-10-21"},{"lineNumber":151,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":152,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":153,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":154,"author":{"gitId":"tlyi"},"content":"    protected static String extractName(String params) throws ParamInvalidException {","lastModifiedDate":"2021-10-24"},{"lineNumber":155,"author":{"gitId":"tlyi"},"content":"        try {","lastModifiedDate":"2021-10-21"},{"lineNumber":156,"author":{"gitId":"tlyi"},"content":"            String stringAfterPrefix \u003d","lastModifiedDate":"2021-10-21"},{"lineNumber":157,"author":{"gitId":"tlyi"},"content":"                    params.split(Command.COMMAND_PREFIX_NAME","lastModifiedDate":"2021-10-21"},{"lineNumber":158,"author":{"gitId":"tlyi"},"content":"                            + Command.COMMAND_PREFIX_DELIMITER, 2)[1];","lastModifiedDate":"2021-10-21"},{"lineNumber":159,"author":{"gitId":"tlyi"},"content":"            String name \u003d extractRelevantParameter(stringAfterPrefix).trim();","lastModifiedDate":"2021-10-21"},{"lineNumber":160,"author":{"gitId":"tlyi"},"content":"            if (name.equals(ParserMessages.EMPTY)) {","lastModifiedDate":"2021-10-21"},{"lineNumber":161,"author":{"gitId":"tlyi"},"content":"                logger.log(Level.WARNING, \"Detected empty name input.\");","lastModifiedDate":"2021-10-21"},{"lineNumber":162,"author":{"gitId":"tlyi"},"content":"                throw new ParamInvalidException(ParserMessages.MESSAGE_ERROR_NAME_EMPTY_STRING);","lastModifiedDate":"2021-10-27"},{"lineNumber":163,"author":{"gitId":"tlyi"},"content":"            }","lastModifiedDate":"2021-10-21"},{"lineNumber":164,"author":{"gitId":"tlyi"},"content":"            return name;","lastModifiedDate":"2021-10-21"},{"lineNumber":165,"author":{"gitId":"tlyi"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-10-21"},{"lineNumber":166,"author":{"gitId":"tlyi"},"content":"            logger.log(Level.WARNING, \"Detected missing name prefix, returning empty string.\");","lastModifiedDate":"2021-10-21"},{"lineNumber":167,"author":{"gitId":"tlyi"},"content":"            return Command.NULL_STRING;","lastModifiedDate":"2021-10-21"},{"lineNumber":168,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":169,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":170,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":171,"author":{"gitId":"tlyi"},"content":"    protected static double extractHeight(String params) throws ParamInvalidException {","lastModifiedDate":"2021-10-21"},{"lineNumber":172,"author":{"gitId":"tlyi"},"content":"        try {","lastModifiedDate":"2021-10-21"},{"lineNumber":173,"author":{"gitId":"tlyi"},"content":"            String stringAfterPrefix \u003d","lastModifiedDate":"2021-10-21"},{"lineNumber":174,"author":{"gitId":"tlyi"},"content":"                    params.split(Command.COMMAND_PREFIX_HEIGHT","lastModifiedDate":"2021-10-21"},{"lineNumber":175,"author":{"gitId":"tlyi"},"content":"                            + Command.COMMAND_PREFIX_DELIMITER, 2)[1];","lastModifiedDate":"2021-10-21"},{"lineNumber":176,"author":{"gitId":"tlyi"},"content":"            String doubleString \u003d stringAfterPrefix.split(\" \", 2)[0];","lastModifiedDate":"2021-10-21"},{"lineNumber":177,"author":{"gitId":"tlyi"},"content":"            return Double.parseDouble(doubleString);","lastModifiedDate":"2021-10-21"},{"lineNumber":178,"author":{"gitId":"tlyi"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-10-21"},{"lineNumber":179,"author":{"gitId":"tlyi"},"content":"            logger.log(Level.WARNING, \"Detected non-digit height input.\");","lastModifiedDate":"2021-10-21"},{"lineNumber":180,"author":{"gitId":"tlyi"},"content":"            throw new ParamInvalidException(String.format(ParserMessages.MESSAGE_ERROR_NOT_A_NUMBER, \"height\"));","lastModifiedDate":"2021-10-21"},{"lineNumber":181,"author":{"gitId":"tlyi"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-10-21"},{"lineNumber":182,"author":{"gitId":"tlyi"},"content":"            logger.log(Level.WARNING, \"Detected missing height prefix, return 0 height\");","lastModifiedDate":"2021-10-21"},{"lineNumber":183,"author":{"gitId":"tlyi"},"content":"            return Command.NULL_DOUBLE;","lastModifiedDate":"2021-10-21"},{"lineNumber":184,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":185,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":186,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":187,"author":{"gitId":"tlyi"},"content":"    protected static double extractWeight(String params) throws ParamInvalidException {","lastModifiedDate":"2021-10-21"},{"lineNumber":188,"author":{"gitId":"tlyi"},"content":"        try {","lastModifiedDate":"2021-10-21"},{"lineNumber":189,"author":{"gitId":"tlyi"},"content":"            String stringAfterPrefix \u003d","lastModifiedDate":"2021-10-21"},{"lineNumber":190,"author":{"gitId":"tlyi"},"content":"                    params.split(Command.COMMAND_PREFIX_WEIGHT","lastModifiedDate":"2021-10-21"},{"lineNumber":191,"author":{"gitId":"tlyi"},"content":"                            + Command.COMMAND_PREFIX_DELIMITER, 2)[1];","lastModifiedDate":"2021-10-21"},{"lineNumber":192,"author":{"gitId":"tlyi"},"content":"            String doubleString \u003d stringAfterPrefix.split(\" \", 2)[0];","lastModifiedDate":"2021-10-21"},{"lineNumber":193,"author":{"gitId":"tlyi"},"content":"            return Double.parseDouble(doubleString);","lastModifiedDate":"2021-10-21"},{"lineNumber":194,"author":{"gitId":"tlyi"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-10-21"},{"lineNumber":195,"author":{"gitId":"tlyi"},"content":"            logger.log(Level.WARNING, \"Detected non-digit weight input.\");","lastModifiedDate":"2021-10-21"},{"lineNumber":196,"author":{"gitId":"tlyi"},"content":"            throw new ParamInvalidException(String.format(ParserMessages.MESSAGE_ERROR_NOT_A_NUMBER, \"weight\"));","lastModifiedDate":"2021-10-21"},{"lineNumber":197,"author":{"gitId":"tlyi"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-10-21"},{"lineNumber":198,"author":{"gitId":"tlyi"},"content":"            logger.log(Level.WARNING, \"Detected missing weight prefix, return 0 weight\");","lastModifiedDate":"2021-10-21"},{"lineNumber":199,"author":{"gitId":"tlyi"},"content":"            return Command.NULL_DOUBLE;","lastModifiedDate":"2021-10-21"},{"lineNumber":200,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":201,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":202,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":203,"author":{"gitId":"tlyi"},"content":"    protected static int extractCalorieGoal(String params) throws ParamInvalidException {","lastModifiedDate":"2021-10-21"},{"lineNumber":204,"author":{"gitId":"tlyi"},"content":"        try {","lastModifiedDate":"2021-10-21"},{"lineNumber":205,"author":{"gitId":"tlyi"},"content":"            String stringAfterPrefix \u003d","lastModifiedDate":"2021-10-21"},{"lineNumber":206,"author":{"gitId":"tlyi"},"content":"                    params.split(Command.COMMAND_PREFIX_GOAL","lastModifiedDate":"2021-10-21"},{"lineNumber":207,"author":{"gitId":"tlyi"},"content":"                            + Command.COMMAND_PREFIX_DELIMITER, 2)[1];","lastModifiedDate":"2021-10-21"},{"lineNumber":208,"author":{"gitId":"tlyi"},"content":"            String intString \u003d stringAfterPrefix.split(\" \", 2)[0];","lastModifiedDate":"2021-10-21"},{"lineNumber":209,"author":{"gitId":"tlyi"},"content":"            return Integer.parseInt(intString);","lastModifiedDate":"2021-10-21"},{"lineNumber":210,"author":{"gitId":"tlyi"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-10-21"},{"lineNumber":211,"author":{"gitId":"tlyi"},"content":"            logger.log(Level.WARNING, \"Detected non-digit goal input.\");","lastModifiedDate":"2021-10-21"},{"lineNumber":212,"author":{"gitId":"tlyi"},"content":"            throw new ParamInvalidException(String.format(ParserMessages.MESSAGE_ERROR_NOT_A_NUMBER, \"goal\"));","lastModifiedDate":"2021-10-21"},{"lineNumber":213,"author":{"gitId":"tlyi"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-10-21"},{"lineNumber":214,"author":{"gitId":"tlyi"},"content":"            logger.log(Level.WARNING, \"Detected missing goal prefix, return 0 goal\");","lastModifiedDate":"2021-10-21"},{"lineNumber":215,"author":{"gitId":"tlyi"},"content":"            return Command.NULL_INT;","lastModifiedDate":"2021-10-21"},{"lineNumber":216,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":217,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":218,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":219,"author":{"gitId":"tlyi"},"content":"    protected static int extractAge(String params) throws ParamInvalidException {","lastModifiedDate":"2021-10-21"},{"lineNumber":220,"author":{"gitId":"tlyi"},"content":"        try {","lastModifiedDate":"2021-10-21"},{"lineNumber":221,"author":{"gitId":"tlyi"},"content":"            String stringAfterPrefix \u003d","lastModifiedDate":"2021-10-21"},{"lineNumber":222,"author":{"gitId":"tlyi"},"content":"                    params.split(Command.COMMAND_PREFIX_AGE","lastModifiedDate":"2021-10-21"},{"lineNumber":223,"author":{"gitId":"tlyi"},"content":"                            + Command.COMMAND_PREFIX_DELIMITER, 2)[1];","lastModifiedDate":"2021-10-21"},{"lineNumber":224,"author":{"gitId":"tlyi"},"content":"            String intString \u003d stringAfterPrefix.split(\" \", 2)[0];","lastModifiedDate":"2021-10-21"},{"lineNumber":225,"author":{"gitId":"tlyi"},"content":"            return Integer.parseInt(intString);","lastModifiedDate":"2021-10-21"},{"lineNumber":226,"author":{"gitId":"tlyi"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-10-21"},{"lineNumber":227,"author":{"gitId":"tlyi"},"content":"            logger.log(Level.WARNING, \"Detected non-digit age input.\");","lastModifiedDate":"2021-10-21"},{"lineNumber":228,"author":{"gitId":"tlyi"},"content":"            throw new ParamInvalidException(String.format(ParserMessages.MESSAGE_ERROR_NOT_A_NUMBER, \"age\"));","lastModifiedDate":"2021-10-21"},{"lineNumber":229,"author":{"gitId":"tlyi"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-10-21"},{"lineNumber":230,"author":{"gitId":"tlyi"},"content":"            logger.log(Level.WARNING, \"Detected missing age prefix, return 0 age\");","lastModifiedDate":"2021-10-21"},{"lineNumber":231,"author":{"gitId":"tlyi"},"content":"            return Command.NULL_INT;","lastModifiedDate":"2021-10-21"},{"lineNumber":232,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":233,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":234,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":235,"author":{"gitId":"tlyi"},"content":"    protected static int extractActivityFactor(String params) throws ParamInvalidException {","lastModifiedDate":"2021-10-21"},{"lineNumber":236,"author":{"gitId":"tlyi"},"content":"        try {","lastModifiedDate":"2021-10-21"},{"lineNumber":237,"author":{"gitId":"tlyi"},"content":"            String stringAfterPrefix \u003d","lastModifiedDate":"2021-10-21"},{"lineNumber":238,"author":{"gitId":"tlyi"},"content":"                    params.split(Command.COMMAND_PREFIX_ACTIVITY_FACTOR","lastModifiedDate":"2021-10-21"},{"lineNumber":239,"author":{"gitId":"tlyi"},"content":"                            + Command.COMMAND_PREFIX_DELIMITER, 2)[1];","lastModifiedDate":"2021-10-21"},{"lineNumber":240,"author":{"gitId":"tlyi"},"content":"            String intString \u003d stringAfterPrefix.split(\" \", 2)[0];","lastModifiedDate":"2021-10-21"},{"lineNumber":241,"author":{"gitId":"tlyi"},"content":"            return Integer.parseInt(intString);","lastModifiedDate":"2021-10-21"},{"lineNumber":242,"author":{"gitId":"tlyi"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-10-21"},{"lineNumber":243,"author":{"gitId":"tlyi"},"content":"            logger.log(Level.WARNING, \"Detected non-digit activity factor input.\");","lastModifiedDate":"2021-10-21"},{"lineNumber":244,"author":{"gitId":"tlyi"},"content":"            throw new ParamInvalidException(String.format(","lastModifiedDate":"2021-10-21"},{"lineNumber":245,"author":{"gitId":"tlyi"},"content":"                    ParserMessages.MESSAGE_ERROR_NOT_A_NUMBER, \"activity factor\"));","lastModifiedDate":"2021-10-21"},{"lineNumber":246,"author":{"gitId":"tlyi"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-10-21"},{"lineNumber":247,"author":{"gitId":"tlyi"},"content":"            logger.log(Level.WARNING, \"Detected missing activity factor prefix, return 0 activity factor\");","lastModifiedDate":"2021-10-21"},{"lineNumber":248,"author":{"gitId":"tlyi"},"content":"            return Command.NULL_INT;","lastModifiedDate":"2021-10-21"},{"lineNumber":249,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":250,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":251,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":252,"author":{"gitId":"tlyi"},"content":"    protected static char extractGender(String params) throws ParamInvalidException {","lastModifiedDate":"2021-10-21"},{"lineNumber":253,"author":{"gitId":"tlyi"},"content":"        try {","lastModifiedDate":"2021-10-21"},{"lineNumber":254,"author":{"gitId":"tlyi"},"content":"            String stringAfterPrefix \u003d","lastModifiedDate":"2021-10-21"},{"lineNumber":255,"author":{"gitId":"tlyi"},"content":"                    params.split(Command.COMMAND_PREFIX_GENDER","lastModifiedDate":"2021-10-21"},{"lineNumber":256,"author":{"gitId":"tlyi"},"content":"                            + Command.COMMAND_PREFIX_DELIMITER, 2)[1];","lastModifiedDate":"2021-10-21"},{"lineNumber":257,"author":{"gitId":"tlyi"},"content":"            return stringAfterPrefix.charAt(0);","lastModifiedDate":"2021-10-21"},{"lineNumber":258,"author":{"gitId":"tlyi"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-10-21"},{"lineNumber":259,"author":{"gitId":"tlyi"},"content":"            logger.log(Level.WARNING, \"Detected missing gender prefix, return null gender\");","lastModifiedDate":"2021-10-21"},{"lineNumber":260,"author":{"gitId":"tlyi"},"content":"            return Command.NULL_CHAR;","lastModifiedDate":"2021-10-21"},{"lineNumber":261,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":262,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":263,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":264,"author":{"gitId":"tlyi"},"content":"    protected static LocalDate extractStartDate(String params)","lastModifiedDate":"2021-10-21"},{"lineNumber":265,"author":{"gitId":"tlyi"},"content":"            throws ParamInvalidException, ParamMissingException {","lastModifiedDate":"2021-10-21"},{"lineNumber":266,"author":{"gitId":"tlyi"},"content":"        try {","lastModifiedDate":"2021-10-21"},{"lineNumber":267,"author":{"gitId":"tlyi"},"content":"            String stringAfterPrefix \u003d","lastModifiedDate":"2021-10-21"},{"lineNumber":268,"author":{"gitId":"tlyi"},"content":"                    params.split(Command.COMMAND_PREFIX_START_DATE","lastModifiedDate":"2021-10-21"},{"lineNumber":269,"author":{"gitId":"tlyi"},"content":"                            + Command.COMMAND_PREFIX_DELIMITER, 2)[1];","lastModifiedDate":"2021-10-21"},{"lineNumber":270,"author":{"gitId":"tlyi"},"content":"            String dateString \u003d extractRelevantParameter(stringAfterPrefix);","lastModifiedDate":"2021-10-21"},{"lineNumber":271,"author":{"gitId":"weidak"},"content":"            logger.log(Level.FINE, String.format(\"date string detected is: %s\", dateString));","lastModifiedDate":"2021-10-27"},{"lineNumber":272,"author":{"gitId":"tlyi"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(ParserMessages.DATE_FORMAT);","lastModifiedDate":"2021-10-21"},{"lineNumber":273,"author":{"gitId":"tlyi"},"content":"            return LocalDate.parse(dateString, formatter);","lastModifiedDate":"2021-10-21"},{"lineNumber":274,"author":{"gitId":"tlyi"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-10-21"},{"lineNumber":275,"author":{"gitId":"tlyi"},"content":"            logger.log(Level.WARNING, \"Detected empty start date input after prefix but date is required!\");","lastModifiedDate":"2021-10-21"},{"lineNumber":276,"author":{"gitId":"tlyi"},"content":"            throw new ParamMissingException(ParserMessages.MESSAGE_ERROR_NO_START_DATE);","lastModifiedDate":"2021-10-27"},{"lineNumber":277,"author":{"gitId":"tlyi"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-10-21"},{"lineNumber":278,"author":{"gitId":"tlyi"},"content":"            throw new ParamInvalidException(ParserMessages.MESSAGE_ERROR_INVALID_DATE_FORMAT);","lastModifiedDate":"2021-10-21"},{"lineNumber":279,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":280,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":281,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":282,"author":{"gitId":"tlyi"},"content":"    protected static LocalDate extractEndDate(String params)","lastModifiedDate":"2021-10-21"},{"lineNumber":283,"author":{"gitId":"tlyi"},"content":"            throws ParamInvalidException, ParamMissingException {","lastModifiedDate":"2021-10-21"},{"lineNumber":284,"author":{"gitId":"tlyi"},"content":"        try {","lastModifiedDate":"2021-10-21"},{"lineNumber":285,"author":{"gitId":"tlyi"},"content":"            String stringAfterPrefix \u003d","lastModifiedDate":"2021-10-21"},{"lineNumber":286,"author":{"gitId":"tlyi"},"content":"                    params.split(Command.COMMAND_PREFIX_END_DATE","lastModifiedDate":"2021-10-21"},{"lineNumber":287,"author":{"gitId":"tlyi"},"content":"                            + Command.COMMAND_PREFIX_DELIMITER, 2)[1];","lastModifiedDate":"2021-10-21"},{"lineNumber":288,"author":{"gitId":"tlyi"},"content":"            String dateString \u003d extractRelevantParameter(stringAfterPrefix);","lastModifiedDate":"2021-10-21"},{"lineNumber":289,"author":{"gitId":"weidak"},"content":"            logger.log(Level.FINE, String.format(\"date string detected is: %s\", dateString));","lastModifiedDate":"2021-10-27"},{"lineNumber":290,"author":{"gitId":"tlyi"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(ParserMessages.DATE_FORMAT);","lastModifiedDate":"2021-10-21"},{"lineNumber":291,"author":{"gitId":"tlyi"},"content":"            return LocalDate.parse(dateString, formatter);","lastModifiedDate":"2021-10-21"},{"lineNumber":292,"author":{"gitId":"tlyi"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-10-21"},{"lineNumber":293,"author":{"gitId":"tlyi"},"content":"            logger.log(Level.WARNING, \"Detected empty end date input after prefix but date is required!\");","lastModifiedDate":"2021-10-21"},{"lineNumber":294,"author":{"gitId":"tlyi"},"content":"            throw new ParamMissingException(ParserMessages.MESSAGE_ERROR_NO_END_DATE);","lastModifiedDate":"2021-10-27"},{"lineNumber":295,"author":{"gitId":"tlyi"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-10-21"},{"lineNumber":296,"author":{"gitId":"tlyi"},"content":"            throw new ParamInvalidException(ParserMessages.MESSAGE_ERROR_INVALID_DATE_FORMAT);","lastModifiedDate":"2021-10-21"},{"lineNumber":297,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":298,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":299,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":300,"author":{"gitId":"tlyi"},"content":"    protected static LocalDate extractDate(String params, boolean isRequired)","lastModifiedDate":"2021-10-21"},{"lineNumber":301,"author":{"gitId":"tlyi"},"content":"            throws ParamInvalidException, ParamMissingException {","lastModifiedDate":"2021-10-21"},{"lineNumber":302,"author":{"gitId":"tlyi"},"content":"        try {","lastModifiedDate":"2021-10-21"},{"lineNumber":303,"author":{"gitId":"tlyi"},"content":"            String stringAfterPrefix \u003d","lastModifiedDate":"2021-10-21"},{"lineNumber":304,"author":{"gitId":"tlyi"},"content":"                    params.split(Command.COMMAND_PREFIX_DATE","lastModifiedDate":"2021-10-21"},{"lineNumber":305,"author":{"gitId":"tlyi"},"content":"                            + Command.COMMAND_PREFIX_DELIMITER, 2)[1];","lastModifiedDate":"2021-10-21"},{"lineNumber":306,"author":{"gitId":"tlyi"},"content":"            String dateString \u003d extractRelevantParameter(stringAfterPrefix);","lastModifiedDate":"2021-10-21"},{"lineNumber":307,"author":{"gitId":"weidak"},"content":"            logger.log(Level.FINE, String.format(\"date string detected is: %s\", dateString));","lastModifiedDate":"2021-10-27"},{"lineNumber":308,"author":{"gitId":"tlyi"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(ParserMessages.DATE_FORMAT);","lastModifiedDate":"2021-10-21"},{"lineNumber":309,"author":{"gitId":"tlyi"},"content":"            return LocalDate.parse(dateString, formatter);","lastModifiedDate":"2021-10-21"},{"lineNumber":310,"author":{"gitId":"tlyi"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-10-21"},{"lineNumber":311,"author":{"gitId":"tlyi"},"content":"            if (isRequired) {","lastModifiedDate":"2021-10-21"},{"lineNumber":312,"author":{"gitId":"tlyi"},"content":"                logger.log(Level.WARNING, \"Detected empty date input after prefix but date is required!\");","lastModifiedDate":"2021-10-21"},{"lineNumber":313,"author":{"gitId":"tlyi"},"content":"                throw new ParamMissingException(ParserMessages.MESSAGE_ERROR_NO_DATE);","lastModifiedDate":"2021-10-21"},{"lineNumber":314,"author":{"gitId":"tlyi"},"content":"            } else {","lastModifiedDate":"2021-10-21"},{"lineNumber":315,"author":{"gitId":"weidak"},"content":"                logger.log(Level.FINE, \"Detected empty date input after prefix, assuming date to be now\");","lastModifiedDate":"2021-10-27"},{"lineNumber":316,"author":{"gitId":"tlyi"},"content":"                return LocalDate.now();","lastModifiedDate":"2021-10-21"},{"lineNumber":317,"author":{"gitId":"tlyi"},"content":"            }","lastModifiedDate":"2021-10-21"},{"lineNumber":318,"author":{"gitId":"tlyi"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-10-21"},{"lineNumber":319,"author":{"gitId":"tlyi"},"content":"            throw new ParamInvalidException(ParserMessages.MESSAGE_ERROR_INVALID_DATE_FORMAT);","lastModifiedDate":"2021-10-21"},{"lineNumber":320,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":321,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":322,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":323,"author":{"gitId":"tlyi"},"content":"    protected static LocalTime extractTime(String params, boolean isRequired)","lastModifiedDate":"2021-10-21"},{"lineNumber":324,"author":{"gitId":"tlyi"},"content":"            throws ParamMissingException, ParamInvalidException {","lastModifiedDate":"2021-10-21"},{"lineNumber":325,"author":{"gitId":"tlyi"},"content":"        try {","lastModifiedDate":"2021-10-21"},{"lineNumber":326,"author":{"gitId":"tlyi"},"content":"            String stringAfterPrefix \u003d","lastModifiedDate":"2021-10-21"},{"lineNumber":327,"author":{"gitId":"tlyi"},"content":"                    params.split(Command.COMMAND_PREFIX_TIME","lastModifiedDate":"2021-10-21"},{"lineNumber":328,"author":{"gitId":"tlyi"},"content":"                            + Command.COMMAND_PREFIX_DELIMITER, 2)[1];","lastModifiedDate":"2021-10-21"},{"lineNumber":329,"author":{"gitId":"tlyi"},"content":"            String timeString \u003d extractRelevantParameter(stringAfterPrefix);","lastModifiedDate":"2021-10-21"},{"lineNumber":330,"author":{"gitId":"weidak"},"content":"            logger.log(Level.FINE, String.format(\"time string detected is: %s\", timeString));","lastModifiedDate":"2021-10-27"},{"lineNumber":331,"author":{"gitId":"tlyi"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(ParserMessages.TIME_FORMAT);","lastModifiedDate":"2021-10-21"},{"lineNumber":332,"author":{"gitId":"tlyi"},"content":"            return LocalTime.parse(timeString, formatter);","lastModifiedDate":"2021-10-21"},{"lineNumber":333,"author":{"gitId":"tlyi"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-10-21"},{"lineNumber":334,"author":{"gitId":"tlyi"},"content":"            if (isRequired) {","lastModifiedDate":"2021-10-21"},{"lineNumber":335,"author":{"gitId":"tlyi"},"content":"                logger.log(Level.WARNING, \"Detected empty time input after prefix but time is required!\");","lastModifiedDate":"2021-10-21"},{"lineNumber":336,"author":{"gitId":"tlyi"},"content":"                throw new ParamMissingException(ParserMessages.MESSAGE_ERROR_NO_TIME);","lastModifiedDate":"2021-10-21"},{"lineNumber":337,"author":{"gitId":"tlyi"},"content":"            } else {","lastModifiedDate":"2021-10-21"},{"lineNumber":338,"author":{"gitId":"weidak"},"content":"                logger.log(Level.FINE, \"Detected empty time input after prefix, assuming time to be now\");","lastModifiedDate":"2021-10-27"},{"lineNumber":339,"author":{"gitId":"tlyi"},"content":"                return LocalTime.now();","lastModifiedDate":"2021-10-21"},{"lineNumber":340,"author":{"gitId":"tlyi"},"content":"            }","lastModifiedDate":"2021-10-21"},{"lineNumber":341,"author":{"gitId":"tlyi"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-10-21"},{"lineNumber":342,"author":{"gitId":"tlyi"},"content":"            throw new ParamInvalidException(ParserMessages.MESSAGE_ERROR_INVALID_TIME_FORMAT);","lastModifiedDate":"2021-10-21"},{"lineNumber":343,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":344,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":345,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":346,"author":{"gitId":"tlyi"},"content":"    protected static LocalDateTime extractDateTime(String params) throws ParamInvalidException, ParamMissingException {","lastModifiedDate":"2021-10-21"},{"lineNumber":347,"author":{"gitId":"tlyi"},"content":"        final LocalTime time \u003d extractTime(params, false);","lastModifiedDate":"2021-10-21"},{"lineNumber":348,"author":{"gitId":"tlyi"},"content":"        final LocalDate date \u003d extractDate(params, false);","lastModifiedDate":"2021-10-21"},{"lineNumber":349,"author":{"gitId":"tlyi"},"content":"        return date.atTime(time);","lastModifiedDate":"2021-10-21"},{"lineNumber":350,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":351,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":352,"author":{"gitId":"tlyi"},"content":"    protected static ArrayList\u003cInteger\u003e extractDayOfTheWeek(String params)","lastModifiedDate":"2021-10-21"},{"lineNumber":353,"author":{"gitId":"tlyi"},"content":"            throws ParamMissingException, ParamInvalidException {","lastModifiedDate":"2021-10-21"},{"lineNumber":354,"author":{"gitId":"tlyi"},"content":"        ArrayList\u003cInteger\u003e dayOfTheWeek \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-21"},{"lineNumber":355,"author":{"gitId":"tlyi"},"content":"        try {","lastModifiedDate":"2021-10-21"},{"lineNumber":356,"author":{"gitId":"tlyi"},"content":"            String stringAfterPrefix \u003d","lastModifiedDate":"2021-10-21"},{"lineNumber":357,"author":{"gitId":"tlyi"},"content":"                    params.split(Command.COMMAND_PREFIX_DAY_OF_THE_WEEK","lastModifiedDate":"2021-10-21"},{"lineNumber":358,"author":{"gitId":"tlyi"},"content":"                            + Command.COMMAND_PREFIX_DELIMITER, 2)[1];","lastModifiedDate":"2021-10-21"},{"lineNumber":359,"author":{"gitId":"xingjie99"},"content":"            String dateString \u003d extractRelevantParameter(stringAfterPrefix);","lastModifiedDate":"2021-10-27"},{"lineNumber":360,"author":{"gitId":"xingjie99"},"content":"            for (int i \u003d 0; i \u003c dateString.length(); i++) {","lastModifiedDate":"2021-10-27"},{"lineNumber":361,"author":{"gitId":"xingjie99"},"content":"                int day \u003d Integer.parseInt(String.valueOf(dateString.charAt(i)));","lastModifiedDate":"2021-10-27"},{"lineNumber":362,"author":{"gitId":"weidak"},"content":"                logger.log(Level.FINE, String.format(\"day detected: %s\", day));","lastModifiedDate":"2021-10-27"},{"lineNumber":363,"author":{"gitId":"tlyi"},"content":"                if (day \u003e\u003d ParserMessages.MONDAY \u0026\u0026 day \u003c\u003d ParserMessages.SUNDAY) { //between monday and sunday","lastModifiedDate":"2021-10-24"},{"lineNumber":364,"author":{"gitId":"tlyi"},"content":"                    if (dayOfTheWeek.contains(day)) {","lastModifiedDate":"2021-10-21"},{"lineNumber":365,"author":{"gitId":"tlyi"},"content":"                        throw new ParamInvalidException(ParserMessages.MESSAGE_ERROR_REPEATED_DAY_OF_THE_WEEK);","lastModifiedDate":"2021-10-21"},{"lineNumber":366,"author":{"gitId":"tlyi"},"content":"                    }","lastModifiedDate":"2021-10-21"},{"lineNumber":367,"author":{"gitId":"tlyi"},"content":"                    dayOfTheWeek.add(day);","lastModifiedDate":"2021-10-21"},{"lineNumber":368,"author":{"gitId":"tlyi"},"content":"                } else {","lastModifiedDate":"2021-10-21"},{"lineNumber":369,"author":{"gitId":"tlyi"},"content":"                    throw new ParamInvalidException(ParserMessages.MESSAGE_ERROR_INVALID_DAY_OF_THE_WEEK);","lastModifiedDate":"2021-10-21"},{"lineNumber":370,"author":{"gitId":"tlyi"},"content":"                }","lastModifiedDate":"2021-10-21"},{"lineNumber":371,"author":{"gitId":"tlyi"},"content":"            }","lastModifiedDate":"2021-10-21"},{"lineNumber":372,"author":{"gitId":"tlyi"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-10-21"},{"lineNumber":373,"author":{"gitId":"tlyi"},"content":"            logger.log(Level.WARNING, \"Detected empty day input after prefix but day is required!\");","lastModifiedDate":"2021-10-21"},{"lineNumber":374,"author":{"gitId":"tlyi"},"content":"            throw new ParamMissingException(ParserMessages.MESSAGE_ERROR_NO_DAY_OF_THE_WEEK);","lastModifiedDate":"2021-10-21"},{"lineNumber":375,"author":{"gitId":"tlyi"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-10-21"},{"lineNumber":376,"author":{"gitId":"tlyi"},"content":"            logger.log(Level.WARNING, \"Detected non-digit calories input\");","lastModifiedDate":"2021-10-21"},{"lineNumber":377,"author":{"gitId":"tlyi"},"content":"            throw new ParamInvalidException(ParserMessages.MESSAGE_ERROR_INVALID_DAY_OF_THE_WEEK);","lastModifiedDate":"2021-10-21"},{"lineNumber":378,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":379,"author":{"gitId":"tlyi"},"content":"        return dayOfTheWeek;","lastModifiedDate":"2021-10-21"},{"lineNumber":380,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":381,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":382,"author":{"gitId":"tlyi"},"content":"    protected static boolean isFutureDate(LocalDate date) {","lastModifiedDate":"2021-10-21"},{"lineNumber":383,"author":{"gitId":"tlyi"},"content":"        return date.isAfter(LocalDate.now());","lastModifiedDate":"2021-10-21"},{"lineNumber":384,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":385,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":386,"author":{"gitId":"tlyi"},"content":"    protected static int extractItemIndex(String params, String prefix)","lastModifiedDate":"2021-10-21"},{"lineNumber":387,"author":{"gitId":"tlyi"},"content":"            throws ParamInvalidException, ParamMissingException {","lastModifiedDate":"2021-10-21"},{"lineNumber":388,"author":{"gitId":"tlyi"},"content":"        try {","lastModifiedDate":"2021-10-21"},{"lineNumber":389,"author":{"gitId":"tlyi"},"content":"            final String itemNumString \u003d ParserUtils.extractItemDescription(params, prefix).split(\" \")[0].trim();","lastModifiedDate":"2021-10-21"},{"lineNumber":390,"author":{"gitId":"tlyi"},"content":"            final int itemIndex \u003d convertItemNumToItemIndex(Integer.parseInt(itemNumString));","lastModifiedDate":"2021-10-24"},{"lineNumber":391,"author":{"gitId":"tlyi"},"content":"            if (itemIndex \u003c 0) {","lastModifiedDate":"2021-10-24"},{"lineNumber":392,"author":{"gitId":"tlyi"},"content":"                throw new NumberFormatException();","lastModifiedDate":"2021-10-24"},{"lineNumber":393,"author":{"gitId":"tlyi"},"content":"            }","lastModifiedDate":"2021-10-24"},{"lineNumber":394,"author":{"gitId":"tlyi"},"content":"            return itemIndex;","lastModifiedDate":"2021-10-24"},{"lineNumber":395,"author":{"gitId":"tlyi"},"content":"        } catch (ParamInvalidException | ParamMissingException e) {","lastModifiedDate":"2021-10-21"},{"lineNumber":396,"author":{"gitId":"tlyi"},"content":"            throw new ParamMissingException(ParserMessages.MESSAGE_ERROR_NO_ITEM_NUM);","lastModifiedDate":"2021-10-21"},{"lineNumber":397,"author":{"gitId":"tlyi"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-10-21"},{"lineNumber":398,"author":{"gitId":"tlyi"},"content":"            throw new ParamInvalidException(ParserMessages.MESSAGE_ERROR_INVALID_ITEM_NUM);","lastModifiedDate":"2021-10-21"},{"lineNumber":399,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":400,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":401,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":402,"author":{"gitId":"tlyi"},"content":"    protected static int convertItemNumToItemIndex(int itemNum) {","lastModifiedDate":"2021-10-21"},{"lineNumber":403,"author":{"gitId":"tlyi"},"content":"        return itemNum - 1;","lastModifiedDate":"2021-10-21"},{"lineNumber":404,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":405,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":406,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":407,"author":{"gitId":"tlyi"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":408,"author":{"gitId":"tlyi"},"content":"     * Returns the number of parameters detected that is valid for the specific command.","lastModifiedDate":"2021-10-21"},{"lineNumber":409,"author":{"gitId":"tlyi"},"content":"     * This is required as some parameters are optional, therefore an absolute number cannot be expected.","lastModifiedDate":"2021-10-21"},{"lineNumber":410,"author":{"gitId":"tlyi"},"content":"     *","lastModifiedDate":"2021-10-21"},{"lineNumber":411,"author":{"gitId":"tlyi"},"content":"     * @param params   User input string containing all parameters","lastModifiedDate":"2021-10-21"},{"lineNumber":412,"author":{"gitId":"tlyi"},"content":"     * @param prefixes Variable number of prefixes that is valid for the specific command","lastModifiedDate":"2021-10-21"},{"lineNumber":413,"author":{"gitId":"tlyi"},"content":"     * @return Number of parameters detected that is valid for the specific command","lastModifiedDate":"2021-10-21"},{"lineNumber":414,"author":{"gitId":"tlyi"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":415,"author":{"gitId":"tlyi"},"content":"    protected static int getNumberOfCorrectParamsDetected(String params, String... prefixes) {","lastModifiedDate":"2021-10-21"},{"lineNumber":416,"author":{"gitId":"tlyi"},"content":"        int count \u003d 0;","lastModifiedDate":"2021-10-21"},{"lineNumber":417,"author":{"gitId":"tlyi"},"content":"        for (String prefix : prefixes) {","lastModifiedDate":"2021-10-21"},{"lineNumber":418,"author":{"gitId":"tlyi"},"content":"            if (params.toLowerCase().contains(prefix + Command.COMMAND_PREFIX_DELIMITER)) {","lastModifiedDate":"2021-10-21"},{"lineNumber":419,"author":{"gitId":"tlyi"},"content":"                count++;","lastModifiedDate":"2021-10-21"},{"lineNumber":420,"author":{"gitId":"tlyi"},"content":"            }","lastModifiedDate":"2021-10-21"},{"lineNumber":421,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":422,"author":{"gitId":"weidak"},"content":"        logger.log(Level.FINE, String.format(\"no. of corrected params detected: %s\", count));","lastModifiedDate":"2021-10-27"},{"lineNumber":423,"author":{"gitId":"tlyi"},"content":"        return count;","lastModifiedDate":"2021-10-21"},{"lineNumber":424,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":425,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":426,"author":{"gitId":"tlyi"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":427,"author":{"gitId":"tlyi"},"content":"     * Returns true if there are too many \u0027/\u0027 characters in the parameter string.","lastModifiedDate":"2021-10-21"},{"lineNumber":428,"author":{"gitId":"tlyi"},"content":"     *","lastModifiedDate":"2021-10-21"},{"lineNumber":429,"author":{"gitId":"tlyi"},"content":"     * @param params   User input string containing all parameters","lastModifiedDate":"2021-10-21"},{"lineNumber":430,"author":{"gitId":"tlyi"},"content":"     * @param prefixes Variable number of prefixes that is valid for the specific command","lastModifiedDate":"2021-10-21"},{"lineNumber":431,"author":{"gitId":"tlyi"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":432,"author":{"gitId":"tlyi"},"content":"    protected static boolean hasExtraDelimiters(String params, String... prefixes) {","lastModifiedDate":"2021-10-21"},{"lineNumber":433,"author":{"gitId":"tlyi"},"content":"        final int expectedNum \u003d getNumberOfCorrectParamsDetected(params, prefixes);","lastModifiedDate":"2021-10-21"},{"lineNumber":434,"author":{"gitId":"tlyi"},"content":"        int numOfDelimiters \u003d 0;","lastModifiedDate":"2021-10-21"},{"lineNumber":435,"author":{"gitId":"tlyi"},"content":"        for (int i \u003d 0; i \u003c params.length(); i++) {","lastModifiedDate":"2021-10-21"},{"lineNumber":436,"author":{"gitId":"tlyi"},"content":"            if (params.charAt(i) \u003d\u003d Command.COMMAND_PREFIX_DELIMITER.charAt(0)) {","lastModifiedDate":"2021-10-21"},{"lineNumber":437,"author":{"gitId":"tlyi"},"content":"                numOfDelimiters++;","lastModifiedDate":"2021-10-21"},{"lineNumber":438,"author":{"gitId":"tlyi"},"content":"            }","lastModifiedDate":"2021-10-21"},{"lineNumber":439,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":440,"author":{"gitId":"tlyi"},"content":"        logger.log(Level.INFO, String.format(\"no. of delimiters detected: %s\", numOfDelimiters));","lastModifiedDate":"2021-10-27"},{"lineNumber":441,"author":{"gitId":"tlyi"},"content":"        return numOfDelimiters \u003e expectedNum;","lastModifiedDate":"2021-10-21"},{"lineNumber":442,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":443,"author":{"gitId":"tlyi"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"weidak":9,"tryyang2001":4,"xingjie99":3,"tlyi":427}},{"path":"src/main/java/seedu/duke/logic/parser/UpdateProfileParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.logic.parser;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"tlyi"},"content":"import seedu.duke.logic.commands.Command;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"tlyi"},"content":"import seedu.duke.logic.commands.InvalidCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"tlyi"},"content":"import seedu.duke.logic.commands.ProfileCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"tlyi"},"content":"import seedu.duke.logic.commands.ProfileUpdateCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"tlyi"},"content":"import seedu.duke.logic.parser.exceptions.ParamInvalidException;","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"tlyi"},"content":"/**","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"tlyi"},"content":" * Parses input arguments for Update Profile command.","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"tlyi"},"content":" */","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"tlyi"},"content":"public class UpdateProfileParser implements Parser {","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"tlyi"},"content":"    @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"tlyi"},"content":"    public Command parse(String params) {","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"tlyi"},"content":"        if (params.isEmpty()) { //no additional parameters, assumed to be view profile command","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"tlyi"},"content":"            return new ProfileCommand();","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"tlyi"},"content":"        //TODO: Test profile again after storage has been updated","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"tlyi"},"content":"        if (ParserUtils.getNumberOfCorrectParamsDetected(params, ProfileUpdateCommand.EXPECTED_PREFIXES) \u003d\u003d 0) {","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"tlyi"},"content":"            return new InvalidCommand(ProfileUpdateCommand.MESSAGE_INVALID_COMMAND_FORMAT);","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"tlyi"},"content":"        if (ParserUtils.hasExtraDelimiters(","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"tlyi"},"content":"                params, ProfileUpdateCommand.EXPECTED_PREFIXES)) {","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"tlyi"},"content":"            return new InvalidCommand(ParserMessages.MESSAGE_ERROR_TOO_MANY_DELIMITERS);","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"tlyi"},"content":"        try {","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"tlyi"},"content":"            final String name \u003d ParserUtils.extractName(params);","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"tlyi"},"content":"            final double height \u003d ParserUtils.extractHeight(params);","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"tlyi"},"content":"            final double weight \u003d ParserUtils.extractWeight(params);","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"tlyi"},"content":"            final int calorieGoal \u003d ParserUtils.extractCalorieGoal(params);","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"tlyi"},"content":"            final int age \u003d ParserUtils.extractAge(params);","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"tlyi"},"content":"            final int activityFactor \u003d ParserUtils.extractActivityFactor(params);","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"tlyi"},"content":"            final char gender \u003d ParserUtils.extractGender(params);","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"tlyi"},"content":"            return new ProfileUpdateCommand(name, height, weight, calorieGoal, age, activityFactor, gender);","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"tlyi"},"content":"        } catch (ParamInvalidException e) {","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"tlyi"},"content":"            return new InvalidCommand(e.getMessage());","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":42,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":43,"author":{"gitId":"tlyi"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"tlyi":43}},{"path":"src/main/java/seedu/duke/logic/parser/ViewCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.logic.parser;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"tlyi"},"content":"import seedu.duke.logic.commands.Command;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"tlyi"},"content":"import seedu.duke.logic.commands.CommandMessages;","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"tlyi"},"content":"import seedu.duke.logic.commands.InvalidCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"tlyi"},"content":"import seedu.duke.logic.commands.ViewExerciseBankCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"tlyi"},"content":"import seedu.duke.logic.commands.ViewExerciseListCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"tlyi"},"content":"import seedu.duke.logic.commands.ViewFoodBankCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"tlyi"},"content":"import seedu.duke.logic.commands.ViewFoodListCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"tlyi"},"content":"import seedu.duke.logic.commands.ViewFutureExerciseListCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"tlyi"},"content":"import seedu.duke.logic.parser.exceptions.ItemNotSpecifiedException;","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"tlyi"},"content":"/**","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"tlyi"},"content":" * Parses input arguments for View commands.","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"tlyi"},"content":" */","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"tlyi"},"content":"public class ViewCommandParser implements Parser {","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"tlyi"},"content":"    @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"tlyi"},"content":"    public Command parse(String params) {","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"tlyi"},"content":"        try {","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"tlyi"},"content":"            final String itemTypePrefix \u003d ParserUtils.extractItemTypePrefix(params);","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"tlyi"},"content":"            switch (itemTypePrefix) {","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"tlyi"},"content":"            case Command.COMMAND_PREFIX_EXERCISE:","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"tlyi"},"content":"                return new ViewExerciseListCommand();","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"tlyi"},"content":"            case Command.COMMAND_PREFIX_FOOD:","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"tlyi"},"content":"                return new ViewFoodListCommand();","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"tlyi"},"content":"            case Command.COMMAND_PREFIX_UPCOMING_EXERCISE:","lastModifiedDate":"2021-10-27"},{"lineNumber":28,"author":{"gitId":"tlyi"},"content":"                return new ViewFutureExerciseListCommand();","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"tlyi"},"content":"            case Command.COMMAND_PREFIX_EXERCISE_BANK:","lastModifiedDate":"2021-10-27"},{"lineNumber":30,"author":{"gitId":"tlyi"},"content":"                return new ViewExerciseBankCommand();","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"tlyi"},"content":"            case Command.COMMAND_PREFIX_FOOD_BANK:","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"tlyi"},"content":"                return new ViewFoodBankCommand();","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"tlyi"},"content":"            default:","lastModifiedDate":"2021-10-27"},{"lineNumber":34,"author":{"gitId":"tlyi"},"content":"                throw new ItemNotSpecifiedException();","lastModifiedDate":"2021-10-27"},{"lineNumber":35,"author":{"gitId":"tlyi"},"content":"            }","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"tlyi"},"content":"        } catch (ItemNotSpecifiedException e) {","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"tlyi"},"content":"            return new InvalidCommand(CommandMessages.MESSAGE_VIEW_COMMAND_INVALID_FORMAT);","lastModifiedDate":"2021-10-27"},{"lineNumber":38,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"tlyi"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"tlyi":40}},{"path":"src/main/java/seedu/duke/logic/parser/exceptions/ItemNotSpecifiedException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.logic.parser.exceptions;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"tlyi"},"content":"/**","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"tlyi"},"content":" * Represents an error where the user did not specify which list to execute the command on. (food/exercise)","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"tlyi"},"content":" */","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"tlyi"},"content":"public class ItemNotSpecifiedException extends Exception {","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"tlyi"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"tlyi":7}},{"path":"src/main/java/seedu/duke/logic/parser/exceptions/ParamInvalidException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.logic.parser.exceptions;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"tlyi"},"content":"/**","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"tlyi"},"content":" * Represents an error where the parameter specified is invalid for the command.","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"tlyi"},"content":" */","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"tlyi"},"content":"public class ParamInvalidException extends Exception {","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"tlyi"},"content":"    private static String errorMessage;","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"tlyi"},"content":"    public ParamInvalidException(String errorMessage) {","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"tlyi"},"content":"        super(errorMessage);","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"tlyi"},"content":"        ParamInvalidException.errorMessage \u003d errorMessage;","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"tlyi"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"tlyi":13}},{"path":"src/main/java/seedu/duke/logic/parser/exceptions/ParamMissingException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.logic.parser.exceptions;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"tlyi"},"content":"/**","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"tlyi"},"content":" * Represents an error where a parameter required for the command is not specified.","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"tlyi"},"content":" */","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"tlyi"},"content":"public class ParamMissingException extends Exception {","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"tlyi"},"content":"    private static String errorMessage;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"tlyi"},"content":"    public ParamMissingException(String errorMessage) {","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"tlyi"},"content":"        super(errorMessage);","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"tlyi"},"content":"        ParamMissingException.errorMessage \u003d errorMessage;","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"tlyi"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"tlyi":13}},{"path":"src/main/java/seedu/duke/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weidak"},"content":"package seedu.duke.storage;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"weidak"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"weidak"},"content":"public abstract class Storage {","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"weidak"},"content":"    public static final String FILEPATH \u003d \"./data/\";","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"weidak"},"content":"    protected static final Logger logger \u003d Logger.getLogger(Storage.class.getName());","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"weidak"},"content":"    protected String filePath;","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"weidak"},"content":"    protected String fileName;","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"weidak"},"content":"    protected String getFileName(String path) {","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"weidak"},"content":"        return path.split(\"/\")[2];","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"weidak"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"weidak":17}},{"path":"src/main/java/seedu/duke/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weidak"},"content":"package seedu.duke.storage;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"weidak"},"content":"import seedu.duke.data.DataManager;","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"tlyi"},"content":"import seedu.duke.data.item.ItemBank;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"tlyi"},"content":"import seedu.duke.data.item.exercise.ExerciseList;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"tlyi"},"content":"import seedu.duke.data.item.exercise.FutureExerciseList;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"tlyi"},"content":"import seedu.duke.data.item.food.FoodList;","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"tlyi"},"content":"import seedu.duke.data.profile.Profile;","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"weidak"},"content":"import seedu.duke.storage.data.exercise.exercisebank.ExerciseBankStorage;","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"weidak"},"content":"import seedu.duke.storage.data.exercise.exercisebank.ExerciseBankStorageInterface;","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"tlyi"},"content":"import seedu.duke.storage.data.exercise.exerciselist.ExerciseListStorage;","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"weidak"},"content":"import seedu.duke.storage.data.exercise.exerciselist.ExerciseStorageInterface;","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"tlyi"},"content":"import seedu.duke.storage.data.exercise.futurelist.FutureExerciseListStorage;","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"weidak"},"content":"import seedu.duke.storage.data.exercise.futurelist.UpcomingStorageInterface;","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"weidak"},"content":"import seedu.duke.storage.data.food.foodbank.FoodBankStorage;","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"tlyi"},"content":"import seedu.duke.storage.data.food.foodbank.FoodBankStorageInterface;","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"weidak"},"content":"import seedu.duke.storage.data.food.foodlist.FoodListStorage;","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"tlyi"},"content":"import seedu.duke.storage.data.food.foodlist.FoodStorageInterface;","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"weidak"},"content":"import seedu.duke.storage.data.profile.ProfileStorage;","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"weidak"},"content":"import seedu.duke.storage.data.profile.ProfileStorageInterface;","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"tlyi"},"content":"import seedu.duke.storage.exceptions.UnableToReadFileException;","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"tlyi"},"content":"import seedu.duke.storage.exceptions.UnableToWriteFileException;","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"weidak"},"content":"public class StorageManager implements ProfileStorageInterface, FoodBankStorageInterface,","lastModifiedDate":"2021-10-25"},{"lineNumber":25,"author":{"gitId":"weidak"},"content":"        ExerciseBankStorageInterface, ExerciseStorageInterface, UpcomingStorageInterface, FoodStorageInterface {","lastModifiedDate":"2021-10-25"},{"lineNumber":26,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"weidak"},"content":"    public static final String FILE_TEXT_DELIMITER \u003d \"\\\\|\";","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"weidak"},"content":"    public static final String FILEPATH \u003d \"./data/\";","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"weidak"},"content":"    public static final String FILENAME_PROFILE \u003d \"profile.txt\";","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"weidak"},"content":"    public static final String FILEPATH_PROFILE \u003d FILEPATH + FILENAME_PROFILE;","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"weidak"},"content":"    public static final String FILENAME_BANK_FOOD \u003d \"food_bank.txt\";","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"weidak"},"content":"    public static final String FILEPATH_BANK_FOOD \u003d FILEPATH + FILENAME_BANK_FOOD;","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"weidak"},"content":"    public static final String FILENAME_LIST_FOOD \u003d \"food_list.txt\";","lastModifiedDate":"2021-10-25"},{"lineNumber":35,"author":{"gitId":"weidak"},"content":"    public static final String FILEPATH_LIST_FOOD \u003d FILEPATH + FILENAME_LIST_FOOD;","lastModifiedDate":"2021-10-25"},{"lineNumber":36,"author":{"gitId":"weidak"},"content":"    public static final String FILENAME_BANK_EXERCISE \u003d \"exercise_bank.txt\";","lastModifiedDate":"2021-10-25"},{"lineNumber":37,"author":{"gitId":"weidak"},"content":"    public static final String FILEPATH_BANK_EXERCISE \u003d FILEPATH + FILENAME_BANK_EXERCISE;","lastModifiedDate":"2021-10-25"},{"lineNumber":38,"author":{"gitId":"weidak"},"content":"    public static final String FILENAME_LIST_EXERCISE \u003d \"exercise_list.txt\";","lastModifiedDate":"2021-10-25"},{"lineNumber":39,"author":{"gitId":"weidak"},"content":"    public static final String FILEPATH_LIST_EXERCISE \u003d FILEPATH + FILENAME_LIST_EXERCISE;","lastModifiedDate":"2021-10-25"},{"lineNumber":40,"author":{"gitId":"weidak"},"content":"    public static final String FILENAME_LIST_FUTURE \u003d \"future_list.txt\";","lastModifiedDate":"2021-10-25"},{"lineNumber":41,"author":{"gitId":"weidak"},"content":"    public static final String FILEPATH_LIST_FUTURE \u003d FILEPATH + FILENAME_LIST_FUTURE;","lastModifiedDate":"2021-10-25"},{"lineNumber":42,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":43,"author":{"gitId":"weidak"},"content":"    private ProfileStorage profileStorage;","lastModifiedDate":"2021-10-27"},{"lineNumber":44,"author":{"gitId":"weidak"},"content":"    private ExerciseListStorage exerciseListStorage;","lastModifiedDate":"2021-10-27"},{"lineNumber":45,"author":{"gitId":"weidak"},"content":"    private FoodListStorage foodListStorage;","lastModifiedDate":"2021-10-27"},{"lineNumber":46,"author":{"gitId":"weidak"},"content":"    private FutureExerciseListStorage futureExerciseListStorage;","lastModifiedDate":"2021-10-27"},{"lineNumber":47,"author":{"gitId":"weidak"},"content":"    private FoodBankStorage foodBankStorage;","lastModifiedDate":"2021-10-27"},{"lineNumber":48,"author":{"gitId":"weidak"},"content":"    private ExerciseBankStorage exerciseBankStorage;","lastModifiedDate":"2021-10-27"},{"lineNumber":49,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":50,"author":{"gitId":"weidak"},"content":"    public StorageManager() {","lastModifiedDate":"2021-10-27"},{"lineNumber":51,"author":{"gitId":"weidak"},"content":"        this.profileStorage \u003d new ProfileStorage(FILEPATH_PROFILE);","lastModifiedDate":"2021-10-27"},{"lineNumber":52,"author":{"gitId":"weidak"},"content":"        this.exerciseListStorage \u003d new ExerciseListStorage(FILEPATH_LIST_EXERCISE);","lastModifiedDate":"2021-10-27"},{"lineNumber":53,"author":{"gitId":"weidak"},"content":"        this.foodListStorage \u003d new FoodListStorage(FILEPATH_LIST_FOOD);","lastModifiedDate":"2021-10-27"},{"lineNumber":54,"author":{"gitId":"weidak"},"content":"        this.futureExerciseListStorage \u003d new FutureExerciseListStorage(FILEPATH_LIST_FUTURE);","lastModifiedDate":"2021-10-27"},{"lineNumber":55,"author":{"gitId":"weidak"},"content":"        this.foodBankStorage \u003d new FoodBankStorage(FILEPATH_BANK_FOOD);","lastModifiedDate":"2021-10-27"},{"lineNumber":56,"author":{"gitId":"weidak"},"content":"        this.exerciseBankStorage \u003d new ExerciseBankStorage(FILEPATH_BANK_EXERCISE);","lastModifiedDate":"2021-10-27"},{"lineNumber":57,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":58,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":59,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":60,"author":{"gitId":"weidak"},"content":"     * Loads all the data into a DataManager object.","lastModifiedDate":"2021-10-27"},{"lineNumber":61,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-10-27"},{"lineNumber":62,"author":{"gitId":"weidak"},"content":"     * @return DataManager containing items loaded from storage","lastModifiedDate":"2021-10-27"},{"lineNumber":63,"author":{"gitId":"weidak"},"content":"     * @throws UnableToReadFileException if loading of any files are unsuccessful","lastModifiedDate":"2021-10-27"},{"lineNumber":64,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":65,"author":{"gitId":"weidak"},"content":"    public DataManager loadAll() throws UnableToReadFileException {","lastModifiedDate":"2021-10-27"},{"lineNumber":66,"author":{"gitId":"weidak"},"content":"        return new DataManager(","lastModifiedDate":"2021-10-27"},{"lineNumber":67,"author":{"gitId":"weidak"},"content":"                loadExerciseList(),","lastModifiedDate":"2021-10-27"},{"lineNumber":68,"author":{"gitId":"weidak"},"content":"                loadFutureExerciseList(),","lastModifiedDate":"2021-10-27"},{"lineNumber":69,"author":{"gitId":"weidak"},"content":"                loadFoodList(),","lastModifiedDate":"2021-10-27"},{"lineNumber":70,"author":{"gitId":"weidak"},"content":"                loadExerciseBank(),","lastModifiedDate":"2021-10-27"},{"lineNumber":71,"author":{"gitId":"weidak"},"content":"                loadFoodBank(),","lastModifiedDate":"2021-10-27"},{"lineNumber":72,"author":{"gitId":"weidak"},"content":"                loadProfile());","lastModifiedDate":"2021-10-27"},{"lineNumber":73,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":74,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":75,"author":{"gitId":"tlyi"},"content":"    public void saveAll(DataManager dataManager) throws UnableToWriteFileException {","lastModifiedDate":"2021-10-27"},{"lineNumber":76,"author":{"gitId":"tlyi"},"content":"        saveProfile(dataManager.getProfile());","lastModifiedDate":"2021-10-27"},{"lineNumber":77,"author":{"gitId":"tlyi"},"content":"        saveExerciseList(dataManager.getExerciseItems());","lastModifiedDate":"2021-10-27"},{"lineNumber":78,"author":{"gitId":"tlyi"},"content":"        saveFoodList(dataManager.getFoodItems());","lastModifiedDate":"2021-10-27"},{"lineNumber":79,"author":{"gitId":"tlyi"},"content":"        saveFutureExerciseList(dataManager.getFutureExerciseItems());","lastModifiedDate":"2021-10-27"},{"lineNumber":80,"author":{"gitId":"tlyi"},"content":"        saveFoodBank(dataManager.getFoodBank());","lastModifiedDate":"2021-10-27"},{"lineNumber":81,"author":{"gitId":"tlyi"},"content":"        saveExerciseBank(dataManager.getExerciseBank());","lastModifiedDate":"2021-10-27"},{"lineNumber":82,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":83,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":84,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":85,"author":{"gitId":"weidak"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Profile Methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-25"},{"lineNumber":86,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":87,"author":{"gitId":"weidak"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":88,"author":{"gitId":"weidak"},"content":"    public Profile loadProfile() throws UnableToReadFileException {","lastModifiedDate":"2021-10-20"},{"lineNumber":89,"author":{"gitId":"weidak"},"content":"        return profileStorage.loadProfile();","lastModifiedDate":"2021-10-24"},{"lineNumber":90,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":91,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":92,"author":{"gitId":"weidak"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":93,"author":{"gitId":"weidak"},"content":"    public void saveProfile(Profile profile) throws UnableToWriteFileException {","lastModifiedDate":"2021-10-25"},{"lineNumber":94,"author":{"gitId":"weidak"},"content":"        profileStorage.saveProfile(profile);","lastModifiedDate":"2021-10-25"},{"lineNumber":95,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":96,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":97,"author":{"gitId":"weidak"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d ExerciseList Methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-25"},{"lineNumber":98,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":99,"author":{"gitId":"weidak"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":100,"author":{"gitId":"weidak"},"content":"    public ExerciseList loadExerciseList() throws UnableToReadFileException {","lastModifiedDate":"2021-10-25"},{"lineNumber":101,"author":{"gitId":"weidak"},"content":"        return exerciseListStorage.loadExerciseList();","lastModifiedDate":"2021-10-25"},{"lineNumber":102,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":103,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":104,"author":{"gitId":"weidak"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":105,"author":{"gitId":"weidak"},"content":"    public void saveExerciseList(ExerciseList exerciseList) throws UnableToWriteFileException {","lastModifiedDate":"2021-10-25"},{"lineNumber":106,"author":{"gitId":"weidak"},"content":"        exerciseListStorage.saveExerciseList(exerciseList);","lastModifiedDate":"2021-10-25"},{"lineNumber":107,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":108,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":109,"author":{"gitId":"weidak"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d FutureExerciseList Methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-25"},{"lineNumber":110,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":111,"author":{"gitId":"weidak"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":112,"author":{"gitId":"weidak"},"content":"    public FutureExerciseList loadFutureExerciseList() throws UnableToReadFileException {","lastModifiedDate":"2021-10-25"},{"lineNumber":113,"author":{"gitId":"weidak"},"content":"        return futureExerciseListStorage.loadFutureExerciseList();","lastModifiedDate":"2021-10-25"},{"lineNumber":114,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":115,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":116,"author":{"gitId":"weidak"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":117,"author":{"gitId":"weidak"},"content":"    public void saveFutureExerciseList(FutureExerciseList futureExerciseList) throws UnableToWriteFileException {","lastModifiedDate":"2021-10-25"},{"lineNumber":118,"author":{"gitId":"weidak"},"content":"        futureExerciseListStorage.saveFutureExerciseList(futureExerciseList);","lastModifiedDate":"2021-10-25"},{"lineNumber":119,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":120,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":121,"author":{"gitId":"weidak"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d FoodList Methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-25"},{"lineNumber":122,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":123,"author":{"gitId":"weidak"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":124,"author":{"gitId":"weidak"},"content":"    public FoodList loadFoodList() throws UnableToReadFileException {","lastModifiedDate":"2021-10-25"},{"lineNumber":125,"author":{"gitId":"weidak"},"content":"        return foodListStorage.loadFoodList();","lastModifiedDate":"2021-10-25"},{"lineNumber":126,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":127,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":128,"author":{"gitId":"weidak"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":129,"author":{"gitId":"weidak"},"content":"    public void saveFoodList(FoodList foodList) throws UnableToWriteFileException {","lastModifiedDate":"2021-10-25"},{"lineNumber":130,"author":{"gitId":"weidak"},"content":"        foodListStorage.saveFoodList(foodList);","lastModifiedDate":"2021-10-25"},{"lineNumber":131,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":132,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":133,"author":{"gitId":"weidak"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d ExerciseBank Methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-25"},{"lineNumber":134,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":135,"author":{"gitId":"weidak"},"content":"    @Override","lastModifiedDate":"2021-10-27"},{"lineNumber":136,"author":{"gitId":"weidak"},"content":"    public ItemBank loadExerciseBank() throws UnableToReadFileException {","lastModifiedDate":"2021-10-25"},{"lineNumber":137,"author":{"gitId":"weidak"},"content":"        return exerciseBankStorage.loadExerciseBank();","lastModifiedDate":"2021-10-25"},{"lineNumber":138,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":139,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":140,"author":{"gitId":"weidak"},"content":"    @Override","lastModifiedDate":"2021-10-27"},{"lineNumber":141,"author":{"gitId":"weidak"},"content":"    public void saveExerciseBank(ItemBank exerciseBank) throws UnableToWriteFileException {","lastModifiedDate":"2021-10-25"},{"lineNumber":142,"author":{"gitId":"weidak"},"content":"        exerciseBankStorage.saveExerciseBank(exerciseBank);","lastModifiedDate":"2021-10-25"},{"lineNumber":143,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":144,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":145,"author":{"gitId":"weidak"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d FoodBank Methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-25"},{"lineNumber":146,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":147,"author":{"gitId":"weidak"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":148,"author":{"gitId":"weidak"},"content":"    public ItemBank loadFoodBank() throws UnableToReadFileException {","lastModifiedDate":"2021-10-25"},{"lineNumber":149,"author":{"gitId":"weidak"},"content":"        return foodBankStorage.loadFoodBank();","lastModifiedDate":"2021-10-25"},{"lineNumber":150,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":151,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":152,"author":{"gitId":"weidak"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":153,"author":{"gitId":"weidak"},"content":"    public void saveFoodBank(ItemBank foodBank) throws UnableToWriteFileException {","lastModifiedDate":"2021-10-20"},{"lineNumber":154,"author":{"gitId":"weidak"},"content":"        foodBankStorage.saveFoodBank(foodBank);","lastModifiedDate":"2021-10-20"},{"lineNumber":155,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":156,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":157,"author":{"gitId":"weidak"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"weidak":139,"tlyi":18}},{"path":"src/main/java/seedu/duke/storage/data/ItemBankDecoder.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weidak"},"content":"package seedu.duke.storage.data;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"weidak"},"content":"import seedu.duke.data.item.ItemBank;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"weidak"},"content":"import seedu.duke.data.item.exceptions.DuplicateItemInBankException;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"weidak"},"content":"import seedu.duke.data.item.exercise.Exercise;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"weidak"},"content":"import seedu.duke.data.item.food.Food;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"weidak"},"content":"import seedu.duke.storage.StorageManager;","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"weidak"},"content":"import seedu.duke.storage.data.exercise.exercisebank.ExerciseBankStorage;","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"weidak"},"content":"import seedu.duke.storage.data.food.foodbank.FoodBankStorage;","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"weidak"},"content":"import seedu.duke.storage.exceptions.InvalidDataException;","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"weidak"},"content":"import java.io.File;","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"weidak"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"weidak"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"weidak"},"content":"/**","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"weidak"},"content":" * Decodes the ItemBanks from their respective data storage files.","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"weidak"},"content":" */","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"weidak"},"content":"public class ItemBankDecoder {","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"weidak"},"content":"     * Retrieves data from ItemBank storage.","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"weidak"},"content":"     * @param filePath path of item bank to be retrieved","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"weidak"},"content":"     * @param type     type of ItemBank to retrieve to","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"weidak"},"content":"     * @return the items that have been successfully loaded from the filepath","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"weidak"},"content":"     * @throws FileNotFoundException If the filepath provided is invalid","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"weidak"},"content":"    public static ItemBank retrieveDataFromItemBank(String filePath,","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"weidak"},"content":"                                                    String type) throws FileNotFoundException {","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"weidak"},"content":"        ItemBank items \u003d new ItemBank();","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"weidak"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2021-10-25"},{"lineNumber":33,"author":{"gitId":"weidak"},"content":"        Scanner in \u003d new Scanner(file);","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"weidak"},"content":"        decodeItems(type, items, in);","lastModifiedDate":"2021-10-25"},{"lineNumber":35,"author":{"gitId":"weidak"},"content":"        return items;","lastModifiedDate":"2021-10-25"},{"lineNumber":36,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":37,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":38,"author":{"gitId":"weidak"},"content":"    private static void decodeItems(String type, ItemBank items, Scanner in) {","lastModifiedDate":"2021-10-25"},{"lineNumber":39,"author":{"gitId":"weidak"},"content":"        while (in.hasNext()) {","lastModifiedDate":"2021-10-24"},{"lineNumber":40,"author":{"gitId":"weidak"},"content":"            try {","lastModifiedDate":"2021-10-24"},{"lineNumber":41,"author":{"gitId":"weidak"},"content":"                decodeFoodBankDataFromString(items, in.nextLine(), type);","lastModifiedDate":"2021-10-24"},{"lineNumber":42,"author":{"gitId":"weidak"},"content":"            } catch (InvalidDataException e) {","lastModifiedDate":"2021-10-24"},{"lineNumber":43,"author":{"gitId":"weidak"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2021-10-24"},{"lineNumber":44,"author":{"gitId":"weidak"},"content":"            }","lastModifiedDate":"2021-10-24"},{"lineNumber":45,"author":{"gitId":"weidak"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":46,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":47,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":48,"author":{"gitId":"weidak"},"content":"    private static void decodeFoodBankDataFromString(ItemBank items, String line,","lastModifiedDate":"2021-10-24"},{"lineNumber":49,"author":{"gitId":"weidak"},"content":"                                                     String type) throws InvalidDataException {","lastModifiedDate":"2021-10-24"},{"lineNumber":50,"author":{"gitId":"weidak"},"content":"        try {","lastModifiedDate":"2021-10-24"},{"lineNumber":51,"author":{"gitId":"weidak"},"content":"            final String[] itemDetails \u003d line.split(StorageManager.FILE_TEXT_DELIMITER);","lastModifiedDate":"2021-10-24"},{"lineNumber":52,"author":{"gitId":"weidak"},"content":"            final String name \u003d itemDetails[1];","lastModifiedDate":"2021-10-24"},{"lineNumber":53,"author":{"gitId":"weidak"},"content":"            final int calories \u003d Integer.parseInt(itemDetails[2]);","lastModifiedDate":"2021-10-24"},{"lineNumber":54,"author":{"gitId":"weidak"},"content":"            addToRespectiveBank(items, type, name, calories);","lastModifiedDate":"2021-10-24"},{"lineNumber":55,"author":{"gitId":"weidak"},"content":"        } catch (IndexOutOfBoundsException | NumberFormatException | NullPointerException","lastModifiedDate":"2021-10-24"},{"lineNumber":56,"author":{"gitId":"weidak"},"content":"                | DuplicateItemInBankException e) {","lastModifiedDate":"2021-10-24"},{"lineNumber":57,"author":{"gitId":"weidak"},"content":"            throw new InvalidDataException(StorageManager.FILENAME_BANK_FOOD, line);","lastModifiedDate":"2021-10-24"},{"lineNumber":58,"author":{"gitId":"weidak"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":59,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":60,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":61,"author":{"gitId":"weidak"},"content":"    private static void addToRespectiveBank(ItemBank items, String type,","lastModifiedDate":"2021-10-24"},{"lineNumber":62,"author":{"gitId":"weidak"},"content":"                                            String name, int calories) throws DuplicateItemInBankException {","lastModifiedDate":"2021-10-24"},{"lineNumber":63,"author":{"gitId":"weidak"},"content":"        if (isFoodType(type)) {","lastModifiedDate":"2021-10-24"},{"lineNumber":64,"author":{"gitId":"weidak"},"content":"            items.addItem(new Food(name, calories));","lastModifiedDate":"2021-10-24"},{"lineNumber":65,"author":{"gitId":"weidak"},"content":"        } else if (isExerciseType(type)) {","lastModifiedDate":"2021-10-24"},{"lineNumber":66,"author":{"gitId":"weidak"},"content":"            items.addItem(new Exercise(name, calories));","lastModifiedDate":"2021-10-24"},{"lineNumber":67,"author":{"gitId":"weidak"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":68,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":69,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":70,"author":{"gitId":"weidak"},"content":"    private static boolean isExerciseType(String type) {","lastModifiedDate":"2021-10-24"},{"lineNumber":71,"author":{"gitId":"weidak"},"content":"        return type.equals(ExerciseBankStorage.TYPE);","lastModifiedDate":"2021-10-24"},{"lineNumber":72,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":73,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":74,"author":{"gitId":"weidak"},"content":"    private static boolean isFoodType(String type) {","lastModifiedDate":"2021-10-24"},{"lineNumber":75,"author":{"gitId":"weidak"},"content":"        return type.equals(FoodBankStorage.TYPE);","lastModifiedDate":"2021-10-24"},{"lineNumber":76,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":77,"author":{"gitId":"weidak"},"content":"}","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"weidak":77}},{"path":"src/main/java/seedu/duke/storage/data/ItemEncoder.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weidak"},"content":"package seedu.duke.storage.data;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"tlyi"},"content":"import seedu.duke.data.item.ItemBank;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"weidak"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"weidak"},"content":"/**","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"weidak"},"content":" * Encodes all the items available for FitBot (Other than Profile).","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"weidak"},"content":" */","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"weidak"},"content":"public class ItemEncoder {","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"weidak"},"content":"     * Encodes the list of items in the item bank in preparation for storage.","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"weidak"},"content":"     * @param itemBank The list of items to be encoded","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"weidak"},"content":"     * @return An ArrayList of the items to be stored","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"weidak"},"content":"    public static ArrayList\u003cString\u003e encode(ItemBank itemBank) {","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"weidak"},"content":"        ArrayList\u003cString\u003e items \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"weidak"},"content":"        for (int i \u003d 0; i \u003c itemBank.getSize(); i++) {","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"weidak"},"content":"            items.add(itemBank.getItem(i).toFileTextString());","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"weidak"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"weidak"},"content":"        return items;","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"weidak"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"weidak":23,"tlyi":1}},{"path":"src/main/java/seedu/duke/storage/data/ListDecoder.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weidak"},"content":"package seedu.duke.storage.data;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"weidak"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"weidak"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"weidak"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"weidak"},"content":"/**","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"weidak"},"content":" * An abstract class that inherits date parsing functionality for lists.","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"weidak"},"content":" */","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"weidak"},"content":"public abstract class ListDecoder {","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"weidak"},"content":"    protected static final DateTimeFormatter DATE_FORMATTER \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy\");","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"weidak"},"content":"    protected static final DateTimeFormatter DATE_TIME_FORMATTER \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\");","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"weidak"},"content":"    protected static LocalDate parseDate(String date) {","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"weidak"},"content":"        return LocalDate.parse(date, DATE_FORMATTER);","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"weidak"},"content":"    protected static LocalDateTime parseDateTime(String dateTime) {","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"weidak"},"content":"        return LocalDateTime.parse(dateTime, DATE_TIME_FORMATTER);","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"weidak"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"weidak":22}},{"path":"src/main/java/seedu/duke/storage/data/exercise/exercisebank/ExerciseBankStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weidak"},"content":"package seedu.duke.storage.data.exercise.exercisebank;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"weidak"},"content":"import seedu.duke.data.item.ItemBank;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"weidak"},"content":"import seedu.duke.storage.Storage;","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"weidak"},"content":"import seedu.duke.storage.data.ItemBankDecoder;","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"weidak"},"content":"import seedu.duke.storage.data.ItemEncoder;","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"weidak"},"content":"import seedu.duke.storage.exceptions.UnableToReadFileException;","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"weidak"},"content":"import seedu.duke.storage.exceptions.UnableToWriteFileException;","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"weidak"},"content":"import seedu.duke.storage.utilities.FileChecker;","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"weidak"},"content":"import seedu.duke.storage.utilities.FileSaver;","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"weidak"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"weidak"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"weidak"},"content":"/**","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"weidak"},"content":" * This storage handles the loading and saving of exercise bank items.","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"weidak"},"content":" */","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"weidak"},"content":"public class ExerciseBankStorage extends Storage implements ExerciseBankStorageInterface {","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"weidak"},"content":"    public static final String TYPE \u003d \"Exercise\";","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"weidak"},"content":"     * Constructor for the exercise bank storage.","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-10-25"},{"lineNumber":25,"author":{"gitId":"weidak"},"content":"     * @param filePath of the exercise bank data file","lastModifiedDate":"2021-10-25"},{"lineNumber":26,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":27,"author":{"gitId":"weidak"},"content":"    public ExerciseBankStorage(String filePath) {","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"weidak"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"weidak"},"content":"        fileName \u003d getFileName(filePath);","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":31,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":32,"author":{"gitId":"weidak"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":33,"author":{"gitId":"weidak"},"content":"    public ItemBank loadExerciseBank() throws UnableToReadFileException {","lastModifiedDate":"2021-10-25"},{"lineNumber":34,"author":{"gitId":"weidak"},"content":"        FileChecker.createFileIfMissing(filePath);","lastModifiedDate":"2021-10-25"},{"lineNumber":35,"author":{"gitId":"weidak"},"content":"        return readFromExerciseBankFile();","lastModifiedDate":"2021-10-25"},{"lineNumber":36,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":37,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":38,"author":{"gitId":"weidak"},"content":"    private ItemBank readFromExerciseBankFile() throws UnableToReadFileException {","lastModifiedDate":"2021-10-25"},{"lineNumber":39,"author":{"gitId":"weidak"},"content":"        try {","lastModifiedDate":"2021-10-25"},{"lineNumber":40,"author":{"gitId":"weidak"},"content":"            return ItemBankDecoder.retrieveDataFromItemBank(filePath, TYPE);","lastModifiedDate":"2021-10-25"},{"lineNumber":41,"author":{"gitId":"weidak"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-10-25"},{"lineNumber":42,"author":{"gitId":"weidak"},"content":"            logger.log(Level.WARNING, \"The path is missing \", filePath);","lastModifiedDate":"2021-10-25"},{"lineNumber":43,"author":{"gitId":"weidak"},"content":"            throw new UnableToReadFileException(filePath);","lastModifiedDate":"2021-10-25"},{"lineNumber":44,"author":{"gitId":"weidak"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":45,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":46,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":47,"author":{"gitId":"weidak"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":48,"author":{"gitId":"weidak"},"content":"    public void saveExerciseBank(ItemBank exerciseBank) throws UnableToWriteFileException {","lastModifiedDate":"2021-10-25"},{"lineNumber":49,"author":{"gitId":"weidak"},"content":"        FileSaver.saveTo(filePath, ItemEncoder.encode(exerciseBank));","lastModifiedDate":"2021-10-25"},{"lineNumber":50,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":51,"author":{"gitId":"weidak"},"content":"}","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"weidak":51}},{"path":"src/main/java/seedu/duke/storage/data/exercise/exercisebank/ExerciseBankStorageInterface.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weidak"},"content":"package seedu.duke.storage.data.exercise.exercisebank;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"weidak"},"content":"import seedu.duke.data.item.ItemBank;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"weidak"},"content":"import seedu.duke.storage.exceptions.UnableToReadFileException;","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"weidak"},"content":"import seedu.duke.storage.exceptions.UnableToWriteFileException;","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"weidak"},"content":"/**","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"weidak"},"content":" * Interface that ensures both the storage and storage manager has the","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"weidak"},"content":" * required functions to load and save from the exercise bank.","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"weidak"},"content":" */","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"weidak"},"content":"public interface ExerciseBankStorageInterface {","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"weidak"},"content":"     * Loads the exercise bank from the file.","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"weidak"},"content":"     * @return ItemBank object with the loaded bank items from the data file.","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"weidak"},"content":"     * @throws UnableToReadFileException If the file is inaccessible or due to environment variables","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"weidak"},"content":"    ItemBank loadExerciseBank() throws UnableToReadFileException;","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"weidak"},"content":"     * Saves the exercise bank to the file.","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"weidak"},"content":"     * @throws UnableToReadFileException If the file is inaccessible or due to environment variables","lastModifiedDate":"2021-10-25"},{"lineNumber":25,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":26,"author":{"gitId":"weidak"},"content":"    void saveExerciseBank(ItemBank exerciseBank) throws UnableToWriteFileException;","lastModifiedDate":"2021-10-25"},{"lineNumber":27,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"weidak"},"content":"}","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"weidak":28}},{"path":"src/main/java/seedu/duke/storage/data/exercise/exerciselist/ExerciseListDecoder.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weidak"},"content":"package seedu.duke.storage.data.exercise.exerciselist;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"weidak"},"content":"import seedu.duke.data.item.exercise.Exercise;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"weidak"},"content":"import seedu.duke.data.item.exercise.ExerciseList;","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"weidak"},"content":"import seedu.duke.storage.StorageManager;","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"tlyi"},"content":"import seedu.duke.storage.data.ListDecoder;","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"weidak"},"content":"import seedu.duke.storage.exceptions.InvalidDataException;","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"weidak"},"content":"import java.io.File;","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"weidak"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"weidak"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"weidak"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"weidak"},"content":"/**","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"weidak"},"content":" * Decodes the exercise list from storage.","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"weidak"},"content":" */","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"weidak"},"content":"public class ExerciseListDecoder extends ListDecoder {","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"weidak"},"content":"     * Retrieves exercise list or upcoming list from data.","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"weidak"},"content":"     * @return The exercise list with data loaded from file","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"weidak"},"content":"     * @throws FileNotFoundException If file is misplaced/missing","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":25,"author":{"gitId":"weidak"},"content":"    public static ExerciseList retrieveExerciseListFromData(String filePath) throws FileNotFoundException {","lastModifiedDate":"2021-10-25"},{"lineNumber":26,"author":{"gitId":"weidak"},"content":"        ExerciseList exercises \u003d new ExerciseList();","lastModifiedDate":"2021-10-25"},{"lineNumber":27,"author":{"gitId":"weidak"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"weidak"},"content":"        Scanner in \u003d new Scanner(file);","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"weidak"},"content":"        decodeExercises(exercises, in);","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"weidak"},"content":"        return exercises;","lastModifiedDate":"2021-10-25"},{"lineNumber":31,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":32,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":33,"author":{"gitId":"weidak"},"content":"    private static void decodeExercises(ExerciseList exercises, Scanner in) {","lastModifiedDate":"2021-10-25"},{"lineNumber":34,"author":{"gitId":"weidak"},"content":"        while (in.hasNext()) {","lastModifiedDate":"2021-10-25"},{"lineNumber":35,"author":{"gitId":"weidak"},"content":"            try {","lastModifiedDate":"2021-10-25"},{"lineNumber":36,"author":{"gitId":"weidak"},"content":"                decodeExerciseDataFromString(exercises, in.nextLine());","lastModifiedDate":"2021-10-25"},{"lineNumber":37,"author":{"gitId":"weidak"},"content":"            } catch (InvalidDataException e) {","lastModifiedDate":"2021-10-25"},{"lineNumber":38,"author":{"gitId":"weidak"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2021-10-25"},{"lineNumber":39,"author":{"gitId":"weidak"},"content":"            }","lastModifiedDate":"2021-10-25"},{"lineNumber":40,"author":{"gitId":"weidak"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":41,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":42,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":43,"author":{"gitId":"weidak"},"content":"    private static void decodeExerciseDataFromString(ExerciseList exercises, String line) throws InvalidDataException {","lastModifiedDate":"2021-10-25"},{"lineNumber":44,"author":{"gitId":"weidak"},"content":"        try {","lastModifiedDate":"2021-10-25"},{"lineNumber":45,"author":{"gitId":"weidak"},"content":"            final String[] exerciseDetails \u003d line.split(StorageManager.FILE_TEXT_DELIMITER);","lastModifiedDate":"2021-10-25"},{"lineNumber":46,"author":{"gitId":"weidak"},"content":"            final String name \u003d exerciseDetails[1];","lastModifiedDate":"2021-10-25"},{"lineNumber":47,"author":{"gitId":"weidak"},"content":"            final int calories \u003d Integer.parseInt(exerciseDetails[2]);","lastModifiedDate":"2021-10-25"},{"lineNumber":48,"author":{"gitId":"weidak"},"content":"            final LocalDate dateOfExercise \u003d parseDate(exerciseDetails[3]);","lastModifiedDate":"2021-10-25"},{"lineNumber":49,"author":{"gitId":"weidak"},"content":"            exercises.addItem(new Exercise(name, calories, dateOfExercise));","lastModifiedDate":"2021-10-25"},{"lineNumber":50,"author":{"gitId":"weidak"},"content":"        } catch (IndexOutOfBoundsException | NumberFormatException | NullPointerException e) {","lastModifiedDate":"2021-10-25"},{"lineNumber":51,"author":{"gitId":"weidak"},"content":"            throw new InvalidDataException(StorageManager.FILENAME_LIST_EXERCISE, line);","lastModifiedDate":"2021-10-25"},{"lineNumber":52,"author":{"gitId":"weidak"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":53,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":54,"author":{"gitId":"weidak"},"content":"}","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"weidak":53,"tlyi":1}},{"path":"src/main/java/seedu/duke/storage/data/exercise/exerciselist/ExerciseListStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weidak"},"content":"package seedu.duke.storage.data.exercise.exerciselist;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"weidak"},"content":"import seedu.duke.data.item.exercise.ExerciseList;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"weidak"},"content":"import seedu.duke.storage.Storage;","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"weidak"},"content":"import seedu.duke.storage.data.ItemEncoder;","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"weidak"},"content":"import seedu.duke.storage.exceptions.UnableToReadFileException;","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"weidak"},"content":"import seedu.duke.storage.exceptions.UnableToWriteFileException;","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"weidak"},"content":"import seedu.duke.storage.utilities.FileChecker;","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"weidak"},"content":"import seedu.duke.storage.utilities.FileSaver;","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"weidak"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"weidak"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"weidak"},"content":"/**","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"weidak"},"content":" * This storage handles the loading and saving of exercise list items.","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"weidak"},"content":" */","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"weidak"},"content":"public class ExerciseListStorage extends Storage implements ExerciseStorageInterface {","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"weidak"},"content":"     * Constructor for exercise list storage object.","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"weidak"},"content":"     * @param filePath of where the exercise list should be stored.","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"weidak"},"content":"    public ExerciseListStorage(String filePath) {","lastModifiedDate":"2021-10-25"},{"lineNumber":25,"author":{"gitId":"weidak"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2021-10-25"},{"lineNumber":26,"author":{"gitId":"weidak"},"content":"        this.fileName \u003d getFileName(filePath);","lastModifiedDate":"2021-10-25"},{"lineNumber":27,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"weidak"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"weidak"},"content":"    public ExerciseList loadExerciseList() throws UnableToReadFileException {","lastModifiedDate":"2021-10-25"},{"lineNumber":31,"author":{"gitId":"weidak"},"content":"        FileChecker.createFileIfMissing(filePath);","lastModifiedDate":"2021-10-25"},{"lineNumber":32,"author":{"gitId":"weidak"},"content":"        return readFromExerciseListFile();","lastModifiedDate":"2021-10-25"},{"lineNumber":33,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":34,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":35,"author":{"gitId":"weidak"},"content":"    private ExerciseList readFromExerciseListFile() throws UnableToReadFileException {","lastModifiedDate":"2021-10-25"},{"lineNumber":36,"author":{"gitId":"weidak"},"content":"        try {","lastModifiedDate":"2021-10-25"},{"lineNumber":37,"author":{"gitId":"weidak"},"content":"            return ExerciseListDecoder.retrieveExerciseListFromData(filePath);","lastModifiedDate":"2021-10-25"},{"lineNumber":38,"author":{"gitId":"weidak"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-10-25"},{"lineNumber":39,"author":{"gitId":"weidak"},"content":"            logger.log(Level.WARNING, \"The path is missing \", filePath);","lastModifiedDate":"2021-10-25"},{"lineNumber":40,"author":{"gitId":"weidak"},"content":"            throw new UnableToReadFileException(filePath);","lastModifiedDate":"2021-10-25"},{"lineNumber":41,"author":{"gitId":"weidak"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":42,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":43,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":44,"author":{"gitId":"weidak"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":45,"author":{"gitId":"weidak"},"content":"    public void saveExerciseList(ExerciseList exercises) throws UnableToWriteFileException {","lastModifiedDate":"2021-10-25"},{"lineNumber":46,"author":{"gitId":"weidak"},"content":"        FileSaver.saveTo(filePath, ItemEncoder.encode(exercises));","lastModifiedDate":"2021-10-25"},{"lineNumber":47,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":48,"author":{"gitId":"weidak"},"content":"}","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"weidak":48}},{"path":"src/main/java/seedu/duke/storage/data/exercise/exerciselist/ExerciseStorageInterface.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weidak"},"content":"package seedu.duke.storage.data.exercise.exerciselist;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"weidak"},"content":"import seedu.duke.data.item.exercise.ExerciseList;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"weidak"},"content":"import seedu.duke.storage.exceptions.UnableToReadFileException;","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"weidak"},"content":"import seedu.duke.storage.exceptions.UnableToWriteFileException;","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"weidak"},"content":"/**","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"weidak"},"content":" * Interface that ensures both the storage and storage manager has the","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"weidak"},"content":" * required functions to load and save from exercise list storage.","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"weidak"},"content":" */","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"weidak"},"content":"public interface ExerciseStorageInterface {","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"weidak"},"content":"     * Load exercises into an ExerciseList object.","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"weidak"},"content":"     * Used when the selected profile is accessed and its respective ExerciseList is loaded.","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"weidak"},"content":"     * @return ExerciseList object with the details from the storage file","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"weidak"},"content":"     * @throws UnableToReadFileException If the file is inaccessible or due to environment variables","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"weidak"},"content":"    ExerciseList loadExerciseList() throws UnableToReadFileException;","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"weidak"},"content":"     * Saves the exercises into storage.","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"weidak"},"content":"     * Used when there is an update to the list.","lastModifiedDate":"2021-10-25"},{"lineNumber":25,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-10-25"},{"lineNumber":26,"author":{"gitId":"weidak"},"content":"     * @param exercises ExerciseList to be saved","lastModifiedDate":"2021-10-25"},{"lineNumber":27,"author":{"gitId":"weidak"},"content":"     * @throws UnableToReadFileException If the file is inaccessible or due to environment variables","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"weidak"},"content":"    void saveExerciseList(ExerciseList exercises) throws UnableToWriteFileException;","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":31,"author":{"gitId":"weidak"},"content":"}","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"weidak":31}},{"path":"src/main/java/seedu/duke/storage/data/exercise/futurelist/FutureExerciseListDecoder.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weidak"},"content":"package seedu.duke.storage.data.exercise.futurelist;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"tlyi"},"content":"import seedu.duke.data.item.exercise.Exercise;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"tlyi"},"content":"import seedu.duke.data.item.exercise.FutureExerciseList;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"weidak"},"content":"import seedu.duke.storage.StorageManager;","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"weidak"},"content":"import seedu.duke.storage.data.ListDecoder;","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"weidak"},"content":"import seedu.duke.storage.exceptions.InvalidDataException;","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"weidak"},"content":"import java.io.File;","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"weidak"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"weidak"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"weidak"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"weidak"},"content":"/**","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"weidak"},"content":" * Decodes the upcoming exercises from future exercise list data file.","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"weidak"},"content":" */","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"weidak"},"content":"public class FutureExerciseListDecoder extends ListDecoder {","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"weidak"},"content":"     * Retrieves future exercise list from future_list.txt.","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"weidak"},"content":"     * @return The exercise list with data loaded from file","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"weidak"},"content":"     * @throws FileNotFoundException If file is misplaced/missing","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"weidak"},"content":"    public static FutureExerciseList retrieveUpcomingListFromData(String filePath) throws FileNotFoundException {","lastModifiedDate":"2021-10-25"},{"lineNumber":26,"author":{"gitId":"weidak"},"content":"        FutureExerciseList exercises \u003d new FutureExerciseList();","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"weidak"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"weidak"},"content":"        Scanner in \u003d new Scanner(file);","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"weidak"},"content":"        decodeUpcomingExercises(exercises, in);","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"weidak"},"content":"        return exercises;","lastModifiedDate":"2021-10-25"},{"lineNumber":31,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":32,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":33,"author":{"gitId":"weidak"},"content":"    private static void decodeUpcomingExercises(FutureExerciseList exercises, Scanner in) {","lastModifiedDate":"2021-10-25"},{"lineNumber":34,"author":{"gitId":"weidak"},"content":"        while (in.hasNext()) {","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"weidak"},"content":"            try {","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"weidak"},"content":"                decodeUpcomingExerciseDataFromString(exercises, in.nextLine());","lastModifiedDate":"2021-10-25"},{"lineNumber":37,"author":{"gitId":"weidak"},"content":"            } catch (InvalidDataException e) {","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"weidak"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"weidak"},"content":"            }","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"weidak"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":42,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":43,"author":{"gitId":"weidak"},"content":"    private static void decodeUpcomingExerciseDataFromString(FutureExerciseList exercises,","lastModifiedDate":"2021-10-25"},{"lineNumber":44,"author":{"gitId":"weidak"},"content":"                                                             String line) throws InvalidDataException {","lastModifiedDate":"2021-10-20"},{"lineNumber":45,"author":{"gitId":"weidak"},"content":"        try {","lastModifiedDate":"2021-10-20"},{"lineNumber":46,"author":{"gitId":"weidak"},"content":"            final String[] exerciseDetails \u003d line.split(StorageManager.FILE_TEXT_DELIMITER);","lastModifiedDate":"2021-10-25"},{"lineNumber":47,"author":{"gitId":"weidak"},"content":"            final String name \u003d exerciseDetails[1];","lastModifiedDate":"2021-10-20"},{"lineNumber":48,"author":{"gitId":"weidak"},"content":"            final int calories \u003d Integer.parseInt(exerciseDetails[2]);","lastModifiedDate":"2021-10-20"},{"lineNumber":49,"author":{"gitId":"weidak"},"content":"            final LocalDate dateOfExercise \u003d parseDate(exerciseDetails[3]);","lastModifiedDate":"2021-10-20"},{"lineNumber":50,"author":{"gitId":"weidak"},"content":"            exercises.addItem(new Exercise(name, calories, dateOfExercise));","lastModifiedDate":"2021-10-20"},{"lineNumber":51,"author":{"gitId":"weidak"},"content":"        } catch (IndexOutOfBoundsException | NumberFormatException | NullPointerException e) {","lastModifiedDate":"2021-10-20"},{"lineNumber":52,"author":{"gitId":"weidak"},"content":"            throw new InvalidDataException(StorageManager.FILENAME_LIST_FUTURE, line);","lastModifiedDate":"2021-10-25"},{"lineNumber":53,"author":{"gitId":"weidak"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":54,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":55,"author":{"gitId":"weidak"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"weidak":53,"tlyi":2}},{"path":"src/main/java/seedu/duke/storage/data/exercise/futurelist/FutureExerciseListStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weidak"},"content":"package seedu.duke.storage.data.exercise.futurelist;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"weidak"},"content":"import seedu.duke.data.item.exercise.FutureExerciseList;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"weidak"},"content":"import seedu.duke.storage.Storage;","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"weidak"},"content":"import seedu.duke.storage.data.ItemEncoder;","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"weidak"},"content":"import seedu.duke.storage.exceptions.UnableToReadFileException;","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"weidak"},"content":"import seedu.duke.storage.exceptions.UnableToWriteFileException;","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"weidak"},"content":"import seedu.duke.storage.utilities.FileChecker;","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"weidak"},"content":"import seedu.duke.storage.utilities.FileSaver;","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"weidak"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"weidak"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"weidak"},"content":"/**","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"weidak"},"content":" * Storage that handles the saving and loading of data files of upcoming exercises in future exercise storage.","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"weidak"},"content":" */","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"weidak"},"content":"public class FutureExerciseListStorage extends Storage implements UpcomingStorageInterface {","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"weidak"},"content":"     * Constructor for future exercise list storage.","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"weidak"},"content":"     * @param filePath of where the future exercise list should be stored","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"weidak"},"content":"    public FutureExerciseListStorage(String filePath) {","lastModifiedDate":"2021-10-25"},{"lineNumber":25,"author":{"gitId":"weidak"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2021-10-25"},{"lineNumber":26,"author":{"gitId":"weidak"},"content":"        this.fileName \u003d getFileName(filePath);","lastModifiedDate":"2021-10-25"},{"lineNumber":27,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"weidak"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"weidak"},"content":"    public FutureExerciseList loadFutureExerciseList() throws UnableToReadFileException {","lastModifiedDate":"2021-10-25"},{"lineNumber":31,"author":{"gitId":"weidak"},"content":"        FileChecker.createFileIfMissing(filePath);","lastModifiedDate":"2021-10-25"},{"lineNumber":32,"author":{"gitId":"weidak"},"content":"        return readFromFutureListFile();","lastModifiedDate":"2021-10-25"},{"lineNumber":33,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":34,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":35,"author":{"gitId":"weidak"},"content":"    private FutureExerciseList readFromFutureListFile() throws UnableToReadFileException {","lastModifiedDate":"2021-10-25"},{"lineNumber":36,"author":{"gitId":"weidak"},"content":"        try {","lastModifiedDate":"2021-10-25"},{"lineNumber":37,"author":{"gitId":"weidak"},"content":"            return FutureExerciseListDecoder.retrieveUpcomingListFromData(filePath);","lastModifiedDate":"2021-10-25"},{"lineNumber":38,"author":{"gitId":"weidak"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-10-25"},{"lineNumber":39,"author":{"gitId":"weidak"},"content":"            logger.log(Level.WARNING, \"The path is missing \", filePath);","lastModifiedDate":"2021-10-25"},{"lineNumber":40,"author":{"gitId":"weidak"},"content":"            throw new UnableToReadFileException(fileName);","lastModifiedDate":"2021-10-25"},{"lineNumber":41,"author":{"gitId":"weidak"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":42,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":43,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":44,"author":{"gitId":"weidak"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":45,"author":{"gitId":"weidak"},"content":"    public void saveFutureExerciseList(FutureExerciseList futureExercises) throws UnableToWriteFileException {","lastModifiedDate":"2021-10-25"},{"lineNumber":46,"author":{"gitId":"weidak"},"content":"        FileSaver.saveTo(filePath, ItemEncoder.encode(futureExercises));","lastModifiedDate":"2021-10-25"},{"lineNumber":47,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":48,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":49,"author":{"gitId":"weidak"},"content":"}","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"weidak":49}},{"path":"src/main/java/seedu/duke/storage/data/exercise/futurelist/UpcomingStorageInterface.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weidak"},"content":"package seedu.duke.storage.data.exercise.futurelist;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"weidak"},"content":"import seedu.duke.data.item.exercise.FutureExerciseList;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"weidak"},"content":"import seedu.duke.storage.exceptions.UnableToReadFileException;","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"weidak"},"content":"import seedu.duke.storage.exceptions.UnableToWriteFileException;","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"weidak"},"content":"/**","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"weidak"},"content":" * Interface that ensures both the storage and storage manager has the","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"weidak"},"content":" * required functions to load and save from the future exercise list in storage.","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"weidak"},"content":" */","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"weidak"},"content":"public interface UpcomingStorageInterface {","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"weidak"},"content":"     * Loads the future exercise list from storage.","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"weidak"},"content":"     * @return the future exercise list with data loaded in","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"weidak"},"content":"     * @throws UnableToReadFileException If the file is inaccessible or due to environment variables","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"weidak"},"content":"    FutureExerciseList loadFutureExerciseList() throws UnableToReadFileException;","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"weidak"},"content":"     * Saves the future exercise list into storage.","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"weidak"},"content":"     * @param futureExercises the future exercises to be saved to data","lastModifiedDate":"2021-10-25"},{"lineNumber":25,"author":{"gitId":"weidak"},"content":"     * @throws UnableToWriteFileException If the file is inaccessible or due to environment variables","lastModifiedDate":"2021-10-25"},{"lineNumber":26,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":27,"author":{"gitId":"weidak"},"content":"    void saveFutureExerciseList(FutureExerciseList futureExercises) throws UnableToWriteFileException;","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"weidak"},"content":"}","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"weidak":29}},{"path":"src/main/java/seedu/duke/storage/data/food/foodbank/FoodBankStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weidak"},"content":"package seedu.duke.storage.data.food.foodbank;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"weidak"},"content":"import seedu.duke.data.item.ItemBank;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"weidak"},"content":"import seedu.duke.storage.Storage;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"weidak"},"content":"import seedu.duke.storage.data.ItemBankDecoder;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"tlyi"},"content":"import seedu.duke.storage.data.ItemEncoder;","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"weidak"},"content":"import seedu.duke.storage.exceptions.UnableToReadFileException;","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"weidak"},"content":"import seedu.duke.storage.exceptions.UnableToWriteFileException;","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"weidak"},"content":"import seedu.duke.storage.utilities.FileChecker;","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"weidak"},"content":"import seedu.duke.storage.utilities.FileSaver;","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"weidak"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"weidak"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"weidak"},"content":"/**","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"weidak"},"content":" * A Storage class that handles the saving and loading of the FoodBank.","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"weidak"},"content":" */","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"weidak"},"content":"public class FoodBankStorage extends Storage implements FoodBankStorageInterface {","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"weidak"},"content":"    public static final String TYPE \u003d \"Food\";","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"weidak"},"content":"     * Constructs the food bank storage handler with its respective path.","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"weidak"},"content":"     * @param path the directory to save the food bank file","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"weidak"},"content":"    public FoodBankStorage(String path) {","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"weidak"},"content":"        this.filePath \u003d path;","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"weidak"},"content":"        this.fileName \u003d getFileName(path);","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"weidak"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"weidak"},"content":"    public ItemBank loadFoodBank() throws UnableToReadFileException {","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"weidak"},"content":"        FileChecker.createFileIfMissing(filePath);","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"weidak"},"content":"        return readFromFoodBankFile();","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":38,"author":{"gitId":"weidak"},"content":"    private ItemBank readFromFoodBankFile() throws UnableToReadFileException {","lastModifiedDate":"2021-10-24"},{"lineNumber":39,"author":{"gitId":"weidak"},"content":"        try {","lastModifiedDate":"2021-10-24"},{"lineNumber":40,"author":{"gitId":"weidak"},"content":"            return ItemBankDecoder.retrieveDataFromItemBank(filePath, TYPE);","lastModifiedDate":"2021-10-24"},{"lineNumber":41,"author":{"gitId":"weidak"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-10-24"},{"lineNumber":42,"author":{"gitId":"weidak"},"content":"            logger.log(Level.WARNING, \"The path is missing \", filePath);","lastModifiedDate":"2021-10-24"},{"lineNumber":43,"author":{"gitId":"weidak"},"content":"            throw new UnableToReadFileException(filePath);","lastModifiedDate":"2021-10-24"},{"lineNumber":44,"author":{"gitId":"weidak"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":45,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":46,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":47,"author":{"gitId":"weidak"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":48,"author":{"gitId":"weidak"},"content":"    public void saveFoodBank(ItemBank foodBank) throws UnableToWriteFileException {","lastModifiedDate":"2021-10-24"},{"lineNumber":49,"author":{"gitId":"weidak"},"content":"        FileSaver.saveTo(filePath, ItemEncoder.encode(foodBank));","lastModifiedDate":"2021-10-25"},{"lineNumber":50,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":51,"author":{"gitId":"weidak"},"content":"}","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"weidak":50,"tlyi":1}},{"path":"src/main/java/seedu/duke/storage/data/food/foodbank/FoodBankStorageInterface.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weidak"},"content":"package seedu.duke.storage.data.food.foodbank;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"weidak"},"content":"import seedu.duke.data.item.ItemBank;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"weidak"},"content":"import seedu.duke.storage.exceptions.UnableToReadFileException;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"weidak"},"content":"import seedu.duke.storage.exceptions.UnableToWriteFileException;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"weidak"},"content":"/**","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"weidak"},"content":" * Interface that ensures the storage device has a load and save food bank method.","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"weidak"},"content":" */","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"weidak"},"content":"public interface FoodBankStorageInterface {","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"weidak"},"content":"     * Loads the food bank file from data storage.","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"weidak"},"content":"     * @return FoodBank object from data storage","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"weidak"},"content":"     * @throws UnableToReadFileException if the filepath given is inaccessible or I/O was interrupted","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"weidak"},"content":"    ItemBank loadFoodBank() throws UnableToReadFileException;","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"weidak"},"content":"     * Saves the Food Bank into storage.","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"weidak"},"content":"     * Used when there is an update to the Food Bank.","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"weidak"},"content":"     * @param foodBank FoodBank that is to be saved","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"weidak"},"content":"    void saveFoodBank(ItemBank foodBank) throws UnableToWriteFileException;","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"weidak"},"content":"}","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"weidak":27}},{"path":"src/main/java/seedu/duke/storage/data/food/foodlist/FoodListDecoder.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weidak"},"content":"package seedu.duke.storage.data.food.foodlist;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"weidak"},"content":"import seedu.duke.data.item.food.Food;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"weidak"},"content":"import seedu.duke.data.item.food.FoodList;","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"weidak"},"content":"import seedu.duke.storage.StorageManager;","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"weidak"},"content":"import seedu.duke.storage.data.ListDecoder;","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"weidak"},"content":"import seedu.duke.storage.exceptions.InvalidDataException;","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"weidak"},"content":"import java.io.File;","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"weidak"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"weidak"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"weidak"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"weidak"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"weidak"},"content":"/**","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"weidak"},"content":" * Decodes the food list from the storage file.","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"weidak"},"content":" */","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"weidak"},"content":"public class FoodListDecoder extends ListDecoder {","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"weidak"},"content":"     * Retrieves food list from food_list.txt.","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"weidak"},"content":"     * @return The food list with data loaded from file","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"weidak"},"content":"     * @throws FileNotFoundException If file is misplaced/missing","lastModifiedDate":"2021-10-25"},{"lineNumber":25,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":26,"author":{"gitId":"weidak"},"content":"    public static FoodList retrieveFoodListFromData(String filePath) throws FileNotFoundException {","lastModifiedDate":"2021-10-25"},{"lineNumber":27,"author":{"gitId":"weidak"},"content":"        FoodList foodItems \u003d new FoodList();","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"weidak"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"weidak"},"content":"        Scanner in \u003d new Scanner(file);","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"weidak"},"content":"        decodeFoodItems(foodItems, in);","lastModifiedDate":"2021-10-25"},{"lineNumber":31,"author":{"gitId":"weidak"},"content":"        return foodItems;","lastModifiedDate":"2021-10-25"},{"lineNumber":32,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":33,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":34,"author":{"gitId":"weidak"},"content":"    private static void decodeFoodItems(FoodList foodItems, Scanner in) {","lastModifiedDate":"2021-10-25"},{"lineNumber":35,"author":{"gitId":"weidak"},"content":"        while (in.hasNext()) {","lastModifiedDate":"2021-10-25"},{"lineNumber":36,"author":{"gitId":"weidak"},"content":"            try {","lastModifiedDate":"2021-10-25"},{"lineNumber":37,"author":{"gitId":"weidak"},"content":"                decodeFoodDataFromString(foodItems, in.nextLine());","lastModifiedDate":"2021-10-25"},{"lineNumber":38,"author":{"gitId":"weidak"},"content":"            } catch (InvalidDataException e) {","lastModifiedDate":"2021-10-25"},{"lineNumber":39,"author":{"gitId":"weidak"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2021-10-25"},{"lineNumber":40,"author":{"gitId":"weidak"},"content":"            }","lastModifiedDate":"2021-10-25"},{"lineNumber":41,"author":{"gitId":"weidak"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":42,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":43,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":44,"author":{"gitId":"weidak"},"content":"    private static void decodeFoodDataFromString(FoodList foodItems, String line) throws InvalidDataException {","lastModifiedDate":"2021-10-25"},{"lineNumber":45,"author":{"gitId":"weidak"},"content":"        try {","lastModifiedDate":"2021-10-25"},{"lineNumber":46,"author":{"gitId":"weidak"},"content":"            final String[] foodDetails \u003d line.split(StorageManager.FILE_TEXT_DELIMITER);","lastModifiedDate":"2021-10-25"},{"lineNumber":47,"author":{"gitId":"weidak"},"content":"            final String name \u003d foodDetails[1];","lastModifiedDate":"2021-10-25"},{"lineNumber":48,"author":{"gitId":"weidak"},"content":"            final int calories \u003d Integer.parseInt(foodDetails[2]);","lastModifiedDate":"2021-10-25"},{"lineNumber":49,"author":{"gitId":"weidak"},"content":"            final LocalDateTime dateTimeOfFood \u003d parseDateTime(foodDetails[3]);","lastModifiedDate":"2021-10-25"},{"lineNumber":50,"author":{"gitId":"weidak"},"content":"            foodItems.addItem(new Food(name, calories, dateTimeOfFood));","lastModifiedDate":"2021-10-25"},{"lineNumber":51,"author":{"gitId":"weidak"},"content":"        } catch (IndexOutOfBoundsException | NumberFormatException | NullPointerException | DateTimeException e) {","lastModifiedDate":"2021-10-25"},{"lineNumber":52,"author":{"gitId":"weidak"},"content":"            throw new InvalidDataException(StorageManager.FILENAME_LIST_FOOD, line);","lastModifiedDate":"2021-10-25"},{"lineNumber":53,"author":{"gitId":"weidak"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":54,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":55,"author":{"gitId":"weidak"},"content":"}","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"weidak":55}},{"path":"src/main/java/seedu/duke/storage/data/food/foodlist/FoodListStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weidak"},"content":"package seedu.duke.storage.data.food.foodlist;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"weidak"},"content":"import seedu.duke.data.item.food.FoodList;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"weidak"},"content":"import seedu.duke.storage.Storage;","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"weidak"},"content":"import seedu.duke.storage.data.ItemEncoder;","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"weidak"},"content":"import seedu.duke.storage.exceptions.UnableToReadFileException;","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"weidak"},"content":"import seedu.duke.storage.exceptions.UnableToWriteFileException;","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"weidak"},"content":"import seedu.duke.storage.utilities.FileChecker;","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"weidak"},"content":"import seedu.duke.storage.utilities.FileSaver;","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"weidak"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"weidak"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"weidak"},"content":"/**","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"weidak"},"content":" * Storage that handles the saving and loading of data files of upcoming exercises in future exercise storage.","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"weidak"},"content":" */","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"weidak"},"content":"public class FoodListStorage extends Storage implements FoodStorageInterface {","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"weidak"},"content":"     * Constructor for food list storage object.","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"weidak"},"content":"     * @param filePath of where the food list should be saved","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"weidak"},"content":"    public FoodListStorage(String filePath) {","lastModifiedDate":"2021-10-25"},{"lineNumber":25,"author":{"gitId":"weidak"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2021-10-25"},{"lineNumber":26,"author":{"gitId":"weidak"},"content":"        this.fileName \u003d getFileName(filePath);","lastModifiedDate":"2021-10-25"},{"lineNumber":27,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"weidak"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"weidak"},"content":"    public FoodList loadFoodList() throws UnableToReadFileException {","lastModifiedDate":"2021-10-25"},{"lineNumber":31,"author":{"gitId":"weidak"},"content":"        FileChecker.createFileIfMissing(filePath);","lastModifiedDate":"2021-10-25"},{"lineNumber":32,"author":{"gitId":"weidak"},"content":"        return readFromFoodListFile();","lastModifiedDate":"2021-10-25"},{"lineNumber":33,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":34,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":35,"author":{"gitId":"weidak"},"content":"    private FoodList readFromFoodListFile() throws UnableToReadFileException {","lastModifiedDate":"2021-10-25"},{"lineNumber":36,"author":{"gitId":"weidak"},"content":"        try {","lastModifiedDate":"2021-10-25"},{"lineNumber":37,"author":{"gitId":"weidak"},"content":"            return FoodListDecoder.retrieveFoodListFromData(filePath);","lastModifiedDate":"2021-10-25"},{"lineNumber":38,"author":{"gitId":"weidak"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-10-25"},{"lineNumber":39,"author":{"gitId":"weidak"},"content":"            logger.log(Level.WARNING, \"The path is missing \", filePath);","lastModifiedDate":"2021-10-25"},{"lineNumber":40,"author":{"gitId":"weidak"},"content":"            throw new UnableToReadFileException(fileName);","lastModifiedDate":"2021-10-25"},{"lineNumber":41,"author":{"gitId":"weidak"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":42,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":43,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":44,"author":{"gitId":"weidak"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":45,"author":{"gitId":"weidak"},"content":"    public void saveFoodList(FoodList foodItems) throws UnableToWriteFileException {","lastModifiedDate":"2021-10-25"},{"lineNumber":46,"author":{"gitId":"weidak"},"content":"        FileSaver.saveTo(filePath, ItemEncoder.encode(foodItems));","lastModifiedDate":"2021-10-25"},{"lineNumber":47,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":48,"author":{"gitId":"weidak"},"content":"}","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"weidak":48}},{"path":"src/main/java/seedu/duke/storage/data/food/foodlist/FoodStorageInterface.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weidak"},"content":"package seedu.duke.storage.data.food.foodlist;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"weidak"},"content":"import seedu.duke.data.item.food.FoodList;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"weidak"},"content":"import seedu.duke.storage.exceptions.UnableToReadFileException;","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"weidak"},"content":"import seedu.duke.storage.exceptions.UnableToWriteFileException;","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"weidak"},"content":"/**","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"weidak"},"content":" * Interface that ensures both the storage and storage manager has the","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"weidak"},"content":" * required functions to load and save from food list.","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"weidak"},"content":" */","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"weidak"},"content":"public interface FoodStorageInterface {","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"weidak"},"content":"     * Load food items into a FoodList object.","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"weidak"},"content":"     * Used when the selected profile is accessed and its respective ExerciseList is loaded.","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"weidak"},"content":"     * @return FoodList object with the details from the storage file","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"weidak"},"content":"     * @throws UnableToReadFileException If the file is inaccessible or due to environment variables","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"weidak"},"content":"    FoodList loadFoodList() throws UnableToReadFileException;","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"weidak"},"content":"     * Saves the food items into the respective food list data file.","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-10-25"},{"lineNumber":25,"author":{"gitId":"weidak"},"content":"     * @param foodItems food items to be saved to the storage file","lastModifiedDate":"2021-10-25"},{"lineNumber":26,"author":{"gitId":"weidak"},"content":"     * @throws UnableToWriteFileException If the file is inaccessible or due to environment variables","lastModifiedDate":"2021-10-25"},{"lineNumber":27,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"weidak"},"content":"    void saveFoodList(FoodList foodItems) throws UnableToWriteFileException;","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"weidak"},"content":"}","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"weidak":29}},{"path":"src/main/java/seedu/duke/storage/data/profile/ProfileDecoder.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weidak"},"content":"package seedu.duke.storage.data.profile;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"tlyi"},"content":"import seedu.duke.data.profile.Profile;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"tlyi"},"content":"import seedu.duke.data.profile.exceptions.InvalidCharacteristicException;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"weidak"},"content":"import seedu.duke.storage.StorageManager;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"weidak"},"content":"import seedu.duke.storage.exceptions.InvalidDataException;","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"weidak"},"content":"import java.io.File;","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"weidak"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"weidak"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"weidak"},"content":"/**","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"weidak"},"content":" * Decodes the profile from storage data.","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"weidak"},"content":" */","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"weidak"},"content":"public class ProfileDecoder {","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"weidak"},"content":"     * Retrieves profile data from profile.txt","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"weidak"},"content":"     * @return The profile object with its corresponding characteristics","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"weidak"},"content":"     * @throws FileNotFoundException          If the file is misplaced/missing","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"weidak"},"content":"     * @throws InvalidCharacteristicException When the data is corrupted in the file.","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"weidak"},"content":"    public static Profile retrieveProfileFromData(String filePath) throws FileNotFoundException {","lastModifiedDate":"2021-10-25"},{"lineNumber":25,"author":{"gitId":"weidak"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2021-10-25"},{"lineNumber":26,"author":{"gitId":"weidak"},"content":"        Scanner in \u003d new Scanner(file);","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"weidak"},"content":"        return decodeProfile(in);","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"weidak"},"content":"    private static Profile decodeProfile(Scanner in) {","lastModifiedDate":"2021-10-25"},{"lineNumber":31,"author":{"gitId":"weidak"},"content":"        try {","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"weidak"},"content":"            if (in.hasNext()) {","lastModifiedDate":"2021-10-25"},{"lineNumber":33,"author":{"gitId":"weidak"},"content":"                return decodeProfileDataFromString(in.nextLine());","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"weidak"},"content":"            }","lastModifiedDate":"2021-10-25"},{"lineNumber":35,"author":{"gitId":"weidak"},"content":"        } catch (InvalidDataException e) {","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"weidak"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"weidak"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"weidak"},"content":"        return new Profile();","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"weidak"},"content":"    private static Profile decodeProfileDataFromString(String input) throws InvalidDataException {","lastModifiedDate":"2021-10-24"},{"lineNumber":42,"author":{"gitId":"weidak"},"content":"        try {","lastModifiedDate":"2021-10-20"},{"lineNumber":43,"author":{"gitId":"weidak"},"content":"            Profile profile \u003d new Profile();","lastModifiedDate":"2021-10-20"},{"lineNumber":44,"author":{"gitId":"weidak"},"content":"            final String[] profileDetails \u003d input.split(StorageManager.FILE_TEXT_DELIMITER);","lastModifiedDate":"2021-10-25"},{"lineNumber":45,"author":{"gitId":"weidak"},"content":"            final String name \u003d profileDetails[0];","lastModifiedDate":"2021-10-20"},{"lineNumber":46,"author":{"gitId":"weidak"},"content":"            final double height \u003d Double.parseDouble(profileDetails[1]);","lastModifiedDate":"2021-10-20"},{"lineNumber":47,"author":{"gitId":"weidak"},"content":"            final double weight \u003d Double.parseDouble(profileDetails[2]);","lastModifiedDate":"2021-10-20"},{"lineNumber":48,"author":{"gitId":"weidak"},"content":"            final char gender \u003d profileDetails[3].charAt(0);","lastModifiedDate":"2021-10-20"},{"lineNumber":49,"author":{"gitId":"weidak"},"content":"            final int age \u003d Integer.parseInt(profileDetails[4]);","lastModifiedDate":"2021-10-20"},{"lineNumber":50,"author":{"gitId":"weidak"},"content":"            final int calorieGoal \u003d Integer.parseInt(profileDetails[5]);","lastModifiedDate":"2021-10-20"},{"lineNumber":51,"author":{"gitId":"weidak"},"content":"            final int activityFactor \u003d Integer.parseInt(profileDetails[6]);","lastModifiedDate":"2021-10-20"},{"lineNumber":52,"author":{"gitId":"weidak"},"content":"            profile.setProfileWithRawInputs(name, height, weight, gender, age, calorieGoal, activityFactor);","lastModifiedDate":"2021-10-20"},{"lineNumber":53,"author":{"gitId":"weidak"},"content":"            return profile;","lastModifiedDate":"2021-10-20"},{"lineNumber":54,"author":{"gitId":"weidak"},"content":"        } catch (IndexOutOfBoundsException | NumberFormatException e) {","lastModifiedDate":"2021-10-20"},{"lineNumber":55,"author":{"gitId":"weidak"},"content":"            throw new InvalidDataException(StorageManager.FILENAME_PROFILE, input);","lastModifiedDate":"2021-10-24"},{"lineNumber":56,"author":{"gitId":"weidak"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":57,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":58,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":59,"author":{"gitId":"weidak"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"weidak":57,"tlyi":2}},{"path":"src/main/java/seedu/duke/storage/data/profile/ProfileEncoder.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weidak"},"content":"package seedu.duke.storage.data.profile;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"tlyi"},"content":"import seedu.duke.data.profile.Profile;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"weidak"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"weidak"},"content":"/**","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"weidak"},"content":" * Encodes the profile attributes into an ArrayList to be saved.","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"weidak"},"content":" */","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"weidak"},"content":"public class ProfileEncoder {","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"weidak"},"content":"     * Encodes profile for storage.","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"weidak"},"content":"     * @param profile The profile object to be stored.","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"weidak"},"content":"     * @return An arraylist that contains the profile details to save.","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"weidak"},"content":"    public static ArrayList\u003cString\u003e encode(Profile profile) {","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"weidak"},"content":"        return new ArrayList\u003cString\u003e() {","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"weidak"},"content":"            {","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"weidak"},"content":"                add(profile.toFileTextString());","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"weidak"},"content":"            }","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"weidak"},"content":"        };","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"weidak"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"weidak":24,"tlyi":1}},{"path":"src/main/java/seedu/duke/storage/data/profile/ProfileStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weidak"},"content":"package seedu.duke.storage.data.profile;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"tlyi"},"content":"import seedu.duke.data.profile.Profile;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"weidak"},"content":"import seedu.duke.storage.Storage;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"weidak"},"content":"import seedu.duke.storage.exceptions.UnableToReadFileException;","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"weidak"},"content":"import seedu.duke.storage.exceptions.UnableToWriteFileException;","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"weidak"},"content":"import seedu.duke.storage.utilities.FileChecker;","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"weidak"},"content":"import seedu.duke.storage.utilities.FileSaver;","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"weidak"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"weidak"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"weidak"},"content":"/**","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"weidak"},"content":" * A Storage class that handles the saving and loading of the Profile.","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"weidak"},"content":" */","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"weidak"},"content":"public class ProfileStorage extends Storage implements ProfileStorageInterface {","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"weidak"},"content":"     * Constructs the profile storage handler with its respective path.","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"weidak"},"content":"     * @param path the directory to save the profile file","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"weidak"},"content":"    public ProfileStorage(String path) {","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"weidak"},"content":"        this.filePath \u003d path;","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"weidak"},"content":"        this.fileName \u003d getFileName(path);","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"weidak"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"weidak"},"content":"    public Profile loadProfile() throws UnableToReadFileException {","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"weidak"},"content":"        FileChecker.createFileIfMissing(filePath);","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"weidak"},"content":"        return readFromProfileFile();","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"weidak"},"content":"    private Profile readFromProfileFile() throws UnableToReadFileException {","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"weidak"},"content":"        try {","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"weidak"},"content":"            return ProfileDecoder.retrieveProfileFromData(filePath);","lastModifiedDate":"2021-10-25"},{"lineNumber":37,"author":{"gitId":"weidak"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"weidak"},"content":"            throw new UnableToReadFileException(fileName);","lastModifiedDate":"2021-10-24"},{"lineNumber":39,"author":{"gitId":"weidak"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":42,"author":{"gitId":"weidak"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":43,"author":{"gitId":"weidak"},"content":"    public void saveProfile(Profile profile) throws UnableToWriteFileException {","lastModifiedDate":"2021-10-20"},{"lineNumber":44,"author":{"gitId":"weidak"},"content":"        FileSaver.saveTo(filePath, ProfileEncoder.encode(profile));","lastModifiedDate":"2021-10-25"},{"lineNumber":45,"author":{"gitId":"weidak"},"content":"        logger.log(Level.FINE, \"Saved profile.\");","lastModifiedDate":"2021-10-27"},{"lineNumber":46,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":47,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":48,"author":{"gitId":"weidak"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"weidak":47,"tlyi":1}},{"path":"src/main/java/seedu/duke/storage/data/profile/ProfileStorageInterface.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weidak"},"content":"package seedu.duke.storage.data.profile;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"weidak"},"content":"import seedu.duke.data.profile.Profile;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"weidak"},"content":"import seedu.duke.storage.exceptions.UnableToReadFileException;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"weidak"},"content":"import seedu.duke.storage.exceptions.UnableToWriteFileException;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"weidak"},"content":"/**","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"weidak"},"content":" * Interface that ensures the storage device has a load and save profile method.","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"weidak"},"content":" */","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"weidak"},"content":"public interface ProfileStorageInterface {","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"weidak"},"content":"     * Loads the profile file from data storage.","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"weidak"},"content":"     * @return Profile object from data storage","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"weidak"},"content":"     * @throws UnableToReadFileException if the filepath given is inaccessible or I/O was interrupted","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"weidak"},"content":"    Profile loadProfile() throws UnableToReadFileException;","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"weidak"},"content":"     * Saves the profile details into storage.","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"weidak"},"content":"     * Used when there is an update to any profile attribute.","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"weidak"},"content":"     * @param profile Profile of the current user","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"weidak"},"content":"     * @throws UnableToWriteFileException if the filepath given is inaccessible or I/O was interrupted","lastModifiedDate":"2021-10-25"},{"lineNumber":25,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"weidak"},"content":"    void saveProfile(Profile profile) throws UnableToWriteFileException;","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"weidak"},"content":"}","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"weidak":27}},{"path":"src/main/java/seedu/duke/storage/exceptions/InvalidDataException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weidak"},"content":"package seedu.duke.storage.exceptions;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"weidak"},"content":"/**","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"weidak"},"content":" * Exception that is thrown when the data has been modified and become unreadable.","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"weidak"},"content":" */","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"weidak"},"content":"public class InvalidDataException extends Exception {","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"weidak"},"content":"    private static final String LS \u003d System.lineSeparator();","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"weidak"},"content":"    private static final String ERROR_MESSAGE \u003d \"There is a invalid line in %1$s.\" + LS","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"weidak"},"content":"            + \"\\\"%2$s\\\" will not be loaded into the bot.\";","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"weidak"},"content":"    public InvalidDataException(String file, String inputData) {","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"weidak"},"content":"        super(String.format(ERROR_MESSAGE, file, inputData));","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"weidak"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"weidak":15}},{"path":"src/main/java/seedu/duke/storage/exceptions/UnableToReadFileException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weidak"},"content":"package seedu.duke.storage.exceptions;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"weidak"},"content":"/**","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"weidak"},"content":" * An error that is thrown when the bot is unable to access the file or create the file.","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"weidak"},"content":" */","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"weidak"},"content":"public class UnableToReadFileException extends Exception {","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"weidak"},"content":"    private static final String ERROR_MESSAGE \u003d \" file is inaccessible due to an environment error.\"","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"weidak"},"content":"            + System.lineSeparator() + \"Please restart Fitbot and try again.\";","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"weidak"},"content":"    public UnableToReadFileException(String fileName) {","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"weidak"},"content":"        super(fileName + ERROR_MESSAGE);","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"weidak"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"weidak":13}},{"path":"src/main/java/seedu/duke/storage/exceptions/UnableToWriteFileException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weidak"},"content":"package seedu.duke.storage.exceptions;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"weidak"},"content":"/**","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"weidak"},"content":" * An error that indicates if there is an environment error with the file it is trying to write to.","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"weidak"},"content":" */","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"weidak"},"content":"public class UnableToWriteFileException extends Exception {","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"weidak"},"content":"    private static final String ERROR_MESSAGE \u003d \"Unable to write to file, something went wrong while saving\";","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"weidak"},"content":"    public UnableToWriteFileException() {","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"weidak"},"content":"        super(ERROR_MESSAGE);","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"weidak"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"weidak":12}},{"path":"src/main/java/seedu/duke/storage/utilities/FileChecker.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weidak"},"content":"package seedu.duke.storage.utilities;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"weidak"},"content":"import seedu.duke.storage.exceptions.UnableToReadFileException;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"weidak"},"content":"import java.io.File;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"weidak"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"weidak"},"content":"import java.nio.file.Files;","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"weidak"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"weidak"},"content":"/**","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"weidak"},"content":" * A File utility that checks and creates the directory and files if they are missing.","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"weidak"},"content":" */","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"weidak"},"content":"public class FileChecker {","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"weidak"},"content":"    private static final String FILEPATH \u003d \"./data/\";","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"weidak"},"content":"     * Creates the directory and file if it is unable to find the file.","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"weidak"},"content":"     * @param path The file path that it is checking","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"weidak"},"content":"     * @throws UnableToReadFileException If it is unable to find the path specified","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"weidak"},"content":"    public static void createFileIfMissing(String path) throws UnableToReadFileException {","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"weidak"},"content":"        final File fileToCheck \u003d new File(path);","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"weidak"},"content":"        try {","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"weidak"},"content":"            createDirectory();","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"weidak"},"content":"            checkFileExists(fileToCheck);","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"weidak"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"weidak"},"content":"            throw new UnableToReadFileException(getFileName(path));","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"weidak"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"weidak"},"content":"    private static void checkFileExists(File fileToCheck) throws IOException {","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"weidak"},"content":"        if (!fileToCheck.exists()) {","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"weidak"},"content":"            fileToCheck.createNewFile();","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"weidak"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":38,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":39,"author":{"gitId":"weidak"},"content":"    private static void createDirectory() throws IOException {","lastModifiedDate":"2021-10-24"},{"lineNumber":40,"author":{"gitId":"weidak"},"content":"        Files.createDirectories(Paths.get(FILEPATH));","lastModifiedDate":"2021-10-24"},{"lineNumber":41,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":42,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":43,"author":{"gitId":"weidak"},"content":"    private static String getFileName(String path) {","lastModifiedDate":"2021-10-24"},{"lineNumber":44,"author":{"gitId":"weidak"},"content":"        return path.split(\"/\")[2];","lastModifiedDate":"2021-10-24"},{"lineNumber":45,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":46,"author":{"gitId":"weidak"},"content":"}","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"weidak":46}},{"path":"src/main/java/seedu/duke/storage/utilities/FileSaver.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weidak"},"content":"package seedu.duke.storage.utilities;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"weidak"},"content":"import seedu.duke.storage.exceptions.UnableToWriteFileException;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"weidak"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"weidak"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"weidak"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"weidak"},"content":"/**","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"weidak"},"content":" * A File utility that saves the data into their corresponding file paths.","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"weidak"},"content":" */","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"weidak"},"content":"public class FileSaver {","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"weidak"},"content":"     * Saves an ArrayList of strings to a given filepath.","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"weidak"},"content":"     * @param path filepath of the ArrayList to be stored","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"weidak"},"content":"     * @throws UnableToWriteFileException If the saving is interrupted by an environment variable","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"weidak"},"content":"    public static void saveTo(String path, ArrayList\u003cString\u003e toSave) throws UnableToWriteFileException {","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"weidak"},"content":"        try {","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"weidak"},"content":"            FileWriter fw \u003d new FileWriter(path);","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"weidak"},"content":"            writeTo(fw, toSave);","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"weidak"},"content":"            closeFile(fw);","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"weidak"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"weidak"},"content":"            throw new UnableToWriteFileException();","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"weidak"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"weidak"},"content":"    private static void writeTo(FileWriter fw, ArrayList\u003cString\u003e toSave) throws IOException {","lastModifiedDate":"2021-10-25"},{"lineNumber":31,"author":{"gitId":"weidak"},"content":"        for (String item : toSave) {","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"weidak"},"content":"            fw.write(item + System.lineSeparator());","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"weidak"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"weidak"},"content":"    private static void closeFile(FileWriter fw) throws IOException {","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"weidak"},"content":"        fw.close();","lastModifiedDate":"2021-10-24"},{"lineNumber":38,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":39,"author":{"gitId":"weidak"},"content":"}","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"weidak":39}},{"path":"src/main/java/seedu/duke/ui/Statistics.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tttyyzzz"},"content":"package seedu.duke.ui;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"tlyi"},"content":"import seedu.duke.data.item.exercise.ExerciseList;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"tlyi"},"content":"import seedu.duke.data.item.food.FoodList;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"tlyi"},"content":"import seedu.duke.data.profile.Profile;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"tttyyzzz"},"content":"import seedu.duke.data.profile.exceptions.InvalidCharacteristicException;","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"tlyi"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"tttyyzzz"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"tlyi"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"tttyyzzz"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"tttyyzzz"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"tttyyzzz"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"tttyyzzz"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"tlyi"},"content":"/* A class that manage the statistics of the calories*/","lastModifiedDate":"2021-10-14"},{"lineNumber":17,"author":{"gitId":"tttyyzzz"},"content":"public class Statistics {","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"tttyyzzz"},"content":"    public static final String FULL_BLOCK \u003d \"█\";","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"tttyyzzz"},"content":"    public static final String MESSAGE_CALORIE_GAIN \u003d \"Your calorie gained from food is: %d\";","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"tttyyzzz"},"content":"    public static final String MESSAGE_CALORIE_LOST \u003d \"Your calorie lost from exercise is: %d\";","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"tttyyzzz"},"content":"    public static final String MESSAGE_CALORIE_NET \u003d \"Your net calorie intake is: %d\";","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"tryyang2001"},"content":"    public static final String MESSAGE_CALORIE_GOAL \u003d \"Your calorie goal is: %d\";","lastModifiedDate":"2021-10-14"},{"lineNumber":23,"author":{"gitId":"tryyang2001"},"content":"    public static final String MESSAGE_CALORIE_EXACT \u003d \"You have reached your calorie goal exactly. Good job!\";","lastModifiedDate":"2021-10-14"},{"lineNumber":24,"author":{"gitId":"tryyang2001"},"content":"    public static final String MESSAGE_CALORIE_LESS_THAN \u003d \"You are %s cal away from your goal\";","lastModifiedDate":"2021-10-14"},{"lineNumber":25,"author":{"gitId":"tryyang2001"},"content":"    public static final String MESSAGE_CALORIE_MORE_THAN \u003d \"You have exceeded your calorie goal by %s cal \";","lastModifiedDate":"2021-10-14"},{"lineNumber":26,"author":{"gitId":"tttyyzzz"},"content":"    public static final String OVERVIEW_HEADER \u003d \"-*WEEKLY OVERVIEW*-\\n\"","lastModifiedDate":"2021-10-26"},{"lineNumber":27,"author":{"gitId":"tttyyzzz"},"content":"            + \"Hi %s, this is your calorie summary for the week.\\n\";","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"tttyyzzz"},"content":"    public static final String FOOD_HEADER \u003d \"Food:\\n\"","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"tttyyzzz"},"content":"            + \"You have consumed %1$s cal this week from %2$s to %3$s.\";","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"tttyyzzz"},"content":"    public static final String FOOD_GRAPH_HEADER \u003d \"Calorie gained from food (Daily)\\n%s\";","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"tttyyzzz"},"content":"    public static final String EXERCISE_HEADER \u003d \"You have lost %s cal from exercising for the last 7 days.\";","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"tttyyzzz"},"content":"    public static final String EXERCISE_GRAPH_HEADER \u003d \"Calorie burnt from exercise (Daily)\\n%s\";","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"tttyyzzz"},"content":"    public static final String MESSAGE_CAUTION \u003d \"\\n ** The net calorie calculation includes calories gained from food,\"","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"tttyyzzz"},"content":"            + \" calories burnt from exercises\\n  \"","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"tttyyzzz"},"content":"            + \"and daily normal activities. All calculations used the \"","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"tttyyzzz"},"content":"            + \"latest values from updated in profile.\";","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"tttyyzzz"},"content":"    public static final String GRAPH_BUILDER \u003d \"%1$s   %2$s    %3$s\";","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"tttyyzzz"},"content":"    public static final int MAX_DATE_OFFSET \u003d 6;","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"tttyyzzz"},"content":"    public static final String MESSAGE_NET_CALORIES_INTRO \u003d \"Daily net calories**:\\n\";","lastModifiedDate":"2021-10-26"},{"lineNumber":40,"author":{"gitId":"tttyyzzz"},"content":"    public static final String MESSAGE_SUPPER_COUNT_INTRO \u003d \"Number of supper meals this week: %s\";","lastModifiedDate":"2021-10-26"},{"lineNumber":41,"author":{"gitId":"tttyyzzz"},"content":"    public static final int MAX_BAR_LENGTH \u003d 30;","lastModifiedDate":"2021-10-26"},{"lineNumber":42,"author":{"gitId":"tttyyzzz"},"content":"    public static final int EMPTY_CALORIES \u003d 0;","lastModifiedDate":"2021-10-26"},{"lineNumber":43,"author":{"gitId":"tttyyzzz"},"content":"    public static final String MESSAGE_DAILY_OVERVIEW \u003d \"This is your calorie overview for today:\\n\";","lastModifiedDate":"2021-10-26"},{"lineNumber":44,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":45,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":46,"author":{"gitId":"tttyyzzz"},"content":"    private FoodList foodItems;","lastModifiedDate":"2021-10-21"},{"lineNumber":47,"author":{"gitId":"tttyyzzz"},"content":"    private ExerciseList exerciseItems;","lastModifiedDate":"2021-10-21"},{"lineNumber":48,"author":{"gitId":"tttyyzzz"},"content":"    private Profile profile;","lastModifiedDate":"2021-10-21"},{"lineNumber":49,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":50,"author":{"gitId":"tttyyzzz"},"content":"    public Statistics(FoodList foodItems, ExerciseList exerciseItems, Profile profile) {","lastModifiedDate":"2021-10-21"},{"lineNumber":51,"author":{"gitId":"tttyyzzz"},"content":"        this.foodItems \u003d foodItems;","lastModifiedDate":"2021-10-21"},{"lineNumber":52,"author":{"gitId":"tttyyzzz"},"content":"        this.exerciseItems \u003d exerciseItems;","lastModifiedDate":"2021-10-21"},{"lineNumber":53,"author":{"gitId":"tttyyzzz"},"content":"        this.profile \u003d profile;","lastModifiedDate":"2021-10-21"},{"lineNumber":54,"author":{"gitId":"tttyyzzz"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":55,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":56,"author":{"gitId":"tttyyzzz"},"content":"    private static Logger logger \u003d Logger.getLogger(Statistics.class.getName());","lastModifiedDate":"2021-10-13"},{"lineNumber":57,"author":{"gitId":"tttyyzzz"},"content":"    private LocalDate date;","lastModifiedDate":"2021-10-26"},{"lineNumber":58,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":59,"author":{"gitId":"tttyyzzz"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":60,"author":{"gitId":"tttyyzzz"},"content":"     * Calculate netCalories and format exerciseCalories, foodCalories, calorieGoal","lastModifiedDate":"2021-10-13"},{"lineNumber":61,"author":{"gitId":"tttyyzzz"},"content":"     * into strings.","lastModifiedDate":"2021-10-13"},{"lineNumber":62,"author":{"gitId":"tttyyzzz"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":63,"author":{"gitId":"tttyyzzz"},"content":"     * @param exerciseCalories is the total calories lost by exercising","lastModifiedDate":"2021-10-13"},{"lineNumber":64,"author":{"gitId":"tttyyzzz"},"content":"     * @param foodCalories     is the total calories gained by consuming food","lastModifiedDate":"2021-10-13"},{"lineNumber":65,"author":{"gitId":"tttyyzzz"},"content":"     * @param calorieGoal      is the goal set by the user","lastModifiedDate":"2021-10-13"},{"lineNumber":66,"author":{"gitId":"tttyyzzz"},"content":"     * @return formatted strings.","lastModifiedDate":"2021-10-13"},{"lineNumber":67,"author":{"gitId":"tttyyzzz"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":68,"author":{"gitId":"tttyyzzz"},"content":"    public String[] getCaloriesReport(int exerciseCalories, int foodCalories, int calorieGoal) {","lastModifiedDate":"2021-10-13"},{"lineNumber":69,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":70,"author":{"gitId":"tttyyzzz"},"content":"        //TODO:move this 4 lines to getToday overview","lastModifiedDate":"2021-10-26"},{"lineNumber":71,"author":{"gitId":"tttyyzzz"},"content":"        int netCalories \u003d calculateNetCalories(foodCalories, exerciseCalories);","lastModifiedDate":"2021-10-26"},{"lineNumber":72,"author":{"gitId":"tttyyzzz"},"content":"        return new String[]{String.format(MESSAGE_CALORIE_GAIN, foodCalories),","lastModifiedDate":"2021-10-13"},{"lineNumber":73,"author":{"gitId":"tttyyzzz"},"content":"                String.format(MESSAGE_CALORIE_LOST, exerciseCalories),","lastModifiedDate":"2021-10-13"},{"lineNumber":74,"author":{"gitId":"tttyyzzz"},"content":"                String.format(MESSAGE_CALORIE_NET, netCalories),","lastModifiedDate":"2021-10-13"},{"lineNumber":75,"author":{"gitId":"tryyang2001"},"content":"                String.format(MESSAGE_CALORIE_GOAL, calorieGoal),","lastModifiedDate":"2021-10-14"},{"lineNumber":76,"author":{"gitId":"tttyyzzz"},"content":"                printCaloriesMessage(netCalories, calorieGoal)};","lastModifiedDate":"2021-10-13"},{"lineNumber":77,"author":{"gitId":"tttyyzzz"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":78,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":79,"author":{"gitId":"tttyyzzz"},"content":"    private int calculateNetCalories(int foodCalories, int exerciseCalories) {","lastModifiedDate":"2021-10-26"},{"lineNumber":80,"author":{"gitId":"tttyyzzz"},"content":"        try {","lastModifiedDate":"2021-10-26"},{"lineNumber":81,"author":{"gitId":"tttyyzzz"},"content":"            return this.profile.calculateNetCalories(foodCalories, exerciseCalories);","lastModifiedDate":"2021-10-26"},{"lineNumber":82,"author":{"gitId":"tttyyzzz"},"content":"        } catch (InvalidCharacteristicException e) {","lastModifiedDate":"2021-10-26"},{"lineNumber":83,"author":{"gitId":"tttyyzzz"},"content":"            return 0;","lastModifiedDate":"2021-10-26"},{"lineNumber":84,"author":{"gitId":"tttyyzzz"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":85,"author":{"gitId":"tttyyzzz"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":86,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":87,"author":{"gitId":"tttyyzzz"},"content":"    public String getCurrentDayOverview() {","lastModifiedDate":"2021-10-26"},{"lineNumber":88,"author":{"gitId":"tttyyzzz"},"content":"        int foodCalories \u003d foodItems.getTotalCaloriesWithDate(date);","lastModifiedDate":"2021-10-26"},{"lineNumber":89,"author":{"gitId":"tttyyzzz"},"content":"        int exerciseCalories \u003d exerciseItems.getTotalCaloriesWithDate(date);","lastModifiedDate":"2021-10-26"},{"lineNumber":90,"author":{"gitId":"tttyyzzz"},"content":"        int calorieGoal \u003d profile.getProfileCalorieGoal().getCalorieGoal();","lastModifiedDate":"2021-10-26"},{"lineNumber":91,"author":{"gitId":"tttyyzzz"},"content":"        logger.log(Level.FINE, String.valueOf(calorieGoal));","lastModifiedDate":"2021-10-26"},{"lineNumber":92,"author":{"gitId":"tttyyzzz"},"content":"        String[] messages \u003d getCaloriesReport(exerciseCalories, foodCalories, calorieGoal);","lastModifiedDate":"2021-10-27"},{"lineNumber":93,"author":{"gitId":"tttyyzzz"},"content":"        StringBuilder currentDayOverview \u003d new StringBuilder(MESSAGE_DAILY_OVERVIEW);","lastModifiedDate":"2021-10-26"},{"lineNumber":94,"author":{"gitId":"tttyyzzz"},"content":"        for (String message : messages) {","lastModifiedDate":"2021-10-26"},{"lineNumber":95,"author":{"gitId":"tttyyzzz"},"content":"            currentDayOverview.append(message).append(Ui.LS);","lastModifiedDate":"2021-10-26"},{"lineNumber":96,"author":{"gitId":"tttyyzzz"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":97,"author":{"gitId":"tttyyzzz"},"content":"        return currentDayOverview.toString().trim();","lastModifiedDate":"2021-10-26"},{"lineNumber":98,"author":{"gitId":"tttyyzzz"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":99,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":100,"author":{"gitId":"tttyyzzz"},"content":"    public String printCaloriesMessage(int netCalories, int calorieGoal) {","lastModifiedDate":"2021-10-13"},{"lineNumber":101,"author":{"gitId":"tttyyzzz"},"content":"        logger.log(Level.FINE, \"preparing calories message\");","lastModifiedDate":"2021-10-13"},{"lineNumber":102,"author":{"gitId":"tttyyzzz"},"content":"        int calorieDifference \u003d calorieGoal - netCalories;","lastModifiedDate":"2021-10-13"},{"lineNumber":103,"author":{"gitId":"tttyyzzz"},"content":"        String message;","lastModifiedDate":"2021-10-13"},{"lineNumber":104,"author":{"gitId":"tttyyzzz"},"content":"        if (calorieGoal \u003e netCalories) {","lastModifiedDate":"2021-10-13"},{"lineNumber":105,"author":{"gitId":"tryyang2001"},"content":"            message \u003d String.format(MESSAGE_CALORIE_LESS_THAN, calorieDifference);","lastModifiedDate":"2021-10-14"},{"lineNumber":106,"author":{"gitId":"tttyyzzz"},"content":"        } else if (calorieGoal \u003c netCalories) {","lastModifiedDate":"2021-10-13"},{"lineNumber":107,"author":{"gitId":"tryyang2001"},"content":"            message \u003d String.format(MESSAGE_CALORIE_MORE_THAN, -calorieDifference);","lastModifiedDate":"2021-10-14"},{"lineNumber":108,"author":{"gitId":"tttyyzzz"},"content":"        } else {","lastModifiedDate":"2021-10-13"},{"lineNumber":109,"author":{"gitId":"tttyyzzz"},"content":"            assert calorieDifference \u003d\u003d 0 : \"calorieDifference should be 0\";","lastModifiedDate":"2021-10-13"},{"lineNumber":110,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":111,"author":{"gitId":"tryyang2001"},"content":"            message \u003d String.format(MESSAGE_CALORIE_EXACT);","lastModifiedDate":"2021-10-14"},{"lineNumber":112,"author":{"gitId":"tttyyzzz"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":113,"author":{"gitId":"tttyyzzz"},"content":"        return message;","lastModifiedDate":"2021-10-13"},{"lineNumber":114,"author":{"gitId":"tttyyzzz"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":115,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":116,"author":{"gitId":"tttyyzzz"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":117,"author":{"gitId":"tttyyzzz"},"content":"     * Set the date to current date.","lastModifiedDate":"2021-10-21"},{"lineNumber":118,"author":{"gitId":"tttyyzzz"},"content":"     * Date to be updated upon calling the overview command.","lastModifiedDate":"2021-10-21"},{"lineNumber":119,"author":{"gitId":"tttyyzzz"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":120,"author":{"gitId":"tttyyzzz"},"content":"    private void setLocalDate() {","lastModifiedDate":"2021-10-21"},{"lineNumber":121,"author":{"gitId":"tttyyzzz"},"content":"        date \u003d LocalDateTime.now().toLocalDate();","lastModifiedDate":"2021-10-21"},{"lineNumber":122,"author":{"gitId":"tttyyzzz"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":123,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":124,"author":{"gitId":"tttyyzzz"},"content":"    private LocalDate dateOffset(int offset) {","lastModifiedDate":"2021-10-21"},{"lineNumber":125,"author":{"gitId":"tttyyzzz"},"content":"        return date.minusDays(offset);","lastModifiedDate":"2021-10-21"},{"lineNumber":126,"author":{"gitId":"tttyyzzz"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":127,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":128,"author":{"gitId":"tttyyzzz"},"content":"    private ArrayList\u003cInteger\u003e getDailyFoodCalories() {","lastModifiedDate":"2021-10-21"},{"lineNumber":129,"author":{"gitId":"tttyyzzz"},"content":"        ArrayList\u003cInteger\u003e dailyFoodCalories \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-21"},{"lineNumber":130,"author":{"gitId":"tttyyzzz"},"content":"        dailyFoodCalories.add(foodItems.getTotalCaloriesWithDate(date.minusDays(6)));","lastModifiedDate":"2021-10-21"},{"lineNumber":131,"author":{"gitId":"tttyyzzz"},"content":"        dailyFoodCalories.add(foodItems.getTotalCaloriesWithDate(date.minusDays(5)));","lastModifiedDate":"2021-10-21"},{"lineNumber":132,"author":{"gitId":"tttyyzzz"},"content":"        dailyFoodCalories.add(foodItems.getTotalCaloriesWithDate(date.minusDays(4)));","lastModifiedDate":"2021-10-21"},{"lineNumber":133,"author":{"gitId":"tttyyzzz"},"content":"        dailyFoodCalories.add(foodItems.getTotalCaloriesWithDate(date.minusDays(3)));","lastModifiedDate":"2021-10-21"},{"lineNumber":134,"author":{"gitId":"tttyyzzz"},"content":"        dailyFoodCalories.add(foodItems.getTotalCaloriesWithDate(date.minusDays(2)));","lastModifiedDate":"2021-10-21"},{"lineNumber":135,"author":{"gitId":"tttyyzzz"},"content":"        dailyFoodCalories.add(foodItems.getTotalCaloriesWithDate(date.minusDays(1)));// need to convert to stats chart","lastModifiedDate":"2021-10-21"},{"lineNumber":136,"author":{"gitId":"tttyyzzz"},"content":"        dailyFoodCalories.add(foodItems.getTotalCaloriesWithDate(date));","lastModifiedDate":"2021-10-21"},{"lineNumber":137,"author":{"gitId":"tttyyzzz"},"content":"        return dailyFoodCalories;","lastModifiedDate":"2021-10-21"},{"lineNumber":138,"author":{"gitId":"tttyyzzz"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":139,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":140,"author":{"gitId":"tttyyzzz"},"content":"    private String getGraph(ArrayList\u003cInteger\u003e dailyCalories) {","lastModifiedDate":"2021-10-21"},{"lineNumber":141,"author":{"gitId":"tttyyzzz"},"content":"        int maxCalories \u003d Collections.max(dailyCalories);","lastModifiedDate":"2021-10-21"},{"lineNumber":142,"author":{"gitId":"tttyyzzz"},"content":"        StringBuilder graph \u003d new StringBuilder();","lastModifiedDate":"2021-10-21"},{"lineNumber":143,"author":{"gitId":"tttyyzzz"},"content":"        int dateOffset \u003d MAX_DATE_OFFSET;","lastModifiedDate":"2021-10-21"},{"lineNumber":144,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":145,"author":{"gitId":"tttyyzzz"},"content":"        for (int calories : dailyCalories) {","lastModifiedDate":"2021-10-21"},{"lineNumber":146,"author":{"gitId":"tttyyzzz"},"content":"            String progressBar \u003d \"\";","lastModifiedDate":"2021-10-21"},{"lineNumber":147,"author":{"gitId":"tttyyzzz"},"content":"            int numberOfBars;","lastModifiedDate":"2021-10-26"},{"lineNumber":148,"author":{"gitId":"tttyyzzz"},"content":"            numberOfBars \u003d (int) Math.round(((double) calories / maxCalories) * MAX_BAR_LENGTH);","lastModifiedDate":"2021-10-26"},{"lineNumber":149,"author":{"gitId":"tttyyzzz"},"content":"            assert numberOfBars \u003c\u003d MAX_BAR_LENGTH : \"30 is the max progress bar limit\";","lastModifiedDate":"2021-10-26"},{"lineNumber":150,"author":{"gitId":"tttyyzzz"},"content":"            for (int i \u003d 0; i \u003c numberOfBars; i++) {","lastModifiedDate":"2021-10-21"},{"lineNumber":151,"author":{"gitId":"tttyyzzz"},"content":"                progressBar \u003d progressBar + FULL_BLOCK;","lastModifiedDate":"2021-10-21"},{"lineNumber":152,"author":{"gitId":"tttyyzzz"},"content":"            }","lastModifiedDate":"2021-10-21"},{"lineNumber":153,"author":{"gitId":"tttyyzzz"},"content":"            String formattedDate \u003d getFormatDate(dateOffset);","lastModifiedDate":"2021-10-21"},{"lineNumber":154,"author":{"gitId":"tttyyzzz"},"content":"            graph.append(String.format(GRAPH_BUILDER, formattedDate, progressBar, calories)).append(Ui.LS);","lastModifiedDate":"2021-10-21"},{"lineNumber":155,"author":{"gitId":"tttyyzzz"},"content":"            dateOffset--;","lastModifiedDate":"2021-10-21"},{"lineNumber":156,"author":{"gitId":"tttyyzzz"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":157,"author":{"gitId":"tttyyzzz"},"content":"        return graph.toString();","lastModifiedDate":"2021-10-26"},{"lineNumber":158,"author":{"gitId":"tttyyzzz"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":159,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":160,"author":{"gitId":"tttyyzzz"},"content":"    private String getFormatDate(int dateOffset) {","lastModifiedDate":"2021-10-21"},{"lineNumber":161,"author":{"gitId":"tttyyzzz"},"content":"        String formattedDate \u003d dateOffset(dateOffset).format(DateTimeFormatter.ofPattern(\"dd-MMM\"));","lastModifiedDate":"2021-10-21"},{"lineNumber":162,"author":{"gitId":"tttyyzzz"},"content":"        return formattedDate;","lastModifiedDate":"2021-10-21"},{"lineNumber":163,"author":{"gitId":"tttyyzzz"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":164,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":165,"author":{"gitId":"tttyyzzz"},"content":"    private ArrayList\u003cInteger\u003e getDailyExerciseCalories() {","lastModifiedDate":"2021-10-21"},{"lineNumber":166,"author":{"gitId":"tttyyzzz"},"content":"        ArrayList\u003cInteger\u003e dailyExerciseCalories \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-21"},{"lineNumber":167,"author":{"gitId":"tttyyzzz"},"content":"        dailyExerciseCalories.add(exerciseItems.getTotalCaloriesWithDate(date.minusDays(6)));","lastModifiedDate":"2021-10-21"},{"lineNumber":168,"author":{"gitId":"tttyyzzz"},"content":"        dailyExerciseCalories.add(exerciseItems.getTotalCaloriesWithDate(date.minusDays(5)));","lastModifiedDate":"2021-10-21"},{"lineNumber":169,"author":{"gitId":"tttyyzzz"},"content":"        dailyExerciseCalories.add(exerciseItems.getTotalCaloriesWithDate(date.minusDays(4)));","lastModifiedDate":"2021-10-21"},{"lineNumber":170,"author":{"gitId":"tttyyzzz"},"content":"        dailyExerciseCalories.add(exerciseItems.getTotalCaloriesWithDate(date.minusDays(3)));","lastModifiedDate":"2021-10-21"},{"lineNumber":171,"author":{"gitId":"tttyyzzz"},"content":"        dailyExerciseCalories.add(exerciseItems.getTotalCaloriesWithDate(date.minusDays(2)));","lastModifiedDate":"2021-10-21"},{"lineNumber":172,"author":{"gitId":"tttyyzzz"},"content":"        dailyExerciseCalories.add(exerciseItems.getTotalCaloriesWithDate(date.minusDays(1)));","lastModifiedDate":"2021-10-21"},{"lineNumber":173,"author":{"gitId":"tttyyzzz"},"content":"        dailyExerciseCalories.add(exerciseItems.getTotalCaloriesWithDate(date));","lastModifiedDate":"2021-10-21"},{"lineNumber":174,"author":{"gitId":"tttyyzzz"},"content":"        return dailyExerciseCalories;","lastModifiedDate":"2021-10-21"},{"lineNumber":175,"author":{"gitId":"tttyyzzz"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":176,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":177,"author":{"gitId":"tttyyzzz"},"content":"    private int getTotalWeeklyCalories(ArrayList\u003cInteger\u003e getCalories) {","lastModifiedDate":"2021-10-21"},{"lineNumber":178,"author":{"gitId":"tttyyzzz"},"content":"        return getCalories.stream().mapToInt(i -\u003e i).sum();","lastModifiedDate":"2021-10-21"},{"lineNumber":179,"author":{"gitId":"tttyyzzz"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":180,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":181,"author":{"gitId":"tttyyzzz"},"content":"    private String getSupperCountMessage() {","lastModifiedDate":"2021-10-26"},{"lineNumber":182,"author":{"gitId":"tttyyzzz"},"content":"        int supperCount \u003d foodItems.getSupperCount();","lastModifiedDate":"2021-10-26"},{"lineNumber":183,"author":{"gitId":"tttyyzzz"},"content":"        return String.format(MESSAGE_SUPPER_COUNT_INTRO, supperCount);","lastModifiedDate":"2021-10-26"},{"lineNumber":184,"author":{"gitId":"tttyyzzz"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":185,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":186,"author":{"gitId":"tttyyzzz"},"content":"    private String getNetCaloriesMessage() {","lastModifiedDate":"2021-10-26"},{"lineNumber":187,"author":{"gitId":"tttyyzzz"},"content":"        ArrayList\u003cInteger\u003e dailyExerciseCalories \u003d getDailyExerciseCalories();","lastModifiedDate":"2021-10-26"},{"lineNumber":188,"author":{"gitId":"tttyyzzz"},"content":"        ArrayList\u003cInteger\u003e dailyFoodCalories \u003d getDailyFoodCalories();","lastModifiedDate":"2021-10-26"},{"lineNumber":189,"author":{"gitId":"tttyyzzz"},"content":"        StringBuilder netCaloriesMessage \u003d new StringBuilder(MESSAGE_NET_CALORIES_INTRO);","lastModifiedDate":"2021-10-26"},{"lineNumber":190,"author":{"gitId":"tttyyzzz"},"content":"        for (int i \u003d 0; i \u003c\u003d MAX_DATE_OFFSET; i++) {","lastModifiedDate":"2021-10-26"},{"lineNumber":191,"author":{"gitId":"tttyyzzz"},"content":"            int exerciseCalories \u003d dailyExerciseCalories.get(i) \u003d\u003d null ? 0 : dailyExerciseCalories.get(i);","lastModifiedDate":"2021-10-26"},{"lineNumber":192,"author":{"gitId":"tttyyzzz"},"content":"            int foodCalories \u003d dailyFoodCalories.get(i) \u003d\u003d null ? 0 : dailyFoodCalories.get(i);","lastModifiedDate":"2021-10-26"},{"lineNumber":193,"author":{"gitId":"tttyyzzz"},"content":"            int netCalories \u003d getNetCalories(foodCalories, exerciseCalories);","lastModifiedDate":"2021-10-26"},{"lineNumber":194,"author":{"gitId":"tttyyzzz"},"content":"            String formattedDate \u003d getFormatDate(MAX_DATE_OFFSET - i);","lastModifiedDate":"2021-10-26"},{"lineNumber":195,"author":{"gitId":"tttyyzzz"},"content":"            netCaloriesMessage.append(formattedDate + \" :   \" + netCalories).append(Ui.LS);","lastModifiedDate":"2021-10-26"},{"lineNumber":196,"author":{"gitId":"tttyyzzz"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":197,"author":{"gitId":"tttyyzzz"},"content":"        return netCaloriesMessage.toString();","lastModifiedDate":"2021-10-26"},{"lineNumber":198,"author":{"gitId":"tttyyzzz"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":199,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":200,"author":{"gitId":"tttyyzzz"},"content":"    private int getNetCalories(int foodCalories, int exerciseCalories) {","lastModifiedDate":"2021-10-26"},{"lineNumber":201,"author":{"gitId":"tttyyzzz"},"content":"        try {","lastModifiedDate":"2021-10-26"},{"lineNumber":202,"author":{"gitId":"tttyyzzz"},"content":"            return profile.calculateNetCalories(foodCalories, exerciseCalories);","lastModifiedDate":"2021-10-26"},{"lineNumber":203,"author":{"gitId":"tttyyzzz"},"content":"        } catch (InvalidCharacteristicException e) {","lastModifiedDate":"2021-10-26"},{"lineNumber":204,"author":{"gitId":"tttyyzzz"},"content":"            return EMPTY_CALORIES;","lastModifiedDate":"2021-10-26"},{"lineNumber":205,"author":{"gitId":"tttyyzzz"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":206,"author":{"gitId":"tttyyzzz"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":207,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":208,"author":{"gitId":"tttyyzzz"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":209,"author":{"gitId":"tttyyzzz"},"content":"     * An overview on user calorie intake and calorie burnt.","lastModifiedDate":"2021-10-21"},{"lineNumber":210,"author":{"gitId":"tttyyzzz"},"content":"     *","lastModifiedDate":"2021-10-21"},{"lineNumber":211,"author":{"gitId":"tttyyzzz"},"content":"     * @return String that contains summary of calories for the week.","lastModifiedDate":"2021-10-21"},{"lineNumber":212,"author":{"gitId":"tttyyzzz"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":213,"author":{"gitId":"tttyyzzz"},"content":"    public String overviewSummary() {","lastModifiedDate":"2021-10-21"},{"lineNumber":214,"author":{"gitId":"tttyyzzz"},"content":"        setLocalDate(); // need ensure that the date is on the time of query","lastModifiedDate":"2021-10-21"},{"lineNumber":215,"author":{"gitId":"tttyyzzz"},"content":"        StringBuilder overviewSummary \u003d new StringBuilder();","lastModifiedDate":"2021-10-21"},{"lineNumber":216,"author":{"gitId":"tttyyzzz"},"content":"        overviewSummary.append(String.format(OVERVIEW_HEADER, profile.getProfileName().getName())).append(Ui.LS)","lastModifiedDate":"2021-10-21"},{"lineNumber":217,"author":{"gitId":"tttyyzzz"},"content":"                .append(String.format(FOOD_HEADER, getTotalWeeklyCalories(getDailyFoodCalories()),","lastModifiedDate":"2021-10-21"},{"lineNumber":218,"author":{"gitId":"tttyyzzz"},"content":"                        getFormatDate(6), getFormatDate(0))).append(Ui.LS)","lastModifiedDate":"2021-10-21"},{"lineNumber":219,"author":{"gitId":"tttyyzzz"},"content":"                .append(String.format(FOOD_GRAPH_HEADER, getGraph(getDailyFoodCalories())))","lastModifiedDate":"2021-10-21"},{"lineNumber":220,"author":{"gitId":"tttyyzzz"},"content":"                .append(String.format(EXERCISE_HEADER, getTotalWeeklyCalories(getDailyExerciseCalories())))","lastModifiedDate":"2021-10-21"},{"lineNumber":221,"author":{"gitId":"tttyyzzz"},"content":"                .append(Ui.LS)","lastModifiedDate":"2021-10-21"},{"lineNumber":222,"author":{"gitId":"tttyyzzz"},"content":"                .append(String.format(EXERCISE_GRAPH_HEADER, getGraph(getDailyExerciseCalories())))","lastModifiedDate":"2021-10-21"},{"lineNumber":223,"author":{"gitId":"tttyyzzz"},"content":"                .append(getNetCaloriesMessage()).append(Ui.LS).append(Ui.LS)","lastModifiedDate":"2021-10-26"},{"lineNumber":224,"author":{"gitId":"tttyyzzz"},"content":"                .append(getSupperCountMessage()).append(Ui.LS)","lastModifiedDate":"2021-10-26"},{"lineNumber":225,"author":{"gitId":"tttyyzzz"},"content":"                .append(MESSAGE_CAUTION).append(Ui.LS)","lastModifiedDate":"2021-10-26"},{"lineNumber":226,"author":{"gitId":"tttyyzzz"},"content":"                .append(Ui.DIVIDER).append(Ui.LS)","lastModifiedDate":"2021-10-26"},{"lineNumber":227,"author":{"gitId":"tttyyzzz"},"content":"                .append(getCurrentDayOverview());","lastModifiedDate":"2021-10-26"},{"lineNumber":228,"author":{"gitId":"tttyyzzz"},"content":"        return overviewSummary.toString().trim();","lastModifiedDate":"2021-10-26"},{"lineNumber":229,"author":{"gitId":"tttyyzzz"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":230,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":231,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":232,"author":{"gitId":"tttyyzzz"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"tttyyzzz":218,"tryyang2001":8,"tlyi":6}},{"path":"src/main/java/seedu/duke/ui/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.ui;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"tlyi"},"content":"import seedu.duke.logic.commands.HelpCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":5,"author":{"gitId":"tlyi"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"tttyyzzz"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"tlyi"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"tttyyzzz"},"content":"/**","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"tttyyzzz"},"content":" * This class deals with interaction with user on CLI.","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"tttyyzzz"},"content":" * Also helps to change color of output if required.","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"tttyyzzz"},"content":" */","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"tttyyzzz"},"content":"public class Ui {","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"tlyi"},"content":"    public static final String TAB \u003d \"\\t\";","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"tlyi"},"content":"    public static final String DIVIDER \u003d \"___________________________________________\"","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"tlyi"},"content":"            + \"_______________________________________________________________\";","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"tttyyzzz"},"content":"    public static final String LS \u003d System.lineSeparator();","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"tlyi"},"content":"    public static final String INDENTED_LS \u003d LS + TAB;","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"tttyyzzz"},"content":"    public static final String EMOJI_1 \u003d \" ᕦ(ò_óˇ)\";","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"tttyyzzz"},"content":"    public static final String FITBOT_V0 \u003d \"  ______ _ _   _           _\"","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"tttyyzzz"},"content":"            + LS","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"tttyyzzz"},"content":"            + \" |  ____(_) | | |         | |\"","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"tttyyzzz"},"content":"            + LS","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"tttyyzzz"},"content":"            + \" | |__   _| |_| |__   ___ | |_\"","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"tttyyzzz"},"content":"            + LS","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"tttyyzzz"},"content":"            + \" |  __| | | __| \u0027_ \\\\ / _ \\\\| __|\"","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"tttyyzzz"},"content":"            + LS","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"tttyyzzz"},"content":"            + \" | |    | | |_| |_) | (_) | |_\"","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"tttyyzzz"},"content":"            + LS","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"tttyyzzz"},"content":"            + \" |_|    |_|\\\\__|_.__/ \\\\___/ \\\\__|\";","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"tlyi"},"content":"    public static final String QUOTATION \u003d \"\\\"\";","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"tttyyzzz"},"content":"    public static final String MESSAGE_WELCOME \u003d \"Welcome to Fitbot!\"","lastModifiedDate":"2021-10-25"},{"lineNumber":34,"author":{"gitId":"tttyyzzz"},"content":"            + \" Fitbot is here to help you to keep track of your calories.\";","lastModifiedDate":"2021-10-25"},{"lineNumber":35,"author":{"gitId":"tttyyzzz"},"content":"    public static final String MESSAGE_DIRECT_HELP \u003d \"You can start by typing a command or view the list of \"","lastModifiedDate":"2021-10-25"},{"lineNumber":36,"author":{"gitId":"tlyi"},"content":"            + \"available commands by typing \" + HelpCommand.MESSAGE_COMMAND_FORMAT + \".\";","lastModifiedDate":"2021-10-14"},{"lineNumber":37,"author":{"gitId":"tttyyzzz"},"content":"    public static final String MESSAGE_FIX_PROFILE \u003d \"Fitbot realised that some of your profile \"","lastModifiedDate":"2021-10-25"},{"lineNumber":38,"author":{"gitId":"tttyyzzz"},"content":"            + \"attributes are missing.\\n\"","lastModifiedDate":"2021-10-25"},{"lineNumber":39,"author":{"gitId":"tttyyzzz"},"content":"            + \"Please follow the guide below so that your profile can be complete.\";","lastModifiedDate":"2021-10-25"},{"lineNumber":40,"author":{"gitId":"tttyyzzz"},"content":"    public static final String MESSAGE_NEW_PROFILE \u003d \"Fitbot realised that your profile has not been created.\"","lastModifiedDate":"2021-10-25"},{"lineNumber":41,"author":{"gitId":"tttyyzzz"},"content":"            + \"Let\u0027s start creating profile below!\";","lastModifiedDate":"2021-10-25"},{"lineNumber":42,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":43,"author":{"gitId":"tlyi"},"content":"    private Scanner scanner;","lastModifiedDate":"2021-10-11"},{"lineNumber":44,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":45,"author":{"gitId":"tlyi"},"content":"    public Ui() {","lastModifiedDate":"2021-10-11"},{"lineNumber":46,"author":{"gitId":"tlyi"},"content":"        this.scanner \u003d new Scanner(System.in);","lastModifiedDate":"2021-10-11"},{"lineNumber":47,"author":{"gitId":"tlyi"},"content":"        this.printStartApplicationPage();","lastModifiedDate":"2021-10-11"},{"lineNumber":48,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":49,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":50,"author":{"gitId":"tttyyzzz"},"content":"    public String getUserInput() {","lastModifiedDate":"2021-10-25"},{"lineNumber":51,"author":{"gitId":"tlyi"},"content":"        return scanner.nextLine();","lastModifiedDate":"2021-10-11"},{"lineNumber":52,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":53,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":54,"author":{"gitId":"tttyyzzz"},"content":"    private static Logger logger \u003d Logger.getLogger(Ui.class.getName());","lastModifiedDate":"2021-10-13"},{"lineNumber":55,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":56,"author":{"gitId":"tttyyzzz"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":57,"author":{"gitId":"tttyyzzz"},"content":"     * Surround strings with lines for user to differentiate results.","lastModifiedDate":"2021-10-08"},{"lineNumber":58,"author":{"gitId":"tttyyzzz"},"content":"     *","lastModifiedDate":"2021-10-08"},{"lineNumber":59,"author":{"gitId":"tttyyzzz"},"content":"     * @param messages is the strings that need to be printed on CLI","lastModifiedDate":"2021-10-08"},{"lineNumber":60,"author":{"gitId":"tttyyzzz"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":61,"author":{"gitId":"tlyi"},"content":"    public void formatMessageFramedWithDivider(String... messages) {","lastModifiedDate":"2021-10-11"},{"lineNumber":62,"author":{"gitId":"tttyyzzz"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2021-10-08"},{"lineNumber":63,"author":{"gitId":"tttyyzzz"},"content":"        for (String message : messages) {","lastModifiedDate":"2021-10-08"},{"lineNumber":64,"author":{"gitId":"tttyyzzz"},"content":"            System.out.println(message);","lastModifiedDate":"2021-10-08"},{"lineNumber":65,"author":{"gitId":"tttyyzzz"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":66,"author":{"gitId":"tttyyzzz"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2021-10-26"},{"lineNumber":67,"author":{"gitId":"tttyyzzz"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":68,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":69,"author":{"gitId":"tttyyzzz"},"content":"    public void formatMessageWithTopDivider(String... messages) {","lastModifiedDate":"2021-10-26"},{"lineNumber":70,"author":{"gitId":"tttyyzzz"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2021-10-26"},{"lineNumber":71,"author":{"gitId":"tttyyzzz"},"content":"        for (String message : messages) {","lastModifiedDate":"2021-10-26"},{"lineNumber":72,"author":{"gitId":"tttyyzzz"},"content":"            System.out.println(message);","lastModifiedDate":"2021-10-26"},{"lineNumber":73,"author":{"gitId":"tttyyzzz"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":74,"author":{"gitId":"tttyyzzz"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":75,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":76,"author":{"gitId":"tttyyzzz"},"content":"    public void formatMessageWithBottomDivider(String... messages) {","lastModifiedDate":"2021-10-26"},{"lineNumber":77,"author":{"gitId":"tttyyzzz"},"content":"        for (String message : messages) {","lastModifiedDate":"2021-10-26"},{"lineNumber":78,"author":{"gitId":"tttyyzzz"},"content":"            System.out.println(message);","lastModifiedDate":"2021-10-26"},{"lineNumber":79,"author":{"gitId":"tttyyzzz"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":80,"author":{"gitId":"tttyyzzz"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2021-10-26"},{"lineNumber":81,"author":{"gitId":"tttyyzzz"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":82,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":83,"author":{"gitId":"tlyi"},"content":"    public void printStartApplicationPage() {","lastModifiedDate":"2021-10-11"},{"lineNumber":84,"author":{"gitId":"tttyyzzz"},"content":"        logger.log(Level.FINE, \"start of application\");","lastModifiedDate":"2021-10-13"},{"lineNumber":85,"author":{"gitId":"tttyyzzz"},"content":"        System.out.println(FITBOT_V0 + LS + MESSAGE_WELCOME);","lastModifiedDate":"2021-10-20"},{"lineNumber":86,"author":{"gitId":"tttyyzzz"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":87,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":88,"author":{"gitId":"tttyyzzz"},"content":"    public void printStartMessage(boolean isProfileComplete, boolean isProfilePresent) {","lastModifiedDate":"2021-10-20"},{"lineNumber":89,"author":{"gitId":"tttyyzzz"},"content":"        if (isProfileComplete) {","lastModifiedDate":"2021-10-20"},{"lineNumber":90,"author":{"gitId":"tttyyzzz"},"content":"            System.out.println(MESSAGE_DIRECT_HELP);","lastModifiedDate":"2021-10-20"},{"lineNumber":91,"author":{"gitId":"tttyyzzz"},"content":"            return;","lastModifiedDate":"2021-10-20"},{"lineNumber":92,"author":{"gitId":"tttyyzzz"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":93,"author":{"gitId":"tttyyzzz"},"content":"        if (isProfilePresent) {","lastModifiedDate":"2021-10-20"},{"lineNumber":94,"author":{"gitId":"tttyyzzz"},"content":"            System.out.println(MESSAGE_FIX_PROFILE);","lastModifiedDate":"2021-10-20"},{"lineNumber":95,"author":{"gitId":"tttyyzzz"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":96,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":97,"author":{"gitId":"tttyyzzz"},"content":"        System.out.println(MESSAGE_NEW_PROFILE);","lastModifiedDate":"2021-10-20"},{"lineNumber":98,"author":{"gitId":"tttyyzzz"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":99,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":100,"author":{"gitId":"tttyyzzz"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"tttyyzzz":76,"tlyi":24}},{"path":"src/test/java/seedu/duke/data/profile/ProfileTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.data.profile;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"weidak"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"tlyi"},"content":"import seedu.duke.data.profile.exceptions.InvalidCharacteristicException;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"weidak"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"weidak"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"weidak"},"content":"class ProfileTest {","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"weidak"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"weidak"},"content":"    void calculateBmi_twoDoubleInputs_expectDoubleReturned() throws InvalidCharacteristicException {","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"weidak"},"content":"        final double height \u003d 171.2;","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"weidak"},"content":"        final double weight \u003d 59.8;","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"weidak"},"content":"        assertEquals(20.4, Profile.calculateBmi(height, weight));","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"weidak"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":20,"author":{"gitId":"weidak"},"content":"    void calculateBmi_negativeHeightInput_expectInvalidCharacteristicException() {","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"weidak"},"content":"        final double height \u003d -171.2;","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"weidak"},"content":"        final double weight \u003d 59.8;","lastModifiedDate":"2021-10-18"},{"lineNumber":23,"author":{"gitId":"weidak"},"content":"        assertThrows(InvalidCharacteristicException.class,","lastModifiedDate":"2021-10-18"},{"lineNumber":24,"author":{"gitId":"weidak"},"content":"            () -\u003e Profile.calculateBmi(height, weight));","lastModifiedDate":"2021-10-18"},{"lineNumber":25,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":26,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":27,"author":{"gitId":"weidak"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":28,"author":{"gitId":"weidak"},"content":"    void calculateBmi_negativeWeightInput_expectInvalidCharacteristicException() {","lastModifiedDate":"2021-10-18"},{"lineNumber":29,"author":{"gitId":"weidak"},"content":"        final double height \u003d 171.2;","lastModifiedDate":"2021-10-18"},{"lineNumber":30,"author":{"gitId":"weidak"},"content":"        final double weight \u003d -59.8;","lastModifiedDate":"2021-10-18"},{"lineNumber":31,"author":{"gitId":"weidak"},"content":"        assertThrows(InvalidCharacteristicException.class,","lastModifiedDate":"2021-10-09"},{"lineNumber":32,"author":{"gitId":"weidak"},"content":"            () -\u003e Profile.calculateBmi(height, weight));","lastModifiedDate":"2021-10-09"},{"lineNumber":33,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":34,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":35,"author":{"gitId":"weidak"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":36,"author":{"gitId":"weidak"},"content":"    void retrieveBmiStatus_validBmiInputs_expectCorrectStatuses() {","lastModifiedDate":"2021-10-18"},{"lineNumber":37,"author":{"gitId":"weidak"},"content":"        final String expectedStatusUnderweight \u003d \"Underweight\";","lastModifiedDate":"2021-10-18"},{"lineNumber":38,"author":{"gitId":"weidak"},"content":"        final String expectedStatusHealthy \u003d \"Healthy\";","lastModifiedDate":"2021-10-18"},{"lineNumber":39,"author":{"gitId":"weidak"},"content":"        final String expectedStatusOverweight \u003d \"Overweight\";","lastModifiedDate":"2021-10-18"},{"lineNumber":40,"author":{"gitId":"weidak"},"content":"        final String expectedStatusObese \u003d \"Obese\";","lastModifiedDate":"2021-10-18"},{"lineNumber":41,"author":{"gitId":"weidak"},"content":"        final double bmiUnderweight \u003d 10.5;","lastModifiedDate":"2021-10-18"},{"lineNumber":42,"author":{"gitId":"weidak"},"content":"        final double bmiHealthy \u003d 22.5;","lastModifiedDate":"2021-10-18"},{"lineNumber":43,"author":{"gitId":"weidak"},"content":"        final double bmiOverweight \u003d 25.5;","lastModifiedDate":"2021-10-18"},{"lineNumber":44,"author":{"gitId":"weidak"},"content":"        final double bmiObese \u003d 30.0;","lastModifiedDate":"2021-10-18"},{"lineNumber":45,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":46,"author":{"gitId":"weidak"},"content":"        assertEquals(expectedStatusUnderweight, Profile.retrieveBmiStatus(bmiUnderweight));","lastModifiedDate":"2021-10-18"},{"lineNumber":47,"author":{"gitId":"weidak"},"content":"        assertEquals(expectedStatusHealthy, Profile.retrieveBmiStatus(bmiHealthy));","lastModifiedDate":"2021-10-18"},{"lineNumber":48,"author":{"gitId":"weidak"},"content":"        assertEquals(expectedStatusOverweight, Profile.retrieveBmiStatus(bmiOverweight));","lastModifiedDate":"2021-10-18"},{"lineNumber":49,"author":{"gitId":"weidak"},"content":"        assertEquals(expectedStatusObese, Profile.retrieveBmiStatus(bmiObese));","lastModifiedDate":"2021-10-18"},{"lineNumber":50,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":51,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":52,"author":{"gitId":"weidak"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":53,"author":{"gitId":"weidak"},"content":"    void getBmrValuesMen_validInputs_expectCorrectBmrValues() {","lastModifiedDate":"2021-10-20"},{"lineNumber":54,"author":{"gitId":"weidak"},"content":"        Profile p \u003d new Profile();","lastModifiedDate":"2021-10-18"},{"lineNumber":55,"author":{"gitId":"weidak"},"content":"        final String name \u003d \"John\";","lastModifiedDate":"2021-10-18"},{"lineNumber":56,"author":{"gitId":"weidak"},"content":"        final double height \u003d 170.1;","lastModifiedDate":"2021-10-18"},{"lineNumber":57,"author":{"gitId":"weidak"},"content":"        final double weight \u003d 60;","lastModifiedDate":"2021-10-18"},{"lineNumber":58,"author":{"gitId":"weidak"},"content":"        final int calorieGoal \u003d 300;","lastModifiedDate":"2021-10-18"},{"lineNumber":59,"author":{"gitId":"weidak"},"content":"        final char gender \u003d \u0027M\u0027;","lastModifiedDate":"2021-10-18"},{"lineNumber":60,"author":{"gitId":"weidak"},"content":"        final int age \u003d 22;","lastModifiedDate":"2021-10-18"},{"lineNumber":61,"author":{"gitId":"weidak"},"content":"        final int activityFactor \u003d 1;","lastModifiedDate":"2021-10-18"},{"lineNumber":62,"author":{"gitId":"weidak"},"content":"        final double baseBmr \u003d 1583.5979;","lastModifiedDate":"2021-10-18"},{"lineNumber":63,"author":{"gitId":"weidak"},"content":"        final int bmrSedentary \u003d (int) Math.round(baseBmr * 1.2);","lastModifiedDate":"2021-10-18"},{"lineNumber":64,"author":{"gitId":"weidak"},"content":"        final int bmrLight \u003d (int) Math.round(baseBmr * 1.375);","lastModifiedDate":"2021-10-18"},{"lineNumber":65,"author":{"gitId":"weidak"},"content":"        final int bmrModerate \u003d (int) Math.round(baseBmr * 1.55);","lastModifiedDate":"2021-10-18"},{"lineNumber":66,"author":{"gitId":"weidak"},"content":"        final int bmrIntense \u003d (int) Math.round(baseBmr * 1.725);","lastModifiedDate":"2021-10-18"},{"lineNumber":67,"author":{"gitId":"weidak"},"content":"        final int bmrExtreme \u003d (int) Math.round(baseBmr * 1.9);","lastModifiedDate":"2021-10-18"},{"lineNumber":68,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":69,"author":{"gitId":"weidak"},"content":"        p.setProfileWithRawInputs(name, height, weight, gender, age, calorieGoal, activityFactor);","lastModifiedDate":"2021-10-20"},{"lineNumber":70,"author":{"gitId":"weidak"},"content":"        assertEquals(bmrSedentary, p.getBmr());","lastModifiedDate":"2021-10-18"},{"lineNumber":71,"author":{"gitId":"weidak"},"content":"        p.getProfileActivityFactor().setActivityFactor(2);","lastModifiedDate":"2021-10-20"},{"lineNumber":72,"author":{"gitId":"weidak"},"content":"        assertEquals(bmrLight, p.getBmr());","lastModifiedDate":"2021-10-18"},{"lineNumber":73,"author":{"gitId":"weidak"},"content":"        p.getProfileActivityFactor().setActivityFactor(3);","lastModifiedDate":"2021-10-20"},{"lineNumber":74,"author":{"gitId":"weidak"},"content":"        assertEquals(bmrModerate, p.getBmr());","lastModifiedDate":"2021-10-18"},{"lineNumber":75,"author":{"gitId":"weidak"},"content":"        p.getProfileActivityFactor().setActivityFactor(4);","lastModifiedDate":"2021-10-20"},{"lineNumber":76,"author":{"gitId":"weidak"},"content":"        assertEquals(bmrIntense, p.getBmr());","lastModifiedDate":"2021-10-18"},{"lineNumber":77,"author":{"gitId":"weidak"},"content":"        p.getProfileActivityFactor().setActivityFactor(5);","lastModifiedDate":"2021-10-20"},{"lineNumber":78,"author":{"gitId":"weidak"},"content":"        assertEquals(bmrExtreme, p.getBmr());","lastModifiedDate":"2021-10-18"},{"lineNumber":79,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":80,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":81,"author":{"gitId":"weidak"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":82,"author":{"gitId":"weidak"},"content":"    void getBmrValuesFemale_validInputs_expectCorrectBmrValues() {","lastModifiedDate":"2021-10-20"},{"lineNumber":83,"author":{"gitId":"weidak"},"content":"        Profile p \u003d new Profile();","lastModifiedDate":"2021-10-18"},{"lineNumber":84,"author":{"gitId":"weidak"},"content":"        final String name \u003d \"Mary\";","lastModifiedDate":"2021-10-18"},{"lineNumber":85,"author":{"gitId":"weidak"},"content":"        final double height \u003d 160.1;","lastModifiedDate":"2021-10-18"},{"lineNumber":86,"author":{"gitId":"weidak"},"content":"        final double weight \u003d 45.2;","lastModifiedDate":"2021-10-18"},{"lineNumber":87,"author":{"gitId":"weidak"},"content":"        final int calorieGoal \u003d 300;","lastModifiedDate":"2021-10-18"},{"lineNumber":88,"author":{"gitId":"weidak"},"content":"        final char gender \u003d \u0027F\u0027;","lastModifiedDate":"2021-10-18"},{"lineNumber":89,"author":{"gitId":"weidak"},"content":"        final int age \u003d 20;","lastModifiedDate":"2021-10-18"},{"lineNumber":90,"author":{"gitId":"weidak"},"content":"        final int activityFactor \u003d 1;","lastModifiedDate":"2021-10-18"},{"lineNumber":91,"author":{"gitId":"weidak"},"content":"        final double baseBmr \u003d 1274.9472;","lastModifiedDate":"2021-10-18"},{"lineNumber":92,"author":{"gitId":"weidak"},"content":"        final int bmrSedentary \u003d (int) Math.round(baseBmr * 1.2);","lastModifiedDate":"2021-10-18"},{"lineNumber":93,"author":{"gitId":"weidak"},"content":"        final int bmrLight \u003d (int) Math.round(baseBmr * 1.375);","lastModifiedDate":"2021-10-18"},{"lineNumber":94,"author":{"gitId":"weidak"},"content":"        final int bmrModerate \u003d (int) Math.round(baseBmr * 1.55);","lastModifiedDate":"2021-10-18"},{"lineNumber":95,"author":{"gitId":"weidak"},"content":"        final int bmrIntense \u003d (int) Math.round(baseBmr * 1.725);","lastModifiedDate":"2021-10-18"},{"lineNumber":96,"author":{"gitId":"weidak"},"content":"        final int bmrExtreme \u003d (int) Math.round(baseBmr * 1.9);","lastModifiedDate":"2021-10-18"},{"lineNumber":97,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":98,"author":{"gitId":"weidak"},"content":"        p.setProfileWithRawInputs(name, height, weight, gender, age, calorieGoal, activityFactor);","lastModifiedDate":"2021-10-20"},{"lineNumber":99,"author":{"gitId":"weidak"},"content":"        assertEquals(bmrSedentary, p.getBmr());","lastModifiedDate":"2021-10-18"},{"lineNumber":100,"author":{"gitId":"weidak"},"content":"        p.getProfileActivityFactor().setActivityFactor(2);","lastModifiedDate":"2021-10-20"},{"lineNumber":101,"author":{"gitId":"weidak"},"content":"        assertEquals(bmrLight, p.getBmr());","lastModifiedDate":"2021-10-18"},{"lineNumber":102,"author":{"gitId":"weidak"},"content":"        p.getProfileActivityFactor().setActivityFactor(3);","lastModifiedDate":"2021-10-20"},{"lineNumber":103,"author":{"gitId":"weidak"},"content":"        assertEquals(bmrModerate, p.getBmr());","lastModifiedDate":"2021-10-18"},{"lineNumber":104,"author":{"gitId":"weidak"},"content":"        p.getProfileActivityFactor().setActivityFactor(4);","lastModifiedDate":"2021-10-20"},{"lineNumber":105,"author":{"gitId":"weidak"},"content":"        assertEquals(bmrIntense, p.getBmr());","lastModifiedDate":"2021-10-18"},{"lineNumber":106,"author":{"gitId":"weidak"},"content":"        p.getProfileActivityFactor().setActivityFactor(5);","lastModifiedDate":"2021-10-20"},{"lineNumber":107,"author":{"gitId":"weidak"},"content":"        assertEquals(bmrExtreme, p.getBmr());","lastModifiedDate":"2021-10-18"},{"lineNumber":108,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":109,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":110,"author":{"gitId":"weidak"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":111,"author":{"gitId":"weidak"},"content":"    void toFileTextString_validInputs_expectCorrectString() {","lastModifiedDate":"2021-10-20"},{"lineNumber":112,"author":{"gitId":"weidak"},"content":"        Profile p \u003d new Profile();","lastModifiedDate":"2021-10-18"},{"lineNumber":113,"author":{"gitId":"weidak"},"content":"        String name \u003d \"John\";","lastModifiedDate":"2021-10-18"},{"lineNumber":114,"author":{"gitId":"weidak"},"content":"        double height \u003d 170.1;","lastModifiedDate":"2021-10-18"},{"lineNumber":115,"author":{"gitId":"weidak"},"content":"        double weight \u003d 60;","lastModifiedDate":"2021-10-18"},{"lineNumber":116,"author":{"gitId":"weidak"},"content":"        int calorieGoal \u003d 300;","lastModifiedDate":"2021-10-18"},{"lineNumber":117,"author":{"gitId":"weidak"},"content":"        char gender \u003d \u0027M\u0027;","lastModifiedDate":"2021-10-18"},{"lineNumber":118,"author":{"gitId":"weidak"},"content":"        int age \u003d 22;","lastModifiedDate":"2021-10-18"},{"lineNumber":119,"author":{"gitId":"weidak"},"content":"        int activityFactor \u003d 1;","lastModifiedDate":"2021-10-18"},{"lineNumber":120,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":121,"author":{"gitId":"weidak"},"content":"        p.setProfileWithRawInputs(name, height, weight, gender, age, calorieGoal, activityFactor);","lastModifiedDate":"2021-10-20"},{"lineNumber":122,"author":{"gitId":"weidak"},"content":"        String correctOutput \u003d \"John|170.1|60.0|M|22|300|1\";","lastModifiedDate":"2021-10-20"},{"lineNumber":123,"author":{"gitId":"weidak"},"content":"        assertEquals(correctOutput, p.toFileTextString());","lastModifiedDate":"2021-10-18"},{"lineNumber":124,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":125,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":126,"author":{"gitId":"weidak"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"weidak":124,"tlyi":2}},{"path":"src/test/java/seedu/duke/data/profile/attributes/ActivityFactorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.data.profile.attributes;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"weidak"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"weidak"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"weidak"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"weidak"},"content":"class ActivityFactorTest {","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"weidak"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"weidak"},"content":"    void createActivityFactor_validFactors_expectTrue() {","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"weidak"},"content":"        final ActivityFactor a1 \u003d new ActivityFactor(1);","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"weidak"},"content":"        final ActivityFactor a2 \u003d new ActivityFactor(2);","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"weidak"},"content":"        final ActivityFactor a3 \u003d new ActivityFactor(3);","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"weidak"},"content":"        final ActivityFactor a4 \u003d new ActivityFactor(4);","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"weidak"},"content":"        final ActivityFactor a5 \u003d new ActivityFactor(5);","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"weidak"},"content":"        assertTrue(a1.isValid());","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"weidak"},"content":"        assertTrue(a2.isValid());","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"weidak"},"content":"        assertTrue(a3.isValid());","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"weidak"},"content":"        assertTrue(a4.isValid());","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"weidak"},"content":"        assertTrue(a5.isValid());","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"weidak"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"weidak"},"content":"    void createActivityFactor_invalidFactors_expectFalse() {","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"weidak"},"content":"        final ActivityFactor a1 \u003d new ActivityFactor(-1);","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"weidak"},"content":"        final ActivityFactor a2 \u003d new ActivityFactor(6);","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"weidak"},"content":"        assertFalse(a1.isValid());","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"weidak"},"content":"        assertFalse(a2.isValid());","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"weidak"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"weidak":31,"tlyi":1}},{"path":"src/test/java/seedu/duke/data/profile/attributes/AgeTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.data.profile.attributes;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"weidak"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"weidak"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"weidak"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"weidak"},"content":"class AgeTest {","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"weidak"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"weidak"},"content":"    void createAge_positiveInputs_expectTrue() {","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"weidak"},"content":"        final Age a1 \u003d new Age(10);","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"weidak"},"content":"        final Age a2 \u003d new Age(25);","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"weidak"},"content":"        final Age a3 \u003d new Age(45);","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"weidak"},"content":"        final Age a4 \u003d new Age(57);","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"weidak"},"content":"        final Age a5 \u003d new Age(80);","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"weidak"},"content":"        assertTrue(a1.isValid());","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"weidak"},"content":"        assertTrue(a2.isValid());","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"weidak"},"content":"        assertTrue(a3.isValid());","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"weidak"},"content":"        assertTrue(a4.isValid());","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"weidak"},"content":"        assertTrue(a5.isValid());","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"weidak"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"weidak"},"content":"    void createAge_nonPositiveInput_expectFalse() {","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"weidak"},"content":"        final Age a1 \u003d new Age(0);","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"weidak"},"content":"        final Age a2 \u003d new Age(-25);","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"weidak"},"content":"        final Age a3 \u003d new Age(-45);","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"weidak"},"content":"        final Age a4 \u003d new Age(-57);","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"weidak"},"content":"        final Age a5 \u003d new Age(-80);","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"weidak"},"content":"        assertFalse(a1.isValid());","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"weidak"},"content":"        assertFalse(a2.isValid());","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"weidak"},"content":"        assertFalse(a3.isValid());","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"weidak"},"content":"        assertFalse(a4.isValid());","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"weidak"},"content":"        assertFalse(a5.isValid());","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"weidak"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"weidak":37,"tlyi":1}},{"path":"src/test/java/seedu/duke/data/profile/attributes/CalorieGoalTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.data.profile.attributes;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"weidak"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"weidak"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"weidak"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"weidak"},"content":"class CalorieGoalTest {","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"weidak"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"weidak"},"content":"    void createCalorieGoal_validGoalInputs_expectTrue() {","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"weidak"},"content":"        final CalorieGoal c1 \u003d new CalorieGoal(2499);","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"weidak"},"content":"        final CalorieGoal c2 \u003d new CalorieGoal(-2499);","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"weidak"},"content":"        assertTrue(c1.isValid());","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"weidak"},"content":"        assertTrue(c2.isValid());","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"weidak"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"weidak"},"content":"    void createCalorieGoal_invalidGoalInputs_expectTrue() {","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"weidak"},"content":"        final CalorieGoal c1 \u003d new CalorieGoal(239030);","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"weidak"},"content":"        final CalorieGoal c2 \u003d new CalorieGoal(-23435);","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"weidak"},"content":"        assertFalse(c1.isValid());","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"weidak"},"content":"        assertFalse(c2.isValid());","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"weidak"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"weidak":25,"tlyi":1}},{"path":"src/test/java/seedu/duke/data/profile/attributes/GenderTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.data.profile.attributes;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"weidak"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"weidak"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"weidak"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"weidak"},"content":"class GenderTest {","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"weidak"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"weidak"},"content":"    void createGender_validGenderInputs_expectTrue() {","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"weidak"},"content":"        final Gender g1 \u003d new Gender(\u0027F\u0027);","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"weidak"},"content":"        final Gender g2 \u003d new Gender(\u0027M\u0027);","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"weidak"},"content":"        assertTrue(g1.isValid());","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"weidak"},"content":"        assertTrue(g2.isValid());","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"weidak"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"weidak"},"content":"    void createCalorieGoal_invalidGoalInputs_expectTrue() {","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"weidak"},"content":"        final Gender g1 \u003d new Gender(\u0027S\u0027);","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"weidak"},"content":"        final Gender g2 \u003d new Gender(\u0027D\u0027);","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"weidak"},"content":"        assertFalse(g1.isValid());","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"weidak"},"content":"        assertFalse(g2.isValid());","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"weidak"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"weidak":25,"tlyi":1}},{"path":"src/test/java/seedu/duke/data/profile/attributes/HeightTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.data.profile.attributes;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"weidak"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"weidak"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"weidak"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"weidak"},"content":"class HeightTest {","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"weidak"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"weidak"},"content":"    void createHeight_validHeightInputs_expectTrue() {","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"weidak"},"content":"        final Height h1 \u003d new Height(190);","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"weidak"},"content":"        final Height h2 \u003d new Height(165);","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"weidak"},"content":"        assertTrue(h1.isValid());","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"weidak"},"content":"        assertTrue(h2.isValid());","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"weidak"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"weidak"},"content":"    void createHeight_invalidHeightInputs_expectFalse() {","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"weidak"},"content":"        final Height h1 \u003d new Height(0);","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"weidak"},"content":"        final Height h2 \u003d new Height(-10);","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"weidak"},"content":"        assertFalse(h1.isValid());","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"weidak"},"content":"        assertFalse(h2.isValid());","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"weidak"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"weidak":25,"tlyi":1}},{"path":"src/test/java/seedu/duke/data/profile/attributes/NameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.data.profile.attributes;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"weidak"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"weidak"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"weidak"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"weidak"},"content":"class NameTest {","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"weidak"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"weidak"},"content":"    void createName_validNameInputs_expectTrue() {","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"weidak"},"content":"        final Name n1 \u003d new Name(\"John\");","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"weidak"},"content":"        final Name n2 \u003d new Name(\"qwertyuiop\u003c\u003e:{},.;\u0027[]\u0027+\u003d-!@#$%^\u0026*()~`\");","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"weidak"},"content":"        assertTrue(n1.isValid());","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"weidak"},"content":"        assertTrue(n2.isValid());","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"weidak"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"weidak"},"content":"    void createName_invalidNameInputs_expectFalse() {","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"weidak"},"content":"        final Name n1 \u003d new Name(\"Hello/ooooo\");","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"weidak"},"content":"        final Name n2 \u003d new Name(\"Delim|ters\");","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"weidak"},"content":"        assertFalse(n1.isValid());","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"weidak"},"content":"        assertFalse(n2.isValid());","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"weidak"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"weidak":25,"tlyi":1}},{"path":"src/test/java/seedu/duke/data/profile/attributes/WeightTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.data.profile.attributes;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"weidak"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"weidak"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"weidak"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"weidak"},"content":"class WeightTest {","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"weidak"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"weidak"},"content":"    void createWeight_validWeightInputs_expectTrue() {","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"weidak"},"content":"        final Weight w1 \u003d new Weight(60);","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"weidak"},"content":"        final Weight w2 \u003d new Weight(70.25);","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"weidak"},"content":"        assertTrue(w1.isValid());","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"weidak"},"content":"        assertTrue(w2.isValid());","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"weidak"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"weidak"},"content":"    void createWeight_invalidWeightInputs_expectFalse() {","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"weidak"},"content":"        final Weight w1 \u003d new Weight(0);","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"weidak"},"content":"        final Weight w2 \u003d new Weight(-10);","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"weidak"},"content":"        assertFalse(w1.isValid());","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"weidak"},"content":"        assertFalse(w2.isValid());","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"weidak"},"content":"    ","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"weidak"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"weidak":25,"tlyi":1}},{"path":"src/test/java/seedu/duke/exercise/ExerciseListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xingjie99"},"content":"package seedu.duke.exercise;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"xingjie99"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"tlyi"},"content":"import seedu.duke.data.item.exercise.Exercise;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"tlyi"},"content":"import seedu.duke.data.item.exercise.ExerciseList;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"tryyang2001"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-16"},{"lineNumber":8,"author":{"gitId":"tryyang2001"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-10-16"},{"lineNumber":9,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"xingjie99"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"xingjie99"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"xingjie99"},"content":"class ExerciseListTest {","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"xingjie99"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"tryyang2001"},"content":"    void addExercise_exerciseClassParameter_expectAddInList() {","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"xingjie99"},"content":"        ExerciseList exerciseList \u003d new ExerciseList();","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"tryyang2001"},"content":"        exerciseList.addItem(new Exercise(\"Jumping Jacks\", 100));","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"tryyang2001"},"content":"        assertEquals(\"Jumping Jacks (100 cal)\", exerciseList.getItem(0).toString());","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"xingjie99"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"xingjie99"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"xingjie99"},"content":"    void deleteExercise_exerciseIndex_expectDeleteFromList() {","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"xingjie99"},"content":"        ExerciseList exerciseList \u003d new ExerciseList();","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"tryyang2001"},"content":"        exerciseList.addItem(new Exercise(\"Running\", 250));","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"tryyang2001"},"content":"        exerciseList.addItem(new Exercise(\"Jumping Jacks\", 100));","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"tryyang2001"},"content":"        exerciseList.deleteItem(0, LocalDate.now());","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"tryyang2001"},"content":"        assertEquals(\"Jumping Jacks (100 cal)\", exerciseList.getItem(0).toString());","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"xingjie99"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"xingjie99"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"xingjie99"},"content":"    void deleteExercise_exerciseIndex_expectCorrectNumberOfTasksLeft() {","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"xingjie99"},"content":"        ExerciseList exerciseList \u003d new ExerciseList();","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"tryyang2001"},"content":"        exerciseList.addItem(new Exercise(\"Running\", 250,","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"tryyang2001"},"content":"                LocalDate.parse(\"19-10-2021\", DateTimeFormatter.ofPattern(\"dd-MM-yyyy\"))));","lastModifiedDate":"2021-10-19"},{"lineNumber":37,"author":{"gitId":"tryyang2001"},"content":"        exerciseList.addItem(new Exercise(\"Jumping Jacks\", 100,","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"tryyang2001"},"content":"                LocalDate.parse(\"19-10-2021\", DateTimeFormatter.ofPattern(\"dd-MM-yyyy\"))));","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"tryyang2001"},"content":"        System.out.println(exerciseList.deleteItem(0,","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"tryyang2001"},"content":"                LocalDate.parse(\"19-10-2021\", DateTimeFormatter.ofPattern(\"dd-MM-yyyy\"))));","lastModifiedDate":"2021-10-19"},{"lineNumber":41,"author":{"gitId":"xingjie99"},"content":"        assertEquals(1, exerciseList.getSize());","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"xingjie99"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":43,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":44,"author":{"gitId":"xingjie99"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":45,"author":{"gitId":"xingjie99"},"content":"    void deleteExercise_invalidIndex_expectException() {","lastModifiedDate":"2021-10-11"},{"lineNumber":46,"author":{"gitId":"xingjie99"},"content":"        ExerciseList exerciseList \u003d new ExerciseList();","lastModifiedDate":"2021-10-11"},{"lineNumber":47,"author":{"gitId":"tryyang2001"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e exerciseList.deleteItem(0,","lastModifiedDate":"2021-10-19"},{"lineNumber":48,"author":{"gitId":"tryyang2001"},"content":"                LocalDate.parse(\"19-10-2021\", DateTimeFormatter.ofPattern(\"dd-MM-yyyy\"))));","lastModifiedDate":"2021-10-19"},{"lineNumber":49,"author":{"gitId":"xingjie99"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":50,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":51,"author":{"gitId":"xingjie99"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":52,"author":{"gitId":"xingjie99"},"content":"    void totalCalorie_someExercises_expectTotalCalorie() {","lastModifiedDate":"2021-10-11"},{"lineNumber":53,"author":{"gitId":"xingjie99"},"content":"        ExerciseList exerciseList \u003d new ExerciseList();","lastModifiedDate":"2021-10-11"},{"lineNumber":54,"author":{"gitId":"tryyang2001"},"content":"        exerciseList.addItem(new Exercise(\"Running\", 250));","lastModifiedDate":"2021-10-19"},{"lineNumber":55,"author":{"gitId":"tryyang2001"},"content":"        exerciseList.addItem(new Exercise(\"Jumping Jacks\", 100));","lastModifiedDate":"2021-10-19"},{"lineNumber":56,"author":{"gitId":"tryyang2001"},"content":"        exerciseList.addItem(new Exercise(\"Skipping\", 200));","lastModifiedDate":"2021-10-19"},{"lineNumber":57,"author":{"gitId":"tryyang2001"},"content":"        exerciseList.addItem(new Exercise(\"Swimming\", 300));","lastModifiedDate":"2021-10-19"},{"lineNumber":58,"author":{"gitId":"tlyi"},"content":"        assertEquals(850, exerciseList.getTotalCalories());","lastModifiedDate":"2021-10-13"},{"lineNumber":59,"author":{"gitId":"xingjie99"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":60,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":61,"author":{"gitId":"tryyang2001"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":62,"author":{"gitId":"tryyang2001"},"content":"    void sortExerciseList_callSortExerciseListMethod_expectSortedList() {","lastModifiedDate":"2021-10-16"},{"lineNumber":63,"author":{"gitId":"tryyang2001"},"content":"        ExerciseList exerciseList \u003d new ExerciseList();","lastModifiedDate":"2021-10-16"},{"lineNumber":64,"author":{"gitId":"tryyang2001"},"content":"        exerciseList.addItem(new Exercise(\"Running\", 250,","lastModifiedDate":"2021-10-19"},{"lineNumber":65,"author":{"gitId":"tryyang2001"},"content":"                LocalDate.parse(\"2021-10-16\", DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"))));","lastModifiedDate":"2021-10-16"},{"lineNumber":66,"author":{"gitId":"tryyang2001"},"content":"        exerciseList.addItem(new Exercise(\"Jumping Jacks\", 100,","lastModifiedDate":"2021-10-19"},{"lineNumber":67,"author":{"gitId":"tryyang2001"},"content":"                LocalDate.parse(\"2021-10-19\", DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"))));","lastModifiedDate":"2021-10-16"},{"lineNumber":68,"author":{"gitId":"tryyang2001"},"content":"        exerciseList.addItem(new Exercise(\"Skipping\", 200,","lastModifiedDate":"2021-10-19"},{"lineNumber":69,"author":{"gitId":"tryyang2001"},"content":"                LocalDate.parse(\"2021-10-18\", DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"))));","lastModifiedDate":"2021-10-16"},{"lineNumber":70,"author":{"gitId":"tryyang2001"},"content":"        exerciseList.addItem(new Exercise(\"Swimming\", 300,","lastModifiedDate":"2021-10-19"},{"lineNumber":71,"author":{"gitId":"tryyang2001"},"content":"                LocalDate.parse(\"2021-10-17\", DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"))));","lastModifiedDate":"2021-10-16"},{"lineNumber":72,"author":{"gitId":"tryyang2001"},"content":"        exerciseList.sortList();","lastModifiedDate":"2021-10-19"},{"lineNumber":73,"author":{"gitId":"tryyang2001"},"content":"        System.out.println(exerciseList.convertToString());","lastModifiedDate":"2021-10-16"},{"lineNumber":74,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":75,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":76,"author":{"gitId":"tryyang2001"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":77,"author":{"gitId":"tryyang2001"},"content":"    void totalExerciseCaloriesForSingleDate_oneLocalDateInput_expectSumOfCalorieOnThatDay() {","lastModifiedDate":"2021-10-16"},{"lineNumber":78,"author":{"gitId":"tryyang2001"},"content":"        ExerciseList exerciseList \u003d new ExerciseList();","lastModifiedDate":"2021-10-16"},{"lineNumber":79,"author":{"gitId":"tryyang2001"},"content":"        exerciseList.addItem(new Exercise(\"Running\", 250,","lastModifiedDate":"2021-10-19"},{"lineNumber":80,"author":{"gitId":"tryyang2001"},"content":"                LocalDate.parse(\"2021-10-16\", DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"))));","lastModifiedDate":"2021-10-16"},{"lineNumber":81,"author":{"gitId":"tryyang2001"},"content":"        exerciseList.addItem(new Exercise(\"Jumping Jacks\", 100,","lastModifiedDate":"2021-10-19"},{"lineNumber":82,"author":{"gitId":"tryyang2001"},"content":"                LocalDate.parse(\"2021-10-19\", DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"))));","lastModifiedDate":"2021-10-16"},{"lineNumber":83,"author":{"gitId":"tryyang2001"},"content":"        exerciseList.addItem(new Exercise(\"Skipping\", 200,","lastModifiedDate":"2021-10-19"},{"lineNumber":84,"author":{"gitId":"tryyang2001"},"content":"                LocalDate.parse(\"2021-10-18\", DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"))));","lastModifiedDate":"2021-10-16"},{"lineNumber":85,"author":{"gitId":"tryyang2001"},"content":"        exerciseList.addItem(new Exercise(\"Swimming\", 300,","lastModifiedDate":"2021-10-19"},{"lineNumber":86,"author":{"gitId":"tryyang2001"},"content":"                LocalDate.parse(\"2021-10-17\", DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"))));","lastModifiedDate":"2021-10-16"},{"lineNumber":87,"author":{"gitId":"tryyang2001"},"content":"        exerciseList.addItem(new Exercise(\"Jump rope\", 453,","lastModifiedDate":"2021-10-19"},{"lineNumber":88,"author":{"gitId":"tryyang2001"},"content":"                LocalDate.parse(\"2021-10-17\", DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"))));","lastModifiedDate":"2021-10-16"},{"lineNumber":89,"author":{"gitId":"tryyang2001"},"content":"        exerciseList.addItem(new Exercise(\"Biking\", 420,","lastModifiedDate":"2021-10-19"},{"lineNumber":90,"author":{"gitId":"tryyang2001"},"content":"                LocalDate.parse(\"2021-10-17\", DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"))));","lastModifiedDate":"2021-10-16"},{"lineNumber":91,"author":{"gitId":"tryyang2001"},"content":"        assertEquals(1173, exerciseList.getTotalCaloriesWithDate(","lastModifiedDate":"2021-10-16"},{"lineNumber":92,"author":{"gitId":"tryyang2001"},"content":"                LocalDate.parse(\"17-10-2021\", DateTimeFormatter.ofPattern(\"dd-MM-yyyy\"))));","lastModifiedDate":"2021-10-16"},{"lineNumber":93,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":94,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":95,"author":{"gitId":"tryyang2001"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":96,"author":{"gitId":"tryyang2001"},"content":"    void printExerciseListByOneGivenDate_inputLocalDate_expectExerciseListOfTheDayOnly() {","lastModifiedDate":"2021-10-16"},{"lineNumber":97,"author":{"gitId":"tryyang2001"},"content":"        ExerciseList exerciseList \u003d new ExerciseList();","lastModifiedDate":"2021-10-16"},{"lineNumber":98,"author":{"gitId":"tryyang2001"},"content":"        exerciseList.addItem(new Exercise(\"Running\", 250,","lastModifiedDate":"2021-10-19"},{"lineNumber":99,"author":{"gitId":"tryyang2001"},"content":"                LocalDate.parse(\"2021-10-16\", DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"))));","lastModifiedDate":"2021-10-16"},{"lineNumber":100,"author":{"gitId":"tryyang2001"},"content":"        exerciseList.addItem(new Exercise(\"Jumping Jacks\", 100,","lastModifiedDate":"2021-10-19"},{"lineNumber":101,"author":{"gitId":"tryyang2001"},"content":"                LocalDate.parse(\"2021-10-19\", DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"))));","lastModifiedDate":"2021-10-16"},{"lineNumber":102,"author":{"gitId":"tryyang2001"},"content":"        exerciseList.addItem(new Exercise(\"Skipping\", 200,","lastModifiedDate":"2021-10-19"},{"lineNumber":103,"author":{"gitId":"tryyang2001"},"content":"                LocalDate.parse(\"2021-10-18\", DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"))));","lastModifiedDate":"2021-10-16"},{"lineNumber":104,"author":{"gitId":"tryyang2001"},"content":"        exerciseList.addItem(new Exercise(\"Swimming\", 300,","lastModifiedDate":"2021-10-19"},{"lineNumber":105,"author":{"gitId":"tryyang2001"},"content":"                LocalDate.parse(\"2021-10-17\", DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"))));","lastModifiedDate":"2021-10-16"},{"lineNumber":106,"author":{"gitId":"tryyang2001"},"content":"        exerciseList.addItem(new Exercise(\"Jump rope\", 453,","lastModifiedDate":"2021-10-19"},{"lineNumber":107,"author":{"gitId":"tryyang2001"},"content":"                LocalDate.parse(\"2021-10-17\", DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"))));","lastModifiedDate":"2021-10-16"},{"lineNumber":108,"author":{"gitId":"tryyang2001"},"content":"        exerciseList.addItem(new Exercise(\"Biking\", 420,","lastModifiedDate":"2021-10-19"},{"lineNumber":109,"author":{"gitId":"tryyang2001"},"content":"                LocalDate.parse(\"2021-10-17\", DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"))));","lastModifiedDate":"2021-10-16"},{"lineNumber":110,"author":{"gitId":"tryyang2001"},"content":"        System.out.println(exerciseList.convertToStringBySpecificDate(","lastModifiedDate":"2021-10-17"},{"lineNumber":111,"author":{"gitId":"tryyang2001"},"content":"                LocalDate.parse(\"17-10-2021\", DateTimeFormatter.ofPattern(\"dd-MM-yyyy\"))));","lastModifiedDate":"2021-10-16"},{"lineNumber":112,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":113,"author":{"gitId":"xingjie99"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"xingjie99":35,"tryyang2001":75,"tlyi":3}},{"path":"src/test/java/seedu/duke/food/FoodListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.food;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"tryyang2001"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"tlyi"},"content":"import seedu.duke.data.item.food.Food;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"tlyi"},"content":"import seedu.duke.data.item.food.FoodList;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"tlyi"},"content":"import seedu.duke.data.item.food.TimePeriod;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"tryyang2001"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-16"},{"lineNumber":9,"author":{"gitId":"tryyang2001"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"tryyang2001"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":12,"author":{"gitId":"tryyang2001"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"tryyang2001"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"tryyang2001"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"tlyi"},"content":"class FoodListTest {","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"tryyang2001"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"tryyang2001"},"content":"    void addFoodUsingFoodClassParameter_foodClassParameter_expectExistsInList() {","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"tryyang2001"},"content":"        FoodList foodList \u003d new FoodList();","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"tryyang2001"},"content":"        foodList.addItem(new Food(\"chicken rice\", 607,","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"tryyang2001"},"content":"                LocalDateTime.parse(\"2021-10-16 1020\", DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"))));","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"tryyang2001"},"content":"        assertEquals(\"chicken rice (607 cal) @ 10:20\",","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"tryyang2001"},"content":"                foodList.getItem(foodList.getSize() - 1).toString());","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"tryyang2001"},"content":"    ","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"tryyang2001"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"tryyang2001"},"content":"    void printNonEmptyFoodList_nonEmptyFoodList_expectCorrectOutputString() {","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"tryyang2001"},"content":"        FoodList foodList \u003d new FoodList();","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"tryyang2001"},"content":"        foodList.addItem(new Food(\"chicken rice\", 607,","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"tryyang2001"},"content":"                LocalDateTime.parse(\"2021-10-16 1020\", DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"))));","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"tryyang2001"},"content":"        foodList.addItem(new Food(\"char kway teow\", 744,","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"tryyang2001"},"content":"                LocalDateTime.parse(\"2021-10-19 1900\", DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"))));","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"tryyang2001"},"content":"        foodList.addItem(new Food(\"yong tau foo\", 536,","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"tryyang2001"},"content":"                LocalDateTime.parse(\"2021-10-17 1450\", DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"))));","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"tryyang2001"},"content":"        foodList.addItem(new Food(\"mcspicy alacarte\", 528,","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"tryyang2001"},"content":"                LocalDateTime.parse(\"2021-10-18 1650\", DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"))));","lastModifiedDate":"2021-10-19"},{"lineNumber":37,"author":{"gitId":"tryyang2001"},"content":"        foodList.addItem(new Food(\"maggie mee\", 276,","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"tryyang2001"},"content":"                LocalDateTime.parse(\"16-10-2021 1020\", DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\"))));","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"tryyang2001"},"content":"        foodList.addItem(new Food(\"yong tau foo\", 536,","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"tryyang2001"},"content":"                LocalDateTime.parse(\"2021-10-17 1450\", DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"))));","lastModifiedDate":"2021-10-19"},{"lineNumber":41,"author":{"gitId":"tryyang2001"},"content":"        foodList.addItem(new Food(\"McDonald\u0027s Medium Fries\", 380,","lastModifiedDate":"2021-10-19"},{"lineNumber":42,"author":{"gitId":"tryyang2001"},"content":"                LocalDateTime.parse(\"16-10-2021 1430\", DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\"))));","lastModifiedDate":"2021-10-19"},{"lineNumber":43,"author":{"gitId":"tryyang2001"},"content":"        foodList.addItem(new Food(\"Starbuck\u0027s Old-fashioned Glazed Donut\", 420,","lastModifiedDate":"2021-10-19"},{"lineNumber":44,"author":{"gitId":"tryyang2001"},"content":"                LocalDateTime.parse(\"16-10-2021 1020\", DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\"))));","lastModifiedDate":"2021-10-19"},{"lineNumber":45,"author":{"gitId":"tryyang2001"},"content":"        foodList.sortList();","lastModifiedDate":"2021-10-19"},{"lineNumber":46,"author":{"gitId":"tryyang2001"},"content":"        System.out.println(foodList.convertToString());","lastModifiedDate":"2021-10-10"},{"lineNumber":47,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":48,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":49,"author":{"gitId":"tryyang2001"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":50,"author":{"gitId":"tryyang2001"},"content":"    void printEmptyFoodList_emptyFoodList_expectEmptyString() {","lastModifiedDate":"2021-10-13"},{"lineNumber":51,"author":{"gitId":"tryyang2001"},"content":"        FoodList foodList \u003d new FoodList();","lastModifiedDate":"2021-10-13"},{"lineNumber":52,"author":{"gitId":"tryyang2001"},"content":"        assertEquals(\"\", foodList.convertToString());","lastModifiedDate":"2021-10-13"},{"lineNumber":53,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":54,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":55,"author":{"gitId":"tryyang2001"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":56,"author":{"gitId":"tryyang2001"},"content":"    void deleteExistingFoodItem_validIndexInput_expectDeleteSuccessful() {","lastModifiedDate":"2021-10-07"},{"lineNumber":57,"author":{"gitId":"tryyang2001"},"content":"        FoodList foodList \u003d new FoodList();","lastModifiedDate":"2021-10-07"},{"lineNumber":58,"author":{"gitId":"tryyang2001"},"content":"        foodList.addItem(new Food(\"chicken rice\", 607,","lastModifiedDate":"2021-10-19"},{"lineNumber":59,"author":{"gitId":"tryyang2001"},"content":"                LocalDateTime.parse(\"2021-10-16 1020\", DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"))));","lastModifiedDate":"2021-10-19"},{"lineNumber":60,"author":{"gitId":"tryyang2001"},"content":"        foodList.addItem(new Food(\"char kway teow\", 744,","lastModifiedDate":"2021-10-19"},{"lineNumber":61,"author":{"gitId":"tryyang2001"},"content":"                LocalDateTime.parse(\"2021-10-19 1900\", DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"))));","lastModifiedDate":"2021-10-19"},{"lineNumber":62,"author":{"gitId":"tryyang2001"},"content":"        foodList.addItem(new Food(\"yong tau foo\", 536,","lastModifiedDate":"2021-10-19"},{"lineNumber":63,"author":{"gitId":"tryyang2001"},"content":"                LocalDateTime.parse(\"2021-10-17 1450\", DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"))));","lastModifiedDate":"2021-10-19"},{"lineNumber":64,"author":{"gitId":"tryyang2001"},"content":"        foodList.addItem(new Food(\"mcspicy alacarte\", 528,","lastModifiedDate":"2021-10-19"},{"lineNumber":65,"author":{"gitId":"tryyang2001"},"content":"                LocalDateTime.parse(\"2021-10-18 1650\", DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"))));","lastModifiedDate":"2021-10-19"},{"lineNumber":66,"author":{"gitId":"tryyang2001"},"content":"        foodList.addItem(new Food(\"maggie mee\", 276,","lastModifiedDate":"2021-10-19"},{"lineNumber":67,"author":{"gitId":"tryyang2001"},"content":"                LocalDateTime.parse(\"16-10-2021 1020\", DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\"))));","lastModifiedDate":"2021-10-19"},{"lineNumber":68,"author":{"gitId":"tryyang2001"},"content":"        foodList.addItem(new Food(\"yong tau foo\", 536,","lastModifiedDate":"2021-10-19"},{"lineNumber":69,"author":{"gitId":"tryyang2001"},"content":"                LocalDateTime.parse(\"2021-10-17 1450\", DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"))));","lastModifiedDate":"2021-10-19"},{"lineNumber":70,"author":{"gitId":"tryyang2001"},"content":"        foodList.addItem(new Food(\"McDonald\u0027s Medium Fries\", 380,","lastModifiedDate":"2021-10-19"},{"lineNumber":71,"author":{"gitId":"tryyang2001"},"content":"                LocalDateTime.parse(\"16-10-2021 1430\", DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\"))));","lastModifiedDate":"2021-10-19"},{"lineNumber":72,"author":{"gitId":"tryyang2001"},"content":"        foodList.addItem(new Food(\"Starbuck\u0027s Old-fashioned Glazed Donut\", 420,","lastModifiedDate":"2021-10-19"},{"lineNumber":73,"author":{"gitId":"tryyang2001"},"content":"                LocalDateTime.parse(\"16-10-2021 1020\", DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\"))));","lastModifiedDate":"2021-10-19"},{"lineNumber":74,"author":{"gitId":"tryyang2001"},"content":"        foodList.sortList();","lastModifiedDate":"2021-10-19"},{"lineNumber":75,"author":{"gitId":"tryyang2001"},"content":"        foodList.deleteItem(1, LocalDateTime.parse(\"16-10-2021 1020\",","lastModifiedDate":"2021-10-19"},{"lineNumber":76,"author":{"gitId":"tryyang2001"},"content":"                DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\")).toLocalDate(),","lastModifiedDate":"2021-10-19"},{"lineNumber":77,"author":{"gitId":"tryyang2001"},"content":"                LocalDateTime.parse(\"16-10-2021 1020\",","lastModifiedDate":"2021-10-19"},{"lineNumber":78,"author":{"gitId":"tryyang2001"},"content":"                        DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\")).toLocalTime());","lastModifiedDate":"2021-10-19"},{"lineNumber":79,"author":{"gitId":"tryyang2001"},"content":"        System.out.println(foodList.convertToString());","lastModifiedDate":"2021-10-18"},{"lineNumber":80,"author":{"gitId":"tryyang2001"},"content":"        assertNotEquals(8, foodList.getSize());","lastModifiedDate":"2021-10-18"},{"lineNumber":81,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":82,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":83,"author":{"gitId":"tryyang2001"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":84,"author":{"gitId":"tryyang2001"},"content":"    void deleteNonExistingFoodItem_invalidIndexInput_expectIndexOutOfBoundException() {","lastModifiedDate":"2021-10-07"},{"lineNumber":85,"author":{"gitId":"tryyang2001"},"content":"        FoodList foodList \u003d new FoodList();","lastModifiedDate":"2021-10-07"},{"lineNumber":86,"author":{"gitId":"tryyang2001"},"content":"        foodList.addItem(new Food(\"chicken rice\", 607,","lastModifiedDate":"2021-10-19"},{"lineNumber":87,"author":{"gitId":"tryyang2001"},"content":"                LocalDateTime.parse(\"2021-10-16 1020\", DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"))));","lastModifiedDate":"2021-10-19"},{"lineNumber":88,"author":{"gitId":"tryyang2001"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e foodList.deleteItem(3));","lastModifiedDate":"2021-10-19"},{"lineNumber":89,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":90,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":91,"author":{"gitId":"tryyang2001"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":92,"author":{"gitId":"tryyang2001"},"content":"    void deleteNegativeIndexFoodItem_negativeIndexInput_expectIndexOutOfBoundException() {","lastModifiedDate":"2021-10-13"},{"lineNumber":93,"author":{"gitId":"tryyang2001"},"content":"        FoodList foodList \u003d new FoodList();","lastModifiedDate":"2021-10-13"},{"lineNumber":94,"author":{"gitId":"tryyang2001"},"content":"        foodList.addItem(new Food(\"chicken rice\", 607,","lastModifiedDate":"2021-10-20"},{"lineNumber":95,"author":{"gitId":"tryyang2001"},"content":"                LocalDateTime.parse(\"2021-10-16 1020\", DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"))));","lastModifiedDate":"2021-10-20"},{"lineNumber":96,"author":{"gitId":"tryyang2001"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e foodList.deleteItem(-1));","lastModifiedDate":"2021-10-19"},{"lineNumber":97,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":98,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":99,"author":{"gitId":"tryyang2001"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":100,"author":{"gitId":"tryyang2001"},"content":"    void deleteNonDigitIndexFoodItem_nonDigitIndexInput_expectNumberFormatException() {","lastModifiedDate":"2021-10-13"},{"lineNumber":101,"author":{"gitId":"tryyang2001"},"content":"        FoodList foodList \u003d new FoodList();","lastModifiedDate":"2021-10-13"},{"lineNumber":102,"author":{"gitId":"tryyang2001"},"content":"        foodList.addItem(new Food(\"chicken rice\", 607,","lastModifiedDate":"2021-10-20"},{"lineNumber":103,"author":{"gitId":"tryyang2001"},"content":"                LocalDateTime.parse(\"2021-10-16 1020\", DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"))));","lastModifiedDate":"2021-10-20"},{"lineNumber":104,"author":{"gitId":"tryyang2001"},"content":"        assertThrows(NumberFormatException.class, () -\u003e foodList.deleteItem(Integer.parseInt(\"a\")));","lastModifiedDate":"2021-10-19"},{"lineNumber":105,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":106,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":107,"author":{"gitId":"tryyang2001"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":108,"author":{"gitId":"tryyang2001"},"content":"    void deleteFromEmptyFoodList_emptyFoodList_expectIndexOutOfBoundException() {","lastModifiedDate":"2021-10-13"},{"lineNumber":109,"author":{"gitId":"tryyang2001"},"content":"        FoodList foodList \u003d new FoodList();","lastModifiedDate":"2021-10-13"},{"lineNumber":110,"author":{"gitId":"tryyang2001"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e foodList.deleteItem(1));","lastModifiedDate":"2021-10-19"},{"lineNumber":111,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":112,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":113,"author":{"gitId":"tryyang2001"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":114,"author":{"gitId":"tryyang2001"},"content":"    void deleteAllFoodItems_callDeleteAllMethod_expectEmptyList() {","lastModifiedDate":"2021-10-07"},{"lineNumber":115,"author":{"gitId":"tryyang2001"},"content":"        FoodList foodList \u003d new FoodList();","lastModifiedDate":"2021-10-07"},{"lineNumber":116,"author":{"gitId":"tryyang2001"},"content":"        foodList.addItem(new Food(\"chicken rice\", 607));","lastModifiedDate":"2021-10-19"},{"lineNumber":117,"author":{"gitId":"tryyang2001"},"content":"        foodList.addItem(new Food(\"yong tau foo\", 536));","lastModifiedDate":"2021-10-19"},{"lineNumber":118,"author":{"gitId":"tryyang2001"},"content":"        foodList.addItem(new Food(\"mcspicy alacarte\", 528));","lastModifiedDate":"2021-10-19"},{"lineNumber":119,"author":{"gitId":"tryyang2001"},"content":"        foodList.addItem(new Food(\"char kway teow\", 744));","lastModifiedDate":"2021-10-19"},{"lineNumber":120,"author":{"gitId":"tryyang2001"},"content":"        foodList.clearList();","lastModifiedDate":"2021-10-19"},{"lineNumber":121,"author":{"gitId":"tryyang2001"},"content":"        assertEquals(0, foodList.getSize());","lastModifiedDate":"2021-10-10"},{"lineNumber":122,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":123,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":124,"author":{"gitId":"tryyang2001"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":125,"author":{"gitId":"tryyang2001"},"content":"    void deleteAllFromEmptyFoodList_emptyFoodList_expectEmptyList() {","lastModifiedDate":"2021-10-13"},{"lineNumber":126,"author":{"gitId":"tryyang2001"},"content":"        FoodList foodList \u003d new FoodList();","lastModifiedDate":"2021-10-13"},{"lineNumber":127,"author":{"gitId":"tryyang2001"},"content":"        foodList.clearList();","lastModifiedDate":"2021-10-19"},{"lineNumber":128,"author":{"gitId":"tryyang2001"},"content":"        assertEquals(0, foodList.getSize());","lastModifiedDate":"2021-10-13"},{"lineNumber":129,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":130,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":131,"author":{"gitId":"tryyang2001"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":132,"author":{"gitId":"tryyang2001"},"content":"    void totalFoodCalories_callTotalCaloriesMethod_expectSumOfFoodCalories() {","lastModifiedDate":"2021-10-13"},{"lineNumber":133,"author":{"gitId":"tryyang2001"},"content":"        FoodList foodList \u003d new FoodList();","lastModifiedDate":"2021-10-13"},{"lineNumber":134,"author":{"gitId":"tryyang2001"},"content":"        foodList.addItem(new Food(\"chicken rice\", 607));","lastModifiedDate":"2021-10-19"},{"lineNumber":135,"author":{"gitId":"tryyang2001"},"content":"        foodList.addItem(new Food(\"yong tau foo\", 536));","lastModifiedDate":"2021-10-19"},{"lineNumber":136,"author":{"gitId":"tryyang2001"},"content":"        foodList.addItem(new Food(\"mcspicy alacarte\", 528));","lastModifiedDate":"2021-10-19"},{"lineNumber":137,"author":{"gitId":"tryyang2001"},"content":"        foodList.addItem(new Food(\"char kway teow\", 744));","lastModifiedDate":"2021-10-19"},{"lineNumber":138,"author":{"gitId":"tryyang2001"},"content":"        assertEquals(2415, foodList.getTotalCalories());","lastModifiedDate":"2021-10-13"},{"lineNumber":139,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":140,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":141,"author":{"gitId":"tryyang2001"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":142,"author":{"gitId":"tryyang2001"},"content":"    void totalFoodCalories_emptyFoodList_expectZeroSum() {","lastModifiedDate":"2021-10-13"},{"lineNumber":143,"author":{"gitId":"tryyang2001"},"content":"        FoodList foodList \u003d new FoodList();","lastModifiedDate":"2021-10-13"},{"lineNumber":144,"author":{"gitId":"tryyang2001"},"content":"        assertEquals(0, foodList.getTotalCalories());","lastModifiedDate":"2021-10-13"},{"lineNumber":145,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":146,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":147,"author":{"gitId":"tryyang2001"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":148,"author":{"gitId":"tryyang2001"},"content":"    void totalFoodCaloriesForSingleDate_oneLocalDateInput_expectSumOfCalorieOnThatDay() {","lastModifiedDate":"2021-10-16"},{"lineNumber":149,"author":{"gitId":"tryyang2001"},"content":"        FoodList foodList \u003d new FoodList();","lastModifiedDate":"2021-10-16"},{"lineNumber":150,"author":{"gitId":"tryyang2001"},"content":"        foodList.addItem(new Food(\"chicken rice\", 607,","lastModifiedDate":"2021-10-19"},{"lineNumber":151,"author":{"gitId":"tryyang2001"},"content":"                LocalDateTime.parse(\"2021-10-16 1020\", DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"))));","lastModifiedDate":"2021-10-19"},{"lineNumber":152,"author":{"gitId":"tryyang2001"},"content":"        foodList.addItem(new Food(\"char kway teow\", 744,","lastModifiedDate":"2021-10-19"},{"lineNumber":153,"author":{"gitId":"tryyang2001"},"content":"                LocalDateTime.parse(\"2021-10-19 1900\", DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"))));","lastModifiedDate":"2021-10-19"},{"lineNumber":154,"author":{"gitId":"tryyang2001"},"content":"        foodList.addItem(new Food(\"yong tau foo\", 536,","lastModifiedDate":"2021-10-19"},{"lineNumber":155,"author":{"gitId":"tryyang2001"},"content":"                LocalDateTime.parse(\"2021-10-17 1450\", DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"))));","lastModifiedDate":"2021-10-19"},{"lineNumber":156,"author":{"gitId":"tryyang2001"},"content":"        foodList.addItem(new Food(\"mcspicy alacarte\", 528,","lastModifiedDate":"2021-10-19"},{"lineNumber":157,"author":{"gitId":"tryyang2001"},"content":"                LocalDateTime.parse(\"2021-10-18 1650\", DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"))));","lastModifiedDate":"2021-10-19"},{"lineNumber":158,"author":{"gitId":"tryyang2001"},"content":"        foodList.addItem(new Food(\"maggie mee\", 276,","lastModifiedDate":"2021-10-19"},{"lineNumber":159,"author":{"gitId":"tryyang2001"},"content":"                LocalDateTime.parse(\"16-10-2021 1020\", DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\"))));","lastModifiedDate":"2021-10-19"},{"lineNumber":160,"author":{"gitId":"tryyang2001"},"content":"        foodList.addItem(new Food(\"McDonald’s Medium Fries\", 380,","lastModifiedDate":"2021-10-19"},{"lineNumber":161,"author":{"gitId":"tryyang2001"},"content":"                LocalDateTime.parse(\"16-10-2021 1430\", DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\"))));","lastModifiedDate":"2021-10-19"},{"lineNumber":162,"author":{"gitId":"tryyang2001"},"content":"        foodList.addItem(new Food(\"Starbuck’s Old-fashioned Glazed Donut\", 420,","lastModifiedDate":"2021-10-19"},{"lineNumber":163,"author":{"gitId":"tryyang2001"},"content":"                LocalDateTime.parse(\"16-10-2021 1020\", DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\"))));","lastModifiedDate":"2021-10-19"},{"lineNumber":164,"author":{"gitId":"tryyang2001"},"content":"        assertEquals(1683, foodList.getTotalCaloriesWithDate(","lastModifiedDate":"2021-10-16"},{"lineNumber":165,"author":{"gitId":"tryyang2001"},"content":"                LocalDate.parse(\"16-10-2021\", DateTimeFormatter.ofPattern(\"dd-MM-yyyy\"))));","lastModifiedDate":"2021-10-16"},{"lineNumber":166,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":167,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":168,"author":{"gitId":"tryyang2001"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":169,"author":{"gitId":"tryyang2001"},"content":"    void printFoodListByOneGivenDate_inputLocalDate_expectFoodListOfThatDayOnly() {","lastModifiedDate":"2021-10-16"},{"lineNumber":170,"author":{"gitId":"tryyang2001"},"content":"        FoodList foodList \u003d new FoodList();","lastModifiedDate":"2021-10-16"},{"lineNumber":171,"author":{"gitId":"tryyang2001"},"content":"        foodList.addItem(new Food(\"chicken rice\", 607,","lastModifiedDate":"2021-10-19"},{"lineNumber":172,"author":{"gitId":"tryyang2001"},"content":"                LocalDateTime.parse(\"2021-10-16 1020\", DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"))));","lastModifiedDate":"2021-10-19"},{"lineNumber":173,"author":{"gitId":"tryyang2001"},"content":"        foodList.addItem(new Food(\"char kway teow\", 744,","lastModifiedDate":"2021-10-19"},{"lineNumber":174,"author":{"gitId":"tryyang2001"},"content":"                LocalDateTime.parse(\"2021-10-19 1900\", DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"))));","lastModifiedDate":"2021-10-19"},{"lineNumber":175,"author":{"gitId":"tryyang2001"},"content":"        foodList.addItem(new Food(\"yong tau foo\", 536,","lastModifiedDate":"2021-10-19"},{"lineNumber":176,"author":{"gitId":"tryyang2001"},"content":"                LocalDateTime.parse(\"2021-10-17 1450\", DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"))));","lastModifiedDate":"2021-10-19"},{"lineNumber":177,"author":{"gitId":"tryyang2001"},"content":"        foodList.addItem(new Food(\"mcspicy alacarte\", 528,","lastModifiedDate":"2021-10-19"},{"lineNumber":178,"author":{"gitId":"tryyang2001"},"content":"                LocalDateTime.parse(\"2021-10-18 1650\", DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"))));","lastModifiedDate":"2021-10-19"},{"lineNumber":179,"author":{"gitId":"tryyang2001"},"content":"        foodList.addItem(new Food(\"maggie mee\", 276,","lastModifiedDate":"2021-10-19"},{"lineNumber":180,"author":{"gitId":"tryyang2001"},"content":"                LocalDateTime.parse(\"16-10-2021 1020\", DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\"))));","lastModifiedDate":"2021-10-19"},{"lineNumber":181,"author":{"gitId":"tryyang2001"},"content":"        foodList.addItem(new Food(\"yong tau foo\", 536,","lastModifiedDate":"2021-10-19"},{"lineNumber":182,"author":{"gitId":"tryyang2001"},"content":"                LocalDateTime.parse(\"2021-10-17 1450\", DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"))));","lastModifiedDate":"2021-10-19"},{"lineNumber":183,"author":{"gitId":"tryyang2001"},"content":"        foodList.addItem(new Food(\"McDonald\u0027s Medium Fries\", 380,","lastModifiedDate":"2021-10-19"},{"lineNumber":184,"author":{"gitId":"tryyang2001"},"content":"                LocalDateTime.parse(\"16-10-2021 1430\", DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\"))));","lastModifiedDate":"2021-10-19"},{"lineNumber":185,"author":{"gitId":"tryyang2001"},"content":"        foodList.addItem(new Food(\"Starbuck\u0027s Old-fashioned Glazed Donut\", 420,","lastModifiedDate":"2021-10-19"},{"lineNumber":186,"author":{"gitId":"tryyang2001"},"content":"                LocalDateTime.parse(\"16-10-2021 1020\", DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\"))));","lastModifiedDate":"2021-10-19"},{"lineNumber":187,"author":{"gitId":"tryyang2001"},"content":"        System.out.println(foodList.convertToStringBySpecificDate(","lastModifiedDate":"2021-10-18"},{"lineNumber":188,"author":{"gitId":"tryyang2001"},"content":"                LocalDate.parse(\"16-10-2021\", DateTimeFormatter.ofPattern(\"dd-MM-yyyy\"))));","lastModifiedDate":"2021-10-16"},{"lineNumber":189,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":190,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":191,"author":{"gitId":"tryyang2001"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":192,"author":{"gitId":"tryyang2001"},"content":"    void printFoodListWithDifferentDateAndTimePeriod_inputDateAndTime_expectFoodListWithDateAndTimePeriodSeparated() {","lastModifiedDate":"2021-10-17"},{"lineNumber":193,"author":{"gitId":"tryyang2001"},"content":"        FoodList foodList \u003d new FoodList();","lastModifiedDate":"2021-10-17"},{"lineNumber":194,"author":{"gitId":"tryyang2001"},"content":"        foodList.addItem(new Food(\"chicken rice\", 607,","lastModifiedDate":"2021-10-19"},{"lineNumber":195,"author":{"gitId":"tryyang2001"},"content":"                LocalDateTime.parse(\"2021-10-16 1320\", DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"))));","lastModifiedDate":"2021-10-19"},{"lineNumber":196,"author":{"gitId":"tryyang2001"},"content":"        foodList.addItem(new Food(\"char kway teow\", 744,","lastModifiedDate":"2021-10-19"},{"lineNumber":197,"author":{"gitId":"tryyang2001"},"content":"                LocalDateTime.parse(\"2021-10-17 1900\", DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"))));","lastModifiedDate":"2021-10-19"},{"lineNumber":198,"author":{"gitId":"tryyang2001"},"content":"        foodList.addItem(new Food(\"yong tau foo\", 536,","lastModifiedDate":"2021-10-19"},{"lineNumber":199,"author":{"gitId":"tryyang2001"},"content":"                LocalDateTime.parse(\"2021-10-17 1450\", DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"))));","lastModifiedDate":"2021-10-19"},{"lineNumber":200,"author":{"gitId":"tryyang2001"},"content":"        foodList.addItem(new Food(\"mcspicy alacarte\", 528,","lastModifiedDate":"2021-10-19"},{"lineNumber":201,"author":{"gitId":"tryyang2001"},"content":"                LocalDateTime.parse(\"2021-10-18 1850\", DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"))));","lastModifiedDate":"2021-10-19"},{"lineNumber":202,"author":{"gitId":"tryyang2001"},"content":"        foodList.addItem(new Food(\"maggie mee\", 276,","lastModifiedDate":"2021-10-19"},{"lineNumber":203,"author":{"gitId":"tryyang2001"},"content":"                LocalDateTime.parse(\"16-10-2021 1020\", DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\"))));","lastModifiedDate":"2021-10-19"},{"lineNumber":204,"author":{"gitId":"tryyang2001"},"content":"        foodList.addItem(new Food(\"yong tau foo\", 536,","lastModifiedDate":"2021-10-19"},{"lineNumber":205,"author":{"gitId":"tryyang2001"},"content":"                LocalDateTime.parse(\"2021-10-17 1450\", DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"))));","lastModifiedDate":"2021-10-19"},{"lineNumber":206,"author":{"gitId":"tryyang2001"},"content":"        foodList.addItem(new Food(\"McDonald\u0027s Medium Fries\", 380,","lastModifiedDate":"2021-10-19"},{"lineNumber":207,"author":{"gitId":"tryyang2001"},"content":"                LocalDateTime.parse(\"16-10-2021 1030\", DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\"))));","lastModifiedDate":"2021-10-19"},{"lineNumber":208,"author":{"gitId":"tryyang2001"},"content":"        foodList.addItem(new Food(\"Starbuck\u0027s Old-fashioned Glazed Donut\", 420,","lastModifiedDate":"2021-10-19"},{"lineNumber":209,"author":{"gitId":"tryyang2001"},"content":"                LocalDateTime.parse(\"17-10-2021 1020\", DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\"))));","lastModifiedDate":"2021-10-19"},{"lineNumber":210,"author":{"gitId":"tryyang2001"},"content":"        foodList.addItem(new Food(\"fish soup\", 300,","lastModifiedDate":"2021-10-19"},{"lineNumber":211,"author":{"gitId":"tryyang2001"},"content":"                LocalDateTime.parse(\"16-10-2021 1920\", DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\"))));","lastModifiedDate":"2021-10-19"},{"lineNumber":212,"author":{"gitId":"tryyang2001"},"content":"        foodList.addItem(new Food(\"nasi lemak\", 430,","lastModifiedDate":"2021-10-19"},{"lineNumber":213,"author":{"gitId":"tryyang2001"},"content":"                LocalDateTime.parse(\"16-10-2021 0120\", DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\"))));","lastModifiedDate":"2021-10-19"},{"lineNumber":214,"author":{"gitId":"tryyang2001"},"content":"        foodList.sortList();","lastModifiedDate":"2021-10-19"},{"lineNumber":215,"author":{"gitId":"tryyang2001"},"content":"        System.out.println(foodList.convertToString());","lastModifiedDate":"2021-10-17"},{"lineNumber":216,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":217,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":218,"author":{"gitId":"tryyang2001"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":219,"author":{"gitId":"tryyang2001"},"content":"    void countSupperWithNonEmptyFoodList_callCountSupperMethod_expectCorrectIntegerSupperCount() {","lastModifiedDate":"2021-10-17"},{"lineNumber":220,"author":{"gitId":"tryyang2001"},"content":"        FoodList foodList \u003d new FoodList();","lastModifiedDate":"2021-10-17"},{"lineNumber":221,"author":{"gitId":"tryyang2001"},"content":"        foodList.addItem(new Food(\"chicken rice\", 607,","lastModifiedDate":"2021-10-19"},{"lineNumber":222,"author":{"gitId":"tryyang2001"},"content":"                LocalDateTime.parse(\"2021-10-16 1320\", DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"))));","lastModifiedDate":"2021-10-19"},{"lineNumber":223,"author":{"gitId":"tryyang2001"},"content":"        foodList.addItem(new Food(\"char kway teow\", 744,","lastModifiedDate":"2021-10-19"},{"lineNumber":224,"author":{"gitId":"tryyang2001"},"content":"                LocalDateTime.parse(\"2021-10-17 1900\", DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"))));","lastModifiedDate":"2021-10-19"},{"lineNumber":225,"author":{"gitId":"tryyang2001"},"content":"        foodList.addItem(new Food(\"yong tau foo\", 536,","lastModifiedDate":"2021-10-19"},{"lineNumber":226,"author":{"gitId":"tryyang2001"},"content":"                LocalDateTime.parse(\"2021-10-17 1450\", DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"))));","lastModifiedDate":"2021-10-19"},{"lineNumber":227,"author":{"gitId":"tryyang2001"},"content":"        foodList.addItem(new Food(\"mcspicy alacarte\", 528,","lastModifiedDate":"2021-10-19"},{"lineNumber":228,"author":{"gitId":"tryyang2001"},"content":"                LocalDateTime.parse(\"2021-10-18 1850\", DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"))));","lastModifiedDate":"2021-10-19"},{"lineNumber":229,"author":{"gitId":"tryyang2001"},"content":"        foodList.addItem(new Food(\"maggie mee\", 276,","lastModifiedDate":"2021-10-19"},{"lineNumber":230,"author":{"gitId":"tryyang2001"},"content":"                LocalDateTime.parse(\"16-10-2021 1020\", DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\"))));","lastModifiedDate":"2021-10-19"},{"lineNumber":231,"author":{"gitId":"tryyang2001"},"content":"        foodList.addItem(new Food(\"yong tau foo\", 536,","lastModifiedDate":"2021-10-19"},{"lineNumber":232,"author":{"gitId":"tryyang2001"},"content":"                LocalDateTime.parse(\"2021-10-17 1450\", DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"))));","lastModifiedDate":"2021-10-19"},{"lineNumber":233,"author":{"gitId":"tryyang2001"},"content":"        foodList.addItem(new Food(\"McDonald\u0027s Medium Fries\", 380,","lastModifiedDate":"2021-10-19"},{"lineNumber":234,"author":{"gitId":"tryyang2001"},"content":"                LocalDateTime.parse(\"16-10-2021 1030\", DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\"))));","lastModifiedDate":"2021-10-19"},{"lineNumber":235,"author":{"gitId":"tryyang2001"},"content":"        foodList.addItem(new Food(\"Starbuck\u0027s Old-fashioned Glazed Donut\", 420,","lastModifiedDate":"2021-10-19"},{"lineNumber":236,"author":{"gitId":"tryyang2001"},"content":"                LocalDateTime.parse(\"17-10-2021 1020\", DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\"))));","lastModifiedDate":"2021-10-19"},{"lineNumber":237,"author":{"gitId":"tryyang2001"},"content":"        foodList.addItem(new Food(\"fish soup\", 300,","lastModifiedDate":"2021-10-19"},{"lineNumber":238,"author":{"gitId":"tryyang2001"},"content":"                LocalDateTime.parse(\"16-10-2021 1920\", DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\"))));","lastModifiedDate":"2021-10-19"},{"lineNumber":239,"author":{"gitId":"tryyang2001"},"content":"        foodList.addItem(new Food(\"nasi lemak\", 430,","lastModifiedDate":"2021-10-19"},{"lineNumber":240,"author":{"gitId":"tryyang2001"},"content":"                LocalDateTime.parse(\"16-10-2021 0120\", DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\"))));","lastModifiedDate":"2021-10-19"},{"lineNumber":241,"author":{"gitId":"tryyang2001"},"content":"        foodList.addItem(new Food(\"cheese chicken burger\", 430,","lastModifiedDate":"2021-10-19"},{"lineNumber":242,"author":{"gitId":"tryyang2001"},"content":"                LocalDateTime.parse(\"18-10-2021 0420\", DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\"))));","lastModifiedDate":"2021-10-19"},{"lineNumber":243,"author":{"gitId":"tryyang2001"},"content":"        assertEquals(2, foodList.getSupperCount());","lastModifiedDate":"2021-10-17"},{"lineNumber":244,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":245,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":246,"author":{"gitId":"tryyang2001"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":247,"author":{"gitId":"tryyang2001"},"content":"    void printFoodListBySpecificDateAndTime_inputDateAndTimePeriod_expectFoodListForTheDateAndTimePeriodOnly() {","lastModifiedDate":"2021-10-17"},{"lineNumber":248,"author":{"gitId":"tryyang2001"},"content":"        FoodList foodList \u003d new FoodList();","lastModifiedDate":"2021-10-17"},{"lineNumber":249,"author":{"gitId":"tryyang2001"},"content":"        foodList.addItem(new Food(\"chicken rice\", 607,","lastModifiedDate":"2021-10-19"},{"lineNumber":250,"author":{"gitId":"tryyang2001"},"content":"                LocalDateTime.parse(\"2021-10-16 1320\", DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"))));","lastModifiedDate":"2021-10-19"},{"lineNumber":251,"author":{"gitId":"tryyang2001"},"content":"        foodList.addItem(new Food(\"char kway teow\", 744,","lastModifiedDate":"2021-10-19"},{"lineNumber":252,"author":{"gitId":"tryyang2001"},"content":"                LocalDateTime.parse(\"2021-10-17 1900\", DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"))));","lastModifiedDate":"2021-10-19"},{"lineNumber":253,"author":{"gitId":"tryyang2001"},"content":"        foodList.addItem(new Food(\"yong tau foo\", 536,","lastModifiedDate":"2021-10-19"},{"lineNumber":254,"author":{"gitId":"tryyang2001"},"content":"                LocalDateTime.parse(\"2021-10-17 1450\", DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"))));","lastModifiedDate":"2021-10-19"},{"lineNumber":255,"author":{"gitId":"tryyang2001"},"content":"        foodList.addItem(new Food(\"mcspicy alacarte\", 528,","lastModifiedDate":"2021-10-19"},{"lineNumber":256,"author":{"gitId":"tryyang2001"},"content":"                LocalDateTime.parse(\"2021-10-18 1850\", DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"))));","lastModifiedDate":"2021-10-19"},{"lineNumber":257,"author":{"gitId":"tryyang2001"},"content":"        foodList.addItem(new Food(\"maggie mee\", 276,","lastModifiedDate":"2021-10-19"},{"lineNumber":258,"author":{"gitId":"tryyang2001"},"content":"                LocalDateTime.parse(\"16-10-2021 1020\", DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\"))));","lastModifiedDate":"2021-10-19"},{"lineNumber":259,"author":{"gitId":"tryyang2001"},"content":"        foodList.addItem(new Food(\"yong tau foo\", 536,","lastModifiedDate":"2021-10-19"},{"lineNumber":260,"author":{"gitId":"tryyang2001"},"content":"                LocalDateTime.parse(\"2021-10-17 1450\", DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"))));","lastModifiedDate":"2021-10-19"},{"lineNumber":261,"author":{"gitId":"tryyang2001"},"content":"        foodList.addItem(new Food(\"McDonald\u0027s Medium Fries\", 380,","lastModifiedDate":"2021-10-19"},{"lineNumber":262,"author":{"gitId":"tryyang2001"},"content":"                LocalDateTime.parse(\"16-10-2021 1030\", DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\"))));","lastModifiedDate":"2021-10-19"},{"lineNumber":263,"author":{"gitId":"tryyang2001"},"content":"        foodList.addItem(new Food(\"Starbuck\u0027s Old-fashioned Glazed Donut\", 420,","lastModifiedDate":"2021-10-19"},{"lineNumber":264,"author":{"gitId":"tryyang2001"},"content":"                LocalDateTime.parse(\"17-10-2021 1020\", DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\"))));","lastModifiedDate":"2021-10-19"},{"lineNumber":265,"author":{"gitId":"tryyang2001"},"content":"        foodList.addItem(new Food(\"fish soup\", 300,","lastModifiedDate":"2021-10-19"},{"lineNumber":266,"author":{"gitId":"tryyang2001"},"content":"                LocalDateTime.parse(\"16-10-2021 1920\", DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\"))));","lastModifiedDate":"2021-10-19"},{"lineNumber":267,"author":{"gitId":"tryyang2001"},"content":"        foodList.addItem(new Food(\"nasi lemak\", 430,","lastModifiedDate":"2021-10-19"},{"lineNumber":268,"author":{"gitId":"tryyang2001"},"content":"                LocalDateTime.parse(\"16-10-2021 0120\", DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\"))));","lastModifiedDate":"2021-10-19"},{"lineNumber":269,"author":{"gitId":"tryyang2001"},"content":"        foodList.addItem(new Food(\"cheese chicken burger\", 430,","lastModifiedDate":"2021-10-19"},{"lineNumber":270,"author":{"gitId":"tryyang2001"},"content":"                LocalDateTime.parse(\"18-10-2021 0420\", DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\"))));","lastModifiedDate":"2021-10-19"},{"lineNumber":271,"author":{"gitId":"tryyang2001"},"content":"        foodList.sortList();","lastModifiedDate":"2021-10-19"},{"lineNumber":272,"author":{"gitId":"tryyang2001"},"content":"        System.out.println(foodList.convertToStringBySpecificDateAndTime(","lastModifiedDate":"2021-10-17"},{"lineNumber":273,"author":{"gitId":"tryyang2001"},"content":"                LocalDate.parse(\"16-10-2021\", DateTimeFormatter.ofPattern(\"dd-MM-yyyy\")),","lastModifiedDate":"2021-10-17"},{"lineNumber":274,"author":{"gitId":"tryyang2001"},"content":"                TimePeriod.Morning));","lastModifiedDate":"2021-10-17"},{"lineNumber":275,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":276,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":277,"author":{"gitId":"tryyang2001"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":278,"author":{"gitId":"tryyang2001"},"content":"    void printFoodListBySpecificDateWithEmptyFoodList_emptyFoodList_expectErrorMessage() {","lastModifiedDate":"2021-10-17"},{"lineNumber":279,"author":{"gitId":"tryyang2001"},"content":"        FoodList foodList \u003d new FoodList();","lastModifiedDate":"2021-10-17"},{"lineNumber":280,"author":{"gitId":"tryyang2001"},"content":"        foodList.addItem(new Food(\"chicken rice\", 607,","lastModifiedDate":"2021-10-19"},{"lineNumber":281,"author":{"gitId":"tryyang2001"},"content":"                LocalDateTime.parse(\"17-10-2021 2359\", DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\"))));","lastModifiedDate":"2021-10-19"},{"lineNumber":282,"author":{"gitId":"tryyang2001"},"content":"        assertEquals(\"There is no food item found by the given date\", foodList.convertToStringBySpecificDate(","lastModifiedDate":"2021-10-18"},{"lineNumber":283,"author":{"gitId":"tryyang2001"},"content":"                LocalDate.parse(\"16-10-2021\", DateTimeFormatter.ofPattern(\"dd-MM-yyyy\"))));","lastModifiedDate":"2021-10-17"},{"lineNumber":284,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":285,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":286,"author":{"gitId":"tryyang2001"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":287,"author":{"gitId":"tryyang2001"},"content":"    void printFoodListBySpecificDateAndTimePeriodWithEmptyFoodList_emptyFoodList_expectErrorMessage() {","lastModifiedDate":"2021-10-17"},{"lineNumber":288,"author":{"gitId":"tryyang2001"},"content":"        FoodList foodList \u003d new FoodList();","lastModifiedDate":"2021-10-17"},{"lineNumber":289,"author":{"gitId":"tryyang2001"},"content":"        foodList.addItem(new Food(\"chicken rice\", 607,","lastModifiedDate":"2021-10-19"},{"lineNumber":290,"author":{"gitId":"tryyang2001"},"content":"                LocalDateTime.parse(\"17-10-2021 2359\", DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\"))));","lastModifiedDate":"2021-10-19"},{"lineNumber":291,"author":{"gitId":"tryyang2001"},"content":"        assertEquals(\"There is no food item found by the given date and time period\",","lastModifiedDate":"2021-10-17"},{"lineNumber":292,"author":{"gitId":"tryyang2001"},"content":"                foodList.convertToStringBySpecificDateAndTime(","lastModifiedDate":"2021-10-17"},{"lineNumber":293,"author":{"gitId":"tryyang2001"},"content":"                        LocalDate.parse(\"16-10-2021\", DateTimeFormatter.ofPattern(\"dd-MM-yyyy\")), TimePeriod.Morning));","lastModifiedDate":"2021-10-17"},{"lineNumber":294,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":295,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":296,"author":{"gitId":"tryyang2001"},"content":"    @Test","lastModifiedDate":"2021-10-26"},{"lineNumber":297,"author":{"gitId":"tryyang2001"},"content":"    void addItemFromOtherNonEmptyFoodList_callAddAllMethod_expectSizeIncrease() {","lastModifiedDate":"2021-10-26"},{"lineNumber":298,"author":{"gitId":"tryyang2001"},"content":"        FoodList foodList \u003d new FoodList();","lastModifiedDate":"2021-10-26"},{"lineNumber":299,"author":{"gitId":"tryyang2001"},"content":"        foodList.addItem(new Food(\"chicken rice\", 607,","lastModifiedDate":"2021-10-26"},{"lineNumber":300,"author":{"gitId":"tryyang2001"},"content":"                LocalDateTime.parse(\"25-10-2021 2359\", DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\"))));","lastModifiedDate":"2021-10-26"},{"lineNumber":301,"author":{"gitId":"tryyang2001"},"content":"        foodList.addItem(new Food(\"char kway teow\", 744,","lastModifiedDate":"2021-10-26"},{"lineNumber":302,"author":{"gitId":"tryyang2001"},"content":"                LocalDateTime.parse(\"2021-10-26 1900\", DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"))));","lastModifiedDate":"2021-10-26"},{"lineNumber":303,"author":{"gitId":"tryyang2001"},"content":"        foodList.addItem(new Food(\"yong tau foo\", 536,","lastModifiedDate":"2021-10-26"},{"lineNumber":304,"author":{"gitId":"tryyang2001"},"content":"                LocalDateTime.parse(\"2021-10-17 1450\", DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"))));","lastModifiedDate":"2021-10-26"},{"lineNumber":305,"author":{"gitId":"tryyang2001"},"content":"        foodList.addItem(new Food(\"chicken rice\", 607,","lastModifiedDate":"2021-10-26"},{"lineNumber":306,"author":{"gitId":"tryyang2001"},"content":"                LocalDateTime.parse(\"23-10-2021 2359\", DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\"))));","lastModifiedDate":"2021-10-26"},{"lineNumber":307,"author":{"gitId":"tryyang2001"},"content":"        foodList.addItem(new Food(\"char kway teow\", 744,","lastModifiedDate":"2021-10-26"},{"lineNumber":308,"author":{"gitId":"tryyang2001"},"content":"                LocalDateTime.parse(\"2021-10-18 1900\", DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"))));","lastModifiedDate":"2021-10-26"},{"lineNumber":309,"author":{"gitId":"tryyang2001"},"content":"        FoodList subList \u003d new FoodList();","lastModifiedDate":"2021-10-26"},{"lineNumber":310,"author":{"gitId":"tryyang2001"},"content":"        subList.addItem(new Food(\"nasi lemak\", 430,","lastModifiedDate":"2021-10-26"},{"lineNumber":311,"author":{"gitId":"tryyang2001"},"content":"                LocalDateTime.parse(\"16-10-2021 0120\", DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\"))));","lastModifiedDate":"2021-10-26"},{"lineNumber":312,"author":{"gitId":"tryyang2001"},"content":"        subList.addItem(new Food(\"cheese chicken burger\", 430,","lastModifiedDate":"2021-10-26"},{"lineNumber":313,"author":{"gitId":"tryyang2001"},"content":"                LocalDateTime.parse(\"18-10-2021 0420\", DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\"))));","lastModifiedDate":"2021-10-26"},{"lineNumber":314,"author":{"gitId":"tryyang2001"},"content":"        foodList.addAll(subList);","lastModifiedDate":"2021-10-26"},{"lineNumber":315,"author":{"gitId":"tryyang2001"},"content":"        System.out.println(foodList.convertToString());","lastModifiedDate":"2021-10-26"},{"lineNumber":316,"author":{"gitId":"tryyang2001"},"content":"        assertEquals(4, foodList.getSize());","lastModifiedDate":"2021-10-26"},{"lineNumber":317,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":318,"author":{"gitId":"tryyang2001"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"tryyang2001":313,"tlyi":5}},{"path":"src/test/java/seedu/duke/logic/parser/ParserManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.logic.parser;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"tlyi"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"tlyi"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"tlyi"},"content":"import seedu.duke.logic.commands.AddExerciseBankCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"tlyi"},"content":"import seedu.duke.logic.commands.AddExerciseCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"tlyi"},"content":"import seedu.duke.logic.commands.AddFoodBankCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"tlyi"},"content":"import seedu.duke.logic.commands.AddFoodCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"tlyi"},"content":"import seedu.duke.logic.commands.ByeCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"tlyi"},"content":"import seedu.duke.logic.commands.CalculateBmiCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"tlyi"},"content":"import seedu.duke.logic.commands.CalculateBmiWithProfileCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"tlyi"},"content":"import seedu.duke.logic.commands.Command;","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"tlyi"},"content":"import seedu.duke.logic.commands.HelpCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"tlyi"},"content":"import seedu.duke.logic.commands.InvalidCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"tlyi"},"content":"import seedu.duke.logic.commands.OverviewCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"tlyi"},"content":"import seedu.duke.logic.commands.ProfileUpdateCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"tlyi"},"content":"import seedu.duke.logic.commands.ViewExerciseBankCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"tlyi"},"content":"import seedu.duke.logic.commands.ViewExerciseListCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"tlyi"},"content":"import seedu.duke.logic.commands.ViewFoodBankCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"tlyi"},"content":"import seedu.duke.logic.commands.ViewFoodListCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"tlyi"},"content":"import seedu.duke.logic.commands.ViewFutureExerciseListCommand;","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"tlyi"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"tlyi"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":26,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"tlyi"},"content":"class ParserManagerTest {","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"tlyi"},"content":"    private ParserManager parser;","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"tlyi"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"tlyi"},"content":"    public void setUp() {","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"tlyi"},"content":"        parser \u003d new ParserManager();","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"tlyi"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"tlyi"},"content":"    void parseCommand_invalidCommandWord_commandDoesNotExistMessage() {","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"tlyi"},"content":"        parseAndAssertIncorrectWithMessage(ParserMessages.MESSAGE_ERROR_COMMAND_DOES_NOT_EXIST,","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"tlyi"},"content":"                \"potato\", \"hi\");","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"tlyi"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":43,"author":{"gitId":"tlyi"},"content":"    void parseCommand_containsTextFileDelimiter_illegalCharacterMessage() {","lastModifiedDate":"2021-10-13"},{"lineNumber":44,"author":{"gitId":"tlyi"},"content":"        parseAndAssertIncorrectWithMessage(ParserMessages.MESSAGE_ERROR_ILLEGAL_CHARACTER,","lastModifiedDate":"2021-10-21"},{"lineNumber":45,"author":{"gitId":"tlyi"},"content":"                \"potato | as\", \"add |\", \"name h|o\");","lastModifiedDate":"2021-10-21"},{"lineNumber":46,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":47,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":48,"author":{"gitId":"tlyi"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":49,"author":{"gitId":"tlyi"},"content":"    void parseAddCommand_correctInput_addCommand() {","lastModifiedDate":"2021-10-11"},{"lineNumber":50,"author":{"gitId":"tlyi"},"content":"        parseAndAssertCommandType(\"add f/potato c/20\", AddFoodCommand.class);","lastModifiedDate":"2021-10-11"},{"lineNumber":51,"author":{"gitId":"tlyi"},"content":"        parseAndAssertCommandType(\"aDD c/20 f/potato\", AddFoodCommand.class);","lastModifiedDate":"2021-10-11"},{"lineNumber":52,"author":{"gitId":"tlyi"},"content":"        parseAndAssertCommandType(\"add e/potato c/20\", AddExerciseCommand.class);","lastModifiedDate":"2021-10-11"},{"lineNumber":53,"author":{"gitId":"tlyi"},"content":"        parseAndAssertCommandType(\"aDD c/20 e/potato\", AddExerciseCommand.class);","lastModifiedDate":"2021-10-11"},{"lineNumber":54,"author":{"gitId":"tlyi"},"content":"        parseAndAssertCommandType(\"add fbank/potato c/20\", AddFoodBankCommand.class);","lastModifiedDate":"2021-10-19"},{"lineNumber":55,"author":{"gitId":"tlyi"},"content":"        parseAndAssertCommandType(\"add ebank/potato c/20\", AddExerciseBankCommand.class);","lastModifiedDate":"2021-10-19"},{"lineNumber":56,"author":{"gitId":"tlyi"},"content":"        parseAndAssertCommandType(\"add c/20 fbank/potato\", AddFoodBankCommand.class);","lastModifiedDate":"2021-10-19"},{"lineNumber":57,"author":{"gitId":"tlyi"},"content":"        parseAndAssertCommandType(\"add c/20 ebank/potato\", AddExerciseBankCommand.class);","lastModifiedDate":"2021-10-19"},{"lineNumber":58,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":59,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":60,"author":{"gitId":"tlyi"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":61,"author":{"gitId":"tlyi"},"content":"    void parseAddCommand_itemTypeNotSpecified_invalidCommand() {","lastModifiedDate":"2021-10-19"},{"lineNumber":62,"author":{"gitId":"tlyi"},"content":"        parseAndAssertCommandType(\"add\", InvalidCommand.class);","lastModifiedDate":"2021-10-19"},{"lineNumber":63,"author":{"gitId":"tlyi"},"content":"        parseAndAssertCommandType(\"add a/\", InvalidCommand.class);","lastModifiedDate":"2021-10-19"},{"lineNumber":64,"author":{"gitId":"tlyi"},"content":"        parseAndAssertCommandType(\"add a\", InvalidCommand.class);","lastModifiedDate":"2021-10-19"},{"lineNumber":65,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":66,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":67,"author":{"gitId":"tlyi"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":68,"author":{"gitId":"tlyi"},"content":"    void parseAddCommand_nameNotGiven_invalidCommand() {","lastModifiedDate":"2021-10-11"},{"lineNumber":69,"author":{"gitId":"tlyi"},"content":"        parseAndAssertCommandType(\"add f/ c/120\", InvalidCommand.class);","lastModifiedDate":"2021-10-11"},{"lineNumber":70,"author":{"gitId":"tlyi"},"content":"        parseAndAssertCommandType(\"add e/ c/120\", InvalidCommand.class);","lastModifiedDate":"2021-10-11"},{"lineNumber":71,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":72,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":73,"author":{"gitId":"tlyi"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":74,"author":{"gitId":"tlyi"},"content":"    void parseAddCommand_caloriesNotANumber_caloriesNotNumberMessage() {","lastModifiedDate":"2021-10-11"},{"lineNumber":75,"author":{"gitId":"tlyi"},"content":"        parseAndAssertIncorrectWithMessage(ParserMessages.MESSAGE_ERROR_INVALID_CALORIES_INFO,","lastModifiedDate":"2021-10-21"},{"lineNumber":76,"author":{"gitId":"tlyi"},"content":"                \"add f/potato c/potato\", \"add e/hiit c/potato\");","lastModifiedDate":"2021-10-11"},{"lineNumber":77,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":78,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":79,"author":{"gitId":"tlyi"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":80,"author":{"gitId":"tlyi"},"content":"    void parseByeCommand_correctInput_byeCommand() {","lastModifiedDate":"2021-10-13"},{"lineNumber":81,"author":{"gitId":"tlyi"},"content":"        parseAndAssertCommandType(\"bye\", ByeCommand.class);","lastModifiedDate":"2021-10-13"},{"lineNumber":82,"author":{"gitId":"tlyi"},"content":"        parseAndAssertCommandType(\"ByE\", ByeCommand.class);","lastModifiedDate":"2021-10-13"},{"lineNumber":83,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":84,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":85,"author":{"gitId":"tlyi"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":86,"author":{"gitId":"tlyi"},"content":"    void parseCalculateBmiWithProfileCommand_correctInput_calculateBmiWithProfileCommand() {","lastModifiedDate":"2021-10-13"},{"lineNumber":87,"author":{"gitId":"tlyi"},"content":"        parseAndAssertCommandType(\"bmi\", CalculateBmiWithProfileCommand.class);","lastModifiedDate":"2021-10-13"},{"lineNumber":88,"author":{"gitId":"tlyi"},"content":"        parseAndAssertCommandType(\"BMI\", CalculateBmiWithProfileCommand.class);","lastModifiedDate":"2021-10-13"},{"lineNumber":89,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":90,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":91,"author":{"gitId":"tlyi"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":92,"author":{"gitId":"tlyi"},"content":"    void parseCalculateBmiCommand_correctInput_calculateBmiCommand() {","lastModifiedDate":"2021-10-13"},{"lineNumber":93,"author":{"gitId":"tlyi"},"content":"        parseAndAssertCommandType(\"bmi h/50 w/20\", CalculateBmiCommand.class);","lastModifiedDate":"2021-10-13"},{"lineNumber":94,"author":{"gitId":"tlyi"},"content":"        parseAndAssertCommandType(\"BMI w/20 h/50\", CalculateBmiCommand.class);","lastModifiedDate":"2021-10-13"},{"lineNumber":95,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":96,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":97,"author":{"gitId":"tlyi"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":98,"author":{"gitId":"tlyi"},"content":"    void parseCalculateBmiCommand_parametersNotGiven_invalidCommand() {","lastModifiedDate":"2021-10-13"},{"lineNumber":99,"author":{"gitId":"tlyi"},"content":"        parseAndAssertCommandType(\"bmi w/20\", InvalidCommand.class);","lastModifiedDate":"2021-10-13"},{"lineNumber":100,"author":{"gitId":"tlyi"},"content":"        parseAndAssertCommandType(\"bmi h/20\", InvalidCommand.class);","lastModifiedDate":"2021-10-13"},{"lineNumber":101,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":102,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":103,"author":{"gitId":"tlyi"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":104,"author":{"gitId":"tlyi"},"content":"    void parseCalculateBmiCommand_parametersInvalid_errorMessage() {","lastModifiedDate":"2021-10-14"},{"lineNumber":105,"author":{"gitId":"tlyi"},"content":"        parseAndAssertIncorrectWithMessage(","lastModifiedDate":"2021-10-19"},{"lineNumber":106,"author":{"gitId":"tlyi"},"content":"                String.format(ParserMessages.MESSAGE_ERROR_NOT_A_NUMBER, \"height\"),","lastModifiedDate":"2021-10-21"},{"lineNumber":107,"author":{"gitId":"tlyi"},"content":"                \"BMI w/20 h/potato\");","lastModifiedDate":"2021-10-19"},{"lineNumber":108,"author":{"gitId":"tlyi"},"content":"        parseAndAssertIncorrectWithMessage(","lastModifiedDate":"2021-10-19"},{"lineNumber":109,"author":{"gitId":"tlyi"},"content":"                String.format(ParserMessages.MESSAGE_ERROR_NOT_A_NUMBER, \"weight\"),","lastModifiedDate":"2021-10-21"},{"lineNumber":110,"author":{"gitId":"tlyi"},"content":"                \"BMI w/potato h/20\");","lastModifiedDate":"2021-10-19"},{"lineNumber":111,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":112,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":113,"author":{"gitId":"tlyi"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":114,"author":{"gitId":"tlyi"},"content":"    void parseDeleteCommand_itemTypeNotSpecified_invalidCommand() {","lastModifiedDate":"2021-10-19"},{"lineNumber":115,"author":{"gitId":"tlyi"},"content":"        parseAndAssertCommandType(\"delete\", InvalidCommand.class);","lastModifiedDate":"2021-10-19"},{"lineNumber":116,"author":{"gitId":"tlyi"},"content":"        parseAndAssertCommandType(\"delete a/\", InvalidCommand.class);","lastModifiedDate":"2021-10-19"},{"lineNumber":117,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":118,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":119,"author":{"gitId":"tlyi"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":120,"author":{"gitId":"tlyi"},"content":"    void parseDeleteCommand_itemNumInvalid_invalidCommand() {","lastModifiedDate":"2021-10-14"},{"lineNumber":121,"author":{"gitId":"tlyi"},"content":"        parseAndAssertCommandType(\"delete e/ \", InvalidCommand.class);","lastModifiedDate":"2021-10-14"},{"lineNumber":122,"author":{"gitId":"tlyi"},"content":"        parseAndAssertCommandType(\"delete f/\", InvalidCommand.class);","lastModifiedDate":"2021-10-14"},{"lineNumber":123,"author":{"gitId":"tlyi"},"content":"        parseAndAssertCommandType(\"delete f/potato\", InvalidCommand.class);","lastModifiedDate":"2021-10-14"},{"lineNumber":124,"author":{"gitId":"tlyi"},"content":"        parseAndAssertCommandType(\"delete e/potato\", InvalidCommand.class);","lastModifiedDate":"2021-10-14"},{"lineNumber":125,"author":{"gitId":"tlyi"},"content":"        parseAndAssertCommandType(\"delete fbank/ \", InvalidCommand.class);","lastModifiedDate":"2021-10-19"},{"lineNumber":126,"author":{"gitId":"tlyi"},"content":"        parseAndAssertCommandType(\"delete ebank/\", InvalidCommand.class);","lastModifiedDate":"2021-10-19"},{"lineNumber":127,"author":{"gitId":"tlyi"},"content":"        parseAndAssertCommandType(\"delete fbank/potato\", InvalidCommand.class);","lastModifiedDate":"2021-10-19"},{"lineNumber":128,"author":{"gitId":"tlyi"},"content":"        parseAndAssertCommandType(\"delete ebank/potato\", InvalidCommand.class);","lastModifiedDate":"2021-10-19"},{"lineNumber":129,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":130,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":131,"author":{"gitId":"tlyi"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":132,"author":{"gitId":"tlyi"},"content":"    void parseHelpCommand_correctInput_helpCommand() {","lastModifiedDate":"2021-10-14"},{"lineNumber":133,"author":{"gitId":"tlyi"},"content":"        parseAndAssertCommandType(\"help\", HelpCommand.class);","lastModifiedDate":"2021-10-14"},{"lineNumber":134,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":135,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":136,"author":{"gitId":"tlyi"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":137,"author":{"gitId":"tlyi"},"content":"    void parseOverviewCommand_correctInput_overviewCommand() {","lastModifiedDate":"2021-10-14"},{"lineNumber":138,"author":{"gitId":"tlyi"},"content":"        parseAndAssertCommandType(\"overview\", OverviewCommand.class);","lastModifiedDate":"2021-10-14"},{"lineNumber":139,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":140,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":141,"author":{"gitId":"tlyi"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":142,"author":{"gitId":"tlyi"},"content":"    void parseProfileUpdateCommand_correctInput_ProfileCreateCommand() {","lastModifiedDate":"2021-10-19"},{"lineNumber":143,"author":{"gitId":"weidak"},"content":"        parseAndAssertCommandType(\"profile n/hello w/50 h/80 g/50 a/23 s/F x/2\", ProfileUpdateCommand.class);","lastModifiedDate":"2021-10-20"},{"lineNumber":144,"author":{"gitId":"weidak"},"content":"        parseAndAssertCommandType(\"profile g/100 w/50 h/80 n/hi potato a/23 s/F x/2\", ProfileUpdateCommand.class);","lastModifiedDate":"2021-10-20"},{"lineNumber":145,"author":{"gitId":"weidak"},"content":"        parseAndAssertCommandType(\"profile h/50 n/hello potato g/20 w/20 a/23 s/F x/2\", ProfileUpdateCommand.class);","lastModifiedDate":"2021-10-20"},{"lineNumber":146,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":147,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":148,"author":{"gitId":"tlyi"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":149,"author":{"gitId":"tlyi"},"content":"    void parseProfileCreateCommand_parametersNotGiven_invalidCommand() {","lastModifiedDate":"2021-10-19"},{"lineNumber":150,"author":{"gitId":"tlyi"},"content":"        parseAndAssertCommandType(\"profile n/ \", InvalidCommand.class);","lastModifiedDate":"2021-10-19"},{"lineNumber":151,"author":{"gitId":"tlyi"},"content":"        parseAndAssertCommandType(\"profile h/\", InvalidCommand.class);","lastModifiedDate":"2021-10-19"},{"lineNumber":152,"author":{"gitId":"tlyi"},"content":"        parseAndAssertCommandType(\"profile w/\", InvalidCommand.class);","lastModifiedDate":"2021-10-19"},{"lineNumber":153,"author":{"gitId":"tlyi"},"content":"        parseAndAssertCommandType(\"profile n/ h/\", InvalidCommand.class);","lastModifiedDate":"2021-10-19"},{"lineNumber":154,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":155,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":156,"author":{"gitId":"tlyi"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":157,"author":{"gitId":"tlyi"},"content":"    void parseProfileCreateCommand_parametersInvalid_tooManyDelimitersMessage() {","lastModifiedDate":"2021-10-19"},{"lineNumber":158,"author":{"gitId":"tlyi"},"content":"        parseAndAssertIncorrectWithMessage(ParserMessages.MESSAGE_ERROR_TOO_MANY_DELIMITERS,\"profile n/hi n/hello\");","lastModifiedDate":"2021-10-21"},{"lineNumber":159,"author":{"gitId":"tlyi"},"content":"        parseAndAssertIncorrectWithMessage(ParserMessages.MESSAGE_ERROR_TOO_MANY_DELIMITERS,\"profile n/h/i n/hello\");","lastModifiedDate":"2021-10-21"},{"lineNumber":160,"author":{"gitId":"tlyi"},"content":"        parseAndAssertIncorrectWithMessage(ParserMessages.MESSAGE_ERROR_TOO_MANY_DELIMITERS,\"profile n/h/i z/hello\");","lastModifiedDate":"2021-10-21"},{"lineNumber":161,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":162,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":163,"author":{"gitId":"tlyi"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":164,"author":{"gitId":"tlyi"},"content":"    void parseViewCommand_correctInput_viewCommand() {","lastModifiedDate":"2021-10-14"},{"lineNumber":165,"author":{"gitId":"tlyi"},"content":"        parseAndAssertCommandType(\"view e/\", ViewExerciseListCommand.class);","lastModifiedDate":"2021-10-14"},{"lineNumber":166,"author":{"gitId":"tlyi"},"content":"        parseAndAssertCommandType(\"view f/\", ViewFoodListCommand.class);","lastModifiedDate":"2021-10-14"},{"lineNumber":167,"author":{"gitId":"tlyi"},"content":"        parseAndAssertCommandType(\"view fbank/\", ViewFoodBankCommand.class);","lastModifiedDate":"2021-10-19"},{"lineNumber":168,"author":{"gitId":"tlyi"},"content":"        parseAndAssertCommandType(\"view ebank/\", ViewExerciseBankCommand.class);","lastModifiedDate":"2021-10-19"},{"lineNumber":169,"author":{"gitId":"tlyi"},"content":"        parseAndAssertCommandType(\"view u/\", ViewFutureExerciseListCommand.class);","lastModifiedDate":"2021-10-27"},{"lineNumber":170,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":171,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":172,"author":{"gitId":"tlyi"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":173,"author":{"gitId":"tlyi"},"content":"    void parseViewCommand_itemTypeNotSpecified_invalidCommand() {","lastModifiedDate":"2021-10-19"},{"lineNumber":174,"author":{"gitId":"tlyi"},"content":"        parseAndAssertCommandType(\"view a/\", InvalidCommand.class);","lastModifiedDate":"2021-10-19"},{"lineNumber":175,"author":{"gitId":"tlyi"},"content":"        parseAndAssertCommandType(\"view a\", InvalidCommand.class);","lastModifiedDate":"2021-10-19"},{"lineNumber":176,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":177,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":178,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":179,"author":{"gitId":"tlyi"},"content":"    /*","lastModifiedDate":"2021-10-11"},{"lineNumber":180,"author":{"gitId":"tlyi"},"content":"     * Utility methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-11"},{"lineNumber":181,"author":{"gitId":"tlyi"},"content":"     * Adapted from AddressBook-Level2","lastModifiedDate":"2021-10-11"},{"lineNumber":182,"author":{"gitId":"tlyi"},"content":"     * https://github.com/se-edu/addressbook-level2/blob/master/test/java/seedu/addressbook/parser/ParserTest.java","lastModifiedDate":"2021-10-11"},{"lineNumber":183,"author":{"gitId":"tlyi"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":184,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":185,"author":{"gitId":"tlyi"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":186,"author":{"gitId":"tlyi"},"content":"     * Asserts that parsing the given inputs will return IncorrectCommand with the given feedback message.","lastModifiedDate":"2021-10-11"},{"lineNumber":187,"author":{"gitId":"tlyi"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":188,"author":{"gitId":"tlyi"},"content":"    private void parseAndAssertIncorrectWithMessage(String errorMessage, String... inputs) {","lastModifiedDate":"2021-10-11"},{"lineNumber":189,"author":{"gitId":"tlyi"},"content":"        for (String input : inputs) {","lastModifiedDate":"2021-10-11"},{"lineNumber":190,"author":{"gitId":"tlyi"},"content":"            final InvalidCommand result \u003d parseAndAssertCommandType(input, InvalidCommand.class);","lastModifiedDate":"2021-10-11"},{"lineNumber":191,"author":{"gitId":"tlyi"},"content":"            assertEquals(result.errorMessage, errorMessage);","lastModifiedDate":"2021-10-11"},{"lineNumber":192,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":193,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":194,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":195,"author":{"gitId":"tlyi"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":196,"author":{"gitId":"tlyi"},"content":"     * Parses input and asserts the class/type of the returned command object.","lastModifiedDate":"2021-10-11"},{"lineNumber":197,"author":{"gitId":"tlyi"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":198,"author":{"gitId":"tlyi"},"content":"     * @param input                to be parsed","lastModifiedDate":"2021-10-11"},{"lineNumber":199,"author":{"gitId":"tlyi"},"content":"     * @param expectedCommandClass expected class of returned command","lastModifiedDate":"2021-10-11"},{"lineNumber":200,"author":{"gitId":"tlyi"},"content":"     * @return the parsed command object","lastModifiedDate":"2021-10-11"},{"lineNumber":201,"author":{"gitId":"tlyi"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":202,"author":{"gitId":"tlyi"},"content":"    private \u003cT extends Command\u003e T parseAndAssertCommandType(String input, Class\u003cT\u003e expectedCommandClass) {","lastModifiedDate":"2021-10-11"},{"lineNumber":203,"author":{"gitId":"tlyi"},"content":"        final Command result \u003d parser.parseCommand(input);","lastModifiedDate":"2021-10-11"},{"lineNumber":204,"author":{"gitId":"tlyi"},"content":"        assertTrue(result.getClass().isAssignableFrom(expectedCommandClass));","lastModifiedDate":"2021-10-11"},{"lineNumber":205,"author":{"gitId":"tlyi"},"content":"        return (T) result;","lastModifiedDate":"2021-10-11"},{"lineNumber":206,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":207,"author":{"gitId":"tlyi"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"weidak":3,"tryyang2001":1,"tlyi":203}},{"path":"src/test/java/seedu/duke/ui/StatisticsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tttyyzzz"},"content":"package seedu.duke.ui;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"tttyyzzz"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"tttyyzzz"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"tlyi"},"content":"import seedu.duke.data.item.exercise.ExerciseList;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"tlyi"},"content":"import seedu.duke.data.item.food.FoodList;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"tlyi"},"content":"import seedu.duke.data.profile.Profile;","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"tttyyzzz"},"content":"import seedu.duke.data.profile.attributes.ActivityFactor;","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"tttyyzzz"},"content":"import seedu.duke.data.profile.attributes.Age;","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"tttyyzzz"},"content":"import seedu.duke.data.profile.attributes.Gender;","lastModifiedDate":"2021-10-26"},{"lineNumber":11,"author":{"gitId":"tttyyzzz"},"content":"import seedu.duke.data.profile.attributes.Height;","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"tttyyzzz"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"tttyyzzz"},"content":"class StatisticsTest {","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"tttyyzzz"},"content":"    private FoodList foodItems;","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"tttyyzzz"},"content":"    private ExerciseList exerciseItems;","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"tttyyzzz"},"content":"    private Profile profile;","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"tttyyzzz"},"content":"    Statistics stats \u003d new Statistics(new FoodList(), new ExerciseList(),new Profile());","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"tttyyzzz"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"tttyyzzz"},"content":"    void printCalorieResult_netCaloriesAndCalorieGoal_messages() {","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"tttyyzzz"},"content":"        int caloriesGoal \u003d 5000;","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"tttyyzzz"},"content":"        int foodCalories \u003d 3000;","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"tttyyzzz"},"content":"        int exerciseCalories \u003d 2000;","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"tttyyzzz"},"content":"        int netCalories \u003d foodCalories - exerciseCalories;","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"tttyyzzz"},"content":"        String message \u003d stats.printCaloriesMessage(netCalories, caloriesGoal);","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"tttyyzzz"},"content":"        assertEquals(\"You are 4000 cal away from your goal\", message);","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"tttyyzzz"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"tttyyzzz"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":33,"author":{"gitId":"tttyyzzz"},"content":"    void printCalories_foodCaloriesExerciseCaloriesAndCalorieGoal_messageArray() {","lastModifiedDate":"2021-10-13"},{"lineNumber":34,"author":{"gitId":"tttyyzzz"},"content":"        this.profile \u003d new Profile();","lastModifiedDate":"2021-10-26"},{"lineNumber":35,"author":{"gitId":"tttyyzzz"},"content":"        profile.setProfileAge(new Age(12));","lastModifiedDate":"2021-10-26"},{"lineNumber":36,"author":{"gitId":"tttyyzzz"},"content":"        profile.setProfileHeight(new Height(170.0));","lastModifiedDate":"2021-10-26"},{"lineNumber":37,"author":{"gitId":"tttyyzzz"},"content":"        profile.setProfileGender(new Gender(\u0027M\u0027));","lastModifiedDate":"2021-10-26"},{"lineNumber":38,"author":{"gitId":"tttyyzzz"},"content":"        profile.setProfileActivityFactor(new ActivityFactor(3));","lastModifiedDate":"2021-10-26"},{"lineNumber":39,"author":{"gitId":"tttyyzzz"},"content":"        int caloriesGoal \u003d 5000;","lastModifiedDate":"2021-10-13"},{"lineNumber":40,"author":{"gitId":"tttyyzzz"},"content":"        int foodCalories \u003d 3000;","lastModifiedDate":"2021-10-13"},{"lineNumber":41,"author":{"gitId":"tttyyzzz"},"content":"        int exerciseCalories \u003d 2000;","lastModifiedDate":"2021-10-13"},{"lineNumber":42,"author":{"gitId":"tttyyzzz"},"content":"        String expectedResult \u003d \"You are 6448 cal away from your goal\";","lastModifiedDate":"2021-10-26"},{"lineNumber":43,"author":{"gitId":"tttyyzzz"},"content":"        assertEquals(expectedResult, stats.getCaloriesReport(foodCalories, exerciseCalories, caloriesGoal)[4]);","lastModifiedDate":"2021-10-13"},{"lineNumber":44,"author":{"gitId":"tttyyzzz"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":45,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":46,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":47,"author":{"gitId":"tttyyzzz"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"tttyyzzz":44,"tlyi":3}}]
