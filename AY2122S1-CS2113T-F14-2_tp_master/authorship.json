[{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"tryyang2001"},"content":"    mainClassName \u003d \"seedu.duke.Main\"","lastModifiedDate":"2021-10-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.23\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"tlyi"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2021-10-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"tryyang2001":1,"-":45,"tlyi":1}},{"path":"config/checkstyle/checkstyle.xml","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\"?\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"\u003c!DOCTYPE module PUBLIC","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"        \"-//Checkstyle//DTD Checkstyle Configuration 1.3//EN\"","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"        \"https://checkstyle.org/dtds/configuration_1_3.dtd\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c!--","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    Checkstyle configuration that checks the Google coding conventions from Google Java Style","lastModifiedDate":"2020-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    that can be found at https://google.github.io/styleguide/javaguide.html","lastModifiedDate":"2020-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    Checkstyle is very configurable. Be sure to read the documentation at","lastModifiedDate":"2020-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    http://checkstyle.sf.net (or in your downloaded distribution).","lastModifiedDate":"2020-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    To completely disable a check, just comment it out or delete it from the file.","lastModifiedDate":"2020-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    Authors: Max Vetrenko, Ruslan Diachenko, Roman Ivanov.","lastModifiedDate":"2020-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" --\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"\u003cmodule name \u003d \"Checker\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003cproperty name\u003d\"charset\" value\u003d\"UTF-8\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003cproperty name\u003d\"severity\" value\u003d\"error\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    \u003cproperty name\u003d\"fileExtensions\" value\u003d\"java, properties, xml\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    \u003c!-- Excludes all \u0027module-info.java\u0027 files              --\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    \u003c!-- See https://checkstyle.org/config_filefilters.html --\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"BeforeExecutionExclusionFileFilter\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        \u003cproperty name\u003d\"fileNamePattern\" value\u003d\"module\\-info\\.java$\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    \u003c!-- Checks for whitespace                               --\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    \u003c!-- See http://checkstyle.sf.net/config_whitespace.html --\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"FileTabCharacter\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        \u003cproperty name\u003d\"eachLine\" value\u003d\"true\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"TreeWalker\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"OuterTypeFilename\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"IllegalTokenText\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"tokens\" value\u003d\"STRING_LITERAL, CHAR_LITERAL\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"format\"","lastModifiedDate":"2020-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                      value\u003d\"\\\\u00(09|0(a|A)|0(c|C)|0(d|D)|22|27|5(C|c))|\\\\(0(10|11|12|14|15|42|47)|134)\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"message\"","lastModifiedDate":"2020-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                      value\u003d\"Consider using special escape sequence instead of octal value or Unicode escaped value.\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"AvoidEscapedUnicodeCharacters\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"allowEscapesForControlCharacters\" value\u003d\"true\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"allowByTailComment\" value\u003d\"true\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"allowNonPrintableEscapes\" value\u003d\"true\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"LineLength\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"max\" value\u003d\"120\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"ignorePattern\" value\u003d\"^package.*|^import.*|a href|href|http://|https://|ftp://\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"AvoidStarImport\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"OneTopLevelClass\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"NoLineWrap\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"EmptyBlock\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"option\" value\u003d\"TEXT\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"tokens\"","lastModifiedDate":"2020-05-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                      value\u003d\"LITERAL_TRY, LITERAL_FINALLY, LITERAL_IF, LITERAL_ELSE, LITERAL_SWITCH\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"NeedBraces\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"LeftCurly\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"RightCurly\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"id\" value\u003d\"RightCurlySame\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"tokens\"","lastModifiedDate":"2020-05-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                      value\u003d\"LITERAL_TRY, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_IF, LITERAL_ELSE,","lastModifiedDate":"2020-05-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                    LITERAL_DO\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"RightCurly\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"id\" value\u003d\"RightCurlyAlone\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"option\" value\u003d\"alone\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"tokens\"","lastModifiedDate":"2020-05-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                      value\u003d\"CLASS_DEF, METHOD_DEF, CTOR_DEF, LITERAL_FOR, LITERAL_WHILE, STATIC_INIT,","lastModifiedDate":"2020-05-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                    INSTANCE_INIT\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"WhitespaceAround\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"allowEmptyConstructors\" value\u003d\"true\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"allowEmptyLambdas\" value\u003d\"true\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"allowEmptyMethods\" value\u003d\"true\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"allowEmptyTypes\" value\u003d\"true\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"allowEmptyLoops\" value\u003d\"true\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            \u003cmessage key\u003d\"ws.notFollowed\"","lastModifiedDate":"2020-05-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                     value\u003d\"WhitespaceAround: \u0027\u0027{0}\u0027\u0027 is not followed by whitespace. Empty blocks may only be represented as \u0027{}\u0027 when not part of a multi-block statement (4.1.3)\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            \u003cmessage key\u003d\"ws.notPreceded\"","lastModifiedDate":"2020-05-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                     value\u003d\"WhitespaceAround: \u0027\u0027{0}\u0027\u0027 is not preceded with whitespace.\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"OneStatementPerLine\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"MultipleVariableDeclarations\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"ArrayTypeStyle\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"MissingSwitchDefault\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"FallThrough\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"UpperEll\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"ModifierOrder\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"EmptyLineSeparator\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"allowNoEmptyLineBetweenFields\" value\u003d\"true\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"SeparatorWrap\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"id\" value\u003d\"SeparatorWrapDot\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"tokens\" value\u003d\"DOT\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"option\" value\u003d\"nl\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"SeparatorWrap\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"id\" value\u003d\"SeparatorWrapComma\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"tokens\" value\u003d\"COMMA\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"option\" value\u003d\"EOL\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"SeparatorWrap\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            \u003c!-- ELLIPSIS is EOL until https://github.com/google/styleguide/issues/258 --\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"id\" value\u003d\"SeparatorWrapEllipsis\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"tokens\" value\u003d\"ELLIPSIS\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"option\" value\u003d\"EOL\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"SeparatorWrap\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            \u003c!-- ARRAY_DECLARATOR is EOL until https://github.com/google/styleguide/issues/259 --\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"id\" value\u003d\"SeparatorWrapArrayDeclarator\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"tokens\" value\u003d\"ARRAY_DECLARATOR\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"option\" value\u003d\"EOL\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"SeparatorWrap\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"id\" value\u003d\"SeparatorWrapMethodRef\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"tokens\" value\u003d\"METHOD_REF\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"option\" value\u003d\"nl\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"PackageName\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"format\" value\u003d\"^[a-z]+(\\.[a-z][a-z0-9]*)*$\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            \u003cmessage key\u003d\"name.invalidPattern\"","lastModifiedDate":"2020-05-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"                     value\u003d\"Package name \u0027\u0027{0}\u0027\u0027 must match pattern \u0027\u0027{1}\u0027\u0027.\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"TypeName\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            \u003cmessage key\u003d\"name.invalidPattern\"","lastModifiedDate":"2020-05-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"                     value\u003d\"Type name \u0027\u0027{0}\u0027\u0027 must match pattern \u0027\u0027{1}\u0027\u0027.\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"MemberName\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"format\" value\u003d\"^[a-z][a-z0-9][a-zA-Z0-9]*$\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            \u003cmessage key\u003d\"name.invalidPattern\"","lastModifiedDate":"2020-05-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"                     value\u003d\"Member name \u0027\u0027{0}\u0027\u0027 must match pattern \u0027\u0027{1}\u0027\u0027.\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"ParameterName\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"format\" value\u003d\"^[a-z]([a-z0-9][a-zA-Z0-9]*)?$\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            \u003cmessage key\u003d\"name.invalidPattern\"","lastModifiedDate":"2020-05-24"},{"lineNumber":138,"author":{"gitId":"-"},"content":"                     value\u003d\"Parameter name \u0027\u0027{0}\u0027\u0027 must match pattern \u0027\u0027{1}\u0027\u0027.\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"LambdaParameterName\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"format\" value\u003d\"^[a-z]([a-z0-9][a-zA-Z0-9]*)?$\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            \u003cmessage key\u003d\"name.invalidPattern\"","lastModifiedDate":"2020-05-24"},{"lineNumber":143,"author":{"gitId":"-"},"content":"                     value\u003d\"Lambda parameter name \u0027\u0027{0}\u0027\u0027 must match pattern \u0027\u0027{1}\u0027\u0027.\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"CatchParameterName\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"format\" value\u003d\"^[a-z]([a-z0-9][a-zA-Z0-9]*)?$\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            \u003cmessage key\u003d\"name.invalidPattern\"","lastModifiedDate":"2020-05-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"                     value\u003d\"Catch parameter name \u0027\u0027{0}\u0027\u0027 must match pattern \u0027\u0027{1}\u0027\u0027.\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"LocalVariableName\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"tokens\" value\u003d\"VARIABLE_DEF\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"format\" value\u003d\"^[a-z]([a-z0-9][a-zA-Z0-9]*)?$\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            \u003cmessage key\u003d\"name.invalidPattern\"","lastModifiedDate":"2020-05-24"},{"lineNumber":154,"author":{"gitId":"-"},"content":"                     value\u003d\"Local variable name \u0027\u0027{0}\u0027\u0027 must match pattern \u0027\u0027{1}\u0027\u0027.\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"ClassTypeParameterName\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"format\" value\u003d\"(^[A-Z][0-9]?)$|([A-Z][a-zA-Z0-9]*[T]$)\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            \u003cmessage key\u003d\"name.invalidPattern\"","lastModifiedDate":"2020-05-24"},{"lineNumber":159,"author":{"gitId":"-"},"content":"                     value\u003d\"Class type name \u0027\u0027{0}\u0027\u0027 must match pattern \u0027\u0027{1}\u0027\u0027.\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"MethodTypeParameterName\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"format\" value\u003d\"(^[A-Z][0-9]?)$|([A-Z][a-zA-Z0-9]*[T]$)\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            \u003cmessage key\u003d\"name.invalidPattern\"","lastModifiedDate":"2020-05-24"},{"lineNumber":164,"author":{"gitId":"-"},"content":"                     value\u003d\"Method type name \u0027\u0027{0}\u0027\u0027 must match pattern \u0027\u0027{1}\u0027\u0027.\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"InterfaceTypeParameterName\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"format\" value\u003d\"(^[A-Z][0-9]?)$|([A-Z][a-zA-Z0-9]*[T]$)\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            \u003cmessage key\u003d\"name.invalidPattern\"","lastModifiedDate":"2020-05-24"},{"lineNumber":169,"author":{"gitId":"-"},"content":"                     value\u003d\"Interface type name \u0027\u0027{0}\u0027\u0027 must match pattern \u0027\u0027{1}\u0027\u0027.\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"NoFinalizer\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"GenericWhitespace\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":173,"author":{"gitId":"-"},"content":"            \u003cmessage key\u003d\"ws.followed\"","lastModifiedDate":"2020-05-24"},{"lineNumber":174,"author":{"gitId":"-"},"content":"                     value\u003d\"GenericWhitespace \u0027\u0027{0}\u0027\u0027 is followed by whitespace.\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":175,"author":{"gitId":"-"},"content":"            \u003cmessage key\u003d\"ws.preceded\"","lastModifiedDate":"2020-05-24"},{"lineNumber":176,"author":{"gitId":"-"},"content":"                     value\u003d\"GenericWhitespace \u0027\u0027{0}\u0027\u0027 is preceded with whitespace.\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            \u003cmessage key\u003d\"ws.illegalFollow\"","lastModifiedDate":"2020-05-24"},{"lineNumber":178,"author":{"gitId":"-"},"content":"                     value\u003d\"GenericWhitespace \u0027\u0027{0}\u0027\u0027 should followed by whitespace.\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":179,"author":{"gitId":"-"},"content":"            \u003cmessage key\u003d\"ws.notPreceded\"","lastModifiedDate":"2020-05-24"},{"lineNumber":180,"author":{"gitId":"-"},"content":"                     value\u003d\"GenericWhitespace \u0027\u0027{0}\u0027\u0027 is not preceded with whitespace.\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"Indentation\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"basicOffset\" value\u003d\"4\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"braceAdjustment\" value\u003d\"0\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"caseIndent\" value\u003d\"0\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":186,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"throwsIndent\" value\u003d\"4\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":187,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"lineWrappingIndentation\" value\u003d\"4\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":188,"author":{"gitId":"tlyi"},"content":"            \u003cproperty name\u003d\"arrayInitIndent\" value\u003d\"8\"/\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"AbbreviationAsWordInName\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"ignoreFinal\" value\u003d\"false\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"allowedAbbreviationLength\" value\u003d\"1\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"OverloadMethodsDeclarationOrder\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"VariableDeclarationUsageDistance\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"MethodParamPad\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"NoWhitespaceBefore\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":198,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"tokens\"","lastModifiedDate":"2020-05-24"},{"lineNumber":199,"author":{"gitId":"-"},"content":"                      value\u003d\"COMMA, SEMI, POST_INC, POST_DEC, DOT, ELLIPSIS, METHOD_REF\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":200,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"allowLineBreaks\" value\u003d\"true\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"ParenPad\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"OperatorWrap\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":204,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"option\" value\u003d\"NL\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":205,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"tokens\"","lastModifiedDate":"2020-05-24"},{"lineNumber":206,"author":{"gitId":"-"},"content":"                      value\u003d\"BAND, BOR, BSR, BXOR, DIV, EQUAL, GE, GT, LAND, LE, LITERAL_INSTANCEOF, LOR,","lastModifiedDate":"2020-05-24"},{"lineNumber":207,"author":{"gitId":"-"},"content":"                    LT, MINUS, MOD, NOT_EQUAL, PLUS, QUESTION, SL, SR, STAR, METHOD_REF \"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"AnnotationLocation\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":210,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"id\" value\u003d\"AnnotationLocationMostCases\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":211,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"tokens\"","lastModifiedDate":"2020-05-24"},{"lineNumber":212,"author":{"gitId":"-"},"content":"                      value\u003d\"CLASS_DEF, INTERFACE_DEF, ENUM_DEF, METHOD_DEF, CTOR_DEF\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"AnnotationLocation\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":215,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"id\" value\u003d\"AnnotationLocationVariables\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":216,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"tokens\" value\u003d\"VARIABLE_DEF\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":217,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"allowSamelineMultipleAnnotations\" value\u003d\"true\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"NonEmptyAtclauseDescription\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"JavadocTagContinuationIndentation\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"SummaryJavadoc\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":222,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"forbiddenSummaryFragments\"","lastModifiedDate":"2020-05-24"},{"lineNumber":223,"author":{"gitId":"-"},"content":"                      value\u003d\"^@return the *|^This method returns |^A [{]@code [a-zA-Z0-9]+[}]( is a )\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"JavadocParagraph\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"AtclauseOrder\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":227,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"tagOrder\" value\u003d\"@param, @return, @throws, @deprecated\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":228,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"target\"","lastModifiedDate":"2020-05-24"},{"lineNumber":229,"author":{"gitId":"-"},"content":"                      value\u003d\"CLASS_DEF, INTERFACE_DEF, ENUM_DEF, METHOD_DEF, CTOR_DEF, VARIABLE_DEF\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":230,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"JavadocMethod\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":232,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"scope\" value\u003d\"public\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":233,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"allowMissingParamTags\" value\u003d\"true\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":234,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"allowMissingThrowsTags\" value\u003d\"true\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":235,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"allowMissingReturnTag\" value\u003d\"true\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":236,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"allowedAnnotations\" value\u003d\"Override, Test\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":237,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"allowThrowsTagsForSubclasses\" value\u003d\"true\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":238,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":239,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"MethodName\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":240,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"format\" value\u003d\"^[a-z][a-z0-9][a-zA-Z0-9_]*$\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":241,"author":{"gitId":"-"},"content":"            \u003cmessage key\u003d\"name.invalidPattern\"","lastModifiedDate":"2020-05-24"},{"lineNumber":242,"author":{"gitId":"-"},"content":"                     value\u003d\"Method name \u0027\u0027{0}\u0027\u0027 must match pattern \u0027\u0027{1}\u0027\u0027.\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":243,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":244,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"SingleLineJavadoc\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":245,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"ignoreInlineTags\" value\u003d\"false\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":246,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":247,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"EmptyCatchBlock\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":248,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"exceptionVariableName\" value\u003d\"expected\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":249,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":250,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"CommentsIndentation\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":252,"author":{"gitId":"-"},"content":"\u003c/module\u003e","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"-":251,"tlyi":1}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# About us","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"Display | Name | Github Profile | Portfolio ","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"--------|:----:|:--------------:|:---------:","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"weidak"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Tay Weida | [Github](https://github.com/weidak) | [Portfolio](docs/team/tayweida.md)","lastModifiedDate":"2021-10-01"},{"lineNumber":6,"author":{"gitId":"tryyang2001"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Tan Xing Jie | [Github](https://github.com/xingjie99) | [Portfolio](docs/team/tanxingjie.md)","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"tryyang2001"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Tan Rui Yang | [Github](https://github.com/tryyang2001) | [Portfolio](docs/team/tanruiyang.md)","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"tttyyzzz"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Toh Yi Zhi | [Github](https://github.com/tttyyzzz/tp) | [Portfolio](docs/team/noidea.md)","lastModifiedDate":"2021-10-01"},{"lineNumber":9,"author":{"gitId":"tlyi"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Tan Le Yi | [Github](https://github.com/tlyi) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2021-10-01"}],"authorContributionMap":{"weidak":1,"tttyyzzz":1,"tryyang2001":2,"-":4,"tlyi":1}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"tryyang2001"},"content":"# Fitbot User Guide","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"tryyang2001"},"content":"*Fitbot* is a **desktop app** that helps university students who are looking to **keep track of their calorie consumption and calorie output** with the speed and convenience of **command-line based** tools, especially in times of online school.","lastModifiedDate":"2021-10-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"tryyang2001"},"content":"[Quick Start](#quick-start)","lastModifiedDate":"2021-10-15"},{"lineNumber":6,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":7,"author":{"gitId":"tryyang2001"},"content":"[Features](#features)","lastModifiedDate":"2021-10-15"},{"lineNumber":8,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":9,"author":{"gitId":"tryyang2001"},"content":"- [View help: `help`](#view-help-help)","lastModifiedDate":"2021-10-15"},{"lineNumber":10,"author":{"gitId":"tryyang2001"},"content":"- [Update name: `name`](#update-name-name)","lastModifiedDate":"2021-10-15"},{"lineNumber":11,"author":{"gitId":"tryyang2001"},"content":"- [Update height: `height`](#update-height-height)","lastModifiedDate":"2021-10-15"},{"lineNumber":12,"author":{"gitId":"tryyang2001"},"content":"- [Update weight: `weight`](#update-weight-weight)","lastModifiedDate":"2021-10-15"},{"lineNumber":13,"author":{"gitId":"tryyang2001"},"content":"- [Update net calorie goal: `goal`](#update-net-calorie-goal-goal)","lastModifiedDate":"2021-10-15"},{"lineNumber":14,"author":{"gitId":"tryyang2001"},"content":"- [Update/View the profile details: `profile`](#updateview-the-profile-details-profile)","lastModifiedDate":"2021-10-15"},{"lineNumber":15,"author":{"gitId":"tryyang2001"},"content":"- [BMI calculator: `bmi`](#bmi-calculator-bmi)","lastModifiedDate":"2021-10-15"},{"lineNumber":16,"author":{"gitId":"tryyang2001"},"content":"- [Add Exercise and Food Items: `add`](#add-exercise-and-food-items-add)","lastModifiedDate":"2021-10-15"},{"lineNumber":17,"author":{"gitId":"tryyang2001"},"content":"- [View Exercise and Food Items: `view`](#view-exercise-and-food-items-view)","lastModifiedDate":"2021-10-15"},{"lineNumber":18,"author":{"gitId":"tryyang2001"},"content":"- [Delete Exercise and Food Items: `delete`](#delete-exercise-and-food-items-delete)","lastModifiedDate":"2021-10-15"},{"lineNumber":19,"author":{"gitId":"tryyang2001"},"content":"- [Calculate net calories: `overview`](#calculate-net-calories-overview)","lastModifiedDate":"2021-10-15"},{"lineNumber":20,"author":{"gitId":"tryyang2001"},"content":"- [Exit the program: `bye`](#exit-the-program-bye)","lastModifiedDate":"2021-10-15"},{"lineNumber":21,"author":{"gitId":"tryyang2001"},"content":"- [Saving the data](#saving-the-data)","lastModifiedDate":"2021-10-15"},{"lineNumber":22,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":23,"author":{"gitId":"tryyang2001"},"content":"[Command Summary](#command-summary)","lastModifiedDate":"2021-10-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"## Quick Start","lastModifiedDate":"2020-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":27,"author":{"gitId":"tryyang2001"},"content":"1. Ensure you have Java 11 or above installed in your computer.  If not, install Java 11 [here](https://www.oracle.com/java/technologies/downloads/).","lastModifiedDate":"2021-10-15"},{"lineNumber":28,"author":{"gitId":"tryyang2001"},"content":"2. Download the latest version of [Fitbot.jar](https://github.com/AY2122S1-CS2113T-F14-2/tp/releases/tag/v1.0) from the cloud.","lastModifiedDate":"2021-10-15"},{"lineNumber":29,"author":{"gitId":"tryyang2001"},"content":"3. Copy the file to the folder you want to use as the home folder for your *FitBot*.","lastModifiedDate":"2021-10-15"},{"lineNumber":30,"author":{"gitId":"tryyang2001"},"content":"4. Go to command prompt and change the directory to the file\u0027s location.","lastModifiedDate":"2021-10-15"},{"lineNumber":31,"author":{"gitId":"tryyang2001"},"content":"5. Type `java -jar FitBot_v1.0.jar` into the command prompt and press enter to start the program.","lastModifiedDate":"2021-10-15"},{"lineNumber":32,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":33,"author":{"gitId":"tryyang2001"},"content":"If successfully loaded, you will see this screen:","lastModifiedDate":"2021-10-15"},{"lineNumber":34,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":35,"author":{"gitId":"tryyang2001"},"content":"![Untitled](https://user-images.githubusercontent.com/69421979/137489537-ef18d425-95ae-4e41-b5d6-752e665728b9.png)","lastModifiedDate":"2021-10-15"},{"lineNumber":36,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":37,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":38,"author":{"gitId":"tryyang2001"},"content":"## **Features**","lastModifiedDate":"2021-10-15"},{"lineNumber":39,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":40,"author":{"gitId":"tryyang2001"},"content":"ℹ️  ***Command Format***","lastModifiedDate":"2021-10-15"},{"lineNumber":41,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":42,"author":{"gitId":"tryyang2001"},"content":"- Commands are not case sensitive (e.g. `help`, `HELP`,`hElP` are all able to execute the `help` command)","lastModifiedDate":"2021-10-15"},{"lineNumber":43,"author":{"gitId":"tryyang2001"},"content":"- Words in upper case (e.g. `UPPER_CASE`) are known as parameters; values to be provided by users","lastModifiedDate":"2021-10-15"},{"lineNumber":44,"author":{"gitId":"tryyang2001"},"content":"- Parameters in square brackets are optional.","lastModifiedDate":"2021-10-15"},{"lineNumber":45,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":46,"author":{"gitId":"tryyang2001"},"content":"  e.g. `bmi [h/HEIGHT_IN_CM w/WEIGHT_IN_KG]`  can be `bmi` or `bmi h/150 w/70`","lastModifiedDate":"2021-10-15"},{"lineNumber":47,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":48,"author":{"gitId":"tryyang2001"},"content":"- The order of the parameters do not matter.","lastModifiedDate":"2021-10-15"},{"lineNumber":49,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":50,"author":{"gitId":"tryyang2001"},"content":"  e.g. `add f/potato c/200` or `add c/200 f/potato` both adds a food item called \"potato\" with 200 calories.","lastModifiedDate":"2021-10-15"},{"lineNumber":51,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":52,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":53,"author":{"gitId":"tryyang2001"},"content":"❗ Please do not use the characters `/` and `|` in your input!","lastModifiedDate":"2021-10-15"},{"lineNumber":54,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":55,"author":{"gitId":"tryyang2001"},"content":"### **View help:** `help`","lastModifiedDate":"2021-10-15"},{"lineNumber":56,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":57,"author":{"gitId":"tryyang2001"},"content":"Shows a list of commands and their usage.","lastModifiedDate":"2021-10-15"},{"lineNumber":58,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":59,"author":{"gitId":"tryyang2001"},"content":"Format: `help`","lastModifiedDate":"2021-10-15"},{"lineNumber":60,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":61,"author":{"gitId":"tryyang2001"},"content":"Example:","lastModifiedDate":"2021-10-15"},{"lineNumber":62,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":63,"author":{"gitId":"tryyang2001"},"content":"```text","lastModifiedDate":"2021-10-15"},{"lineNumber":64,"author":{"gitId":"tryyang2001"},"content":"help","lastModifiedDate":"2021-10-15"},{"lineNumber":65,"author":{"gitId":"tryyang2001"},"content":"__________________________________________________________________________________________________________","lastModifiedDate":"2021-10-15"},{"lineNumber":66,"author":{"gitId":"tryyang2001"},"content":"These are the available commands:","lastModifiedDate":"2021-10-15"},{"lineNumber":67,"author":{"gitId":"tryyang2001"},"content":"Welcome to the help page.","lastModifiedDate":"2021-10-15"},{"lineNumber":68,"author":{"gitId":"tryyang2001"},"content":"Below are the commands to get you started.","lastModifiedDate":"2021-10-15"},{"lineNumber":69,"author":{"gitId":"tryyang2001"},"content":"More details could be found on: ","lastModifiedDate":"2021-10-15"},{"lineNumber":70,"author":{"gitId":"tryyang2001"},"content":"https://tinyurl.com/fitbotUG","lastModifiedDate":"2021-10-15"},{"lineNumber":71,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":72,"author":{"gitId":"tryyang2001"},"content":"help -- Shows a list of commands and their usage with some examples.","lastModifiedDate":"2021-10-15"},{"lineNumber":73,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":74,"author":{"gitId":"tryyang2001"},"content":"profile -- Inputs height of user in centimetres, weight of user in kg","lastModifiedDate":"2021-10-15"},{"lineNumber":75,"author":{"gitId":"tryyang2001"},"content":"\t      and name of user in test.","lastModifiedDate":"2021-10-15"},{"lineNumber":76,"author":{"gitId":"tryyang2001"},"content":"goal -- Inputs net calorie goal of user in calorie.","lastModifiedDate":"2021-10-15"},{"lineNumber":77,"author":{"gitId":"tryyang2001"},"content":"bmi -- Calculates the BMI value based on the user\u0027s input height and weight.","lastModifiedDate":"2021-10-15"},{"lineNumber":78,"author":{"gitId":"tryyang2001"},"content":"add -- Adds food or exercise record to the current list.","lastModifiedDate":"2021-10-15"},{"lineNumber":79,"author":{"gitId":"tryyang2001"},"content":"view -- Views all the food and/or exercises added.","lastModifiedDate":"2021-10-15"},{"lineNumber":80,"author":{"gitId":"tryyang2001"},"content":"delete -- Deletes entry of food or exercise added.","lastModifiedDate":"2021-10-15"},{"lineNumber":81,"author":{"gitId":"tryyang2001"},"content":"bye -- Exits the program and save results from food and exercise items.","lastModifiedDate":"2021-10-15"},{"lineNumber":82,"author":{"gitId":"tryyang2001"},"content":"__________________________________________________________________________________________________________","lastModifiedDate":"2021-10-15"},{"lineNumber":83,"author":{"gitId":"tryyang2001"},"content":"```","lastModifiedDate":"2021-10-15"},{"lineNumber":84,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":85,"author":{"gitId":"tryyang2001"},"content":"### **Update name: `name`**","lastModifiedDate":"2021-10-15"},{"lineNumber":86,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":87,"author":{"gitId":"tryyang2001"},"content":"Updates name of user.","lastModifiedDate":"2021-10-15"},{"lineNumber":88,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":89,"author":{"gitId":"tryyang2001"},"content":"Format: `name NAME`","lastModifiedDate":"2021-10-15"},{"lineNumber":90,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":91,"author":{"gitId":"tryyang2001"},"content":"Example:","lastModifiedDate":"2021-10-15"},{"lineNumber":92,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":93,"author":{"gitId":"tryyang2001"},"content":"- `name John`","lastModifiedDate":"2021-10-15"},{"lineNumber":94,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":95,"author":{"gitId":"tryyang2001"},"content":"```text","lastModifiedDate":"2021-10-15"},{"lineNumber":96,"author":{"gitId":"tryyang2001"},"content":"name John","lastModifiedDate":"2021-10-15"},{"lineNumber":97,"author":{"gitId":"tryyang2001"},"content":"__________________________________________________________________________________________","lastModifiedDate":"2021-10-15"},{"lineNumber":98,"author":{"gitId":"tryyang2001"},"content":"Your name has been updated!","lastModifiedDate":"2021-10-15"},{"lineNumber":99,"author":{"gitId":"tryyang2001"},"content":"Hello John!","lastModifiedDate":"2021-10-15"},{"lineNumber":100,"author":{"gitId":"tryyang2001"},"content":"__________________________________________________________________________________________","lastModifiedDate":"2021-10-15"},{"lineNumber":101,"author":{"gitId":"tryyang2001"},"content":"```","lastModifiedDate":"2021-10-15"},{"lineNumber":102,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":103,"author":{"gitId":"tryyang2001"},"content":"### **Update height:** `height`","lastModifiedDate":"2021-10-15"},{"lineNumber":104,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":105,"author":{"gitId":"tryyang2001"},"content":"Updates height of user in centimetres.","lastModifiedDate":"2021-10-15"},{"lineNumber":106,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":107,"author":{"gitId":"tryyang2001"},"content":"Format: `height HEIGHT_IN_CM`","lastModifiedDate":"2021-10-15"},{"lineNumber":108,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":109,"author":{"gitId":"tryyang2001"},"content":"- Records height of user.","lastModifiedDate":"2021-10-15"},{"lineNumber":110,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":111,"author":{"gitId":"tryyang2001"},"content":"❗ `HEIGHT_IN_CM` must be a positive number.","lastModifiedDate":"2021-10-15"},{"lineNumber":112,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":113,"author":{"gitId":"tryyang2001"},"content":"Example:","lastModifiedDate":"2021-10-15"},{"lineNumber":114,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":115,"author":{"gitId":"tryyang2001"},"content":"- `height 170`","lastModifiedDate":"2021-10-15"},{"lineNumber":116,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":117,"author":{"gitId":"tryyang2001"},"content":"```text","lastModifiedDate":"2021-10-15"},{"lineNumber":118,"author":{"gitId":"tryyang2001"},"content":"height 170","lastModifiedDate":"2021-10-15"},{"lineNumber":119,"author":{"gitId":"tryyang2001"},"content":"__________________________________________________________________________________________","lastModifiedDate":"2021-10-15"},{"lineNumber":120,"author":{"gitId":"tryyang2001"},"content":"Your height has been updated.","lastModifiedDate":"2021-10-15"},{"lineNumber":121,"author":{"gitId":"tryyang2001"},"content":"Your height is 170.0cm.","lastModifiedDate":"2021-10-15"},{"lineNumber":122,"author":{"gitId":"tryyang2001"},"content":"__________________________________________________________________________________________","lastModifiedDate":"2021-10-15"},{"lineNumber":123,"author":{"gitId":"tryyang2001"},"content":"```","lastModifiedDate":"2021-10-15"},{"lineNumber":124,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":125,"author":{"gitId":"tryyang2001"},"content":"### **Update weight:** `weight`","lastModifiedDate":"2021-10-15"},{"lineNumber":126,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":127,"author":{"gitId":"tryyang2001"},"content":"Updates weight of user in kilograms.","lastModifiedDate":"2021-10-15"},{"lineNumber":128,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":129,"author":{"gitId":"tryyang2001"},"content":"Format: `weight WEIGHT_IN_KG`","lastModifiedDate":"2021-10-15"},{"lineNumber":130,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":131,"author":{"gitId":"tryyang2001"},"content":"- Records weight of user.","lastModifiedDate":"2021-10-15"},{"lineNumber":132,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":133,"author":{"gitId":"tryyang2001"},"content":"❗ `WEIGHT_IN_KG` must be a positive number.","lastModifiedDate":"2021-10-15"},{"lineNumber":134,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":135,"author":{"gitId":"tryyang2001"},"content":"Example:","lastModifiedDate":"2021-10-15"},{"lineNumber":136,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":137,"author":{"gitId":"tryyang2001"},"content":"- `weight 65`","lastModifiedDate":"2021-10-15"},{"lineNumber":138,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":139,"author":{"gitId":"tryyang2001"},"content":"```text","lastModifiedDate":"2021-10-15"},{"lineNumber":140,"author":{"gitId":"tryyang2001"},"content":"weight 65","lastModifiedDate":"2021-10-15"},{"lineNumber":141,"author":{"gitId":"tryyang2001"},"content":"__________________________________________________________________________________________","lastModifiedDate":"2021-10-15"},{"lineNumber":142,"author":{"gitId":"tryyang2001"},"content":"Your weight has been updated.","lastModifiedDate":"2021-10-15"},{"lineNumber":143,"author":{"gitId":"tryyang2001"},"content":"Your weight is 65.0kg.","lastModifiedDate":"2021-10-15"},{"lineNumber":144,"author":{"gitId":"tryyang2001"},"content":"__________________________________________________________________________________________","lastModifiedDate":"2021-10-15"},{"lineNumber":145,"author":{"gitId":"tryyang2001"},"content":"```","lastModifiedDate":"2021-10-15"},{"lineNumber":146,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":147,"author":{"gitId":"tryyang2001"},"content":"### Update net calorie goal: `goal`","lastModifiedDate":"2021-10-15"},{"lineNumber":148,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":149,"author":{"gitId":"tryyang2001"},"content":"Updates net calorie goal of user.","lastModifiedDate":"2021-10-15"},{"lineNumber":150,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":151,"author":{"gitId":"tryyang2001"},"content":"Format: `goal CALORIE_IN_CAL`","lastModifiedDate":"2021-10-15"},{"lineNumber":152,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":153,"author":{"gitId":"tryyang2001"},"content":"- Records net calorie goal of user.","lastModifiedDate":"2021-10-15"},{"lineNumber":154,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":155,"author":{"gitId":"tryyang2001"},"content":"❗`CALORIE_IN_CAL` must be an integer.","lastModifiedDate":"2021-10-15"},{"lineNumber":156,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":157,"author":{"gitId":"tryyang2001"},"content":"Example:","lastModifiedDate":"2021-10-15"},{"lineNumber":158,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":159,"author":{"gitId":"tryyang2001"},"content":"- `goal 2000`","lastModifiedDate":"2021-10-15"},{"lineNumber":160,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":161,"author":{"gitId":"tryyang2001"},"content":"```text","lastModifiedDate":"2021-10-15"},{"lineNumber":162,"author":{"gitId":"tryyang2001"},"content":"goal 2000","lastModifiedDate":"2021-10-15"},{"lineNumber":163,"author":{"gitId":"tryyang2001"},"content":"__________________________________________________________________________________________","lastModifiedDate":"2021-10-15"},{"lineNumber":164,"author":{"gitId":"tryyang2001"},"content":"Your goal has been set!","lastModifiedDate":"2021-10-15"},{"lineNumber":165,"author":{"gitId":"tryyang2001"},"content":"Current net calorie goal per day: 2000","lastModifiedDate":"2021-10-15"},{"lineNumber":166,"author":{"gitId":"tryyang2001"},"content":"__________________________________________________________________________________________","lastModifiedDate":"2021-10-15"},{"lineNumber":167,"author":{"gitId":"tryyang2001"},"content":"```","lastModifiedDate":"2021-10-15"},{"lineNumber":168,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":169,"author":{"gitId":"tryyang2001"},"content":"💡  **Tip:** Use `profile` to add name, height, weight and calorie goal at the same time.","lastModifiedDate":"2021-10-15"},{"lineNumber":170,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":171,"author":{"gitId":"tryyang2001"},"content":"### Update/View the profile details: `profile`","lastModifiedDate":"2021-10-15"},{"lineNumber":172,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":173,"author":{"gitId":"tryyang2001"},"content":"Updates/Views the name, height, weight and the calorie goal values.","lastModifiedDate":"2021-10-15"},{"lineNumber":174,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":175,"author":{"gitId":"tryyang2001"},"content":"Format:","lastModifiedDate":"2021-10-15"},{"lineNumber":176,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":177,"author":{"gitId":"tryyang2001"},"content":"`profile h/HEIGHT_IN_CM w/WEIGHT_IN_KG n/NAME g/CALORIE_IN_CAL`","lastModifiedDate":"2021-10-15"},{"lineNumber":178,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":179,"author":{"gitId":"tryyang2001"},"content":"`profile`","lastModifiedDate":"2021-10-15"},{"lineNumber":180,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":181,"author":{"gitId":"tryyang2001"},"content":"❗ `HEIGHT_IN_CM` and `WEIGHT_IN_KG` must be positive numbers.","lastModifiedDate":"2021-10-15"},{"lineNumber":182,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":183,"author":{"gitId":"tryyang2001"},"content":"❗`CALORIE_IN_CAL` must be an integer.","lastModifiedDate":"2021-10-15"},{"lineNumber":184,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":185,"author":{"gitId":"tryyang2001"},"content":"Example:","lastModifiedDate":"2021-10-15"},{"lineNumber":186,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":187,"author":{"gitId":"tryyang2001"},"content":"- `profile n/John Doe w/65 /h170 g/2000` creates a profile with name John Doe of height 170cm and 65kg with a calorie goal of 2000 calories.","lastModifiedDate":"2021-10-15"},{"lineNumber":188,"author":{"gitId":"tryyang2001"},"content":"- `profile` displays your profile details.","lastModifiedDate":"2021-10-15"},{"lineNumber":189,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":190,"author":{"gitId":"tryyang2001"},"content":"```text","lastModifiedDate":"2021-10-15"},{"lineNumber":191,"author":{"gitId":"tryyang2001"},"content":"profile n/John Doe w/65 h/170 g/2000","lastModifiedDate":"2021-10-15"},{"lineNumber":192,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":193,"author":{"gitId":"tryyang2001"},"content":"__________________________________________________________________________________________________________","lastModifiedDate":"2021-10-15"},{"lineNumber":194,"author":{"gitId":"tryyang2001"},"content":"Hello John Doe! Your profile has been created!","lastModifiedDate":"2021-10-15"},{"lineNumber":195,"author":{"gitId":"tryyang2001"},"content":"    Your height is 170.0cm.","lastModifiedDate":"2021-10-15"},{"lineNumber":196,"author":{"gitId":"tryyang2001"},"content":"    Your weight is 65.0kg.","lastModifiedDate":"2021-10-15"},{"lineNumber":197,"author":{"gitId":"tryyang2001"},"content":"    Your calories goal is 2000 cal.","lastModifiedDate":"2021-10-15"},{"lineNumber":198,"author":{"gitId":"tryyang2001"},"content":"__________________________________________________________________________________________________________","lastModifiedDate":"2021-10-15"},{"lineNumber":199,"author":{"gitId":"tryyang2001"},"content":"profile","lastModifiedDate":"2021-10-15"},{"lineNumber":200,"author":{"gitId":"tryyang2001"},"content":"__________________________________________________________________________________________________________","lastModifiedDate":"2021-10-15"},{"lineNumber":201,"author":{"gitId":"tryyang2001"},"content":"Hello! This is your current profile:","lastModifiedDate":"2021-10-15"},{"lineNumber":202,"author":{"gitId":"tryyang2001"},"content":"    Your name is John.","lastModifiedDate":"2021-10-15"},{"lineNumber":203,"author":{"gitId":"tryyang2001"},"content":"    Your height is 170.0cm.","lastModifiedDate":"2021-10-15"},{"lineNumber":204,"author":{"gitId":"tryyang2001"},"content":"    Your weight is 65.0kg.","lastModifiedDate":"2021-10-15"},{"lineNumber":205,"author":{"gitId":"tryyang2001"},"content":"    Your calorie goal is 2000 cal.","lastModifiedDate":"2021-10-15"},{"lineNumber":206,"author":{"gitId":"tryyang2001"},"content":"__________________________________________________________________________________________________________","lastModifiedDate":"2021-10-15"},{"lineNumber":207,"author":{"gitId":"tryyang2001"},"content":"```","lastModifiedDate":"2021-10-15"},{"lineNumber":208,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":209,"author":{"gitId":"tryyang2001"},"content":"### **BMI calculator:** `bmi`","lastModifiedDate":"2021-10-15"},{"lineNumber":210,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":211,"author":{"gitId":"tryyang2001"},"content":"Calculates the BMI value based on the user\u0027s input height and weight.","lastModifiedDate":"2021-10-15"},{"lineNumber":212,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":213,"author":{"gitId":"tryyang2001"},"content":"If the user does not provide the values, the BMI will be computed based on the user\u0027s current height and weight in the profile.","lastModifiedDate":"2021-10-15"},{"lineNumber":214,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":215,"author":{"gitId":"tryyang2001"},"content":"It also outputs the weight status *(underweight, healthy, overweight, obese)* based on calculated BMI.","lastModifiedDate":"2021-10-15"},{"lineNumber":216,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":217,"author":{"gitId":"tryyang2001"},"content":"Format: `bmi h/HEIGHT_IN_CM w/WEIGHT_IN_KG`","lastModifiedDate":"2021-10-15"},{"lineNumber":218,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":219,"author":{"gitId":"tryyang2001"},"content":"❗ `HEIGHT_IN_CM` and `WEIGHT_IN_KG` must be positive numbers.","lastModifiedDate":"2021-10-15"},{"lineNumber":220,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":221,"author":{"gitId":"tryyang2001"},"content":"Example:","lastModifiedDate":"2021-10-15"},{"lineNumber":222,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":223,"author":{"gitId":"tryyang2001"},"content":"- `bmi` calculates the BMI value based on the user\u0027s height and weight in his or her profile.","lastModifiedDate":"2021-10-15"},{"lineNumber":224,"author":{"gitId":"tryyang2001"},"content":"- `bmi h/170 w/65` calculates the BMI value based on height 170cm and weight 65cm.","lastModifiedDate":"2021-10-15"},{"lineNumber":225,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":226,"author":{"gitId":"tryyang2001"},"content":"```text","lastModifiedDate":"2021-10-15"},{"lineNumber":227,"author":{"gitId":"tryyang2001"},"content":"bmi h/170 w/65","lastModifiedDate":"2021-10-15"},{"lineNumber":228,"author":{"gitId":"tryyang2001"},"content":"__________________________________________________________________________________________","lastModifiedDate":"2021-10-15"},{"lineNumber":229,"author":{"gitId":"tryyang2001"},"content":"Your BMI value is 22.5 (Healthy)","lastModifiedDate":"2021-10-15"},{"lineNumber":230,"author":{"gitId":"tryyang2001"},"content":"__________________________________________________________________________________________","lastModifiedDate":"2021-10-15"},{"lineNumber":231,"author":{"gitId":"tryyang2001"},"content":"```","lastModifiedDate":"2021-10-15"},{"lineNumber":232,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":233,"author":{"gitId":"tryyang2001"},"content":"### **Add** **Exercise and Food Items:** `add`","lastModifiedDate":"2021-10-15"},{"lineNumber":234,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":235,"author":{"gitId":"tryyang2001"},"content":"Adds food or exercise record to the current list.","lastModifiedDate":"2021-10-15"},{"lineNumber":236,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":237,"author":{"gitId":"tryyang2001"},"content":"Format:","lastModifiedDate":"2021-10-15"},{"lineNumber":238,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":239,"author":{"gitId":"tryyang2001"},"content":"- `add f/ITEM c/CALORIES` adds a food item consumed with its respective calories.","lastModifiedDate":"2021-10-15"},{"lineNumber":240,"author":{"gitId":"tryyang2001"},"content":"- `add e/ITEM c/CALORIES` adds an exercise with its respective calories burnt.","lastModifiedDate":"2021-10-15"},{"lineNumber":241,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":242,"author":{"gitId":"tryyang2001"},"content":"Examples:","lastModifiedDate":"2021-10-15"},{"lineNumber":243,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":244,"author":{"gitId":"tryyang2001"},"content":"- `add f/chicken rice c/607` adds record of food consumed: chicken rice with 607 calories gained.","lastModifiedDate":"2021-10-15"},{"lineNumber":245,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":246,"author":{"gitId":"tryyang2001"},"content":"```text","lastModifiedDate":"2021-10-15"},{"lineNumber":247,"author":{"gitId":"tryyang2001"},"content":"add f/chicken rice c/607","lastModifiedDate":"2021-10-15"},{"lineNumber":248,"author":{"gitId":"tryyang2001"},"content":"__________________________________________________________________________________________","lastModifiedDate":"2021-10-15"},{"lineNumber":249,"author":{"gitId":"tryyang2001"},"content":"A food item has been added:","lastModifiedDate":"2021-10-15"},{"lineNumber":250,"author":{"gitId":"tryyang2001"},"content":"    chicken rice (607 cal)","lastModifiedDate":"2021-10-15"},{"lineNumber":251,"author":{"gitId":"tryyang2001"},"content":"__________________________________________________________________________________________","lastModifiedDate":"2021-10-15"},{"lineNumber":252,"author":{"gitId":"tryyang2001"},"content":"```","lastModifiedDate":"2021-10-15"},{"lineNumber":253,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":254,"author":{"gitId":"tryyang2001"},"content":"- `add e/hiit c/290` adds record of exercise done: hiit with 290 calories burnt.","lastModifiedDate":"2021-10-15"},{"lineNumber":255,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":256,"author":{"gitId":"tryyang2001"},"content":"```text","lastModifiedDate":"2021-10-15"},{"lineNumber":257,"author":{"gitId":"tryyang2001"},"content":"add e/hiit c/290","lastModifiedDate":"2021-10-15"},{"lineNumber":258,"author":{"gitId":"tryyang2001"},"content":"__________________________________________________________________________________________","lastModifiedDate":"2021-10-15"},{"lineNumber":259,"author":{"gitId":"tryyang2001"},"content":"An exercise has been added:","lastModifiedDate":"2021-10-15"},{"lineNumber":260,"author":{"gitId":"tryyang2001"},"content":"    hiit (290 cal)","lastModifiedDate":"2021-10-15"},{"lineNumber":261,"author":{"gitId":"tryyang2001"},"content":"__________________________________________________________________________________________","lastModifiedDate":"2021-10-15"},{"lineNumber":262,"author":{"gitId":"tryyang2001"},"content":"```","lastModifiedDate":"2021-10-15"},{"lineNumber":263,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":264,"author":{"gitId":"tryyang2001"},"content":"### **View** **Exercise and Food Items:** `view`","lastModifiedDate":"2021-10-15"},{"lineNumber":265,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":266,"author":{"gitId":"tryyang2001"},"content":"Views all the food or exercises added.","lastModifiedDate":"2021-10-15"},{"lineNumber":267,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":268,"author":{"gitId":"tryyang2001"},"content":"Format:","lastModifiedDate":"2021-10-15"},{"lineNumber":269,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":270,"author":{"gitId":"tryyang2001"},"content":"- `view f/` views all the food and the calories added to the list.","lastModifiedDate":"2021-10-15"},{"lineNumber":271,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":272,"author":{"gitId":"tryyang2001"},"content":"```text","lastModifiedDate":"2021-10-15"},{"lineNumber":273,"author":{"gitId":"tryyang2001"},"content":"view f/","lastModifiedDate":"2021-10-15"},{"lineNumber":274,"author":{"gitId":"tryyang2001"},"content":"__________________________________________________________________________________________","lastModifiedDate":"2021-10-15"},{"lineNumber":275,"author":{"gitId":"tryyang2001"},"content":"You have consumed 4 food item(s):","lastModifiedDate":"2021-10-15"},{"lineNumber":276,"author":{"gitId":"tryyang2001"},"content":"    1. chicken rice (607 cal)","lastModifiedDate":"2021-10-15"},{"lineNumber":277,"author":{"gitId":"tryyang2001"},"content":"    2. yong tau foo (536 cal)","lastModifiedDate":"2021-10-15"},{"lineNumber":278,"author":{"gitId":"tryyang2001"},"content":"    3. mcspicy alacarte (528 cal)","lastModifiedDate":"2021-10-15"},{"lineNumber":279,"author":{"gitId":"tryyang2001"},"content":"    4. char kway teow (744 cal)","lastModifiedDate":"2021-10-15"},{"lineNumber":280,"author":{"gitId":"tryyang2001"},"content":"Total calories consumed: 2415","lastModifiedDate":"2021-10-15"},{"lineNumber":281,"author":{"gitId":"tryyang2001"},"content":"__________________________________________________________________________________________","lastModifiedDate":"2021-10-15"},{"lineNumber":282,"author":{"gitId":"tryyang2001"},"content":"```","lastModifiedDate":"2021-10-15"},{"lineNumber":283,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":284,"author":{"gitId":"tryyang2001"},"content":"- `view e/` views all the exercises and the calories added to list.","lastModifiedDate":"2021-10-15"},{"lineNumber":285,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":286,"author":{"gitId":"tryyang2001"},"content":"```text","lastModifiedDate":"2021-10-15"},{"lineNumber":287,"author":{"gitId":"tryyang2001"},"content":"view e/","lastModifiedDate":"2021-10-15"},{"lineNumber":288,"author":{"gitId":"tryyang2001"},"content":"__________________________________________________________________________________________","lastModifiedDate":"2021-10-15"},{"lineNumber":289,"author":{"gitId":"tryyang2001"},"content":"You have done 2 exercise(s):","lastModifiedDate":"2021-10-15"},{"lineNumber":290,"author":{"gitId":"tryyang2001"},"content":"    1. hiit (290 cal)","lastModifiedDate":"2021-10-15"},{"lineNumber":291,"author":{"gitId":"tryyang2001"},"content":"    2. biking (500 cal)","lastModifiedDate":"2021-10-15"},{"lineNumber":292,"author":{"gitId":"tryyang2001"},"content":"Total calories burnt: 790","lastModifiedDate":"2021-10-15"},{"lineNumber":293,"author":{"gitId":"tryyang2001"},"content":"__________________________________________________________________________________________","lastModifiedDate":"2021-10-15"},{"lineNumber":294,"author":{"gitId":"tryyang2001"},"content":"```","lastModifiedDate":"2021-10-15"},{"lineNumber":295,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":296,"author":{"gitId":"tryyang2001"},"content":"- `view` views all food and exercises in the list and their respective calories.","lastModifiedDate":"2021-10-15"},{"lineNumber":297,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":298,"author":{"gitId":"tryyang2001"},"content":"```text","lastModifiedDate":"2021-10-15"},{"lineNumber":299,"author":{"gitId":"tryyang2001"},"content":"view","lastModifiedDate":"2021-10-15"},{"lineNumber":300,"author":{"gitId":"tryyang2001"},"content":"__________________________________________________________________________________________","lastModifiedDate":"2021-10-15"},{"lineNumber":301,"author":{"gitId":"tryyang2001"},"content":"You have consumed 4 food item(s):","lastModifiedDate":"2021-10-15"},{"lineNumber":302,"author":{"gitId":"tryyang2001"},"content":"    1. chicken rice (607 cal)","lastModifiedDate":"2021-10-15"},{"lineNumber":303,"author":{"gitId":"tryyang2001"},"content":"    2. yong tau foo (536 cal)","lastModifiedDate":"2021-10-15"},{"lineNumber":304,"author":{"gitId":"tryyang2001"},"content":"    3. mcspicy alacarte (528 cal)","lastModifiedDate":"2021-10-15"},{"lineNumber":305,"author":{"gitId":"tryyang2001"},"content":"    4. char kway teow (744 cal)","lastModifiedDate":"2021-10-15"},{"lineNumber":306,"author":{"gitId":"tryyang2001"},"content":"Total calories consumed: 2415","lastModifiedDate":"2021-10-15"},{"lineNumber":307,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":308,"author":{"gitId":"tryyang2001"},"content":"You have done 2 exercise(s):","lastModifiedDate":"2021-10-15"},{"lineNumber":309,"author":{"gitId":"tryyang2001"},"content":"    1. hiit (290 cal)","lastModifiedDate":"2021-10-15"},{"lineNumber":310,"author":{"gitId":"tryyang2001"},"content":"    2. biking (500 cal)","lastModifiedDate":"2021-10-15"},{"lineNumber":311,"author":{"gitId":"tryyang2001"},"content":"Total calories burnt: 790","lastModifiedDate":"2021-10-15"},{"lineNumber":312,"author":{"gitId":"tryyang2001"},"content":"__________________________________________________________________________________________","lastModifiedDate":"2021-10-15"},{"lineNumber":313,"author":{"gitId":"tryyang2001"},"content":"```","lastModifiedDate":"2021-10-15"},{"lineNumber":314,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":315,"author":{"gitId":"tryyang2001"},"content":"### **Delete** **Exercise and Food Items:** `delete`","lastModifiedDate":"2021-10-15"},{"lineNumber":316,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":317,"author":{"gitId":"tryyang2001"},"content":"Deletes entry of food or exercise added.","lastModifiedDate":"2021-10-15"},{"lineNumber":318,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":319,"author":{"gitId":"tryyang2001"},"content":"Format:","lastModifiedDate":"2021-10-15"},{"lineNumber":320,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":321,"author":{"gitId":"tryyang2001"},"content":"`delete f/LIST_NO.` deletes the n\u003csup\u003eth\u003c/sup\u003e item in the food list.","lastModifiedDate":"2021-10-15"},{"lineNumber":322,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":323,"author":{"gitId":"tryyang2001"},"content":"`delete e/LIST_NO.` deletes the n\u003csup\u003eth\u003c/sup\u003e item in the exercise list.","lastModifiedDate":"2021-10-15"},{"lineNumber":324,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":325,"author":{"gitId":"tryyang2001"},"content":"`delete f/all` deletes all the food items in the food list.","lastModifiedDate":"2021-10-15"},{"lineNumber":326,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":327,"author":{"gitId":"tryyang2001"},"content":"`delete e/all` deletes all the exercise items in the exercise list.","lastModifiedDate":"2021-10-15"},{"lineNumber":328,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":329,"author":{"gitId":"tryyang2001"},"content":"❗ `LIST_NO.` must be a positive integer within the range of the number of items in the list.","lastModifiedDate":"2021-10-15"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":331,"author":{"gitId":"tryyang2001"},"content":"```text","lastModifiedDate":"2021-10-15"},{"lineNumber":332,"author":{"gitId":"tryyang2001"},"content":"delete f/2","lastModifiedDate":"2021-10-15"},{"lineNumber":333,"author":{"gitId":"tryyang2001"},"content":"__________________________________________________________________________________________","lastModifiedDate":"2021-10-15"},{"lineNumber":334,"author":{"gitId":"tryyang2001"},"content":"A food item has been deleted:","lastModifiedDate":"2021-10-15"},{"lineNumber":335,"author":{"gitId":"tryyang2001"},"content":"    yong tau foo (536 cal)","lastModifiedDate":"2021-10-15"},{"lineNumber":336,"author":{"gitId":"tryyang2001"},"content":"    Number of food item(s) left: 3","lastModifiedDate":"2021-10-15"},{"lineNumber":337,"author":{"gitId":"tryyang2001"},"content":"__________________________________________________________________________________________","lastModifiedDate":"2021-10-15"},{"lineNumber":338,"author":{"gitId":"tryyang2001"},"content":"delete e/1","lastModifiedDate":"2021-10-15"},{"lineNumber":339,"author":{"gitId":"tryyang2001"},"content":"__________________________________________________________________________________________","lastModifiedDate":"2021-10-15"},{"lineNumber":340,"author":{"gitId":"tryyang2001"},"content":"You have removed the exercise:","lastModifiedDate":"2021-10-15"},{"lineNumber":341,"author":{"gitId":"tryyang2001"},"content":"    hiit (290 cal)","lastModifiedDate":"2021-10-15"},{"lineNumber":342,"author":{"gitId":"tryyang2001"},"content":"Number of exercise item(s) left: 1","lastModifiedDate":"2021-10-15"},{"lineNumber":343,"author":{"gitId":"tryyang2001"},"content":"__________________________________________________________________________________________","lastModifiedDate":"2021-10-15"},{"lineNumber":344,"author":{"gitId":"tryyang2001"},"content":"delete f/all","lastModifiedDate":"2021-10-15"},{"lineNumber":345,"author":{"gitId":"tryyang2001"},"content":"__________________________________________________________________________________________________________","lastModifiedDate":"2021-10-15"},{"lineNumber":346,"author":{"gitId":"tryyang2001"},"content":"All food items have been removed.","lastModifiedDate":"2021-10-15"},{"lineNumber":347,"author":{"gitId":"tryyang2001"},"content":"__________________________________________________________________________________________________________","lastModifiedDate":"2021-10-15"},{"lineNumber":348,"author":{"gitId":"tryyang2001"},"content":"delete e/all","lastModifiedDate":"2021-10-15"},{"lineNumber":349,"author":{"gitId":"tryyang2001"},"content":"__________________________________________________________________________________________________________","lastModifiedDate":"2021-10-15"},{"lineNumber":350,"author":{"gitId":"tryyang2001"},"content":"All exercise items have been removed.","lastModifiedDate":"2021-10-15"},{"lineNumber":351,"author":{"gitId":"tryyang2001"},"content":"__________________________________________________________________________________________________________","lastModifiedDate":"2021-10-15"},{"lineNumber":352,"author":{"gitId":"tryyang2001"},"content":"```","lastModifiedDate":"2021-10-15"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":354,"author":{"gitId":"tryyang2001"},"content":"### **Calculate net calories**: `overview`","lastModifiedDate":"2021-10-15"},{"lineNumber":355,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":356,"author":{"gitId":"tryyang2001"},"content":"Views the difference between the calories consumed and the calories lost (in cal).","lastModifiedDate":"2021-10-15"},{"lineNumber":357,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":358,"author":{"gitId":"tryyang2001"},"content":"Format: `overview`","lastModifiedDate":"2021-10-15"},{"lineNumber":359,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":360,"author":{"gitId":"tryyang2001"},"content":"```text","lastModifiedDate":"2021-10-15"},{"lineNumber":361,"author":{"gitId":"tryyang2001"},"content":"overview","lastModifiedDate":"2021-10-15"},{"lineNumber":362,"author":{"gitId":"tryyang2001"},"content":"__________________________________________________________________________________________","lastModifiedDate":"2021-10-15"},{"lineNumber":363,"author":{"gitId":"tryyang2001"},"content":"Your calorie gained from food is: 2415","lastModifiedDate":"2021-10-15"},{"lineNumber":364,"author":{"gitId":"tryyang2001"},"content":"Your calorie lost from exercise is: 790","lastModifiedDate":"2021-10-15"},{"lineNumber":365,"author":{"gitId":"tryyang2001"},"content":"Your net calorie intake is: 1625","lastModifiedDate":"2021-10-15"},{"lineNumber":366,"author":{"gitId":"tryyang2001"},"content":"Your calorie goal is: 2000","lastModifiedDate":"2021-10-15"},{"lineNumber":367,"author":{"gitId":"tryyang2001"},"content":"You are 375 cal away from your goal","lastModifiedDate":"2021-10-15"},{"lineNumber":368,"author":{"gitId":"tryyang2001"},"content":"__________________________________________________________________________________________","lastModifiedDate":"2021-10-15"},{"lineNumber":369,"author":{"gitId":"tryyang2001"},"content":"```","lastModifiedDate":"2021-10-15"},{"lineNumber":370,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":371,"author":{"gitId":"tryyang2001"},"content":"### Exit the program: `bye`","lastModifiedDate":"2021-10-15"},{"lineNumber":372,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":373,"author":{"gitId":"tryyang2001"},"content":"Exits the program.","lastModifiedDate":"2021-10-15"},{"lineNumber":374,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":375,"author":{"gitId":"tryyang2001"},"content":"Format: `bye`","lastModifiedDate":"2021-10-15"},{"lineNumber":376,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":377,"author":{"gitId":"tryyang2001"},"content":"```text","lastModifiedDate":"2021-10-15"},{"lineNumber":378,"author":{"gitId":"tryyang2001"},"content":"bye","lastModifiedDate":"2021-10-15"},{"lineNumber":379,"author":{"gitId":"tryyang2001"},"content":"__________________________________________________________________________________________","lastModifiedDate":"2021-10-15"},{"lineNumber":380,"author":{"gitId":"tryyang2001"},"content":"Exiting Fitbot....","lastModifiedDate":"2021-10-15"},{"lineNumber":381,"author":{"gitId":"tryyang2001"},"content":"Bye! Hope to see you again soon!!","lastModifiedDate":"2021-10-15"},{"lineNumber":382,"author":{"gitId":"tryyang2001"},"content":"__________________________________________________________________________________________","lastModifiedDate":"2021-10-15"},{"lineNumber":383,"author":{"gitId":"tryyang2001"},"content":"```","lastModifiedDate":"2021-10-15"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":385,"author":{"gitId":"tryyang2001"},"content":"### Saving the data","lastModifiedDate":"2021-10-15"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":387,"author":{"gitId":"tryyang2001"},"content":"There is no need to save manually. Any updates made to the data will be automatically stored into the local drive and reloaded when *FitBot* is restarted.","lastModifiedDate":"2021-10-15"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":389,"author":{"gitId":"tryyang2001"},"content":"### Command Summary","lastModifiedDate":"2021-10-15"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":391,"author":{"gitId":"tryyang2001"},"content":"| Action | Format | Examples |","lastModifiedDate":"2021-10-15"},{"lineNumber":392,"author":{"gitId":"tryyang2001"},"content":"|---------|----------|-------|","lastModifiedDate":"2021-10-15"},{"lineNumber":393,"author":{"gitId":"tryyang2001"},"content":"add|`add f/ITEM c/CALORIE`  `add e/ITEM c/CALORIES` | `add f/chicken rice c/607`, `add e/hiit c/290`","lastModifiedDate":"2021-10-15"},{"lineNumber":394,"author":{"gitId":"tryyang2001"},"content":"bmi|`bmi h/HEIGHT_IN_CM w/WEIGHT_IN_KG` `bmi`|`bmi h/170 w/65` , `bmi`","lastModifiedDate":"2021-10-15"},{"lineNumber":395,"author":{"gitId":"tryyang2001"},"content":"bye|`bye`|","lastModifiedDate":"2021-10-15"},{"lineNumber":396,"author":{"gitId":"tryyang2001"},"content":"delete|`delete f/LIST_NO.`  `delete e/LIST_NO.`  `delete f/all`  `delete e/all` |`delete f/1`, `delete e/2`, `delete f/all`,  `delete e/all`","lastModifiedDate":"2021-10-15"},{"lineNumber":397,"author":{"gitId":"tryyang2001"},"content":"goal |`goal CALORIE_IN_CAL` | `goal 2000`","lastModifiedDate":"2021-10-15"},{"lineNumber":398,"author":{"gitId":"tryyang2001"},"content":"height|`height HEIGHT_IN_CM` | `height 170`","lastModifiedDate":"2021-10-15"},{"lineNumber":399,"author":{"gitId":"tryyang2001"},"content":"help | `help`|","lastModifiedDate":"2021-10-15"},{"lineNumber":400,"author":{"gitId":"tryyang2001"},"content":"name|`name NAME`|`height 170`","lastModifiedDate":"2021-10-15"},{"lineNumber":401,"author":{"gitId":"tryyang2001"},"content":"overview|`overview`|","lastModifiedDate":"2021-10-15"},{"lineNumber":402,"author":{"gitId":"tryyang2001"},"content":"profile|`profile h/HEIGHT_IN_CM w/WEIGHT_IN_KG n/NAME g/CALORIE_IN_CAL` `profile`|`profile h/170 w/65 n/John g/2000`, `profile`","lastModifiedDate":"2021-10-15"},{"lineNumber":403,"author":{"gitId":"tryyang2001"},"content":"view|`view`|`view e/`,  `view f/`, `view`","lastModifiedDate":"2021-10-15"},{"lineNumber":404,"author":{"gitId":"tryyang2001"},"content":"weight|`weight WEIGHT_IN_KG`|`weight 65`","lastModifiedDate":"2021-10-15"}],"authorContributionMap":{"tryyang2001":383,"-":21}},{"path":"docs/team/tayweida.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"weidak"},"content":"# Weida - Project Portfolio Page","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Overview","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"### Summary of Contributions","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"weidak":1,"-":5}},{"path":"src/main/java/seedu/duke/Main.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"tlyi"},"content":"import seedu.duke.commands.ByeCommand;","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"tlyi"},"content":"import seedu.duke.commands.Command;","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"tlyi"},"content":"import seedu.duke.commands.CommandResult;","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"tlyi"},"content":"import seedu.duke.item.ItemBank;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"tryyang2001"},"content":"import seedu.duke.item.exercise.ExerciseList;","lastModifiedDate":"2021-10-16"},{"lineNumber":8,"author":{"gitId":"xingjie99"},"content":"import seedu.duke.item.exercise.FutureExerciseList;","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"tryyang2001"},"content":"import seedu.duke.item.food.FoodList;","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"tlyi"},"content":"import seedu.duke.parser.Parser;","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"tlyi"},"content":"import seedu.duke.profile.Profile;","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"weidak"},"content":"import seedu.duke.storage.Storage;","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"weidak"},"content":"import seedu.duke.storage.exceptions.UnableToReadFileException;","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"tlyi"},"content":"import seedu.duke.storage.exceptions.UnableToWriteFileException;","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"tlyi"},"content":"import seedu.duke.ui.Statistics;","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"tlyi"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"tlyi"},"content":"/**","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"tlyi"},"content":" * Main class of Fitbot.","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"tlyi"},"content":" * Initialises the application and starts interaction with user.","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"tlyi"},"content":" */","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"tlyi"},"content":"public class Main {","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"tlyi"},"content":"    private ExerciseList exerciseItems;","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"xingjie99"},"content":"    private FutureExerciseList futureExerciseItems;","lastModifiedDate":"2021-10-18"},{"lineNumber":27,"author":{"gitId":"tlyi"},"content":"    private FoodList foodItems;","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"tlyi"},"content":"    private ItemBank exerciseBank;","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"tlyi"},"content":"    private ItemBank foodBank;","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"tlyi"},"content":"    private Profile profile;","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"tlyi"},"content":"    private Ui ui;","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"weidak"},"content":"    private Storage storage;","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"tttyyzzz"},"content":"    private Statistics statistics;","lastModifiedDate":"2021-10-13"},{"lineNumber":34,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":35,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":36,"author":{"gitId":"tlyi"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":37,"author":{"gitId":"tlyi"},"content":"     * Entry point of the application.","lastModifiedDate":"2021-10-10"},{"lineNumber":38,"author":{"gitId":"tlyi"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":39,"author":{"gitId":"tlyi"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-10-10"},{"lineNumber":40,"author":{"gitId":"tlyi"},"content":"        new Main().run(args);","lastModifiedDate":"2021-10-10"},{"lineNumber":41,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":42,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":43,"author":{"gitId":"tlyi"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":44,"author":{"gitId":"tlyi"},"content":"     * Runs the application until command is given to exit it.","lastModifiedDate":"2021-10-10"},{"lineNumber":45,"author":{"gitId":"tlyi"},"content":"     **/","lastModifiedDate":"2021-10-10"},{"lineNumber":46,"author":{"gitId":"tlyi"},"content":"    private void run(String[] args) {","lastModifiedDate":"2021-10-10"},{"lineNumber":47,"author":{"gitId":"tlyi"},"content":"        start();","lastModifiedDate":"2021-10-10"},{"lineNumber":48,"author":{"gitId":"tlyi"},"content":"        enterTaskModeUntilByeCommand();","lastModifiedDate":"2021-10-10"},{"lineNumber":49,"author":{"gitId":"tlyi"},"content":"        exit();","lastModifiedDate":"2021-10-10"},{"lineNumber":50,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":51,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":52,"author":{"gitId":"tlyi"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":53,"author":{"gitId":"tlyi"},"content":"     * Initialises the application by creating the required objects and loading data from the","lastModifiedDate":"2021-10-13"},{"lineNumber":54,"author":{"gitId":"tlyi"},"content":"     * storage file, then showing the welcome message.","lastModifiedDate":"2021-10-10"},{"lineNumber":55,"author":{"gitId":"tlyi"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":56,"author":{"gitId":"tlyi"},"content":"    private void start() {","lastModifiedDate":"2021-10-10"},{"lineNumber":57,"author":{"gitId":"weidak"},"content":"        this.storage \u003d new Storage();","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"tlyi"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2021-10-11"},{"lineNumber":59,"author":{"gitId":"tlyi"},"content":"        //TODO: replace these with ones from storage","lastModifiedDate":"2021-10-19"},{"lineNumber":60,"author":{"gitId":"tlyi"},"content":"        this.exerciseBank \u003d new ItemBank();","lastModifiedDate":"2021-10-19"},{"lineNumber":61,"author":{"gitId":"tlyi"},"content":"        this.foodBank \u003d new ItemBank();","lastModifiedDate":"2021-10-19"},{"lineNumber":62,"author":{"gitId":"tlyi"},"content":"        this.futureExerciseItems \u003d new FutureExerciseList();","lastModifiedDate":"2021-10-19"},{"lineNumber":63,"author":{"gitId":"weidak"},"content":"        try {","lastModifiedDate":"2021-10-12"},{"lineNumber":64,"author":{"gitId":"weidak"},"content":"            this.profile \u003d storage.loadProfileFile();","lastModifiedDate":"2021-10-12"},{"lineNumber":65,"author":{"gitId":"weidak"},"content":"            this.foodItems \u003d storage.loadFoodListFile();","lastModifiedDate":"2021-10-12"},{"lineNumber":66,"author":{"gitId":"weidak"},"content":"            this.exerciseItems \u003d storage.loadExerciseListFile();","lastModifiedDate":"2021-10-12"},{"lineNumber":67,"author":{"gitId":"weidak"},"content":"        } catch (UnableToReadFileException e) {","lastModifiedDate":"2021-10-12"},{"lineNumber":68,"author":{"gitId":"tlyi"},"content":"            ui.formatMessageFramedWithDivider(e.getMessage());","lastModifiedDate":"2021-10-13"},{"lineNumber":69,"author":{"gitId":"weidak"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":70,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":71,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":72,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":73,"author":{"gitId":"tlyi"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":74,"author":{"gitId":"tlyi"},"content":"     * Reads the user input and executes appropriate command.","lastModifiedDate":"2021-10-10"},{"lineNumber":75,"author":{"gitId":"tlyi"},"content":"     * Runs indefinitely until user inputs the Bye command.","lastModifiedDate":"2021-10-10"},{"lineNumber":76,"author":{"gitId":"tlyi"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":77,"author":{"gitId":"tlyi"},"content":"    private void enterTaskModeUntilByeCommand() {","lastModifiedDate":"2021-10-10"},{"lineNumber":78,"author":{"gitId":"tlyi"},"content":"        Command command;","lastModifiedDate":"2021-10-10"},{"lineNumber":79,"author":{"gitId":"tlyi"},"content":"        do {","lastModifiedDate":"2021-10-10"},{"lineNumber":80,"author":{"gitId":"tlyi"},"content":"            String userInput \u003d ui.getUserInput();","lastModifiedDate":"2021-10-11"},{"lineNumber":81,"author":{"gitId":"tlyi"},"content":"            command \u003d new Parser().parseCommand(userInput);","lastModifiedDate":"2021-10-11"},{"lineNumber":82,"author":{"gitId":"tlyi"},"content":"            CommandResult result \u003d executeCommand(command);","lastModifiedDate":"2021-10-10"},{"lineNumber":83,"author":{"gitId":"tlyi"},"content":"            ui.formatMessageFramedWithDivider(result.toString());","lastModifiedDate":"2021-10-11"},{"lineNumber":84,"author":{"gitId":"tlyi"},"content":"        } while (!ByeCommand.isBye(command));","lastModifiedDate":"2021-10-10"},{"lineNumber":85,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":86,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":87,"author":{"gitId":"tlyi"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":88,"author":{"gitId":"tlyi"},"content":"     * Executes the given Command and (to be implemented) calls for storage operation if required.","lastModifiedDate":"2021-10-10"},{"lineNumber":89,"author":{"gitId":"tlyi"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":90,"author":{"gitId":"tlyi"},"content":"     * @param command Command to be executed","lastModifiedDate":"2021-10-10"},{"lineNumber":91,"author":{"gitId":"tlyi"},"content":"     * @return CommandResult representing result of execution of the command","lastModifiedDate":"2021-10-10"},{"lineNumber":92,"author":{"gitId":"tlyi"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":93,"author":{"gitId":"tlyi"},"content":"    private CommandResult executeCommand(Command command) {","lastModifiedDate":"2021-10-10"},{"lineNumber":94,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":95,"author":{"gitId":"tlyi"},"content":"        command.setData(this.profile, this.exerciseItems, this.futureExerciseItems,","lastModifiedDate":"2021-10-19"},{"lineNumber":96,"author":{"gitId":"tlyi"},"content":"                this.foodItems, this.exerciseBank, this.foodBank);","lastModifiedDate":"2021-10-19"},{"lineNumber":97,"author":{"gitId":"tlyi"},"content":"        CommandResult result \u003d command.execute();","lastModifiedDate":"2021-10-10"},{"lineNumber":98,"author":{"gitId":"tlyi"},"content":"        try {","lastModifiedDate":"2021-10-12"},{"lineNumber":99,"author":{"gitId":"tlyi"},"content":"            if (ByeCommand.isBye(command)) {","lastModifiedDate":"2021-10-12"},{"lineNumber":100,"author":{"gitId":"tlyi"},"content":"                storage.saveAll(this.profile, this.exerciseItems, this.foodItems);","lastModifiedDate":"2021-10-13"},{"lineNumber":101,"author":{"gitId":"tlyi"},"content":"            }","lastModifiedDate":"2021-10-12"},{"lineNumber":102,"author":{"gitId":"tlyi"},"content":"            if (Command.requiresProfileStorageRewrite(command)) {","lastModifiedDate":"2021-10-12"},{"lineNumber":103,"author":{"gitId":"tlyi"},"content":"                storage.saveProfile(this.profile);","lastModifiedDate":"2021-10-13"},{"lineNumber":104,"author":{"gitId":"tlyi"},"content":"            }","lastModifiedDate":"2021-10-12"},{"lineNumber":105,"author":{"gitId":"tlyi"},"content":"            if (Command.requiresExerciseListStorageRewrite(command)) {","lastModifiedDate":"2021-10-12"},{"lineNumber":106,"author":{"gitId":"tlyi"},"content":"                storage.saveExercises(this.exerciseItems);","lastModifiedDate":"2021-10-13"},{"lineNumber":107,"author":{"gitId":"tlyi"},"content":"            }","lastModifiedDate":"2021-10-12"},{"lineNumber":108,"author":{"gitId":"tlyi"},"content":"            if (Command.requiresFoodListStorageRewrite(command)) {","lastModifiedDate":"2021-10-12"},{"lineNumber":109,"author":{"gitId":"tlyi"},"content":"                storage.saveFoodList(this.foodItems);","lastModifiedDate":"2021-10-13"},{"lineNumber":110,"author":{"gitId":"tlyi"},"content":"            }","lastModifiedDate":"2021-10-12"},{"lineNumber":111,"author":{"gitId":"xingjie99"},"content":"            if (Command.requiresFutureExerciseListStorageRewrite(command)) {","lastModifiedDate":"2021-10-18"},{"lineNumber":112,"author":{"gitId":"xingjie99"},"content":"                //TODO","lastModifiedDate":"2021-10-18"},{"lineNumber":113,"author":{"gitId":"xingjie99"},"content":"                //storage.saveFutureExercises(this.futureExerciseItems);","lastModifiedDate":"2021-10-18"},{"lineNumber":114,"author":{"gitId":"xingjie99"},"content":"            }","lastModifiedDate":"2021-10-18"},{"lineNumber":115,"author":{"gitId":"tlyi"},"content":"        } catch (UnableToWriteFileException e) {","lastModifiedDate":"2021-10-13"},{"lineNumber":116,"author":{"gitId":"tlyi"},"content":"            ui.formatMessageFramedWithDivider(e.getMessage());","lastModifiedDate":"2021-10-13"},{"lineNumber":117,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":118,"author":{"gitId":"tlyi"},"content":"        return result;","lastModifiedDate":"2021-10-10"},{"lineNumber":119,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":120,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":121,"author":{"gitId":"tlyi"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":122,"author":{"gitId":"tlyi"},"content":"     * Exits the application.","lastModifiedDate":"2021-10-10"},{"lineNumber":123,"author":{"gitId":"tlyi"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":124,"author":{"gitId":"tlyi"},"content":"    private void exit() {","lastModifiedDate":"2021-10-10"},{"lineNumber":125,"author":{"gitId":"tlyi"},"content":"        System.exit(0);","lastModifiedDate":"2021-10-10"},{"lineNumber":126,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":127,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":128,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":129,"author":{"gitId":"tlyi"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"weidak":10,"tttyyzzz":1,"tryyang2001":2,"xingjie99":6,"tlyi":110}},{"path":"src/main/java/seedu/duke/commands/AddExerciseBankCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.commands;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"tlyi"},"content":"import seedu.duke.item.exercise.Exercise;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"tlyi"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"tlyi"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"tlyi"},"content":"/**","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"tlyi"},"content":" * Represents the command that when executed, adds an Exercise item to the ExerciseBank.","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"tlyi"},"content":" */","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"tlyi"},"content":"public class AddExerciseBankCommand extends Command {","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_COMMAND_FORMAT \u003d QUOTATION + COMMAND_WORD_ADD","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"tlyi"},"content":"            + \" \" + COMMAND_PREFIX_EXERCISE_BANK + COMMAND_PREFIX_DELIMITER + \"exercise name\"","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"tlyi"},"content":"            + \" \" + COMMAND_PREFIX_CALORIES + COMMAND_PREFIX_DELIMITER + \"calories\" + QUOTATION;","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"An exercise item has been added to the exercise bank:\"","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"tlyi"},"content":"            + INDENTED_LS + \"%s\";","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_INVALID_EXERCISE_CALORIES \u003d \"Exercise calories cannot be less than or equal to 0\"","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"tlyi"},"content":"            + LS + \"Try a positive value instead\";","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"tlyi"},"content":"    public static final String[] EXPECTED_PREFIXES \u003d {","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"tlyi"},"content":"            COMMAND_PREFIX_EXERCISE_BANK,","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"tlyi"},"content":"            COMMAND_PREFIX_CALORIES","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"tlyi"},"content":"    };","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"tlyi"},"content":"    private static Logger logger \u003d Logger.getLogger(AddExerciseBankCommand.class.getName());","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"tlyi"},"content":"    private Exercise exercise;","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"tlyi"},"content":"    public AddExerciseBankCommand(String description, int calories) {","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"tlyi"},"content":"        this.exercise \u003d new Exercise(description, calories);","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"tlyi"},"content":"    @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"tlyi"},"content":"    public CommandResult execute() {","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"tlyi"},"content":"        if (exercise.getCalories() \u003c\u003d 0) {","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"tlyi"},"content":"            logger.log(Level.WARNING, \"Exercise calorie is invalid\");","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"tlyi"},"content":"            return new CommandResult(MESSAGE_INVALID_EXERCISE_CALORIES);","lastModifiedDate":"2021-10-19"},{"lineNumber":37,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"tlyi"},"content":"        assert exercise.getCalories() \u003e 0 : \"Exercise calorie is valid\";","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"tlyi"},"content":"        super.exerciseBank.addItem(this.exercise);","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"tlyi"},"content":"        logger.log(Level.FINE, \"Exercise is successfully added to exercise bank\");","lastModifiedDate":"2021-10-19"},{"lineNumber":41,"author":{"gitId":"tlyi"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, this.exercise));","lastModifiedDate":"2021-10-19"},{"lineNumber":42,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":43,"author":{"gitId":"tlyi"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"tlyi":43}},{"path":"src/main/java/seedu/duke/commands/AddExerciseCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.commands;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"tlyi"},"content":"import seedu.duke.item.ItemNotFoundInBankException;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"tryyang2001"},"content":"import seedu.duke.item.exercise.Exercise;","lastModifiedDate":"2021-10-16"},{"lineNumber":5,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"tlyi"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"xingjie99"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"xingjie99"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"tlyi"},"content":"/**","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"tlyi"},"content":" * Represents the command that when executed, adds an Exercise item to the ExerciseList.","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"tlyi"},"content":" */","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"tlyi"},"content":"public class AddExerciseCommand extends Command {","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_COMMAND_FORMAT \u003d QUOTATION + COMMAND_WORD_ADD","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"tlyi"},"content":"            + \" \" + COMMAND_PREFIX_EXERCISE + COMMAND_PREFIX_DELIMITER + \"exercise name\"","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"tlyi"},"content":"            + \" \" + COMMAND_PREFIX_CALORIES + COMMAND_PREFIX_DELIMITER + \"calories\"","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"tlyi"},"content":"            + \" \" + COMMAND_PREFIX_DATE + COMMAND_PREFIX_DELIMITER + \"date\" + QUOTATION;","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"An exercise item has been added:\"","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"tlyi"},"content":"            + INDENTED_LS + \"%s\";","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"xingjie99"},"content":"    public static final String MESSAGE_INVALID_EXERCISE_CALORIES \u003d \"Exercise calories cannot be less than or equal to 0\"","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"tlyi"},"content":"            + LS + \"Try a positive value instead\";","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_INVALID_EXERCISE_NOT_IN_BANK \u003d \"%s was not found in the exercise bank! \"","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"tlyi"},"content":"            + \"Please specify the calories for this item.\";","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"tlyi"},"content":"    public static final String[] EXPECTED_PREFIXES \u003d {","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"tlyi"},"content":"            COMMAND_PREFIX_EXERCISE,","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"tlyi"},"content":"            COMMAND_PREFIX_CALORIES,","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"tlyi"},"content":"            COMMAND_PREFIX_DATE","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"tlyi"},"content":"    };","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"tlyi"},"content":"    private static Logger logger \u003d Logger.getLogger(AddExerciseCommand.class.getName());","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"tlyi"},"content":"    private String description;","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"tlyi"},"content":"    private int calories;","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"tlyi"},"content":"    private LocalDate date;","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"tlyi"},"content":"    private boolean isCaloriesFromBank;","lastModifiedDate":"2021-10-19"},{"lineNumber":37,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":38,"author":{"gitId":"tlyi"},"content":"    public AddExerciseCommand(String description, int calories, LocalDate date, boolean isCaloriesFromBank) {","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"tlyi"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"tlyi"},"content":"        this.calories \u003d calories;","lastModifiedDate":"2021-10-19"},{"lineNumber":41,"author":{"gitId":"tlyi"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-10-19"},{"lineNumber":42,"author":{"gitId":"tlyi"},"content":"        this.isCaloriesFromBank \u003d isCaloriesFromBank;","lastModifiedDate":"2021-10-19"},{"lineNumber":43,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":44,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":45,"author":{"gitId":"tlyi"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":46,"author":{"gitId":"tlyi"},"content":"    public CommandResult execute() {","lastModifiedDate":"2021-10-10"},{"lineNumber":47,"author":{"gitId":"tlyi"},"content":"        final Exercise exercise;","lastModifiedDate":"2021-10-19"},{"lineNumber":48,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":49,"author":{"gitId":"tlyi"},"content":"        if (isCaloriesFromBank) {","lastModifiedDate":"2021-10-19"},{"lineNumber":50,"author":{"gitId":"tlyi"},"content":"            try {","lastModifiedDate":"2021-10-19"},{"lineNumber":51,"author":{"gitId":"tlyi"},"content":"                this.calories \u003d super.exerciseBank.getCaloriesOfItemWithMatchingName(this.description);","lastModifiedDate":"2021-10-19"},{"lineNumber":52,"author":{"gitId":"tlyi"},"content":"                exercise \u003d new Exercise(this.description, this.calories, this.date);","lastModifiedDate":"2021-10-19"},{"lineNumber":53,"author":{"gitId":"tlyi"},"content":"            } catch (ItemNotFoundInBankException e) {","lastModifiedDate":"2021-10-19"},{"lineNumber":54,"author":{"gitId":"tlyi"},"content":"                return new CommandResult(String.format(MESSAGE_INVALID_EXERCISE_NOT_IN_BANK, this.description));","lastModifiedDate":"2021-10-19"},{"lineNumber":55,"author":{"gitId":"tlyi"},"content":"            }","lastModifiedDate":"2021-10-19"},{"lineNumber":56,"author":{"gitId":"tlyi"},"content":"        } else {","lastModifiedDate":"2021-10-19"},{"lineNumber":57,"author":{"gitId":"tlyi"},"content":"            if (this.calories \u003c\u003d 0) {","lastModifiedDate":"2021-10-19"},{"lineNumber":58,"author":{"gitId":"xingjie99"},"content":"                logger.log(Level.WARNING, \"Exercise calorie is invalid\");","lastModifiedDate":"2021-10-13"},{"lineNumber":59,"author":{"gitId":"xingjie99"},"content":"                return new CommandResult(MESSAGE_INVALID_EXERCISE_CALORIES);","lastModifiedDate":"2021-10-11"},{"lineNumber":60,"author":{"gitId":"weidak"},"content":"            }","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"tlyi"},"content":"            exercise \u003d new Exercise(this.description, this.calories, this.date);","lastModifiedDate":"2021-10-19"},{"lineNumber":62,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":63,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":64,"author":{"gitId":"xingjie99"},"content":"        assert exercise.getCalories() \u003e 0 : \"Exercise calorie is valid\";","lastModifiedDate":"2021-10-13"},{"lineNumber":65,"author":{"gitId":"tlyi"},"content":"        super.exerciseItems.addExercise(exercise);","lastModifiedDate":"2021-10-19"},{"lineNumber":66,"author":{"gitId":"tryyang2001"},"content":"        logger.log(Level.FINE, \"Exercise is successfully added\");","lastModifiedDate":"2021-10-14"},{"lineNumber":67,"author":{"gitId":"tlyi"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, exercise));","lastModifiedDate":"2021-10-19"},{"lineNumber":68,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":69,"author":{"gitId":"tlyi"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"weidak":1,"tryyang2001":2,"xingjie99":7,"tlyi":59}},{"path":"src/main/java/seedu/duke/commands/AddFoodBankCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.commands;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"tlyi"},"content":"import seedu.duke.item.food.Food;","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"tlyi"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"tlyi"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"tlyi"},"content":"/**","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"tlyi"},"content":" * Represents the command that when executed, adds a Food item to the FoodBank.","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"tlyi"},"content":" */","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"tlyi"},"content":"public class AddFoodBankCommand extends Command {","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_COMMAND_FORMAT \u003d QUOTATION + COMMAND_WORD_ADD","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"tlyi"},"content":"            + \" \" + COMMAND_PREFIX_FOOD_BANK + COMMAND_PREFIX_DELIMITER + \"exercise name\"","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"tlyi"},"content":"            + \" \" + COMMAND_PREFIX_CALORIES + COMMAND_PREFIX_DELIMITER + \"calories\" + QUOTATION;","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"A food item has been added to the food bank:\"","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"tlyi"},"content":"            + INDENTED_LS + \"%s\";","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_INVALID_FOOD_CALORIES \u003d \"Food calories cannot be less than 0\"","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"tlyi"},"content":"            + LS + \"Try a positive value instead\";","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"tlyi"},"content":"    public static final String[] EXPECTED_PREFIXES \u003d {","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"tlyi"},"content":"            COMMAND_PREFIX_FOOD_BANK,","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"tlyi"},"content":"            COMMAND_PREFIX_CALORIES","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"tlyi"},"content":"    };","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"tlyi"},"content":"    private static Logger logger \u003d Logger.getLogger(AddFoodBankCommand.class.getName());","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"tlyi"},"content":"    private Food food;","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"tlyi"},"content":"    public AddFoodBankCommand(String description, int calories) {","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"tlyi"},"content":"        this.food \u003d new Food(description, calories);","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"tlyi"},"content":"    @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"tlyi"},"content":"    public CommandResult execute() {","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"tlyi"},"content":"        if (food.getCalories() \u003c 0) {","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"tlyi"},"content":"            logger.log(Level.WARNING, \"Food calorie is invalid\");","lastModifiedDate":"2021-10-19"},{"lineNumber":37,"author":{"gitId":"tlyi"},"content":"            return new CommandResult(MESSAGE_INVALID_FOOD_CALORIES);","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"tlyi"},"content":"        assert food.getCalories() \u003e\u003d 0 : \"Food calorie is valid\";","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"tlyi"},"content":"        super.foodBank.addItem(this.food);","lastModifiedDate":"2021-10-19"},{"lineNumber":41,"author":{"gitId":"tlyi"},"content":"        logger.log(Level.FINE, \"Food is successfully added to food bank\");","lastModifiedDate":"2021-10-19"},{"lineNumber":42,"author":{"gitId":"tlyi"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, this.food));","lastModifiedDate":"2021-10-19"},{"lineNumber":43,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":44,"author":{"gitId":"tlyi"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"tlyi":44}},{"path":"src/main/java/seedu/duke/commands/AddFoodCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.commands;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"tlyi"},"content":"import seedu.duke.item.ItemNotFoundInBankException;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"tryyang2001"},"content":"import seedu.duke.item.food.Food;","lastModifiedDate":"2021-10-16"},{"lineNumber":5,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"tlyi"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"tryyang2001"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-10-14"},{"lineNumber":8,"author":{"gitId":"tryyang2001"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-14"},{"lineNumber":9,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":10,"author":{"gitId":"tlyi"},"content":"/**","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"tlyi"},"content":" * Represents the command that when executed, adds a Food item to the FoodList.","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"tlyi"},"content":" */","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"tlyi"},"content":"public class AddFoodCommand extends Command {","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_COMMAND_FORMAT \u003d QUOTATION + COMMAND_WORD_ADD","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"tlyi"},"content":"            + \" \" + COMMAND_PREFIX_FOOD + COMMAND_PREFIX_DELIMITER + \"food name\"","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"tlyi"},"content":"            + \" \" + COMMAND_PREFIX_CALORIES + COMMAND_PREFIX_DELIMITER + \"calories\"","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"tlyi"},"content":"            + \" \" + COMMAND_PREFIX_DATE + COMMAND_PREFIX_DELIMITER + \"date\"","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"tlyi"},"content":"            + \" \" + COMMAND_PREFIX_TIME + COMMAND_PREFIX_TIME + \"time\" + QUOTATION;","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"A food item has been added:\"","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"tlyi"},"content":"            + INDENTED_LS + \"%s\";","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_INVALID_FOOD_CALORIES \u003d \"Food calories cannot be less than 0\" + LS","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"tryyang2001"},"content":"            + \"Try a positive value instead\";","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_INVALID_FOOD_NOT_IN_BANK \u003d \"%s was not found in the food bank! \"","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"tlyi"},"content":"            + \"Please specify the calories for this item.\";","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"tlyi"},"content":"    public static final String[] EXPECTED_PREFIXES \u003d {","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"tlyi"},"content":"            COMMAND_PREFIX_FOOD,","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"tlyi"},"content":"            COMMAND_PREFIX_CALORIES,","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"tlyi"},"content":"            COMMAND_PREFIX_DATE,","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"tlyi"},"content":"            COMMAND_PREFIX_TIME","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"tlyi"},"content":"    };","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"tryyang2001"},"content":"    private Logger logger \u003d Logger.getLogger(AddFoodCommand.class.getName());","lastModifiedDate":"2021-10-14"},{"lineNumber":33,"author":{"gitId":"tlyi"},"content":"    private String description;","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"tlyi"},"content":"    private int calories;","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"tlyi"},"content":"    private LocalDateTime dateTime;","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"tlyi"},"content":"    private boolean isCaloriesFromBank;","lastModifiedDate":"2021-10-19"},{"lineNumber":37,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":38,"author":{"gitId":"tlyi"},"content":"    public AddFoodCommand(String description, int calories, LocalDateTime dateTime, boolean isCaloriesFromBank) {","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"tlyi"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"tlyi"},"content":"        this.calories \u003d calories;","lastModifiedDate":"2021-10-19"},{"lineNumber":41,"author":{"gitId":"tlyi"},"content":"        this.dateTime \u003d dateTime;","lastModifiedDate":"2021-10-19"},{"lineNumber":42,"author":{"gitId":"tlyi"},"content":"        this.isCaloriesFromBank \u003d isCaloriesFromBank;","lastModifiedDate":"2021-10-19"},{"lineNumber":43,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":44,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":45,"author":{"gitId":"tlyi"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":46,"author":{"gitId":"tlyi"},"content":"    public CommandResult execute() {","lastModifiedDate":"2021-10-10"},{"lineNumber":47,"author":{"gitId":"tlyi"},"content":"        final Food food;","lastModifiedDate":"2021-10-19"},{"lineNumber":48,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":49,"author":{"gitId":"tlyi"},"content":"        if (isCaloriesFromBank) {","lastModifiedDate":"2021-10-19"},{"lineNumber":50,"author":{"gitId":"tlyi"},"content":"            try {","lastModifiedDate":"2021-10-19"},{"lineNumber":51,"author":{"gitId":"tlyi"},"content":"                this.calories \u003d super.foodBank.getCaloriesOfItemWithMatchingName(this.description);","lastModifiedDate":"2021-10-19"},{"lineNumber":52,"author":{"gitId":"tlyi"},"content":"                food \u003d new Food(this.description, this.calories, this.dateTime);","lastModifiedDate":"2021-10-19"},{"lineNumber":53,"author":{"gitId":"tlyi"},"content":"            } catch (ItemNotFoundInBankException e) {","lastModifiedDate":"2021-10-19"},{"lineNumber":54,"author":{"gitId":"tlyi"},"content":"                return new CommandResult(String.format(MESSAGE_INVALID_FOOD_NOT_IN_BANK, this.description));","lastModifiedDate":"2021-10-19"},{"lineNumber":55,"author":{"gitId":"tlyi"},"content":"            }","lastModifiedDate":"2021-10-19"},{"lineNumber":56,"author":{"gitId":"tlyi"},"content":"        } else {","lastModifiedDate":"2021-10-19"},{"lineNumber":57,"author":{"gitId":"tlyi"},"content":"            if (this.calories \u003c 0) {","lastModifiedDate":"2021-10-19"},{"lineNumber":58,"author":{"gitId":"tryyang2001"},"content":"                logger.log(Level.WARNING, \"Detected negative food calorie\");","lastModifiedDate":"2021-10-14"},{"lineNumber":59,"author":{"gitId":"tryyang2001"},"content":"                return new CommandResult(MESSAGE_INVALID_FOOD_CALORIES);","lastModifiedDate":"2021-10-11"},{"lineNumber":60,"author":{"gitId":"tryyang2001"},"content":"            }","lastModifiedDate":"2021-10-11"},{"lineNumber":61,"author":{"gitId":"tlyi"},"content":"            food \u003d new Food(this.description, this.calories, this.dateTime);","lastModifiedDate":"2021-10-19"},{"lineNumber":62,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":63,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":64,"author":{"gitId":"tlyi"},"content":"        super.foodItems.addFood(food);","lastModifiedDate":"2021-10-19"},{"lineNumber":65,"author":{"gitId":"tryyang2001"},"content":"        assert foodItems.getSize() \u003e 0 : \"The size of the food list should at least larger than 0\";","lastModifiedDate":"2021-10-12"},{"lineNumber":66,"author":{"gitId":"tryyang2001"},"content":"        logger.log(Level.FINE, \"New food item has been added to the food list\");","lastModifiedDate":"2021-10-14"},{"lineNumber":67,"author":{"gitId":"tlyi"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, food));","lastModifiedDate":"2021-10-19"},{"lineNumber":68,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":69,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":70,"author":{"gitId":"tlyi"},"content":"}","lastModifiedDate":"2021-10-10"},{"lineNumber":71,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"tryyang2001":11,"tlyi":60}},{"path":"src/main/java/seedu/duke/commands/AddFutureExerciseCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xingjie99"},"content":"package seedu.duke.commands;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"xingjie99"},"content":"import seedu.duke.item.exercise.Exercise;","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"xingjie99"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"xingjie99"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"xingjie99"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"xingjie99"},"content":"/**","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"xingjie99"},"content":" * Represents the command that when executed, adds an Exercise item to the FutureExerciseList.","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"xingjie99"},"content":" */","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"xingjie99"},"content":"public class AddFutureExerciseCommand extends Command {","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_COMMAND_FORMAT \u003d QUOTATION + COMMAND_WORD_ADD","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"xingjie99"},"content":"            + \" \" + COMMAND_PREFIX_EXERCISE + COMMAND_PREFIX_DELIMITER + \"exercise name\"","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"tlyi"},"content":"            + \" \" + COMMAND_PREFIX_CALORIES + COMMAND_PREFIX_DELIMITER + \"calories\"","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"tlyi"},"content":"            + \" \" + COMMAND_PREFIX_DATE + COMMAND_PREFIX_DELIMITER + \"date\" + QUOTATION;","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"xingjie99"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"An exercise item for the future has been added:\"","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"tlyi"},"content":"            + INDENTED_LS + \"%s\";","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"xingjie99"},"content":"    public static final String MESSAGE_INVALID_EXERCISE_CALORIES \u003d \"Exercise calories cannot be less than or equal to 0\"","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"tlyi"},"content":"            + LS + \"Try a positive value instead\";","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"xingjie99"},"content":"    private static Logger logger \u003d Logger.getLogger(AddFutureExerciseCommand.class.getName());","lastModifiedDate":"2021-10-18"},{"lineNumber":23,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":24,"author":{"gitId":"xingjie99"},"content":"    private Exercise exercise;","lastModifiedDate":"2021-10-18"},{"lineNumber":25,"author":{"gitId":"xingjie99"},"content":"    private final String description;","lastModifiedDate":"2021-10-18"},{"lineNumber":26,"author":{"gitId":"xingjie99"},"content":"    private final int calories;","lastModifiedDate":"2021-10-18"},{"lineNumber":27,"author":{"gitId":"xingjie99"},"content":"    private final LocalDate date;","lastModifiedDate":"2021-10-18"},{"lineNumber":28,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":29,"author":{"gitId":"xingjie99"},"content":"    public AddFutureExerciseCommand(String description, int calories, LocalDate date) {","lastModifiedDate":"2021-10-18"},{"lineNumber":30,"author":{"gitId":"xingjie99"},"content":"        this.exercise \u003d new Exercise(description, calories, date);","lastModifiedDate":"2021-10-18"},{"lineNumber":31,"author":{"gitId":"xingjie99"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-10-18"},{"lineNumber":32,"author":{"gitId":"xingjie99"},"content":"        this.calories \u003d calories;","lastModifiedDate":"2021-10-18"},{"lineNumber":33,"author":{"gitId":"xingjie99"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-10-18"},{"lineNumber":34,"author":{"gitId":"xingjie99"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":35,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":36,"author":{"gitId":"xingjie99"},"content":"    @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":37,"author":{"gitId":"xingjie99"},"content":"    public CommandResult execute() {","lastModifiedDate":"2021-10-18"},{"lineNumber":38,"author":{"gitId":"xingjie99"},"content":"        if (exercise.getCalories() \u003c\u003d 0) {","lastModifiedDate":"2021-10-18"},{"lineNumber":39,"author":{"gitId":"xingjie99"},"content":"            logger.log(Level.WARNING, \"Exercise calorie is invalid\");","lastModifiedDate":"2021-10-18"},{"lineNumber":40,"author":{"gitId":"xingjie99"},"content":"            return new CommandResult(MESSAGE_INVALID_EXERCISE_CALORIES);","lastModifiedDate":"2021-10-18"},{"lineNumber":41,"author":{"gitId":"xingjie99"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":42,"author":{"gitId":"xingjie99"},"content":"        assert exercise.getCalories() \u003e 0 : \"Exercise calorie is valid\";","lastModifiedDate":"2021-10-18"},{"lineNumber":43,"author":{"gitId":"xingjie99"},"content":"        super.futureExerciseItems.addFutureExercise(this.exercise);","lastModifiedDate":"2021-10-18"},{"lineNumber":44,"author":{"gitId":"xingjie99"},"content":"        logger.log(Level.FINE, \"Exercise is successfully added\");","lastModifiedDate":"2021-10-18"},{"lineNumber":45,"author":{"gitId":"xingjie99"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, this.exercise));","lastModifiedDate":"2021-10-18"},{"lineNumber":46,"author":{"gitId":"xingjie99"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":47,"author":{"gitId":"xingjie99"},"content":"}","lastModifiedDate":"2021-10-18"},{"lineNumber":48,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"xingjie99":43,"tlyi":5}},{"path":"src/main/java/seedu/duke/commands/AddRecurringExerciseCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xingjie99"},"content":"package seedu.duke.commands;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"xingjie99"},"content":"import seedu.duke.item.exercise.Exercise;","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"xingjie99"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"xingjie99"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"xingjie99"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"xingjie99"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"xingjie99"},"content":"/**","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"xingjie99"},"content":" * Represent the command that when executed, adds all recurring Exercise items to the FutureExerciseList.","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"xingjie99"},"content":" */","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"xingjie99"},"content":"public class AddRecurringExerciseCommand extends Command {","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"tlyi"},"content":"    //TODO: finalise on command format","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_COMMAND_FORMAT \u003d QUOTATION + COMMAND_WORD_ADD","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"tlyi"},"content":"            + \" \" + COMMAND_PREFIX_RECURRING + COMMAND_PREFIX_DELIMITER + \"exercise name\"","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"tlyi"},"content":"            + \" \" + COMMAND_PREFIX_CALORIES + COMMAND_PREFIX_DELIMITER + \"calories\";","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"xingjie99"},"content":"    public static final String MESSAGE_INVALID_DATES \u003d \"Your start date %s is later than your end date %s\";","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"xingjie99"},"content":"    public static final String MESSAGE_NO_EXERCISE_ADDED \u003d \"Day(s) not present between %s and %s\";","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"xingjie99"},"content":"    public static final String MESSAGE_INVALID_EXERCISE_CALORIES \u003d \"Exercise calories cannot be less than or equal to 0\"","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"tlyi"},"content":"            + LS + \"Try a positive value instead\";","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"xingjie99"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Recurring exercise item for the future has been added\";","lastModifiedDate":"2021-10-18"},{"lineNumber":23,"author":{"gitId":"tlyi"},"content":"    private static final int ONE_WEEK \u003d 7;","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"tlyi"},"content":"    private static final int ONE_DAY \u003d 1;","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":27,"author":{"gitId":"xingjie99"},"content":"    private final String description;","lastModifiedDate":"2021-10-18"},{"lineNumber":28,"author":{"gitId":"xingjie99"},"content":"    private final int calories;","lastModifiedDate":"2021-10-18"},{"lineNumber":29,"author":{"gitId":"xingjie99"},"content":"    private final LocalDate startDate;","lastModifiedDate":"2021-10-18"},{"lineNumber":30,"author":{"gitId":"xingjie99"},"content":"    private final LocalDate endDate;","lastModifiedDate":"2021-10-18"},{"lineNumber":31,"author":{"gitId":"xingjie99"},"content":"    private final ArrayList\u003cInteger\u003e dayOfTheWeek;","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":33,"author":{"gitId":"xingjie99"},"content":"    private static Logger logger \u003d Logger.getLogger(AddRecurringExerciseCommand.class.getName());","lastModifiedDate":"2021-10-18"},{"lineNumber":34,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":35,"author":{"gitId":"xingjie99"},"content":"    public AddRecurringExerciseCommand(String description, int calories, LocalDate startDate,","lastModifiedDate":"2021-10-18"},{"lineNumber":36,"author":{"gitId":"xingjie99"},"content":"                                       LocalDate endDate, ArrayList\u003cInteger\u003e dayOfTheWeek) {","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"xingjie99"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-10-18"},{"lineNumber":38,"author":{"gitId":"xingjie99"},"content":"        this.calories \u003d calories;","lastModifiedDate":"2021-10-18"},{"lineNumber":39,"author":{"gitId":"xingjie99"},"content":"        this.startDate \u003d startDate;","lastModifiedDate":"2021-10-18"},{"lineNumber":40,"author":{"gitId":"xingjie99"},"content":"        this.endDate \u003d endDate;","lastModifiedDate":"2021-10-18"},{"lineNumber":41,"author":{"gitId":"xingjie99"},"content":"        this.dayOfTheWeek \u003d dayOfTheWeek;","lastModifiedDate":"2021-10-20"},{"lineNumber":42,"author":{"gitId":"xingjie99"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":43,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":44,"author":{"gitId":"xingjie99"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":45,"author":{"gitId":"xingjie99"},"content":"     * Adds all recurring exercises between two dates into the FutureExerciseList.","lastModifiedDate":"2021-10-19"},{"lineNumber":46,"author":{"gitId":"xingjie99"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":47,"author":{"gitId":"xingjie99"},"content":"    private void addRecurringExercises() {","lastModifiedDate":"2021-10-18"},{"lineNumber":48,"author":{"gitId":"xingjie99"},"content":"        for (Integer day : dayOfTheWeek) {","lastModifiedDate":"2021-10-20"},{"lineNumber":49,"author":{"gitId":"xingjie99"},"content":"            int dayOfTheWeek \u003d startDate.getDayOfWeek().getValue();","lastModifiedDate":"2021-10-19"},{"lineNumber":50,"author":{"gitId":"xingjie99"},"content":"            LocalDate currentDate \u003d startDate;","lastModifiedDate":"2021-10-18"},{"lineNumber":51,"author":{"gitId":"xingjie99"},"content":"            while (currentDate.isBefore(this.endDate) || currentDate.isEqual(this.endDate)) {","lastModifiedDate":"2021-10-18"},{"lineNumber":52,"author":{"gitId":"xingjie99"},"content":"                if (dayOfTheWeek \u003d\u003d day) {","lastModifiedDate":"2021-10-20"},{"lineNumber":53,"author":{"gitId":"xingjie99"},"content":"                    super.futureExerciseItems.addFutureExercise(new Exercise(description, calories, currentDate));","lastModifiedDate":"2021-10-18"},{"lineNumber":54,"author":{"gitId":"xingjie99"},"content":"                    currentDate \u003d currentDate.plusDays(ONE_WEEK);","lastModifiedDate":"2021-10-18"},{"lineNumber":55,"author":{"gitId":"xingjie99"},"content":"                    dayOfTheWeek \u003d currentDate.getDayOfWeek().getValue();","lastModifiedDate":"2021-10-19"},{"lineNumber":56,"author":{"gitId":"xingjie99"},"content":"                } else {","lastModifiedDate":"2021-10-18"},{"lineNumber":57,"author":{"gitId":"xingjie99"},"content":"                    currentDate \u003d currentDate.plusDays(ONE_DAY);","lastModifiedDate":"2021-10-18"},{"lineNumber":58,"author":{"gitId":"xingjie99"},"content":"                    dayOfTheWeek \u003d currentDate.getDayOfWeek().getValue();","lastModifiedDate":"2021-10-19"},{"lineNumber":59,"author":{"gitId":"xingjie99"},"content":"                }","lastModifiedDate":"2021-10-18"},{"lineNumber":60,"author":{"gitId":"xingjie99"},"content":"            }","lastModifiedDate":"2021-10-18"},{"lineNumber":61,"author":{"gitId":"xingjie99"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":62,"author":{"gitId":"xingjie99"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":63,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":64,"author":{"gitId":"xingjie99"},"content":"    @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":65,"author":{"gitId":"xingjie99"},"content":"    public CommandResult execute() {","lastModifiedDate":"2021-10-18"},{"lineNumber":66,"author":{"gitId":"xingjie99"},"content":"        if (this.startDate.isAfter(this.endDate)) {","lastModifiedDate":"2021-10-18"},{"lineNumber":67,"author":{"gitId":"xingjie99"},"content":"            logger.log(Level.WARNING, \"Start date is after end date\");","lastModifiedDate":"2021-10-18"},{"lineNumber":68,"author":{"gitId":"xingjie99"},"content":"            return new CommandResult(String.format(MESSAGE_INVALID_DATES, this.startDate, this.endDate));","lastModifiedDate":"2021-10-18"},{"lineNumber":69,"author":{"gitId":"xingjie99"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":70,"author":{"gitId":"xingjie99"},"content":"        if (this.calories \u003c\u003d 0) {","lastModifiedDate":"2021-10-18"},{"lineNumber":71,"author":{"gitId":"xingjie99"},"content":"            logger.log(Level.WARNING, \"Exercise calorie is invalid\");","lastModifiedDate":"2021-10-18"},{"lineNumber":72,"author":{"gitId":"xingjie99"},"content":"            return new CommandResult(MESSAGE_INVALID_EXERCISE_CALORIES);","lastModifiedDate":"2021-10-18"},{"lineNumber":73,"author":{"gitId":"xingjie99"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":74,"author":{"gitId":"xingjie99"},"content":"        assert this.calories \u003e 0 : \"Exercise calorie is valid\";","lastModifiedDate":"2021-10-18"},{"lineNumber":75,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":76,"author":{"gitId":"xingjie99"},"content":"        int numberOfFutureExercises \u003d futureExerciseItems.getSize();","lastModifiedDate":"2021-10-18"},{"lineNumber":77,"author":{"gitId":"xingjie99"},"content":"        addRecurringExercises();","lastModifiedDate":"2021-10-18"},{"lineNumber":78,"author":{"gitId":"xingjie99"},"content":"        if (futureExerciseItems.getSize() \u003d\u003d numberOfFutureExercises) {","lastModifiedDate":"2021-10-18"},{"lineNumber":79,"author":{"gitId":"xingjie99"},"content":"            return new CommandResult(String.format(MESSAGE_NO_EXERCISE_ADDED, this.startDate, this.endDate));","lastModifiedDate":"2021-10-18"},{"lineNumber":80,"author":{"gitId":"xingjie99"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":81,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":82,"author":{"gitId":"xingjie99"},"content":"        logger.log(Level.FINE, \"Recurring Exercise is successfully added\");","lastModifiedDate":"2021-10-18"},{"lineNumber":83,"author":{"gitId":"xingjie99"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2021-10-18"},{"lineNumber":84,"author":{"gitId":"xingjie99"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":85,"author":{"gitId":"xingjie99"},"content":"}","lastModifiedDate":"2021-10-18"},{"lineNumber":86,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":87,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":88,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"xingjie99":80,"tlyi":8}},{"path":"src/main/java/seedu/duke/commands/ByeCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.commands;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"tlyi"},"content":"/**","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"tlyi"},"content":" * Represents the command that when executed, signals to the application to exit.","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"tlyi"},"content":" */","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"tlyi"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"tlyi"},"content":"    public static final String COMMAND_WORD \u003d \"bye\";","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_COMMAND_FORMAT \u003d QUOTATION + COMMAND_WORD + QUOTATION;","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"tlyi"},"content":"    private static final String MESSAGE_SUCCESS \u003d \"Exiting Fitbot....\" + LS","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"tlyi"},"content":"            + \"Bye! Hope to see you again soon!!\";","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"tlyi"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"tlyi"},"content":"    public CommandResult execute() {","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"tlyi"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"tlyi"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"tlyi"},"content":"     * Determines if command is the Bye command so that the main program knows when to exit.","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"tlyi"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"tlyi"},"content":"    public static boolean isBye(Command command) {","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"tlyi"},"content":"        return command instanceof ByeCommand;","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"tlyi"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"tlyi":23}},{"path":"src/main/java/seedu/duke/commands/CalculateBmiCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.commands;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"tlyi"},"content":"import seedu.duke.profile.exceptions.InvalidCharacteristicException;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"tlyi"},"content":"/**","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"tlyi"},"content":" * Represents the command that when executed, calculates the BMI with the given height and weight data.","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"tlyi"},"content":" */","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"tlyi"},"content":"public class CalculateBmiCommand extends Command {","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_COMMAND_FORMAT \u003d QUOTATION + COMMAND_WORD_BMI","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"tlyi"},"content":"            + \" \" + COMMAND_PREFIX_HEIGHT + COMMAND_PREFIX_DELIMITER + \"Y \"","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"tlyi"},"content":"            + COMMAND_PREFIX_WEIGHT + COMMAND_PREFIX_DELIMITER + \"Z\"","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"tlyi"},"content":"            + QUOTATION + \" where X is the height in CM and Y is the weight in KG\";","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid format! \"","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"tlyi"},"content":"            + \"Trying to calculate BMI for a certain height and weight? Use this format:\"","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"tlyi"},"content":"            + INDENTED_LS + MESSAGE_COMMAND_FORMAT;","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"The calculated BMI value is %1$,.1f (%2$s)\";","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"tlyi"},"content":"    public static final String[] EXPECTED_PREFIXES \u003d {","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"tlyi"},"content":"            COMMAND_PREFIX_HEIGHT,","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"tlyi"},"content":"            COMMAND_PREFIX_WEIGHT","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"tlyi"},"content":"    };","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"tlyi"},"content":"    private final double height;","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"tlyi"},"content":"    private final double weight;","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"tlyi"},"content":"    public CalculateBmiCommand(double height, double weight) {","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"tlyi"},"content":"        this.height \u003d height;","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"tlyi"},"content":"        this.weight \u003d weight;","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"tlyi"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":31,"author":{"gitId":"tlyi"},"content":"    public CommandResult execute() {","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"tlyi"},"content":"        try {","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"tlyi"},"content":"            final double bmi \u003d super.profile.calculateBmi(this.height, this.weight);","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"tlyi"},"content":"            return new CommandResult(String.format(MESSAGE_SUCCESS, bmi, super.profile.retrieveBmiStatus(bmi)));","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"tlyi"},"content":"        } catch (InvalidCharacteristicException e) {","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"tlyi"},"content":"            return new CommandResult(e.getMessage());","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":39,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":40,"author":{"gitId":"tlyi"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"tlyi":40}},{"path":"src/main/java/seedu/duke/commands/CalculateBmiWithProfileCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.commands;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"weidak"},"content":"import seedu.duke.profile.Profile;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"weidak"},"content":"import seedu.duke.profile.exceptions.InvalidCharacteristicException;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"tlyi"},"content":"/**","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"tlyi"},"content":" * Represents the command that when executed, calculates the BMI of the current Profile.","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"tlyi"},"content":" */","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"tlyi"},"content":"public class CalculateBmiWithProfileCommand extends Command {","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_COMMAND_FORMAT \u003d QUOTATION + COMMAND_WORD_BMI + QUOTATION;","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Your BMI value according to your current profile is:\"","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"tlyi"},"content":"            + INDENTED_LS + \"%1$,.1f (%2$s)\";","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"weidak"},"content":"    public static final String MESSAGE_UNINITIALIZED_PROFILE \u003d \"Your profile has not been initialized yet.\";","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"weidak"},"content":"    private void checkIfCommandShouldExecute() throws InvalidCharacteristicException {","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"weidak"},"content":"        if (!super.profile.getProfileWeight().isValid()) {","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"weidak"},"content":"            throw new InvalidCharacteristicException(Profile.ERROR_WEIGHT);","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"weidak"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"weidak"},"content":"        if (!super.profile.getProfileHeight().isValid()) {","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"weidak"},"content":"            throw new InvalidCharacteristicException(Profile.ERROR_HEIGHT);","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"weidak"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"tlyi"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"tlyi"},"content":"    public CommandResult execute() {","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"weidak"},"content":"        try {","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"weidak"},"content":"            checkIfCommandShouldExecute();","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"tlyi"},"content":"            final double bmi \u003d super.profile.calculateBmi();","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"tlyi"},"content":"            return new CommandResult(String.format(MESSAGE_SUCCESS, bmi, super.profile.retrieveBmiStatus(bmi)));","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"weidak"},"content":"        } catch (InvalidCharacteristicException e) {","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"weidak"},"content":"            return new CommandResult(MESSAGE_UNINITIALIZED_PROFILE);","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"weidak"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":33,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":34,"author":{"gitId":"tlyi"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"weidak":17,"tlyi":17}},{"path":"src/main/java/seedu/duke/commands/ChangeHeightCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.commands;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"weidak"},"content":"import seedu.duke.profile.Profile;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"weidak"},"content":"import seedu.duke.profile.attributes.Height;","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"tlyi"},"content":"import seedu.duke.profile.exceptions.InvalidCharacteristicException;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"tryyang2001"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-10-14"},{"lineNumber":8,"author":{"gitId":"tryyang2001"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-14"},{"lineNumber":9,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":10,"author":{"gitId":"tlyi"},"content":"/**","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"tlyi"},"content":" * Represents the command that when executed, changes the value of height in the Profile.","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"tlyi"},"content":" */","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"tlyi"},"content":"public class ChangeHeightCommand extends Command {","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"tlyi"},"content":"    public static final String COMMAND_WORD \u003d \"height\";","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_COMMAND_FORMAT \u003d QUOTATION + COMMAND_WORD","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"tlyi"},"content":"            + \" X\" + QUOTATION + \", where X is your height in CM\";","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Your height has been updated!\" + LS + \"Your height is %scm.\";","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"tryyang2001"},"content":"    private Logger logger \u003d Logger.getLogger(ChangeHeightCommand.class.getName());","lastModifiedDate":"2021-10-14"},{"lineNumber":20,"author":{"gitId":"weidak"},"content":"    private final Height height \u003d new Height();","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"tlyi"},"content":"    public ChangeHeightCommand(double height) {","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"weidak"},"content":"        this.height.setHeight(height);","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"weidak"},"content":"    private void checkIfCommandShouldExecute() throws InvalidCharacteristicException {","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"weidak"},"content":"        if (!height.isValid()) {","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"weidak"},"content":"            throw new InvalidCharacteristicException(Profile.ERROR_HEIGHT);","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"weidak"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":31,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"tlyi"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"tlyi"},"content":"    public CommandResult execute() {","lastModifiedDate":"2021-10-10"},{"lineNumber":34,"author":{"gitId":"tlyi"},"content":"        try {","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"weidak"},"content":"            checkIfCommandShouldExecute();","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"weidak"},"content":"            super.profile.setProfileHeight(this.height);","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"weidak"},"content":"            return new CommandResult(String.format(MESSAGE_SUCCESS, super.profile.getProfileHeight().getHeight()));","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"tlyi"},"content":"        } catch (InvalidCharacteristicException e) {","lastModifiedDate":"2021-10-11"},{"lineNumber":39,"author":{"gitId":"tryyang2001"},"content":"            logger.log(Level.WARNING, \"Detected negative height input\");","lastModifiedDate":"2021-10-14"},{"lineNumber":40,"author":{"gitId":"tlyi"},"content":"            return new CommandResult(e.getMessage());","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":43,"author":{"gitId":"tlyi"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"weidak":13,"tryyang2001":5,"tlyi":25}},{"path":"src/main/java/seedu/duke/commands/ChangeNameCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.commands;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"weidak"},"content":"import seedu.duke.profile.Profile;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"weidak"},"content":"import seedu.duke.profile.attributes.Name;","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"weidak"},"content":"import seedu.duke.profile.exceptions.InvalidCharacteristicException;","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"tlyi"},"content":"/**","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"tlyi"},"content":" * Represents the command that when executed, changes the value of name in the Profile.","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"tlyi"},"content":" */","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"tlyi"},"content":"public class ChangeNameCommand extends Command {","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"tlyi"},"content":"    public static final String COMMAND_WORD \u003d \"name\";","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_COMMAND_FORMAT \u003d QUOTATION + COMMAND_WORD","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"tlyi"},"content":"            + \" X\" + QUOTATION + \", where X is your name\";","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid format! \"","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"tlyi"},"content":"            + \"Trying to update your name? Use this format:\"","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"tlyi"},"content":"            + INDENTED_LS + MESSAGE_COMMAND_FORMAT;","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_DO_NOT_USE_DELIMITER \u003d \"Sorry! We do not allow the character \"","lastModifiedDate":"2021-10-14"},{"lineNumber":18,"author":{"gitId":"tlyi"},"content":"            + QUOTATION + COMMAND_PREFIX_DELIMITER + QUOTATION + \" in your name!\";","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Your name has been updated!\" + LS + \"Hello %s!\";","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"weidak"},"content":"    private final Name name \u003d new Name();","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"tlyi"},"content":"    public ChangeNameCommand(String name) {","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"tlyi"},"content":"        assert name !\u003d null : \"parser should have ensured name is not null\";","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"weidak"},"content":"        this.name.setName(name);","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"weidak"},"content":"    private void checkIfCommandShouldExecute() throws InvalidCharacteristicException {","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"weidak"},"content":"        if (name.getName().isEmpty()) {","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"weidak"},"content":"            throw new InvalidCharacteristicException(MESSAGE_INVALID_COMMAND_FORMAT);","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"weidak"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"weidak"},"content":"        if (!name.isValid()) {       //This checks for delimiters \"\\\" and \"|\"","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"weidak"},"content":"            throw new InvalidCharacteristicException(MESSAGE_DO_NOT_USE_DELIMITER);","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"weidak"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":37,"author":{"gitId":"weidak"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"weidak"},"content":"    public CommandResult execute() {","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"weidak"},"content":"        try {","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"weidak"},"content":"            checkIfCommandShouldExecute();","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"weidak"},"content":"            super.profile.setProfileName(this.name);","lastModifiedDate":"2021-10-20"},{"lineNumber":42,"author":{"gitId":"weidak"},"content":"            return new CommandResult(String.format(MESSAGE_SUCCESS, super.profile.getProfileName().getName()));","lastModifiedDate":"2021-10-20"},{"lineNumber":43,"author":{"gitId":"weidak"},"content":"        } catch (InvalidCharacteristicException e) {","lastModifiedDate":"2021-10-20"},{"lineNumber":44,"author":{"gitId":"weidak"},"content":"            return new CommandResult(e.getMessage());","lastModifiedDate":"2021-10-20"},{"lineNumber":45,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":46,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":47,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":48,"author":{"gitId":"tlyi"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"weidak":21,"tlyi":27}},{"path":"src/main/java/seedu/duke/commands/ChangeWeightCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.commands;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"weidak"},"content":"import seedu.duke.profile.Profile;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"weidak"},"content":"import seedu.duke.profile.attributes.Weight;","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"tlyi"},"content":"import seedu.duke.profile.exceptions.InvalidCharacteristicException;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"tlyi"},"content":"/**","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"tlyi"},"content":" * Represents the command that when executed, changes the value of weight in the Profile.","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"tlyi"},"content":" */","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"tlyi"},"content":"public class ChangeWeightCommand extends Command {","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"tlyi"},"content":"    public static final String COMMAND_WORD \u003d \"weight\";","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_COMMAND_FORMAT \u003d QUOTATION + COMMAND_WORD","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"tlyi"},"content":"            + \" X\" + QUOTATION + \", where X is your weight in KG\";","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Your weight has been updated!\" + LS + \"Your weight is %skg.\";","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"weidak"},"content":"    private final Weight weight \u003d new Weight();","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"tlyi"},"content":"    public ChangeWeightCommand(double weight) {","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"weidak"},"content":"        this.weight.setWeight(weight);","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"weidak"},"content":"    private void checkIfCommandShouldExecute() throws InvalidCharacteristicException {","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"weidak"},"content":"        if (!weight.isValid()) {","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"weidak"},"content":"            throw new InvalidCharacteristicException(Profile.ERROR_WEIGHT);","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"weidak"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"tlyi"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"tlyi"},"content":"    public CommandResult execute() {","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"tlyi"},"content":"        try {","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"weidak"},"content":"            checkIfCommandShouldExecute();","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"weidak"},"content":"            super.profile.setProfileWeight(this.weight);","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"weidak"},"content":"            return new CommandResult(String.format(MESSAGE_SUCCESS, super.profile.getProfileWeight().getWeight()));","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"tlyi"},"content":"        } catch (InvalidCharacteristicException e) {","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"tlyi"},"content":"            return new CommandResult(e.getMessage());","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":38,"author":{"gitId":"tlyi"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"weidak":13,"tlyi":25}},{"path":"src/main/java/seedu/duke/commands/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.commands;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"tlyi"},"content":"import seedu.duke.item.ItemBank;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"tryyang2001"},"content":"import seedu.duke.item.exercise.ExerciseList;","lastModifiedDate":"2021-10-16"},{"lineNumber":5,"author":{"gitId":"xingjie99"},"content":"import seedu.duke.item.exercise.FutureExerciseList;","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"tryyang2001"},"content":"import seedu.duke.item.food.FoodList;","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"tlyi"},"content":"import seedu.duke.profile.Profile;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"weidak"},"content":"import seedu.duke.profile.attributes.ActivityFactor;","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"weidak"},"content":"import seedu.duke.profile.attributes.CalorieGoal;","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"tlyi"},"content":"/**","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"tlyi"},"content":" * Abstract class used to represent executable Commands.","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"tlyi"},"content":" * All Commands can be executed to return a CommandResult.","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"tlyi"},"content":" */","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"tlyi"},"content":"public abstract class Command {","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"tlyi"},"content":"    public static final String LS \u003d System.lineSeparator();","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"tlyi"},"content":"    public static final String TAB \u003d \"\\t\";","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"tlyi"},"content":"    public static final String INDENTED_LS \u003d LS + TAB;","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"tlyi"},"content":"    public static final String QUOTATION \u003d \"\\\"\";","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"tlyi"},"content":"    public static final String COMMAND_PREFIX_DELIMITER \u003d \"/\";","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"tlyi"},"content":"    public static final String COMMAND_PREFIX_EXERCISE \u003d \"e\";","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"xingjie99"},"content":"    public static final String COMMAND_PREFIX_UPCOMING_EXERCISE \u003d \"u\";","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"tlyi"},"content":"    public static final String COMMAND_PREFIX_RECURRING \u003d \"r\";","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"tlyi"},"content":"    public static final String COMMAND_PREFIX_FOOD \u003d \"f\";","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"tlyi"},"content":"    public static final String COMMAND_PREFIX_EXERCISE_BANK \u003d \"ebank\";","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"tlyi"},"content":"    public static final String COMMAND_PREFIX_FOOD_BANK \u003d \"fbank\";","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"tlyi"},"content":"    public static final String COMMAND_PREFIX_CALORIES \u003d \"c\";","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"tlyi"},"content":"    public static final String COMMAND_PREFIX_NAME \u003d \"n\";","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"tlyi"},"content":"    public static final String COMMAND_PREFIX_HEIGHT \u003d \"h\";","lastModifiedDate":"2021-10-10"},{"lineNumber":31,"author":{"gitId":"tlyi"},"content":"    public static final String COMMAND_PREFIX_WEIGHT \u003d \"w\";","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"tryyang2001"},"content":"    public static final String COMMAND_PREFIX_GOAL \u003d \"g\";","lastModifiedDate":"2021-10-14"},{"lineNumber":33,"author":{"gitId":"tlyi"},"content":"    public static final String COMMAND_PREFIX_DATE \u003d \"d\";","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"tlyi"},"content":"    public static final String COMMAND_PREFIX_TIME \u003d \"t\";","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"tlyi"},"content":"    public static final String COMMAND_PREFIX_GENDER \u003d \"s\";","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"tlyi"},"content":"    public static final String COMMAND_PREFIX_AGE \u003d \"a\";","lastModifiedDate":"2021-10-19"},{"lineNumber":37,"author":{"gitId":"tlyi"},"content":"    public static final String COMMAND_PREFIX_ACTIVITY_FACTOR \u003d \"x\";","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"xingjie99"},"content":"    public static final String COMMAND_PREFIX_START_DATE \u003d \":\";","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"xingjie99"},"content":"    public static final String COMMAND_PREFIX_END_DATE \u003d \"-\";","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"xingjie99"},"content":"    public static final String COMMAND_PREFIX_DAY_OF_THE_WEEK \u003d \"@\";","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"tlyi"},"content":"    public static final String COMMAND_WORD_ADD \u003d \"add\";","lastModifiedDate":"2021-10-10"},{"lineNumber":42,"author":{"gitId":"tlyi"},"content":"    public static final String COMMAND_WORD_DELETE \u003d \"delete\";","lastModifiedDate":"2021-10-10"},{"lineNumber":43,"author":{"gitId":"tlyi"},"content":"    public static final String COMMAND_WORD_VIEW \u003d \"view\";","lastModifiedDate":"2021-10-10"},{"lineNumber":44,"author":{"gitId":"tlyi"},"content":"    public static final String COMMAND_WORD_BMI \u003d \"bmi\";","lastModifiedDate":"2021-10-10"},{"lineNumber":45,"author":{"gitId":"tlyi"},"content":"    public static final String COMMAND_WORD_PROFILE \u003d \"profile\";","lastModifiedDate":"2021-10-13"},{"lineNumber":46,"author":{"gitId":"tlyi"},"content":"    public static final int COMMAND_BMI_EXPECTED_NUM_DELIMITERS \u003d 2;","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"tryyang2001"},"content":"    public static final String COMMAND_WORD_DELETE_ALL \u003d \"all\";","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_EMPTY_EXERCISE_LIST \u003d \"No exercise items yet!\";","lastModifiedDate":"2021-10-11"},{"lineNumber":49,"author":{"gitId":"xingjie99"},"content":"    public static final String MESSAGE_EMPTY_FUTURE_EXERCISE_LIST \u003d \"No future exercise items yet!\";","lastModifiedDate":"2021-10-18"},{"lineNumber":50,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_EMPTY_FOOD_LIST \u003d \"No food items yet!\";","lastModifiedDate":"2021-10-11"},{"lineNumber":51,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_EMPTY_EXERCISE_BANK \u003d \"No exercise items yet in the exercise bank!\";","lastModifiedDate":"2021-10-19"},{"lineNumber":52,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_EMPTY_FOOD_BANK \u003d \"No food items yet in the food bank!\";","lastModifiedDate":"2021-10-19"},{"lineNumber":53,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_ONLY_ONE_IN_LIST \u003d \"You have only 1 item in the list!\";","lastModifiedDate":"2021-10-11"},{"lineNumber":54,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_LIST_OUT_OF_BOUNDS \u003d \"Please input a valid item number from 1 to %s\";","lastModifiedDate":"2021-10-11"},{"lineNumber":55,"author":{"gitId":"tlyi"},"content":"    public static final double NULL_DOUBLE \u003d 0;","lastModifiedDate":"2021-10-19"},{"lineNumber":56,"author":{"gitId":"tlyi"},"content":"    public static final int NULL_INT \u003d 0;","lastModifiedDate":"2021-10-19"},{"lineNumber":57,"author":{"gitId":"tlyi"},"content":"    public static final char NULL_CHAR \u003d Character.MIN_VALUE;","lastModifiedDate":"2021-10-19"},{"lineNumber":58,"author":{"gitId":"tlyi"},"content":"    public static final int NULL_CALORIES \u003d -1;","lastModifiedDate":"2021-10-19"},{"lineNumber":59,"author":{"gitId":"tlyi"},"content":"    public static final String NULL_STRING \u003d \"\";","lastModifiedDate":"2021-10-19"},{"lineNumber":60,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":61,"author":{"gitId":"tlyi"},"content":"    protected Profile profile;","lastModifiedDate":"2021-10-10"},{"lineNumber":62,"author":{"gitId":"tlyi"},"content":"    protected ExerciseList exerciseItems;","lastModifiedDate":"2021-10-11"},{"lineNumber":63,"author":{"gitId":"tlyi"},"content":"    protected FoodList foodItems;","lastModifiedDate":"2021-10-11"},{"lineNumber":64,"author":{"gitId":"xingjie99"},"content":"    protected FutureExerciseList futureExerciseItems;","lastModifiedDate":"2021-10-18"},{"lineNumber":65,"author":{"gitId":"tlyi"},"content":"    protected ItemBank exerciseBank;","lastModifiedDate":"2021-10-19"},{"lineNumber":66,"author":{"gitId":"tlyi"},"content":"    protected ItemBank foodBank;","lastModifiedDate":"2021-10-19"},{"lineNumber":67,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":68,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":69,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":70,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":71,"author":{"gitId":"tlyi"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":72,"author":{"gitId":"tlyi"},"content":"     * Returns the appropriate CommandResult after execution of the command.","lastModifiedDate":"2021-10-10"},{"lineNumber":73,"author":{"gitId":"tlyi"},"content":"     * Each child class that inherits this class represents an executable command and will have its own implementation","lastModifiedDate":"2021-10-10"},{"lineNumber":74,"author":{"gitId":"tlyi"},"content":"     * of this method specific to its functionality.","lastModifiedDate":"2021-10-10"},{"lineNumber":75,"author":{"gitId":"tlyi"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":76,"author":{"gitId":"tlyi"},"content":"    public abstract CommandResult execute();","lastModifiedDate":"2021-10-10"},{"lineNumber":77,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":78,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":79,"author":{"gitId":"tlyi"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":80,"author":{"gitId":"tlyi"},"content":"     * Provides the necessary data structures for the command to operate on.","lastModifiedDate":"2021-10-12"},{"lineNumber":81,"author":{"gitId":"tlyi"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":82,"author":{"gitId":"xingjie99"},"content":"    public void setData(Profile profile, ExerciseList exerciseItems,","lastModifiedDate":"2021-10-18"},{"lineNumber":83,"author":{"gitId":"tlyi"},"content":"                        FutureExerciseList futureExerciseItems, FoodList foodItems,","lastModifiedDate":"2021-10-19"},{"lineNumber":84,"author":{"gitId":"tlyi"},"content":"                        ItemBank exerciseBank, ItemBank foodBank) {","lastModifiedDate":"2021-10-19"},{"lineNumber":85,"author":{"gitId":"tlyi"},"content":"        this.profile \u003d profile;","lastModifiedDate":"2021-10-10"},{"lineNumber":86,"author":{"gitId":"tlyi"},"content":"        this.exerciseItems \u003d exerciseItems;","lastModifiedDate":"2021-10-11"},{"lineNumber":87,"author":{"gitId":"tlyi"},"content":"        this.foodItems \u003d foodItems;","lastModifiedDate":"2021-10-11"},{"lineNumber":88,"author":{"gitId":"xingjie99"},"content":"        this.futureExerciseItems \u003d futureExerciseItems;","lastModifiedDate":"2021-10-18"},{"lineNumber":89,"author":{"gitId":"tlyi"},"content":"        this.exerciseBank \u003d exerciseBank;","lastModifiedDate":"2021-10-19"},{"lineNumber":90,"author":{"gitId":"tlyi"},"content":"        this.foodBank \u003d foodBank;","lastModifiedDate":"2021-10-19"},{"lineNumber":91,"author":{"gitId":"tlyi"},"content":"        assert profile !\u003d null : \"Profile supplied to command should not be null\";","lastModifiedDate":"2021-10-13"},{"lineNumber":92,"author":{"gitId":"tlyi"},"content":"        assert exerciseItems !\u003d null : \"Exercise items supplied to command should not be null\";","lastModifiedDate":"2021-10-13"},{"lineNumber":93,"author":{"gitId":"tlyi"},"content":"        assert foodItems !\u003d null : \"Food items supplied to command should not be null\";","lastModifiedDate":"2021-10-13"},{"lineNumber":94,"author":{"gitId":"xingjie99"},"content":"        assert futureExerciseItems !\u003d null : \"Future exercise items supplied to command should not be null\";","lastModifiedDate":"2021-10-18"},{"lineNumber":95,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":96,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":97,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":98,"author":{"gitId":"tlyi"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":99,"author":{"gitId":"tlyi"},"content":"     * Returns true if the command requires the profile storage file to be rewritten after execution.","lastModifiedDate":"2021-10-12"},{"lineNumber":100,"author":{"gitId":"tlyi"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":101,"author":{"gitId":"tlyi"},"content":"     * @param command Command that has just been executed","lastModifiedDate":"2021-10-12"},{"lineNumber":102,"author":{"gitId":"tlyi"},"content":"     * @return True if profile storage file is to be rewritten after execution of the command","lastModifiedDate":"2021-10-12"},{"lineNumber":103,"author":{"gitId":"tlyi"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":104,"author":{"gitId":"tlyi"},"content":"    public static boolean requiresProfileStorageRewrite(Command command) {","lastModifiedDate":"2021-10-12"},{"lineNumber":105,"author":{"gitId":"tlyi"},"content":"        return command instanceof ChangeHeightCommand","lastModifiedDate":"2021-10-12"},{"lineNumber":106,"author":{"gitId":"tlyi"},"content":"                || command instanceof ChangeNameCommand","lastModifiedDate":"2021-10-12"},{"lineNumber":107,"author":{"gitId":"tlyi"},"content":"                || command instanceof ChangeWeightCommand","lastModifiedDate":"2021-10-12"},{"lineNumber":108,"author":{"gitId":"tlyi"},"content":"                || command instanceof ProfileCreateCommand","lastModifiedDate":"2021-10-12"},{"lineNumber":109,"author":{"gitId":"tlyi"},"content":"                || command instanceof SetGoalCommand;","lastModifiedDate":"2021-10-12"},{"lineNumber":110,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":111,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":112,"author":{"gitId":"tlyi"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":113,"author":{"gitId":"tlyi"},"content":"     * Returns true if the command requires the exercise list storage file to be rewritten after execution.","lastModifiedDate":"2021-10-12"},{"lineNumber":114,"author":{"gitId":"tlyi"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":115,"author":{"gitId":"tlyi"},"content":"     * @param command Command that has just been executed","lastModifiedDate":"2021-10-12"},{"lineNumber":116,"author":{"gitId":"tlyi"},"content":"     * @return True if exercise list storage file is to be rewritten after execution of the command","lastModifiedDate":"2021-10-12"},{"lineNumber":117,"author":{"gitId":"tlyi"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":118,"author":{"gitId":"tlyi"},"content":"    public static boolean requiresExerciseListStorageRewrite(Command command) {","lastModifiedDate":"2021-10-12"},{"lineNumber":119,"author":{"gitId":"tlyi"},"content":"        return command instanceof AddExerciseCommand","lastModifiedDate":"2021-10-12"},{"lineNumber":120,"author":{"gitId":"tlyi"},"content":"                || command instanceof DeleteExerciseCommand;","lastModifiedDate":"2021-10-12"},{"lineNumber":121,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":122,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":123,"author":{"gitId":"tlyi"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":124,"author":{"gitId":"tlyi"},"content":"     * Returns true if the command requires the food list storage file to be rewritten after execution.","lastModifiedDate":"2021-10-12"},{"lineNumber":125,"author":{"gitId":"tlyi"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":126,"author":{"gitId":"tlyi"},"content":"     * @param command Command that has just been executed","lastModifiedDate":"2021-10-12"},{"lineNumber":127,"author":{"gitId":"tlyi"},"content":"     * @return True if food list storage file is to be rewritten after execution of the command","lastModifiedDate":"2021-10-12"},{"lineNumber":128,"author":{"gitId":"tlyi"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":129,"author":{"gitId":"tlyi"},"content":"    public static boolean requiresFoodListStorageRewrite(Command command) {","lastModifiedDate":"2021-10-12"},{"lineNumber":130,"author":{"gitId":"tlyi"},"content":"        return command instanceof AddFoodCommand","lastModifiedDate":"2021-10-12"},{"lineNumber":131,"author":{"gitId":"tlyi"},"content":"                || command instanceof DeleteFoodCommand;","lastModifiedDate":"2021-10-12"},{"lineNumber":132,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":133,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":134,"author":{"gitId":"xingjie99"},"content":"    public static boolean requiresFutureExerciseListStorageRewrite(Command command) {","lastModifiedDate":"2021-10-18"},{"lineNumber":135,"author":{"gitId":"xingjie99"},"content":"        return command instanceof AddFutureExerciseCommand","lastModifiedDate":"2021-10-18"},{"lineNumber":136,"author":{"gitId":"xingjie99"},"content":"                || command instanceof DeleteFutureExerciseCommand;","lastModifiedDate":"2021-10-18"},{"lineNumber":137,"author":{"gitId":"xingjie99"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":138,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":139,"author":{"gitId":"tlyi"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"weidak":2,"tttyyzzz":2,"tryyang2001":4,"xingjie99":16,"tlyi":115}},{"path":"src/main/java/seedu/duke/commands/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.commands;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"tlyi"},"content":"/**","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"tlyi"},"content":" * Represents the result of the execution of the commands to be displayed to the user.","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"tlyi"},"content":" */","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"tlyi"},"content":"public class CommandResult {","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"tlyi"},"content":"    public final String messageToBeShown;","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"tlyi"},"content":"    public CommandResult(String messageToBeShown) {","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"tlyi"},"content":"        this.messageToBeShown \u003d messageToBeShown;","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"tlyi"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"tlyi"},"content":"    public String toString() {","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"tlyi"},"content":"        return this.messageToBeShown;","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"tlyi"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"tlyi":17}},{"path":"src/main/java/seedu/duke/commands/DeleteExerciseBankCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.commands;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"tlyi"},"content":"import seedu.duke.item.exercise.Exercise;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"tlyi"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"tlyi"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"tlyi"},"content":"/**","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"tlyi"},"content":" * Represents the command that when executed, deletes an Exercise item from the ExerciseBank.","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"tlyi"},"content":" */","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"tlyi"},"content":"public class DeleteExerciseBankCommand extends Command {","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_COMMAND_FORMAT \u003d QUOTATION + COMMAND_WORD_DELETE","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"tlyi"},"content":"            + \" \" + COMMAND_PREFIX_EXERCISE_BANK + COMMAND_PREFIX_DELIMITER + \"X\" + QUOTATION","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"tlyi"},"content":"            + \", where X is the item number in the exercise bank list\";","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"An exercise item has been deleted from the exercise bank:\"","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"tlyi"},"content":"            + INDENTED_LS + \"%s\"","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"tlyi"},"content":"            + LS + \"Number of exercise item(s) left in the exercise bank: %2$d\";","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"tlyi"},"content":"    private static final String MESSAGE_EXERCISE_CLEAR \u003d \"All exercise items in the exercise bank have been removed.\";","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"tlyi"},"content":"    public static final String[] EXPECTED_PREFIXES \u003d {COMMAND_PREFIX_EXERCISE_BANK};","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"tlyi"},"content":"    private static Logger logger \u003d Logger.getLogger(DeleteExerciseBankCommand.class.getName());","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"tlyi"},"content":"    private final int itemIndex;","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"tlyi"},"content":"    private boolean isClear \u003d false;","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"tlyi"},"content":"    public DeleteExerciseBankCommand(int itemIndex) {","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"tlyi"},"content":"        this.itemIndex \u003d itemIndex; //-2","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"tlyi"},"content":"    public DeleteExerciseBankCommand(boolean isClear) {","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"tlyi"},"content":"        this.itemIndex \u003d -1;","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"tlyi"},"content":"        this.isClear \u003d isClear;","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":37,"author":{"gitId":"tlyi"},"content":"    @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"tlyi"},"content":"    public CommandResult execute() {","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"tlyi"},"content":"        if (this.isClear) {","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"tlyi"},"content":"            logger.log(Level.FINE, \"Clearing exercise bank\");","lastModifiedDate":"2021-10-19"},{"lineNumber":41,"author":{"gitId":"tlyi"},"content":"            super.exerciseBank.clearList();","lastModifiedDate":"2021-10-19"},{"lineNumber":42,"author":{"gitId":"tlyi"},"content":"            return new CommandResult(MESSAGE_EXERCISE_CLEAR);","lastModifiedDate":"2021-10-19"},{"lineNumber":43,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":44,"author":{"gitId":"tlyi"},"content":"        assert this.itemIndex \u003e 0 : \"Deleting an item only\";","lastModifiedDate":"2021-10-19"},{"lineNumber":45,"author":{"gitId":"tlyi"},"content":"        if (super.exerciseBank.getSize() \u003d\u003d 0) {","lastModifiedDate":"2021-10-19"},{"lineNumber":46,"author":{"gitId":"tlyi"},"content":"            logger.log(Level.WARNING, \"Exercise bank is empty.\");","lastModifiedDate":"2021-10-19"},{"lineNumber":47,"author":{"gitId":"tlyi"},"content":"            return new CommandResult(MESSAGE_EMPTY_EXERCISE_BANK);","lastModifiedDate":"2021-10-19"},{"lineNumber":48,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":49,"author":{"gitId":"tlyi"},"content":"        logger.log(Level.FINE, \"Trying to delete item now\");","lastModifiedDate":"2021-10-19"},{"lineNumber":50,"author":{"gitId":"tlyi"},"content":"        try {","lastModifiedDate":"2021-10-19"},{"lineNumber":51,"author":{"gitId":"tlyi"},"content":"            Exercise deletedExercise;","lastModifiedDate":"2021-10-19"},{"lineNumber":52,"author":{"gitId":"tlyi"},"content":"            deletedExercise \u003d (Exercise) super.exerciseBank.deleteItem(this.itemIndex);","lastModifiedDate":"2021-10-19"},{"lineNumber":53,"author":{"gitId":"tlyi"},"content":"            return new CommandResult(String.format(MESSAGE_SUCCESS, deletedExercise, super.exerciseBank.getSize()));","lastModifiedDate":"2021-10-19"},{"lineNumber":54,"author":{"gitId":"tlyi"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-10-19"},{"lineNumber":55,"author":{"gitId":"tlyi"},"content":"            logger.log(Level.WARNING, \"Detected invalid exercise item index.\");","lastModifiedDate":"2021-10-19"},{"lineNumber":56,"author":{"gitId":"tlyi"},"content":"            if (super.exerciseBank.getSize() \u003d\u003d 1) {","lastModifiedDate":"2021-10-19"},{"lineNumber":57,"author":{"gitId":"tlyi"},"content":"                return new CommandResult(MESSAGE_ONLY_ONE_IN_LIST);","lastModifiedDate":"2021-10-19"},{"lineNumber":58,"author":{"gitId":"tlyi"},"content":"            }","lastModifiedDate":"2021-10-19"},{"lineNumber":59,"author":{"gitId":"tlyi"},"content":"            return new CommandResult(String.format(MESSAGE_LIST_OUT_OF_BOUNDS, super.exerciseBank.getSize()));","lastModifiedDate":"2021-10-19"},{"lineNumber":60,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":61,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":62,"author":{"gitId":"tlyi"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"tlyi":62}},{"path":"src/main/java/seedu/duke/commands/DeleteExerciseCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.commands;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"tryyang2001"},"content":"import seedu.duke.item.exercise.Exercise;","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"tlyi"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"xingjie99"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"xingjie99"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"tlyi"},"content":"/**","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"tlyi"},"content":" * Represents the command that when executed, deletes an Exercise item from the ExerciseList.","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"tlyi"},"content":" */","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"tlyi"},"content":"public class DeleteExerciseCommand extends Command {","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_COMMAND_FORMAT \u003d QUOTATION + COMMAND_WORD_DELETE","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"tlyi"},"content":"            + \" \" + COMMAND_PREFIX_EXERCISE + COMMAND_PREFIX_DELIMITER + \"X\" + QUOTATION","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"tlyi"},"content":"            + \", where X is the item number in the exercise list\";","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"An exercise item has been deleted:\"","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"tlyi"},"content":"            + INDENTED_LS + \"%s\"","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"tlyi"},"content":"            + LS + \"Number of exercise item(s) left: %2$d\";","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"xingjie99"},"content":"    private static final String MESSAGE_EXERCISE_CLEAR \u003d \"All exercise items have been removed.\";","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"tryyang2001"},"content":"    private static Logger logger \u003d Logger.getLogger(DeleteExerciseCommand.class.getName());","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"tlyi"},"content":"    public static final String[] EXPECTED_PREFIXES \u003d {","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"tlyi"},"content":"            COMMAND_PREFIX_EXERCISE,","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"tlyi"},"content":"            COMMAND_PREFIX_DATE","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"tlyi"},"content":"    };","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"tlyi"},"content":"    private final int itemIndex;","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"tlyi"},"content":"    private final LocalDate date;","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"tryyang2001"},"content":"    private boolean isClear \u003d false;","lastModifiedDate":"2021-10-14"},{"lineNumber":31,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"tlyi"},"content":"    public DeleteExerciseCommand(int itemIndex, LocalDate date) {","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"tlyi"},"content":"        this.itemIndex \u003d itemIndex;","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"tlyi"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":36,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":37,"author":{"gitId":"tryyang2001"},"content":"    public DeleteExerciseCommand(boolean isClear) {","lastModifiedDate":"2021-10-14"},{"lineNumber":38,"author":{"gitId":"tryyang2001"},"content":"        this.itemIndex \u003d -1;","lastModifiedDate":"2021-10-14"},{"lineNumber":39,"author":{"gitId":"tryyang2001"},"content":"        this.isClear \u003d isClear;","lastModifiedDate":"2021-10-14"},{"lineNumber":40,"author":{"gitId":"tlyi"},"content":"        this.date \u003d LocalDate.now();","lastModifiedDate":"2021-10-19"},{"lineNumber":41,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":42,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":43,"author":{"gitId":"tlyi"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":44,"author":{"gitId":"tlyi"},"content":"    public CommandResult execute() {","lastModifiedDate":"2021-10-10"},{"lineNumber":45,"author":{"gitId":"tryyang2001"},"content":"        if (this.isClear) {","lastModifiedDate":"2021-10-14"},{"lineNumber":46,"author":{"gitId":"tryyang2001"},"content":"            logger.log(Level.FINE, \"Clearing exercise list\");","lastModifiedDate":"2021-10-14"},{"lineNumber":47,"author":{"gitId":"xingjie99"},"content":"            super.exerciseItems.clearExerciseList();","lastModifiedDate":"2021-10-11"},{"lineNumber":48,"author":{"gitId":"xingjie99"},"content":"            return new CommandResult(MESSAGE_EXERCISE_CLEAR);","lastModifiedDate":"2021-10-11"},{"lineNumber":49,"author":{"gitId":"xingjie99"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":50,"author":{"gitId":"xingjie99"},"content":"        assert this.itemIndex \u003e 0 : \"Deleting an item only\";","lastModifiedDate":"2021-10-13"},{"lineNumber":51,"author":{"gitId":"tlyi"},"content":"        if (super.exerciseItems.getSize() \u003d\u003d 0) {","lastModifiedDate":"2021-10-11"},{"lineNumber":52,"author":{"gitId":"tryyang2001"},"content":"            logger.log(Level.WARNING, \"Exercise list is empty.\");","lastModifiedDate":"2021-10-13"},{"lineNumber":53,"author":{"gitId":"tlyi"},"content":"            return new CommandResult(MESSAGE_EMPTY_EXERCISE_LIST);","lastModifiedDate":"2021-10-11"},{"lineNumber":54,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":55,"author":{"gitId":"tryyang2001"},"content":"        logger.log(Level.FINE, \"Trying to delete item now\");","lastModifiedDate":"2021-10-14"},{"lineNumber":56,"author":{"gitId":"tlyi"},"content":"        try {","lastModifiedDate":"2021-10-11"},{"lineNumber":57,"author":{"gitId":"tlyi"},"content":"            //TODO: Implement delete by date and index","lastModifiedDate":"2021-10-19"},{"lineNumber":58,"author":{"gitId":"tlyi"},"content":"            Exercise deletedExercise;","lastModifiedDate":"2021-10-11"},{"lineNumber":59,"author":{"gitId":"tlyi"},"content":"            deletedExercise \u003d super.exerciseItems.deleteExercise(this.itemIndex);","lastModifiedDate":"2021-10-11"},{"lineNumber":60,"author":{"gitId":"tlyi"},"content":"            return new CommandResult(String.format(MESSAGE_SUCCESS, deletedExercise, super.exerciseItems.getSize()));","lastModifiedDate":"2021-10-11"},{"lineNumber":61,"author":{"gitId":"tlyi"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-10-11"},{"lineNumber":62,"author":{"gitId":"tryyang2001"},"content":"            logger.log(Level.WARNING, \"Detected invalid exercise item index.\");","lastModifiedDate":"2021-10-13"},{"lineNumber":63,"author":{"gitId":"tlyi"},"content":"            if (super.exerciseItems.getSize() \u003d\u003d 1) {","lastModifiedDate":"2021-10-11"},{"lineNumber":64,"author":{"gitId":"tlyi"},"content":"                return new CommandResult(MESSAGE_ONLY_ONE_IN_LIST);","lastModifiedDate":"2021-10-11"},{"lineNumber":65,"author":{"gitId":"tlyi"},"content":"            }","lastModifiedDate":"2021-10-11"},{"lineNumber":66,"author":{"gitId":"tlyi"},"content":"            return new CommandResult(String.format(MESSAGE_LIST_OUT_OF_BOUNDS, super.exerciseItems.getSize()));","lastModifiedDate":"2021-10-11"},{"lineNumber":67,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":68,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":69,"author":{"gitId":"tlyi"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"tryyang2001":14,"xingjie99":8,"tlyi":47}},{"path":"src/main/java/seedu/duke/commands/DeleteFoodBankCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.commands;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"tlyi"},"content":"import seedu.duke.item.food.Food;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"tlyi"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"tlyi"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"tlyi"},"content":"/**","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"tlyi"},"content":" * Represents the command that when executed, deletes a Food item from the FoodBank.","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"tlyi"},"content":" */","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"tlyi"},"content":"public class DeleteFoodBankCommand extends Command {","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_COMMAND_FORMAT \u003d QUOTATION + COMMAND_WORD_DELETE","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"tlyi"},"content":"            + \" \" + COMMAND_PREFIX_FOOD_BANK + COMMAND_PREFIX_DELIMITER + \"X\" + QUOTATION","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"tlyi"},"content":"            + \", where X is the item number in the food bank list\";","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"An food item has been deleted from the food bank:\"","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"tlyi"},"content":"            + INDENTED_LS + \"%s\"","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"tlyi"},"content":"            + LS + \"Number of food item(s) left in the food bank: %2$d\";","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"tlyi"},"content":"    private static final String MESSAGE_FOOD_CLEAR \u003d \"All food items in the food bank have been removed.\";","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"tlyi"},"content":"    public static final String[] EXPECTED_PREFIXES \u003d {COMMAND_PREFIX_FOOD_BANK};","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"tlyi"},"content":"    private static Logger logger \u003d Logger.getLogger(DeleteFoodBankCommand.class.getName());","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"tlyi"},"content":"    private final int itemIndex;","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"tlyi"},"content":"    private boolean isClear \u003d false;","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"tlyi"},"content":"    public DeleteFoodBankCommand(int itemIndex) {","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"tlyi"},"content":"        this.itemIndex \u003d itemIndex;","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"tlyi"},"content":"    public DeleteFoodBankCommand(boolean isClear) {","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"tlyi"},"content":"        this.itemIndex \u003d -1;","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"tlyi"},"content":"        this.isClear \u003d isClear;","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"tlyi"},"content":"    @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":37,"author":{"gitId":"tlyi"},"content":"    public CommandResult execute() {","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"tlyi"},"content":"        if (this.isClear) {","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"tlyi"},"content":"            logger.log(Level.FINE, \"Clearing food bank\");","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"tlyi"},"content":"            super.foodBank.clearList();","lastModifiedDate":"2021-10-19"},{"lineNumber":41,"author":{"gitId":"tlyi"},"content":"            return new CommandResult(MESSAGE_FOOD_CLEAR);","lastModifiedDate":"2021-10-19"},{"lineNumber":42,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":43,"author":{"gitId":"tlyi"},"content":"        assert this.itemIndex \u003e 0 : \"Deleting an item only\";","lastModifiedDate":"2021-10-19"},{"lineNumber":44,"author":{"gitId":"tlyi"},"content":"        if (super.foodBank.getSize() \u003d\u003d 0) {","lastModifiedDate":"2021-10-19"},{"lineNumber":45,"author":{"gitId":"tlyi"},"content":"            logger.log(Level.WARNING, \"food bank is empty.\");","lastModifiedDate":"2021-10-19"},{"lineNumber":46,"author":{"gitId":"tlyi"},"content":"            return new CommandResult(MESSAGE_EMPTY_FOOD_BANK);","lastModifiedDate":"2021-10-19"},{"lineNumber":47,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":48,"author":{"gitId":"tlyi"},"content":"        logger.log(Level.FINE, \"Trying to delete item now\");","lastModifiedDate":"2021-10-19"},{"lineNumber":49,"author":{"gitId":"tlyi"},"content":"        try {","lastModifiedDate":"2021-10-19"},{"lineNumber":50,"author":{"gitId":"tlyi"},"content":"            Food deletedFood;","lastModifiedDate":"2021-10-19"},{"lineNumber":51,"author":{"gitId":"tlyi"},"content":"            deletedFood \u003d (Food) super.foodBank.deleteItem(this.itemIndex);","lastModifiedDate":"2021-10-19"},{"lineNumber":52,"author":{"gitId":"tlyi"},"content":"            return new CommandResult(String.format(MESSAGE_SUCCESS, deletedFood, super.foodBank.getSize()));","lastModifiedDate":"2021-10-19"},{"lineNumber":53,"author":{"gitId":"tlyi"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-10-19"},{"lineNumber":54,"author":{"gitId":"tlyi"},"content":"            logger.log(Level.WARNING, \"Detected invalid food item index.\");","lastModifiedDate":"2021-10-19"},{"lineNumber":55,"author":{"gitId":"tlyi"},"content":"            if (super.foodBank.getSize() \u003d\u003d 1) {","lastModifiedDate":"2021-10-19"},{"lineNumber":56,"author":{"gitId":"tlyi"},"content":"                return new CommandResult(MESSAGE_ONLY_ONE_IN_LIST);","lastModifiedDate":"2021-10-19"},{"lineNumber":57,"author":{"gitId":"tlyi"},"content":"            }","lastModifiedDate":"2021-10-19"},{"lineNumber":58,"author":{"gitId":"tlyi"},"content":"            return new CommandResult(String.format(MESSAGE_LIST_OUT_OF_BOUNDS, super.foodBank.getSize()));","lastModifiedDate":"2021-10-19"},{"lineNumber":59,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":60,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":61,"author":{"gitId":"tlyi"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"tlyi":61}},{"path":"src/main/java/seedu/duke/commands/DeleteFoodCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.commands;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"tryyang2001"},"content":"import seedu.duke.item.food.Food;","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"tlyi"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"tryyang2001"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"tryyang2001"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"tlyi"},"content":"/**","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"tlyi"},"content":" * Represents the command that when executed, deletes a Food item from the FoodList.","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"tlyi"},"content":" */","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"tlyi"},"content":"public class DeleteFoodCommand extends Command {","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_COMMAND_FORMAT \u003d QUOTATION + COMMAND_WORD_DELETE","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"tlyi"},"content":"            + \" \" + COMMAND_PREFIX_FOOD + COMMAND_PREFIX_DELIMITER + \"X\" + QUOTATION","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"tlyi"},"content":"            + \", where X is the item number in the food list\";","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"A food item has been deleted:\"","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"tlyi"},"content":"            + INDENTED_LS + \"%1$s\"","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"tlyi"},"content":"            + INDENTED_LS + \"Number of food item(s) left: %2$d\";","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"tryyang2001"},"content":"    public static final String MESSAGE_FOOD_CLEAR \u003d \"All food items have been removed.\";","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"tlyi"},"content":"    public static final String[] EXPECTED_PREFIXES \u003d {","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"tlyi"},"content":"            COMMAND_PREFIX_FOOD,","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"tlyi"},"content":"            COMMAND_PREFIX_DATE","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"tlyi"},"content":"    };","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"tlyi"},"content":"    private final int itemIndex;","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"tlyi"},"content":"    private final LocalDate date;","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"tryyang2001"},"content":"    private boolean isClear \u003d false;","lastModifiedDate":"2021-10-14"},{"lineNumber":29,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"tryyang2001"},"content":"    private static final Logger logger \u003d Logger.getLogger(DeleteFoodCommand.class.getName());","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"tlyi"},"content":"    public DeleteFoodCommand(int itemIndex, LocalDate date) {","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"tlyi"},"content":"        this.itemIndex \u003d itemIndex;","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"tlyi"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":36,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":37,"author":{"gitId":"tryyang2001"},"content":"    public DeleteFoodCommand(boolean isClear) {","lastModifiedDate":"2021-10-14"},{"lineNumber":38,"author":{"gitId":"tryyang2001"},"content":"        this.itemIndex \u003d -1;","lastModifiedDate":"2021-10-14"},{"lineNumber":39,"author":{"gitId":"tryyang2001"},"content":"        this.isClear \u003d isClear;","lastModifiedDate":"2021-10-14"},{"lineNumber":40,"author":{"gitId":"tlyi"},"content":"        this.date \u003d LocalDate.now();","lastModifiedDate":"2021-10-19"},{"lineNumber":41,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":42,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":43,"author":{"gitId":"tlyi"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":44,"author":{"gitId":"tlyi"},"content":"    public CommandResult execute() {","lastModifiedDate":"2021-10-10"},{"lineNumber":45,"author":{"gitId":"tryyang2001"},"content":"        if (this.isClear) {","lastModifiedDate":"2021-10-14"},{"lineNumber":46,"author":{"gitId":"tryyang2001"},"content":"            logger.log(Level.FINE, \"Clearing food list\");","lastModifiedDate":"2021-10-14"},{"lineNumber":47,"author":{"gitId":"tryyang2001"},"content":"            super.foodItems.clearFoodList();","lastModifiedDate":"2021-10-11"},{"lineNumber":48,"author":{"gitId":"tryyang2001"},"content":"            assert foodItems.getSize() \u003d\u003d 0 : \"The size of the food list should be 0 after clear\";","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"tryyang2001"},"content":"            return new CommandResult(MESSAGE_FOOD_CLEAR);","lastModifiedDate":"2021-10-11"},{"lineNumber":50,"author":{"gitId":"tryyang2001"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":51,"author":{"gitId":"tryyang2001"},"content":"        assert this.itemIndex \u003e 0 : \"Deleting an object only\";","lastModifiedDate":"2021-10-13"},{"lineNumber":52,"author":{"gitId":"tryyang2001"},"content":"        if (super.foodItems.getSize() \u003d\u003d 0) {","lastModifiedDate":"2021-10-13"},{"lineNumber":53,"author":{"gitId":"tryyang2001"},"content":"            logger.log(Level.WARNING, \"Food list is empty.\");","lastModifiedDate":"2021-10-13"},{"lineNumber":54,"author":{"gitId":"tryyang2001"},"content":"            return new CommandResult(MESSAGE_EMPTY_FOOD_LIST);","lastModifiedDate":"2021-10-13"},{"lineNumber":55,"author":{"gitId":"tryyang2001"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":56,"author":{"gitId":"tryyang2001"},"content":"        logger.log(Level.FINE, \"Trying to delete item now\");","lastModifiedDate":"2021-10-14"},{"lineNumber":57,"author":{"gitId":"tlyi"},"content":"        try {","lastModifiedDate":"2021-10-11"},{"lineNumber":58,"author":{"gitId":"tlyi"},"content":"            //TODO: Implement delete by date and index","lastModifiedDate":"2021-10-19"},{"lineNumber":59,"author":{"gitId":"tlyi"},"content":"            Food deletedFood;","lastModifiedDate":"2021-10-11"},{"lineNumber":60,"author":{"gitId":"tlyi"},"content":"            deletedFood \u003d super.foodItems.deleteFood(this.itemIndex);","lastModifiedDate":"2021-10-11"},{"lineNumber":61,"author":{"gitId":"tlyi"},"content":"            return new CommandResult(String.format(MESSAGE_SUCCESS, deletedFood, super.foodItems.getSize()));","lastModifiedDate":"2021-10-11"},{"lineNumber":62,"author":{"gitId":"tlyi"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-10-11"},{"lineNumber":63,"author":{"gitId":"tryyang2001"},"content":"            logger.log(Level.FINE, \"Detected invalid food item index.\");","lastModifiedDate":"2021-10-14"},{"lineNumber":64,"author":{"gitId":"tlyi"},"content":"            if (super.foodItems.getSize() \u003d\u003d 1) {","lastModifiedDate":"2021-10-11"},{"lineNumber":65,"author":{"gitId":"tlyi"},"content":"                return new CommandResult(MESSAGE_ONLY_ONE_IN_LIST);","lastModifiedDate":"2021-10-11"},{"lineNumber":66,"author":{"gitId":"tlyi"},"content":"            }","lastModifiedDate":"2021-10-11"},{"lineNumber":67,"author":{"gitId":"tlyi"},"content":"            return new CommandResult(String.format(MESSAGE_LIST_OUT_OF_BOUNDS, super.foodItems.getSize()));","lastModifiedDate":"2021-10-11"},{"lineNumber":68,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":69,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":70,"author":{"gitId":"tlyi"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"tryyang2001":26,"tlyi":44}},{"path":"src/main/java/seedu/duke/commands/DeleteFutureExerciseCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xingjie99"},"content":"package seedu.duke.commands;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"xingjie99"},"content":"import seedu.duke.item.exercise.Exercise;","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"xingjie99"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"xingjie99"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"xingjie99"},"content":"/**","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"xingjie99"},"content":" * Represents the command that when executed, deletes an Exercise item from the Future ExerciseList.","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"xingjie99"},"content":" */","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"xingjie99"},"content":"public class DeleteFutureExerciseCommand extends Command {","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_COMMAND_FORMAT \u003d QUOTATION + COMMAND_WORD_DELETE","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"tlyi"},"content":"            + \" \" + COMMAND_PREFIX_UPCOMING_EXERCISE + COMMAND_PREFIX_DELIMITER + \"X\" + QUOTATION","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"xingjie99"},"content":"            + \", where X is the item number in the future exercise list\";","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"xingjie99"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"An exercise item for the future has been deleted:\"","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"tlyi"},"content":"            + INDENTED_LS + \"%s\"","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"tlyi"},"content":"            + LS + \"Number of exercise item(s) left: %2$d\";","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"xingjie99"},"content":"    private static final String MESSAGE_FUTURE_EXERCISE_CLEAR \u003d \"All future exercise items have been removed.\";","lastModifiedDate":"2021-10-18"},{"lineNumber":19,"author":{"gitId":"tlyi"},"content":"    public static final String[] EXPECTED_PREFIXES \u003d {COMMAND_PREFIX_UPCOMING_EXERCISE};","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"xingjie99"},"content":"    private static Logger logger \u003d Logger.getLogger(DeleteFutureExerciseCommand.class.getName());","lastModifiedDate":"2021-10-18"},{"lineNumber":23,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":24,"author":{"gitId":"xingjie99"},"content":"    private final int itemIndex;","lastModifiedDate":"2021-10-18"},{"lineNumber":25,"author":{"gitId":"xingjie99"},"content":"    private boolean isClear \u003d false;","lastModifiedDate":"2021-10-18"},{"lineNumber":26,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":27,"author":{"gitId":"xingjie99"},"content":"    public DeleteFutureExerciseCommand(int itemIndex) {","lastModifiedDate":"2021-10-18"},{"lineNumber":28,"author":{"gitId":"xingjie99"},"content":"        this.itemIndex \u003d itemIndex;","lastModifiedDate":"2021-10-18"},{"lineNumber":29,"author":{"gitId":"xingjie99"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":30,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":31,"author":{"gitId":"xingjie99"},"content":"    public DeleteFutureExerciseCommand(boolean isClear) {","lastModifiedDate":"2021-10-18"},{"lineNumber":32,"author":{"gitId":"xingjie99"},"content":"        this.itemIndex \u003d -1;","lastModifiedDate":"2021-10-18"},{"lineNumber":33,"author":{"gitId":"xingjie99"},"content":"        this.isClear \u003d isClear;","lastModifiedDate":"2021-10-18"},{"lineNumber":34,"author":{"gitId":"xingjie99"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":35,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":36,"author":{"gitId":"xingjie99"},"content":"    @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":37,"author":{"gitId":"xingjie99"},"content":"    public CommandResult execute() {","lastModifiedDate":"2021-10-18"},{"lineNumber":38,"author":{"gitId":"xingjie99"},"content":"        if (this.isClear) {","lastModifiedDate":"2021-10-18"},{"lineNumber":39,"author":{"gitId":"xingjie99"},"content":"            logger.log(Level.FINE, \"Clearing future exercise list\");","lastModifiedDate":"2021-10-18"},{"lineNumber":40,"author":{"gitId":"xingjie99"},"content":"            super.futureExerciseItems.clearFutureExerciseList();","lastModifiedDate":"2021-10-18"},{"lineNumber":41,"author":{"gitId":"xingjie99"},"content":"            return new CommandResult(MESSAGE_FUTURE_EXERCISE_CLEAR);","lastModifiedDate":"2021-10-18"},{"lineNumber":42,"author":{"gitId":"xingjie99"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":43,"author":{"gitId":"xingjie99"},"content":"        assert this.itemIndex \u003e 0 : \"Deleting an item only\";","lastModifiedDate":"2021-10-18"},{"lineNumber":44,"author":{"gitId":"xingjie99"},"content":"        if (super.futureExerciseItems.getSize() \u003d\u003d 0) {","lastModifiedDate":"2021-10-18"},{"lineNumber":45,"author":{"gitId":"xingjie99"},"content":"            logger.log(Level.WARNING, \"Future exercise list is empty.\");","lastModifiedDate":"2021-10-18"},{"lineNumber":46,"author":{"gitId":"xingjie99"},"content":"            return new CommandResult(MESSAGE_EMPTY_FUTURE_EXERCISE_LIST);","lastModifiedDate":"2021-10-18"},{"lineNumber":47,"author":{"gitId":"xingjie99"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":48,"author":{"gitId":"xingjie99"},"content":"        logger.log(Level.FINE, \"Trying to delete item now\");","lastModifiedDate":"2021-10-18"},{"lineNumber":49,"author":{"gitId":"xingjie99"},"content":"        try {","lastModifiedDate":"2021-10-18"},{"lineNumber":50,"author":{"gitId":"xingjie99"},"content":"            Exercise deletedExercise;","lastModifiedDate":"2021-10-18"},{"lineNumber":51,"author":{"gitId":"xingjie99"},"content":"            deletedExercise \u003d super.futureExerciseItems.deleteFutureExercise(this.itemIndex);","lastModifiedDate":"2021-10-18"},{"lineNumber":52,"author":{"gitId":"xingjie99"},"content":"            return new CommandResult(String.format(MESSAGE_SUCCESS, deletedExercise,","lastModifiedDate":"2021-10-18"},{"lineNumber":53,"author":{"gitId":"xingjie99"},"content":"                    super.futureExerciseItems.getSize()));","lastModifiedDate":"2021-10-18"},{"lineNumber":54,"author":{"gitId":"xingjie99"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-10-18"},{"lineNumber":55,"author":{"gitId":"xingjie99"},"content":"            logger.log(Level.WARNING, \"Detected invalid exercise item index.\");","lastModifiedDate":"2021-10-18"},{"lineNumber":56,"author":{"gitId":"xingjie99"},"content":"            if (super.futureExerciseItems.getSize() \u003d\u003d 1) {","lastModifiedDate":"2021-10-18"},{"lineNumber":57,"author":{"gitId":"xingjie99"},"content":"                return new CommandResult(MESSAGE_ONLY_ONE_IN_LIST);","lastModifiedDate":"2021-10-18"},{"lineNumber":58,"author":{"gitId":"xingjie99"},"content":"            }","lastModifiedDate":"2021-10-18"},{"lineNumber":59,"author":{"gitId":"xingjie99"},"content":"            return new CommandResult(String.format(MESSAGE_LIST_OUT_OF_BOUNDS, super.futureExerciseItems.getSize()));","lastModifiedDate":"2021-10-18"},{"lineNumber":60,"author":{"gitId":"xingjie99"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":61,"author":{"gitId":"xingjie99"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":62,"author":{"gitId":"xingjie99"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"xingjie99":56,"tlyi":6}},{"path":"src/main/java/seedu/duke/commands/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.commands;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"tlyi"},"content":"/**","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"tlyi"},"content":" * Represents the command that when executed, displays the list of available commands to the user.","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"tlyi"},"content":" */","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"tlyi"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"tlyi"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_COMMAND_FORMAT \u003d QUOTATION + COMMAND_WORD + QUOTATION;","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"tlyi"},"content":"    private static final String MESSAGE_SUCCESS \u003d \"These are the available commands:\" + LS + \"%s\";","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"tlyi"},"content":"    private static final String MESSAGE_HELP_INTRO \u003d \"Welcome to the help page.\" + LS","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"tlyi"},"content":"            + \"Below are the commands to get you started.\" + LS","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"tlyi"},"content":"            + \"More details could be found on: \" + LS","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"weidak"},"content":"            + \"https://tinyurl.com/fitbotUG\";","lastModifiedDate":"2021-10-14"},{"lineNumber":14,"author":{"gitId":"tttyyzzz"},"content":"    private static final String MESSAGE_HELP_HELP \u003d \"help -- \"","lastModifiedDate":"2021-10-14"},{"lineNumber":15,"author":{"gitId":"tttyyzzz"},"content":"            + \"Shows a list of commands and their usage with some examples.\";","lastModifiedDate":"2021-10-14"},{"lineNumber":16,"author":{"gitId":"tttyyzzz"},"content":"    private static final String MESSAGE_HELP_PROFILE \u003d \"profile -- \"","lastModifiedDate":"2021-10-14"},{"lineNumber":17,"author":{"gitId":"tlyi"},"content":"            + \"Inputs height of user in centimetres, weight of user in kg\" + LS","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"tttyyzzz"},"content":"            + \"\\t      and name of user in test.\";","lastModifiedDate":"2021-10-14"},{"lineNumber":19,"author":{"gitId":"tttyyzzz"},"content":"    private static final String MESSAGE_HELP_GOAL \u003d \"goal -- Inputs net calorie goal of user in calorie.\";","lastModifiedDate":"2021-10-14"},{"lineNumber":20,"author":{"gitId":"tttyyzzz"},"content":"    private static final String MESSAGE_HELP_BMI \u003d \"bmi -- \"","lastModifiedDate":"2021-10-14"},{"lineNumber":21,"author":{"gitId":"tttyyzzz"},"content":"            + \"Calculates the BMI value based on the user\u0027s input height and weight.\";","lastModifiedDate":"2021-10-14"},{"lineNumber":22,"author":{"gitId":"tttyyzzz"},"content":"    private static final String MESSAGE_HELP_ADD \u003d \"add -- Adds food or exercise record to the current list.\";","lastModifiedDate":"2021-10-14"},{"lineNumber":23,"author":{"gitId":"tttyyzzz"},"content":"    private static final String MESSAGE_HELP_VIEW \u003d \"view -- Views all the food and/or exercises added.\";","lastModifiedDate":"2021-10-14"},{"lineNumber":24,"author":{"gitId":"tttyyzzz"},"content":"    private static final String MESSAGE_HELP_DELETE \u003d \"delete -- Deletes entry of food or exercise added.\";","lastModifiedDate":"2021-10-14"},{"lineNumber":25,"author":{"gitId":"tttyyzzz"},"content":"    private static final String MESSAGE_HELP_BYE \u003d \"bye -- \"","lastModifiedDate":"2021-10-14"},{"lineNumber":26,"author":{"gitId":"tttyyzzz"},"content":"            + \"Exits the program and save results from food and exercise items.\";","lastModifiedDate":"2021-10-14"},{"lineNumber":27,"author":{"gitId":"tttyyzzz"},"content":"    private static final String EMPTY \u003d \"\";","lastModifiedDate":"2021-10-14"},{"lineNumber":28,"author":{"gitId":"tttyyzzz"},"content":"    private static final int REVERSE_APPEND \u003d 1;","lastModifiedDate":"2021-10-14"},{"lineNumber":29,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"tttyyzzz"},"content":"    private String buildHelpString() {","lastModifiedDate":"2021-10-14"},{"lineNumber":31,"author":{"gitId":"tttyyzzz"},"content":"        StringBuilder helpMessage \u003d new StringBuilder(EMPTY);// need to include the format later","lastModifiedDate":"2021-10-14"},{"lineNumber":32,"author":{"gitId":"tlyi"},"content":"        helpMessage.append(MESSAGE_HELP_INTRO).append(LS).append(LS) // complete by tonight","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"tlyi"},"content":"                .append(MESSAGE_HELP_HELP).append(LS).append(LS)","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"tlyi"},"content":"                .append(MESSAGE_HELP_PROFILE).append(LS)","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"tlyi"},"content":"                .append(MESSAGE_HELP_GOAL).append(LS)","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"tlyi"},"content":"                .append(MESSAGE_HELP_BMI).append(LS)","lastModifiedDate":"2021-10-19"},{"lineNumber":37,"author":{"gitId":"tlyi"},"content":"                .append(MESSAGE_HELP_ADD).append(LS)","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"tlyi"},"content":"                .append(MESSAGE_HELP_VIEW).append(LS)","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"tlyi"},"content":"                .append(MESSAGE_HELP_DELETE).append(LS)","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"tlyi"},"content":"                .append(MESSAGE_HELP_BYE).append(LS);","lastModifiedDate":"2021-10-19"},{"lineNumber":41,"author":{"gitId":"tttyyzzz"},"content":"        helpMessage.setLength(helpMessage.length() - REVERSE_APPEND);","lastModifiedDate":"2021-10-14"},{"lineNumber":42,"author":{"gitId":"tttyyzzz"},"content":"        return helpMessage.toString();","lastModifiedDate":"2021-10-14"},{"lineNumber":43,"author":{"gitId":"tttyyzzz"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":44,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":45,"author":{"gitId":"tlyi"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":46,"author":{"gitId":"tlyi"},"content":"    public CommandResult execute() {","lastModifiedDate":"2021-10-10"},{"lineNumber":47,"author":{"gitId":"tttyyzzz"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, buildHelpString()));","lastModifiedDate":"2021-10-14"},{"lineNumber":48,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":49,"author":{"gitId":"tlyi"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"weidak":1,"tttyyzzz":21,"tlyi":27}},{"path":"src/main/java/seedu/duke/commands/InvalidCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.commands;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"tlyi"},"content":"/**","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"tlyi"},"content":" * Represents any command that cannot be executed due to invalid format.","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"tlyi"},"content":" * Contains a String of message that describes the error.","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"tlyi"},"content":" */","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"tlyi"},"content":"public class InvalidCommand extends Command {","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"tlyi"},"content":"    public final String errorMessage;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"tlyi"},"content":"    public InvalidCommand(String errorMessage) {","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"tlyi"},"content":"        this.errorMessage \u003d errorMessage;","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"tlyi"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"tlyi"},"content":"    public CommandResult execute() {","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"tlyi"},"content":"        return new CommandResult(this.errorMessage);","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"tlyi"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"tlyi":18}},{"path":"src/main/java/seedu/duke/commands/OverviewCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.commands;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"tttyyzzz"},"content":"import seedu.duke.ui.Statistics;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"tlyi"},"content":"/**","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"tlyi"},"content":" * Represents the command that when executed, displays the overview of calorie statistics.","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"tlyi"},"content":" */","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"tlyi"},"content":"public class OverviewCommand extends Command {","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"tlyi"},"content":"    public static final String COMMAND_WORD \u003d \"overview\";","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_COMMAND_FORMAT \u003d QUOTATION + COMMAND_WORD + QUOTATION;","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"This is an overview of your day:\"","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"tlyi"},"content":"            + INDENTED_LS + \"Calories consumed: %1$d calories\"","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"tlyi"},"content":"            + INDENTED_LS + \"Calories burnt: %2$d calories\"","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"tlyi"},"content":"            + INDENTED_LS + \"Net calories: %3$d calories\"","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"tlyi"},"content":"            + LS + \"%4$s\";","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"tttyyzzz"},"content":"    protected Statistics statistics \u003d new Statistics();","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"tlyi"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"tlyi"},"content":"    public CommandResult execute() {","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"tttyyzzz"},"content":"        int caloriesConsumed \u003d super.foodItems.getTotalCalories();","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"tttyyzzz"},"content":"        int caloriesLost \u003d super.exerciseItems.getTotalCalories();","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"weidak"},"content":"        int caloriesGoal \u003d super.profile.getProfileCalorieGoal().getCalorieGoal();","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"tttyyzzz"},"content":"        String[] calorieReport \u003d this.statistics.getCaloriesReport(caloriesLost, caloriesConsumed, caloriesGoal);","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"tttyyzzz"},"content":"        return new CommandResult(this.statistics.formatMessage(calorieReport));","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"tlyi"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"weidak":1,"tttyyzzz":6,"tlyi":19}},{"path":"src/main/java/seedu/duke/commands/ProfileCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.commands;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"tlyi"},"content":"/**","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"tlyi"},"content":" * Represents the command that when executed, shows the value of name, height and weight in the Profile.","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"tlyi"},"content":" */","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"tlyi"},"content":"public class ProfileCommand extends Command {","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Hello! This is your current profile:\";","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"tlyi"},"content":"    private static final String MESSAGE_NAME \u003d \"Your name is %s.\";","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"tlyi"},"content":"    private static final String MESSAGE_HEIGHT \u003d \"Your height is %scm.\";","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"tlyi"},"content":"    private static final String MESSAGE_WEIGHT \u003d \"Your weight is %skg.\";","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"tryyang2001"},"content":"    private static final String MESSAGE_CALORIE_GOAL \u003d \"Your calorie goal is %s cal.\";","lastModifiedDate":"2021-10-14"},{"lineNumber":12,"author":{"gitId":"tlyi"},"content":"    private static final String MESSAGE_NO_INFO \u003d \"I do not know your %1$s yet, tell me using the command %2$s!\";","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"tlyi"},"content":"    public ProfileCommand() {","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"tlyi"},"content":"    @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"tlyi"},"content":"    public CommandResult execute() {","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"tlyi"},"content":"        //TODO: Change the format of this. 1. Profile attributes should not be empty. 2. Missing attributes in message","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"weidak"},"content":"        final String nameString \u003d super.profile.getProfileName().getName() \u003d\u003d null","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"tlyi"},"content":"                ? String.format(MESSAGE_NO_INFO, \"name\", ChangeNameCommand.MESSAGE_COMMAND_FORMAT)","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"weidak"},"content":"                : String.format(MESSAGE_NAME, super.profile.getProfileName().getName());","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"weidak"},"content":"        final String heightString \u003d super.profile.getProfileHeight().getHeight() \u003d\u003d 0","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"tlyi"},"content":"                ? String.format(MESSAGE_NO_INFO, \"height\", ChangeHeightCommand.MESSAGE_COMMAND_FORMAT)","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"weidak"},"content":"                : String.format(MESSAGE_HEIGHT, super.profile.getProfileHeight().getHeight());","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"weidak"},"content":"        final String weightString \u003d super.profile.getProfileWeight().getWeight() \u003d\u003d 0","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"tlyi"},"content":"                ? String.format(MESSAGE_NO_INFO, \"weight\", ChangeWeightCommand.MESSAGE_COMMAND_FORMAT)","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"weidak"},"content":"                : String.format(MESSAGE_WEIGHT, super.profile.getProfileWeight().getWeight());","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"weidak"},"content":"        final String calorieGoalString \u003d super.profile.getProfileCalorieGoal().getCalorieGoal() \u003d\u003d 0","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"tryyang2001"},"content":"                ? String.format(MESSAGE_NO_INFO, \"calorie goal\", SetGoalCommand.MESSAGE_COMMAND_FORMAT)","lastModifiedDate":"2021-10-14"},{"lineNumber":31,"author":{"gitId":"weidak"},"content":"                : String.format(MESSAGE_CALORIE_GOAL, super.profile.getProfileCalorieGoal().getCalorieGoal());","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"tlyi"},"content":"        return new CommandResult(MESSAGE_SUCCESS","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"tlyi"},"content":"                + INDENTED_LS + nameString","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"tlyi"},"content":"                + INDENTED_LS + heightString","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"tlyi"},"content":"                + INDENTED_LS + weightString","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"tlyi"},"content":"                + INDENTED_LS + calorieGoalString);","lastModifiedDate":"2021-10-19"},{"lineNumber":37,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"tlyi"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"weidak":8,"tryyang2001":2,"tlyi":28}},{"path":"src/main/java/seedu/duke/commands/ProfileCreateCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.commands;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"weidak"},"content":"import seedu.duke.profile.Profile;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"weidak"},"content":"import seedu.duke.profile.attributes.ActivityFactor;","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"weidak"},"content":"import seedu.duke.profile.attributes.Age;","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"weidak"},"content":"import seedu.duke.profile.attributes.CalorieGoal;","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"weidak"},"content":"import seedu.duke.profile.attributes.Gender;","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"weidak"},"content":"import seedu.duke.profile.attributes.Height;","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"weidak"},"content":"import seedu.duke.profile.attributes.Name;","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"weidak"},"content":"import seedu.duke.profile.attributes.Weight;","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"tlyi"},"content":"import seedu.duke.profile.exceptions.InvalidCharacteristicException;","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"tlyi"},"content":"/**","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"tlyi"},"content":" * Represents the command that when executed, changes the value of name, height and weight in the Profile.","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"tlyi"},"content":" */","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"tlyi"},"content":"public class ProfileCreateCommand extends Command {","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"tryyang2001"},"content":"    public static int COMMAND_EXPECTED_NUM_DELIMITERS \u003d 4;","lastModifiedDate":"2021-10-14"},{"lineNumber":18,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_COMMAND_FORMAT \u003d QUOTATION + COMMAND_WORD_PROFILE","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"tryyang2001"},"content":"            + \" \" + COMMAND_PREFIX_NAME + COMMAND_PREFIX_DELIMITER + \"W \"","lastModifiedDate":"2021-10-14"},{"lineNumber":20,"author":{"gitId":"tryyang2001"},"content":"            + COMMAND_PREFIX_HEIGHT + COMMAND_PREFIX_DELIMITER + \"X \"","lastModifiedDate":"2021-10-14"},{"lineNumber":21,"author":{"gitId":"tryyang2001"},"content":"            + COMMAND_PREFIX_WEIGHT + COMMAND_PREFIX_DELIMITER + \"Y \"","lastModifiedDate":"2021-10-14"},{"lineNumber":22,"author":{"gitId":"tryyang2001"},"content":"            + COMMAND_PREFIX_GOAL + COMMAND_PREFIX_DELIMITER + \"Z\"","lastModifiedDate":"2021-10-14"},{"lineNumber":23,"author":{"gitId":"tlyi"},"content":"            + QUOTATION + \" where W is your name, X is your height in CM,\"","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"tlyi"},"content":"            + INDENTED_LS + \"Y is your weight in KG and Z is your calorie goal.\";","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Hello %1$s! Your profile has been created!\"","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"tlyi"},"content":"            + INDENTED_LS + \"Your height is %2$scm.\"","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"tlyi"},"content":"            + INDENTED_LS + \"Your weight is %3$skg.\"","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"weidak"},"content":"            + INDENTED_LS + \"Your gender is %4$s.\"","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"weidak"},"content":"            + INDENTED_LS + \"Your age is %5$s.\"","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"weidak"},"content":"            + INDENTED_LS + \"Your calories goal is %6$s cal.\"","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"weidak"},"content":"            + INDENTED_LS + \"Your activity factor is %7$s.\";","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"weidak"},"content":"    private Name name \u003d new Name(\"\");","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"weidak"},"content":"    private Weight weight;","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"weidak"},"content":"    private Height height;","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"weidak"},"content":"    private CalorieGoal calorieGoal;","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"weidak"},"content":"    private Age age;","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"weidak"},"content":"    private ActivityFactor activityFactor;","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"weidak"},"content":"    private Gender gender;","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":41,"author":{"gitId":"weidak"},"content":"    public ProfileCreateCommand(String name, double height, double weight, char gender,","lastModifiedDate":"2021-10-20"},{"lineNumber":42,"author":{"gitId":"weidak"},"content":"                                int age, int calorieGoal, int activityFactor) {","lastModifiedDate":"2021-10-20"},{"lineNumber":43,"author":{"gitId":"tlyi"},"content":"        assert name !\u003d null : \"parser should have ensured name is not null\";","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"weidak"},"content":"        this.name.setName(name);","lastModifiedDate":"2021-10-20"},{"lineNumber":45,"author":{"gitId":"weidak"},"content":"        this.height.setHeight(height);","lastModifiedDate":"2021-10-20"},{"lineNumber":46,"author":{"gitId":"weidak"},"content":"        this.weight.setWeight(weight);","lastModifiedDate":"2021-10-20"},{"lineNumber":47,"author":{"gitId":"weidak"},"content":"        this.calorieGoal.setCalorieGoal(calorieGoal);","lastModifiedDate":"2021-10-20"},{"lineNumber":48,"author":{"gitId":"weidak"},"content":"        this.gender.setGender(gender);","lastModifiedDate":"2021-10-20"},{"lineNumber":49,"author":{"gitId":"weidak"},"content":"        this.age.setAge(age);","lastModifiedDate":"2021-10-20"},{"lineNumber":50,"author":{"gitId":"weidak"},"content":"        this.activityFactor.setActivityFactor(activityFactor);","lastModifiedDate":"2021-10-20"},{"lineNumber":51,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":52,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":53,"author":{"gitId":"weidak"},"content":"    private void checkIfCommandShouldExecute() throws InvalidCharacteristicException {","lastModifiedDate":"2021-10-20"},{"lineNumber":54,"author":{"gitId":"weidak"},"content":"        if (!height.isValid()) {","lastModifiedDate":"2021-10-20"},{"lineNumber":55,"author":{"gitId":"weidak"},"content":"            throw new InvalidCharacteristicException(Profile.ERROR_HEIGHT);","lastModifiedDate":"2021-10-20"},{"lineNumber":56,"author":{"gitId":"weidak"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":57,"author":{"gitId":"weidak"},"content":"        if (!weight.isValid()) {","lastModifiedDate":"2021-10-20"},{"lineNumber":58,"author":{"gitId":"weidak"},"content":"            throw new InvalidCharacteristicException(Profile.ERROR_WEIGHT);","lastModifiedDate":"2021-10-20"},{"lineNumber":59,"author":{"gitId":"weidak"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":60,"author":{"gitId":"weidak"},"content":"        if (!gender.isValid()) {","lastModifiedDate":"2021-10-20"},{"lineNumber":61,"author":{"gitId":"weidak"},"content":"            throw new InvalidCharacteristicException(Profile.ERROR_GENDER);","lastModifiedDate":"2021-10-20"},{"lineNumber":62,"author":{"gitId":"weidak"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":63,"author":{"gitId":"weidak"},"content":"        if (!age.isValid()) {","lastModifiedDate":"2021-10-20"},{"lineNumber":64,"author":{"gitId":"weidak"},"content":"            throw new InvalidCharacteristicException(Profile.ERROR_AGE);","lastModifiedDate":"2021-10-20"},{"lineNumber":65,"author":{"gitId":"weidak"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":66,"author":{"gitId":"weidak"},"content":"        if (!calorieGoal.isValid()) {","lastModifiedDate":"2021-10-20"},{"lineNumber":67,"author":{"gitId":"weidak"},"content":"            throw new InvalidCharacteristicException(Profile.ERROR_CALORIE_GOAL);","lastModifiedDate":"2021-10-20"},{"lineNumber":68,"author":{"gitId":"weidak"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":69,"author":{"gitId":"weidak"},"content":"        if (!activityFactor.isValid()) {","lastModifiedDate":"2021-10-20"},{"lineNumber":70,"author":{"gitId":"weidak"},"content":"            throw new InvalidCharacteristicException(Profile.ERROR_ACTIVITY_FACTOR);","lastModifiedDate":"2021-10-20"},{"lineNumber":71,"author":{"gitId":"weidak"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":72,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":73,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":74,"author":{"gitId":"tlyi"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":75,"author":{"gitId":"tlyi"},"content":"    public CommandResult execute() {","lastModifiedDate":"2021-10-10"},{"lineNumber":76,"author":{"gitId":"tlyi"},"content":"        try {","lastModifiedDate":"2021-10-11"},{"lineNumber":77,"author":{"gitId":"weidak"},"content":"            super.profile \u003d new Profile(this.name, this.height, this.weight,","lastModifiedDate":"2021-10-20"},{"lineNumber":78,"author":{"gitId":"weidak"},"content":"                    this.gender, this.age, this.calorieGoal, this.activityFactor);","lastModifiedDate":"2021-10-20"},{"lineNumber":79,"author":{"gitId":"weidak"},"content":"            checkIfCommandShouldExecute();","lastModifiedDate":"2021-10-20"},{"lineNumber":80,"author":{"gitId":"tryyang2001"},"content":"            return new CommandResult(String.format(","lastModifiedDate":"2021-10-14"},{"lineNumber":81,"author":{"gitId":"tryyang2001"},"content":"                    MESSAGE_SUCCESS,","lastModifiedDate":"2021-10-14"},{"lineNumber":82,"author":{"gitId":"weidak"},"content":"                    name.getName(),","lastModifiedDate":"2021-10-20"},{"lineNumber":83,"author":{"gitId":"weidak"},"content":"                    height.getHeight(),","lastModifiedDate":"2021-10-20"},{"lineNumber":84,"author":{"gitId":"weidak"},"content":"                    weight.getWeight(),","lastModifiedDate":"2021-10-20"},{"lineNumber":85,"author":{"gitId":"weidak"},"content":"                    gender.getGender(),","lastModifiedDate":"2021-10-20"},{"lineNumber":86,"author":{"gitId":"weidak"},"content":"                    age.getAge(),","lastModifiedDate":"2021-10-20"},{"lineNumber":87,"author":{"gitId":"weidak"},"content":"                    calorieGoal.getCalorieGoal(),","lastModifiedDate":"2021-10-20"},{"lineNumber":88,"author":{"gitId":"weidak"},"content":"                    activityFactor.getActivityFactor()));","lastModifiedDate":"2021-10-20"},{"lineNumber":89,"author":{"gitId":"tlyi"},"content":"        } catch (InvalidCharacteristicException e) {","lastModifiedDate":"2021-10-11"},{"lineNumber":90,"author":{"gitId":"tlyi"},"content":"            return new CommandResult(e.getMessage());","lastModifiedDate":"2021-10-11"},{"lineNumber":91,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":92,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":93,"author":{"gitId":"tlyi"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"weidak":59,"tryyang2001":7,"tlyi":27}},{"path":"src/main/java/seedu/duke/commands/ProfileUpdateCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weidak"},"content":"package seedu.duke.commands;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"tlyi"},"content":"import seedu.duke.profile.Profile;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"weidak"},"content":"import seedu.duke.profile.attributes.ActivityFactor;","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"weidak"},"content":"import seedu.duke.profile.attributes.Age;","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"weidak"},"content":"import seedu.duke.profile.attributes.CalorieGoal;","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"weidak"},"content":"import seedu.duke.profile.attributes.Gender;","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"weidak"},"content":"import seedu.duke.profile.attributes.Height;","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"weidak"},"content":"import seedu.duke.profile.attributes.Name;","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"weidak"},"content":"import seedu.duke.profile.attributes.Weight;","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"weidak"},"content":"import seedu.duke.profile.exceptions.InvalidCharacteristicException;","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"weidak"},"content":"/**","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"tlyi"},"content":" * Represents the command that when executed, changes the value of attributes in the Profile.","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"weidak"},"content":" */","lastModifiedDate":"2021-10-18"},{"lineNumber":17,"author":{"gitId":"weidak"},"content":"public class ProfileUpdateCommand extends Command {","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"tlyi"},"content":"    //TODO: Update this","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_COMMAND_FORMAT \u003d QUOTATION + COMMAND_WORD_PROFILE","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"weidak"},"content":"            + \" \" + COMMAND_PREFIX_NAME + COMMAND_PREFIX_DELIMITER + \"W \"","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"weidak"},"content":"            + COMMAND_PREFIX_HEIGHT + COMMAND_PREFIX_DELIMITER + \"X \"","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"weidak"},"content":"            + COMMAND_PREFIX_WEIGHT + COMMAND_PREFIX_DELIMITER + \"Y \"","lastModifiedDate":"2021-10-18"},{"lineNumber":23,"author":{"gitId":"weidak"},"content":"            + COMMAND_PREFIX_GOAL + COMMAND_PREFIX_DELIMITER + \"Z\"","lastModifiedDate":"2021-10-18"},{"lineNumber":24,"author":{"gitId":"tlyi"},"content":"            + QUOTATION + \" where W is your name, X is your height in CM,\"","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"tlyi"},"content":"            + INDENTED_LS + \"Y is your weight in KG and Z is your calorie goal.\";","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Hello %1$s! Your profile has been updated!\"","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"tlyi"},"content":"            + INDENTED_LS + \"Your height is %2$scm.\"","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"tlyi"},"content":"            + INDENTED_LS + \"Your weight is %3$skg.\"","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"weidak"},"content":"            + INDENTED_LS + \"Your gender is %4$s.\"","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"weidak"},"content":"            + INDENTED_LS + \"Your age is %5$s.\"","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"weidak"},"content":"            + INDENTED_LS + \"Your calories goal is %6$s cal.\"","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"tlyi"},"content":"            + INDENTED_LS + \"Your activity factor is %7$s.\";","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"tlyi"},"content":"    public static final String[] EXPECTED_PREFIXES \u003d {","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"tlyi"},"content":"            COMMAND_PREFIX_NAME,","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"tlyi"},"content":"            COMMAND_PREFIX_HEIGHT,","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"tlyi"},"content":"            COMMAND_PREFIX_WEIGHT,","lastModifiedDate":"2021-10-19"},{"lineNumber":37,"author":{"gitId":"tlyi"},"content":"            COMMAND_PREFIX_GOAL,","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"tlyi"},"content":"            COMMAND_PREFIX_AGE,","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"tlyi"},"content":"            COMMAND_PREFIX_ACTIVITY_FACTOR,","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"tlyi"},"content":"            COMMAND_PREFIX_GENDER};","lastModifiedDate":"2021-10-19"},{"lineNumber":41,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":42,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":43,"author":{"gitId":"weidak"},"content":"    private Name name \u003d new Name();","lastModifiedDate":"2021-10-20"},{"lineNumber":44,"author":{"gitId":"weidak"},"content":"    private Weight weight \u003d new Weight();","lastModifiedDate":"2021-10-20"},{"lineNumber":45,"author":{"gitId":"weidak"},"content":"    private Height height \u003d new Height();","lastModifiedDate":"2021-10-20"},{"lineNumber":46,"author":{"gitId":"weidak"},"content":"    private CalorieGoal calorieGoal \u003d new CalorieGoal();","lastModifiedDate":"2021-10-20"},{"lineNumber":47,"author":{"gitId":"weidak"},"content":"    private Age age \u003d new Age();","lastModifiedDate":"2021-10-20"},{"lineNumber":48,"author":{"gitId":"weidak"},"content":"    private ActivityFactor activityFactor \u003d new ActivityFactor();","lastModifiedDate":"2021-10-20"},{"lineNumber":49,"author":{"gitId":"weidak"},"content":"    private Gender gender \u003d new Gender();","lastModifiedDate":"2021-10-20"},{"lineNumber":50,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":51,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":52,"author":{"gitId":"weidak"},"content":"    public ProfileUpdateCommand(String name, double height, double weight, int calorieGoal, int age,","lastModifiedDate":"2021-10-18"},{"lineNumber":53,"author":{"gitId":"weidak"},"content":"                                int activityFactor, char gender) {","lastModifiedDate":"2021-10-18"},{"lineNumber":54,"author":{"gitId":"weidak"},"content":"        this.name.setName(name);","lastModifiedDate":"2021-10-20"},{"lineNumber":55,"author":{"gitId":"weidak"},"content":"        this.height.setHeight(height);","lastModifiedDate":"2021-10-20"},{"lineNumber":56,"author":{"gitId":"weidak"},"content":"        this.weight.setWeight(weight);","lastModifiedDate":"2021-10-20"},{"lineNumber":57,"author":{"gitId":"weidak"},"content":"        this.calorieGoal.setCalorieGoal(calorieGoal);","lastModifiedDate":"2021-10-20"},{"lineNumber":58,"author":{"gitId":"weidak"},"content":"        this.gender.setGender(gender);","lastModifiedDate":"2021-10-20"},{"lineNumber":59,"author":{"gitId":"weidak"},"content":"        this.age.setAge(age);","lastModifiedDate":"2021-10-20"},{"lineNumber":60,"author":{"gitId":"weidak"},"content":"        this.activityFactor.setActivityFactor(activityFactor);","lastModifiedDate":"2021-10-20"},{"lineNumber":61,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":62,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":63,"author":{"gitId":"weidak"},"content":"    private void checkIfCommandShouldExecute() throws InvalidCharacteristicException {","lastModifiedDate":"2021-10-20"},{"lineNumber":64,"author":{"gitId":"weidak"},"content":"        if (!height.isValid()) {","lastModifiedDate":"2021-10-20"},{"lineNumber":65,"author":{"gitId":"weidak"},"content":"            throw new InvalidCharacteristicException(Profile.ERROR_HEIGHT);","lastModifiedDate":"2021-10-20"},{"lineNumber":66,"author":{"gitId":"weidak"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":67,"author":{"gitId":"weidak"},"content":"        if (!weight.isValid()) {","lastModifiedDate":"2021-10-20"},{"lineNumber":68,"author":{"gitId":"weidak"},"content":"            throw new InvalidCharacteristicException(Profile.ERROR_WEIGHT);","lastModifiedDate":"2021-10-20"},{"lineNumber":69,"author":{"gitId":"weidak"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":70,"author":{"gitId":"weidak"},"content":"        if (!gender.isValid()) {","lastModifiedDate":"2021-10-20"},{"lineNumber":71,"author":{"gitId":"weidak"},"content":"            throw new InvalidCharacteristicException(Profile.ERROR_GENDER);","lastModifiedDate":"2021-10-20"},{"lineNumber":72,"author":{"gitId":"weidak"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":73,"author":{"gitId":"weidak"},"content":"        if (!age.isValid()) {","lastModifiedDate":"2021-10-20"},{"lineNumber":74,"author":{"gitId":"weidak"},"content":"            throw new InvalidCharacteristicException(Profile.ERROR_AGE);","lastModifiedDate":"2021-10-20"},{"lineNumber":75,"author":{"gitId":"weidak"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":76,"author":{"gitId":"weidak"},"content":"        if (!calorieGoal.isValid()) {","lastModifiedDate":"2021-10-20"},{"lineNumber":77,"author":{"gitId":"weidak"},"content":"            throw new InvalidCharacteristicException(Profile.ERROR_CALORIE_GOAL);","lastModifiedDate":"2021-10-20"},{"lineNumber":78,"author":{"gitId":"weidak"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":79,"author":{"gitId":"weidak"},"content":"        if (!activityFactor.isValid()) {","lastModifiedDate":"2021-10-20"},{"lineNumber":80,"author":{"gitId":"weidak"},"content":"            throw new InvalidCharacteristicException(Profile.ERROR_ACTIVITY_FACTOR);","lastModifiedDate":"2021-10-20"},{"lineNumber":81,"author":{"gitId":"weidak"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":82,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":83,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":84,"author":{"gitId":"weidak"},"content":"    @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":85,"author":{"gitId":"weidak"},"content":"    public CommandResult execute() {","lastModifiedDate":"2021-10-18"},{"lineNumber":86,"author":{"gitId":"weidak"},"content":"        try {","lastModifiedDate":"2021-10-18"},{"lineNumber":87,"author":{"gitId":"weidak"},"content":"            this.name \u003d name.getName().equals(NULL_STRING) ? super.profile.getProfileName() : name;","lastModifiedDate":"2021-10-20"},{"lineNumber":88,"author":{"gitId":"weidak"},"content":"            this.height \u003d height.getHeight() \u003d\u003d NULL_DOUBLE ? super.profile.getProfileHeight() : height;","lastModifiedDate":"2021-10-20"},{"lineNumber":89,"author":{"gitId":"weidak"},"content":"            this.weight \u003d weight.getWeight() \u003d\u003d NULL_DOUBLE ? super.profile.getProfileWeight() : weight;","lastModifiedDate":"2021-10-20"},{"lineNumber":90,"author":{"gitId":"weidak"},"content":"            this.gender \u003d gender.getGender() \u003d\u003d NULL_CHAR ? super.profile.getProfileGender() : gender;","lastModifiedDate":"2021-10-20"},{"lineNumber":91,"author":{"gitId":"weidak"},"content":"            this.age \u003d age.getAge() \u003d\u003d NULL_INT ? super.profile.getProfileAge() : age;","lastModifiedDate":"2021-10-20"},{"lineNumber":92,"author":{"gitId":"weidak"},"content":"            this.calorieGoal \u003d calorieGoal.getCalorieGoal() \u003d\u003d NULL_INT","lastModifiedDate":"2021-10-20"},{"lineNumber":93,"author":{"gitId":"weidak"},"content":"                    ? super.profile.getProfileCalorieGoal()","lastModifiedDate":"2021-10-20"},{"lineNumber":94,"author":{"gitId":"weidak"},"content":"                    : calorieGoal;","lastModifiedDate":"2021-10-20"},{"lineNumber":95,"author":{"gitId":"weidak"},"content":"            this.activityFactor \u003d activityFactor.getActivityFactor() \u003d\u003d NULL_INT","lastModifiedDate":"2021-10-20"},{"lineNumber":96,"author":{"gitId":"weidak"},"content":"                    ? super.profile.getProfileActivityFactor()","lastModifiedDate":"2021-10-20"},{"lineNumber":97,"author":{"gitId":"weidak"},"content":"                    : activityFactor;","lastModifiedDate":"2021-10-20"},{"lineNumber":98,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":99,"author":{"gitId":"weidak"},"content":"            checkIfCommandShouldExecute();","lastModifiedDate":"2021-10-20"},{"lineNumber":100,"author":{"gitId":"weidak"},"content":"            super.profile \u003d new Profile(this.name, this.height, this.weight,","lastModifiedDate":"2021-10-20"},{"lineNumber":101,"author":{"gitId":"weidak"},"content":"                    this.gender, this.age, this.calorieGoal, this.activityFactor);","lastModifiedDate":"2021-10-20"},{"lineNumber":102,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":103,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":104,"author":{"gitId":"weidak"},"content":"            return new CommandResult(String.format(","lastModifiedDate":"2021-10-18"},{"lineNumber":105,"author":{"gitId":"weidak"},"content":"                    MESSAGE_SUCCESS,","lastModifiedDate":"2021-10-18"},{"lineNumber":106,"author":{"gitId":"weidak"},"content":"                    name.getName(),","lastModifiedDate":"2021-10-20"},{"lineNumber":107,"author":{"gitId":"weidak"},"content":"                    height.getHeight(),","lastModifiedDate":"2021-10-20"},{"lineNumber":108,"author":{"gitId":"weidak"},"content":"                    weight.getWeight(),","lastModifiedDate":"2021-10-20"},{"lineNumber":109,"author":{"gitId":"weidak"},"content":"                    gender.getGender(),","lastModifiedDate":"2021-10-20"},{"lineNumber":110,"author":{"gitId":"weidak"},"content":"                    age.getAge(),","lastModifiedDate":"2021-10-20"},{"lineNumber":111,"author":{"gitId":"weidak"},"content":"                    calorieGoal.getCalorieGoal(),","lastModifiedDate":"2021-10-20"},{"lineNumber":112,"author":{"gitId":"weidak"},"content":"                    activityFactor.getActivityFactor()));","lastModifiedDate":"2021-10-20"},{"lineNumber":113,"author":{"gitId":"weidak"},"content":"        } catch (InvalidCharacteristicException e) {","lastModifiedDate":"2021-10-18"},{"lineNumber":114,"author":{"gitId":"weidak"},"content":"            return new CommandResult(e.getMessage());","lastModifiedDate":"2021-10-18"},{"lineNumber":115,"author":{"gitId":"weidak"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":116,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":117,"author":{"gitId":"weidak"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"weidak":98,"tlyi":19}},{"path":"src/main/java/seedu/duke/commands/SetGoalCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.commands;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"weidak"},"content":"import seedu.duke.profile.Profile;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"weidak"},"content":"import seedu.duke.profile.attributes.CalorieGoal;","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"weidak"},"content":"import seedu.duke.profile.exceptions.InvalidCharacteristicException;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"tlyi"},"content":"/**","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"tlyi"},"content":" * Represents the command that when executed, sets the net calorie goal for Profile.","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"tlyi"},"content":" */","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"tlyi"},"content":"public class SetGoalCommand extends Command {","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"tlyi"},"content":"    public static final String COMMAND_WORD \u003d \"goal\";","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_COMMAND_FORMAT \u003d QUOTATION + COMMAND_WORD + \" X\" + QUOTATION","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"tlyi"},"content":"            + \", where X is your net calorie goal for the day\";","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Your goal has been set!\"","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"tlyi"},"content":"            + LS + \"Current net calorie goal per day: %s\";","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"weidak"},"content":"    private CalorieGoal calorieGoal \u003d new CalorieGoal();","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"tlyi"},"content":"    public SetGoalCommand(int calorieGoal) {","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"weidak"},"content":"        this.calorieGoal.setCalorieGoal(calorieGoal);","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"weidak"},"content":"    private void checkIfCommandShouldExecute() throws InvalidCharacteristicException {","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"weidak"},"content":"        if (!calorieGoal.isValid()) {","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"weidak"},"content":"            throw new InvalidCharacteristicException(Profile.ERROR_CALORIE_GOAL);","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"weidak"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"tlyi"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"tlyi"},"content":"    public CommandResult execute() {","lastModifiedDate":"2021-10-10"},{"lineNumber":31,"author":{"gitId":"weidak"},"content":"        try {","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"weidak"},"content":"            checkIfCommandShouldExecute();","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"weidak"},"content":"            super.profile.setProfileCalorieGoal(this.calorieGoal);","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"weidak"},"content":"            return new CommandResult(String.format(MESSAGE_SUCCESS,","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"weidak"},"content":"                    super.profile.getProfileCalorieGoal().getCalorieGoal()));","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"weidak"},"content":"        } catch (InvalidCharacteristicException e) {","lastModifiedDate":"2021-10-19"},{"lineNumber":37,"author":{"gitId":"weidak"},"content":"            return new CommandResult(e.getMessage());","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"weidak"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":40,"author":{"gitId":"tlyi"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"weidak":19,"tlyi":21}},{"path":"src/main/java/seedu/duke/commands/ViewCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.commands;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"tlyi"},"content":"/**","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"tlyi"},"content":" * Represents the command that when executed, lists all the items in the FoodList and ExerciseList.","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"tlyi"},"content":" */","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"tlyi"},"content":"public class ViewCommand extends Command {","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"tlyi"},"content":"    public static final String COMMAND_WORD \u003d \"view\";","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_COMMAND_FORMAT \u003d QUOTATION + COMMAND_WORD + QUOTATION;","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"weidak"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"This is what you have recorded so far!\";","lastModifiedDate":"2021-10-14"},{"lineNumber":10,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_FOOD \u003d \"You have consumed %1$d food item(s):\"","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"tlyi"},"content":"            + LS + \"%2$s\";","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_EXERCISE \u003d \"You have done %1$d exercise(s):\"","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"tlyi"},"content":"            + LS + \"%2$s\";","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"tlyi"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"tlyi"},"content":"    public CommandResult execute() {","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"tlyi"},"content":"        String foodMessage;","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"tlyi"},"content":"        if (super.foodItems.getSize() \u003d\u003d 0) {","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"tlyi"},"content":"            foodMessage \u003d MESSAGE_EMPTY_FOOD_LIST;","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"tlyi"},"content":"        } else {","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"tlyi"},"content":"            foodMessage \u003d String.format(MESSAGE_FOOD, super.foodItems.getSize(),","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"tryyang2001"},"content":"                    super.foodItems.convertToString());","lastModifiedDate":"2021-10-16"},{"lineNumber":23,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"tlyi"},"content":"        String exerciseMessage;","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"tlyi"},"content":"        if (super.exerciseItems.getSize() \u003d\u003d 0) {","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"tlyi"},"content":"            exerciseMessage \u003d MESSAGE_EMPTY_EXERCISE_LIST;","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"tlyi"},"content":"        } else {","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"tlyi"},"content":"            exerciseMessage \u003d String.format(MESSAGE_EXERCISE, super.exerciseItems.getSize(),","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"tryyang2001"},"content":"                    super.exerciseItems.convertToString());","lastModifiedDate":"2021-10-16"},{"lineNumber":30,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"tlyi"},"content":"        return new CommandResult(MESSAGE_SUCCESS + LS + foodMessage + LS + LS + exerciseMessage);","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"tlyi"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"weidak":1,"tryyang2001":2,"tlyi":30}},{"path":"src/main/java/seedu/duke/commands/ViewExerciseBankCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.commands;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"tlyi"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"tlyi"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"tlyi"},"content":"/**","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"tlyi"},"content":" * Represents the command that when executed, lists all the items in the ExerciseBank.","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"tlyi"},"content":" */","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"tlyi"},"content":"public class ViewExerciseBankCommand extends Command {","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_COMMAND_FORMAT \u003d QUOTATION + COMMAND_WORD_VIEW","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"tlyi"},"content":"            + \" \" + COMMAND_PREFIX_EXERCISE_BANK + COMMAND_PREFIX_DELIMITER + QUOTATION;","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"You have %1$d exercise(s) in your exercise bank:\"","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"tlyi"},"content":"            + LS + \"%2$s\";","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"tlyi"},"content":"    private static Logger logger \u003d Logger.getLogger(\"ViewExerciseBankCommand\");","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"tlyi"},"content":"    @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"tlyi"},"content":"    public CommandResult execute() {","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"tlyi"},"content":"        if (super.exerciseBank.getSize() \u003d\u003d 0) {","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"tlyi"},"content":"            logger.log(Level.WARNING, \"Exercise bank is empty\");","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"tlyi"},"content":"            return new CommandResult(MESSAGE_EMPTY_EXERCISE_BANK);","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"tlyi"},"content":"        assert exerciseBank.getSize() \u003e 0 : \"Exercise bank is not empty\";","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"tlyi"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, super.exerciseBank.getSize(),","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"tlyi"},"content":"                super.exerciseBank.convertToString()));","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"tlyi"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"tlyi":27}},{"path":"src/main/java/seedu/duke/commands/ViewExerciseListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.commands;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"xingjie99"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"xingjie99"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"tlyi"},"content":"/**","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"tlyi"},"content":" * Represents the command that when executed, lists all the items in the ExerciseList.","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"tlyi"},"content":" */","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"tlyi"},"content":"public class ViewExerciseListCommand extends Command {","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_COMMAND_FORMAT \u003d QUOTATION + COMMAND_WORD_VIEW","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"tlyi"},"content":"            + \" \" + COMMAND_PREFIX_EXERCISE + COMMAND_PREFIX_DELIMITER + QUOTATION;","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"You have done %1$d exercise(s):\"","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"tlyi"},"content":"            + LS + \"%2$s\";","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"xingjie99"},"content":"    private static Logger logger \u003d Logger.getLogger(\"ViewExerciseCommand\");","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"tlyi"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"tlyi"},"content":"    public CommandResult execute() {","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"xingjie99"},"content":"        if (super.exerciseItems.getSize() \u003d\u003d 0) {","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"xingjie99"},"content":"            logger.log(Level.WARNING, \"Exercise list is empty\");","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"xingjie99"},"content":"            return new CommandResult(MESSAGE_EMPTY_EXERCISE_LIST);","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"xingjie99"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"xingjie99"},"content":"        assert exerciseItems.getSize() \u003e 0 : \"Exercise list is not empty\";","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"tlyi"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, super.exerciseItems.getSize(),","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"tryyang2001"},"content":"                super.exerciseItems.convertToString()));","lastModifiedDate":"2021-10-16"},{"lineNumber":26,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"tlyi"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"xingjie99":9,"tryyang2001":1,"tlyi":17}},{"path":"src/main/java/seedu/duke/commands/ViewFoodBankCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.commands;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"tlyi"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"tlyi"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"tlyi"},"content":"/**","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"tlyi"},"content":" * Represents the command that when executed, lists all the items in the FoodBank.","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"tlyi"},"content":" */","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"tlyi"},"content":"public class ViewFoodBankCommand extends Command {","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_COMMAND_FORMAT \u003d QUOTATION + COMMAND_WORD_VIEW","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"tlyi"},"content":"            + \" \" + COMMAND_PREFIX_FOOD_BANK + COMMAND_PREFIX_DELIMITER + QUOTATION;","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"You have %1$d food(s) in your food bank:\"","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"tlyi"},"content":"            + LS + \"%2$s\";","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"tlyi"},"content":"    private static Logger logger \u003d Logger.getLogger(\"ViewFoodBankCommand\");","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"tlyi"},"content":"    @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"tlyi"},"content":"    public CommandResult execute() {","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"tlyi"},"content":"        if (super.foodBank.getSize() \u003d\u003d 0) {","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"tlyi"},"content":"            logger.log(Level.WARNING, \"Food bank is empty\");","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"tlyi"},"content":"            return new CommandResult(MESSAGE_EMPTY_FOOD_BANK);","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"tlyi"},"content":"        assert foodBank.getSize() \u003e 0 : \"Food bank is not empty\";","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"tlyi"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, super.foodBank.getSize(),","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"tlyi"},"content":"                super.foodBank.convertToString()));","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"tlyi"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"tlyi":27}},{"path":"src/main/java/seedu/duke/commands/ViewFoodListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.commands;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"tlyi"},"content":"/**","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"tlyi"},"content":" * Represents the command that when executed, lists all the items in the FoodList.","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"tlyi"},"content":" */","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"tlyi"},"content":"public class ViewFoodListCommand extends Command {","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_COMMAND_FORMAT \u003d QUOTATION + COMMAND_WORD_VIEW","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"tlyi"},"content":"            + \" \" + COMMAND_PREFIX_FOOD + COMMAND_PREFIX_DELIMITER + QUOTATION;","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"You have consumed %1$d food item(s):\"","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"tlyi"},"content":"            + LS + \"%2$s\";","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"tlyi"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"tlyi"},"content":"    public CommandResult execute() {","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"tlyi"},"content":"        if (super.foodItems.getSize() \u003d\u003d 0) {","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"tlyi"},"content":"            return new CommandResult(MESSAGE_EMPTY_FOOD_LIST);","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"tlyi"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, super.foodItems.getSize(),","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"tryyang2001"},"content":"                super.foodItems.convertToString()));","lastModifiedDate":"2021-10-16"},{"lineNumber":19,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"tlyi"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"tryyang2001":1,"tlyi":19}},{"path":"src/main/java/seedu/duke/commands/ViewFutureExerciseListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xingjie99"},"content":"package seedu.duke.commands;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"xingjie99"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"xingjie99"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"xingjie99"},"content":"/**","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"xingjie99"},"content":" * Represents the command that when executed, lists all the items in the FutureExerciseList.","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"xingjie99"},"content":" */","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"tlyi"},"content":"public class ViewFutureExerciseListCommand extends Command {","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_COMMAND_FORMAT \u003d QUOTATION + COMMAND_WORD_VIEW","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"tlyi"},"content":"            + \" \" + COMMAND_PREFIX_UPCOMING_EXERCISE + COMMAND_PREFIX_DELIMITER + QUOTATION;","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"xingjie99"},"content":"    public static final String MESSAGE_FUTURE_EXERCISE \u003d \"You have %d upcoming exercise(s):\"","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"tlyi"},"content":"            + LS + \"%2$s\";","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"tlyi"},"content":"    private static Logger logger \u003d Logger.getLogger(\"ViewFutureExerciseCommand\");","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":17,"author":{"gitId":"xingjie99"},"content":"    @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"xingjie99"},"content":"    public CommandResult execute() {","lastModifiedDate":"2021-10-18"},{"lineNumber":19,"author":{"gitId":"xingjie99"},"content":"        if (super.futureExerciseItems.getSize() \u003d\u003d 0) {","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"xingjie99"},"content":"            logger.log(Level.WARNING, \"Future exercise list is empty\");","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"xingjie99"},"content":"            return new CommandResult(MESSAGE_EMPTY_EXERCISE_LIST);","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"xingjie99"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":23,"author":{"gitId":"xingjie99"},"content":"        assert futureExerciseItems.getSize() \u003e 0 : \"Future exercise list is not empty\";","lastModifiedDate":"2021-10-18"},{"lineNumber":24,"author":{"gitId":"xingjie99"},"content":"        return new CommandResult(String.format(MESSAGE_FUTURE_EXERCISE, super.futureExerciseItems.getSize(),","lastModifiedDate":"2021-10-18"},{"lineNumber":25,"author":{"gitId":"xingjie99"},"content":"                super.futureExerciseItems.convertToString()));","lastModifiedDate":"2021-10-18"},{"lineNumber":26,"author":{"gitId":"xingjie99"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":27,"author":{"gitId":"xingjie99"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"xingjie99":22,"tlyi":5}},{"path":"src/main/java/seedu/duke/item/Item.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tryyang2001"},"content":"package seedu.duke.item;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":3,"author":{"gitId":"tryyang2001"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"tryyang2001"},"content":"public abstract class Item {","lastModifiedDate":"2021-10-16"},{"lineNumber":6,"author":{"gitId":"tryyang2001"},"content":"    public static final String FILE_TEXT_DELIMITER \u003d \"|\";","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"tryyang2001"},"content":"    public static final DateTimeFormatter DATE_FORMATTER \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy\");","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"weidak"},"content":"    public static final DateTimeFormatter DATE_TIME_FORMATTER \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\");","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"tryyang2001"},"content":"    protected String name;","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"tryyang2001"},"content":"    protected int calories;","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":12,"author":{"gitId":"tryyang2001"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"tryyang2001"},"content":"     * Constructor for item object.","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"tryyang2001"},"content":"     *","lastModifiedDate":"2021-10-16"},{"lineNumber":15,"author":{"gitId":"tryyang2001"},"content":"     * @param name     The name or description of the item","lastModifiedDate":"2021-10-16"},{"lineNumber":16,"author":{"gitId":"tryyang2001"},"content":"     * @param calories The calorie intake/burnt from the item","lastModifiedDate":"2021-10-16"},{"lineNumber":17,"author":{"gitId":"tryyang2001"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":18,"author":{"gitId":"tryyang2001"},"content":"    public Item(String name, int calories) {","lastModifiedDate":"2021-10-16"},{"lineNumber":19,"author":{"gitId":"tryyang2001"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-10-16"},{"lineNumber":20,"author":{"gitId":"tryyang2001"},"content":"        this.calories \u003d calories;","lastModifiedDate":"2021-10-16"},{"lineNumber":21,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":22,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":23,"author":{"gitId":"tryyang2001"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":24,"author":{"gitId":"tryyang2001"},"content":"     * Gets the name or description of the item.","lastModifiedDate":"2021-10-16"},{"lineNumber":25,"author":{"gitId":"tryyang2001"},"content":"     *","lastModifiedDate":"2021-10-16"},{"lineNumber":26,"author":{"gitId":"tryyang2001"},"content":"     * @return The name or description of the item","lastModifiedDate":"2021-10-16"},{"lineNumber":27,"author":{"gitId":"tryyang2001"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":28,"author":{"gitId":"tryyang2001"},"content":"    public String getName() {","lastModifiedDate":"2021-10-16"},{"lineNumber":29,"author":{"gitId":"tryyang2001"},"content":"        return this.name;","lastModifiedDate":"2021-10-16"},{"lineNumber":30,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":31,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":32,"author":{"gitId":"tryyang2001"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":33,"author":{"gitId":"tryyang2001"},"content":"     * Gets the calorie intake/burnt for the item.","lastModifiedDate":"2021-10-16"},{"lineNumber":34,"author":{"gitId":"tryyang2001"},"content":"     *","lastModifiedDate":"2021-10-16"},{"lineNumber":35,"author":{"gitId":"tryyang2001"},"content":"     * @return The calorie intake/burnt from the item","lastModifiedDate":"2021-10-16"},{"lineNumber":36,"author":{"gitId":"tryyang2001"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":37,"author":{"gitId":"tryyang2001"},"content":"    public int getCalories() {","lastModifiedDate":"2021-10-16"},{"lineNumber":38,"author":{"gitId":"tryyang2001"},"content":"        return this.calories;","lastModifiedDate":"2021-10-16"},{"lineNumber":39,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":40,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":41,"author":{"gitId":"tryyang2001"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":42,"author":{"gitId":"tryyang2001"},"content":"     * Updates the name or description of the item.","lastModifiedDate":"2021-10-16"},{"lineNumber":43,"author":{"gitId":"tryyang2001"},"content":"     *","lastModifiedDate":"2021-10-16"},{"lineNumber":44,"author":{"gitId":"tryyang2001"},"content":"     * @param name The new name or description of the item","lastModifiedDate":"2021-10-16"},{"lineNumber":45,"author":{"gitId":"tryyang2001"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":46,"author":{"gitId":"tryyang2001"},"content":"    public void setName(String name) {","lastModifiedDate":"2021-10-16"},{"lineNumber":47,"author":{"gitId":"tryyang2001"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-10-16"},{"lineNumber":48,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":49,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":50,"author":{"gitId":"tryyang2001"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":51,"author":{"gitId":"tryyang2001"},"content":"     * Updates the calorie intake/burnt from the item.","lastModifiedDate":"2021-10-16"},{"lineNumber":52,"author":{"gitId":"tryyang2001"},"content":"     *","lastModifiedDate":"2021-10-16"},{"lineNumber":53,"author":{"gitId":"tryyang2001"},"content":"     * @param calories The new calorie intake/burnt from the item","lastModifiedDate":"2021-10-16"},{"lineNumber":54,"author":{"gitId":"tryyang2001"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":55,"author":{"gitId":"tryyang2001"},"content":"    public void setCalories(int calories) {","lastModifiedDate":"2021-10-16"},{"lineNumber":56,"author":{"gitId":"tryyang2001"},"content":"        this.calories \u003d calories;","lastModifiedDate":"2021-10-16"},{"lineNumber":57,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":58,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":59,"author":{"gitId":"tryyang2001"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":60,"author":{"gitId":"tryyang2001"},"content":"     * Converts the item in correct string format.","lastModifiedDate":"2021-10-16"},{"lineNumber":61,"author":{"gitId":"tryyang2001"},"content":"     *","lastModifiedDate":"2021-10-16"},{"lineNumber":62,"author":{"gitId":"tryyang2001"},"content":"     * @return The item name and calorie displayed in string","lastModifiedDate":"2021-10-16"},{"lineNumber":63,"author":{"gitId":"tryyang2001"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":64,"author":{"gitId":"tryyang2001"},"content":"    @Override","lastModifiedDate":"2021-10-16"},{"lineNumber":65,"author":{"gitId":"tryyang2001"},"content":"    public String toString() {","lastModifiedDate":"2021-10-16"},{"lineNumber":66,"author":{"gitId":"tryyang2001"},"content":"        return this.getName() + \" (\" + this.getCalories() + \" cal)\";","lastModifiedDate":"2021-10-16"},{"lineNumber":67,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":68,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":69,"author":{"gitId":"tryyang2001"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":70,"author":{"gitId":"tryyang2001"},"content":"     * Converts the item to external file string format.","lastModifiedDate":"2021-10-16"},{"lineNumber":71,"author":{"gitId":"tryyang2001"},"content":"     *","lastModifiedDate":"2021-10-16"},{"lineNumber":72,"author":{"gitId":"tryyang2001"},"content":"     * @return Name and calorie of the item in string","lastModifiedDate":"2021-10-16"},{"lineNumber":73,"author":{"gitId":"tryyang2001"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":74,"author":{"gitId":"tryyang2001"},"content":"    public String toFileTextString() {","lastModifiedDate":"2021-10-16"},{"lineNumber":75,"author":{"gitId":"tryyang2001"},"content":"        return FILE_TEXT_DELIMITER + this.getName() + FILE_TEXT_DELIMITER + this.getCalories();","lastModifiedDate":"2021-10-16"},{"lineNumber":76,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":77,"author":{"gitId":"tryyang2001"},"content":"}","lastModifiedDate":"2021-10-16"}],"authorContributionMap":{"weidak":1,"tryyang2001":76}},{"path":"src/main/java/seedu/duke/item/ItemBank.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.item;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"tlyi"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"tlyi"},"content":"/**","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"tlyi"},"content":" * Represents a list of Items, meant to store a repository of user-defined Exercise items or Food items.","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"tlyi"},"content":" * Contains all the methods for actions that can be done on the list.","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"tlyi"},"content":" */","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"tlyi"},"content":"public class ItemBank {","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"tlyi"},"content":"    protected static final String LS \u003d System.lineSeparator();","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"tlyi"},"content":"    protected static final String TAB \u003d \"\\t\";","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"tlyi"},"content":"    protected final ArrayList\u003cItem\u003e internalItems \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"tlyi"},"content":"    public void addItem(Item item) {","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"tlyi"},"content":"        internalItems.add(item);","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"tlyi"},"content":"    public Item deleteItem(int index) {","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"tlyi"},"content":"        return internalItems.remove(index);","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"tlyi"},"content":"    public void clearList() {","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"tlyi"},"content":"        internalItems.clear();","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"tlyi"},"content":"    public int getSize() {","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"tlyi"},"content":"        return internalItems.size();","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"tlyi"},"content":"    public String convertToString() {","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"tlyi"},"content":"        StringBuilder listToString \u003d new StringBuilder();","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"tlyi"},"content":"        for (int i \u003d 0; i \u003c internalItems.size(); i++) {","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"tlyi"},"content":"            listToString.append(TAB).append(i + 1).append(\". \").append(internalItems.get(i)).append(LS);","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"tlyi"},"content":"        return listToString.toString().stripTrailing();","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":37,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"tlyi"},"content":"    public int getCaloriesOfItemWithMatchingName(String inputName) throws ItemNotFoundInBankException {","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"tlyi"},"content":"        Item matchingItem \u003d internalItems","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"tlyi"},"content":"                .stream()","lastModifiedDate":"2021-10-19"},{"lineNumber":41,"author":{"gitId":"tlyi"},"content":"                .filter(item -\u003e item.name.equalsIgnoreCase(inputName))","lastModifiedDate":"2021-10-19"},{"lineNumber":42,"author":{"gitId":"tlyi"},"content":"                .findAny()","lastModifiedDate":"2021-10-19"},{"lineNumber":43,"author":{"gitId":"tlyi"},"content":"                .orElse(null);","lastModifiedDate":"2021-10-19"},{"lineNumber":44,"author":{"gitId":"tlyi"},"content":"        if (matchingItem \u003d\u003d null) {","lastModifiedDate":"2021-10-19"},{"lineNumber":45,"author":{"gitId":"tlyi"},"content":"            throw new ItemNotFoundInBankException();","lastModifiedDate":"2021-10-19"},{"lineNumber":46,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":47,"author":{"gitId":"tlyi"},"content":"        return matchingItem.getCalories();","lastModifiedDate":"2021-10-19"},{"lineNumber":48,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":49,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":50,"author":{"gitId":"tlyi"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"tlyi":50}},{"path":"src/main/java/seedu/duke/item/ItemList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tryyang2001"},"content":"package seedu.duke.item;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":3,"author":{"gitId":"tryyang2001"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"tryyang2001"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":6,"author":{"gitId":"tryyang2001"},"content":"/**","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"tryyang2001"},"content":" * ItemList is an abstract class that contains all the common methods for food list and exercise list.","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"tryyang2001"},"content":" */","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"tryyang2001"},"content":"public abstract class ItemList {","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"tryyang2001"},"content":"    public static final String MESSAGE_ITEM \u003d \"%d. %s\";","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"tryyang2001"},"content":"    protected static final String DATE_FORMAT \u003d \"dd MMM yyyy\";","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"tryyang2001"},"content":"    protected static final String LS \u003d System.lineSeparator();","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"tryyang2001"},"content":"    protected static final String TAB \u003d \"\\t\";","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":15,"author":{"gitId":"tryyang2001"},"content":"    public abstract String convertToString();","lastModifiedDate":"2021-10-16"},{"lineNumber":16,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":17,"author":{"gitId":"tryyang2001"},"content":"    public abstract int getSize();","lastModifiedDate":"2021-10-16"},{"lineNumber":18,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":19,"author":{"gitId":"tryyang2001"},"content":"    public abstract int getTotalCalories();","lastModifiedDate":"2021-10-16"},{"lineNumber":20,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":21,"author":{"gitId":"tryyang2001"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":22,"author":{"gitId":"tryyang2001"},"content":"     * Gets the day of the week of the given date.","lastModifiedDate":"2021-10-16"},{"lineNumber":23,"author":{"gitId":"tryyang2001"},"content":"     *","lastModifiedDate":"2021-10-16"},{"lineNumber":24,"author":{"gitId":"tryyang2001"},"content":"     * @param currentDate The date to query the day of the week","lastModifiedDate":"2021-10-16"},{"lineNumber":25,"author":{"gitId":"tryyang2001"},"content":"     * @return The day of the week in string","lastModifiedDate":"2021-10-16"},{"lineNumber":26,"author":{"gitId":"tryyang2001"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":27,"author":{"gitId":"tryyang2001"},"content":"    protected String getDay(LocalDate currentDate) {","lastModifiedDate":"2021-10-16"},{"lineNumber":28,"author":{"gitId":"tryyang2001"},"content":"        String day \u003d currentDate.getDayOfWeek().toString();","lastModifiedDate":"2021-10-16"},{"lineNumber":29,"author":{"gitId":"tryyang2001"},"content":"        day \u003d day.charAt(0) + day.substring(1).toLowerCase();","lastModifiedDate":"2021-10-16"},{"lineNumber":30,"author":{"gitId":"tryyang2001"},"content":"        return day;","lastModifiedDate":"2021-10-16"},{"lineNumber":31,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":32,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":33,"author":{"gitId":"tryyang2001"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":34,"author":{"gitId":"tryyang2001"},"content":"     * Common method used in food list and exercise list to generate the item count string.","lastModifiedDate":"2021-10-18"},{"lineNumber":35,"author":{"gitId":"tryyang2001"},"content":"     *","lastModifiedDate":"2021-10-18"},{"lineNumber":36,"author":{"gitId":"tryyang2001"},"content":"     * @param itemListInString The StringBuilder that will contain the correct output string format","lastModifiedDate":"2021-10-18"},{"lineNumber":37,"author":{"gitId":"tryyang2001"},"content":"     * @param size             The size of the item list","lastModifiedDate":"2021-10-18"},{"lineNumber":38,"author":{"gitId":"tryyang2001"},"content":"     * @param date             The date to query the item count","lastModifiedDate":"2021-10-18"},{"lineNumber":39,"author":{"gitId":"tryyang2001"},"content":"     * @param message          The string format to display","lastModifiedDate":"2021-10-18"},{"lineNumber":40,"author":{"gitId":"tryyang2001"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":41,"author":{"gitId":"tryyang2001"},"content":"    protected void convertItemCountToString(StringBuilder itemListInString, int size, LocalDate date, String message) {","lastModifiedDate":"2021-10-18"},{"lineNumber":42,"author":{"gitId":"tryyang2001"},"content":"        itemListInString","lastModifiedDate":"2021-10-18"},{"lineNumber":43,"author":{"gitId":"tryyang2001"},"content":"                .append(String.format(message, size, getDay(date),","lastModifiedDate":"2021-10-18"},{"lineNumber":44,"author":{"gitId":"tryyang2001"},"content":"                        date.format(DateTimeFormatter.ofPattern(DATE_FORMAT))))","lastModifiedDate":"2021-10-18"},{"lineNumber":45,"author":{"gitId":"tryyang2001"},"content":"                .append(ItemList.LS);","lastModifiedDate":"2021-10-18"},{"lineNumber":46,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":47,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":48,"author":{"gitId":"tryyang2001"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":49,"author":{"gitId":"tryyang2001"},"content":"     * Common method used in food list and exercise list to generate the item string.","lastModifiedDate":"2021-10-18"},{"lineNumber":50,"author":{"gitId":"tryyang2001"},"content":"     *","lastModifiedDate":"2021-10-18"},{"lineNumber":51,"author":{"gitId":"tryyang2001"},"content":"     * @param itemListInString The StringBuilder that will contain the correct output string format","lastModifiedDate":"2021-10-18"},{"lineNumber":52,"author":{"gitId":"tryyang2001"},"content":"     * @param index            The index of the item in the list","lastModifiedDate":"2021-10-18"},{"lineNumber":53,"author":{"gitId":"tryyang2001"},"content":"     * @param item             The item to convert to string","lastModifiedDate":"2021-10-18"},{"lineNumber":54,"author":{"gitId":"tryyang2001"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":55,"author":{"gitId":"tryyang2001"},"content":"    protected void convertItemToString(StringBuilder itemListInString, int index, Item item) {","lastModifiedDate":"2021-10-18"},{"lineNumber":56,"author":{"gitId":"tryyang2001"},"content":"        itemListInString","lastModifiedDate":"2021-10-18"},{"lineNumber":57,"author":{"gitId":"tryyang2001"},"content":"                .append(ItemList.TAB)","lastModifiedDate":"2021-10-18"},{"lineNumber":58,"author":{"gitId":"tryyang2001"},"content":"                .append(String.format(MESSAGE_ITEM, index, item))","lastModifiedDate":"2021-10-18"},{"lineNumber":59,"author":{"gitId":"tryyang2001"},"content":"                .append(ItemList.LS);","lastModifiedDate":"2021-10-18"},{"lineNumber":60,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":61,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":62,"author":{"gitId":"tryyang2001"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":63,"author":{"gitId":"tryyang2001"},"content":"     * Common method used in food list and exercise list to generate the total calorie string.","lastModifiedDate":"2021-10-18"},{"lineNumber":64,"author":{"gitId":"tryyang2001"},"content":"     *","lastModifiedDate":"2021-10-18"},{"lineNumber":65,"author":{"gitId":"tryyang2001"},"content":"     * @param itemListInString The StringBuilder that will contain the correct output string format","lastModifiedDate":"2021-10-18"},{"lineNumber":66,"author":{"gitId":"tryyang2001"},"content":"     * @param totalCalories    The sum of calorie for each item stored inside the list","lastModifiedDate":"2021-10-18"},{"lineNumber":67,"author":{"gitId":"tryyang2001"},"content":"     * @param message          The string format to display","lastModifiedDate":"2021-10-18"},{"lineNumber":68,"author":{"gitId":"tryyang2001"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":69,"author":{"gitId":"tryyang2001"},"content":"    protected void convertTotalCaloriesToString(StringBuilder itemListInString, int totalCalories, String message) {","lastModifiedDate":"2021-10-18"},{"lineNumber":70,"author":{"gitId":"tryyang2001"},"content":"        itemListInString","lastModifiedDate":"2021-10-18"},{"lineNumber":71,"author":{"gitId":"tryyang2001"},"content":"                .append(String.format(message,","lastModifiedDate":"2021-10-18"},{"lineNumber":72,"author":{"gitId":"tryyang2001"},"content":"                        totalCalories))","lastModifiedDate":"2021-10-18"},{"lineNumber":73,"author":{"gitId":"tryyang2001"},"content":"                .append(ItemList.LS);","lastModifiedDate":"2021-10-18"},{"lineNumber":74,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":75,"author":{"gitId":"tryyang2001"},"content":"}","lastModifiedDate":"2021-10-16"}],"authorContributionMap":{"tryyang2001":75}},{"path":"src/main/java/seedu/duke/item/ItemNotFoundInBankException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.item;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"tlyi"},"content":"/**","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"tlyi"},"content":" * Represents an error where the item is not found in the item bank.","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"tlyi"},"content":" */","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"tlyi"},"content":"public class ItemNotFoundInBankException extends Exception{","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"tlyi"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"tlyi":7}},{"path":"src/main/java/seedu/duke/item/exercise/Exercise.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tryyang2001"},"content":"package seedu.duke.item.exercise;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"tryyang2001"},"content":"import seedu.duke.item.Item;","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":5,"author":{"gitId":"tryyang2001"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-16"},{"lineNumber":6,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"tryyang2001"},"content":"public class Exercise extends Item {","lastModifiedDate":"2021-10-16"},{"lineNumber":8,"author":{"gitId":"xingjie99"},"content":"    public static final String EXERCISE_TYPE \u003d \"E\";","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"tryyang2001"},"content":"    protected LocalDate date;","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"xingjie99"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"xingjie99"},"content":"     * Constructor for exercise object.","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"xingjie99"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"tryyang2001"},"content":"     * @param name     The name or description of the exercise.","lastModifiedDate":"2021-10-16"},{"lineNumber":15,"author":{"gitId":"tryyang2001"},"content":"     * @param calories The calorie burnt from the exercise.","lastModifiedDate":"2021-10-16"},{"lineNumber":16,"author":{"gitId":"xingjie99"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"xingjie99"},"content":"    public Exercise(String name, int calories) {","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"tryyang2001"},"content":"        super(name, calories);","lastModifiedDate":"2021-10-16"},{"lineNumber":19,"author":{"gitId":"tryyang2001"},"content":"        this.date \u003d LocalDate.now();","lastModifiedDate":"2021-10-16"},{"lineNumber":20,"author":{"gitId":"xingjie99"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"tryyang2001"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":23,"author":{"gitId":"tryyang2001"},"content":"     * Constructor for the exercise object.","lastModifiedDate":"2021-10-16"},{"lineNumber":24,"author":{"gitId":"tryyang2001"},"content":"     *","lastModifiedDate":"2021-10-16"},{"lineNumber":25,"author":{"gitId":"tryyang2001"},"content":"     * @param name     The name or description of the exercise","lastModifiedDate":"2021-10-16"},{"lineNumber":26,"author":{"gitId":"tryyang2001"},"content":"     * @param calories The calorie burnt from the exercise","lastModifiedDate":"2021-10-16"},{"lineNumber":27,"author":{"gitId":"tryyang2001"},"content":"     * @param date     The date when the exercise is taken","lastModifiedDate":"2021-10-16"},{"lineNumber":28,"author":{"gitId":"tryyang2001"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":29,"author":{"gitId":"tryyang2001"},"content":"    public Exercise(String name, int calories, LocalDate date) {","lastModifiedDate":"2021-10-16"},{"lineNumber":30,"author":{"gitId":"tryyang2001"},"content":"        super(name, calories);","lastModifiedDate":"2021-10-16"},{"lineNumber":31,"author":{"gitId":"tryyang2001"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-10-16"},{"lineNumber":32,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":33,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":34,"author":{"gitId":"tryyang2001"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":35,"author":{"gitId":"tryyang2001"},"content":"     * Gets the date of the exercise taken.","lastModifiedDate":"2021-10-16"},{"lineNumber":36,"author":{"gitId":"tryyang2001"},"content":"     *","lastModifiedDate":"2021-10-16"},{"lineNumber":37,"author":{"gitId":"tryyang2001"},"content":"     * @return The date of the exercise done in LocalDate","lastModifiedDate":"2021-10-16"},{"lineNumber":38,"author":{"gitId":"tryyang2001"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":39,"author":{"gitId":"tryyang2001"},"content":"    public LocalDate getDate() {","lastModifiedDate":"2021-10-16"},{"lineNumber":40,"author":{"gitId":"tryyang2001"},"content":"        return date;","lastModifiedDate":"2021-10-16"},{"lineNumber":41,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":42,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":43,"author":{"gitId":"tryyang2001"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":44,"author":{"gitId":"tryyang2001"},"content":"     * Updates the date of the exercise taken.","lastModifiedDate":"2021-10-16"},{"lineNumber":45,"author":{"gitId":"tryyang2001"},"content":"     *","lastModifiedDate":"2021-10-16"},{"lineNumber":46,"author":{"gitId":"tryyang2001"},"content":"     * @param date The new date of the exercise done in LocalDate","lastModifiedDate":"2021-10-16"},{"lineNumber":47,"author":{"gitId":"tryyang2001"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":48,"author":{"gitId":"tryyang2001"},"content":"    public void setDate(LocalDate date) {","lastModifiedDate":"2021-10-16"},{"lineNumber":49,"author":{"gitId":"tryyang2001"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-10-16"},{"lineNumber":50,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":51,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":52,"author":{"gitId":"xingjie99"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":53,"author":{"gitId":"tryyang2001"},"content":"     * Converts the exercise to external file string format.","lastModifiedDate":"2021-10-16"},{"lineNumber":54,"author":{"gitId":"xingjie99"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":55,"author":{"gitId":"tryyang2001"},"content":"     * @return Name, calorie and date of the exercise in string","lastModifiedDate":"2021-10-18"},{"lineNumber":56,"author":{"gitId":"xingjie99"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":57,"author":{"gitId":"xingjie99"},"content":"    public String toFileTextString() {","lastModifiedDate":"2021-10-11"},{"lineNumber":58,"author":{"gitId":"tryyang2001"},"content":"        return EXERCISE_TYPE","lastModifiedDate":"2021-10-18"},{"lineNumber":59,"author":{"gitId":"tryyang2001"},"content":"                + super.toFileTextString()","lastModifiedDate":"2021-10-18"},{"lineNumber":60,"author":{"gitId":"tryyang2001"},"content":"                + FILE_TEXT_DELIMITER","lastModifiedDate":"2021-10-18"},{"lineNumber":61,"author":{"gitId":"tryyang2001"},"content":"                + this.getDate().format(DATE_FORMATTER);","lastModifiedDate":"2021-10-18"},{"lineNumber":62,"author":{"gitId":"xingjie99"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":63,"author":{"gitId":"xingjie99"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"tryyang2001":47,"xingjie99":16}},{"path":"src/main/java/seedu/duke/item/exercise/ExerciseList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tryyang2001"},"content":"package seedu.duke.item.exercise;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"tryyang2001"},"content":"import seedu.duke.item.Item;","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"tryyang2001"},"content":"import seedu.duke.item.ItemList;","lastModifiedDate":"2021-10-16"},{"lineNumber":5,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":6,"author":{"gitId":"tryyang2001"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"xingjie99"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"tryyang2001"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-10-16"},{"lineNumber":9,"author":{"gitId":"tryyang2001"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"tryyang2001"},"content":"public class ExerciseList extends ItemList {","lastModifiedDate":"2021-10-16"},{"lineNumber":12,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_EXERCISE_DONE \u003d \"You have done %d exercise(s) on %s (%s):\";","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"tryyang2001"},"content":"    public static final String MESSAGE_TOTAL_CALORIE_BURNT \u003d \"Total calories burnt: %d cal\";","lastModifiedDate":"2021-10-17"},{"lineNumber":14,"author":{"gitId":"tryyang2001"},"content":"    public static final String MESSAGE_EXERCISE \u003d \"%d. %s\";","lastModifiedDate":"2021-10-17"},{"lineNumber":15,"author":{"gitId":"tryyang2001"},"content":"    public static final String DATE_FORMAT \u003d \"dd MMM yyyy\";","lastModifiedDate":"2021-10-17"},{"lineNumber":16,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"tryyang2001"},"content":"    protected ArrayList\u003cExercise\u003e exerciseList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-16"},{"lineNumber":18,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"xingjie99"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"xingjie99"},"content":"     * Returns the exercise list.","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"xingjie99"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"xingjie99"},"content":"     * @return Exercise list.","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"xingjie99"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"xingjie99"},"content":"    public ArrayList\u003cExercise\u003e getExerciseList() {","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"xingjie99"},"content":"        return exerciseList;","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"xingjie99"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"xingjie99"},"content":"     * Returns exercise item at a specific index in the exercise list.","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"xingjie99"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":31,"author":{"gitId":"xingjie99"},"content":"     * @param index Index of the exercise item.","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"xingjie99"},"content":"     * @return exercise item in the exercise list.","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"xingjie99"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":34,"author":{"gitId":"xingjie99"},"content":"    public Exercise getExercise(int index) {","lastModifiedDate":"2021-10-10"},{"lineNumber":35,"author":{"gitId":"xingjie99"},"content":"        return this.exerciseList.get(index);","lastModifiedDate":"2021-10-10"},{"lineNumber":36,"author":{"gitId":"xingjie99"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":37,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":38,"author":{"gitId":"xingjie99"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":39,"author":{"gitId":"xingjie99"},"content":"     * Returns the number of exercises in the exercise list.","lastModifiedDate":"2021-10-10"},{"lineNumber":40,"author":{"gitId":"xingjie99"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":41,"author":{"gitId":"xingjie99"},"content":"     * @return Number of exercises in the exercise list.","lastModifiedDate":"2021-10-10"},{"lineNumber":42,"author":{"gitId":"xingjie99"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":43,"author":{"gitId":"tryyang2001"},"content":"    @Override","lastModifiedDate":"2021-10-16"},{"lineNumber":44,"author":{"gitId":"xingjie99"},"content":"    public int getSize() {","lastModifiedDate":"2021-10-10"},{"lineNumber":45,"author":{"gitId":"xingjie99"},"content":"        return exerciseList.size();","lastModifiedDate":"2021-10-10"},{"lineNumber":46,"author":{"gitId":"xingjie99"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":47,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":48,"author":{"gitId":"xingjie99"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":49,"author":{"gitId":"xingjie99"},"content":"     * Adds an exercise item into the exercise list.","lastModifiedDate":"2021-10-10"},{"lineNumber":50,"author":{"gitId":"xingjie99"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":51,"author":{"gitId":"xingjie99"},"content":"     * @param exercise Exercise class object to be added.","lastModifiedDate":"2021-10-10"},{"lineNumber":52,"author":{"gitId":"xingjie99"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":53,"author":{"gitId":"xingjie99"},"content":"    public void addExercise(Exercise exercise) {","lastModifiedDate":"2021-10-10"},{"lineNumber":54,"author":{"gitId":"xingjie99"},"content":"        this.exerciseList.add(exercise);","lastModifiedDate":"2021-10-10"},{"lineNumber":55,"author":{"gitId":"tlyi"},"content":"        this.sortExerciseList();","lastModifiedDate":"2021-10-19"},{"lineNumber":56,"author":{"gitId":"xingjie99"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":57,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":58,"author":{"gitId":"xingjie99"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":59,"author":{"gitId":"xingjie99"},"content":"     * Deletes an exercise item from the exercise list.","lastModifiedDate":"2021-10-10"},{"lineNumber":60,"author":{"gitId":"xingjie99"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":61,"author":{"gitId":"xingjie99"},"content":"     * @param index Index of the exercise to be deleted.","lastModifiedDate":"2021-10-10"},{"lineNumber":62,"author":{"gitId":"xingjie99"},"content":"     * @return Exercise object removed.","lastModifiedDate":"2021-10-19"},{"lineNumber":63,"author":{"gitId":"xingjie99"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":64,"author":{"gitId":"tlyi"},"content":"    public Exercise deleteExercise(int index) {","lastModifiedDate":"2021-10-11"},{"lineNumber":65,"author":{"gitId":"tlyi"},"content":"        return this.exerciseList.remove(index);","lastModifiedDate":"2021-10-19"},{"lineNumber":66,"author":{"gitId":"xingjie99"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":67,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":68,"author":{"gitId":"xingjie99"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":69,"author":{"gitId":"tryyang2001"},"content":"     * Converts the entire exercise list to string format for printing purpose.","lastModifiedDate":"2021-10-16"},{"lineNumber":70,"author":{"gitId":"xingjie99"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":71,"author":{"gitId":"tryyang2001"},"content":"     * @return The exercise list in a single string","lastModifiedDate":"2021-10-16"},{"lineNumber":72,"author":{"gitId":"xingjie99"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":73,"author":{"gitId":"tryyang2001"},"content":"    @Override","lastModifiedDate":"2021-10-16"},{"lineNumber":74,"author":{"gitId":"xingjie99"},"content":"    public String convertToString() {","lastModifiedDate":"2021-10-11"},{"lineNumber":75,"author":{"gitId":"tryyang2001"},"content":"        StringBuilder exerciseListInString \u003d extractExerciseListByEachDate();","lastModifiedDate":"2021-10-16"},{"lineNumber":76,"author":{"gitId":"tryyang2001"},"content":"        return exerciseListInString.toString().stripTrailing();","lastModifiedDate":"2021-10-16"},{"lineNumber":77,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":78,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":79,"author":{"gitId":"tryyang2001"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":80,"author":{"gitId":"tryyang2001"},"content":"     * Converts the food list of a specific date to string format for printing purpose.","lastModifiedDate":"2021-10-16"},{"lineNumber":81,"author":{"gitId":"tryyang2001"},"content":"     *","lastModifiedDate":"2021-10-16"},{"lineNumber":82,"author":{"gitId":"tryyang2001"},"content":"     * @param date The date for the food list","lastModifiedDate":"2021-10-16"},{"lineNumber":83,"author":{"gitId":"tryyang2001"},"content":"     * @return The food list of the specific date in a single string","lastModifiedDate":"2021-10-16"},{"lineNumber":84,"author":{"gitId":"tryyang2001"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":85,"author":{"gitId":"tryyang2001"},"content":"    public String convertToStringBySpecificDate(LocalDate date) {","lastModifiedDate":"2021-10-17"},{"lineNumber":86,"author":{"gitId":"tryyang2001"},"content":"        StringBuilder exerciseListInString \u003d extractExerciseListBySpecificDate(date);","lastModifiedDate":"2021-10-16"},{"lineNumber":87,"author":{"gitId":"tryyang2001"},"content":"        return exerciseListInString.toString().stripTrailing();","lastModifiedDate":"2021-10-16"},{"lineNumber":88,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":89,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":90,"author":{"gitId":"xingjie99"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":91,"author":{"gitId":"xingjie99"},"content":"     * Computes the sum of calorie of all exercises in exercise list.","lastModifiedDate":"2021-10-11"},{"lineNumber":92,"author":{"gitId":"xingjie99"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":93,"author":{"gitId":"xingjie99"},"content":"     * @return Integer value of the sum of calorie of all exercises in the exercise list.","lastModifiedDate":"2021-10-19"},{"lineNumber":94,"author":{"gitId":"xingjie99"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":95,"author":{"gitId":"tryyang2001"},"content":"    @Override","lastModifiedDate":"2021-10-16"},{"lineNumber":96,"author":{"gitId":"tlyi"},"content":"    public int getTotalCalories() {","lastModifiedDate":"2021-10-13"},{"lineNumber":97,"author":{"gitId":"xingjie99"},"content":"        int sumOfExerciseCalorie \u003d 0;","lastModifiedDate":"2021-10-11"},{"lineNumber":98,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":99,"author":{"gitId":"xingjie99"},"content":"        for (Exercise exercise : exerciseList) {","lastModifiedDate":"2021-10-11"},{"lineNumber":100,"author":{"gitId":"xingjie99"},"content":"            sumOfExerciseCalorie +\u003d exercise.getCalories();","lastModifiedDate":"2021-10-11"},{"lineNumber":101,"author":{"gitId":"xingjie99"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":102,"author":{"gitId":"xingjie99"},"content":"        return sumOfExerciseCalorie;","lastModifiedDate":"2021-10-11"},{"lineNumber":103,"author":{"gitId":"xingjie99"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":104,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":105,"author":{"gitId":"tryyang2001"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":106,"author":{"gitId":"tryyang2001"},"content":"     * Computes the sum of calorie of all exercise done in a specific date.","lastModifiedDate":"2021-10-16"},{"lineNumber":107,"author":{"gitId":"tryyang2001"},"content":"     *","lastModifiedDate":"2021-10-16"},{"lineNumber":108,"author":{"gitId":"tryyang2001"},"content":"     * @param date The date to query all the exercises","lastModifiedDate":"2021-10-16"},{"lineNumber":109,"author":{"gitId":"tryyang2001"},"content":"     * @return Integer value of the sum of calorie of all exercises in the given date","lastModifiedDate":"2021-10-16"},{"lineNumber":110,"author":{"gitId":"tryyang2001"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":111,"author":{"gitId":"tryyang2001"},"content":"    public int getTotalCaloriesWithDate(LocalDate date) {","lastModifiedDate":"2021-10-16"},{"lineNumber":112,"author":{"gitId":"tryyang2001"},"content":"        return exerciseList.stream().filter(e -\u003e e.getDate().isEqual(date)).mapToInt(Item::getCalories).sum();","lastModifiedDate":"2021-10-16"},{"lineNumber":113,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":114,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":115,"author":{"gitId":"xingjie99"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":116,"author":{"gitId":"xingjie99"},"content":"     * Deletes all exercises in the exercise list.","lastModifiedDate":"2021-10-11"},{"lineNumber":117,"author":{"gitId":"xingjie99"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":118,"author":{"gitId":"xingjie99"},"content":"    public void clearExerciseList() {","lastModifiedDate":"2021-10-11"},{"lineNumber":119,"author":{"gitId":"xingjie99"},"content":"        this.exerciseList.clear();","lastModifiedDate":"2021-10-11"},{"lineNumber":120,"author":{"gitId":"xingjie99"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":121,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":122,"author":{"gitId":"tryyang2001"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":123,"author":{"gitId":"tryyang2001"},"content":"     * Sorts the exercise list in ascending format according to the date.","lastModifiedDate":"2021-10-16"},{"lineNumber":124,"author":{"gitId":"tryyang2001"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":125,"author":{"gitId":"tryyang2001"},"content":"    public void sortExerciseList() {","lastModifiedDate":"2021-10-16"},{"lineNumber":126,"author":{"gitId":"tryyang2001"},"content":"        this.exerciseList.sort(Comparator.comparing(Exercise::getDate));","lastModifiedDate":"2021-10-16"},{"lineNumber":127,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":128,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":129,"author":{"gitId":"tryyang2001"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":130,"author":{"gitId":"tryyang2001"},"content":"     * Helper function used in convertToString to extract exercises list","lastModifiedDate":"2021-10-18"},{"lineNumber":131,"author":{"gitId":"tryyang2001"},"content":"     * according to each date presented in the entire exercise list.","lastModifiedDate":"2021-10-18"},{"lineNumber":132,"author":{"gitId":"tryyang2001"},"content":"     *","lastModifiedDate":"2021-10-17"},{"lineNumber":133,"author":{"gitId":"tryyang2001"},"content":"     * @return String which contains exercise lists with different date","lastModifiedDate":"2021-10-17"},{"lineNumber":134,"author":{"gitId":"tryyang2001"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":135,"author":{"gitId":"tryyang2001"},"content":"    private StringBuilder extractExerciseListByEachDate() {","lastModifiedDate":"2021-10-17"},{"lineNumber":136,"author":{"gitId":"tryyang2001"},"content":"        StringBuilder exerciseListInString \u003d new StringBuilder();","lastModifiedDate":"2021-10-17"},{"lineNumber":137,"author":{"gitId":"tryyang2001"},"content":"        for (int index \u003d 0; index \u003c exerciseList.size(); index++) {","lastModifiedDate":"2021-10-17"},{"lineNumber":138,"author":{"gitId":"tryyang2001"},"content":"            LocalDate currentDate \u003d exerciseList.get(index).getDate();","lastModifiedDate":"2021-10-17"},{"lineNumber":139,"author":{"gitId":"tryyang2001"},"content":"            ExerciseList subList \u003d new ExerciseList();","lastModifiedDate":"2021-10-17"},{"lineNumber":140,"author":{"gitId":"tryyang2001"},"content":"            while (index \u003c exerciseList.size() \u0026\u0026 currentDate.isEqual(exerciseList.get(index).getDate())) {","lastModifiedDate":"2021-10-17"},{"lineNumber":141,"author":{"gitId":"tryyang2001"},"content":"                subList.addExercise(exerciseList.get(index++));","lastModifiedDate":"2021-10-17"},{"lineNumber":142,"author":{"gitId":"tryyang2001"},"content":"            }","lastModifiedDate":"2021-10-17"},{"lineNumber":143,"author":{"gitId":"tryyang2001"},"content":"            convertItemCountToString(exerciseListInString, subList.getSize(), currentDate, MESSAGE_EXERCISE_DONE);","lastModifiedDate":"2021-10-18"},{"lineNumber":144,"author":{"gitId":"tryyang2001"},"content":"            for (int i \u003d 1; i \u003c\u003d subList.getSize(); i++) {","lastModifiedDate":"2021-10-17"},{"lineNumber":145,"author":{"gitId":"tryyang2001"},"content":"                convertItemToString(exerciseListInString, i, subList.getExercise(i - 1));","lastModifiedDate":"2021-10-18"},{"lineNumber":146,"author":{"gitId":"tryyang2001"},"content":"            }","lastModifiedDate":"2021-10-18"},{"lineNumber":147,"author":{"gitId":"tryyang2001"},"content":"            convertTotalCaloriesToString(","lastModifiedDate":"2021-10-18"},{"lineNumber":148,"author":{"gitId":"tryyang2001"},"content":"                    exerciseListInString,","lastModifiedDate":"2021-10-18"},{"lineNumber":149,"author":{"gitId":"tryyang2001"},"content":"                    this.getTotalCaloriesWithDate(currentDate),","lastModifiedDate":"2021-10-18"},{"lineNumber":150,"author":{"gitId":"tryyang2001"},"content":"                    MESSAGE_TOTAL_CALORIE_BURNT);","lastModifiedDate":"2021-10-18"},{"lineNumber":151,"author":{"gitId":"tryyang2001"},"content":"            if (index \u003c exerciseList.size()) {","lastModifiedDate":"2021-10-17"},{"lineNumber":152,"author":{"gitId":"tryyang2001"},"content":"                exerciseListInString.append(ItemList.LS); //prevents last line spacing","lastModifiedDate":"2021-10-17"},{"lineNumber":153,"author":{"gitId":"tryyang2001"},"content":"            }","lastModifiedDate":"2021-10-17"},{"lineNumber":154,"author":{"gitId":"tryyang2001"},"content":"            index--;","lastModifiedDate":"2021-10-17"},{"lineNumber":155,"author":{"gitId":"tryyang2001"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":156,"author":{"gitId":"tryyang2001"},"content":"        return exerciseListInString;","lastModifiedDate":"2021-10-17"},{"lineNumber":157,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":158,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":159,"author":{"gitId":"tryyang2001"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":160,"author":{"gitId":"tryyang2001"},"content":"     * Helper method used in convertToStringBySpecificDate for extracting","lastModifiedDate":"2021-10-18"},{"lineNumber":161,"author":{"gitId":"tryyang2001"},"content":"     * exercise list which contains all the exercises done on the date.","lastModifiedDate":"2021-10-18"},{"lineNumber":162,"author":{"gitId":"tryyang2001"},"content":"     *","lastModifiedDate":"2021-10-17"},{"lineNumber":163,"author":{"gitId":"tryyang2001"},"content":"     * @param date The date to query all the exercises done","lastModifiedDate":"2021-10-17"},{"lineNumber":164,"author":{"gitId":"tryyang2001"},"content":"     * @return StringBuilder type string which contains an exercise list with the given date","lastModifiedDate":"2021-10-17"},{"lineNumber":165,"author":{"gitId":"tryyang2001"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":166,"author":{"gitId":"tryyang2001"},"content":"    private StringBuilder extractExerciseListBySpecificDate(LocalDate date) {","lastModifiedDate":"2021-10-17"},{"lineNumber":167,"author":{"gitId":"tryyang2001"},"content":"        StringBuilder exerciseListInString \u003d new StringBuilder(); //declares as StringBuilder for mutable String object","lastModifiedDate":"2021-10-17"},{"lineNumber":168,"author":{"gitId":"tryyang2001"},"content":"        ArrayList\u003cExercise\u003e subList \u003d (ArrayList\u003cExercise\u003e) this.exerciseList.stream()","lastModifiedDate":"2021-10-17"},{"lineNumber":169,"author":{"gitId":"tryyang2001"},"content":"                .filter(e -\u003e e.getDate().isEqual(date))","lastModifiedDate":"2021-10-17"},{"lineNumber":170,"author":{"gitId":"tryyang2001"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2021-10-17"},{"lineNumber":171,"author":{"gitId":"tryyang2001"},"content":"        convertItemCountToString(exerciseListInString, subList.size(), date, MESSAGE_EXERCISE_DONE);","lastModifiedDate":"2021-10-18"},{"lineNumber":172,"author":{"gitId":"tryyang2001"},"content":"        for (int i \u003d 1; i \u003c\u003d subList.size(); i++) {","lastModifiedDate":"2021-10-17"},{"lineNumber":173,"author":{"gitId":"tryyang2001"},"content":"            convertItemToString(exerciseListInString, i, subList.get(i - 1));","lastModifiedDate":"2021-10-18"},{"lineNumber":174,"author":{"gitId":"tryyang2001"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":175,"author":{"gitId":"tryyang2001"},"content":"        convertTotalCaloriesToString(","lastModifiedDate":"2021-10-18"},{"lineNumber":176,"author":{"gitId":"tryyang2001"},"content":"                exerciseListInString,","lastModifiedDate":"2021-10-18"},{"lineNumber":177,"author":{"gitId":"tryyang2001"},"content":"                this.getTotalCaloriesWithDate(date),","lastModifiedDate":"2021-10-18"},{"lineNumber":178,"author":{"gitId":"tryyang2001"},"content":"                MESSAGE_TOTAL_CALORIE_BURNT);","lastModifiedDate":"2021-10-18"},{"lineNumber":179,"author":{"gitId":"tryyang2001"},"content":"        return exerciseListInString;","lastModifiedDate":"2021-10-17"},{"lineNumber":180,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":181,"author":{"gitId":"xingjie99"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"weidak":1,"tryyang2001":101,"xingjie99":73,"tlyi":6}},{"path":"src/main/java/seedu/duke/item/exercise/FutureExerciseList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xingjie99"},"content":"package seedu.duke.item.exercise;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"xingjie99"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"xingjie99"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"xingjie99"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"xingjie99"},"content":"public class FutureExerciseList extends ExerciseList {","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"xingjie99"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"xingjie99"},"content":"     * Returns the future exercise list.","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"xingjie99"},"content":"     *","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"xingjie99"},"content":"     * @return Future exercise list.","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"xingjie99"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"xingjie99"},"content":"    public ArrayList\u003cExercise\u003e getFutureExerciseList() {","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"xingjie99"},"content":"        return exerciseList;","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"xingjie99"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":17,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"xingjie99"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"xingjie99"},"content":"     * Returns exercise item as a specific index in the future exercise list.","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"xingjie99"},"content":"     *","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"xingjie99"},"content":"     * @param index Index of the exercise item.","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"xingjie99"},"content":"     * @return exercise item in the future exercise list.","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"xingjie99"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"xingjie99"},"content":"    public Exercise getFutureExercise(int index) {","lastModifiedDate":"2021-10-18"},{"lineNumber":25,"author":{"gitId":"xingjie99"},"content":"        return exerciseList.get(index);","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"xingjie99"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":27,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":28,"author":{"gitId":"xingjie99"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"xingjie99"},"content":"     * Adds an exercise item into the future exercise item and sort by date in an ascending order.","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"xingjie99"},"content":"     *","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"xingjie99"},"content":"     * @param exercise Exercise class object to be added.","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"xingjie99"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"xingjie99"},"content":"    public void addFutureExercise(Exercise exercise) {","lastModifiedDate":"2021-10-18"},{"lineNumber":34,"author":{"gitId":"xingjie99"},"content":"        exerciseList.add(exercise);","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"xingjie99"},"content":"        sortFutureExerciseList();","lastModifiedDate":"2021-10-18"},{"lineNumber":36,"author":{"gitId":"xingjie99"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":37,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":38,"author":{"gitId":"xingjie99"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"xingjie99"},"content":"     * Deletes and exercise item from the future exercise list.","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"xingjie99"},"content":"     *","lastModifiedDate":"2021-10-19"},{"lineNumber":41,"author":{"gitId":"xingjie99"},"content":"     * @param index Index of the exercise to be deleted.","lastModifiedDate":"2021-10-19"},{"lineNumber":42,"author":{"gitId":"xingjie99"},"content":"     * @return Exercise object removed.","lastModifiedDate":"2021-10-19"},{"lineNumber":43,"author":{"gitId":"xingjie99"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":44,"author":{"gitId":"xingjie99"},"content":"    public Exercise deleteFutureExercise(int index) {","lastModifiedDate":"2021-10-18"},{"lineNumber":45,"author":{"gitId":"xingjie99"},"content":"        return exerciseList.remove(index);","lastModifiedDate":"2021-10-19"},{"lineNumber":46,"author":{"gitId":"xingjie99"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":47,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":48,"author":{"gitId":"xingjie99"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":49,"author":{"gitId":"xingjie99"},"content":"     * Deletes all exercises in the future exercise list.","lastModifiedDate":"2021-10-19"},{"lineNumber":50,"author":{"gitId":"xingjie99"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":51,"author":{"gitId":"xingjie99"},"content":"    public void clearFutureExerciseList() {","lastModifiedDate":"2021-10-18"},{"lineNumber":52,"author":{"gitId":"xingjie99"},"content":"        exerciseList.clear();","lastModifiedDate":"2021-10-19"},{"lineNumber":53,"author":{"gitId":"xingjie99"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":54,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":55,"author":{"gitId":"xingjie99"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":56,"author":{"gitId":"xingjie99"},"content":"     * Converts the entire future exercise list to string format for printing purpose.","lastModifiedDate":"2021-10-19"},{"lineNumber":57,"author":{"gitId":"xingjie99"},"content":"     *","lastModifiedDate":"2021-10-19"},{"lineNumber":58,"author":{"gitId":"xingjie99"},"content":"     * @return The future exercise list in a single string.","lastModifiedDate":"2021-10-19"},{"lineNumber":59,"author":{"gitId":"xingjie99"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":60,"author":{"gitId":"xingjie99"},"content":"    @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":61,"author":{"gitId":"xingjie99"},"content":"    public String convertToString() {","lastModifiedDate":"2021-10-18"},{"lineNumber":62,"author":{"gitId":"xingjie99"},"content":"        StringBuilder futureExerciseListToString \u003d new StringBuilder();","lastModifiedDate":"2021-10-18"},{"lineNumber":63,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":64,"author":{"gitId":"xingjie99"},"content":"        for (int i \u003d 0; i \u003c exerciseList.size(); i++) {","lastModifiedDate":"2021-10-19"},{"lineNumber":65,"author":{"gitId":"xingjie99"},"content":"            futureExerciseListToString","lastModifiedDate":"2021-10-18"},{"lineNumber":66,"author":{"gitId":"xingjie99"},"content":"                    .append(TAB)","lastModifiedDate":"2021-10-18"},{"lineNumber":67,"author":{"gitId":"xingjie99"},"content":"                    .append(i + 1)","lastModifiedDate":"2021-10-18"},{"lineNumber":68,"author":{"gitId":"xingjie99"},"content":"                    .append(\". \")","lastModifiedDate":"2021-10-18"},{"lineNumber":69,"author":{"gitId":"xingjie99"},"content":"                    .append(exerciseList.get(i))","lastModifiedDate":"2021-10-19"},{"lineNumber":70,"author":{"gitId":"xingjie99"},"content":"                    .append(\" (\")","lastModifiedDate":"2021-10-18"},{"lineNumber":71,"author":{"gitId":"xingjie99"},"content":"                    .append(getDay(exerciseList.get(i).getDate()))","lastModifiedDate":"2021-10-20"},{"lineNumber":72,"author":{"gitId":"xingjie99"},"content":"                    .append(\" \")","lastModifiedDate":"2021-10-18"},{"lineNumber":73,"author":{"gitId":"xingjie99"},"content":"                    .append(exerciseList.get(i).getDate().format(DateTimeFormatter.ofPattern(DATE_FORMAT)))","lastModifiedDate":"2021-10-19"},{"lineNumber":74,"author":{"gitId":"xingjie99"},"content":"                    .append(\")\")","lastModifiedDate":"2021-10-18"},{"lineNumber":75,"author":{"gitId":"xingjie99"},"content":"                    .append(LS);","lastModifiedDate":"2021-10-18"},{"lineNumber":76,"author":{"gitId":"xingjie99"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":77,"author":{"gitId":"xingjie99"},"content":"        return futureExerciseListToString.toString().stripTrailing();","lastModifiedDate":"2021-10-18"},{"lineNumber":78,"author":{"gitId":"xingjie99"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":79,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":80,"author":{"gitId":"xingjie99"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":81,"author":{"gitId":"xingjie99"},"content":"     * Returns the number of exercises in the future exercise list.","lastModifiedDate":"2021-10-19"},{"lineNumber":82,"author":{"gitId":"xingjie99"},"content":"     *","lastModifiedDate":"2021-10-19"},{"lineNumber":83,"author":{"gitId":"xingjie99"},"content":"     * @return Number of exercises in the future exercise list.","lastModifiedDate":"2021-10-19"},{"lineNumber":84,"author":{"gitId":"xingjie99"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":85,"author":{"gitId":"xingjie99"},"content":"    @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":86,"author":{"gitId":"xingjie99"},"content":"    public int getSize() {","lastModifiedDate":"2021-10-18"},{"lineNumber":87,"author":{"gitId":"xingjie99"},"content":"        return exerciseList.size();","lastModifiedDate":"2021-10-19"},{"lineNumber":88,"author":{"gitId":"xingjie99"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":89,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":90,"author":{"gitId":"xingjie99"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":91,"author":{"gitId":"xingjie99"},"content":"     * Computes the sum of calorie of all exercises in the future exercise list.","lastModifiedDate":"2021-10-19"},{"lineNumber":92,"author":{"gitId":"xingjie99"},"content":"     *","lastModifiedDate":"2021-10-19"},{"lineNumber":93,"author":{"gitId":"xingjie99"},"content":"     * @return Integer value of the sum of calorie of all exercises in the future exercise list.","lastModifiedDate":"2021-10-19"},{"lineNumber":94,"author":{"gitId":"xingjie99"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":95,"author":{"gitId":"xingjie99"},"content":"    @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":96,"author":{"gitId":"xingjie99"},"content":"    public int getTotalCalories() {","lastModifiedDate":"2021-10-18"},{"lineNumber":97,"author":{"gitId":"xingjie99"},"content":"        int sumOfExerciseCalorie \u003d 0;","lastModifiedDate":"2021-10-18"},{"lineNumber":98,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":99,"author":{"gitId":"xingjie99"},"content":"        for (Exercise exercise : exerciseList) {","lastModifiedDate":"2021-10-19"},{"lineNumber":100,"author":{"gitId":"xingjie99"},"content":"            sumOfExerciseCalorie +\u003d exercise.getCalories();","lastModifiedDate":"2021-10-18"},{"lineNumber":101,"author":{"gitId":"xingjie99"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":102,"author":{"gitId":"xingjie99"},"content":"        return sumOfExerciseCalorie;","lastModifiedDate":"2021-10-18"},{"lineNumber":103,"author":{"gitId":"xingjie99"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":104,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":105,"author":{"gitId":"xingjie99"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":106,"author":{"gitId":"xingjie99"},"content":"     * Sorts the future exercise list in ascending format according to the date.","lastModifiedDate":"2021-10-19"},{"lineNumber":107,"author":{"gitId":"xingjie99"},"content":"     *","lastModifiedDate":"2021-10-19"},{"lineNumber":108,"author":{"gitId":"xingjie99"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":109,"author":{"gitId":"xingjie99"},"content":"    public void sortFutureExerciseList() {","lastModifiedDate":"2021-10-18"},{"lineNumber":110,"author":{"gitId":"xingjie99"},"content":"        exerciseList.sort(Comparator.comparing(Exercise::getDate));","lastModifiedDate":"2021-10-19"},{"lineNumber":111,"author":{"gitId":"xingjie99"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":112,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":113,"author":{"gitId":"xingjie99"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"xingjie99":113}},{"path":"src/main/java/seedu/duke/item/food/Food.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tryyang2001"},"content":"package seedu.duke.item.food;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"tryyang2001"},"content":"import seedu.duke.item.Item;","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"tryyang2001"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-16"},{"lineNumber":6,"author":{"gitId":"tryyang2001"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"tryyang2001"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-10-16"},{"lineNumber":8,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":9,"author":{"gitId":"tryyang2001"},"content":"public class Food extends Item {","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"tryyang2001"},"content":"    public static final String FOOD_TYPE \u003d \"F\";","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"tryyang2001"},"content":"    private static final int EARLIEST_NIGHT_HOUR \u003d 21;","lastModifiedDate":"2021-10-17"},{"lineNumber":12,"author":{"gitId":"tryyang2001"},"content":"    private static final int LATEST_NIGHT_HOUR \u003d 4;","lastModifiedDate":"2021-10-17"},{"lineNumber":13,"author":{"gitId":"tryyang2001"},"content":"    private static final int EARLIEST_EVENING_HOUR \u003d 17;","lastModifiedDate":"2021-10-17"},{"lineNumber":14,"author":{"gitId":"tryyang2001"},"content":"    private static final int LATEST_EVENING_HOUR \u003d 20;","lastModifiedDate":"2021-10-17"},{"lineNumber":15,"author":{"gitId":"tryyang2001"},"content":"    private static final int EARLIEST_AFTERNOON_HOUR \u003d 12;","lastModifiedDate":"2021-10-17"},{"lineNumber":16,"author":{"gitId":"tryyang2001"},"content":"    private static final int LATEST_AFTERNOON_HOUR \u003d 16;","lastModifiedDate":"2021-10-17"},{"lineNumber":17,"author":{"gitId":"tryyang2001"},"content":"    private static final int EARLIEST_MORNING_HOUR \u003d 5;","lastModifiedDate":"2021-10-17"},{"lineNumber":18,"author":{"gitId":"tryyang2001"},"content":"    private static final int LATEST_MORNING_HOUR \u003d 11;","lastModifiedDate":"2021-10-17"},{"lineNumber":19,"author":{"gitId":"tryyang2001"},"content":"    protected LocalDateTime dateTime;","lastModifiedDate":"2021-10-16"},{"lineNumber":20,"author":{"gitId":"tryyang2001"},"content":"    protected TimePeriod timePeriod;","lastModifiedDate":"2021-10-17"},{"lineNumber":21,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"tryyang2001"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"tryyang2001"},"content":"     * Constructor for the food object.","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"tryyang2001"},"content":"     *","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"tryyang2001"},"content":"     * @param name     The name or description of the food","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"tryyang2001"},"content":"     * @param calories The calorie of the food consumed","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"tryyang2001"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"tryyang2001"},"content":"    public Food(String name, int calories) {","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"tryyang2001"},"content":"        super(name, calories);","lastModifiedDate":"2021-10-16"},{"lineNumber":30,"author":{"gitId":"tryyang2001"},"content":"        this.dateTime \u003d LocalDateTime.now();","lastModifiedDate":"2021-10-16"},{"lineNumber":31,"author":{"gitId":"tryyang2001"},"content":"        setTimePeriod(this.dateTime);","lastModifiedDate":"2021-10-17"},{"lineNumber":32,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":33,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"tryyang2001"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":35,"author":{"gitId":"tryyang2001"},"content":"     * /**","lastModifiedDate":"2021-10-16"},{"lineNumber":36,"author":{"gitId":"tryyang2001"},"content":"     * Constructor for the food object.","lastModifiedDate":"2021-10-16"},{"lineNumber":37,"author":{"gitId":"tryyang2001"},"content":"     *","lastModifiedDate":"2021-10-16"},{"lineNumber":38,"author":{"gitId":"tryyang2001"},"content":"     * @param name     The name or description of the food","lastModifiedDate":"2021-10-16"},{"lineNumber":39,"author":{"gitId":"tryyang2001"},"content":"     * @param calories The calorie intake from the food","lastModifiedDate":"2021-10-16"},{"lineNumber":40,"author":{"gitId":"tryyang2001"},"content":"     * @param dateTime The date and time when the food is consumed","lastModifiedDate":"2021-10-16"},{"lineNumber":41,"author":{"gitId":"tryyang2001"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":42,"author":{"gitId":"tryyang2001"},"content":"    public Food(String name, int calories, LocalDateTime dateTime) {","lastModifiedDate":"2021-10-16"},{"lineNumber":43,"author":{"gitId":"tryyang2001"},"content":"        super(name, calories);","lastModifiedDate":"2021-10-16"},{"lineNumber":44,"author":{"gitId":"tryyang2001"},"content":"        this.dateTime \u003d dateTime;","lastModifiedDate":"2021-10-16"},{"lineNumber":45,"author":{"gitId":"tryyang2001"},"content":"        setTimePeriod(this.dateTime);","lastModifiedDate":"2021-10-17"},{"lineNumber":46,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":47,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":48,"author":{"gitId":"tryyang2001"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":49,"author":{"gitId":"tryyang2001"},"content":"     * Gets the date and time of the food consumed.","lastModifiedDate":"2021-10-16"},{"lineNumber":50,"author":{"gitId":"tryyang2001"},"content":"     *","lastModifiedDate":"2021-10-16"},{"lineNumber":51,"author":{"gitId":"tryyang2001"},"content":"     * @return The date and time of the food consumed in LocalDateTime","lastModifiedDate":"2021-10-16"},{"lineNumber":52,"author":{"gitId":"tryyang2001"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":53,"author":{"gitId":"tryyang2001"},"content":"    public LocalDateTime getDateTime() {","lastModifiedDate":"2021-10-16"},{"lineNumber":54,"author":{"gitId":"tryyang2001"},"content":"        return dateTime;","lastModifiedDate":"2021-10-16"},{"lineNumber":55,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":56,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":57,"author":{"gitId":"tryyang2001"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":58,"author":{"gitId":"tryyang2001"},"content":"     * Updates the date and time of the food consumed.","lastModifiedDate":"2021-10-16"},{"lineNumber":59,"author":{"gitId":"tryyang2001"},"content":"     *","lastModifiedDate":"2021-10-16"},{"lineNumber":60,"author":{"gitId":"tryyang2001"},"content":"     * @param dateTime The new date and time of the food consumed in LocalDateTime","lastModifiedDate":"2021-10-16"},{"lineNumber":61,"author":{"gitId":"tryyang2001"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":62,"author":{"gitId":"tryyang2001"},"content":"    public void setDateTime(LocalDateTime dateTime) {","lastModifiedDate":"2021-10-16"},{"lineNumber":63,"author":{"gitId":"tryyang2001"},"content":"        this.dateTime \u003d dateTime;","lastModifiedDate":"2021-10-16"},{"lineNumber":64,"author":{"gitId":"tryyang2001"},"content":"        setTimePeriod(this.dateTime);","lastModifiedDate":"2021-10-17"},{"lineNumber":65,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":66,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":67,"author":{"gitId":"tryyang2001"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":68,"author":{"gitId":"tryyang2001"},"content":"     * Gets the date of the food consumed.","lastModifiedDate":"2021-10-16"},{"lineNumber":69,"author":{"gitId":"tryyang2001"},"content":"     *","lastModifiedDate":"2021-10-16"},{"lineNumber":70,"author":{"gitId":"tryyang2001"},"content":"     * @return The date of the food consumed in LocalDate","lastModifiedDate":"2021-10-16"},{"lineNumber":71,"author":{"gitId":"tryyang2001"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":72,"author":{"gitId":"tryyang2001"},"content":"    public LocalDate getDate() {","lastModifiedDate":"2021-10-16"},{"lineNumber":73,"author":{"gitId":"tryyang2001"},"content":"        return this.dateTime.toLocalDate();","lastModifiedDate":"2021-10-16"},{"lineNumber":74,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":75,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":76,"author":{"gitId":"tryyang2001"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":77,"author":{"gitId":"tryyang2001"},"content":"     * Gets the time of the food consumed.","lastModifiedDate":"2021-10-16"},{"lineNumber":78,"author":{"gitId":"tryyang2001"},"content":"     *","lastModifiedDate":"2021-10-16"},{"lineNumber":79,"author":{"gitId":"tryyang2001"},"content":"     * @return The time of the food consumed in LocalTime","lastModifiedDate":"2021-10-16"},{"lineNumber":80,"author":{"gitId":"tryyang2001"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":81,"author":{"gitId":"tryyang2001"},"content":"    public LocalTime getTime() {","lastModifiedDate":"2021-10-16"},{"lineNumber":82,"author":{"gitId":"tryyang2001"},"content":"        return this.dateTime.toLocalTime();","lastModifiedDate":"2021-10-16"},{"lineNumber":83,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":84,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":85,"author":{"gitId":"tryyang2001"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":86,"author":{"gitId":"tryyang2001"},"content":"     * Gets the time period of the food consumed.","lastModifiedDate":"2021-10-17"},{"lineNumber":87,"author":{"gitId":"tlyi"},"content":"     *","lastModifiedDate":"2021-10-19"},{"lineNumber":88,"author":{"gitId":"tryyang2001"},"content":"     * @return TimePeriod enum which represents the time period","lastModifiedDate":"2021-10-17"},{"lineNumber":89,"author":{"gitId":"tryyang2001"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":90,"author":{"gitId":"tryyang2001"},"content":"    public TimePeriod getTimePeriod() {","lastModifiedDate":"2021-10-17"},{"lineNumber":91,"author":{"gitId":"tryyang2001"},"content":"        return timePeriod;","lastModifiedDate":"2021-10-17"},{"lineNumber":92,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":93,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":94,"author":{"gitId":"tryyang2001"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":95,"author":{"gitId":"tryyang2001"},"content":"     * Converts the food to external file string format.","lastModifiedDate":"2021-10-16"},{"lineNumber":96,"author":{"gitId":"tlyi"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":97,"author":{"gitId":"tryyang2001"},"content":"     * @return Name, calorie, date and time of the food in string","lastModifiedDate":"2021-10-18"},{"lineNumber":98,"author":{"gitId":"tryyang2001"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":99,"author":{"gitId":"tryyang2001"},"content":"    public String toFileTextString() {","lastModifiedDate":"2021-10-11"},{"lineNumber":100,"author":{"gitId":"tryyang2001"},"content":"        return FOOD_TYPE","lastModifiedDate":"2021-10-18"},{"lineNumber":101,"author":{"gitId":"tryyang2001"},"content":"                + super.toFileTextString()","lastModifiedDate":"2021-10-18"},{"lineNumber":102,"author":{"gitId":"tryyang2001"},"content":"                + FILE_TEXT_DELIMITER","lastModifiedDate":"2021-10-18"},{"lineNumber":103,"author":{"gitId":"weidak"},"content":"                + this.getDateTime().format(DATE_TIME_FORMATTER);","lastModifiedDate":"2021-10-19"},{"lineNumber":104,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":105,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":106,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":107,"author":{"gitId":"tryyang2001"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":108,"author":{"gitId":"tryyang2001"},"content":"     * Sets or updates time period according to the time provided in dateTime.","lastModifiedDate":"2021-10-17"},{"lineNumber":109,"author":{"gitId":"tryyang2001"},"content":"     *","lastModifiedDate":"2021-10-17"},{"lineNumber":110,"author":{"gitId":"tryyang2001"},"content":"     * @param dateTime Date and time provided","lastModifiedDate":"2021-10-17"},{"lineNumber":111,"author":{"gitId":"tryyang2001"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":112,"author":{"gitId":"tryyang2001"},"content":"    private void setTimePeriod(LocalDateTime dateTime) {","lastModifiedDate":"2021-10-17"},{"lineNumber":113,"author":{"gitId":"tryyang2001"},"content":"        if (isMorning(dateTime)) {","lastModifiedDate":"2021-10-17"},{"lineNumber":114,"author":{"gitId":"tryyang2001"},"content":"            this.timePeriod \u003d TimePeriod.Morning;","lastModifiedDate":"2021-10-17"},{"lineNumber":115,"author":{"gitId":"tryyang2001"},"content":"        } else if (isAfternoon(dateTime)) {","lastModifiedDate":"2021-10-17"},{"lineNumber":116,"author":{"gitId":"tryyang2001"},"content":"            this.timePeriod \u003d TimePeriod.Afternoon;","lastModifiedDate":"2021-10-17"},{"lineNumber":117,"author":{"gitId":"tryyang2001"},"content":"        } else if (isEvening(dateTime)) {","lastModifiedDate":"2021-10-17"},{"lineNumber":118,"author":{"gitId":"tryyang2001"},"content":"            this.timePeriod \u003d TimePeriod.Evening;","lastModifiedDate":"2021-10-17"},{"lineNumber":119,"author":{"gitId":"tryyang2001"},"content":"        } else if (isNight(dateTime)) {","lastModifiedDate":"2021-10-17"},{"lineNumber":120,"author":{"gitId":"tryyang2001"},"content":"            this.timePeriod \u003d TimePeriod.Night;","lastModifiedDate":"2021-10-17"},{"lineNumber":121,"author":{"gitId":"tryyang2001"},"content":"        } else {","lastModifiedDate":"2021-10-17"},{"lineNumber":122,"author":{"gitId":"tryyang2001"},"content":"            this.timePeriod \u003d null;","lastModifiedDate":"2021-10-17"},{"lineNumber":123,"author":{"gitId":"tryyang2001"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":124,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":125,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":126,"author":{"gitId":"tryyang2001"},"content":"    private boolean isNight(LocalDateTime dateTime) {","lastModifiedDate":"2021-10-17"},{"lineNumber":127,"author":{"gitId":"tryyang2001"},"content":"        return dateTime.getHour() \u003e\u003d EARLIEST_NIGHT_HOUR || dateTime.getHour() \u003c\u003d LATEST_NIGHT_HOUR;","lastModifiedDate":"2021-10-17"},{"lineNumber":128,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":129,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":130,"author":{"gitId":"tryyang2001"},"content":"    private boolean isEvening(LocalDateTime dateTime) {","lastModifiedDate":"2021-10-17"},{"lineNumber":131,"author":{"gitId":"tryyang2001"},"content":"        return dateTime.getHour() \u003e\u003d EARLIEST_EVENING_HOUR \u0026\u0026 dateTime.getHour() \u003c\u003d LATEST_EVENING_HOUR;","lastModifiedDate":"2021-10-17"},{"lineNumber":132,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":133,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":134,"author":{"gitId":"tryyang2001"},"content":"    private boolean isAfternoon(LocalDateTime dateTime) {","lastModifiedDate":"2021-10-17"},{"lineNumber":135,"author":{"gitId":"tryyang2001"},"content":"        return dateTime.getHour() \u003e\u003d EARLIEST_AFTERNOON_HOUR \u0026\u0026 dateTime.getHour() \u003c\u003d LATEST_AFTERNOON_HOUR;","lastModifiedDate":"2021-10-17"},{"lineNumber":136,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":137,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":138,"author":{"gitId":"tryyang2001"},"content":"    private boolean isMorning(LocalDateTime dateTime) {","lastModifiedDate":"2021-10-17"},{"lineNumber":139,"author":{"gitId":"tryyang2001"},"content":"        return dateTime.getHour() \u003e\u003d EARLIEST_MORNING_HOUR \u0026\u0026 dateTime.getHour() \u003c\u003d LATEST_MORNING_HOUR;","lastModifiedDate":"2021-10-17"},{"lineNumber":140,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":141,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":142,"author":{"gitId":"tryyang2001"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"weidak":2,"tryyang2001":138,"tlyi":2}},{"path":"src/main/java/seedu/duke/item/food/FoodList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tryyang2001"},"content":"package seedu.duke.item.food;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"tryyang2001"},"content":"import seedu.duke.item.ItemList;","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"tryyang2001"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-16"},{"lineNumber":6,"author":{"gitId":"tryyang2001"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"tryyang2001"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-10-16"},{"lineNumber":8,"author":{"gitId":"tryyang2001"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-10-16"},{"lineNumber":9,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"tryyang2001"},"content":"public class FoodList extends ItemList {","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"tryyang2001"},"content":"    public static final String MESSAGE_FOOD_CONSUMED \u003d \"You have consumed %d food item(s) on %s (%s):\";","lastModifiedDate":"2021-10-17"},{"lineNumber":13,"author":{"gitId":"tryyang2001"},"content":"    public static final String MESSAGE_TOTAL_CALORIE_CONSUMED \u003d \"Total calories consumed: %d cal\";","lastModifiedDate":"2021-10-17"},{"lineNumber":14,"author":{"gitId":"tryyang2001"},"content":"    public static final String MESSAGE_MORNING \u003d \"In the morning:\";","lastModifiedDate":"2021-10-17"},{"lineNumber":15,"author":{"gitId":"tryyang2001"},"content":"    public static final String MESSAGE_AFTERNOON \u003d \"In the afternoon:\";","lastModifiedDate":"2021-10-17"},{"lineNumber":16,"author":{"gitId":"tryyang2001"},"content":"    public static final String MESSAGE_EVENING \u003d \"In the evening:\";","lastModifiedDate":"2021-10-17"},{"lineNumber":17,"author":{"gitId":"tryyang2001"},"content":"    public static final String MESSAGE_NIGHT \u003d \"At night:\";","lastModifiedDate":"2021-10-17"},{"lineNumber":18,"author":{"gitId":"tryyang2001"},"content":"    public static final String MESSAGE_NO_FOOD_IN_DATE_TIME \u003d","lastModifiedDate":"2021-10-18"},{"lineNumber":19,"author":{"gitId":"tryyang2001"},"content":"            \"There is no food item found by the given date and time period\";","lastModifiedDate":"2021-10-17"},{"lineNumber":20,"author":{"gitId":"tryyang2001"},"content":"    public static final String MESSAGE_NO_FOOD_IN_DATE \u003d \"There is no food item found by the given date\";","lastModifiedDate":"2021-10-17"},{"lineNumber":21,"author":{"gitId":"tryyang2001"},"content":"    protected ArrayList\u003cFood\u003e foodRecords \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-16"},{"lineNumber":22,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":23,"author":{"gitId":"tryyang2001"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"tryyang2001"},"content":"     * Returns food item in the food list.","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"tryyang2001"},"content":"     *","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"tryyang2001"},"content":"     * @param index The index of the food item","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"tryyang2001"},"content":"     * @return the food item with the given index","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"tryyang2001"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"tryyang2001"},"content":"    public Food getFood(int index) {","lastModifiedDate":"2021-10-16"},{"lineNumber":30,"author":{"gitId":"tryyang2001"},"content":"        return this.foodRecords.get(index);","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"tryyang2001"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"tryyang2001"},"content":"     * Returns the size of the array list.","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"tryyang2001"},"content":"     *","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"tryyang2001"},"content":"     * @return the size of the array list attribute","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"tryyang2001"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":38,"author":{"gitId":"tryyang2001"},"content":"    @Override","lastModifiedDate":"2021-10-16"},{"lineNumber":39,"author":{"gitId":"tryyang2001"},"content":"    public int getSize() {","lastModifiedDate":"2021-10-10"},{"lineNumber":40,"author":{"gitId":"tryyang2001"},"content":"        return foodRecords.size();","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"tryyang2001"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":44,"author":{"gitId":"tryyang2001"},"content":"     * Adds a food item into the food list.","lastModifiedDate":"2021-10-08"},{"lineNumber":45,"author":{"gitId":"tryyang2001"},"content":"     *","lastModifiedDate":"2021-10-07"},{"lineNumber":46,"author":{"gitId":"tryyang2001"},"content":"     * @param food The food class object to add","lastModifiedDate":"2021-10-06"},{"lineNumber":47,"author":{"gitId":"tryyang2001"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":48,"author":{"gitId":"tryyang2001"},"content":"    public void addFood(Food food) {","lastModifiedDate":"2021-10-10"},{"lineNumber":49,"author":{"gitId":"tryyang2001"},"content":"        this.foodRecords.add(food);","lastModifiedDate":"2021-10-06"},{"lineNumber":50,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":51,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":52,"author":{"gitId":"tryyang2001"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":53,"author":{"gitId":"tryyang2001"},"content":"     * Converts the entire food list to string format for printing purpose.","lastModifiedDate":"2021-10-11"},{"lineNumber":54,"author":{"gitId":"tryyang2001"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":55,"author":{"gitId":"tryyang2001"},"content":"     * @return The food list in a single string","lastModifiedDate":"2021-10-10"},{"lineNumber":56,"author":{"gitId":"tryyang2001"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":57,"author":{"gitId":"tryyang2001"},"content":"    @Override","lastModifiedDate":"2021-10-16"},{"lineNumber":58,"author":{"gitId":"tryyang2001"},"content":"    public String convertToString() {","lastModifiedDate":"2021-10-10"},{"lineNumber":59,"author":{"gitId":"tryyang2001"},"content":"        StringBuilder foodListInString \u003d extractFoodListByEachDateAndTimePeriod();","lastModifiedDate":"2021-10-18"},{"lineNumber":60,"author":{"gitId":"tryyang2001"},"content":"        return foodListInString.toString().stripTrailing();","lastModifiedDate":"2021-10-16"},{"lineNumber":61,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":62,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":63,"author":{"gitId":"tryyang2001"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":64,"author":{"gitId":"tryyang2001"},"content":"     * Converts the food list of a specific date to string format for printing purpose.","lastModifiedDate":"2021-10-16"},{"lineNumber":65,"author":{"gitId":"tryyang2001"},"content":"     *","lastModifiedDate":"2021-10-16"},{"lineNumber":66,"author":{"gitId":"tryyang2001"},"content":"     * @param date The date for the food list","lastModifiedDate":"2021-10-16"},{"lineNumber":67,"author":{"gitId":"tryyang2001"},"content":"     * @return The food list of the specific date in a single string","lastModifiedDate":"2021-10-16"},{"lineNumber":68,"author":{"gitId":"tryyang2001"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":69,"author":{"gitId":"tryyang2001"},"content":"    public String convertToStringBySpecificDate(LocalDate date) {","lastModifiedDate":"2021-10-18"},{"lineNumber":70,"author":{"gitId":"tryyang2001"},"content":"        StringBuilder foodListInString \u003d extractFoodListBySpecificDate(date);","lastModifiedDate":"2021-10-16"},{"lineNumber":71,"author":{"gitId":"weidak"},"content":"        return foodListInString.toString().stripTrailing();","lastModifiedDate":"2021-10-14"},{"lineNumber":72,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":73,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":74,"author":{"gitId":"tryyang2001"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":75,"author":{"gitId":"tryyang2001"},"content":"     * Extracts a food list according to the given date and time period and converts it to string for printing purpose.","lastModifiedDate":"2021-10-17"},{"lineNumber":76,"author":{"gitId":"tryyang2001"},"content":"     *","lastModifiedDate":"2021-10-17"},{"lineNumber":77,"author":{"gitId":"tryyang2001"},"content":"     * @param date       The date given to query the food list","lastModifiedDate":"2021-10-17"},{"lineNumber":78,"author":{"gitId":"tryyang2001"},"content":"     * @param timePeriod The time period given to query the food list","lastModifiedDate":"2021-10-17"},{"lineNumber":79,"author":{"gitId":"tryyang2001"},"content":"     * @return The food list of the specific date and time period in a single string","lastModifiedDate":"2021-10-18"},{"lineNumber":80,"author":{"gitId":"tryyang2001"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":81,"author":{"gitId":"tryyang2001"},"content":"    public String convertToStringBySpecificDateAndTime(LocalDate date, TimePeriod timePeriod) {","lastModifiedDate":"2021-10-17"},{"lineNumber":82,"author":{"gitId":"tryyang2001"},"content":"        StringBuilder foodListInString \u003d new StringBuilder();","lastModifiedDate":"2021-10-17"},{"lineNumber":83,"author":{"gitId":"tryyang2001"},"content":"        ArrayList\u003cFood\u003e subList \u003d filterListAccordingToDateAndTimePeriod(date, timePeriod);","lastModifiedDate":"2021-10-18"},{"lineNumber":84,"author":{"gitId":"tryyang2001"},"content":"        if (subList.size() \u003d\u003d 0) {","lastModifiedDate":"2021-10-17"},{"lineNumber":85,"author":{"gitId":"tryyang2001"},"content":"            foodListInString","lastModifiedDate":"2021-10-17"},{"lineNumber":86,"author":{"gitId":"tryyang2001"},"content":"                    .append(MESSAGE_NO_FOOD_IN_DATE_TIME)","lastModifiedDate":"2021-10-18"},{"lineNumber":87,"author":{"gitId":"tryyang2001"},"content":"                    .append(ItemList.LS);","lastModifiedDate":"2021-10-17"},{"lineNumber":88,"author":{"gitId":"tryyang2001"},"content":"            return foodListInString.toString().stripTrailing();","lastModifiedDate":"2021-10-17"},{"lineNumber":89,"author":{"gitId":"tryyang2001"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":90,"author":{"gitId":"tryyang2001"},"content":"        processListToString(date, timePeriod, foodListInString, subList);","lastModifiedDate":"2021-10-18"},{"lineNumber":91,"author":{"gitId":"tryyang2001"},"content":"        return foodListInString.toString().stripTrailing();","lastModifiedDate":"2021-10-17"},{"lineNumber":92,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":93,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":94,"author":{"gitId":"tryyang2001"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":95,"author":{"gitId":"tryyang2001"},"content":"     * Deletes a food item according to its index number.","lastModifiedDate":"2021-10-08"},{"lineNumber":96,"author":{"gitId":"tryyang2001"},"content":"     *","lastModifiedDate":"2021-10-07"},{"lineNumber":97,"author":{"gitId":"tryyang2001"},"content":"     * @param index The index of the food item","lastModifiedDate":"2021-10-06"},{"lineNumber":98,"author":{"gitId":"xingjie99"},"content":"     * @return Food object removed.","lastModifiedDate":"2021-10-19"},{"lineNumber":99,"author":{"gitId":"tryyang2001"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":100,"author":{"gitId":"tryyang2001"},"content":"    public Food deleteFood(int index) {","lastModifiedDate":"2021-10-10"},{"lineNumber":101,"author":{"gitId":"tlyi"},"content":"        return this.foodRecords.remove(index);","lastModifiedDate":"2021-10-19"},{"lineNumber":102,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":103,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":104,"author":{"gitId":"tryyang2001"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":105,"author":{"gitId":"tryyang2001"},"content":"     * Deletes all the food items from the food list.","lastModifiedDate":"2021-10-08"},{"lineNumber":106,"author":{"gitId":"tryyang2001"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":107,"author":{"gitId":"tryyang2001"},"content":"    public void clearFoodList() {","lastModifiedDate":"2021-10-11"},{"lineNumber":108,"author":{"gitId":"tryyang2001"},"content":"        this.foodRecords.clear();","lastModifiedDate":"2021-10-06"},{"lineNumber":109,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":110,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":111,"author":{"gitId":"tryyang2001"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":112,"author":{"gitId":"tryyang2001"},"content":"     * Computes the sum of calorie of all food items in the food list.","lastModifiedDate":"2021-10-14"},{"lineNumber":113,"author":{"gitId":"tryyang2001"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":114,"author":{"gitId":"tryyang2001"},"content":"     * @return Integer value of the sum of calorie of all food","lastModifiedDate":"2021-10-14"},{"lineNumber":115,"author":{"gitId":"tryyang2001"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":116,"author":{"gitId":"tryyang2001"},"content":"    @Override","lastModifiedDate":"2021-10-16"},{"lineNumber":117,"author":{"gitId":"tryyang2001"},"content":"    public int getTotalCalories() {","lastModifiedDate":"2021-10-13"},{"lineNumber":118,"author":{"gitId":"tryyang2001"},"content":"        int sumOfFoodCalorie \u003d foodRecords.stream().mapToInt(Food::getCalories).sum();","lastModifiedDate":"2021-10-18"},{"lineNumber":119,"author":{"gitId":"tryyang2001"},"content":"        assert sumOfFoodCalorie \u003e\u003d 0 : \"Total calories cannot less than 0\";","lastModifiedDate":"2021-10-14"},{"lineNumber":120,"author":{"gitId":"tryyang2001"},"content":"        return sumOfFoodCalorie;","lastModifiedDate":"2021-10-14"},{"lineNumber":121,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":122,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":123,"author":{"gitId":"tryyang2001"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":124,"author":{"gitId":"tryyang2001"},"content":"     * Computes the sum of calorie of all food items consumed in a specific date.","lastModifiedDate":"2021-10-16"},{"lineNumber":125,"author":{"gitId":"tryyang2001"},"content":"     *","lastModifiedDate":"2021-10-16"},{"lineNumber":126,"author":{"gitId":"tryyang2001"},"content":"     * @param date The date to query all the consumed food items","lastModifiedDate":"2021-10-16"},{"lineNumber":127,"author":{"gitId":"tryyang2001"},"content":"     * @return Integer value of the sum of calorie of all food items consumed in the given date","lastModifiedDate":"2021-10-16"},{"lineNumber":128,"author":{"gitId":"tryyang2001"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":129,"author":{"gitId":"tryyang2001"},"content":"    public int getTotalCaloriesWithDate(LocalDate date) {","lastModifiedDate":"2021-10-16"},{"lineNumber":130,"author":{"gitId":"tryyang2001"},"content":"        int sumOfFoodCalorie \u003d foodRecords.stream()","lastModifiedDate":"2021-10-18"},{"lineNumber":131,"author":{"gitId":"tryyang2001"},"content":"                .filter(f -\u003e f.getDate().isEqual(date))","lastModifiedDate":"2021-10-18"},{"lineNumber":132,"author":{"gitId":"tryyang2001"},"content":"                .mapToInt(Food::getCalories)","lastModifiedDate":"2021-10-18"},{"lineNumber":133,"author":{"gitId":"tryyang2001"},"content":"                .sum();","lastModifiedDate":"2021-10-18"},{"lineNumber":134,"author":{"gitId":"tryyang2001"},"content":"        assert sumOfFoodCalorie \u003e\u003d 0 : \"Total calories cannot less than 0\";","lastModifiedDate":"2021-10-18"},{"lineNumber":135,"author":{"gitId":"tryyang2001"},"content":"        return sumOfFoodCalorie;","lastModifiedDate":"2021-10-18"},{"lineNumber":136,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":137,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":138,"author":{"gitId":"tryyang2001"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":139,"author":{"gitId":"tryyang2001"},"content":"     * Sorts the food list in ascending format according to the date and time.","lastModifiedDate":"2021-10-16"},{"lineNumber":140,"author":{"gitId":"tryyang2001"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":141,"author":{"gitId":"tryyang2001"},"content":"    public void sortFoodList() {","lastModifiedDate":"2021-10-16"},{"lineNumber":142,"author":{"gitId":"tryyang2001"},"content":"        this.foodRecords.sort(Comparator.comparing(Food::getDateTime));","lastModifiedDate":"2021-10-16"},{"lineNumber":143,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":144,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":145,"author":{"gitId":"tryyang2001"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":146,"author":{"gitId":"tryyang2001"},"content":"     * Counts the number of food items consumed at night.","lastModifiedDate":"2021-10-17"},{"lineNumber":147,"author":{"gitId":"tryyang2001"},"content":"     *","lastModifiedDate":"2021-10-17"},{"lineNumber":148,"author":{"gitId":"tryyang2001"},"content":"     * @return The integer value count which indicates the number of food items consumed at night","lastModifiedDate":"2021-10-17"},{"lineNumber":149,"author":{"gitId":"tryyang2001"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":150,"author":{"gitId":"tryyang2001"},"content":"    public int getSupperCount() {","lastModifiedDate":"2021-10-17"},{"lineNumber":151,"author":{"gitId":"tryyang2001"},"content":"        return (int) foodRecords.stream().filter(f -\u003e f.getTimePeriod().equals(TimePeriod.Night)).count();","lastModifiedDate":"2021-10-18"},{"lineNumber":152,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":153,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":154,"author":{"gitId":"tryyang2001"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":155,"author":{"gitId":"tryyang2001"},"content":"     * Helper method used in convertToStringBySpecificDateAndTime to append strings to the string builder.","lastModifiedDate":"2021-10-18"},{"lineNumber":156,"author":{"gitId":"tryyang2001"},"content":"     *","lastModifiedDate":"2021-10-18"},{"lineNumber":157,"author":{"gitId":"tryyang2001"},"content":"     * @param date             The date to query the food list","lastModifiedDate":"2021-10-18"},{"lineNumber":158,"author":{"gitId":"tryyang2001"},"content":"     * @param timePeriod       The time period to query the food list","lastModifiedDate":"2021-10-18"},{"lineNumber":159,"author":{"gitId":"tryyang2001"},"content":"     * @param foodListInString The StringBuilder food list which contains the correct output string","lastModifiedDate":"2021-10-18"},{"lineNumber":160,"author":{"gitId":"tryyang2001"},"content":"     * @param subList          The array list of food items that contains all the food items with same date and time","lastModifiedDate":"2021-10-18"},{"lineNumber":161,"author":{"gitId":"tryyang2001"},"content":"     *                         period as the given date and timePeriod","lastModifiedDate":"2021-10-18"},{"lineNumber":162,"author":{"gitId":"tryyang2001"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":163,"author":{"gitId":"tryyang2001"},"content":"    private void processListToString(LocalDate date, TimePeriod timePeriod,","lastModifiedDate":"2021-10-18"},{"lineNumber":164,"author":{"gitId":"tryyang2001"},"content":"                                     StringBuilder foodListInString, ArrayList\u003cFood\u003e subList) {","lastModifiedDate":"2021-10-18"},{"lineNumber":165,"author":{"gitId":"tryyang2001"},"content":"        FoodList timePeriodList \u003d new FoodList();","lastModifiedDate":"2021-10-18"},{"lineNumber":166,"author":{"gitId":"tryyang2001"},"content":"        for (Food f : subList) {","lastModifiedDate":"2021-10-18"},{"lineNumber":167,"author":{"gitId":"tryyang2001"},"content":"            if (f.getTimePeriod().equals(timePeriod)) {","lastModifiedDate":"2021-10-18"},{"lineNumber":168,"author":{"gitId":"tryyang2001"},"content":"                timePeriodList.addFood(f);","lastModifiedDate":"2021-10-18"},{"lineNumber":169,"author":{"gitId":"tryyang2001"},"content":"            }","lastModifiedDate":"2021-10-17"},{"lineNumber":170,"author":{"gitId":"tryyang2001"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":171,"author":{"gitId":"tryyang2001"},"content":"        convertItemCountToString(foodListInString, subList.size(), date, MESSAGE_FOOD_CONSUMED);","lastModifiedDate":"2021-10-18"},{"lineNumber":172,"author":{"gitId":"tryyang2001"},"content":"        addTimePeriodMessage(timePeriod, foodListInString);","lastModifiedDate":"2021-10-18"},{"lineNumber":173,"author":{"gitId":"tryyang2001"},"content":"        for (int i \u003d 1; i \u003c\u003d timePeriodList.getSize(); i++) {","lastModifiedDate":"2021-10-18"},{"lineNumber":174,"author":{"gitId":"tryyang2001"},"content":"            convertItemToString(foodListInString, i, timePeriodList.getFood(i - 1));","lastModifiedDate":"2021-10-18"},{"lineNumber":175,"author":{"gitId":"tryyang2001"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":176,"author":{"gitId":"tryyang2001"},"content":"        convertTotalCaloriesToString(","lastModifiedDate":"2021-10-18"},{"lineNumber":177,"author":{"gitId":"tryyang2001"},"content":"                foodListInString,","lastModifiedDate":"2021-10-18"},{"lineNumber":178,"author":{"gitId":"tryyang2001"},"content":"                subList.stream().mapToInt(Food::getCalories).sum(),","lastModifiedDate":"2021-10-18"},{"lineNumber":179,"author":{"gitId":"tryyang2001"},"content":"                MESSAGE_TOTAL_CALORIE_CONSUMED);","lastModifiedDate":"2021-10-18"},{"lineNumber":180,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":181,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":182,"author":{"gitId":"tryyang2001"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":183,"author":{"gitId":"tryyang2001"},"content":"     * Helper method used in convertToStringBySpecificDateAndTime to filter the original food list.","lastModifiedDate":"2021-10-18"},{"lineNumber":184,"author":{"gitId":"tryyang2001"},"content":"     *","lastModifiedDate":"2021-10-18"},{"lineNumber":185,"author":{"gitId":"tryyang2001"},"content":"     * @param date       The date to query the food list","lastModifiedDate":"2021-10-18"},{"lineNumber":186,"author":{"gitId":"tryyang2001"},"content":"     * @param timePeriod The time period to query the food list","lastModifiedDate":"2021-10-18"},{"lineNumber":187,"author":{"gitId":"tryyang2001"},"content":"     * @return The array list which contains food items with same date and time period as provided","lastModifiedDate":"2021-10-18"},{"lineNumber":188,"author":{"gitId":"tryyang2001"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":189,"author":{"gitId":"tryyang2001"},"content":"    private ArrayList\u003cFood\u003e filterListAccordingToDateAndTimePeriod(LocalDate date, TimePeriod timePeriod) {","lastModifiedDate":"2021-10-18"},{"lineNumber":190,"author":{"gitId":"tryyang2001"},"content":"        return (ArrayList\u003cFood\u003e) this.foodRecords.stream()","lastModifiedDate":"2021-10-18"},{"lineNumber":191,"author":{"gitId":"tryyang2001"},"content":"                .filter(f -\u003e f.getDate().isEqual(date) \u0026\u0026 f.getTimePeriod().equals(timePeriod))","lastModifiedDate":"2021-10-18"},{"lineNumber":192,"author":{"gitId":"tryyang2001"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2021-10-18"},{"lineNumber":193,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":194,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":195,"author":{"gitId":"tryyang2001"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":196,"author":{"gitId":"tryyang2001"},"content":"     * Helper method used in processListToString to retrieve the relevant message to the provided time period.","lastModifiedDate":"2021-10-18"},{"lineNumber":197,"author":{"gitId":"tryyang2001"},"content":"     *","lastModifiedDate":"2021-10-18"},{"lineNumber":198,"author":{"gitId":"tryyang2001"},"content":"     * @param timePeriod       The time period to query the food list","lastModifiedDate":"2021-10-18"},{"lineNumber":199,"author":{"gitId":"tryyang2001"},"content":"     * @param foodListInString The StringBuilder food list which contains the correct output string","lastModifiedDate":"2021-10-18"},{"lineNumber":200,"author":{"gitId":"tryyang2001"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":201,"author":{"gitId":"tryyang2001"},"content":"    private void addTimePeriodMessage(TimePeriod timePeriod, StringBuilder foodListInString) {","lastModifiedDate":"2021-10-17"},{"lineNumber":202,"author":{"gitId":"tryyang2001"},"content":"        switch (timePeriod) {","lastModifiedDate":"2021-10-17"},{"lineNumber":203,"author":{"gitId":"tryyang2001"},"content":"        case Morning:","lastModifiedDate":"2021-10-17"},{"lineNumber":204,"author":{"gitId":"tryyang2001"},"content":"            foodListInString.append(MESSAGE_MORNING).append(ItemList.LS);","lastModifiedDate":"2021-10-17"},{"lineNumber":205,"author":{"gitId":"tryyang2001"},"content":"            break;","lastModifiedDate":"2021-10-17"},{"lineNumber":206,"author":{"gitId":"tryyang2001"},"content":"        case Afternoon:","lastModifiedDate":"2021-10-17"},{"lineNumber":207,"author":{"gitId":"tryyang2001"},"content":"            foodListInString.append(MESSAGE_AFTERNOON).append(ItemList.LS);","lastModifiedDate":"2021-10-17"},{"lineNumber":208,"author":{"gitId":"tryyang2001"},"content":"            break;","lastModifiedDate":"2021-10-17"},{"lineNumber":209,"author":{"gitId":"tryyang2001"},"content":"        case Evening:","lastModifiedDate":"2021-10-17"},{"lineNumber":210,"author":{"gitId":"tryyang2001"},"content":"            foodListInString.append(MESSAGE_EVENING).append(ItemList.LS);","lastModifiedDate":"2021-10-17"},{"lineNumber":211,"author":{"gitId":"tryyang2001"},"content":"            break;","lastModifiedDate":"2021-10-17"},{"lineNumber":212,"author":{"gitId":"tryyang2001"},"content":"        case Night:","lastModifiedDate":"2021-10-17"},{"lineNumber":213,"author":{"gitId":"tryyang2001"},"content":"            foodListInString.append(MESSAGE_NIGHT).append(ItemList.LS);","lastModifiedDate":"2021-10-17"},{"lineNumber":214,"author":{"gitId":"tryyang2001"},"content":"            break;","lastModifiedDate":"2021-10-17"},{"lineNumber":215,"author":{"gitId":"tryyang2001"},"content":"        default:","lastModifiedDate":"2021-10-17"},{"lineNumber":216,"author":{"gitId":"tryyang2001"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":217,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":218,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":219,"author":{"gitId":"tryyang2001"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":220,"author":{"gitId":"tryyang2001"},"content":"     * Helper method used in convertToString for extracting each food list","lastModifiedDate":"2021-10-18"},{"lineNumber":221,"author":{"gitId":"tryyang2001"},"content":"     * according to the date and time presented in the entire food list.","lastModifiedDate":"2021-10-18"},{"lineNumber":222,"author":{"gitId":"tryyang2001"},"content":"     *","lastModifiedDate":"2021-10-17"},{"lineNumber":223,"author":{"gitId":"tryyang2001"},"content":"     * @return StringBuilder type string which contains food lists with different date and time","lastModifiedDate":"2021-10-17"},{"lineNumber":224,"author":{"gitId":"tryyang2001"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":225,"author":{"gitId":"tryyang2001"},"content":"    private StringBuilder extractFoodListByEachDateAndTimePeriod() {","lastModifiedDate":"2021-10-18"},{"lineNumber":226,"author":{"gitId":"tryyang2001"},"content":"        StringBuilder foodListInString \u003d new StringBuilder(); //declares as StringBuilder for mutable String object","lastModifiedDate":"2021-10-17"},{"lineNumber":227,"author":{"gitId":"tryyang2001"},"content":"        for (int index \u003d 0; index \u003c foodRecords.size(); index++) {","lastModifiedDate":"2021-10-17"},{"lineNumber":228,"author":{"gitId":"tryyang2001"},"content":"            LocalDate currentDate \u003d foodRecords.get(index).getDate();","lastModifiedDate":"2021-10-17"},{"lineNumber":229,"author":{"gitId":"tryyang2001"},"content":"            FoodList subList \u003d new FoodList();","lastModifiedDate":"2021-10-17"},{"lineNumber":230,"author":{"gitId":"tryyang2001"},"content":"            while (index \u003c foodRecords.size() \u0026\u0026 currentDate.isEqual(foodRecords.get(index).getDate())) {","lastModifiedDate":"2021-10-17"},{"lineNumber":231,"author":{"gitId":"tryyang2001"},"content":"                subList.addFood(foodRecords.get(index++));","lastModifiedDate":"2021-10-17"},{"lineNumber":232,"author":{"gitId":"tryyang2001"},"content":"            }","lastModifiedDate":"2021-10-17"},{"lineNumber":233,"author":{"gitId":"tryyang2001"},"content":"            assert subList.getSize() \u003e 0 : \"Sub list should not be empty.\";","lastModifiedDate":"2021-10-17"},{"lineNumber":234,"author":{"gitId":"tryyang2001"},"content":"            convertItemCountToString(foodListInString, subList.getSize(), currentDate, MESSAGE_FOOD_CONSUMED);","lastModifiedDate":"2021-10-18"},{"lineNumber":235,"author":{"gitId":"tryyang2001"},"content":"            separateDifferentTimePeriodFoodList(foodListInString, subList);","lastModifiedDate":"2021-10-17"},{"lineNumber":236,"author":{"gitId":"tryyang2001"},"content":"            convertTotalCaloriesToString(","lastModifiedDate":"2021-10-18"},{"lineNumber":237,"author":{"gitId":"tryyang2001"},"content":"                    foodListInString,","lastModifiedDate":"2021-10-18"},{"lineNumber":238,"author":{"gitId":"tryyang2001"},"content":"                    this.getTotalCaloriesWithDate(currentDate),","lastModifiedDate":"2021-10-18"},{"lineNumber":239,"author":{"gitId":"tryyang2001"},"content":"                    MESSAGE_TOTAL_CALORIE_CONSUMED);","lastModifiedDate":"2021-10-18"},{"lineNumber":240,"author":{"gitId":"tryyang2001"},"content":"            if (index \u003c foodRecords.size()) {","lastModifiedDate":"2021-10-17"},{"lineNumber":241,"author":{"gitId":"tryyang2001"},"content":"                foodListInString.append(ItemList.LS); //prevents last line spacing","lastModifiedDate":"2021-10-17"},{"lineNumber":242,"author":{"gitId":"tryyang2001"},"content":"            }","lastModifiedDate":"2021-10-17"},{"lineNumber":243,"author":{"gitId":"tryyang2001"},"content":"            index--; //prevents double adding of index","lastModifiedDate":"2021-10-17"},{"lineNumber":244,"author":{"gitId":"tryyang2001"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":245,"author":{"gitId":"tryyang2001"},"content":"        return foodListInString;","lastModifiedDate":"2021-10-17"},{"lineNumber":246,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":247,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":248,"author":{"gitId":"tryyang2001"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":249,"author":{"gitId":"tryyang2001"},"content":"     * Helper method used in extractFoodListByEachDateAndTimePeriod to extract food list","lastModifiedDate":"2021-10-18"},{"lineNumber":250,"author":{"gitId":"tryyang2001"},"content":"     * on the same date according to its different time period.","lastModifiedDate":"2021-10-18"},{"lineNumber":251,"author":{"gitId":"tryyang2001"},"content":"     *","lastModifiedDate":"2021-10-17"},{"lineNumber":252,"author":{"gitId":"tryyang2001"},"content":"     * @param foodListInString The StringBuilder food list.","lastModifiedDate":"2021-10-17"},{"lineNumber":253,"author":{"gitId":"tryyang2001"},"content":"     * @param subList          FoodList which contains only the food items for the same date","lastModifiedDate":"2021-10-17"},{"lineNumber":254,"author":{"gitId":"tryyang2001"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":255,"author":{"gitId":"tryyang2001"},"content":"    private void separateDifferentTimePeriodFoodList(StringBuilder foodListInString, FoodList subList) {","lastModifiedDate":"2021-10-17"},{"lineNumber":256,"author":{"gitId":"tryyang2001"},"content":"        FoodList morningList \u003d new FoodList();","lastModifiedDate":"2021-10-17"},{"lineNumber":257,"author":{"gitId":"tryyang2001"},"content":"        FoodList afternoonList \u003d new FoodList();","lastModifiedDate":"2021-10-17"},{"lineNumber":258,"author":{"gitId":"tryyang2001"},"content":"        FoodList eveningList \u003d new FoodList();","lastModifiedDate":"2021-10-17"},{"lineNumber":259,"author":{"gitId":"tryyang2001"},"content":"        FoodList midnightList \u003d new FoodList();","lastModifiedDate":"2021-10-17"},{"lineNumber":260,"author":{"gitId":"tryyang2001"},"content":"        extractFoodListByEachTimePeriod(subList, morningList, afternoonList, eveningList, midnightList);","lastModifiedDate":"2021-10-17"},{"lineNumber":261,"author":{"gitId":"tryyang2001"},"content":"        appendWithList(foodListInString, morningList, MESSAGE_MORNING);","lastModifiedDate":"2021-10-17"},{"lineNumber":262,"author":{"gitId":"tryyang2001"},"content":"        appendWithList(foodListInString, afternoonList, MESSAGE_AFTERNOON);","lastModifiedDate":"2021-10-17"},{"lineNumber":263,"author":{"gitId":"tryyang2001"},"content":"        appendWithList(foodListInString, eveningList, MESSAGE_EVENING);","lastModifiedDate":"2021-10-17"},{"lineNumber":264,"author":{"gitId":"tryyang2001"},"content":"        appendWithList(foodListInString, midnightList, MESSAGE_NIGHT);","lastModifiedDate":"2021-10-17"},{"lineNumber":265,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":266,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":267,"author":{"gitId":"tryyang2001"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":268,"author":{"gitId":"tryyang2001"},"content":"     * Helper method used in separateDifferentTimePeriodFoodList to append","lastModifiedDate":"2021-10-18"},{"lineNumber":269,"author":{"gitId":"tryyang2001"},"content":"     * the StringBuilder foodListInString with each time period food list.","lastModifiedDate":"2021-10-18"},{"lineNumber":270,"author":{"gitId":"tryyang2001"},"content":"     *","lastModifiedDate":"2021-10-17"},{"lineNumber":271,"author":{"gitId":"tryyang2001"},"content":"     * @param foodListInString The StringBuilder food list which contains the correct output string","lastModifiedDate":"2021-10-17"},{"lineNumber":272,"author":{"gitId":"tryyang2001"},"content":"     * @param timePeriodList   The food list that contains food items that consumed within the time period","lastModifiedDate":"2021-10-17"},{"lineNumber":273,"author":{"gitId":"tryyang2001"},"content":"     * @param periodMessage    The message to indicate the time period","lastModifiedDate":"2021-10-17"},{"lineNumber":274,"author":{"gitId":"tryyang2001"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":275,"author":{"gitId":"tryyang2001"},"content":"    private void appendWithList(StringBuilder foodListInString, FoodList timePeriodList, String periodMessage) {","lastModifiedDate":"2021-10-17"},{"lineNumber":276,"author":{"gitId":"tryyang2001"},"content":"        if (timePeriodList.getSize() \u003e 0) {","lastModifiedDate":"2021-10-17"},{"lineNumber":277,"author":{"gitId":"tryyang2001"},"content":"            foodListInString.append(periodMessage).append(ItemList.LS);","lastModifiedDate":"2021-10-17"},{"lineNumber":278,"author":{"gitId":"tryyang2001"},"content":"            for (int i \u003d 1; i \u003c\u003d timePeriodList.getSize(); i++) {","lastModifiedDate":"2021-10-17"},{"lineNumber":279,"author":{"gitId":"tryyang2001"},"content":"                convertItemToString(foodListInString, i, timePeriodList.getFood(i - 1));","lastModifiedDate":"2021-10-18"},{"lineNumber":280,"author":{"gitId":"tryyang2001"},"content":"            }","lastModifiedDate":"2021-10-17"},{"lineNumber":281,"author":{"gitId":"tryyang2001"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":282,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":283,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":284,"author":{"gitId":"tryyang2001"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":285,"author":{"gitId":"tryyang2001"},"content":"     * Helper method used in separateDifferentTimePeriodFoodList to extract the larger subList into 4 smaller lists","lastModifiedDate":"2021-10-18"},{"lineNumber":286,"author":{"gitId":"tryyang2001"},"content":"     * which contain food items with same date according to the time period.","lastModifiedDate":"2021-10-18"},{"lineNumber":287,"author":{"gitId":"tryyang2001"},"content":"     *","lastModifiedDate":"2021-10-18"},{"lineNumber":288,"author":{"gitId":"tryyang2001"},"content":"     * @param subList       The food list that contains all the food items consumed on the same date","lastModifiedDate":"2021-10-18"},{"lineNumber":289,"author":{"gitId":"tryyang2001"},"content":"     * @param morningList   The food list that contains all the food items consumed in the morning of a given date","lastModifiedDate":"2021-10-18"},{"lineNumber":290,"author":{"gitId":"tryyang2001"},"content":"     * @param afternoonList The food list that contains all the food items consumed in the afternoon of a given date","lastModifiedDate":"2021-10-18"},{"lineNumber":291,"author":{"gitId":"tryyang2001"},"content":"     * @param eveningList   The food list that contains all the food items consumed in the evening of a given date","lastModifiedDate":"2021-10-18"},{"lineNumber":292,"author":{"gitId":"tryyang2001"},"content":"     * @param nightList     The food list that contains all the food items consumed at night of a given date","lastModifiedDate":"2021-10-18"},{"lineNumber":293,"author":{"gitId":"tryyang2001"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":294,"author":{"gitId":"tryyang2001"},"content":"    private void extractFoodListByEachTimePeriod(FoodList subList, FoodList morningList, FoodList afternoonList,","lastModifiedDate":"2021-10-17"},{"lineNumber":295,"author":{"gitId":"tryyang2001"},"content":"                                                 FoodList eveningList, FoodList nightList) {","lastModifiedDate":"2021-10-17"},{"lineNumber":296,"author":{"gitId":"tryyang2001"},"content":"        for (int i \u003d 1; i \u003c\u003d subList.getSize(); i++) {","lastModifiedDate":"2021-10-17"},{"lineNumber":297,"author":{"gitId":"tryyang2001"},"content":"            switch (subList.getFood(i - 1).getTimePeriod()) {","lastModifiedDate":"2021-10-17"},{"lineNumber":298,"author":{"gitId":"tryyang2001"},"content":"            case Morning:","lastModifiedDate":"2021-10-17"},{"lineNumber":299,"author":{"gitId":"tryyang2001"},"content":"                morningList.addFood(subList.getFood(i - 1));","lastModifiedDate":"2021-10-17"},{"lineNumber":300,"author":{"gitId":"tryyang2001"},"content":"                break;","lastModifiedDate":"2021-10-17"},{"lineNumber":301,"author":{"gitId":"tryyang2001"},"content":"            case Afternoon:","lastModifiedDate":"2021-10-17"},{"lineNumber":302,"author":{"gitId":"tryyang2001"},"content":"                afternoonList.addFood(subList.getFood(i - 1));","lastModifiedDate":"2021-10-17"},{"lineNumber":303,"author":{"gitId":"tryyang2001"},"content":"                break;","lastModifiedDate":"2021-10-17"},{"lineNumber":304,"author":{"gitId":"tryyang2001"},"content":"            case Evening:","lastModifiedDate":"2021-10-17"},{"lineNumber":305,"author":{"gitId":"tryyang2001"},"content":"                eveningList.addFood(subList.getFood(i - 1));","lastModifiedDate":"2021-10-17"},{"lineNumber":306,"author":{"gitId":"tryyang2001"},"content":"                break;","lastModifiedDate":"2021-10-17"},{"lineNumber":307,"author":{"gitId":"tryyang2001"},"content":"            case Night:","lastModifiedDate":"2021-10-17"},{"lineNumber":308,"author":{"gitId":"tryyang2001"},"content":"                nightList.addFood(subList.getFood(i - 1));","lastModifiedDate":"2021-10-17"},{"lineNumber":309,"author":{"gitId":"tryyang2001"},"content":"                break;","lastModifiedDate":"2021-10-17"},{"lineNumber":310,"author":{"gitId":"tryyang2001"},"content":"            default:","lastModifiedDate":"2021-10-17"},{"lineNumber":311,"author":{"gitId":"tryyang2001"},"content":"            }","lastModifiedDate":"2021-10-17"},{"lineNumber":312,"author":{"gitId":"tryyang2001"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":313,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":314,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":315,"author":{"gitId":"tryyang2001"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":316,"author":{"gitId":"tryyang2001"},"content":"     * Helper method used in convertToStringBySpecificDate for extracting","lastModifiedDate":"2021-10-18"},{"lineNumber":317,"author":{"gitId":"tryyang2001"},"content":"     * food list which contains all the food item consumed on the date.","lastModifiedDate":"2021-10-18"},{"lineNumber":318,"author":{"gitId":"tryyang2001"},"content":"     *","lastModifiedDate":"2021-10-17"},{"lineNumber":319,"author":{"gitId":"tryyang2001"},"content":"     * @param date The date to query all the food items consumed","lastModifiedDate":"2021-10-17"},{"lineNumber":320,"author":{"gitId":"tryyang2001"},"content":"     * @return StringBuilder type string which contains a food list with the given date","lastModifiedDate":"2021-10-17"},{"lineNumber":321,"author":{"gitId":"tryyang2001"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":322,"author":{"gitId":"tryyang2001"},"content":"    private StringBuilder extractFoodListBySpecificDate(LocalDate date) {","lastModifiedDate":"2021-10-17"},{"lineNumber":323,"author":{"gitId":"tryyang2001"},"content":"        StringBuilder foodListInString \u003d new StringBuilder(); //declares as StringBuilder for mutable String object","lastModifiedDate":"2021-10-17"},{"lineNumber":324,"author":{"gitId":"tryyang2001"},"content":"        ArrayList\u003cFood\u003e subList \u003d (ArrayList\u003cFood\u003e) this.foodRecords.stream()","lastModifiedDate":"2021-10-17"},{"lineNumber":325,"author":{"gitId":"tryyang2001"},"content":"                .filter(f -\u003e f.getDate().isEqual(date))","lastModifiedDate":"2021-10-17"},{"lineNumber":326,"author":{"gitId":"tryyang2001"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2021-10-17"},{"lineNumber":327,"author":{"gitId":"tryyang2001"},"content":"        if (subList.size() \u003d\u003d 0) {","lastModifiedDate":"2021-10-17"},{"lineNumber":328,"author":{"gitId":"tryyang2001"},"content":"            foodListInString","lastModifiedDate":"2021-10-17"},{"lineNumber":329,"author":{"gitId":"tryyang2001"},"content":"                    .append(MESSAGE_NO_FOOD_IN_DATE)","lastModifiedDate":"2021-10-17"},{"lineNumber":330,"author":{"gitId":"tryyang2001"},"content":"                    .append(ItemList.LS);","lastModifiedDate":"2021-10-17"},{"lineNumber":331,"author":{"gitId":"tryyang2001"},"content":"            return foodListInString;","lastModifiedDate":"2021-10-17"},{"lineNumber":332,"author":{"gitId":"tryyang2001"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":333,"author":{"gitId":"tryyang2001"},"content":"        convertItemCountToString(foodListInString, subList.size(), date, MESSAGE_FOOD_CONSUMED);","lastModifiedDate":"2021-10-18"},{"lineNumber":334,"author":{"gitId":"tryyang2001"},"content":"        for (int i \u003d 1; i \u003c\u003d subList.size(); i++) {","lastModifiedDate":"2021-10-17"},{"lineNumber":335,"author":{"gitId":"tryyang2001"},"content":"            convertItemToString(foodListInString, i, subList.get(i - 1));","lastModifiedDate":"2021-10-18"},{"lineNumber":336,"author":{"gitId":"tryyang2001"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":337,"author":{"gitId":"tryyang2001"},"content":"        convertTotalCaloriesToString(","lastModifiedDate":"2021-10-18"},{"lineNumber":338,"author":{"gitId":"tryyang2001"},"content":"                foodListInString,","lastModifiedDate":"2021-10-18"},{"lineNumber":339,"author":{"gitId":"tryyang2001"},"content":"                this.getTotalCaloriesWithDate(date),","lastModifiedDate":"2021-10-18"},{"lineNumber":340,"author":{"gitId":"tryyang2001"},"content":"                MESSAGE_TOTAL_CALORIE_CONSUMED);","lastModifiedDate":"2021-10-18"},{"lineNumber":341,"author":{"gitId":"tryyang2001"},"content":"        return foodListInString;","lastModifiedDate":"2021-10-17"},{"lineNumber":342,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":343,"author":{"gitId":"tryyang2001"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"weidak":2,"tryyang2001":338,"xingjie99":1,"tlyi":2}},{"path":"src/main/java/seedu/duke/item/food/TimePeriod.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tryyang2001"},"content":"package seedu.duke.item.food;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":3,"author":{"gitId":"tryyang2001"},"content":"public enum TimePeriod {","lastModifiedDate":"2021-10-17"},{"lineNumber":4,"author":{"gitId":"tryyang2001"},"content":"    Morning, Afternoon, Evening, Night","lastModifiedDate":"2021-10-17"},{"lineNumber":5,"author":{"gitId":"tryyang2001"},"content":"}","lastModifiedDate":"2021-10-17"}],"authorContributionMap":{"tryyang2001":5}},{"path":"src/main/java/seedu/duke/parser/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.parser;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"tlyi"},"content":"import seedu.duke.commands.AddExerciseBankCommand;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"tlyi"},"content":"import seedu.duke.commands.AddExerciseCommand;","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"tlyi"},"content":"import seedu.duke.commands.AddFoodBankCommand;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"tlyi"},"content":"import seedu.duke.commands.AddFoodCommand;","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"tlyi"},"content":"import seedu.duke.commands.AddFutureExerciseCommand;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"xingjie99"},"content":"import seedu.duke.commands.AddRecurringExerciseCommand;","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"tlyi"},"content":"import seedu.duke.commands.ByeCommand;","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"tlyi"},"content":"import seedu.duke.commands.CalculateBmiCommand;","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"tlyi"},"content":"import seedu.duke.commands.CalculateBmiWithProfileCommand;","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"tlyi"},"content":"import seedu.duke.commands.ChangeHeightCommand;","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"tlyi"},"content":"import seedu.duke.commands.ChangeNameCommand;","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"tlyi"},"content":"import seedu.duke.commands.ChangeWeightCommand;","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"tlyi"},"content":"import seedu.duke.commands.Command;","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"tlyi"},"content":"import seedu.duke.commands.DeleteExerciseBankCommand;","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"tlyi"},"content":"import seedu.duke.commands.DeleteExerciseCommand;","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"tlyi"},"content":"import seedu.duke.commands.DeleteFoodBankCommand;","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"tlyi"},"content":"import seedu.duke.commands.DeleteFoodCommand;","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"tlyi"},"content":"import seedu.duke.commands.DeleteFutureExerciseCommand;","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"tlyi"},"content":"import seedu.duke.commands.HelpCommand;","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"tlyi"},"content":"import seedu.duke.commands.InvalidCommand;","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"tlyi"},"content":"import seedu.duke.commands.OverviewCommand;","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"tlyi"},"content":"import seedu.duke.commands.ProfileCommand;","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"tlyi"},"content":"import seedu.duke.commands.ProfileUpdateCommand;","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"tlyi"},"content":"import seedu.duke.commands.SetGoalCommand;","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"tlyi"},"content":"import seedu.duke.commands.ViewCommand;","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"tlyi"},"content":"import seedu.duke.commands.ViewExerciseBankCommand;","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"tlyi"},"content":"import seedu.duke.commands.ViewExerciseListCommand;","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"tlyi"},"content":"import seedu.duke.commands.ViewFoodBankCommand;","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"tlyi"},"content":"import seedu.duke.commands.ViewFoodListCommand;","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"tlyi"},"content":"import seedu.duke.commands.ViewFutureExerciseListCommand;","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"tlyi"},"content":"import seedu.duke.parser.exceptions.ItemNotSpecifiedException;","lastModifiedDate":"2021-10-10"},{"lineNumber":34,"author":{"gitId":"tlyi"},"content":"import seedu.duke.parser.exceptions.ParamInvalidException;","lastModifiedDate":"2021-10-10"},{"lineNumber":35,"author":{"gitId":"tlyi"},"content":"import seedu.duke.parser.exceptions.ParamMissingException;","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":37,"author":{"gitId":"xingjie99"},"content":"import java.lang.reflect.Array;","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"tlyi"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"tlyi"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"tlyi"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-10-19"},{"lineNumber":41,"author":{"gitId":"tlyi"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-10-19"},{"lineNumber":42,"author":{"gitId":"tlyi"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-10-19"},{"lineNumber":43,"author":{"gitId":"xingjie99"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-20"},{"lineNumber":44,"author":{"gitId":"tryyang2001"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-10-13"},{"lineNumber":45,"author":{"gitId":"tryyang2001"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-13"},{"lineNumber":46,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":47,"author":{"gitId":"tlyi"},"content":"/**","lastModifiedDate":"2021-10-10"},{"lineNumber":48,"author":{"gitId":"tlyi"},"content":" * Parses user input to determine which command to execute.","lastModifiedDate":"2021-10-10"},{"lineNumber":49,"author":{"gitId":"tlyi"},"content":" */","lastModifiedDate":"2021-10-10"},{"lineNumber":50,"author":{"gitId":"tlyi"},"content":"public class Parser {","lastModifiedDate":"2021-10-10"},{"lineNumber":51,"author":{"gitId":"tlyi"},"content":"    protected static final String EMPTY \u003d \"\";","lastModifiedDate":"2021-10-11"},{"lineNumber":52,"author":{"gitId":"tlyi"},"content":"    protected static final String LS \u003d System.lineSeparator();","lastModifiedDate":"2021-10-19"},{"lineNumber":53,"author":{"gitId":"tlyi"},"content":"    protected static final String QUOTATION \u003d \"\\\"\";","lastModifiedDate":"2021-10-19"},{"lineNumber":54,"author":{"gitId":"tlyi"},"content":"    protected static final String MESSAGE_ERROR_COMMAND_DOES_NOT_EXIST \u003d \"Fitbot is unable to understand this command! \"","lastModifiedDate":"2021-10-11"},{"lineNumber":55,"author":{"gitId":"tlyi"},"content":"            + LS + \"Lost? Try typing \" + HelpCommand.MESSAGE_COMMAND_FORMAT + \" to see the list of commands!\";","lastModifiedDate":"2021-10-19"},{"lineNumber":56,"author":{"gitId":"tlyi"},"content":"    protected static final String MESSAGE_ERROR_NO_DESCRIPTION \u003d \"Please input a description for this item!\";","lastModifiedDate":"2021-10-11"},{"lineNumber":57,"author":{"gitId":"tlyi"},"content":"    protected static final String MESSAGE_ERROR_NO_NAME \u003d \"Please input your name!\";","lastModifiedDate":"2021-10-11"},{"lineNumber":58,"author":{"gitId":"tlyi"},"content":"    protected static final String MESSAGE_ERROR_NOT_A_NUMBER \u003d \"Please input %s as a number!\";","lastModifiedDate":"2021-10-19"},{"lineNumber":59,"author":{"gitId":"tlyi"},"content":"    protected static final String MESSAGE_ERROR_NO_CALORIES_INFO \u003d \"Please input the number of calories!\";","lastModifiedDate":"2021-10-11"},{"lineNumber":60,"author":{"gitId":"tlyi"},"content":"    protected static final String MESSAGE_ERROR_INVALID_CALORIES_INFO \u003d \"Please input calories as a number! E.g 123\";","lastModifiedDate":"2021-10-11"},{"lineNumber":61,"author":{"gitId":"tlyi"},"content":"    protected static final String MESSAGE_ERROR_NO_ITEM_NUM \u003d \"Please input the item number!\";","lastModifiedDate":"2021-10-11"},{"lineNumber":62,"author":{"gitId":"tlyi"},"content":"    protected static final String MESSAGE_ERROR_INVALID_ITEM_NUM \u003d \"Please input the item number as a number! E.g 1\";","lastModifiedDate":"2021-10-11"},{"lineNumber":63,"author":{"gitId":"tlyi"},"content":"    protected static final String MESSAGE_ERROR_TOO_MANY_DELIMITERS \u003d \"Please do not use the character \"","lastModifiedDate":"2021-10-12"},{"lineNumber":64,"author":{"gitId":"tlyi"},"content":"            + QUOTATION + Command.COMMAND_PREFIX_DELIMITER + QUOTATION","lastModifiedDate":"2021-10-19"},{"lineNumber":65,"author":{"gitId":"tlyi"},"content":"            + \" in your input other than to specify parameters!\";","lastModifiedDate":"2021-10-12"},{"lineNumber":66,"author":{"gitId":"tlyi"},"content":"    protected static final String FILE_TEXT_DELIMITER \u003d \"|\";","lastModifiedDate":"2021-10-13"},{"lineNumber":67,"author":{"gitId":"tlyi"},"content":"    protected static final String MESSAGE_ERROR_ILLEGAL_CHARACTER \u003d \"Please do not use the character \"","lastModifiedDate":"2021-10-13"},{"lineNumber":68,"author":{"gitId":"tlyi"},"content":"            + QUOTATION + FILE_TEXT_DELIMITER + QUOTATION","lastModifiedDate":"2021-10-19"},{"lineNumber":69,"author":{"gitId":"tlyi"},"content":"            + \" in your input!\";","lastModifiedDate":"2021-10-13"},{"lineNumber":70,"author":{"gitId":"tlyi"},"content":"    protected static final String MESSAGE_ERROR_INVALID_FORMAT \u003d \"Invalid format for this command! \"","lastModifiedDate":"2021-10-19"},{"lineNumber":71,"author":{"gitId":"tlyi"},"content":"            + \"Please follow one of the formats:\";","lastModifiedDate":"2021-10-19"},{"lineNumber":72,"author":{"gitId":"tlyi"},"content":"    protected static final String DATE_TIME_FORMAT \u003d \"dd-MM-yyyy HHmm\";","lastModifiedDate":"2021-10-19"},{"lineNumber":73,"author":{"gitId":"tlyi"},"content":"    protected static final String DATE_FORMAT \u003d \"dd-MM-yyyy\";","lastModifiedDate":"2021-10-19"},{"lineNumber":74,"author":{"gitId":"tlyi"},"content":"    protected static final String TIME_FORMAT \u003d \"HHmm\";","lastModifiedDate":"2021-10-19"},{"lineNumber":75,"author":{"gitId":"tlyi"},"content":"    protected static final String MESSAGE_ERROR_INVALID_DATE_FORMAT \u003d \"Invalid date format! Please input date as \"","lastModifiedDate":"2021-10-19"},{"lineNumber":76,"author":{"gitId":"tlyi"},"content":"            + DATE_FORMAT;","lastModifiedDate":"2021-10-19"},{"lineNumber":77,"author":{"gitId":"tlyi"},"content":"    protected static final String MESSAGE_ERROR_INVALID_TIME_FORMAT \u003d \"Invalid time format! Please input time as \"","lastModifiedDate":"2021-10-19"},{"lineNumber":78,"author":{"gitId":"tlyi"},"content":"            + TIME_FORMAT;","lastModifiedDate":"2021-10-19"},{"lineNumber":79,"author":{"gitId":"xingjie99"},"content":"    protected static final String MESSAGE_ERROR_INVALID_DAY_OF_THE_WEEK \u003d \"Invalid day format! Please input day(s) \"","lastModifiedDate":"2021-10-20"},{"lineNumber":80,"author":{"gitId":"xingjie99"},"content":"            + \"between 1 and 7.\"","lastModifiedDate":"2021-10-20"},{"lineNumber":81,"author":{"gitId":"xingjie99"},"content":"            + LS + \"1 : Monday\"","lastModifiedDate":"2021-10-20"},{"lineNumber":82,"author":{"gitId":"xingjie99"},"content":"            + LS + \"2 : Tuesday\"","lastModifiedDate":"2021-10-20"},{"lineNumber":83,"author":{"gitId":"xingjie99"},"content":"            + LS + \"3 : Wednesday\"","lastModifiedDate":"2021-10-20"},{"lineNumber":84,"author":{"gitId":"xingjie99"},"content":"            + LS + \"4 : Thursday\"","lastModifiedDate":"2021-10-20"},{"lineNumber":85,"author":{"gitId":"xingjie99"},"content":"            + LS + \"5 : Friday\"","lastModifiedDate":"2021-10-20"},{"lineNumber":86,"author":{"gitId":"xingjie99"},"content":"            + LS + \"6 : Saturday\"","lastModifiedDate":"2021-10-20"},{"lineNumber":87,"author":{"gitId":"xingjie99"},"content":"            + LS + \"7 : Sunday\";","lastModifiedDate":"2021-10-20"},{"lineNumber":88,"author":{"gitId":"tlyi"},"content":"    protected static final String MESSAGE_ERROR_NO_DATE \u003d \"Please input the date for this item!\";","lastModifiedDate":"2021-10-19"},{"lineNumber":89,"author":{"gitId":"xingjie99"},"content":"    protected static final String MESSAGE_ERROR_NO_DAY_OF_THE_WEEK \u003d \"Please input the day of reoccurrence \"","lastModifiedDate":"2021-10-20"},{"lineNumber":90,"author":{"gitId":"xingjie99"},"content":"            + \"for this item!\";","lastModifiedDate":"2021-10-20"},{"lineNumber":91,"author":{"gitId":"xingjie99"},"content":"    protected static final String MESSAGE_ERROR_REPEATED_DAY_OF_THE_WEEK \u003d \"Please check your input of the day \"","lastModifiedDate":"2021-10-20"},{"lineNumber":92,"author":{"gitId":"xingjie99"},"content":"            + \"of reoccurrence and make sure that there is no repeated day\";","lastModifiedDate":"2021-10-20"},{"lineNumber":93,"author":{"gitId":"xingjie99"},"content":"    protected static final int MONDAY \u003d 1;","lastModifiedDate":"2021-10-20"},{"lineNumber":94,"author":{"gitId":"xingjie99"},"content":"    protected static final int SUNDAY \u003d 7;","lastModifiedDate":"2021-10-20"},{"lineNumber":95,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":96,"author":{"gitId":"tryyang2001"},"content":"    private static final Logger logger \u003d Logger.getLogger(Parser.class.getName());","lastModifiedDate":"2021-10-13"},{"lineNumber":97,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":98,"author":{"gitId":"tlyi"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":99,"author":{"gitId":"tlyi"},"content":"     * Returns the correct command to be executed depending on user input.","lastModifiedDate":"2021-10-10"},{"lineNumber":100,"author":{"gitId":"tlyi"},"content":"     * Command words are case-insensitive.","lastModifiedDate":"2021-10-10"},{"lineNumber":101,"author":{"gitId":"tlyi"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":102,"author":{"gitId":"tlyi"},"content":"     * @param input Raw user input string","lastModifiedDate":"2021-10-10"},{"lineNumber":103,"author":{"gitId":"tlyi"},"content":"     * @return Command class representing the correct command to be executed","lastModifiedDate":"2021-10-10"},{"lineNumber":104,"author":{"gitId":"tlyi"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":105,"author":{"gitId":"tlyi"},"content":"    public Command parseCommand(String input) {","lastModifiedDate":"2021-10-10"},{"lineNumber":106,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":107,"author":{"gitId":"tlyi"},"content":"        if (hasTextFileDelimiter(input)) {","lastModifiedDate":"2021-10-13"},{"lineNumber":108,"author":{"gitId":"tlyi"},"content":"            return new InvalidCommand(MESSAGE_ERROR_ILLEGAL_CHARACTER);","lastModifiedDate":"2021-10-13"},{"lineNumber":109,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":110,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":111,"author":{"gitId":"tlyi"},"content":"        final String[] commandAndParams \u003d splitInputIntoCommandAndParams(input);","lastModifiedDate":"2021-10-10"},{"lineNumber":112,"author":{"gitId":"tlyi"},"content":"        final String commandWord \u003d commandAndParams[0].toLowerCase(); //case-insensitive (all lower case)","lastModifiedDate":"2021-10-10"},{"lineNumber":113,"author":{"gitId":"tlyi"},"content":"        final String params \u003d commandAndParams[1];","lastModifiedDate":"2021-10-10"},{"lineNumber":114,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":115,"author":{"gitId":"tlyi"},"content":"        switch (commandWord) {","lastModifiedDate":"2021-10-10"},{"lineNumber":116,"author":{"gitId":"tlyi"},"content":"        case Command.COMMAND_WORD_ADD:","lastModifiedDate":"2021-10-10"},{"lineNumber":117,"author":{"gitId":"tlyi"},"content":"            return parseAdd(params);","lastModifiedDate":"2021-10-19"},{"lineNumber":118,"author":{"gitId":"tlyi"},"content":"        case Command.COMMAND_WORD_DELETE:","lastModifiedDate":"2021-10-10"},{"lineNumber":119,"author":{"gitId":"tlyi"},"content":"            return parseDelete(params);","lastModifiedDate":"2021-10-19"},{"lineNumber":120,"author":{"gitId":"tlyi"},"content":"        case Command.COMMAND_WORD_VIEW:","lastModifiedDate":"2021-10-10"},{"lineNumber":121,"author":{"gitId":"tlyi"},"content":"            return parseViewItems(params);","lastModifiedDate":"2021-10-10"},{"lineNumber":122,"author":{"gitId":"tlyi"},"content":"        case Command.COMMAND_WORD_BMI:","lastModifiedDate":"2021-10-10"},{"lineNumber":123,"author":{"gitId":"tlyi"},"content":"            return parseBmi(params);","lastModifiedDate":"2021-10-10"},{"lineNumber":124,"author":{"gitId":"tlyi"},"content":"        case Command.COMMAND_WORD_PROFILE:","lastModifiedDate":"2021-10-13"},{"lineNumber":125,"author":{"gitId":"tlyi"},"content":"            return parseProfile(params);","lastModifiedDate":"2021-10-13"},{"lineNumber":126,"author":{"gitId":"tlyi"},"content":"        case ChangeNameCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-10"},{"lineNumber":127,"author":{"gitId":"tlyi"},"content":"            return new ChangeNameCommand(params);","lastModifiedDate":"2021-10-10"},{"lineNumber":128,"author":{"gitId":"tlyi"},"content":"        case ChangeHeightCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-10"},{"lineNumber":129,"author":{"gitId":"tlyi"},"content":"            return parseChangeHeight(params);","lastModifiedDate":"2021-10-10"},{"lineNumber":130,"author":{"gitId":"tlyi"},"content":"        case ChangeWeightCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-10"},{"lineNumber":131,"author":{"gitId":"tlyi"},"content":"            return parseChangeWeight(params);","lastModifiedDate":"2021-10-10"},{"lineNumber":132,"author":{"gitId":"tlyi"},"content":"        case SetGoalCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-10"},{"lineNumber":133,"author":{"gitId":"tlyi"},"content":"            return parseSetGoal(params);","lastModifiedDate":"2021-10-10"},{"lineNumber":134,"author":{"gitId":"tlyi"},"content":"        case OverviewCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-10"},{"lineNumber":135,"author":{"gitId":"tlyi"},"content":"            return new OverviewCommand();","lastModifiedDate":"2021-10-10"},{"lineNumber":136,"author":{"gitId":"tlyi"},"content":"        case ByeCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-10"},{"lineNumber":137,"author":{"gitId":"tlyi"},"content":"            return new ByeCommand();","lastModifiedDate":"2021-10-10"},{"lineNumber":138,"author":{"gitId":"tlyi"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-10"},{"lineNumber":139,"author":{"gitId":"tlyi"},"content":"            return new HelpCommand();","lastModifiedDate":"2021-10-10"},{"lineNumber":140,"author":{"gitId":"tlyi"},"content":"        default:","lastModifiedDate":"2021-10-10"},{"lineNumber":141,"author":{"gitId":"tlyi"},"content":"            return new InvalidCommand(MESSAGE_ERROR_COMMAND_DOES_NOT_EXIST);","lastModifiedDate":"2021-10-10"},{"lineNumber":142,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":143,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":144,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":145,"author":{"gitId":"tlyi"},"content":"    private Command parseAdd(String params) {","lastModifiedDate":"2021-10-19"},{"lineNumber":146,"author":{"gitId":"tlyi"},"content":"        try {","lastModifiedDate":"2021-10-10"},{"lineNumber":147,"author":{"gitId":"tlyi"},"content":"            final String itemTypePrefix \u003d extractItemTypePrefix(params);","lastModifiedDate":"2021-10-10"},{"lineNumber":148,"author":{"gitId":"tlyi"},"content":"            if (itemTypePrefix.equals(Command.COMMAND_PREFIX_EXERCISE)","lastModifiedDate":"2021-10-19"},{"lineNumber":149,"author":{"gitId":"tlyi"},"content":"                    || itemTypePrefix.equals(Command.COMMAND_PREFIX_UPCOMING_EXERCISE)) {","lastModifiedDate":"2021-10-19"},{"lineNumber":150,"author":{"gitId":"tlyi"},"content":"                return parseAddToItems(params, itemTypePrefix);","lastModifiedDate":"2021-10-19"},{"lineNumber":151,"author":{"gitId":"xingjie99"},"content":"            } else if (itemTypePrefix.equals(Command.COMMAND_PREFIX_RECURRING)) {","lastModifiedDate":"2021-10-20"},{"lineNumber":152,"author":{"gitId":"xingjie99"},"content":"                return parseAddToItems(params, itemTypePrefix);","lastModifiedDate":"2021-10-20"},{"lineNumber":153,"author":{"gitId":"tlyi"},"content":"            } else if (itemTypePrefix.equals(Command.COMMAND_PREFIX_FOOD)) {","lastModifiedDate":"2021-10-19"},{"lineNumber":154,"author":{"gitId":"tlyi"},"content":"                return parseAddToItems(params, itemTypePrefix);","lastModifiedDate":"2021-10-19"},{"lineNumber":155,"author":{"gitId":"tlyi"},"content":"            } else if (itemTypePrefix.equals(Command.COMMAND_PREFIX_EXERCISE_BANK)) {","lastModifiedDate":"2021-10-19"},{"lineNumber":156,"author":{"gitId":"tlyi"},"content":"                return parseAddToBank(params, itemTypePrefix);","lastModifiedDate":"2021-10-19"},{"lineNumber":157,"author":{"gitId":"tlyi"},"content":"            } else {","lastModifiedDate":"2021-10-19"},{"lineNumber":158,"author":{"gitId":"tlyi"},"content":"                assert itemTypePrefix.equals(Command.COMMAND_PREFIX_FOOD_BANK) :","lastModifiedDate":"2021-10-19"},{"lineNumber":159,"author":{"gitId":"tlyi"},"content":"                        \"at this point, it must be food bank\";","lastModifiedDate":"2021-10-19"},{"lineNumber":160,"author":{"gitId":"tlyi"},"content":"                return parseAddToBank(params, itemTypePrefix);","lastModifiedDate":"2021-10-19"},{"lineNumber":161,"author":{"gitId":"tlyi"},"content":"            }","lastModifiedDate":"2021-10-10"},{"lineNumber":162,"author":{"gitId":"tlyi"},"content":"        } catch (ItemNotSpecifiedException e) {","lastModifiedDate":"2021-10-10"},{"lineNumber":163,"author":{"gitId":"tlyi"},"content":"            return new InvalidCommand(","lastModifiedDate":"2021-10-19"},{"lineNumber":164,"author":{"gitId":"tlyi"},"content":"                    correctCommandFormatSuggestions(","lastModifiedDate":"2021-10-19"},{"lineNumber":165,"author":{"gitId":"tlyi"},"content":"                            AddExerciseCommand.MESSAGE_COMMAND_FORMAT,","lastModifiedDate":"2021-10-19"},{"lineNumber":166,"author":{"gitId":"tlyi"},"content":"                            AddFoodCommand.MESSAGE_COMMAND_FORMAT,","lastModifiedDate":"2021-10-10"},{"lineNumber":167,"author":{"gitId":"tlyi"},"content":"                            AddExerciseBankCommand.MESSAGE_COMMAND_FORMAT,","lastModifiedDate":"2021-10-19"},{"lineNumber":168,"author":{"gitId":"tlyi"},"content":"                            AddFoodBankCommand.MESSAGE_COMMAND_FORMAT));","lastModifiedDate":"2021-10-19"},{"lineNumber":169,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":170,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":171,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":172,"author":{"gitId":"tlyi"},"content":"    private Command parseAddToItems(String params, String itemTypePrefix) {","lastModifiedDate":"2021-10-19"},{"lineNumber":173,"author":{"gitId":"tlyi"},"content":"        try {","lastModifiedDate":"2021-10-10"},{"lineNumber":174,"author":{"gitId":"tlyi"},"content":"            final String description \u003d extractItemDescription(params, itemTypePrefix);","lastModifiedDate":"2021-10-10"},{"lineNumber":175,"author":{"gitId":"tlyi"},"content":"            int calories \u003d Command.NULL_CALORIES;","lastModifiedDate":"2021-10-19"},{"lineNumber":176,"author":{"gitId":"tlyi"},"content":"            boolean isCaloriesFromBank \u003d false;","lastModifiedDate":"2021-10-19"},{"lineNumber":177,"author":{"gitId":"tlyi"},"content":"            try {","lastModifiedDate":"2021-10-19"},{"lineNumber":178,"author":{"gitId":"tlyi"},"content":"                calories \u003d extractItemCalories(params);","lastModifiedDate":"2021-10-19"},{"lineNumber":179,"author":{"gitId":"tlyi"},"content":"            } catch (ParamMissingException e) {","lastModifiedDate":"2021-10-19"},{"lineNumber":180,"author":{"gitId":"tlyi"},"content":"                // If calories is not specified, set checkFromBank boolean to true so that the","lastModifiedDate":"2021-10-19"},{"lineNumber":181,"author":{"gitId":"tlyi"},"content":"                // Command object can try to retrieve from item bank later.","lastModifiedDate":"2021-10-19"},{"lineNumber":182,"author":{"gitId":"tlyi"},"content":"                isCaloriesFromBank \u003d true;","lastModifiedDate":"2021-10-19"},{"lineNumber":183,"author":{"gitId":"tlyi"},"content":"                logger.log(Level.INFO, \"No calories detected, look at item bank\");","lastModifiedDate":"2021-10-19"},{"lineNumber":184,"author":{"gitId":"tlyi"},"content":"            }","lastModifiedDate":"2021-10-19"},{"lineNumber":185,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":186,"author":{"gitId":"tlyi"},"content":"            if (itemTypePrefix.equals(Command.COMMAND_PREFIX_EXERCISE)","lastModifiedDate":"2021-10-19"},{"lineNumber":187,"author":{"gitId":"tlyi"},"content":"                    || itemTypePrefix.equals(Command.COMMAND_PREFIX_UPCOMING_EXERCISE)) {","lastModifiedDate":"2021-10-19"},{"lineNumber":188,"author":{"gitId":"tlyi"},"content":"                final LocalDate date \u003d extractDate(params, false);","lastModifiedDate":"2021-10-19"},{"lineNumber":189,"author":{"gitId":"tlyi"},"content":"                logger.log(Level.INFO, String.format(\"date detected is: %s\", date));","lastModifiedDate":"2021-10-19"},{"lineNumber":190,"author":{"gitId":"tlyi"},"content":"                if (hasExtraDelimiters(params,","lastModifiedDate":"2021-10-19"},{"lineNumber":191,"author":{"gitId":"tlyi"},"content":"                        getNumberOfCorrectParamsDetected(params,","lastModifiedDate":"2021-10-19"},{"lineNumber":192,"author":{"gitId":"tlyi"},"content":"                                AddExerciseCommand.EXPECTED_PREFIXES))) {","lastModifiedDate":"2021-10-19"},{"lineNumber":193,"author":{"gitId":"tlyi"},"content":"                    return new InvalidCommand(MESSAGE_ERROR_TOO_MANY_DELIMITERS);","lastModifiedDate":"2021-10-19"},{"lineNumber":194,"author":{"gitId":"tlyi"},"content":"                }","lastModifiedDate":"2021-10-19"},{"lineNumber":195,"author":{"gitId":"tlyi"},"content":"                if (isFutureDate(date)) {","lastModifiedDate":"2021-10-19"},{"lineNumber":196,"author":{"gitId":"tlyi"},"content":"                    logger.log(Level.INFO, String.format(\"adding to future list\"));","lastModifiedDate":"2021-10-19"},{"lineNumber":197,"author":{"gitId":"tlyi"},"content":"                    return new AddFutureExerciseCommand(description, calories, date);","lastModifiedDate":"2021-10-19"},{"lineNumber":198,"author":{"gitId":"tlyi"},"content":"                } else {","lastModifiedDate":"2021-10-19"},{"lineNumber":199,"author":{"gitId":"tlyi"},"content":"                    return new AddExerciseCommand(description, calories, date, isCaloriesFromBank);","lastModifiedDate":"2021-10-19"},{"lineNumber":200,"author":{"gitId":"tlyi"},"content":"                }","lastModifiedDate":"2021-10-19"},{"lineNumber":201,"author":{"gitId":"xingjie99"},"content":"            } else if (itemTypePrefix.equals(Command.COMMAND_PREFIX_RECURRING)) {","lastModifiedDate":"2021-10-20"},{"lineNumber":202,"author":{"gitId":"xingjie99"},"content":"                final LocalDate startDate \u003d extractStartDate(params);","lastModifiedDate":"2021-10-20"},{"lineNumber":203,"author":{"gitId":"xingjie99"},"content":"                final LocalDate endDate \u003d extractEndDate(params);","lastModifiedDate":"2021-10-20"},{"lineNumber":204,"author":{"gitId":"xingjie99"},"content":"                final ArrayList\u003cInteger\u003e dayOfTheWeek \u003d extractDayOfTheWeek(params);","lastModifiedDate":"2021-10-20"},{"lineNumber":205,"author":{"gitId":"xingjie99"},"content":"                return new AddRecurringExerciseCommand(description, calories, startDate, endDate, dayOfTheWeek);","lastModifiedDate":"2021-10-20"},{"lineNumber":206,"author":{"gitId":"tlyi"},"content":"            } else {","lastModifiedDate":"2021-10-10"},{"lineNumber":207,"author":{"gitId":"tlyi"},"content":"                final LocalDateTime dateTime \u003d extractDateTime(params);","lastModifiedDate":"2021-10-19"},{"lineNumber":208,"author":{"gitId":"tlyi"},"content":"                logger.log(Level.INFO, String.format(\"dateTime detected is: %s\", dateTime));","lastModifiedDate":"2021-10-19"},{"lineNumber":209,"author":{"gitId":"tlyi"},"content":"                assert itemTypePrefix.equals(Command.COMMAND_PREFIX_FOOD) :","lastModifiedDate":"2021-10-14"},{"lineNumber":210,"author":{"gitId":"tlyi"},"content":"                        \"at this point, it must be food\";","lastModifiedDate":"2021-10-19"},{"lineNumber":211,"author":{"gitId":"tlyi"},"content":"                if (hasExtraDelimiters(params,","lastModifiedDate":"2021-10-19"},{"lineNumber":212,"author":{"gitId":"tlyi"},"content":"                        getNumberOfCorrectParamsDetected(params,","lastModifiedDate":"2021-10-19"},{"lineNumber":213,"author":{"gitId":"tlyi"},"content":"                                AddFoodCommand.EXPECTED_PREFIXES))) {","lastModifiedDate":"2021-10-19"},{"lineNumber":214,"author":{"gitId":"tlyi"},"content":"                    return new InvalidCommand(MESSAGE_ERROR_TOO_MANY_DELIMITERS);","lastModifiedDate":"2021-10-19"},{"lineNumber":215,"author":{"gitId":"tlyi"},"content":"                }","lastModifiedDate":"2021-10-19"},{"lineNumber":216,"author":{"gitId":"tlyi"},"content":"                return new AddFoodCommand(description, calories, dateTime, isCaloriesFromBank);","lastModifiedDate":"2021-10-19"},{"lineNumber":217,"author":{"gitId":"tlyi"},"content":"            }","lastModifiedDate":"2021-10-10"},{"lineNumber":218,"author":{"gitId":"tlyi"},"content":"        } catch (ParamInvalidException | ParamMissingException e) {","lastModifiedDate":"2021-10-19"},{"lineNumber":219,"author":{"gitId":"tlyi"},"content":"            return new InvalidCommand(e.getMessage());","lastModifiedDate":"2021-10-10"},{"lineNumber":220,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":221,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":222,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":223,"author":{"gitId":"tlyi"},"content":"    private Command parseAddToBank(String params, String itemTypePrefix) {","lastModifiedDate":"2021-10-19"},{"lineNumber":224,"author":{"gitId":"tlyi"},"content":"        try {","lastModifiedDate":"2021-10-19"},{"lineNumber":225,"author":{"gitId":"tlyi"},"content":"            final String description \u003d extractItemDescription(params, itemTypePrefix);","lastModifiedDate":"2021-10-19"},{"lineNumber":226,"author":{"gitId":"tlyi"},"content":"            final int calories \u003d extractItemCalories(params);","lastModifiedDate":"2021-10-19"},{"lineNumber":227,"author":{"gitId":"tlyi"},"content":"            if (itemTypePrefix.equals(Command.COMMAND_PREFIX_EXERCISE_BANK)) {","lastModifiedDate":"2021-10-19"},{"lineNumber":228,"author":{"gitId":"tlyi"},"content":"                if (hasExtraDelimiters(params,","lastModifiedDate":"2021-10-19"},{"lineNumber":229,"author":{"gitId":"tlyi"},"content":"                        getNumberOfCorrectParamsDetected(params,","lastModifiedDate":"2021-10-19"},{"lineNumber":230,"author":{"gitId":"tlyi"},"content":"                                AddExerciseBankCommand.EXPECTED_PREFIXES))) {","lastModifiedDate":"2021-10-19"},{"lineNumber":231,"author":{"gitId":"tlyi"},"content":"                    return new InvalidCommand(MESSAGE_ERROR_TOO_MANY_DELIMITERS);","lastModifiedDate":"2021-10-19"},{"lineNumber":232,"author":{"gitId":"tlyi"},"content":"                }","lastModifiedDate":"2021-10-19"},{"lineNumber":233,"author":{"gitId":"tlyi"},"content":"                return new AddExerciseBankCommand(description, calories);","lastModifiedDate":"2021-10-19"},{"lineNumber":234,"author":{"gitId":"tlyi"},"content":"            } else {","lastModifiedDate":"2021-10-19"},{"lineNumber":235,"author":{"gitId":"tlyi"},"content":"                assert itemTypePrefix.equals(Command.COMMAND_PREFIX_FOOD_BANK) :","lastModifiedDate":"2021-10-19"},{"lineNumber":236,"author":{"gitId":"tlyi"},"content":"                        \"at this point, it must be food bank\";","lastModifiedDate":"2021-10-19"},{"lineNumber":237,"author":{"gitId":"tlyi"},"content":"                if (hasExtraDelimiters(params,","lastModifiedDate":"2021-10-19"},{"lineNumber":238,"author":{"gitId":"tlyi"},"content":"                        getNumberOfCorrectParamsDetected(params,","lastModifiedDate":"2021-10-19"},{"lineNumber":239,"author":{"gitId":"tlyi"},"content":"                                AddFoodBankCommand.EXPECTED_PREFIXES))) {","lastModifiedDate":"2021-10-19"},{"lineNumber":240,"author":{"gitId":"tlyi"},"content":"                    return new InvalidCommand(MESSAGE_ERROR_TOO_MANY_DELIMITERS);","lastModifiedDate":"2021-10-19"},{"lineNumber":241,"author":{"gitId":"tlyi"},"content":"                }","lastModifiedDate":"2021-10-19"},{"lineNumber":242,"author":{"gitId":"tlyi"},"content":"                return new AddFoodBankCommand(description, calories);","lastModifiedDate":"2021-10-19"},{"lineNumber":243,"author":{"gitId":"tlyi"},"content":"            }","lastModifiedDate":"2021-10-19"},{"lineNumber":244,"author":{"gitId":"tlyi"},"content":"        } catch (ParamInvalidException | ParamMissingException e) {","lastModifiedDate":"2021-10-19"},{"lineNumber":245,"author":{"gitId":"tlyi"},"content":"            return new InvalidCommand(e.getMessage());","lastModifiedDate":"2021-10-10"},{"lineNumber":246,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":247,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":248,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":249,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":250,"author":{"gitId":"tlyi"},"content":"    private Command parseDelete(String params) {","lastModifiedDate":"2021-10-19"},{"lineNumber":251,"author":{"gitId":"tlyi"},"content":"        try {","lastModifiedDate":"2021-10-10"},{"lineNumber":252,"author":{"gitId":"tlyi"},"content":"            final String itemTypePrefix \u003d extractItemTypePrefix(params);","lastModifiedDate":"2021-10-10"},{"lineNumber":253,"author":{"gitId":"tlyi"},"content":"            final String description \u003d extractItemDescription(params, itemTypePrefix).split(\" \")[0].trim();","lastModifiedDate":"2021-10-19"},{"lineNumber":254,"author":{"gitId":"tlyi"},"content":"            boolean isClear \u003d description.equalsIgnoreCase(Command.COMMAND_WORD_DELETE_ALL);","lastModifiedDate":"2021-10-19"},{"lineNumber":255,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":256,"author":{"gitId":"tlyi"},"content":"            if (itemTypePrefix.equals(Command.COMMAND_PREFIX_EXERCISE)) {","lastModifiedDate":"2021-10-10"},{"lineNumber":257,"author":{"gitId":"xingjie99"},"content":"                if (isClear) {","lastModifiedDate":"2021-10-11"},{"lineNumber":258,"author":{"gitId":"tlyi"},"content":"                    return new DeleteExerciseCommand(true);","lastModifiedDate":"2021-10-19"},{"lineNumber":259,"author":{"gitId":"tlyi"},"content":"                } else {","lastModifiedDate":"2021-10-19"},{"lineNumber":260,"author":{"gitId":"tlyi"},"content":"                    return parseDeleteFromItems(params, itemTypePrefix);","lastModifiedDate":"2021-10-19"},{"lineNumber":261,"author":{"gitId":"tlyi"},"content":"                }","lastModifiedDate":"2021-10-19"},{"lineNumber":262,"author":{"gitId":"tlyi"},"content":"            } else if (itemTypePrefix.equals(Command.COMMAND_PREFIX_FOOD)) {","lastModifiedDate":"2021-10-19"},{"lineNumber":263,"author":{"gitId":"tlyi"},"content":"                if (isClear) {","lastModifiedDate":"2021-10-19"},{"lineNumber":264,"author":{"gitId":"tlyi"},"content":"                    return new DeleteFoodCommand(true);","lastModifiedDate":"2021-10-19"},{"lineNumber":265,"author":{"gitId":"tlyi"},"content":"                } else {","lastModifiedDate":"2021-10-10"},{"lineNumber":266,"author":{"gitId":"tlyi"},"content":"                    return parseDeleteFromItems(params, itemTypePrefix);","lastModifiedDate":"2021-10-19"},{"lineNumber":267,"author":{"gitId":"tlyi"},"content":"                }","lastModifiedDate":"2021-10-19"},{"lineNumber":268,"author":{"gitId":"tlyi"},"content":"            } else if (itemTypePrefix.equals(Command.COMMAND_PREFIX_UPCOMING_EXERCISE)) {","lastModifiedDate":"2021-10-19"},{"lineNumber":269,"author":{"gitId":"tryyang2001"},"content":"                if (isClear) {","lastModifiedDate":"2021-10-11"},{"lineNumber":270,"author":{"gitId":"tlyi"},"content":"                    return new DeleteFutureExerciseCommand(true);","lastModifiedDate":"2021-10-19"},{"lineNumber":271,"author":{"gitId":"tlyi"},"content":"                } else {","lastModifiedDate":"2021-10-19"},{"lineNumber":272,"author":{"gitId":"tlyi"},"content":"                    return parseDeleteFromFutureOrBank(params, itemTypePrefix);","lastModifiedDate":"2021-10-19"},{"lineNumber":273,"author":{"gitId":"tlyi"},"content":"                }","lastModifiedDate":"2021-10-19"},{"lineNumber":274,"author":{"gitId":"tlyi"},"content":"            } else if (itemTypePrefix.equals(Command.COMMAND_PREFIX_EXERCISE_BANK)) {","lastModifiedDate":"2021-10-19"},{"lineNumber":275,"author":{"gitId":"tryyang2001"},"content":"                if (isClear) {","lastModifiedDate":"2021-10-11"},{"lineNumber":276,"author":{"gitId":"tlyi"},"content":"                    return new DeleteExerciseBankCommand(true);","lastModifiedDate":"2021-10-19"},{"lineNumber":277,"author":{"gitId":"tlyi"},"content":"                } else {","lastModifiedDate":"2021-10-19"},{"lineNumber":278,"author":{"gitId":"tlyi"},"content":"                    return parseDeleteFromFutureOrBank(params, itemTypePrefix);","lastModifiedDate":"2021-10-19"},{"lineNumber":279,"author":{"gitId":"tryyang2001"},"content":"                }","lastModifiedDate":"2021-10-11"},{"lineNumber":280,"author":{"gitId":"tlyi"},"content":"            } else {","lastModifiedDate":"2021-10-19"},{"lineNumber":281,"author":{"gitId":"tlyi"},"content":"                assert itemTypePrefix.equals(Command.COMMAND_PREFIX_FOOD_BANK) :","lastModifiedDate":"2021-10-19"},{"lineNumber":282,"author":{"gitId":"tlyi"},"content":"                        \"at this point, it must be food bank\";","lastModifiedDate":"2021-10-19"},{"lineNumber":283,"author":{"gitId":"tlyi"},"content":"                if (isClear) {","lastModifiedDate":"2021-10-19"},{"lineNumber":284,"author":{"gitId":"tlyi"},"content":"                    return new DeleteFoodBankCommand(true);","lastModifiedDate":"2021-10-19"},{"lineNumber":285,"author":{"gitId":"tlyi"},"content":"                } else {","lastModifiedDate":"2021-10-19"},{"lineNumber":286,"author":{"gitId":"tlyi"},"content":"                    return parseDeleteFromFutureOrBank(params, itemTypePrefix);","lastModifiedDate":"2021-10-19"},{"lineNumber":287,"author":{"gitId":"tlyi"},"content":"                }","lastModifiedDate":"2021-10-19"},{"lineNumber":288,"author":{"gitId":"tlyi"},"content":"            }","lastModifiedDate":"2021-10-10"},{"lineNumber":289,"author":{"gitId":"tlyi"},"content":"        } catch (ItemNotSpecifiedException e) {","lastModifiedDate":"2021-10-10"},{"lineNumber":290,"author":{"gitId":"tlyi"},"content":"            return new InvalidCommand(","lastModifiedDate":"2021-10-19"},{"lineNumber":291,"author":{"gitId":"tlyi"},"content":"                    correctCommandFormatSuggestions(","lastModifiedDate":"2021-10-19"},{"lineNumber":292,"author":{"gitId":"tlyi"},"content":"                            DeleteExerciseCommand.MESSAGE_COMMAND_FORMAT,","lastModifiedDate":"2021-10-19"},{"lineNumber":293,"author":{"gitId":"tlyi"},"content":"                            DeleteFoodCommand.MESSAGE_COMMAND_FORMAT,","lastModifiedDate":"2021-10-10"},{"lineNumber":294,"author":{"gitId":"tlyi"},"content":"                            DeleteExerciseBankCommand.MESSAGE_COMMAND_FORMAT,","lastModifiedDate":"2021-10-19"},{"lineNumber":295,"author":{"gitId":"tlyi"},"content":"                            DeleteFoodBankCommand.MESSAGE_COMMAND_FORMAT));","lastModifiedDate":"2021-10-19"},{"lineNumber":296,"author":{"gitId":"tlyi"},"content":"        } catch (ParamInvalidException | ParamMissingException e) {","lastModifiedDate":"2021-10-19"},{"lineNumber":297,"author":{"gitId":"tlyi"},"content":"            return new InvalidCommand(e.getMessage());","lastModifiedDate":"2021-10-19"},{"lineNumber":298,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":299,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":300,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":301,"author":{"gitId":"tlyi"},"content":"    private Command parseDeleteFromItems(String params, String itemTypePrefix) {","lastModifiedDate":"2021-10-19"},{"lineNumber":302,"author":{"gitId":"tlyi"},"content":"        try {","lastModifiedDate":"2021-10-19"},{"lineNumber":303,"author":{"gitId":"tlyi"},"content":"            final int itemIndex \u003d extractItemIndex(params, itemTypePrefix);","lastModifiedDate":"2021-10-19"},{"lineNumber":304,"author":{"gitId":"tlyi"},"content":"            final LocalDate date \u003d extractDate(params, true);","lastModifiedDate":"2021-10-19"},{"lineNumber":305,"author":{"gitId":"tlyi"},"content":"            logger.log(Level.INFO, String.format(\"date detected is: %s\", date));","lastModifiedDate":"2021-10-19"},{"lineNumber":306,"author":{"gitId":"tlyi"},"content":"            if (itemTypePrefix.equals(Command.COMMAND_PREFIX_EXERCISE)) {","lastModifiedDate":"2021-10-19"},{"lineNumber":307,"author":{"gitId":"tlyi"},"content":"                if (hasExtraDelimiters(params,","lastModifiedDate":"2021-10-19"},{"lineNumber":308,"author":{"gitId":"tlyi"},"content":"                        getNumberOfCorrectParamsDetected(params,","lastModifiedDate":"2021-10-19"},{"lineNumber":309,"author":{"gitId":"tlyi"},"content":"                                DeleteExerciseCommand.EXPECTED_PREFIXES))) {","lastModifiedDate":"2021-10-19"},{"lineNumber":310,"author":{"gitId":"tlyi"},"content":"                    return new InvalidCommand(MESSAGE_ERROR_TOO_MANY_DELIMITERS);","lastModifiedDate":"2021-10-19"},{"lineNumber":311,"author":{"gitId":"tlyi"},"content":"                }","lastModifiedDate":"2021-10-19"},{"lineNumber":312,"author":{"gitId":"tlyi"},"content":"                logger.log(Level.INFO, String.format(\"deleting exercise item %s from %s\", itemIndex, date));","lastModifiedDate":"2021-10-19"},{"lineNumber":313,"author":{"gitId":"tlyi"},"content":"                return new DeleteExerciseCommand(itemIndex, date);","lastModifiedDate":"2021-10-19"},{"lineNumber":314,"author":{"gitId":"tlyi"},"content":"            } else {","lastModifiedDate":"2021-10-19"},{"lineNumber":315,"author":{"gitId":"tlyi"},"content":"                assert itemTypePrefix.equals(Command.COMMAND_PREFIX_FOOD) :","lastModifiedDate":"2021-10-19"},{"lineNumber":316,"author":{"gitId":"tlyi"},"content":"                        \"at this point, it must be food\";","lastModifiedDate":"2021-10-19"},{"lineNumber":317,"author":{"gitId":"tlyi"},"content":"                if (hasExtraDelimiters(params,","lastModifiedDate":"2021-10-19"},{"lineNumber":318,"author":{"gitId":"tlyi"},"content":"                        getNumberOfCorrectParamsDetected(params,","lastModifiedDate":"2021-10-19"},{"lineNumber":319,"author":{"gitId":"tlyi"},"content":"                                AddFoodCommand.EXPECTED_PREFIXES))) {","lastModifiedDate":"2021-10-19"},{"lineNumber":320,"author":{"gitId":"tlyi"},"content":"                    return new InvalidCommand(MESSAGE_ERROR_TOO_MANY_DELIMITERS);","lastModifiedDate":"2021-10-19"},{"lineNumber":321,"author":{"gitId":"tlyi"},"content":"                }","lastModifiedDate":"2021-10-19"},{"lineNumber":322,"author":{"gitId":"tlyi"},"content":"                logger.log(Level.INFO, String.format(\"deleting food item %s from %s\", itemIndex, date));","lastModifiedDate":"2021-10-19"},{"lineNumber":323,"author":{"gitId":"tlyi"},"content":"                return new DeleteFoodCommand(itemIndex, date);","lastModifiedDate":"2021-10-19"},{"lineNumber":324,"author":{"gitId":"tlyi"},"content":"            }","lastModifiedDate":"2021-10-19"},{"lineNumber":325,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":326,"author":{"gitId":"tlyi"},"content":"        } catch (ParamInvalidException | ParamMissingException e) {","lastModifiedDate":"2021-10-19"},{"lineNumber":327,"author":{"gitId":"tlyi"},"content":"            return new InvalidCommand(e.getMessage());","lastModifiedDate":"2021-10-19"},{"lineNumber":328,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":329,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":330,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":331,"author":{"gitId":"tlyi"},"content":"    private Command parseDeleteFromFutureOrBank(String params, String itemTypePrefix) {","lastModifiedDate":"2021-10-19"},{"lineNumber":332,"author":{"gitId":"tlyi"},"content":"        try {","lastModifiedDate":"2021-10-19"},{"lineNumber":333,"author":{"gitId":"tlyi"},"content":"            final int itemIndex \u003d extractItemIndex(params, itemTypePrefix);","lastModifiedDate":"2021-10-19"},{"lineNumber":334,"author":{"gitId":"tlyi"},"content":"            if (itemTypePrefix.equals(Command.COMMAND_PREFIX_EXERCISE_BANK)) {","lastModifiedDate":"2021-10-19"},{"lineNumber":335,"author":{"gitId":"tlyi"},"content":"                if (hasExtraDelimiters(params,","lastModifiedDate":"2021-10-19"},{"lineNumber":336,"author":{"gitId":"tlyi"},"content":"                        getNumberOfCorrectParamsDetected(params,","lastModifiedDate":"2021-10-19"},{"lineNumber":337,"author":{"gitId":"tlyi"},"content":"                                DeleteExerciseBankCommand.EXPECTED_PREFIXES))) {","lastModifiedDate":"2021-10-19"},{"lineNumber":338,"author":{"gitId":"tlyi"},"content":"                    return new InvalidCommand(MESSAGE_ERROR_TOO_MANY_DELIMITERS);","lastModifiedDate":"2021-10-19"},{"lineNumber":339,"author":{"gitId":"tlyi"},"content":"                }","lastModifiedDate":"2021-10-19"},{"lineNumber":340,"author":{"gitId":"tlyi"},"content":"                return new DeleteExerciseBankCommand(itemIndex);","lastModifiedDate":"2021-10-19"},{"lineNumber":341,"author":{"gitId":"tlyi"},"content":"            } else if (itemTypePrefix.equals(Command.COMMAND_PREFIX_UPCOMING_EXERCISE)) {","lastModifiedDate":"2021-10-19"},{"lineNumber":342,"author":{"gitId":"tlyi"},"content":"                if (hasExtraDelimiters(params,","lastModifiedDate":"2021-10-19"},{"lineNumber":343,"author":{"gitId":"tlyi"},"content":"                        getNumberOfCorrectParamsDetected(params,","lastModifiedDate":"2021-10-19"},{"lineNumber":344,"author":{"gitId":"tlyi"},"content":"                                DeleteFutureExerciseCommand.EXPECTED_PREFIXES))) {","lastModifiedDate":"2021-10-19"},{"lineNumber":345,"author":{"gitId":"tlyi"},"content":"                    return new InvalidCommand(MESSAGE_ERROR_TOO_MANY_DELIMITERS);","lastModifiedDate":"2021-10-19"},{"lineNumber":346,"author":{"gitId":"tlyi"},"content":"                }","lastModifiedDate":"2021-10-19"},{"lineNumber":347,"author":{"gitId":"tlyi"},"content":"                return new DeleteFutureExerciseCommand(itemIndex);","lastModifiedDate":"2021-10-19"},{"lineNumber":348,"author":{"gitId":"tlyi"},"content":"            } else {","lastModifiedDate":"2021-10-19"},{"lineNumber":349,"author":{"gitId":"tlyi"},"content":"                assert itemTypePrefix.equals(Command.COMMAND_PREFIX_FOOD_BANK) :","lastModifiedDate":"2021-10-19"},{"lineNumber":350,"author":{"gitId":"tlyi"},"content":"                        \"at this point, it must be food bank\";","lastModifiedDate":"2021-10-19"},{"lineNumber":351,"author":{"gitId":"tlyi"},"content":"                if (hasExtraDelimiters(params,","lastModifiedDate":"2021-10-19"},{"lineNumber":352,"author":{"gitId":"tlyi"},"content":"                        getNumberOfCorrectParamsDetected(params,","lastModifiedDate":"2021-10-19"},{"lineNumber":353,"author":{"gitId":"tlyi"},"content":"                                DeleteFoodBankCommand.EXPECTED_PREFIXES))) {","lastModifiedDate":"2021-10-19"},{"lineNumber":354,"author":{"gitId":"tlyi"},"content":"                    return new InvalidCommand(MESSAGE_ERROR_TOO_MANY_DELIMITERS);","lastModifiedDate":"2021-10-19"},{"lineNumber":355,"author":{"gitId":"tlyi"},"content":"                }","lastModifiedDate":"2021-10-19"},{"lineNumber":356,"author":{"gitId":"tlyi"},"content":"                return new DeleteFoodBankCommand(itemIndex);","lastModifiedDate":"2021-10-19"},{"lineNumber":357,"author":{"gitId":"tlyi"},"content":"            }","lastModifiedDate":"2021-10-19"},{"lineNumber":358,"author":{"gitId":"tlyi"},"content":"        } catch (ParamInvalidException e) {","lastModifiedDate":"2021-10-10"},{"lineNumber":359,"author":{"gitId":"tlyi"},"content":"            return new InvalidCommand(e.getMessage());","lastModifiedDate":"2021-10-19"},{"lineNumber":360,"author":{"gitId":"tlyi"},"content":"        } catch (ParamMissingException e) {","lastModifiedDate":"2021-10-19"},{"lineNumber":361,"author":{"gitId":"tlyi"},"content":"            return new InvalidCommand(e.getMessage());","lastModifiedDate":"2021-10-19"},{"lineNumber":362,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":363,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":364,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":365,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":366,"author":{"gitId":"tlyi"},"content":"    private Command parseViewItems(String params) {","lastModifiedDate":"2021-10-10"},{"lineNumber":367,"author":{"gitId":"tlyi"},"content":"        if (params.equals(EMPTY)) {","lastModifiedDate":"2021-10-10"},{"lineNumber":368,"author":{"gitId":"tlyi"},"content":"            return new ViewCommand();","lastModifiedDate":"2021-10-10"},{"lineNumber":369,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":370,"author":{"gitId":"tlyi"},"content":"        try {","lastModifiedDate":"2021-10-10"},{"lineNumber":371,"author":{"gitId":"tlyi"},"content":"            final String itemTypePrefix \u003d extractItemTypePrefix(params);","lastModifiedDate":"2021-10-10"},{"lineNumber":372,"author":{"gitId":"tlyi"},"content":"            if (itemTypePrefix.equals(Command.COMMAND_PREFIX_EXERCISE)) {","lastModifiedDate":"2021-10-10"},{"lineNumber":373,"author":{"gitId":"tlyi"},"content":"                return new ViewExerciseListCommand();","lastModifiedDate":"2021-10-10"},{"lineNumber":374,"author":{"gitId":"tlyi"},"content":"            } else if (itemTypePrefix.equals(Command.COMMAND_PREFIX_FOOD)) {","lastModifiedDate":"2021-10-19"},{"lineNumber":375,"author":{"gitId":"tlyi"},"content":"                return new ViewFoodListCommand();","lastModifiedDate":"2021-10-10"},{"lineNumber":376,"author":{"gitId":"tlyi"},"content":"            } else if (itemTypePrefix.equals(Command.COMMAND_PREFIX_UPCOMING_EXERCISE)) {","lastModifiedDate":"2021-10-19"},{"lineNumber":377,"author":{"gitId":"tlyi"},"content":"                return new ViewFutureExerciseListCommand();","lastModifiedDate":"2021-10-19"},{"lineNumber":378,"author":{"gitId":"tlyi"},"content":"            } else if (itemTypePrefix.equals(Command.COMMAND_PREFIX_EXERCISE_BANK)) {","lastModifiedDate":"2021-10-19"},{"lineNumber":379,"author":{"gitId":"tlyi"},"content":"                return new ViewExerciseBankCommand();","lastModifiedDate":"2021-10-19"},{"lineNumber":380,"author":{"gitId":"tlyi"},"content":"            } else {","lastModifiedDate":"2021-10-19"},{"lineNumber":381,"author":{"gitId":"tlyi"},"content":"                assert itemTypePrefix.equals(Command.COMMAND_PREFIX_FOOD_BANK) :","lastModifiedDate":"2021-10-19"},{"lineNumber":382,"author":{"gitId":"tlyi"},"content":"                        \"at this point, it must be food bank\";","lastModifiedDate":"2021-10-19"},{"lineNumber":383,"author":{"gitId":"tlyi"},"content":"                return new ViewFoodBankCommand();","lastModifiedDate":"2021-10-19"},{"lineNumber":384,"author":{"gitId":"tlyi"},"content":"            }","lastModifiedDate":"2021-10-10"},{"lineNumber":385,"author":{"gitId":"tlyi"},"content":"        } catch (ItemNotSpecifiedException e) {","lastModifiedDate":"2021-10-10"},{"lineNumber":386,"author":{"gitId":"tlyi"},"content":"            return new InvalidCommand(","lastModifiedDate":"2021-10-19"},{"lineNumber":387,"author":{"gitId":"tlyi"},"content":"                    correctCommandFormatSuggestions(","lastModifiedDate":"2021-10-19"},{"lineNumber":388,"author":{"gitId":"tlyi"},"content":"                            ViewExerciseListCommand.MESSAGE_COMMAND_FORMAT,","lastModifiedDate":"2021-10-19"},{"lineNumber":389,"author":{"gitId":"tlyi"},"content":"                            ViewFoodListCommand.MESSAGE_COMMAND_FORMAT,","lastModifiedDate":"2021-10-10"},{"lineNumber":390,"author":{"gitId":"tlyi"},"content":"                            ViewExerciseBankCommand.MESSAGE_COMMAND_FORMAT,","lastModifiedDate":"2021-10-19"},{"lineNumber":391,"author":{"gitId":"tlyi"},"content":"                            ViewFoodBankCommand.MESSAGE_COMMAND_FORMAT));","lastModifiedDate":"2021-10-19"},{"lineNumber":392,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":393,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":394,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":395,"author":{"gitId":"tlyi"},"content":"    private Command parseBmi(String params) {","lastModifiedDate":"2021-10-10"},{"lineNumber":396,"author":{"gitId":"tlyi"},"content":"        if (params.equals(EMPTY)) { //no additional parameters, assumed to be bmi from current profile","lastModifiedDate":"2021-10-10"},{"lineNumber":397,"author":{"gitId":"tlyi"},"content":"            return new CalculateBmiWithProfileCommand();","lastModifiedDate":"2021-10-10"},{"lineNumber":398,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":399,"author":{"gitId":"tlyi"},"content":"        if (hasExtraDelimiters(params, Command.COMMAND_BMI_EXPECTED_NUM_DELIMITERS)) {","lastModifiedDate":"2021-10-12"},{"lineNumber":400,"author":{"gitId":"tlyi"},"content":"            return new InvalidCommand(MESSAGE_ERROR_TOO_MANY_DELIMITERS);","lastModifiedDate":"2021-10-12"},{"lineNumber":401,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":402,"author":{"gitId":"tlyi"},"content":"        if (hasRequiredParams(params, CalculateBmiCommand.EXPECTED_PREFIXES)) {","lastModifiedDate":"2021-10-19"},{"lineNumber":403,"author":{"gitId":"tlyi"},"content":"            try {","lastModifiedDate":"2021-10-10"},{"lineNumber":404,"author":{"gitId":"tlyi"},"content":"                final double height \u003d extractHeight(params);","lastModifiedDate":"2021-10-10"},{"lineNumber":405,"author":{"gitId":"tlyi"},"content":"                final double weight \u003d extractWeight(params);","lastModifiedDate":"2021-10-10"},{"lineNumber":406,"author":{"gitId":"tlyi"},"content":"                return new CalculateBmiCommand(height, weight);","lastModifiedDate":"2021-10-10"},{"lineNumber":407,"author":{"gitId":"tlyi"},"content":"            } catch (ParamInvalidException e) {","lastModifiedDate":"2021-10-10"},{"lineNumber":408,"author":{"gitId":"tlyi"},"content":"                return new InvalidCommand(e.getMessage());","lastModifiedDate":"2021-10-10"},{"lineNumber":409,"author":{"gitId":"tlyi"},"content":"            }","lastModifiedDate":"2021-10-10"},{"lineNumber":410,"author":{"gitId":"tlyi"},"content":"        } else {","lastModifiedDate":"2021-10-10"},{"lineNumber":411,"author":{"gitId":"tryyang2001"},"content":"            logger.log(Level.WARNING, \"Detected invalid input parameters for BMI calculation.\");","lastModifiedDate":"2021-10-13"},{"lineNumber":412,"author":{"gitId":"tlyi"},"content":"            return new InvalidCommand(CalculateBmiCommand.MESSAGE_INVALID_COMMAND_FORMAT);","lastModifiedDate":"2021-10-10"},{"lineNumber":413,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":414,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":415,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":416,"author":{"gitId":"tlyi"},"content":"    private Command parseProfile(String params) {","lastModifiedDate":"2021-10-13"},{"lineNumber":417,"author":{"gitId":"tlyi"},"content":"        if (params.isEmpty()) { //no additional parameters, assumed to be view profile command","lastModifiedDate":"2021-10-13"},{"lineNumber":418,"author":{"gitId":"tlyi"},"content":"            return new ProfileCommand();","lastModifiedDate":"2021-10-12"},{"lineNumber":419,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":420,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":421,"author":{"gitId":"tlyi"},"content":"        //TODO: Test profile again after storage has been updated","lastModifiedDate":"2021-10-19"},{"lineNumber":422,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":423,"author":{"gitId":"tlyi"},"content":"        if (hasExtraDelimiters(","lastModifiedDate":"2021-10-19"},{"lineNumber":424,"author":{"gitId":"tlyi"},"content":"                params,","lastModifiedDate":"2021-10-19"},{"lineNumber":425,"author":{"gitId":"tlyi"},"content":"                getNumberOfCorrectParamsDetected(params,","lastModifiedDate":"2021-10-19"},{"lineNumber":426,"author":{"gitId":"tlyi"},"content":"                        ProfileUpdateCommand.EXPECTED_PREFIXES))) {","lastModifiedDate":"2021-10-19"},{"lineNumber":427,"author":{"gitId":"tlyi"},"content":"            return new InvalidCommand(MESSAGE_ERROR_TOO_MANY_DELIMITERS);","lastModifiedDate":"2021-10-19"},{"lineNumber":428,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":429,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":430,"author":{"gitId":"tlyi"},"content":"        try {","lastModifiedDate":"2021-10-10"},{"lineNumber":431,"author":{"gitId":"tlyi"},"content":"            final String name \u003d extractProfileName(params);","lastModifiedDate":"2021-10-10"},{"lineNumber":432,"author":{"gitId":"tlyi"},"content":"            final double height \u003d extractHeight(params);","lastModifiedDate":"2021-10-10"},{"lineNumber":433,"author":{"gitId":"tlyi"},"content":"            final double weight \u003d extractWeight(params);","lastModifiedDate":"2021-10-10"},{"lineNumber":434,"author":{"gitId":"tryyang2001"},"content":"            final int calorieGoal \u003d extractCalorieGoal(params);","lastModifiedDate":"2021-10-14"},{"lineNumber":435,"author":{"gitId":"tlyi"},"content":"            final int age \u003d extractAge(params);","lastModifiedDate":"2021-10-19"},{"lineNumber":436,"author":{"gitId":"tlyi"},"content":"            final int activityFactor \u003d extractActivityFactor(params);","lastModifiedDate":"2021-10-19"},{"lineNumber":437,"author":{"gitId":"tlyi"},"content":"            final char gender \u003d extractGender(params);","lastModifiedDate":"2021-10-19"},{"lineNumber":438,"author":{"gitId":"tlyi"},"content":"            return new ProfileUpdateCommand(name, height, weight, calorieGoal, age, activityFactor, gender);","lastModifiedDate":"2021-10-19"},{"lineNumber":439,"author":{"gitId":"tlyi"},"content":"        } catch (ParamInvalidException e) {","lastModifiedDate":"2021-10-10"},{"lineNumber":440,"author":{"gitId":"tlyi"},"content":"            return new InvalidCommand(e.getMessage());","lastModifiedDate":"2021-10-10"},{"lineNumber":441,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":442,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":443,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":444,"author":{"gitId":"tlyi"},"content":"    private Command parseChangeHeight(String params) {","lastModifiedDate":"2021-10-10"},{"lineNumber":445,"author":{"gitId":"tlyi"},"content":"        try {","lastModifiedDate":"2021-10-10"},{"lineNumber":446,"author":{"gitId":"tlyi"},"content":"            final double height \u003d Double.parseDouble(params);","lastModifiedDate":"2021-10-11"},{"lineNumber":447,"author":{"gitId":"tlyi"},"content":"            return new ChangeHeightCommand(height);","lastModifiedDate":"2021-10-10"},{"lineNumber":448,"author":{"gitId":"tlyi"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-10-10"},{"lineNumber":449,"author":{"gitId":"tryyang2001"},"content":"            logger.log(Level.WARNING, \"Detected non-digit height input.\");","lastModifiedDate":"2021-10-13"},{"lineNumber":450,"author":{"gitId":"tlyi"},"content":"            return new InvalidCommand(String.format(MESSAGE_ERROR_NOT_A_NUMBER, \"height\"));","lastModifiedDate":"2021-10-19"},{"lineNumber":451,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":452,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":453,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":454,"author":{"gitId":"tlyi"},"content":"    private Command parseChangeWeight(String params) {","lastModifiedDate":"2021-10-10"},{"lineNumber":455,"author":{"gitId":"tlyi"},"content":"        try {","lastModifiedDate":"2021-10-10"},{"lineNumber":456,"author":{"gitId":"tlyi"},"content":"            final double weight \u003d Double.parseDouble(params);","lastModifiedDate":"2021-10-11"},{"lineNumber":457,"author":{"gitId":"tlyi"},"content":"            return new ChangeWeightCommand(weight);","lastModifiedDate":"2021-10-10"},{"lineNumber":458,"author":{"gitId":"tlyi"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-10-10"},{"lineNumber":459,"author":{"gitId":"tryyang2001"},"content":"            logger.log(Level.WARNING, \"Detected non-digit weight input.\");","lastModifiedDate":"2021-10-13"},{"lineNumber":460,"author":{"gitId":"tlyi"},"content":"            return new InvalidCommand(String.format(MESSAGE_ERROR_NOT_A_NUMBER, \"weight\"));","lastModifiedDate":"2021-10-19"},{"lineNumber":461,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":462,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":463,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":464,"author":{"gitId":"tlyi"},"content":"    private Command parseSetGoal(String params) {","lastModifiedDate":"2021-10-10"},{"lineNumber":465,"author":{"gitId":"tlyi"},"content":"        try {","lastModifiedDate":"2021-10-10"},{"lineNumber":466,"author":{"gitId":"tlyi"},"content":"            final int goal \u003d Integer.parseInt(params);","lastModifiedDate":"2021-10-11"},{"lineNumber":467,"author":{"gitId":"tlyi"},"content":"            return new SetGoalCommand(goal);","lastModifiedDate":"2021-10-10"},{"lineNumber":468,"author":{"gitId":"tlyi"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-10-10"},{"lineNumber":469,"author":{"gitId":"tryyang2001"},"content":"            logger.log(Level.WARNING, \"Detected non-integer calorie goal input.\");","lastModifiedDate":"2021-10-13"},{"lineNumber":470,"author":{"gitId":"tlyi"},"content":"            return new InvalidCommand(String.format(MESSAGE_ERROR_NOT_A_NUMBER, \"goal\"));","lastModifiedDate":"2021-10-19"},{"lineNumber":471,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":472,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":473,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":474,"author":{"gitId":"tlyi"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":475,"author":{"gitId":"tlyi"},"content":"     * Returns a String array where 0th index is command string and 1st index is the remaining parameters.","lastModifiedDate":"2021-10-10"},{"lineNumber":476,"author":{"gitId":"tlyi"},"content":"     * Command string and parameter string is assumed to be separated by the first \" \" in input.","lastModifiedDate":"2021-10-10"},{"lineNumber":477,"author":{"gitId":"tlyi"},"content":"     * If no parameters are provided in the input, 1st index will be set to EMPTY.","lastModifiedDate":"2021-10-10"},{"lineNumber":478,"author":{"gitId":"tlyi"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":479,"author":{"gitId":"tlyi"},"content":"     * @param input Raw user input string","lastModifiedDate":"2021-10-10"},{"lineNumber":480,"author":{"gitId":"tlyi"},"content":"     * @return String array [command, parameters]","lastModifiedDate":"2021-10-10"},{"lineNumber":481,"author":{"gitId":"tlyi"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":482,"author":{"gitId":"tlyi"},"content":"    private String[] splitInputIntoCommandAndParams(String input) {","lastModifiedDate":"2021-10-10"},{"lineNumber":483,"author":{"gitId":"tlyi"},"content":"        String[] commandAndParams \u003d new String[2];","lastModifiedDate":"2021-10-10"},{"lineNumber":484,"author":{"gitId":"tlyi"},"content":"        final String[] inputSplit \u003d input.trim().split(\" \", 2);","lastModifiedDate":"2021-10-10"},{"lineNumber":485,"author":{"gitId":"tlyi"},"content":"        //command string","lastModifiedDate":"2021-10-10"},{"lineNumber":486,"author":{"gitId":"tlyi"},"content":"        commandAndParams[0] \u003d inputSplit[0];","lastModifiedDate":"2021-10-10"},{"lineNumber":487,"author":{"gitId":"tlyi"},"content":"        //param string; if not given, set to EMPTY for error handling","lastModifiedDate":"2021-10-10"},{"lineNumber":488,"author":{"gitId":"tlyi"},"content":"        commandAndParams[1] \u003d (inputSplit.length \u003d\u003d 2) ? inputSplit[1].trim() : EMPTY;","lastModifiedDate":"2021-10-13"},{"lineNumber":489,"author":{"gitId":"tlyi"},"content":"        return commandAndParams;","lastModifiedDate":"2021-10-10"},{"lineNumber":490,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":491,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":492,"author":{"gitId":"tlyi"},"content":"    private boolean hasRequiredParams(String params, String... prefixes) {","lastModifiedDate":"2021-10-10"},{"lineNumber":493,"author":{"gitId":"tlyi"},"content":"        for (String prefix : prefixes) {","lastModifiedDate":"2021-10-10"},{"lineNumber":494,"author":{"gitId":"tlyi"},"content":"            if (!params.toLowerCase().contains(prefix + Command.COMMAND_PREFIX_DELIMITER)) {","lastModifiedDate":"2021-10-10"},{"lineNumber":495,"author":{"gitId":"tlyi"},"content":"                return false;","lastModifiedDate":"2021-10-10"},{"lineNumber":496,"author":{"gitId":"tlyi"},"content":"            }","lastModifiedDate":"2021-10-10"},{"lineNumber":497,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":498,"author":{"gitId":"tlyi"},"content":"        return true;","lastModifiedDate":"2021-10-10"},{"lineNumber":499,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":500,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":501,"author":{"gitId":"tlyi"},"content":"    private String extractItemTypePrefix(String params) throws ItemNotSpecifiedException {","lastModifiedDate":"2021-10-10"},{"lineNumber":502,"author":{"gitId":"tlyi"},"content":"        boolean isExercise \u003d","lastModifiedDate":"2021-10-10"},{"lineNumber":503,"author":{"gitId":"tlyi"},"content":"                params.toLowerCase().contains(Command.COMMAND_PREFIX_EXERCISE","lastModifiedDate":"2021-10-10"},{"lineNumber":504,"author":{"gitId":"tlyi"},"content":"                        + Command.COMMAND_PREFIX_DELIMITER);","lastModifiedDate":"2021-10-10"},{"lineNumber":505,"author":{"gitId":"tlyi"},"content":"        boolean isFood \u003d","lastModifiedDate":"2021-10-10"},{"lineNumber":506,"author":{"gitId":"tlyi"},"content":"                params.toLowerCase().contains(Command.COMMAND_PREFIX_FOOD","lastModifiedDate":"2021-10-10"},{"lineNumber":507,"author":{"gitId":"tlyi"},"content":"                        + Command.COMMAND_PREFIX_DELIMITER);","lastModifiedDate":"2021-10-10"},{"lineNumber":508,"author":{"gitId":"tlyi"},"content":"        boolean isUpcomingExercise \u003d","lastModifiedDate":"2021-10-19"},{"lineNumber":509,"author":{"gitId":"tlyi"},"content":"                params.toLowerCase().contains(Command.COMMAND_PREFIX_UPCOMING_EXERCISE","lastModifiedDate":"2021-10-19"},{"lineNumber":510,"author":{"gitId":"tlyi"},"content":"                        + Command.COMMAND_PREFIX_DELIMITER);","lastModifiedDate":"2021-10-19"},{"lineNumber":511,"author":{"gitId":"tlyi"},"content":"        boolean isExerciseBank \u003d","lastModifiedDate":"2021-10-19"},{"lineNumber":512,"author":{"gitId":"tlyi"},"content":"                params.toLowerCase().contains(Command.COMMAND_PREFIX_EXERCISE_BANK","lastModifiedDate":"2021-10-19"},{"lineNumber":513,"author":{"gitId":"tlyi"},"content":"                        + Command.COMMAND_PREFIX_DELIMITER);","lastModifiedDate":"2021-10-19"},{"lineNumber":514,"author":{"gitId":"tlyi"},"content":"        boolean isFoodBank \u003d","lastModifiedDate":"2021-10-19"},{"lineNumber":515,"author":{"gitId":"tlyi"},"content":"                params.toLowerCase().contains(Command.COMMAND_PREFIX_FOOD_BANK","lastModifiedDate":"2021-10-19"},{"lineNumber":516,"author":{"gitId":"tlyi"},"content":"                        + Command.COMMAND_PREFIX_DELIMITER);","lastModifiedDate":"2021-10-19"},{"lineNumber":517,"author":{"gitId":"xingjie99"},"content":"        boolean isRecurringExercise \u003d","lastModifiedDate":"2021-10-20"},{"lineNumber":518,"author":{"gitId":"xingjie99"},"content":"                params.toLowerCase().contains(Command.COMMAND_PREFIX_RECURRING","lastModifiedDate":"2021-10-20"},{"lineNumber":519,"author":{"gitId":"xingjie99"},"content":"                        + Command.COMMAND_PREFIX_DELIMITER);","lastModifiedDate":"2021-10-20"},{"lineNumber":520,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":521,"author":{"gitId":"tlyi"},"content":"        boolean isItemSpecified \u003d checkIsItemSpecified(isExercise, isFood, isUpcomingExercise,","lastModifiedDate":"2021-10-19"},{"lineNumber":522,"author":{"gitId":"xingjie99"},"content":"                isExerciseBank, isFoodBank, isRecurringExercise);","lastModifiedDate":"2021-10-20"},{"lineNumber":523,"author":{"gitId":"tlyi"},"content":"        if (!isItemSpecified) {","lastModifiedDate":"2021-10-19"},{"lineNumber":524,"author":{"gitId":"tlyi"},"content":"            logger.log(Level.WARNING, \"Detected none or more than one item\");","lastModifiedDate":"2021-10-19"},{"lineNumber":525,"author":{"gitId":"tlyi"},"content":"            throw new ItemNotSpecifiedException();","lastModifiedDate":"2021-10-19"},{"lineNumber":526,"author":{"gitId":"tlyi"},"content":"        } else if (isExercise) {","lastModifiedDate":"2021-10-10"},{"lineNumber":527,"author":{"gitId":"tlyi"},"content":"            return Command.COMMAND_PREFIX_EXERCISE;","lastModifiedDate":"2021-10-10"},{"lineNumber":528,"author":{"gitId":"tlyi"},"content":"        } else if (isFood) {","lastModifiedDate":"2021-10-19"},{"lineNumber":529,"author":{"gitId":"tlyi"},"content":"            return Command.COMMAND_PREFIX_FOOD;","lastModifiedDate":"2021-10-10"},{"lineNumber":530,"author":{"gitId":"tlyi"},"content":"        } else if (isUpcomingExercise) {","lastModifiedDate":"2021-10-19"},{"lineNumber":531,"author":{"gitId":"tlyi"},"content":"            return Command.COMMAND_PREFIX_UPCOMING_EXERCISE;","lastModifiedDate":"2021-10-19"},{"lineNumber":532,"author":{"gitId":"tlyi"},"content":"        } else if (isExerciseBank) {","lastModifiedDate":"2021-10-19"},{"lineNumber":533,"author":{"gitId":"tlyi"},"content":"            return Command.COMMAND_PREFIX_EXERCISE_BANK;","lastModifiedDate":"2021-10-19"},{"lineNumber":534,"author":{"gitId":"xingjie99"},"content":"        } else if (isRecurringExercise) {","lastModifiedDate":"2021-10-20"},{"lineNumber":535,"author":{"gitId":"xingjie99"},"content":"            return Command.COMMAND_PREFIX_RECURRING;","lastModifiedDate":"2021-10-20"},{"lineNumber":536,"author":{"gitId":"tlyi"},"content":"        } else {","lastModifiedDate":"2021-10-19"},{"lineNumber":537,"author":{"gitId":"tlyi"},"content":"            assert isFoodBank : \"Must be food bank if all above conditions are not satisfied\";","lastModifiedDate":"2021-10-19"},{"lineNumber":538,"author":{"gitId":"tlyi"},"content":"            return Command.COMMAND_PREFIX_FOOD_BANK;","lastModifiedDate":"2021-10-19"},{"lineNumber":539,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":540,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":541,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":542,"author":{"gitId":"tlyi"},"content":"    private boolean checkIsItemSpecified(boolean... paramBool) {","lastModifiedDate":"2021-10-19"},{"lineNumber":543,"author":{"gitId":"tlyi"},"content":"        int numberOfParams \u003d 0;","lastModifiedDate":"2021-10-19"},{"lineNumber":544,"author":{"gitId":"tlyi"},"content":"        for (boolean isParam : paramBool) {","lastModifiedDate":"2021-10-19"},{"lineNumber":545,"author":{"gitId":"tlyi"},"content":"            if (isParam) {","lastModifiedDate":"2021-10-19"},{"lineNumber":546,"author":{"gitId":"tlyi"},"content":"                numberOfParams +\u003d 1;","lastModifiedDate":"2021-10-19"},{"lineNumber":547,"author":{"gitId":"tlyi"},"content":"            }","lastModifiedDate":"2021-10-19"},{"lineNumber":548,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":549,"author":{"gitId":"tlyi"},"content":"        return numberOfParams \u003d\u003d 1 ? true : false; //item must be exactly 1","lastModifiedDate":"2021-10-19"},{"lineNumber":550,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":551,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":552,"author":{"gitId":"tlyi"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":553,"author":{"gitId":"tryyang2001"},"content":"     * Extracts only the parameter required so that any additional parameter","lastModifiedDate":"2021-10-13"},{"lineNumber":554,"author":{"gitId":"tlyi"},"content":"     * specified behind this string (if any) is removed.","lastModifiedDate":"2021-10-11"},{"lineNumber":555,"author":{"gitId":"tlyi"},"content":"     * E.g. \"John Doe w/20\" is returned as \"John Doe\".","lastModifiedDate":"2021-10-11"},{"lineNumber":556,"author":{"gitId":"tlyi"},"content":"     * NOTE: This is why users are not allowed to include the character \"/\" in their inputs","lastModifiedDate":"2021-10-12"},{"lineNumber":557,"author":{"gitId":"tlyi"},"content":"     * other than to specify a parameter.","lastModifiedDate":"2021-10-12"},{"lineNumber":558,"author":{"gitId":"tlyi"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":559,"author":{"gitId":"tlyi"},"content":"    private String extractRelevantParameter(String params) {","lastModifiedDate":"2021-10-10"},{"lineNumber":560,"author":{"gitId":"tlyi"},"content":"        if (params.contains(Command.COMMAND_PREFIX_DELIMITER)) {","lastModifiedDate":"2021-10-10"},{"lineNumber":561,"author":{"gitId":"tlyi"},"content":"            return params.substring(0, params.indexOf(Command.COMMAND_PREFIX_DELIMITER) - 1).trim();","lastModifiedDate":"2021-10-10"},{"lineNumber":562,"author":{"gitId":"tlyi"},"content":"        } else {","lastModifiedDate":"2021-10-10"},{"lineNumber":563,"author":{"gitId":"tlyi"},"content":"            return params;","lastModifiedDate":"2021-10-10"},{"lineNumber":564,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":565,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":566,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":567,"author":{"gitId":"tlyi"},"content":"    private String extractItemDescription(String params, String prefix)","lastModifiedDate":"2021-10-19"},{"lineNumber":568,"author":{"gitId":"tlyi"},"content":"            throws ParamInvalidException, ParamMissingException {","lastModifiedDate":"2021-10-19"},{"lineNumber":569,"author":{"gitId":"tlyi"},"content":"        try {","lastModifiedDate":"2021-10-10"},{"lineNumber":570,"author":{"gitId":"tlyi"},"content":"            String stringAfterPrefix \u003d params.split(prefix + Command.COMMAND_PREFIX_DELIMITER, 2)[1];","lastModifiedDate":"2021-10-11"},{"lineNumber":571,"author":{"gitId":"tlyi"},"content":"            String description \u003d extractRelevantParameter(stringAfterPrefix);","lastModifiedDate":"2021-10-10"},{"lineNumber":572,"author":{"gitId":"tlyi"},"content":"            if (description.equals(EMPTY)) {","lastModifiedDate":"2021-10-10"},{"lineNumber":573,"author":{"gitId":"tlyi"},"content":"                logger.log(Level.WARNING, \"Detected empty description\");","lastModifiedDate":"2021-10-14"},{"lineNumber":574,"author":{"gitId":"tlyi"},"content":"                throw new ParamInvalidException(MESSAGE_ERROR_NO_DESCRIPTION);","lastModifiedDate":"2021-10-10"},{"lineNumber":575,"author":{"gitId":"tlyi"},"content":"            }","lastModifiedDate":"2021-10-10"},{"lineNumber":576,"author":{"gitId":"tlyi"},"content":"            return description;","lastModifiedDate":"2021-10-10"},{"lineNumber":577,"author":{"gitId":"tlyi"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-10-10"},{"lineNumber":578,"author":{"gitId":"tlyi"},"content":"            logger.log(Level.WARNING, String.format(\"Detected missing command prefix (%s)\", prefix));","lastModifiedDate":"2021-10-14"},{"lineNumber":579,"author":{"gitId":"tlyi"},"content":"            throw new ParamMissingException(MESSAGE_ERROR_NO_DESCRIPTION);","lastModifiedDate":"2021-10-19"},{"lineNumber":580,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":581,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":582,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":583,"author":{"gitId":"tlyi"},"content":"    private int extractItemIndex(String params, String prefix) throws ParamInvalidException, ParamMissingException {","lastModifiedDate":"2021-10-19"},{"lineNumber":584,"author":{"gitId":"tlyi"},"content":"        try {","lastModifiedDate":"2021-10-19"},{"lineNumber":585,"author":{"gitId":"tlyi"},"content":"            final String itemNumString \u003d extractItemDescription(params, prefix).split(\" \")[0].trim();","lastModifiedDate":"2021-10-19"},{"lineNumber":586,"author":{"gitId":"tlyi"},"content":"            return convertItemNumToItemIndex(Integer.parseInt(itemNumString));","lastModifiedDate":"2021-10-19"},{"lineNumber":587,"author":{"gitId":"tlyi"},"content":"        } catch (ParamInvalidException | ParamMissingException e) {","lastModifiedDate":"2021-10-19"},{"lineNumber":588,"author":{"gitId":"tlyi"},"content":"            throw new ParamMissingException(MESSAGE_ERROR_NO_ITEM_NUM);","lastModifiedDate":"2021-10-19"},{"lineNumber":589,"author":{"gitId":"tlyi"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-10-19"},{"lineNumber":590,"author":{"gitId":"tlyi"},"content":"            throw new ParamInvalidException(MESSAGE_ERROR_INVALID_ITEM_NUM);","lastModifiedDate":"2021-10-19"},{"lineNumber":591,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":592,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":593,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":594,"author":{"gitId":"tlyi"},"content":"    private int extractItemCalories(String params)","lastModifiedDate":"2021-10-19"},{"lineNumber":595,"author":{"gitId":"tlyi"},"content":"            throws ParamInvalidException, ParamMissingException {","lastModifiedDate":"2021-10-19"},{"lineNumber":596,"author":{"gitId":"tlyi"},"content":"        try {","lastModifiedDate":"2021-10-10"},{"lineNumber":597,"author":{"gitId":"tlyi"},"content":"            if (params.contains(Command.COMMAND_PREFIX_CALORIES + Command.COMMAND_PREFIX_DELIMITER)) {","lastModifiedDate":"2021-10-10"},{"lineNumber":598,"author":{"gitId":"tlyi"},"content":"                String stringAfterPrefix \u003d","lastModifiedDate":"2021-10-10"},{"lineNumber":599,"author":{"gitId":"tlyi"},"content":"                        params.split(Command.COMMAND_PREFIX_CALORIES","lastModifiedDate":"2021-10-11"},{"lineNumber":600,"author":{"gitId":"tlyi"},"content":"                                + Command.COMMAND_PREFIX_DELIMITER, 2)[1];","lastModifiedDate":"2021-10-11"},{"lineNumber":601,"author":{"gitId":"tlyi"},"content":"                String caloriesString \u003d stringAfterPrefix.split(\" \", 2)[0];","lastModifiedDate":"2021-10-10"},{"lineNumber":602,"author":{"gitId":"tlyi"},"content":"                return Integer.parseInt(caloriesString);","lastModifiedDate":"2021-10-10"},{"lineNumber":603,"author":{"gitId":"tlyi"},"content":"            } else {","lastModifiedDate":"2021-10-10"},{"lineNumber":604,"author":{"gitId":"tlyi"},"content":"                logger.log(Level.WARNING, \"Detected missing calories prefix\");","lastModifiedDate":"2021-10-14"},{"lineNumber":605,"author":{"gitId":"tlyi"},"content":"                throw new ParamMissingException(MESSAGE_ERROR_NO_CALORIES_INFO);","lastModifiedDate":"2021-10-19"},{"lineNumber":606,"author":{"gitId":"tlyi"},"content":"            }","lastModifiedDate":"2021-10-10"},{"lineNumber":607,"author":{"gitId":"tlyi"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-10-10"},{"lineNumber":608,"author":{"gitId":"tlyi"},"content":"            logger.log(Level.WARNING, \"Detected non-digit calories input\");","lastModifiedDate":"2021-10-14"},{"lineNumber":609,"author":{"gitId":"tlyi"},"content":"            throw new ParamInvalidException(MESSAGE_ERROR_INVALID_CALORIES_INFO);","lastModifiedDate":"2021-10-10"},{"lineNumber":610,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":611,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":612,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":613,"author":{"gitId":"tlyi"},"content":"    private String extractProfileName(String params) throws ParamInvalidException {","lastModifiedDate":"2021-10-19"},{"lineNumber":614,"author":{"gitId":"tlyi"},"content":"        try {","lastModifiedDate":"2021-10-19"},{"lineNumber":615,"author":{"gitId":"tlyi"},"content":"            String stringAfterPrefix \u003d","lastModifiedDate":"2021-10-19"},{"lineNumber":616,"author":{"gitId":"tlyi"},"content":"                    params.split(Command.COMMAND_PREFIX_NAME","lastModifiedDate":"2021-10-19"},{"lineNumber":617,"author":{"gitId":"tlyi"},"content":"                            + Command.COMMAND_PREFIX_DELIMITER, 2)[1];","lastModifiedDate":"2021-10-19"},{"lineNumber":618,"author":{"gitId":"tlyi"},"content":"            String name \u003d extractRelevantParameter(stringAfterPrefix).trim();","lastModifiedDate":"2021-10-19"},{"lineNumber":619,"author":{"gitId":"tlyi"},"content":"            if (name.equals(EMPTY)) {","lastModifiedDate":"2021-10-19"},{"lineNumber":620,"author":{"gitId":"tlyi"},"content":"                logger.log(Level.WARNING, \"Detected empty name input.\");","lastModifiedDate":"2021-10-19"},{"lineNumber":621,"author":{"gitId":"tlyi"},"content":"                throw new ParamInvalidException(MESSAGE_ERROR_NO_NAME);","lastModifiedDate":"2021-10-19"},{"lineNumber":622,"author":{"gitId":"tlyi"},"content":"            }","lastModifiedDate":"2021-10-19"},{"lineNumber":623,"author":{"gitId":"tlyi"},"content":"            return name;","lastModifiedDate":"2021-10-19"},{"lineNumber":624,"author":{"gitId":"tlyi"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-10-19"},{"lineNumber":625,"author":{"gitId":"tlyi"},"content":"            logger.log(Level.WARNING, \"Detected missing name prefix, returning empty string.\");","lastModifiedDate":"2021-10-19"},{"lineNumber":626,"author":{"gitId":"tlyi"},"content":"            return Command.NULL_STRING;","lastModifiedDate":"2021-10-19"},{"lineNumber":627,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":628,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":629,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":630,"author":{"gitId":"tlyi"},"content":"    private double extractHeight(String params) throws ParamInvalidException {","lastModifiedDate":"2021-10-10"},{"lineNumber":631,"author":{"gitId":"tlyi"},"content":"        try {","lastModifiedDate":"2021-10-10"},{"lineNumber":632,"author":{"gitId":"tlyi"},"content":"            String stringAfterPrefix \u003d","lastModifiedDate":"2021-10-10"},{"lineNumber":633,"author":{"gitId":"tlyi"},"content":"                    params.split(Command.COMMAND_PREFIX_HEIGHT","lastModifiedDate":"2021-10-11"},{"lineNumber":634,"author":{"gitId":"tlyi"},"content":"                            + Command.COMMAND_PREFIX_DELIMITER, 2)[1];","lastModifiedDate":"2021-10-11"},{"lineNumber":635,"author":{"gitId":"tlyi"},"content":"            String doubleString \u003d stringAfterPrefix.split(\" \", 2)[0];","lastModifiedDate":"2021-10-10"},{"lineNumber":636,"author":{"gitId":"tlyi"},"content":"            return Double.parseDouble(doubleString);","lastModifiedDate":"2021-10-10"},{"lineNumber":637,"author":{"gitId":"tlyi"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-10-10"},{"lineNumber":638,"author":{"gitId":"tryyang2001"},"content":"            logger.log(Level.WARNING, \"Detected non-digit height input.\");","lastModifiedDate":"2021-10-13"},{"lineNumber":639,"author":{"gitId":"tlyi"},"content":"            throw new ParamInvalidException(String.format(MESSAGE_ERROR_NOT_A_NUMBER, \"height\"));","lastModifiedDate":"2021-10-19"},{"lineNumber":640,"author":{"gitId":"tlyi"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-10-19"},{"lineNumber":641,"author":{"gitId":"tlyi"},"content":"            logger.log(Level.WARNING, \"Detected missing height prefix, return 0 height\");","lastModifiedDate":"2021-10-19"},{"lineNumber":642,"author":{"gitId":"tlyi"},"content":"            return Command.NULL_DOUBLE;","lastModifiedDate":"2021-10-19"},{"lineNumber":643,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":644,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":645,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":646,"author":{"gitId":"tlyi"},"content":"    private double extractWeight(String params) throws ParamInvalidException {","lastModifiedDate":"2021-10-10"},{"lineNumber":647,"author":{"gitId":"tlyi"},"content":"        try {","lastModifiedDate":"2021-10-10"},{"lineNumber":648,"author":{"gitId":"tlyi"},"content":"            String stringAfterPrefix \u003d","lastModifiedDate":"2021-10-10"},{"lineNumber":649,"author":{"gitId":"tlyi"},"content":"                    params.split(Command.COMMAND_PREFIX_WEIGHT","lastModifiedDate":"2021-10-11"},{"lineNumber":650,"author":{"gitId":"tlyi"},"content":"                            + Command.COMMAND_PREFIX_DELIMITER, 2)[1];","lastModifiedDate":"2021-10-11"},{"lineNumber":651,"author":{"gitId":"tlyi"},"content":"            String doubleString \u003d stringAfterPrefix.split(\" \", 2)[0];","lastModifiedDate":"2021-10-10"},{"lineNumber":652,"author":{"gitId":"tlyi"},"content":"            return Double.parseDouble(doubleString);","lastModifiedDate":"2021-10-10"},{"lineNumber":653,"author":{"gitId":"tlyi"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-10-10"},{"lineNumber":654,"author":{"gitId":"tryyang2001"},"content":"            logger.log(Level.WARNING, \"Detected non-digit weight input.\");","lastModifiedDate":"2021-10-13"},{"lineNumber":655,"author":{"gitId":"tlyi"},"content":"            throw new ParamInvalidException(String.format(MESSAGE_ERROR_NOT_A_NUMBER, \"weight\"));","lastModifiedDate":"2021-10-19"},{"lineNumber":656,"author":{"gitId":"tlyi"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-10-19"},{"lineNumber":657,"author":{"gitId":"tlyi"},"content":"            logger.log(Level.WARNING, \"Detected missing weight prefix, return 0 weight\");","lastModifiedDate":"2021-10-19"},{"lineNumber":658,"author":{"gitId":"tlyi"},"content":"            return Command.NULL_DOUBLE;","lastModifiedDate":"2021-10-19"},{"lineNumber":659,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":660,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":661,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":662,"author":{"gitId":"tryyang2001"},"content":"    private int extractCalorieGoal(String params) throws ParamInvalidException {","lastModifiedDate":"2021-10-14"},{"lineNumber":663,"author":{"gitId":"tryyang2001"},"content":"        try {","lastModifiedDate":"2021-10-14"},{"lineNumber":664,"author":{"gitId":"tryyang2001"},"content":"            String stringAfterPrefix \u003d","lastModifiedDate":"2021-10-14"},{"lineNumber":665,"author":{"gitId":"tryyang2001"},"content":"                    params.split(Command.COMMAND_PREFIX_GOAL","lastModifiedDate":"2021-10-14"},{"lineNumber":666,"author":{"gitId":"tryyang2001"},"content":"                            + Command.COMMAND_PREFIX_DELIMITER, 2)[1];","lastModifiedDate":"2021-10-14"},{"lineNumber":667,"author":{"gitId":"tryyang2001"},"content":"            String intString \u003d stringAfterPrefix.split(\" \", 2)[0];","lastModifiedDate":"2021-10-14"},{"lineNumber":668,"author":{"gitId":"tryyang2001"},"content":"            return Integer.parseInt(intString);","lastModifiedDate":"2021-10-14"},{"lineNumber":669,"author":{"gitId":"tryyang2001"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-10-14"},{"lineNumber":670,"author":{"gitId":"tryyang2001"},"content":"            logger.log(Level.WARNING, \"Detected non-digit goal input.\");","lastModifiedDate":"2021-10-14"},{"lineNumber":671,"author":{"gitId":"tlyi"},"content":"            throw new ParamInvalidException(String.format(MESSAGE_ERROR_NOT_A_NUMBER, \"goal\"));","lastModifiedDate":"2021-10-19"},{"lineNumber":672,"author":{"gitId":"tlyi"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-10-19"},{"lineNumber":673,"author":{"gitId":"tlyi"},"content":"            logger.log(Level.WARNING, \"Detected missing goal prefix, return 0 goal\");","lastModifiedDate":"2021-10-19"},{"lineNumber":674,"author":{"gitId":"tlyi"},"content":"            return Command.NULL_INT;","lastModifiedDate":"2021-10-19"},{"lineNumber":675,"author":{"gitId":"tryyang2001"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":676,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":677,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":678,"author":{"gitId":"tlyi"},"content":"    private int extractAge(String params) throws ParamInvalidException {","lastModifiedDate":"2021-10-19"},{"lineNumber":679,"author":{"gitId":"tlyi"},"content":"        try {","lastModifiedDate":"2021-10-10"},{"lineNumber":680,"author":{"gitId":"tlyi"},"content":"            String stringAfterPrefix \u003d","lastModifiedDate":"2021-10-10"},{"lineNumber":681,"author":{"gitId":"tlyi"},"content":"                    params.split(Command.COMMAND_PREFIX_AGE","lastModifiedDate":"2021-10-19"},{"lineNumber":682,"author":{"gitId":"tlyi"},"content":"                            + Command.COMMAND_PREFIX_DELIMITER, 2)[1];","lastModifiedDate":"2021-10-10"},{"lineNumber":683,"author":{"gitId":"tlyi"},"content":"            String intString \u003d stringAfterPrefix.split(\" \", 2)[0];","lastModifiedDate":"2021-10-19"},{"lineNumber":684,"author":{"gitId":"tlyi"},"content":"            return Integer.parseInt(intString);","lastModifiedDate":"2021-10-19"},{"lineNumber":685,"author":{"gitId":"tlyi"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-10-19"},{"lineNumber":686,"author":{"gitId":"tlyi"},"content":"            logger.log(Level.WARNING, \"Detected non-digit age input.\");","lastModifiedDate":"2021-10-19"},{"lineNumber":687,"author":{"gitId":"tlyi"},"content":"            throw new ParamInvalidException(String.format(MESSAGE_ERROR_NOT_A_NUMBER, \"age\"));","lastModifiedDate":"2021-10-19"},{"lineNumber":688,"author":{"gitId":"tlyi"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-10-19"},{"lineNumber":689,"author":{"gitId":"tlyi"},"content":"            logger.log(Level.WARNING, \"Detected missing age prefix, return 0 age\");","lastModifiedDate":"2021-10-19"},{"lineNumber":690,"author":{"gitId":"tlyi"},"content":"            return Command.NULL_INT;","lastModifiedDate":"2021-10-19"},{"lineNumber":691,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":692,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":693,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":694,"author":{"gitId":"tlyi"},"content":"    private int extractActivityFactor(String params) throws ParamInvalidException {","lastModifiedDate":"2021-10-19"},{"lineNumber":695,"author":{"gitId":"tlyi"},"content":"        try {","lastModifiedDate":"2021-10-19"},{"lineNumber":696,"author":{"gitId":"tlyi"},"content":"            String stringAfterPrefix \u003d","lastModifiedDate":"2021-10-19"},{"lineNumber":697,"author":{"gitId":"tlyi"},"content":"                    params.split(Command.COMMAND_PREFIX_ACTIVITY_FACTOR","lastModifiedDate":"2021-10-19"},{"lineNumber":698,"author":{"gitId":"tlyi"},"content":"                            + Command.COMMAND_PREFIX_DELIMITER, 2)[1];","lastModifiedDate":"2021-10-19"},{"lineNumber":699,"author":{"gitId":"tlyi"},"content":"            String intString \u003d stringAfterPrefix.split(\" \", 2)[0];","lastModifiedDate":"2021-10-19"},{"lineNumber":700,"author":{"gitId":"tlyi"},"content":"            return Integer.parseInt(intString);","lastModifiedDate":"2021-10-19"},{"lineNumber":701,"author":{"gitId":"tlyi"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-10-19"},{"lineNumber":702,"author":{"gitId":"tlyi"},"content":"            logger.log(Level.WARNING, \"Detected non-digit activity factor input.\");","lastModifiedDate":"2021-10-19"},{"lineNumber":703,"author":{"gitId":"tlyi"},"content":"            throw new ParamInvalidException(String.format(MESSAGE_ERROR_NOT_A_NUMBER, \"activity factor\"));","lastModifiedDate":"2021-10-19"},{"lineNumber":704,"author":{"gitId":"tlyi"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-10-10"},{"lineNumber":705,"author":{"gitId":"tlyi"},"content":"            logger.log(Level.WARNING, \"Detected missing activity factor prefix, return 0 activity factor\");","lastModifiedDate":"2021-10-19"},{"lineNumber":706,"author":{"gitId":"tlyi"},"content":"            return Command.NULL_INT;","lastModifiedDate":"2021-10-19"},{"lineNumber":707,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":708,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":709,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":710,"author":{"gitId":"tlyi"},"content":"    private char extractGender(String params) throws ParamInvalidException {","lastModifiedDate":"2021-10-19"},{"lineNumber":711,"author":{"gitId":"tlyi"},"content":"        try {","lastModifiedDate":"2021-10-19"},{"lineNumber":712,"author":{"gitId":"tlyi"},"content":"            String stringAfterPrefix \u003d","lastModifiedDate":"2021-10-19"},{"lineNumber":713,"author":{"gitId":"tlyi"},"content":"                    params.split(Command.COMMAND_PREFIX_GENDER","lastModifiedDate":"2021-10-19"},{"lineNumber":714,"author":{"gitId":"tlyi"},"content":"                            + Command.COMMAND_PREFIX_DELIMITER, 2)[1];","lastModifiedDate":"2021-10-19"},{"lineNumber":715,"author":{"gitId":"tlyi"},"content":"            return stringAfterPrefix.charAt(0);","lastModifiedDate":"2021-10-19"},{"lineNumber":716,"author":{"gitId":"tlyi"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-10-19"},{"lineNumber":717,"author":{"gitId":"tlyi"},"content":"            logger.log(Level.WARNING, \"Detected missing gender prefix, return null gender\");","lastModifiedDate":"2021-10-19"},{"lineNumber":718,"author":{"gitId":"tlyi"},"content":"            return Command.NULL_CHAR;","lastModifiedDate":"2021-10-19"},{"lineNumber":719,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":720,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":721,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":722,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":723,"author":{"gitId":"tlyi"},"content":"    private LocalDate extractDate(String params, boolean isRequired)","lastModifiedDate":"2021-10-19"},{"lineNumber":724,"author":{"gitId":"tlyi"},"content":"            throws ParamInvalidException, ParamMissingException {","lastModifiedDate":"2021-10-19"},{"lineNumber":725,"author":{"gitId":"tlyi"},"content":"        try {","lastModifiedDate":"2021-10-19"},{"lineNumber":726,"author":{"gitId":"tlyi"},"content":"            String stringAfterPrefix \u003d","lastModifiedDate":"2021-10-19"},{"lineNumber":727,"author":{"gitId":"tlyi"},"content":"                    params.split(Command.COMMAND_PREFIX_DATE","lastModifiedDate":"2021-10-19"},{"lineNumber":728,"author":{"gitId":"tlyi"},"content":"                            + Command.COMMAND_PREFIX_DELIMITER, 2)[1];","lastModifiedDate":"2021-10-19"},{"lineNumber":729,"author":{"gitId":"tlyi"},"content":"            String dateString \u003d extractRelevantParameter(stringAfterPrefix);","lastModifiedDate":"2021-10-19"},{"lineNumber":730,"author":{"gitId":"tlyi"},"content":"            logger.log(Level.INFO, String.format(\"date string detected is: %s\", dateString));","lastModifiedDate":"2021-10-19"},{"lineNumber":731,"author":{"gitId":"tlyi"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(DATE_FORMAT);","lastModifiedDate":"2021-10-19"},{"lineNumber":732,"author":{"gitId":"tlyi"},"content":"            return LocalDate.parse(dateString, formatter);","lastModifiedDate":"2021-10-19"},{"lineNumber":733,"author":{"gitId":"tlyi"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-10-19"},{"lineNumber":734,"author":{"gitId":"tlyi"},"content":"            if (isRequired) {","lastModifiedDate":"2021-10-19"},{"lineNumber":735,"author":{"gitId":"tlyi"},"content":"                logger.log(Level.WARNING, \"Detected empty date input after prefix but date is required!\");","lastModifiedDate":"2021-10-19"},{"lineNumber":736,"author":{"gitId":"tlyi"},"content":"                throw new ParamMissingException(MESSAGE_ERROR_NO_DATE);","lastModifiedDate":"2021-10-19"},{"lineNumber":737,"author":{"gitId":"tlyi"},"content":"            } else {","lastModifiedDate":"2021-10-19"},{"lineNumber":738,"author":{"gitId":"tlyi"},"content":"                logger.log(Level.INFO, \"Detected empty date input after prefix, assuming date to be now\");","lastModifiedDate":"2021-10-19"},{"lineNumber":739,"author":{"gitId":"tlyi"},"content":"                return LocalDate.now();","lastModifiedDate":"2021-10-19"},{"lineNumber":740,"author":{"gitId":"tlyi"},"content":"            }","lastModifiedDate":"2021-10-19"},{"lineNumber":741,"author":{"gitId":"tlyi"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-10-19"},{"lineNumber":742,"author":{"gitId":"tlyi"},"content":"            throw new ParamInvalidException(MESSAGE_ERROR_INVALID_DATE_FORMAT);","lastModifiedDate":"2021-10-19"},{"lineNumber":743,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":744,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":745,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":746,"author":{"gitId":"xingjie99"},"content":"    private LocalDate extractStartDate(String params)","lastModifiedDate":"2021-10-20"},{"lineNumber":747,"author":{"gitId":"xingjie99"},"content":"            throws ParamInvalidException, ParamMissingException {","lastModifiedDate":"2021-10-20"},{"lineNumber":748,"author":{"gitId":"xingjie99"},"content":"        try {","lastModifiedDate":"2021-10-20"},{"lineNumber":749,"author":{"gitId":"xingjie99"},"content":"            String stringAfterPrefix \u003d","lastModifiedDate":"2021-10-20"},{"lineNumber":750,"author":{"gitId":"xingjie99"},"content":"                    params.split(Command.COMMAND_PREFIX_START_DATE","lastModifiedDate":"2021-10-20"},{"lineNumber":751,"author":{"gitId":"xingjie99"},"content":"                            + Command.COMMAND_PREFIX_DELIMITER, 2)[1];","lastModifiedDate":"2021-10-20"},{"lineNumber":752,"author":{"gitId":"xingjie99"},"content":"            String dateString \u003d extractRelevantParameter(stringAfterPrefix);","lastModifiedDate":"2021-10-20"},{"lineNumber":753,"author":{"gitId":"xingjie99"},"content":"            logger.log(Level.INFO, String.format(\"date string detected is: %s\", dateString));","lastModifiedDate":"2021-10-20"},{"lineNumber":754,"author":{"gitId":"xingjie99"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(DATE_FORMAT);","lastModifiedDate":"2021-10-20"},{"lineNumber":755,"author":{"gitId":"xingjie99"},"content":"            return LocalDate.parse(dateString, formatter);","lastModifiedDate":"2021-10-20"},{"lineNumber":756,"author":{"gitId":"xingjie99"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-10-20"},{"lineNumber":757,"author":{"gitId":"xingjie99"},"content":"            logger.log(Level.WARNING, \"Detected empty start date input after prefix but date is required!\");","lastModifiedDate":"2021-10-20"},{"lineNumber":758,"author":{"gitId":"xingjie99"},"content":"            throw new ParamMissingException(MESSAGE_ERROR_NO_DATE);","lastModifiedDate":"2021-10-20"},{"lineNumber":759,"author":{"gitId":"xingjie99"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-10-20"},{"lineNumber":760,"author":{"gitId":"xingjie99"},"content":"            throw new ParamInvalidException(MESSAGE_ERROR_INVALID_DATE_FORMAT);","lastModifiedDate":"2021-10-20"},{"lineNumber":761,"author":{"gitId":"xingjie99"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":762,"author":{"gitId":"xingjie99"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":763,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":764,"author":{"gitId":"xingjie99"},"content":"    private LocalDate extractEndDate(String params)","lastModifiedDate":"2021-10-20"},{"lineNumber":765,"author":{"gitId":"xingjie99"},"content":"            throws ParamInvalidException, ParamMissingException {","lastModifiedDate":"2021-10-20"},{"lineNumber":766,"author":{"gitId":"xingjie99"},"content":"        try {","lastModifiedDate":"2021-10-20"},{"lineNumber":767,"author":{"gitId":"xingjie99"},"content":"            String stringAfterPrefix \u003d","lastModifiedDate":"2021-10-20"},{"lineNumber":768,"author":{"gitId":"xingjie99"},"content":"                    params.split(Command.COMMAND_PREFIX_END_DATE","lastModifiedDate":"2021-10-20"},{"lineNumber":769,"author":{"gitId":"xingjie99"},"content":"                            + Command.COMMAND_PREFIX_DELIMITER, 2)[1];","lastModifiedDate":"2021-10-20"},{"lineNumber":770,"author":{"gitId":"xingjie99"},"content":"            String dateString \u003d extractRelevantParameter(stringAfterPrefix);","lastModifiedDate":"2021-10-20"},{"lineNumber":771,"author":{"gitId":"xingjie99"},"content":"            logger.log(Level.INFO, String.format(\"date string detected is: %s\", dateString));","lastModifiedDate":"2021-10-20"},{"lineNumber":772,"author":{"gitId":"xingjie99"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(DATE_FORMAT);","lastModifiedDate":"2021-10-20"},{"lineNumber":773,"author":{"gitId":"xingjie99"},"content":"            return LocalDate.parse(dateString, formatter);","lastModifiedDate":"2021-10-20"},{"lineNumber":774,"author":{"gitId":"xingjie99"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-10-20"},{"lineNumber":775,"author":{"gitId":"xingjie99"},"content":"            logger.log(Level.WARNING, \"Detected empty end date input after prefix but date is required!\");","lastModifiedDate":"2021-10-20"},{"lineNumber":776,"author":{"gitId":"xingjie99"},"content":"            throw new ParamMissingException(MESSAGE_ERROR_NO_DATE);","lastModifiedDate":"2021-10-20"},{"lineNumber":777,"author":{"gitId":"xingjie99"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-10-20"},{"lineNumber":778,"author":{"gitId":"xingjie99"},"content":"            throw new ParamInvalidException(MESSAGE_ERROR_INVALID_DATE_FORMAT);","lastModifiedDate":"2021-10-20"},{"lineNumber":779,"author":{"gitId":"xingjie99"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":780,"author":{"gitId":"xingjie99"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":781,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":782,"author":{"gitId":"tlyi"},"content":"    private LocalTime extractTime(String params) throws ParamInvalidException {","lastModifiedDate":"2021-10-19"},{"lineNumber":783,"author":{"gitId":"tlyi"},"content":"        try {","lastModifiedDate":"2021-10-19"},{"lineNumber":784,"author":{"gitId":"tlyi"},"content":"            String stringAfterPrefix \u003d","lastModifiedDate":"2021-10-19"},{"lineNumber":785,"author":{"gitId":"tlyi"},"content":"                    params.split(Command.COMMAND_PREFIX_TIME","lastModifiedDate":"2021-10-19"},{"lineNumber":786,"author":{"gitId":"tlyi"},"content":"                            + Command.COMMAND_PREFIX_DELIMITER, 2)[1];","lastModifiedDate":"2021-10-19"},{"lineNumber":787,"author":{"gitId":"tlyi"},"content":"            String timeString \u003d extractRelevantParameter(stringAfterPrefix);","lastModifiedDate":"2021-10-19"},{"lineNumber":788,"author":{"gitId":"tlyi"},"content":"            logger.log(Level.INFO, String.format(\"time string detected is: %s\", timeString));","lastModifiedDate":"2021-10-19"},{"lineNumber":789,"author":{"gitId":"tlyi"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(TIME_FORMAT);","lastModifiedDate":"2021-10-19"},{"lineNumber":790,"author":{"gitId":"tlyi"},"content":"            return LocalTime.parse(timeString, formatter);","lastModifiedDate":"2021-10-19"},{"lineNumber":791,"author":{"gitId":"tlyi"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-10-19"},{"lineNumber":792,"author":{"gitId":"tlyi"},"content":"            logger.log(Level.INFO, \"Detected empty time input after prefix, assuming time to be now\");","lastModifiedDate":"2021-10-19"},{"lineNumber":793,"author":{"gitId":"tlyi"},"content":"            return LocalTime.now();","lastModifiedDate":"2021-10-19"},{"lineNumber":794,"author":{"gitId":"tlyi"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-10-19"},{"lineNumber":795,"author":{"gitId":"tlyi"},"content":"            throw new ParamInvalidException(MESSAGE_ERROR_INVALID_TIME_FORMAT);","lastModifiedDate":"2021-10-19"},{"lineNumber":796,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":797,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":798,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":799,"author":{"gitId":"tlyi"},"content":"    private LocalDateTime extractDateTime(String params) throws ParamInvalidException, ParamMissingException {","lastModifiedDate":"2021-10-19"},{"lineNumber":800,"author":{"gitId":"tlyi"},"content":"        final LocalTime time \u003d extractTime(params);","lastModifiedDate":"2021-10-19"},{"lineNumber":801,"author":{"gitId":"tlyi"},"content":"        final LocalDate date \u003d extractDate(params, false);","lastModifiedDate":"2021-10-19"},{"lineNumber":802,"author":{"gitId":"tlyi"},"content":"        return date.atTime(time);","lastModifiedDate":"2021-10-19"},{"lineNumber":803,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":804,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":805,"author":{"gitId":"xingjie99"},"content":"    private ArrayList\u003cInteger\u003e extractDayOfTheWeek(String params)","lastModifiedDate":"2021-10-20"},{"lineNumber":806,"author":{"gitId":"xingjie99"},"content":"            throws ParamMissingException, ParamInvalidException {","lastModifiedDate":"2021-10-20"},{"lineNumber":807,"author":{"gitId":"xingjie99"},"content":"        ArrayList\u003cInteger\u003e dayOfTheWeek \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-20"},{"lineNumber":808,"author":{"gitId":"xingjie99"},"content":"        try {","lastModifiedDate":"2021-10-20"},{"lineNumber":809,"author":{"gitId":"xingjie99"},"content":"            String stringAfterPrefix \u003d","lastModifiedDate":"2021-10-20"},{"lineNumber":810,"author":{"gitId":"xingjie99"},"content":"                    params.split(Command.COMMAND_PREFIX_DAY_OF_THE_WEEK","lastModifiedDate":"2021-10-20"},{"lineNumber":811,"author":{"gitId":"xingjie99"},"content":"                            + Command.COMMAND_PREFIX_DELIMITER, 2)[1];","lastModifiedDate":"2021-10-20"},{"lineNumber":812,"author":{"gitId":"xingjie99"},"content":"            for (int i \u003d 0; i \u003c stringAfterPrefix.length(); i++) {","lastModifiedDate":"2021-10-20"},{"lineNumber":813,"author":{"gitId":"xingjie99"},"content":"                int day \u003d Integer.parseInt(String.valueOf(stringAfterPrefix.charAt(i)));","lastModifiedDate":"2021-10-20"},{"lineNumber":814,"author":{"gitId":"xingjie99"},"content":"                if (day \u003e MONDAY \u0026\u0026 day \u003c SUNDAY) { //between monday and sunday","lastModifiedDate":"2021-10-20"},{"lineNumber":815,"author":{"gitId":"xingjie99"},"content":"                    if (dayOfTheWeek.contains(day)) {","lastModifiedDate":"2021-10-20"},{"lineNumber":816,"author":{"gitId":"xingjie99"},"content":"                        throw new ParamInvalidException(MESSAGE_ERROR_REPEATED_DAY_OF_THE_WEEK);","lastModifiedDate":"2021-10-20"},{"lineNumber":817,"author":{"gitId":"xingjie99"},"content":"                    }","lastModifiedDate":"2021-10-20"},{"lineNumber":818,"author":{"gitId":"xingjie99"},"content":"                    dayOfTheWeek.add(day);","lastModifiedDate":"2021-10-20"},{"lineNumber":819,"author":{"gitId":"xingjie99"},"content":"                } else {","lastModifiedDate":"2021-10-20"},{"lineNumber":820,"author":{"gitId":"xingjie99"},"content":"                    throw new ParamInvalidException(MESSAGE_ERROR_INVALID_DAY_OF_THE_WEEK);","lastModifiedDate":"2021-10-20"},{"lineNumber":821,"author":{"gitId":"xingjie99"},"content":"                }","lastModifiedDate":"2021-10-20"},{"lineNumber":822,"author":{"gitId":"xingjie99"},"content":"            }","lastModifiedDate":"2021-10-20"},{"lineNumber":823,"author":{"gitId":"xingjie99"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-10-20"},{"lineNumber":824,"author":{"gitId":"xingjie99"},"content":"            logger.log(Level.WARNING, \"Detected empty day input after prefix but day is required!\");","lastModifiedDate":"2021-10-20"},{"lineNumber":825,"author":{"gitId":"xingjie99"},"content":"            throw new ParamMissingException(MESSAGE_ERROR_NO_DAY_OF_THE_WEEK);","lastModifiedDate":"2021-10-20"},{"lineNumber":826,"author":{"gitId":"xingjie99"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-10-20"},{"lineNumber":827,"author":{"gitId":"xingjie99"},"content":"            logger.log(Level.WARNING, \"Detected non-digit calories input\");","lastModifiedDate":"2021-10-20"},{"lineNumber":828,"author":{"gitId":"xingjie99"},"content":"            throw new ParamInvalidException(MESSAGE_ERROR_INVALID_DAY_OF_THE_WEEK);","lastModifiedDate":"2021-10-20"},{"lineNumber":829,"author":{"gitId":"xingjie99"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":830,"author":{"gitId":"xingjie99"},"content":"        return dayOfTheWeek;","lastModifiedDate":"2021-10-20"},{"lineNumber":831,"author":{"gitId":"xingjie99"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":832,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":833,"author":{"gitId":"tlyi"},"content":"    private boolean isFutureDate(LocalDate date) {","lastModifiedDate":"2021-10-19"},{"lineNumber":834,"author":{"gitId":"tlyi"},"content":"        return date.isAfter(LocalDate.now());","lastModifiedDate":"2021-10-19"},{"lineNumber":835,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":836,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":837,"author":{"gitId":"tlyi"},"content":"    private int convertItemNumToItemIndex(int itemNum) {","lastModifiedDate":"2021-10-11"},{"lineNumber":838,"author":{"gitId":"tlyi"},"content":"        return itemNum - 1;","lastModifiedDate":"2021-10-11"},{"lineNumber":839,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":840,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":841,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":842,"author":{"gitId":"tlyi"},"content":"    private int getNumberOfCorrectParamsDetected(String params, String... prefixes) {","lastModifiedDate":"2021-10-19"},{"lineNumber":843,"author":{"gitId":"tlyi"},"content":"        int count \u003d 0;","lastModifiedDate":"2021-10-19"},{"lineNumber":844,"author":{"gitId":"tlyi"},"content":"        for (String prefix : prefixes) {","lastModifiedDate":"2021-10-19"},{"lineNumber":845,"author":{"gitId":"tlyi"},"content":"            if (params.toLowerCase().contains(prefix + Command.COMMAND_PREFIX_DELIMITER)) {","lastModifiedDate":"2021-10-19"},{"lineNumber":846,"author":{"gitId":"tlyi"},"content":"                count++;","lastModifiedDate":"2021-10-19"},{"lineNumber":847,"author":{"gitId":"tlyi"},"content":"            }","lastModifiedDate":"2021-10-19"},{"lineNumber":848,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":849,"author":{"gitId":"tlyi"},"content":"        logger.log(Level.INFO, String.format(\"no. of corrected params detected: %s\", count));","lastModifiedDate":"2021-10-19"},{"lineNumber":850,"author":{"gitId":"tlyi"},"content":"        return count;","lastModifiedDate":"2021-10-19"},{"lineNumber":851,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":852,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":853,"author":{"gitId":"tlyi"},"content":"    private boolean hasExtraDelimiters(String params, int expectedNum) {","lastModifiedDate":"2021-10-12"},{"lineNumber":854,"author":{"gitId":"tttyyzzz"},"content":"        int numOfDelimiters \u003d 0;","lastModifiedDate":"2021-10-13"},{"lineNumber":855,"author":{"gitId":"tttyyzzz"},"content":"        for (int i \u003d 0; i \u003c params.length(); i++) {","lastModifiedDate":"2021-10-13"},{"lineNumber":856,"author":{"gitId":"tttyyzzz"},"content":"            if (params.charAt(i) \u003d\u003d Command.COMMAND_PREFIX_DELIMITER.charAt(0)) {","lastModifiedDate":"2021-10-13"},{"lineNumber":857,"author":{"gitId":"tttyyzzz"},"content":"                numOfDelimiters++;","lastModifiedDate":"2021-10-13"},{"lineNumber":858,"author":{"gitId":"tttyyzzz"},"content":"            }","lastModifiedDate":"2021-10-13"},{"lineNumber":859,"author":{"gitId":"tttyyzzz"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":860,"author":{"gitId":"tlyi"},"content":"        return numOfDelimiters \u003e expectedNum;","lastModifiedDate":"2021-10-12"},{"lineNumber":861,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":862,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":863,"author":{"gitId":"tlyi"},"content":"    private boolean hasTextFileDelimiter(String input) {","lastModifiedDate":"2021-10-13"},{"lineNumber":864,"author":{"gitId":"tlyi"},"content":"        return input.contains(FILE_TEXT_DELIMITER);","lastModifiedDate":"2021-10-13"},{"lineNumber":865,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":866,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":867,"author":{"gitId":"tlyi"},"content":"    private String correctCommandFormatSuggestions(String... suggestions) {","lastModifiedDate":"2021-10-19"},{"lineNumber":868,"author":{"gitId":"tlyi"},"content":"        String formattedSuggestions \u003d MESSAGE_ERROR_INVALID_FORMAT + LS;","lastModifiedDate":"2021-10-19"},{"lineNumber":869,"author":{"gitId":"tlyi"},"content":"        int i \u003d 1;","lastModifiedDate":"2021-10-19"},{"lineNumber":870,"author":{"gitId":"tlyi"},"content":"        for (String suggestion : suggestions) {","lastModifiedDate":"2021-10-19"},{"lineNumber":871,"author":{"gitId":"tlyi"},"content":"            formattedSuggestions +\u003d i + \". \" + suggestion + LS;","lastModifiedDate":"2021-10-19"},{"lineNumber":872,"author":{"gitId":"tlyi"},"content":"            i +\u003d 1;","lastModifiedDate":"2021-10-19"},{"lineNumber":873,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":874,"author":{"gitId":"tlyi"},"content":"        return formattedSuggestions.stripTrailing();","lastModifiedDate":"2021-10-19"},{"lineNumber":875,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":876,"author":{"gitId":"tlyi"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"tttyyzzz":6,"xingjie99":96,"tryyang2001":27,"tlyi":747}},{"path":"src/main/java/seedu/duke/parser/exceptions/ItemNotSpecifiedException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.parser.exceptions;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"tlyi"},"content":"/**","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"tlyi"},"content":" * Represents an error where the user did not specify which list to execute the command on. (food/exercise)","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"tlyi"},"content":" */","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"tlyi"},"content":"public class ItemNotSpecifiedException extends Exception {","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"tlyi"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"tlyi":7}},{"path":"src/main/java/seedu/duke/parser/exceptions/ParamInvalidException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.parser.exceptions;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"tlyi"},"content":"/**","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"tlyi"},"content":" * Represents an error where the parameter specified is invalid for the command.","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"tlyi"},"content":" */","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"tlyi"},"content":"public class ParamInvalidException extends Exception {","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"tlyi"},"content":"    private static String errorMessage;","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"tlyi"},"content":"    public ParamInvalidException(String errorMessage) {","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"tlyi"},"content":"        super(errorMessage);","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"tlyi"},"content":"        ParamInvalidException.errorMessage \u003d errorMessage;","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"tlyi"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"tlyi":13}},{"path":"src/main/java/seedu/duke/parser/exceptions/ParamMissingException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.parser.exceptions;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"tlyi"},"content":"/**","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"tlyi"},"content":" * Represents an error where a parameter required for the command is not specified.","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"tlyi"},"content":" */","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"tlyi"},"content":"public class ParamMissingException extends Exception {","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"tlyi"},"content":"    private static String errorMessage;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"tlyi"},"content":"    public ParamMissingException(String errorMessage) {","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"tlyi"},"content":"        super(errorMessage);","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"tlyi"},"content":"        ParamMissingException.errorMessage \u003d errorMessage;","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"tlyi"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"tlyi":13}},{"path":"src/main/java/seedu/duke/profile/Profile.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weidak"},"content":"package seedu.duke.profile;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"weidak"},"content":"import seedu.duke.profile.attributes.ActivityFactor;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"weidak"},"content":"import seedu.duke.profile.attributes.Age;","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"weidak"},"content":"import seedu.duke.profile.attributes.CalorieGoal;","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"weidak"},"content":"import seedu.duke.profile.attributes.Gender;","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"weidak"},"content":"import seedu.duke.profile.attributes.Height;","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"weidak"},"content":"import seedu.duke.profile.attributes.Name;","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"weidak"},"content":"import seedu.duke.profile.attributes.Weight;","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"weidak"},"content":"import seedu.duke.profile.exceptions.InvalidCharacteristicException;","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"weidak"},"content":"/**","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"weidak"},"content":" * Profile that contains the relevant details input by user.","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"weidak"},"content":" */","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"weidak"},"content":"public class Profile {","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"weidak"},"content":"    public static final String FILE_TEXT_DELIMITER \u003d \"|\";","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"weidak"},"content":"    private static final String LS \u003d System.lineSeparator();","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"weidak"},"content":"    public static final int NON_POSITIVE_LIMIT \u003d 0;","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"weidak"},"content":"    public static final String ERROR_HEIGHT \u003d \"Height cannot be less than or equal to 0.\" + LS","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"weidak"},"content":"            + \"Try a positive value instead!\";","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"weidak"},"content":"    public static final String ERROR_WEIGHT \u003d \"Weight cannot be less than or equal to 0.\" + LS","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"weidak"},"content":"            + \"Try a positive value instead!\";","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"weidak"},"content":"    public static final String ERROR_GENDER \u003d \"Please type in M or F only!\";","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"weidak"},"content":"    public static final String ERROR_AGE \u003d \"Age cannot be less than or equal to 0.\" + LS","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"weidak"},"content":"            + \"Try a positive value instead!\";","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"weidak"},"content":"    public static final String ERROR_ACTIVITY_FACTOR \u003d \"Please key in a value from \"","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"weidak"},"content":"            + ActivityFactor.LIMIT_LOWER_ACTIVITY_FACTOR","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"weidak"},"content":"            + \" to \"","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"weidak"},"content":"            + ActivityFactor.LIMIT_UPPER_ACTIVITY_LEVEL;","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"weidak"},"content":"    public static final String ERROR_CALORIE_GOAL \u003d","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"weidak"},"content":"            \"I don\u0027t think you should be aiming to be setting such a extreme goal of %d\" + LS","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"weidak"},"content":"                    + \"Try a range of \" + CalorieGoal.LIMIT_LOWER_CALORIES  + \" to \" + CalorieGoal.LIMIT_UPPER_CALORIES;","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"weidak"},"content":"    private static final String BMI_STATUS_UNDERWEIGHT \u003d \"Underweight\";","lastModifiedDate":"2021-10-11"},{"lineNumber":39,"author":{"gitId":"weidak"},"content":"    private static final String BMI_STATUS_HEALTHY \u003d \"Healthy\";","lastModifiedDate":"2021-10-11"},{"lineNumber":40,"author":{"gitId":"weidak"},"content":"    private static final String BMI_STATUS_OVERWEIGHT \u003d \"Overweight\";","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"weidak"},"content":"    private static final String BMI_STATUS_OBESE \u003d \"Obese\";","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"weidak"},"content":"    public static final double BMI_LIMIT_UNDERWEIGHT \u003d 18.5;","lastModifiedDate":"2021-10-18"},{"lineNumber":43,"author":{"gitId":"weidak"},"content":"    public static final double BMI_LIMIT_HEALTHY \u003d 24.9;","lastModifiedDate":"2021-10-18"},{"lineNumber":44,"author":{"gitId":"weidak"},"content":"    public static final double BMI_LIMIT_OVERWEIGHT \u003d 29.9;","lastModifiedDate":"2021-10-18"},{"lineNumber":45,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":46,"author":{"gitId":"weidak"},"content":"    public static final double FACTOR_SEDENTARY \u003d 1.2;","lastModifiedDate":"2021-10-18"},{"lineNumber":47,"author":{"gitId":"weidak"},"content":"    public static final double FACTOR_LIGHT \u003d 1.375;","lastModifiedDate":"2021-10-18"},{"lineNumber":48,"author":{"gitId":"weidak"},"content":"    public static final double FACTOR_MODERATE \u003d 1.55;","lastModifiedDate":"2021-10-18"},{"lineNumber":49,"author":{"gitId":"weidak"},"content":"    public static final double FACTOR_INTENSE \u003d 1.725;","lastModifiedDate":"2021-10-18"},{"lineNumber":50,"author":{"gitId":"weidak"},"content":"    public static final double FACTOR_EXTREME \u003d 1.9;","lastModifiedDate":"2021-10-18"},{"lineNumber":51,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":52,"author":{"gitId":"weidak"},"content":"    private static final char GENDER_M \u003d \u0027M\u0027;","lastModifiedDate":"2021-10-18"},{"lineNumber":53,"author":{"gitId":"weidak"},"content":"    private static final char GENDER_F \u003d \u0027F\u0027;","lastModifiedDate":"2021-10-18"},{"lineNumber":54,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":55,"author":{"gitId":"weidak"},"content":"    public static final double GENDER_M_WEIGHT_FACTOR \u003d 13.397;","lastModifiedDate":"2021-10-18"},{"lineNumber":56,"author":{"gitId":"weidak"},"content":"    public static final double GENDER_M_HEIGHT_FACTOR \u003d 4.799;","lastModifiedDate":"2021-10-18"},{"lineNumber":57,"author":{"gitId":"weidak"},"content":"    public static final double GENDER_M_AGE_FACTOR \u003d 5.677;","lastModifiedDate":"2021-10-18"},{"lineNumber":58,"author":{"gitId":"weidak"},"content":"    public static final double GENDER_M_CONSTANT \u003d 88.362;","lastModifiedDate":"2021-10-18"},{"lineNumber":59,"author":{"gitId":"weidak"},"content":"    public static final double GENDER_F_WEIGHT_FACTOR \u003d 9.247;","lastModifiedDate":"2021-10-18"},{"lineNumber":60,"author":{"gitId":"weidak"},"content":"    public static final double GENDER_F_HEIGHT_FACTOR \u003d 3.098;","lastModifiedDate":"2021-10-18"},{"lineNumber":61,"author":{"gitId":"weidak"},"content":"    public static final double GENDER_F_AGE_FACTOR \u003d 4.330;","lastModifiedDate":"2021-10-18"},{"lineNumber":62,"author":{"gitId":"weidak"},"content":"    public static final double GENDER_F_CONSTANT \u003d 447.593;","lastModifiedDate":"2021-10-18"},{"lineNumber":63,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":64,"author":{"gitId":"weidak"},"content":"    protected Name name \u003d new Name();","lastModifiedDate":"2021-10-20"},{"lineNumber":65,"author":{"gitId":"weidak"},"content":"    protected Height height \u003d new Height();","lastModifiedDate":"2021-10-20"},{"lineNumber":66,"author":{"gitId":"weidak"},"content":"    protected Weight weight \u003d new Weight();","lastModifiedDate":"2021-10-20"},{"lineNumber":67,"author":{"gitId":"weidak"},"content":"    protected Gender gender \u003d new Gender();","lastModifiedDate":"2021-10-20"},{"lineNumber":68,"author":{"gitId":"weidak"},"content":"    protected Age age \u003d new Age();","lastModifiedDate":"2021-10-20"},{"lineNumber":69,"author":{"gitId":"weidak"},"content":"    protected CalorieGoal calorieGoal \u003d new CalorieGoal();","lastModifiedDate":"2021-10-20"},{"lineNumber":70,"author":{"gitId":"weidak"},"content":"    protected ActivityFactor activityFactor \u003d new ActivityFactor();","lastModifiedDate":"2021-10-20"},{"lineNumber":71,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":72,"author":{"gitId":"tlyi"},"content":"    public Profile(){","lastModifiedDate":"2021-10-11"},{"lineNumber":73,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":74,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":75,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":76,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":77,"author":{"gitId":"weidak"},"content":"     * Constructor for the Profile class.","lastModifiedDate":"2021-10-20"},{"lineNumber":78,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-10-19"},{"lineNumber":79,"author":{"gitId":"weidak"},"content":"     * @param name           Name of user","lastModifiedDate":"2021-10-19"},{"lineNumber":80,"author":{"gitId":"weidak"},"content":"     * @param height         Height of user","lastModifiedDate":"2021-10-19"},{"lineNumber":81,"author":{"gitId":"weidak"},"content":"     * @param weight         Weight of user","lastModifiedDate":"2021-10-19"},{"lineNumber":82,"author":{"gitId":"weidak"},"content":"     * @param calorieGoal    Calorie target of user","lastModifiedDate":"2021-10-19"},{"lineNumber":83,"author":{"gitId":"weidak"},"content":"     * @param gender         Gender of user (M/F)","lastModifiedDate":"2021-10-19"},{"lineNumber":84,"author":{"gitId":"weidak"},"content":"     * @param age            Age of user","lastModifiedDate":"2021-10-19"},{"lineNumber":85,"author":{"gitId":"weidak"},"content":"     * @param activityFactor Activity level of user","lastModifiedDate":"2021-10-19"},{"lineNumber":86,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":87,"author":{"gitId":"weidak"},"content":"    public Profile(Name name, Height height, Weight weight, Gender gender,","lastModifiedDate":"2021-10-20"},{"lineNumber":88,"author":{"gitId":"weidak"},"content":"                      Age age, CalorieGoal calorieGoal, ActivityFactor activityFactor) {","lastModifiedDate":"2021-10-20"},{"lineNumber":89,"author":{"gitId":"weidak"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-10-20"},{"lineNumber":90,"author":{"gitId":"weidak"},"content":"        this.height \u003d height;","lastModifiedDate":"2021-10-20"},{"lineNumber":91,"author":{"gitId":"weidak"},"content":"        this.weight \u003d weight;","lastModifiedDate":"2021-10-20"},{"lineNumber":92,"author":{"gitId":"weidak"},"content":"        this.gender \u003d gender;","lastModifiedDate":"2021-10-20"},{"lineNumber":93,"author":{"gitId":"weidak"},"content":"        this.age \u003d age;","lastModifiedDate":"2021-10-20"},{"lineNumber":94,"author":{"gitId":"weidak"},"content":"        this.calorieGoal \u003d calorieGoal;","lastModifiedDate":"2021-10-20"},{"lineNumber":95,"author":{"gitId":"weidak"},"content":"        this.activityFactor \u003d activityFactor;","lastModifiedDate":"2021-10-20"},{"lineNumber":96,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":97,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":98,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":99,"author":{"gitId":"weidak"},"content":"     * Sets the profile in various commands with the raw inputs if necessary.","lastModifiedDate":"2021-10-20"},{"lineNumber":100,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-10-19"},{"lineNumber":101,"author":{"gitId":"weidak"},"content":"     * @param name           Name of user","lastModifiedDate":"2021-10-19"},{"lineNumber":102,"author":{"gitId":"weidak"},"content":"     * @param height         Height of user","lastModifiedDate":"2021-10-19"},{"lineNumber":103,"author":{"gitId":"weidak"},"content":"     * @param weight         Weight of user","lastModifiedDate":"2021-10-19"},{"lineNumber":104,"author":{"gitId":"weidak"},"content":"     * @param calorieGoal    Calorie target of user","lastModifiedDate":"2021-10-19"},{"lineNumber":105,"author":{"gitId":"weidak"},"content":"     * @param gender         Gender of user (M/F)","lastModifiedDate":"2021-10-19"},{"lineNumber":106,"author":{"gitId":"weidak"},"content":"     * @param age            Age of user","lastModifiedDate":"2021-10-19"},{"lineNumber":107,"author":{"gitId":"weidak"},"content":"     * @param activityFactor Activity level of user","lastModifiedDate":"2021-10-19"},{"lineNumber":108,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":109,"author":{"gitId":"weidak"},"content":"    public void setProfileWithRawInputs(String name, double height, double weight,","lastModifiedDate":"2021-10-20"},{"lineNumber":110,"author":{"gitId":"weidak"},"content":"                                        char gender, int age, int calorieGoal, int activityFactor) {","lastModifiedDate":"2021-10-20"},{"lineNumber":111,"author":{"gitId":"weidak"},"content":"        this.name.setName(name);","lastModifiedDate":"2021-10-20"},{"lineNumber":112,"author":{"gitId":"weidak"},"content":"        this.height.setHeight(height);","lastModifiedDate":"2021-10-20"},{"lineNumber":113,"author":{"gitId":"weidak"},"content":"        this.weight.setWeight(weight);","lastModifiedDate":"2021-10-20"},{"lineNumber":114,"author":{"gitId":"weidak"},"content":"        this.gender.setGender(gender);","lastModifiedDate":"2021-10-20"},{"lineNumber":115,"author":{"gitId":"weidak"},"content":"        this.age.setAge(age);","lastModifiedDate":"2021-10-20"},{"lineNumber":116,"author":{"gitId":"weidak"},"content":"        this.calorieGoal.setCalorieGoal(calorieGoal);","lastModifiedDate":"2021-10-20"},{"lineNumber":117,"author":{"gitId":"weidak"},"content":"        this.activityFactor.setActivityFactor(activityFactor);","lastModifiedDate":"2021-10-20"},{"lineNumber":118,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":119,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":120,"author":{"gitId":"weidak"},"content":"    public void setProfileName(Name name) {","lastModifiedDate":"2021-10-20"},{"lineNumber":121,"author":{"gitId":"weidak"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-10-09"},{"lineNumber":122,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":123,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":124,"author":{"gitId":"weidak"},"content":"    public void setProfileHeight(Height height) {","lastModifiedDate":"2021-10-20"},{"lineNumber":125,"author":{"gitId":"weidak"},"content":"        this.height \u003d height;","lastModifiedDate":"2021-10-18"},{"lineNumber":126,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":127,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":128,"author":{"gitId":"weidak"},"content":"    public void setProfileWeight(Weight weight) {","lastModifiedDate":"2021-10-20"},{"lineNumber":129,"author":{"gitId":"weidak"},"content":"        this.weight \u003d weight;","lastModifiedDate":"2021-10-20"},{"lineNumber":130,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":131,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":132,"author":{"gitId":"weidak"},"content":"    public void setProfileGender(Gender gender) {","lastModifiedDate":"2021-10-20"},{"lineNumber":133,"author":{"gitId":"weidak"},"content":"        this.gender \u003d gender;","lastModifiedDate":"2021-10-19"},{"lineNumber":134,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":135,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":136,"author":{"gitId":"weidak"},"content":"    public void setProfileAge(Age age) {","lastModifiedDate":"2021-10-20"},{"lineNumber":137,"author":{"gitId":"weidak"},"content":"        this.age \u003d age;","lastModifiedDate":"2021-10-19"},{"lineNumber":138,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":139,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":140,"author":{"gitId":"weidak"},"content":"    public void setProfileCalorieGoal(CalorieGoal calorieGoal) {","lastModifiedDate":"2021-10-20"},{"lineNumber":141,"author":{"gitId":"weidak"},"content":"        this.calorieGoal \u003d calorieGoal;","lastModifiedDate":"2021-10-19"},{"lineNumber":142,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":143,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":144,"author":{"gitId":"weidak"},"content":"    public void setProfileActivityFactor(ActivityFactor activityFactor) {","lastModifiedDate":"2021-10-20"},{"lineNumber":145,"author":{"gitId":"weidak"},"content":"        this.activityFactor \u003d activityFactor;","lastModifiedDate":"2021-10-20"},{"lineNumber":146,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":147,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":148,"author":{"gitId":"weidak"},"content":"    public Name getProfileName() {","lastModifiedDate":"2021-10-20"},{"lineNumber":149,"author":{"gitId":"weidak"},"content":"        return this.name;","lastModifiedDate":"2021-10-20"},{"lineNumber":150,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":151,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":152,"author":{"gitId":"weidak"},"content":"    public Height getProfileHeight() {","lastModifiedDate":"2021-10-20"},{"lineNumber":153,"author":{"gitId":"weidak"},"content":"        return this.height;","lastModifiedDate":"2021-10-19"},{"lineNumber":154,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":155,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":156,"author":{"gitId":"weidak"},"content":"    public Weight getProfileWeight() {","lastModifiedDate":"2021-10-20"},{"lineNumber":157,"author":{"gitId":"weidak"},"content":"        return this.weight;","lastModifiedDate":"2021-10-19"},{"lineNumber":158,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":159,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":160,"author":{"gitId":"weidak"},"content":"    public Gender getProfileGender() {","lastModifiedDate":"2021-10-20"},{"lineNumber":161,"author":{"gitId":"weidak"},"content":"        return this.gender;","lastModifiedDate":"2021-10-20"},{"lineNumber":162,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":163,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":164,"author":{"gitId":"weidak"},"content":"    public Age getProfileAge() {","lastModifiedDate":"2021-10-20"},{"lineNumber":165,"author":{"gitId":"weidak"},"content":"        return this.age;","lastModifiedDate":"2021-10-20"},{"lineNumber":166,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":167,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":168,"author":{"gitId":"weidak"},"content":"    public CalorieGoal getProfileCalorieGoal() {","lastModifiedDate":"2021-10-20"},{"lineNumber":169,"author":{"gitId":"weidak"},"content":"        return this.calorieGoal;","lastModifiedDate":"2021-10-20"},{"lineNumber":170,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":171,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":172,"author":{"gitId":"weidak"},"content":"    public ActivityFactor getProfileActivityFactor() {","lastModifiedDate":"2021-10-20"},{"lineNumber":173,"author":{"gitId":"weidak"},"content":"        return this.activityFactor;","lastModifiedDate":"2021-10-20"},{"lineNumber":174,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":175,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":176,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":177,"author":{"gitId":"weidak"},"content":"     * Retrieves the Basal Metabolic Rate of the user based on their activity factor indicated on the profile.","lastModifiedDate":"2021-10-18"},{"lineNumber":178,"author":{"gitId":"weidak"},"content":"     * A higher activity factor indicates a greater metabolic rate and thus more calories they burn off.","lastModifiedDate":"2021-10-18"},{"lineNumber":179,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-10-18"},{"lineNumber":180,"author":{"gitId":"weidak"},"content":"     * @return BMR value based on their indicated activity factor","lastModifiedDate":"2021-10-18"},{"lineNumber":181,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":182,"author":{"gitId":"weidak"},"content":"    public int getBmr() {","lastModifiedDate":"2021-10-18"},{"lineNumber":183,"author":{"gitId":"weidak"},"content":"        double bmr \u003d getBaseBmrValue();","lastModifiedDate":"2021-10-18"},{"lineNumber":184,"author":{"gitId":"weidak"},"content":"        double factor \u003d 1.0; //Initialise to 1","lastModifiedDate":"2021-10-18"},{"lineNumber":185,"author":{"gitId":"weidak"},"content":"        switch (activityFactor.getActivityFactor()) {","lastModifiedDate":"2021-10-20"},{"lineNumber":186,"author":{"gitId":"weidak"},"content":"        case 1:","lastModifiedDate":"2021-10-18"},{"lineNumber":187,"author":{"gitId":"weidak"},"content":"            factor \u003d FACTOR_SEDENTARY;","lastModifiedDate":"2021-10-18"},{"lineNumber":188,"author":{"gitId":"weidak"},"content":"            break;","lastModifiedDate":"2021-10-18"},{"lineNumber":189,"author":{"gitId":"weidak"},"content":"        case 2:","lastModifiedDate":"2021-10-18"},{"lineNumber":190,"author":{"gitId":"weidak"},"content":"            factor \u003d FACTOR_LIGHT;","lastModifiedDate":"2021-10-18"},{"lineNumber":191,"author":{"gitId":"weidak"},"content":"            break;","lastModifiedDate":"2021-10-18"},{"lineNumber":192,"author":{"gitId":"weidak"},"content":"        case 3:","lastModifiedDate":"2021-10-18"},{"lineNumber":193,"author":{"gitId":"weidak"},"content":"            factor \u003d FACTOR_MODERATE;","lastModifiedDate":"2021-10-18"},{"lineNumber":194,"author":{"gitId":"weidak"},"content":"            break;","lastModifiedDate":"2021-10-18"},{"lineNumber":195,"author":{"gitId":"weidak"},"content":"        case 4:","lastModifiedDate":"2021-10-18"},{"lineNumber":196,"author":{"gitId":"weidak"},"content":"            factor \u003d FACTOR_INTENSE;","lastModifiedDate":"2021-10-18"},{"lineNumber":197,"author":{"gitId":"weidak"},"content":"            break;","lastModifiedDate":"2021-10-18"},{"lineNumber":198,"author":{"gitId":"weidak"},"content":"        case 5:","lastModifiedDate":"2021-10-18"},{"lineNumber":199,"author":{"gitId":"weidak"},"content":"            factor \u003d FACTOR_EXTREME;","lastModifiedDate":"2021-10-18"},{"lineNumber":200,"author":{"gitId":"weidak"},"content":"            break;","lastModifiedDate":"2021-10-18"},{"lineNumber":201,"author":{"gitId":"weidak"},"content":"        default:","lastModifiedDate":"2021-10-18"},{"lineNumber":202,"author":{"gitId":"weidak"},"content":"            break;","lastModifiedDate":"2021-10-18"},{"lineNumber":203,"author":{"gitId":"weidak"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":204,"author":{"gitId":"weidak"},"content":"        return (int) Math.round(bmr * factor);","lastModifiedDate":"2021-10-18"},{"lineNumber":205,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":206,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":207,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":208,"author":{"gitId":"weidak"},"content":"     * Calculates the BMI based on the profile\u0027s characteristics.","lastModifiedDate":"2021-10-18"},{"lineNumber":209,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-10-18"},{"lineNumber":210,"author":{"gitId":"weidak"},"content":"     * @return The calculated BMI of the profile\u0027s height and weight","lastModifiedDate":"2021-10-18"},{"lineNumber":211,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":212,"author":{"gitId":"weidak"},"content":"    public double calculateBmi() {","lastModifiedDate":"2021-10-20"},{"lineNumber":213,"author":{"gitId":"weidak"},"content":"        return computeBmi(height.getHeight(), weight.getWeight());","lastModifiedDate":"2021-10-20"},{"lineNumber":214,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":215,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":216,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":217,"author":{"gitId":"weidak"},"content":"     * Manually calculates the BMI.","lastModifiedDate":"2021-10-09"},{"lineNumber":218,"author":{"gitId":"weidak"},"content":"     * Used when the user input values that is not be stored in his/her profile.","lastModifiedDate":"2021-10-09"},{"lineNumber":219,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-10-09"},{"lineNumber":220,"author":{"gitId":"weidak"},"content":"     * @param height Value of manual input of height","lastModifiedDate":"2021-10-09"},{"lineNumber":221,"author":{"gitId":"weidak"},"content":"     * @param weight Value of manual input of weight","lastModifiedDate":"2021-10-09"},{"lineNumber":222,"author":{"gitId":"weidak"},"content":"     * @return The calculated BMI of the manual inputs","lastModifiedDate":"2021-10-09"},{"lineNumber":223,"author":{"gitId":"weidak"},"content":"     * @throws InvalidCharacteristicException When the user inputs negative values for either height or weight","lastModifiedDate":"2021-10-09"},{"lineNumber":224,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":225,"author":{"gitId":"weidak"},"content":"    public static double calculateBmi(double height, double weight) throws InvalidCharacteristicException {","lastModifiedDate":"2021-10-09"},{"lineNumber":226,"author":{"gitId":"weidak"},"content":"        checkHeightValidity(height);","lastModifiedDate":"2021-10-20"},{"lineNumber":227,"author":{"gitId":"weidak"},"content":"        checkWeightValidity(weight);","lastModifiedDate":"2021-10-20"},{"lineNumber":228,"author":{"gitId":"weidak"},"content":"        assert weight \u003e 0 : \"Weight cannot be non-positive.\";","lastModifiedDate":"2021-10-19"},{"lineNumber":229,"author":{"gitId":"weidak"},"content":"        assert height \u003e 0 : \"Height cannot be non-positive.\";","lastModifiedDate":"2021-10-19"},{"lineNumber":230,"author":{"gitId":"weidak"},"content":"        return computeBmi(height, weight);","lastModifiedDate":"2021-10-09"},{"lineNumber":231,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":232,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":233,"author":{"gitId":"weidak"},"content":"    private static double computeBmi(double height, double weight) {","lastModifiedDate":"2021-10-09"},{"lineNumber":234,"author":{"gitId":"weidak"},"content":"        double heightInM \u003d height / 100.0;","lastModifiedDate":"2021-10-09"},{"lineNumber":235,"author":{"gitId":"weidak"},"content":"        return Math.round((weight / (Math.pow(heightInM, 2))) * 10) / 10.0;","lastModifiedDate":"2021-10-09"},{"lineNumber":236,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":237,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":238,"author":{"gitId":"weidak"},"content":"    public static void checkWeightValidity(double weight) throws InvalidCharacteristicException {","lastModifiedDate":"2021-10-20"},{"lineNumber":239,"author":{"gitId":"weidak"},"content":"        if (weight \u003c\u003d NON_POSITIVE_LIMIT) {","lastModifiedDate":"2021-10-20"},{"lineNumber":240,"author":{"gitId":"weidak"},"content":"            throw new InvalidCharacteristicException(ERROR_WEIGHT);","lastModifiedDate":"2021-10-20"},{"lineNumber":241,"author":{"gitId":"weidak"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":242,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":243,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":244,"author":{"gitId":"weidak"},"content":"    public static void checkHeightValidity(double height) throws InvalidCharacteristicException {","lastModifiedDate":"2021-10-20"},{"lineNumber":245,"author":{"gitId":"weidak"},"content":"        if (height \u003c\u003d NON_POSITIVE_LIMIT) {","lastModifiedDate":"2021-10-20"},{"lineNumber":246,"author":{"gitId":"weidak"},"content":"            throw new InvalidCharacteristicException(ERROR_HEIGHT);","lastModifiedDate":"2021-10-20"},{"lineNumber":247,"author":{"gitId":"weidak"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":248,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":249,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":250,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":251,"author":{"gitId":"weidak"},"content":"     * Retrieves the indication with regard to the value of their BMI.","lastModifiedDate":"2021-10-09"},{"lineNumber":252,"author":{"gitId":"weidak"},"content":"     * Should not have any exceptions thrown since the other functions handled invalid cases.","lastModifiedDate":"2021-10-09"},{"lineNumber":253,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-10-09"},{"lineNumber":254,"author":{"gitId":"weidak"},"content":"     * @param bmi The bmi of the user","lastModifiedDate":"2021-10-09"},{"lineNumber":255,"author":{"gitId":"weidak"},"content":"     * @return The status of his current body","lastModifiedDate":"2021-10-09"},{"lineNumber":256,"author":{"gitId":"weidak"},"content":"     **/","lastModifiedDate":"2021-10-09"},{"lineNumber":257,"author":{"gitId":"weidak"},"content":"    public static String retrieveBmiStatus(double bmi) {","lastModifiedDate":"2021-10-09"},{"lineNumber":258,"author":{"gitId":"weidak"},"content":"        String result;","lastModifiedDate":"2021-10-09"},{"lineNumber":259,"author":{"gitId":"weidak"},"content":"        assert bmi \u003e 0 : \"BMI cannot be non-positive.\";","lastModifiedDate":"2021-10-13"},{"lineNumber":260,"author":{"gitId":"weidak"},"content":"        if (bmi \u003c BMI_LIMIT_UNDERWEIGHT) {","lastModifiedDate":"2021-10-18"},{"lineNumber":261,"author":{"gitId":"weidak"},"content":"            result \u003d BMI_STATUS_UNDERWEIGHT;","lastModifiedDate":"2021-10-11"},{"lineNumber":262,"author":{"gitId":"weidak"},"content":"        } else if (bmi \u003c\u003d BMI_LIMIT_HEALTHY) {","lastModifiedDate":"2021-10-18"},{"lineNumber":263,"author":{"gitId":"weidak"},"content":"            result \u003d BMI_STATUS_HEALTHY;","lastModifiedDate":"2021-10-11"},{"lineNumber":264,"author":{"gitId":"weidak"},"content":"        } else if (bmi \u003c\u003d BMI_LIMIT_OVERWEIGHT) {","lastModifiedDate":"2021-10-18"},{"lineNumber":265,"author":{"gitId":"weidak"},"content":"            result \u003d BMI_STATUS_OVERWEIGHT;","lastModifiedDate":"2021-10-11"},{"lineNumber":266,"author":{"gitId":"weidak"},"content":"        } else {","lastModifiedDate":"2021-10-09"},{"lineNumber":267,"author":{"gitId":"weidak"},"content":"            result \u003d BMI_STATUS_OBESE;","lastModifiedDate":"2021-10-11"},{"lineNumber":268,"author":{"gitId":"weidak"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":269,"author":{"gitId":"weidak"},"content":"        return result;","lastModifiedDate":"2021-10-09"},{"lineNumber":270,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":271,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":272,"author":{"gitId":"weidak"},"content":"    private double getBaseBmrValue() {","lastModifiedDate":"2021-10-20"},{"lineNumber":273,"author":{"gitId":"weidak"},"content":"        double bmr;","lastModifiedDate":"2021-10-20"},{"lineNumber":274,"author":{"gitId":"weidak"},"content":"        if (gender.getGender() \u003d\u003d GENDER_M) {","lastModifiedDate":"2021-10-20"},{"lineNumber":275,"author":{"gitId":"weidak"},"content":"            bmr \u003d GENDER_M_WEIGHT_FACTOR * weight.getWeight()","lastModifiedDate":"2021-10-20"},{"lineNumber":276,"author":{"gitId":"weidak"},"content":"                    + GENDER_M_HEIGHT_FACTOR * height.getHeight()","lastModifiedDate":"2021-10-20"},{"lineNumber":277,"author":{"gitId":"weidak"},"content":"                    - GENDER_M_AGE_FACTOR * age.getAge()","lastModifiedDate":"2021-10-20"},{"lineNumber":278,"author":{"gitId":"weidak"},"content":"                    + GENDER_M_CONSTANT;","lastModifiedDate":"2021-10-20"},{"lineNumber":279,"author":{"gitId":"weidak"},"content":"        } else {","lastModifiedDate":"2021-10-20"},{"lineNumber":280,"author":{"gitId":"weidak"},"content":"            bmr \u003d GENDER_F_WEIGHT_FACTOR * weight.getWeight()","lastModifiedDate":"2021-10-20"},{"lineNumber":281,"author":{"gitId":"weidak"},"content":"                    + GENDER_F_HEIGHT_FACTOR * height.getHeight()","lastModifiedDate":"2021-10-20"},{"lineNumber":282,"author":{"gitId":"weidak"},"content":"                    - GENDER_F_AGE_FACTOR * age.getAge()","lastModifiedDate":"2021-10-20"},{"lineNumber":283,"author":{"gitId":"weidak"},"content":"                    + GENDER_F_CONSTANT;","lastModifiedDate":"2021-10-20"},{"lineNumber":284,"author":{"gitId":"weidak"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":285,"author":{"gitId":"weidak"},"content":"        return bmr;","lastModifiedDate":"2021-10-20"},{"lineNumber":286,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":287,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":288,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":289,"author":{"gitId":"weidak"},"content":"     * Calculates the difference between food calories and exercise calories, factoring in metabolic rate.","lastModifiedDate":"2021-10-18"},{"lineNumber":290,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":291,"author":{"gitId":"weidak"},"content":"     * @param foodCalories     Total intake consumption","lastModifiedDate":"2021-10-13"},{"lineNumber":292,"author":{"gitId":"weidak"},"content":"     * @param exerciseCalories Total output exerted","lastModifiedDate":"2021-10-13"},{"lineNumber":293,"author":{"gitId":"weidak"},"content":"     * @return The net calories of food - (exercise + BMR)","lastModifiedDate":"2021-10-19"},{"lineNumber":294,"author":{"gitId":"weidak"},"content":"     * @throws InvalidCharacteristicException Only if activity factor has been misappropriated in .txt file","lastModifiedDate":"2021-10-18"},{"lineNumber":295,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":296,"author":{"gitId":"weidak"},"content":"    public int calculateNetCalories(int foodCalories, int exerciseCalories) throws InvalidCharacteristicException {","lastModifiedDate":"2021-10-18"},{"lineNumber":297,"author":{"gitId":"weidak"},"content":"        return foodCalories - exerciseCalories - getBmr();","lastModifiedDate":"2021-10-18"},{"lineNumber":298,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":299,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":300,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":301,"author":{"gitId":"weidak"},"content":"     * Converts the file into a string that is used for storage.","lastModifiedDate":"2021-10-13"},{"lineNumber":302,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":303,"author":{"gitId":"weidak"},"content":"     * @return String that is used for storage.","lastModifiedDate":"2021-10-13"},{"lineNumber":304,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":305,"author":{"gitId":"weidak"},"content":"    public String toFileTextString() {","lastModifiedDate":"2021-10-12"},{"lineNumber":306,"author":{"gitId":"weidak"},"content":"        return name.getName() + FILE_TEXT_DELIMITER + height.getHeight() + FILE_TEXT_DELIMITER","lastModifiedDate":"2021-10-20"},{"lineNumber":307,"author":{"gitId":"weidak"},"content":"                + weight.getWeight() + FILE_TEXT_DELIMITER + gender.getGender() + FILE_TEXT_DELIMITER","lastModifiedDate":"2021-10-20"},{"lineNumber":308,"author":{"gitId":"weidak"},"content":"                + age.getAge() + FILE_TEXT_DELIMITER + calorieGoal.getCalorieGoal() + FILE_TEXT_DELIMITER","lastModifiedDate":"2021-10-20"},{"lineNumber":309,"author":{"gitId":"weidak"},"content":"                + activityFactor.getActivityFactor();","lastModifiedDate":"2021-10-20"},{"lineNumber":310,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":311,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":312,"author":{"gitId":"weidak"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"weidak":304,"tlyi":8}},{"path":"src/main/java/seedu/duke/profile/attributes/ActivityFactor.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weidak"},"content":"package seedu.duke.profile.attributes;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"weidak"},"content":"/**","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"weidak"},"content":" * Activity Factor attribute of profile.","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"weidak"},"content":" */","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"weidak"},"content":"public class ActivityFactor implements Verifiable {","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"weidak"},"content":"    public static final int LIMIT_LOWER_ACTIVITY_FACTOR \u003d 1;","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"weidak"},"content":"    public static final int LIMIT_UPPER_ACTIVITY_LEVEL \u003d 5;","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"weidak"},"content":"    protected int activityFactor;","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"weidak"},"content":"    public ActivityFactor() {","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"weidak"},"content":"     * Constructs an activity factor object.","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"weidak"},"content":"     * @param activityFactor activity factor input by user","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"weidak"},"content":"    public ActivityFactor(int activityFactor) {","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"weidak"},"content":"        setActivityFactor(activityFactor);","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"weidak"},"content":"    public int getActivityFactor() {","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"weidak"},"content":"        return activityFactor;","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"weidak"},"content":"    public void setActivityFactor(int activityFactor) {","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"weidak"},"content":"        this.activityFactor \u003d activityFactor;","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"weidak"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"weidak"},"content":"    public boolean isValid() {","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"weidak"},"content":"        if (activityFactor \u003c 1 || activityFactor \u003e 5) {","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"weidak"},"content":"            return false;","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"weidak"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"weidak"},"content":"        return true;","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":42,"author":{"gitId":"weidak"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"weidak":42}},{"path":"src/main/java/seedu/duke/profile/attributes/Age.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weidak"},"content":"package seedu.duke.profile.attributes;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"weidak"},"content":"/**","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"weidak"},"content":" * Age attribute of profile.","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"weidak"},"content":" */","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"weidak"},"content":"public class Age implements Verifiable {","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"weidak"},"content":"    public static final int NON_POSITIVE_LIMIT \u003d 0;","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"weidak"},"content":"    protected int age;","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"weidak"},"content":"    public Age() {","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"weidak"},"content":"     * Constructs an age object.","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"weidak"},"content":"     * @param age age input by user","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"weidak"},"content":"    public Age(int age) {","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"weidak"},"content":"        setAge(age);","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"weidak"},"content":"    public int getAge() {","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"weidak"},"content":"        return age;","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"weidak"},"content":"    public void setAge(int age) {","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"weidak"},"content":"        this.age \u003d age;","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"weidak"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"weidak"},"content":"    public boolean isValid() {","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"weidak"},"content":"        if (age \u003c\u003d NON_POSITIVE_LIMIT) {","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"weidak"},"content":"            return false;","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"weidak"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"weidak"},"content":"        return true;","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"weidak"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"weidak":40}},{"path":"src/main/java/seedu/duke/profile/attributes/CalorieGoal.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weidak"},"content":"package seedu.duke.profile.attributes;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"weidak"},"content":"/**","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"weidak"},"content":" * Calorie Goal attribute of profile.","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"weidak"},"content":" */","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"weidak"},"content":"public class CalorieGoal implements Verifiable {","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"weidak"},"content":"    private static final String LS \u003d System.lineSeparator();","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"weidak"},"content":"    public static final int LIMIT_UPPER_CALORIES \u003d 2500;","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"weidak"},"content":"    public static final int LIMIT_LOWER_CALORIES \u003d -LIMIT_UPPER_CALORIES;","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"weidak"},"content":"    protected int calorieGoal;","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"weidak"},"content":"    public CalorieGoal() {","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"weidak"},"content":"     * Constructs a calorie goal object.","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"weidak"},"content":"     * @param calorieGoal goal input by user","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"weidak"},"content":"    public CalorieGoal(int calorieGoal) {","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"weidak"},"content":"        setCalorieGoal(calorieGoal);","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"weidak"},"content":"    public int getCalorieGoal() {","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"weidak"},"content":"        return calorieGoal;","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"weidak"},"content":"    public void setCalorieGoal(int calorieGoal) {","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"weidak"},"content":"        this.calorieGoal \u003d calorieGoal;","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"weidak"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"weidak"},"content":"    public boolean isValid() {","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"weidak"},"content":"        if (calorieGoal \u003c LIMIT_LOWER_CALORIES || calorieGoal \u003e LIMIT_UPPER_CALORIES) {","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"weidak"},"content":"            return false;","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"weidak"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"weidak"},"content":"        return true;","lastModifiedDate":"2021-10-20"},{"lineNumber":42,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":43,"author":{"gitId":"weidak"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"weidak":43}},{"path":"src/main/java/seedu/duke/profile/attributes/Gender.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weidak"},"content":"package seedu.duke.profile.attributes;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"weidak"},"content":"/**","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"weidak"},"content":" * Gender attribute of profile.","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"weidak"},"content":" */","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"weidak"},"content":"public class Gender implements Verifiable {","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"weidak"},"content":"    private static final char GENDER_M \u003d \u0027M\u0027;","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"weidak"},"content":"    private static final char GENDER_F \u003d \u0027F\u0027;","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"weidak"},"content":"    protected char gender;","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"weidak"},"content":"    public Gender() {","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"weidak"},"content":"     * Constructs a gender object.","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"weidak"},"content":"     * @param gender gender input by user.","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"weidak"},"content":"    public Gender(char gender) {","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"weidak"},"content":"        this.gender \u003d gender;","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"weidak"},"content":"    public char getGender() {","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"weidak"},"content":"        return gender;","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"weidak"},"content":"    public void setGender(char gender) {","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"weidak"},"content":"        this.gender \u003d gender;","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"weidak"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"weidak"},"content":"    public boolean isValid() {","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"weidak"},"content":"        if (!(gender \u003d\u003d GENDER_F || gender \u003d\u003d GENDER_M)) {","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"weidak"},"content":"            return false;","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"weidak"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"weidak"},"content":"        return true;","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":42,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":43,"author":{"gitId":"weidak"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"weidak":43}},{"path":"src/main/java/seedu/duke/profile/attributes/Height.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weidak"},"content":"package seedu.duke.profile.attributes;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"weidak"},"content":"/**","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"weidak"},"content":" * Height attribute of profile.","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"weidak"},"content":" */","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"weidak"},"content":"public class Height implements Verifiable {","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"weidak"},"content":"    public static final int NON_POSITIVE_LIMIT \u003d 0;","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"weidak"},"content":"    protected double height;","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"weidak"},"content":"    public Height() {","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"weidak"},"content":"     * Constructs a height object.","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"weidak"},"content":"     * @param height height input by user.","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"weidak"},"content":"    public Height(double height) {","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"weidak"},"content":"        setHeight(height);","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"weidak"},"content":"    public double getHeight() {","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"weidak"},"content":"        return height;","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"weidak"},"content":"    public void setHeight(double height) {","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"weidak"},"content":"        this.height \u003d height;","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"weidak"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"weidak"},"content":"    public boolean isValid() {","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"weidak"},"content":"        if (height \u003c\u003d NON_POSITIVE_LIMIT) {","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"weidak"},"content":"            return false;","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"weidak"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"weidak"},"content":"        return true;","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"weidak"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"weidak":41}},{"path":"src/main/java/seedu/duke/profile/attributes/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weidak"},"content":"package seedu.duke.profile.attributes;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"weidak"},"content":"/**","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"weidak"},"content":" * Name attribute of profile.","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"weidak"},"content":" */","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"weidak"},"content":"public class Name implements Verifiable {","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"weidak"},"content":"    protected String name;","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"weidak"},"content":"    public Name() {","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"weidak"},"content":"     * Constructs a name object.","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"weidak"},"content":"     * @param name name input of user","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"weidak"},"content":"    public Name(String name) {","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"weidak"},"content":"        setName(name);","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"weidak"},"content":"    public String getName() {","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"weidak"},"content":"        return name;","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"weidak"},"content":"    public void setName(String name) {","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"weidak"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"weidak"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"weidak"},"content":"    public boolean isValid() {","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"weidak"},"content":"        for (int i \u003d 0; i \u003c name.length(); i++) {","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"weidak"},"content":"            if (name.charAt(i) \u003d\u003d \u0027|\u0027 || name.charAt(i) \u003d\u003d \u0027/\u0027) {","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"weidak"},"content":"                return false;","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"weidak"},"content":"            }","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"weidak"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"weidak"},"content":"        return true;","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":42,"author":{"gitId":"weidak"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"weidak":42}},{"path":"src/main/java/seedu/duke/profile/attributes/Verifiable.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weidak"},"content":"package seedu.duke.profile.attributes;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"weidak"},"content":"/**","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"weidak"},"content":" * Interface that implements verifiability to various objects.","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"weidak"},"content":" */","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"weidak"},"content":"interface Verifiable {","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"weidak"},"content":"    public boolean isValid();","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"weidak"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"weidak":8}},{"path":"src/main/java/seedu/duke/profile/attributes/Weight.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weidak"},"content":"package seedu.duke.profile.attributes;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"weidak"},"content":"/**","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"weidak"},"content":" * Weight attribute of profile.","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"weidak"},"content":" */","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"weidak"},"content":"public class Weight implements Verifiable {","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"weidak"},"content":"    public static final int NON_POSITIVE_LIMIT \u003d 0;","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"weidak"},"content":"    protected double weight;","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"weidak"},"content":"    public Weight() {","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"weidak"},"content":"     * Constructs a weight object.","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"weidak"},"content":"     * @param weight weight input by user","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"weidak"},"content":"    public Weight(double weight) {","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"weidak"},"content":"        setWeight(weight);","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"weidak"},"content":"    public double getWeight() {","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"weidak"},"content":"        return weight;","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"weidak"},"content":"    public void setWeight(double weight) {","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"weidak"},"content":"        this.weight \u003d weight;","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"weidak"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"weidak"},"content":"    public boolean isValid() {","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"weidak"},"content":"        if (weight \u003c\u003d NON_POSITIVE_LIMIT) {","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"weidak"},"content":"            return false;","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"weidak"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"weidak"},"content":"        return true;","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"weidak"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"weidak":40}},{"path":"src/main/java/seedu/duke/profile/exceptions/InvalidCharacteristicException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weidak"},"content":"package seedu.duke.profile.exceptions;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"weidak"},"content":"/**","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"weidak"},"content":" * Exception that is thrown when the input human characteristics are invalid.","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"weidak"},"content":" */","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"weidak"},"content":"public class InvalidCharacteristicException extends Exception {","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"weidak"},"content":"    public InvalidCharacteristicException(String message) {","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"weidak"},"content":"        super(message);","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"weidak"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"weidak":11}},{"path":"src/main/java/seedu/duke/storage/Decoder.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weidak"},"content":"package seedu.duke.storage;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"tryyang2001"},"content":"import seedu.duke.item.exercise.Exercise;","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"tryyang2001"},"content":"import seedu.duke.item.exercise.ExerciseList;","lastModifiedDate":"2021-10-16"},{"lineNumber":5,"author":{"gitId":"tryyang2001"},"content":"import seedu.duke.item.food.Food;","lastModifiedDate":"2021-10-16"},{"lineNumber":6,"author":{"gitId":"tryyang2001"},"content":"import seedu.duke.item.food.FoodList;","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"weidak"},"content":"import seedu.duke.profile.Profile;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"weidak"},"content":"import seedu.duke.profile.exceptions.InvalidCharacteristicException;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"weidak"},"content":"import seedu.duke.storage.exceptions.InvalidDataException;","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"weidak"},"content":"import java.io.File;","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"weidak"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"weidak"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"weidak"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"weidak"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"weidak"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"weidak"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"weidak"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"weidak"},"content":"/**","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"weidak"},"content":" * Converts the profile, exercise list and food list from storage and inputs into the bot.","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"weidak"},"content":" */","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"weidak"},"content":"public class Decoder {","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"weidak"},"content":"    public static final String FILE_TEXT_DELIMITER \u003d \"\\\\|\";","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"weidak"},"content":"    public static final DateTimeFormatter DATE_FORMATTER \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy\");","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"weidak"},"content":"    public static final DateTimeFormatter DATE_TIME_FORMATTER \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\");","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"weidak"},"content":"    private static final Logger logger \u003d Logger.getLogger(Decoder.class.getName());","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"weidak"},"content":"     * Retrieves profile data from profile.txt","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"weidak"},"content":"     * @return The profile object with its corresponding characteristics","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"weidak"},"content":"     * @throws FileNotFoundException          If the file is misplaced/missing","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"weidak"},"content":"     * @throws InvalidCharacteristicException When the data is corrupted in the file.","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"weidak"},"content":"    public Profile getProfileFromData() throws FileNotFoundException, InvalidCharacteristicException {","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"weidak"},"content":"        File file \u003d new File(Storage.FILEPATH_PROFILE);","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"weidak"},"content":"        Scanner in \u003d new Scanner(file);","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"weidak"},"content":"        try {","lastModifiedDate":"2021-10-19"},{"lineNumber":42,"author":{"gitId":"weidak"},"content":"            if (in.hasNext()) {","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"tryyang2001"},"content":"                logger.log(Level.FINE, \"Retrieving profile file.\");","lastModifiedDate":"2021-10-14"},{"lineNumber":44,"author":{"gitId":"weidak"},"content":"                return decodeProfileDataFromString(in.nextLine());","lastModifiedDate":"2021-10-19"},{"lineNumber":45,"author":{"gitId":"weidak"},"content":"            }","lastModifiedDate":"2021-10-19"},{"lineNumber":46,"author":{"gitId":"weidak"},"content":"        } catch (InvalidDataException e) {","lastModifiedDate":"2021-10-19"},{"lineNumber":47,"author":{"gitId":"weidak"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2021-10-19"},{"lineNumber":48,"author":{"gitId":"weidak"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"tttyyzzz"},"content":"        return new Profile();","lastModifiedDate":"2021-10-13"},{"lineNumber":50,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"weidak"},"content":"    private Profile decodeProfileDataFromString(String input) throws InvalidDataException {","lastModifiedDate":"2021-10-19"},{"lineNumber":53,"author":{"gitId":"weidak"},"content":"        try {","lastModifiedDate":"2021-10-19"},{"lineNumber":54,"author":{"gitId":"weidak"},"content":"            Profile profile \u003d new Profile();","lastModifiedDate":"2021-10-20"},{"lineNumber":55,"author":{"gitId":"weidak"},"content":"            final String[] profileDetails \u003d input.split(FILE_TEXT_DELIMITER);","lastModifiedDate":"2021-10-19"},{"lineNumber":56,"author":{"gitId":"weidak"},"content":"            final String name \u003d profileDetails[0];","lastModifiedDate":"2021-10-19"},{"lineNumber":57,"author":{"gitId":"weidak"},"content":"            final double height \u003d Double.parseDouble(profileDetails[1]);","lastModifiedDate":"2021-10-19"},{"lineNumber":58,"author":{"gitId":"weidak"},"content":"            final double weight \u003d Double.parseDouble(profileDetails[2]);","lastModifiedDate":"2021-10-19"},{"lineNumber":59,"author":{"gitId":"weidak"},"content":"            final char gender \u003d profileDetails[3].charAt(0);","lastModifiedDate":"2021-10-20"},{"lineNumber":60,"author":{"gitId":"weidak"},"content":"            final int age \u003d Integer.parseInt(profileDetails[4]);","lastModifiedDate":"2021-10-20"},{"lineNumber":61,"author":{"gitId":"weidak"},"content":"            final int calorieGoal \u003d Integer.parseInt(profileDetails[5]);","lastModifiedDate":"2021-10-20"},{"lineNumber":62,"author":{"gitId":"weidak"},"content":"            final int activityFactor \u003d Integer.parseInt(profileDetails[6]);","lastModifiedDate":"2021-10-19"},{"lineNumber":63,"author":{"gitId":"weidak"},"content":"            profile.setProfileWithRawInputs(name, height, weight, gender, age, calorieGoal, activityFactor);","lastModifiedDate":"2021-10-20"},{"lineNumber":64,"author":{"gitId":"weidak"},"content":"            return profile;","lastModifiedDate":"2021-10-20"},{"lineNumber":65,"author":{"gitId":"weidak"},"content":"        } catch (IndexOutOfBoundsException | NumberFormatException e) {","lastModifiedDate":"2021-10-20"},{"lineNumber":66,"author":{"gitId":"weidak"},"content":"            throw new InvalidDataException(Storage.FILENAME_PROFILE, input);","lastModifiedDate":"2021-10-19"},{"lineNumber":67,"author":{"gitId":"tttyyzzz"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":68,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":69,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":70,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":71,"author":{"gitId":"weidak"},"content":"     * Retrieves exercise list from exercise_list.txt.","lastModifiedDate":"2021-10-12"},{"lineNumber":72,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":73,"author":{"gitId":"weidak"},"content":"     * @return The exercise list with data loaded from file","lastModifiedDate":"2021-10-12"},{"lineNumber":74,"author":{"gitId":"weidak"},"content":"     * @throws FileNotFoundException If file is misplaced/missing","lastModifiedDate":"2021-10-12"},{"lineNumber":75,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":76,"author":{"gitId":"weidak"},"content":"    public ExerciseList getExerciseListFromData() throws FileNotFoundException {","lastModifiedDate":"2021-10-12"},{"lineNumber":77,"author":{"gitId":"weidak"},"content":"        ExerciseList exercises \u003d new ExerciseList();","lastModifiedDate":"2021-10-12"},{"lineNumber":78,"author":{"gitId":"weidak"},"content":"        File file \u003d new File(Storage.FILEPATH_EXERCISE_LIST);","lastModifiedDate":"2021-10-12"},{"lineNumber":79,"author":{"gitId":"weidak"},"content":"        Scanner in \u003d new Scanner(file);","lastModifiedDate":"2021-10-12"},{"lineNumber":80,"author":{"gitId":"tryyang2001"},"content":"        logger.log(Level.FINE, \"Decoding exercise data from file...\");","lastModifiedDate":"2021-10-14"},{"lineNumber":81,"author":{"gitId":"weidak"},"content":"        while (in.hasNext()) {","lastModifiedDate":"2021-10-12"},{"lineNumber":82,"author":{"gitId":"weidak"},"content":"            try {","lastModifiedDate":"2021-10-19"},{"lineNumber":83,"author":{"gitId":"weidak"},"content":"                decodeExerciseDataFromString(exercises, in.nextLine());","lastModifiedDate":"2021-10-19"},{"lineNumber":84,"author":{"gitId":"weidak"},"content":"            } catch (InvalidDataException e) {","lastModifiedDate":"2021-10-19"},{"lineNumber":85,"author":{"gitId":"weidak"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2021-10-19"},{"lineNumber":86,"author":{"gitId":"weidak"},"content":"            }","lastModifiedDate":"2021-10-19"},{"lineNumber":87,"author":{"gitId":"weidak"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":88,"author":{"gitId":"tryyang2001"},"content":"        logger.log(Level.FINE, \"Retrieved exercise data from file.\");","lastModifiedDate":"2021-10-14"},{"lineNumber":89,"author":{"gitId":"weidak"},"content":"        return exercises;","lastModifiedDate":"2021-10-12"},{"lineNumber":90,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":91,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":92,"author":{"gitId":"weidak"},"content":"    private void decodeExerciseDataFromString(ExerciseList exercises, String line) throws InvalidDataException {","lastModifiedDate":"2021-10-19"},{"lineNumber":93,"author":{"gitId":"weidak"},"content":"        try {","lastModifiedDate":"2021-10-19"},{"lineNumber":94,"author":{"gitId":"weidak"},"content":"            final String[] exerciseDetails \u003d line.split(FILE_TEXT_DELIMITER);","lastModifiedDate":"2021-10-19"},{"lineNumber":95,"author":{"gitId":"weidak"},"content":"            final String name \u003d exerciseDetails[1];","lastModifiedDate":"2021-10-19"},{"lineNumber":96,"author":{"gitId":"weidak"},"content":"            final int calories \u003d Integer.parseInt(exerciseDetails[2]);","lastModifiedDate":"2021-10-19"},{"lineNumber":97,"author":{"gitId":"weidak"},"content":"            final LocalDate dateOfExercise \u003d parseDate(exerciseDetails[3]);","lastModifiedDate":"2021-10-19"},{"lineNumber":98,"author":{"gitId":"weidak"},"content":"            exercises.addExercise(new Exercise(name, calories, dateOfExercise));","lastModifiedDate":"2021-10-19"},{"lineNumber":99,"author":{"gitId":"weidak"},"content":"        } catch (IndexOutOfBoundsException | NumberFormatException | NullPointerException e) {","lastModifiedDate":"2021-10-19"},{"lineNumber":100,"author":{"gitId":"weidak"},"content":"            logger.log(Level.WARNING, \"A line in exercise list is not valid.\", line);","lastModifiedDate":"2021-10-13"},{"lineNumber":101,"author":{"gitId":"weidak"},"content":"            throw new InvalidDataException(Storage.FILENAME_EXERCISE_LIST, line);","lastModifiedDate":"2021-10-19"},{"lineNumber":102,"author":{"gitId":"weidak"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":103,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":104,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":105,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":106,"author":{"gitId":"weidak"},"content":"     * Retrieves food list from food_list.txt.","lastModifiedDate":"2021-10-12"},{"lineNumber":107,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":108,"author":{"gitId":"weidak"},"content":"     * @return The food list with data loaded from file","lastModifiedDate":"2021-10-12"},{"lineNumber":109,"author":{"gitId":"weidak"},"content":"     * @throws FileNotFoundException If file is misplaced/missing","lastModifiedDate":"2021-10-12"},{"lineNumber":110,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":111,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":112,"author":{"gitId":"weidak"},"content":"    public FoodList getFoodListFromData() throws FileNotFoundException {","lastModifiedDate":"2021-10-12"},{"lineNumber":113,"author":{"gitId":"weidak"},"content":"        FoodList foodItems \u003d new FoodList();","lastModifiedDate":"2021-10-12"},{"lineNumber":114,"author":{"gitId":"weidak"},"content":"        File file \u003d new File(Storage.FILEPATH_FOOD_LIST);","lastModifiedDate":"2021-10-12"},{"lineNumber":115,"author":{"gitId":"weidak"},"content":"        Scanner in \u003d new Scanner(file);","lastModifiedDate":"2021-10-12"},{"lineNumber":116,"author":{"gitId":"tryyang2001"},"content":"        logger.log(Level.FINE, \"Decoding food list data from file...\");","lastModifiedDate":"2021-10-14"},{"lineNumber":117,"author":{"gitId":"weidak"},"content":"        while (in.hasNext()) {","lastModifiedDate":"2021-10-12"},{"lineNumber":118,"author":{"gitId":"weidak"},"content":"            try {","lastModifiedDate":"2021-10-19"},{"lineNumber":119,"author":{"gitId":"weidak"},"content":"                decodeFoodDataFromString(foodItems, in.nextLine());","lastModifiedDate":"2021-10-19"},{"lineNumber":120,"author":{"gitId":"weidak"},"content":"            } catch (InvalidDataException e) {","lastModifiedDate":"2021-10-19"},{"lineNumber":121,"author":{"gitId":"weidak"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2021-10-19"},{"lineNumber":122,"author":{"gitId":"weidak"},"content":"            }","lastModifiedDate":"2021-10-19"},{"lineNumber":123,"author":{"gitId":"weidak"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":124,"author":{"gitId":"tryyang2001"},"content":"        logger.log(Level.FINE, \"Retrieved food list data from file.\");","lastModifiedDate":"2021-10-14"},{"lineNumber":125,"author":{"gitId":"weidak"},"content":"        return foodItems;","lastModifiedDate":"2021-10-12"},{"lineNumber":126,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":127,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":128,"author":{"gitId":"weidak"},"content":"    private void decodeFoodDataFromString(FoodList foodItems, String line) throws InvalidDataException {","lastModifiedDate":"2021-10-19"},{"lineNumber":129,"author":{"gitId":"weidak"},"content":"        try {","lastModifiedDate":"2021-10-19"},{"lineNumber":130,"author":{"gitId":"weidak"},"content":"            final String[] foodDetails \u003d line.split(FILE_TEXT_DELIMITER);","lastModifiedDate":"2021-10-19"},{"lineNumber":131,"author":{"gitId":"weidak"},"content":"            final String name \u003d foodDetails[1];","lastModifiedDate":"2021-10-19"},{"lineNumber":132,"author":{"gitId":"weidak"},"content":"            final int calories \u003d Integer.parseInt(foodDetails[2]);","lastModifiedDate":"2021-10-19"},{"lineNumber":133,"author":{"gitId":"weidak"},"content":"            final LocalDateTime dateTimeOfFood \u003d parseDateTime(foodDetails[3]);","lastModifiedDate":"2021-10-19"},{"lineNumber":134,"author":{"gitId":"weidak"},"content":"            foodItems.addFood(new Food(name, calories, dateTimeOfFood));","lastModifiedDate":"2021-10-19"},{"lineNumber":135,"author":{"gitId":"weidak"},"content":"        } catch (IndexOutOfBoundsException | NumberFormatException | NullPointerException e) {","lastModifiedDate":"2021-10-19"},{"lineNumber":136,"author":{"gitId":"weidak"},"content":"            logger.log(Level.WARNING, \"A line in food list is not valid.\", line);","lastModifiedDate":"2021-10-13"},{"lineNumber":137,"author":{"gitId":"weidak"},"content":"            throw new InvalidDataException(Storage.FILENAME_FOOD_LIST, line);","lastModifiedDate":"2021-10-19"},{"lineNumber":138,"author":{"gitId":"weidak"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":139,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":140,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":141,"author":{"gitId":"weidak"},"content":"    private LocalDate parseDate(String date) {","lastModifiedDate":"2021-10-19"},{"lineNumber":142,"author":{"gitId":"weidak"},"content":"        return LocalDate.parse(date, DATE_FORMATTER);","lastModifiedDate":"2021-10-19"},{"lineNumber":143,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":144,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":145,"author":{"gitId":"weidak"},"content":"    private LocalDateTime parseDateTime(String dateTime) {","lastModifiedDate":"2021-10-19"},{"lineNumber":146,"author":{"gitId":"weidak"},"content":"        return LocalDateTime.parse(dateTime, DATE_TIME_FORMATTER);","lastModifiedDate":"2021-10-19"},{"lineNumber":147,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":148,"author":{"gitId":"weidak"},"content":"}","lastModifiedDate":"2021-10-12"},{"lineNumber":149,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"weidak":138,"tttyyzzz":2,"tryyang2001":9}},{"path":"src/main/java/seedu/duke/storage/Encoder.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weidak"},"content":"package seedu.duke.storage;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"tryyang2001"},"content":"import seedu.duke.item.exercise.ExerciseList;","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"tryyang2001"},"content":"import seedu.duke.item.food.FoodList;","lastModifiedDate":"2021-10-16"},{"lineNumber":5,"author":{"gitId":"weidak"},"content":"import seedu.duke.profile.Profile;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"weidak"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"weidak"},"content":"/**","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"weidak"},"content":" * Converts profile, exercise list and food list for storage.","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"weidak"},"content":" */","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"weidak"},"content":"public class Encoder {","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"weidak"},"content":"     * Encodes the profile details into strings for storage.","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"weidak"},"content":"     * @param profile The profile to be encoded","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"weidak"},"content":"     * @return An ArrayList of the profile details to be stored","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"weidak"},"content":"    public ArrayList\u003cString\u003e encodeProfileDetails(Profile profile) {","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"weidak"},"content":"        ArrayList\u003cString\u003e profileDetails \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"weidak"},"content":"        profileDetails.add(profile.toFileTextString());","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"weidak"},"content":"        return profileDetails;","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"weidak"},"content":"     * Encodes the list of exercises into an ArrayList of string in preparation for storage.","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"weidak"},"content":"     * @param exerciseList The list of exercises to be encoded","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"weidak"},"content":"     * @return An ArrayList of the exercises to be stored","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"weidak"},"content":"    public ArrayList\u003cString\u003e encodeExerciseList(ExerciseList exerciseList) {","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"weidak"},"content":"        ArrayList\u003cString\u003e exercises \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-10"},{"lineNumber":34,"author":{"gitId":"weidak"},"content":"        for (int i \u003d 0; i \u003c exerciseList.getSize(); i++) {","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"weidak"},"content":"            exercises.add(exerciseList.getExercise(i).toFileTextString());","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"weidak"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":37,"author":{"gitId":"weidak"},"content":"        return exercises;","lastModifiedDate":"2021-10-10"},{"lineNumber":38,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":39,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":40,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"weidak"},"content":"     * Encodes the list of exercises into an ArrayList of string in preparation for storage.","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":43,"author":{"gitId":"weidak"},"content":"     * @param foodList The list of food items to be encoded","lastModifiedDate":"2021-10-11"},{"lineNumber":44,"author":{"gitId":"weidak"},"content":"     * @return An ArrayList of the food items to be stored","lastModifiedDate":"2021-10-11"},{"lineNumber":45,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":46,"author":{"gitId":"weidak"},"content":"    public ArrayList\u003cString\u003e encodeFoodList(FoodList foodList) {","lastModifiedDate":"2021-10-10"},{"lineNumber":47,"author":{"gitId":"weidak"},"content":"        ArrayList\u003cString\u003e foodItems \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-10"},{"lineNumber":48,"author":{"gitId":"weidak"},"content":"        for (int i \u003d 0; i \u003c foodList.getSize(); i++) {","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"tryyang2001"},"content":"            foodItems.add(foodList.getFood(i).toFileTextString());","lastModifiedDate":"2021-10-16"},{"lineNumber":50,"author":{"gitId":"weidak"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":51,"author":{"gitId":"weidak"},"content":"        return foodItems;","lastModifiedDate":"2021-10-10"},{"lineNumber":52,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":53,"author":{"gitId":"weidak"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"weidak":50,"tryyang2001":3}},{"path":"src/main/java/seedu/duke/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weidak"},"content":"package seedu.duke.storage;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"tryyang2001"},"content":"import seedu.duke.item.exercise.ExerciseList;","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"tryyang2001"},"content":"import seedu.duke.item.food.FoodList;","lastModifiedDate":"2021-10-16"},{"lineNumber":5,"author":{"gitId":"weidak"},"content":"import seedu.duke.profile.Profile;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"weidak"},"content":"import seedu.duke.profile.exceptions.InvalidCharacteristicException;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"weidak"},"content":"import seedu.duke.storage.exceptions.UnableToReadFileException;","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"weidak"},"content":"import seedu.duke.storage.exceptions.UnableToWriteFileException;","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"weidak"},"content":"import java.io.File;","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"weidak"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"weidak"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"weidak"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"weidak"},"content":"import java.nio.file.Files;","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"weidak"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"weidak"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"weidak"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"weidak"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"weidak"},"content":"/**","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"weidak"},"content":" * Handles all read and write operations to the storage files.","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"weidak"},"content":" */","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"weidak"},"content":"public class Storage {","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"weidak"},"content":"    private static final String FILEPATH \u003d \"./data/\";","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"weidak"},"content":"    public static final String FILENAME_PROFILE \u003d \"profile.txt\";","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"weidak"},"content":"    public static final String FILENAME_FOOD_LIST \u003d \"food_list.txt\";","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"weidak"},"content":"    public static final String FILENAME_EXERCISE_LIST \u003d \"exercise_list.txt\";","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"weidak"},"content":"    public static final String FILEPATH_PROFILE \u003d FILEPATH + FILENAME_PROFILE;","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"weidak"},"content":"    public static final String FILEPATH_FOOD_LIST \u003d FILEPATH + FILENAME_FOOD_LIST;","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"weidak"},"content":"    public static final String FILEPATH_EXERCISE_LIST \u003d FILEPATH + FILENAME_EXERCISE_LIST;","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"weidak"},"content":"    private static final String MESSAGE_CREATE_PROFILE \u003d \"No profile detected!\"","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"weidak"},"content":"            + \"A new profile has been created successfully.\";","lastModifiedDate":"2021-10-10"},{"lineNumber":34,"author":{"gitId":"weidak"},"content":"    private static final String MESSAGE_CREATE_FOOD_LIST \u003d \"No food items detected!\"","lastModifiedDate":"2021-10-10"},{"lineNumber":35,"author":{"gitId":"weidak"},"content":"            + \"A new food list has been created successfully.\";","lastModifiedDate":"2021-10-10"},{"lineNumber":36,"author":{"gitId":"weidak"},"content":"    private static final String MESSAGE_CREATE_EXERCISE_LIST \u003d \"No exercises detected!\"","lastModifiedDate":"2021-10-10"},{"lineNumber":37,"author":{"gitId":"weidak"},"content":"            + \"A new exercise has been created successfully.\";","lastModifiedDate":"2021-10-10"},{"lineNumber":38,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":39,"author":{"gitId":"weidak"},"content":"    private final Encoder encoder \u003d new Encoder();","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"weidak"},"content":"    private final Decoder decoder \u003d new Decoder();","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"weidak"},"content":"    private static final Logger logger \u003d Logger.getLogger(Storage.class.getName());","lastModifiedDate":"2021-10-13"},{"lineNumber":42,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":43,"author":{"gitId":"weidak"},"content":"    public Storage() {","lastModifiedDate":"2021-10-10"},{"lineNumber":44,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":45,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":46,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":47,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":48,"author":{"gitId":"weidak"},"content":"     * Load profile data into a profile object.","lastModifiedDate":"2021-10-11"},{"lineNumber":49,"author":{"gitId":"weidak"},"content":"     * Used when the selected profile is accessed.","lastModifiedDate":"2021-10-11"},{"lineNumber":50,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":51,"author":{"gitId":"weidak"},"content":"     * @return Profile object with the details from the storage file","lastModifiedDate":"2021-10-11"},{"lineNumber":52,"author":{"gitId":"weidak"},"content":"     * @throws UnableToReadFileException If the file is inaccessible or due to environment variables","lastModifiedDate":"2021-10-11"},{"lineNumber":53,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":54,"author":{"gitId":"weidak"},"content":"    public Profile loadProfileFile() throws UnableToReadFileException {","lastModifiedDate":"2021-10-10"},{"lineNumber":55,"author":{"gitId":"weidak"},"content":"        checkForFile(FILEPATH_PROFILE);","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"weidak"},"content":"        return readFromProfileFile();","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":58,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":59,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":60,"author":{"gitId":"weidak"},"content":"     * Load exercises into an ExerciseList object.","lastModifiedDate":"2021-10-11"},{"lineNumber":61,"author":{"gitId":"weidak"},"content":"     * Used when the selected profile is accessed and its respective ExerciseList is loaded.","lastModifiedDate":"2021-10-11"},{"lineNumber":62,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":63,"author":{"gitId":"weidak"},"content":"     * @return ExerciseList object with the details from the storage file","lastModifiedDate":"2021-10-11"},{"lineNumber":64,"author":{"gitId":"weidak"},"content":"     * @throws UnableToReadFileException If the file is inaccessible or due to environment variables","lastModifiedDate":"2021-10-11"},{"lineNumber":65,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":66,"author":{"gitId":"weidak"},"content":"    public ExerciseList loadExerciseListFile() throws UnableToReadFileException {","lastModifiedDate":"2021-10-10"},{"lineNumber":67,"author":{"gitId":"weidak"},"content":"        checkForFile(FILEPATH_EXERCISE_LIST);","lastModifiedDate":"2021-10-12"},{"lineNumber":68,"author":{"gitId":"weidak"},"content":"        return readFromExerciseListFile();","lastModifiedDate":"2021-10-12"},{"lineNumber":69,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":70,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":71,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":72,"author":{"gitId":"weidak"},"content":"     * Load food items into a FoodList object.","lastModifiedDate":"2021-10-11"},{"lineNumber":73,"author":{"gitId":"weidak"},"content":"     * Used when the selected profile is accessed and its respective ExerciseList is loaded.","lastModifiedDate":"2021-10-11"},{"lineNumber":74,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":75,"author":{"gitId":"tlyi"},"content":"     * @return FoodList object with the details from the storage file","lastModifiedDate":"2021-10-13"},{"lineNumber":76,"author":{"gitId":"weidak"},"content":"     * @throws UnableToReadFileException If the file is inaccessible or due to environment variables","lastModifiedDate":"2021-10-11"},{"lineNumber":77,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":78,"author":{"gitId":"weidak"},"content":"    public FoodList loadFoodListFile() throws UnableToReadFileException {","lastModifiedDate":"2021-10-10"},{"lineNumber":79,"author":{"gitId":"weidak"},"content":"        checkForFile(FILEPATH_FOOD_LIST);","lastModifiedDate":"2021-10-12"},{"lineNumber":80,"author":{"gitId":"weidak"},"content":"        return readFromFoodListFile();","lastModifiedDate":"2021-10-12"},{"lineNumber":81,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":82,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":83,"author":{"gitId":"weidak"},"content":"    private void checkForFile(String filePath) throws UnableToReadFileException {","lastModifiedDate":"2021-10-12"},{"lineNumber":84,"author":{"gitId":"weidak"},"content":"        File f \u003d new File(filePath);","lastModifiedDate":"2021-10-12"},{"lineNumber":85,"author":{"gitId":"weidak"},"content":"        String[] paths \u003d filePath.split(\"/\");","lastModifiedDate":"2021-10-10"},{"lineNumber":86,"author":{"gitId":"weidak"},"content":"        String fileName \u003d paths[2];","lastModifiedDate":"2021-10-10"},{"lineNumber":87,"author":{"gitId":"weidak"},"content":"        try {","lastModifiedDate":"2021-10-10"},{"lineNumber":88,"author":{"gitId":"weidak"},"content":"            Files.createDirectories(Paths.get(FILEPATH));","lastModifiedDate":"2021-10-20"},{"lineNumber":89,"author":{"gitId":"weidak"},"content":"            if (!f.exists()) {","lastModifiedDate":"2021-10-12"},{"lineNumber":90,"author":{"gitId":"weidak"},"content":"                f.createNewFile();","lastModifiedDate":"2021-10-12"},{"lineNumber":91,"author":{"gitId":"weidak"},"content":"            }","lastModifiedDate":"2021-10-10"},{"lineNumber":92,"author":{"gitId":"weidak"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-10-10"},{"lineNumber":93,"author":{"gitId":"weidak"},"content":"            logger.log(Level.WARNING, \"There is an error accessing the file \", fileName);","lastModifiedDate":"2021-10-13"},{"lineNumber":94,"author":{"gitId":"weidak"},"content":"            throw new UnableToReadFileException(fileName);","lastModifiedDate":"2021-10-10"},{"lineNumber":95,"author":{"gitId":"weidak"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":96,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":97,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":98,"author":{"gitId":"weidak"},"content":"    private Profile readFromProfileFile() throws UnableToReadFileException {","lastModifiedDate":"2021-10-12"},{"lineNumber":99,"author":{"gitId":"weidak"},"content":"        try {","lastModifiedDate":"2021-10-12"},{"lineNumber":100,"author":{"gitId":"weidak"},"content":"            return decoder.getProfileFromData();","lastModifiedDate":"2021-10-12"},{"lineNumber":101,"author":{"gitId":"weidak"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-10-12"},{"lineNumber":102,"author":{"gitId":"weidak"},"content":"            logger.log(Level.WARNING, \"The path is missing \", FILEPATH_PROFILE);","lastModifiedDate":"2021-10-13"},{"lineNumber":103,"author":{"gitId":"weidak"},"content":"            throw new UnableToReadFileException(FILENAME_PROFILE);","lastModifiedDate":"2021-10-12"},{"lineNumber":104,"author":{"gitId":"weidak"},"content":"        } catch (InvalidCharacteristicException e) {","lastModifiedDate":"2021-10-12"},{"lineNumber":105,"author":{"gitId":"weidak"},"content":"            logger.log(Level.WARNING, \"The profile has a invalid characteristic.\");","lastModifiedDate":"2021-10-13"},{"lineNumber":106,"author":{"gitId":"weidak"},"content":"            throw new UnableToReadFileException(FILENAME_PROFILE);","lastModifiedDate":"2021-10-12"},{"lineNumber":107,"author":{"gitId":"weidak"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":108,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":109,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":110,"author":{"gitId":"weidak"},"content":"    private ExerciseList readFromExerciseListFile() throws UnableToReadFileException {","lastModifiedDate":"2021-10-12"},{"lineNumber":111,"author":{"gitId":"weidak"},"content":"        try {","lastModifiedDate":"2021-10-12"},{"lineNumber":112,"author":{"gitId":"weidak"},"content":"            return decoder.getExerciseListFromData();","lastModifiedDate":"2021-10-12"},{"lineNumber":113,"author":{"gitId":"weidak"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-10-12"},{"lineNumber":114,"author":{"gitId":"weidak"},"content":"            logger.log(Level.WARNING, \"The path is missing \", FILEPATH_EXERCISE_LIST);","lastModifiedDate":"2021-10-13"},{"lineNumber":115,"author":{"gitId":"weidak"},"content":"            throw new UnableToReadFileException(FILEPATH_EXERCISE_LIST);","lastModifiedDate":"2021-10-12"},{"lineNumber":116,"author":{"gitId":"weidak"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":117,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":118,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":119,"author":{"gitId":"weidak"},"content":"    private FoodList readFromFoodListFile() throws UnableToReadFileException {","lastModifiedDate":"2021-10-12"},{"lineNumber":120,"author":{"gitId":"weidak"},"content":"        try {","lastModifiedDate":"2021-10-12"},{"lineNumber":121,"author":{"gitId":"weidak"},"content":"            return decoder.getFoodListFromData();","lastModifiedDate":"2021-10-12"},{"lineNumber":122,"author":{"gitId":"weidak"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-10-12"},{"lineNumber":123,"author":{"gitId":"weidak"},"content":"            logger.log(Level.WARNING, \"The path is missing \", FILEPATH_FOOD_LIST);","lastModifiedDate":"2021-10-13"},{"lineNumber":124,"author":{"gitId":"weidak"},"content":"            throw new UnableToReadFileException(FILEPATH_FOOD_LIST);","lastModifiedDate":"2021-10-12"},{"lineNumber":125,"author":{"gitId":"weidak"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":126,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":127,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":128,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":129,"author":{"gitId":"weidak"},"content":"     * Saves all the files into storage.","lastModifiedDate":"2021-10-11"},{"lineNumber":130,"author":{"gitId":"weidak"},"content":"     * Used when the program exits.","lastModifiedDate":"2021-10-11"},{"lineNumber":131,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":132,"author":{"gitId":"weidak"},"content":"     * @param p Profile of the current user","lastModifiedDate":"2021-10-11"},{"lineNumber":133,"author":{"gitId":"weidak"},"content":"     * @param e ExerciseList of the respective profile","lastModifiedDate":"2021-10-11"},{"lineNumber":134,"author":{"gitId":"weidak"},"content":"     * @param f FoodList of the respective profile","lastModifiedDate":"2021-10-11"},{"lineNumber":135,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":136,"author":{"gitId":"tlyi"},"content":"    public void saveAll(Profile p, ExerciseList e, FoodList f) throws UnableToWriteFileException {","lastModifiedDate":"2021-10-13"},{"lineNumber":137,"author":{"gitId":"weidak"},"content":"        saveProfile(p);","lastModifiedDate":"2021-10-10"},{"lineNumber":138,"author":{"gitId":"weidak"},"content":"        saveExercises(e);","lastModifiedDate":"2021-10-10"},{"lineNumber":139,"author":{"gitId":"weidak"},"content":"        saveFoodList(f);","lastModifiedDate":"2021-10-10"},{"lineNumber":140,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":141,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":142,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":143,"author":{"gitId":"weidak"},"content":"     * Saves the profile details into storage.","lastModifiedDate":"2021-10-11"},{"lineNumber":144,"author":{"gitId":"weidak"},"content":"     * Used when there is an update to a profile attribute.","lastModifiedDate":"2021-10-11"},{"lineNumber":145,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":146,"author":{"gitId":"weidak"},"content":"     * @param profile Profile of the current user","lastModifiedDate":"2021-10-11"},{"lineNumber":147,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":148,"author":{"gitId":"tlyi"},"content":"    public void saveProfile(Profile profile) throws UnableToWriteFileException {","lastModifiedDate":"2021-10-13"},{"lineNumber":149,"author":{"gitId":"weidak"},"content":"        ArrayList\u003cString\u003e profileDetails \u003d encoder.encodeProfileDetails(profile);","lastModifiedDate":"2021-10-12"},{"lineNumber":150,"author":{"gitId":"weidak"},"content":"        writeToFile(profileDetails, FILEPATH_PROFILE);","lastModifiedDate":"2021-10-10"},{"lineNumber":151,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":152,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":153,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":154,"author":{"gitId":"weidak"},"content":"     * Saves the exercises into storage.","lastModifiedDate":"2021-10-11"},{"lineNumber":155,"author":{"gitId":"weidak"},"content":"     * Used when there is an update to the list.","lastModifiedDate":"2021-10-11"},{"lineNumber":156,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":157,"author":{"gitId":"weidak"},"content":"     * @param exercises ExerciseList to be saved","lastModifiedDate":"2021-10-11"},{"lineNumber":158,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":159,"author":{"gitId":"tlyi"},"content":"    public void saveExercises(ExerciseList exercises) throws UnableToWriteFileException {","lastModifiedDate":"2021-10-13"},{"lineNumber":160,"author":{"gitId":"weidak"},"content":"        ArrayList\u003cString\u003e exerciseList \u003d encoder.encodeExerciseList(exercises);","lastModifiedDate":"2021-10-12"},{"lineNumber":161,"author":{"gitId":"weidak"},"content":"        writeToFile(exerciseList, FILEPATH_EXERCISE_LIST);","lastModifiedDate":"2021-10-10"},{"lineNumber":162,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":163,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":164,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":165,"author":{"gitId":"weidak"},"content":"     * Saves the food items into storage.","lastModifiedDate":"2021-10-11"},{"lineNumber":166,"author":{"gitId":"weidak"},"content":"     * Used when there is an update to the list.","lastModifiedDate":"2021-10-11"},{"lineNumber":167,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":168,"author":{"gitId":"weidak"},"content":"     * @param foodItems FoodList to be saved","lastModifiedDate":"2021-10-11"},{"lineNumber":169,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":170,"author":{"gitId":"tlyi"},"content":"    public void saveFoodList(FoodList foodItems) throws UnableToWriteFileException {","lastModifiedDate":"2021-10-13"},{"lineNumber":171,"author":{"gitId":"weidak"},"content":"        ArrayList\u003cString\u003e foodList \u003d encoder.encodeFoodList(foodItems);","lastModifiedDate":"2021-10-12"},{"lineNumber":172,"author":{"gitId":"weidak"},"content":"        writeToFile(foodList, FILEPATH_FOOD_LIST);","lastModifiedDate":"2021-10-10"},{"lineNumber":173,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":174,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":175,"author":{"gitId":"weidak"},"content":"    private void writeToFile(ArrayList\u003cString\u003e itemList, String filePath) throws UnableToWriteFileException {","lastModifiedDate":"2021-10-10"},{"lineNumber":176,"author":{"gitId":"weidak"},"content":"        try {","lastModifiedDate":"2021-10-10"},{"lineNumber":177,"author":{"gitId":"weidak"},"content":"            FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2021-10-10"},{"lineNumber":178,"author":{"gitId":"weidak"},"content":"            for (String item : itemList) {","lastModifiedDate":"2021-10-10"},{"lineNumber":179,"author":{"gitId":"weidak"},"content":"                fw.write(item + System.lineSeparator());","lastModifiedDate":"2021-10-10"},{"lineNumber":180,"author":{"gitId":"weidak"},"content":"            }","lastModifiedDate":"2021-10-10"},{"lineNumber":181,"author":{"gitId":"weidak"},"content":"            fw.close();","lastModifiedDate":"2021-10-10"},{"lineNumber":182,"author":{"gitId":"weidak"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-10-10"},{"lineNumber":183,"author":{"gitId":"weidak"},"content":"            throw new UnableToWriteFileException();","lastModifiedDate":"2021-10-10"},{"lineNumber":184,"author":{"gitId":"weidak"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":185,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":186,"author":{"gitId":"weidak"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"weidak":179,"tryyang2001":2,"tlyi":5}},{"path":"src/main/java/seedu/duke/storage/exceptions/InvalidDataException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weidak"},"content":"package seedu.duke.storage.exceptions;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"weidak"},"content":"/**","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"weidak"},"content":" * Exception that is thrown when the data has been modified and become unreadable.","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"weidak"},"content":" */","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"weidak"},"content":"public class InvalidDataException extends Exception {","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"weidak"},"content":"    private static final String LS \u003d System.lineSeparator();","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"weidak"},"content":"    private static final String ERROR_MESSAGE \u003d \"There is a invalid line in %1$s.\" + LS","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"weidak"},"content":"        + \"\\\"%2$s\\\" will not be loaded into the bot.\";","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"weidak"},"content":"    public InvalidDataException(String file, String inputData) {","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"weidak"},"content":"        super(String.format(ERROR_MESSAGE, file, inputData));","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"weidak"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"weidak":15}},{"path":"src/main/java/seedu/duke/storage/exceptions/UnableToReadFileException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weidak"},"content":"package seedu.duke.storage.exceptions;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"weidak"},"content":"/**","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"weidak"},"content":" * An error that is thrown when the bot is unable to access the file or create the file.","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"weidak"},"content":" */","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"weidak"},"content":"public class UnableToReadFileException extends Exception {","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"weidak"},"content":"    private static final String ERROR_MESSAGE \u003d \" file is inaccessible due to an environment error.\"","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"weidak"},"content":"            + System.lineSeparator() + \"Please restart Fitbot and try again.\";","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"weidak"},"content":"    public UnableToReadFileException(String fileName) {","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"weidak"},"content":"        super(fileName + ERROR_MESSAGE);","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"weidak"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"weidak":13}},{"path":"src/main/java/seedu/duke/storage/exceptions/UnableToWriteFileException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weidak"},"content":"package seedu.duke.storage.exceptions;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"weidak"},"content":"/**","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"weidak"},"content":" * An error that indicates if there is an environment error with the file it is trying to write to.","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"weidak"},"content":" */","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"weidak"},"content":"public class UnableToWriteFileException extends Exception {","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"weidak"},"content":"    private static final String ERROR_MESSAGE \u003d \"Unable to write to file, something went wrong while saving\";","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"weidak"},"content":"    public UnableToWriteFileException() {","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"weidak"},"content":"        super(ERROR_MESSAGE);","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"weidak"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"weidak":12}},{"path":"src/main/java/seedu/duke/ui/Statistics.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tttyyzzz"},"content":"package seedu.duke.ui;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"tttyyzzz"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"tttyyzzz"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"tlyi"},"content":"/* A class that manage the statistics of the calories*/","lastModifiedDate":"2021-10-14"},{"lineNumber":8,"author":{"gitId":"tttyyzzz"},"content":"public class Statistics {","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"tttyyzzz"},"content":"    public static final String MESSAGE_CALORIE_GAIN \u003d \"Your calorie gained from food is: %d\";","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"tttyyzzz"},"content":"    public static final String MESSAGE_CALORIE_LOST \u003d \"Your calorie lost from exercise is: %d\";","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"tttyyzzz"},"content":"    public static final String MESSAGE_CALORIE_NET \u003d \"Your net calorie intake is: %d\";","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"tryyang2001"},"content":"    public static final String MESSAGE_CALORIE_GOAL \u003d \"Your calorie goal is: %d\";","lastModifiedDate":"2021-10-14"},{"lineNumber":13,"author":{"gitId":"tttyyzzz"},"content":"    public static final int REVERSE_APPEND \u003d 1;","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"tttyyzzz"},"content":"    public static final String EMPTY \u003d \"\";","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"tryyang2001"},"content":"    public static final String MESSAGE_CALORIE_EXACT \u003d \"You have reached your calorie goal exactly. Good job!\";","lastModifiedDate":"2021-10-14"},{"lineNumber":16,"author":{"gitId":"tryyang2001"},"content":"    public static final String MESSAGE_CALORIE_LESS_THAN \u003d \"You are %s cal away from your goal\";","lastModifiedDate":"2021-10-14"},{"lineNumber":17,"author":{"gitId":"tryyang2001"},"content":"    public static final String MESSAGE_CALORIE_MORE_THAN \u003d \"You have exceeded your calorie goal by %s cal \";","lastModifiedDate":"2021-10-14"},{"lineNumber":18,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"tttyyzzz"},"content":"    public Statistics() {","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"tttyyzzz"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"tttyyzzz"},"content":"    private static Logger logger \u003d Logger.getLogger(Statistics.class.getName());","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"tttyyzzz"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"tttyyzzz"},"content":"     * Calculate netCalories and format exerciseCalories, foodCalories, calorieGoal","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"tttyyzzz"},"content":"     * into strings.","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"tttyyzzz"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"tttyyzzz"},"content":"     * @param exerciseCalories is the total calories lost by exercising","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"tttyyzzz"},"content":"     * @param foodCalories     is the total calories gained by consuming food","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"tttyyzzz"},"content":"     * @param calorieGoal      is the goal set by the user","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"tttyyzzz"},"content":"     * @return formatted strings.","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"tttyyzzz"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":33,"author":{"gitId":"tttyyzzz"},"content":"    public String[] getCaloriesReport(int exerciseCalories, int foodCalories, int calorieGoal) {","lastModifiedDate":"2021-10-13"},{"lineNumber":34,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":35,"author":{"gitId":"tttyyzzz"},"content":"        int netCalories \u003d foodCalories - exerciseCalories;","lastModifiedDate":"2021-10-13"},{"lineNumber":36,"author":{"gitId":"tttyyzzz"},"content":"        int remainingCalories \u003d calorieGoal - netCalories;","lastModifiedDate":"2021-10-13"},{"lineNumber":37,"author":{"gitId":"tttyyzzz"},"content":"        return new String[]{String.format(MESSAGE_CALORIE_GAIN, foodCalories),","lastModifiedDate":"2021-10-13"},{"lineNumber":38,"author":{"gitId":"tttyyzzz"},"content":"                String.format(MESSAGE_CALORIE_LOST, exerciseCalories),","lastModifiedDate":"2021-10-13"},{"lineNumber":39,"author":{"gitId":"tttyyzzz"},"content":"                String.format(MESSAGE_CALORIE_NET, netCalories),","lastModifiedDate":"2021-10-13"},{"lineNumber":40,"author":{"gitId":"tryyang2001"},"content":"                String.format(MESSAGE_CALORIE_GOAL, calorieGoal),","lastModifiedDate":"2021-10-14"},{"lineNumber":41,"author":{"gitId":"tttyyzzz"},"content":"                printCaloriesMessage(netCalories, calorieGoal)};","lastModifiedDate":"2021-10-13"},{"lineNumber":42,"author":{"gitId":"tttyyzzz"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":43,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":44,"author":{"gitId":"tttyyzzz"},"content":"    public String formatMessage(String... messages) {","lastModifiedDate":"2021-10-13"},{"lineNumber":45,"author":{"gitId":"tttyyzzz"},"content":"        StringBuilder content \u003d new StringBuilder(EMPTY);","lastModifiedDate":"2021-10-13"},{"lineNumber":46,"author":{"gitId":"tttyyzzz"},"content":"        for (String message : messages) {","lastModifiedDate":"2021-10-13"},{"lineNumber":47,"author":{"gitId":"tttyyzzz"},"content":"            content.append(message).append(Ui.LS);","lastModifiedDate":"2021-10-13"},{"lineNumber":48,"author":{"gitId":"tttyyzzz"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":49,"author":{"gitId":"tttyyzzz"},"content":"        content.setLength(content.length() - REVERSE_APPEND);","lastModifiedDate":"2021-10-13"},{"lineNumber":50,"author":{"gitId":"tryyang2001"},"content":"        return content.toString().stripTrailing();","lastModifiedDate":"2021-10-14"},{"lineNumber":51,"author":{"gitId":"tttyyzzz"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":52,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":53,"author":{"gitId":"tttyyzzz"},"content":"    public String printCaloriesMessage(int netCalories, int calorieGoal) {","lastModifiedDate":"2021-10-13"},{"lineNumber":54,"author":{"gitId":"tttyyzzz"},"content":"        logger.log(Level.FINE, \"preparing calories message\");","lastModifiedDate":"2021-10-13"},{"lineNumber":55,"author":{"gitId":"tttyyzzz"},"content":"        int calorieDifference \u003d calorieGoal - netCalories;","lastModifiedDate":"2021-10-13"},{"lineNumber":56,"author":{"gitId":"tttyyzzz"},"content":"        String message;","lastModifiedDate":"2021-10-13"},{"lineNumber":57,"author":{"gitId":"tttyyzzz"},"content":"        if (calorieGoal \u003e netCalories) {","lastModifiedDate":"2021-10-13"},{"lineNumber":58,"author":{"gitId":"tryyang2001"},"content":"            message \u003d String.format(MESSAGE_CALORIE_LESS_THAN, calorieDifference);","lastModifiedDate":"2021-10-14"},{"lineNumber":59,"author":{"gitId":"tttyyzzz"},"content":"        } else if (calorieGoal \u003c netCalories) {","lastModifiedDate":"2021-10-13"},{"lineNumber":60,"author":{"gitId":"tryyang2001"},"content":"            message \u003d String.format(MESSAGE_CALORIE_MORE_THAN, -calorieDifference);","lastModifiedDate":"2021-10-14"},{"lineNumber":61,"author":{"gitId":"tttyyzzz"},"content":"        } else {","lastModifiedDate":"2021-10-13"},{"lineNumber":62,"author":{"gitId":"tttyyzzz"},"content":"            assert calorieDifference \u003d\u003d 0 : \"calorieDifference should be 0\";","lastModifiedDate":"2021-10-13"},{"lineNumber":63,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":64,"author":{"gitId":"tryyang2001"},"content":"            message \u003d String.format(MESSAGE_CALORIE_EXACT);","lastModifiedDate":"2021-10-14"},{"lineNumber":65,"author":{"gitId":"tttyyzzz"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":66,"author":{"gitId":"tttyyzzz"},"content":"        return message;","lastModifiedDate":"2021-10-13"},{"lineNumber":67,"author":{"gitId":"tttyyzzz"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":68,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":69,"author":{"gitId":"tttyyzzz"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"tttyyzzz":59,"tryyang2001":9,"tlyi":1}},{"path":"src/main/java/seedu/duke/ui/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.ui;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"tlyi"},"content":"import seedu.duke.commands.HelpCommand;","lastModifiedDate":"2021-10-14"},{"lineNumber":4,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":5,"author":{"gitId":"tlyi"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"tttyyzzz"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"tlyi"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"tttyyzzz"},"content":"/**","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"tttyyzzz"},"content":" * This class deals with interaction with user on CLI.","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"tttyyzzz"},"content":" * Also helps to change color of output if required.","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"tttyyzzz"},"content":" */","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"tttyyzzz"},"content":"public class Ui {","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"tttyyzzz"},"content":"    // to delete on v2.1","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"tttyyzzz"},"content":"    public static final String ANSI_RESET \u003d \"\\u001B[0m\";","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"tttyyzzz"},"content":"    public static final String ANSI_BLACK \u003d \"\\u001B[30m\";","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"tttyyzzz"},"content":"    public static final String ANSI_RED \u003d \"\\u001B[31m\";","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"tttyyzzz"},"content":"    public static final String ANSI_GREEN \u003d \"\\u001B[32m\";","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"tttyyzzz"},"content":"    public static final String ANSI_YELLOW \u003d \"\\u001B[33m\";","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"tttyyzzz"},"content":"    public static final String ANSI_BLUE \u003d \"\\u001B[34m\";","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"tttyyzzz"},"content":"    public static final String ANSI_PURPLE \u003d \"\\u001B[35m\";","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"tttyyzzz"},"content":"    public static final String ANSI_CYAN \u003d \"\\u001B[36m\";","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"tttyyzzz"},"content":"    public static final String ANSI_WHITE \u003d \"\\u001B[37m\";","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"tttyyzzz"},"content":"    public static final String ANSI_GRAY \u003d \"\\u001B[90m\";","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"tttyyzzz"},"content":"    public static final String FULL_BLOCK \u003d \"█\";","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"tttyyzzz"},"content":"    public static final String HALF_BLOCK \u003d \"▌\";","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"tttyyzzz"},"content":"    public static final int MAX_BAR \u003d 16;","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"tttyyzzz"},"content":"    public static final int BAR_WIDTH \u003d 10;","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"tttyyzzz"},"content":"    public static final String SPACE \u003d \" \";","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"tlyi"},"content":"    public static final String TAB \u003d \"\\t\";","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"tlyi"},"content":"    public static final String DIVIDER \u003d \"___________________________________________\"","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"tlyi"},"content":"            + \"_______________________________________________________________\";","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"tttyyzzz"},"content":"    public static final String LS \u003d System.lineSeparator();","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"tlyi"},"content":"    public static final String INDENTED_LS \u003d LS + TAB;","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"tttyyzzz"},"content":"    public static final String EMOJI_1 \u003d \" ᕦ(ò_óˇ)\";","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"tttyyzzz"},"content":"    public static final String FITBOT_V0 \u003d \"  ______ _ _   _           _\"","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"tttyyzzz"},"content":"            + LS","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"tttyyzzz"},"content":"            + \" |  ____(_) | | |         | |\"","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"tttyyzzz"},"content":"            + LS","lastModifiedDate":"2021-10-08"},{"lineNumber":40,"author":{"gitId":"tttyyzzz"},"content":"            + \" | |__   _| |_| |__   ___ | |_\"","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"tttyyzzz"},"content":"            + LS","lastModifiedDate":"2021-10-08"},{"lineNumber":42,"author":{"gitId":"tttyyzzz"},"content":"            + \" |  __| | | __| \u0027_ \\\\ / _ \\\\| __|\"","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"tttyyzzz"},"content":"            + LS","lastModifiedDate":"2021-10-08"},{"lineNumber":44,"author":{"gitId":"tttyyzzz"},"content":"            + \" | |    | | |_| |_) | (_) | |_\"","lastModifiedDate":"2021-10-07"},{"lineNumber":45,"author":{"gitId":"tttyyzzz"},"content":"            + LS","lastModifiedDate":"2021-10-08"},{"lineNumber":46,"author":{"gitId":"tttyyzzz"},"content":"            + \" |_|    |_|\\\\__|_.__/ \\\\___/ \\\\__|\";","lastModifiedDate":"2021-10-07"},{"lineNumber":47,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":48,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":49,"author":{"gitId":"tlyi"},"content":"    public static final String QUOTATION \u003d \"\\\"\";","lastModifiedDate":"2021-10-11"},{"lineNumber":50,"author":{"gitId":"tttyyzzz"},"content":"    public static final String MESSAGE_WELCOME \u003d \"Welcome to Fitbot, a desktop app that helps university students\"","lastModifiedDate":"2021-10-13"},{"lineNumber":51,"author":{"gitId":"tttyyzzz"},"content":"            + \" who are looking to keep track of their\"","lastModifiedDate":"2021-10-13"},{"lineNumber":52,"author":{"gitId":"tttyyzzz"},"content":"            + LS","lastModifiedDate":"2021-10-13"},{"lineNumber":53,"author":{"gitId":"tttyyzzz"},"content":"            + \"fitness and health. Please type a command or view the list of \"","lastModifiedDate":"2021-10-13"},{"lineNumber":54,"author":{"gitId":"tlyi"},"content":"            + \"available commands by typing \" + HelpCommand.MESSAGE_COMMAND_FORMAT + \".\";","lastModifiedDate":"2021-10-14"},{"lineNumber":55,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":56,"author":{"gitId":"tlyi"},"content":"    private Scanner scanner;","lastModifiedDate":"2021-10-11"},{"lineNumber":57,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":58,"author":{"gitId":"tlyi"},"content":"    public Ui() {","lastModifiedDate":"2021-10-11"},{"lineNumber":59,"author":{"gitId":"tlyi"},"content":"        this.scanner \u003d new Scanner(System.in);","lastModifiedDate":"2021-10-11"},{"lineNumber":60,"author":{"gitId":"tlyi"},"content":"        this.printStartApplicationPage();","lastModifiedDate":"2021-10-11"},{"lineNumber":61,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":62,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":63,"author":{"gitId":"tlyi"},"content":"    public String getUserInput() {  //To be moved into UI","lastModifiedDate":"2021-10-11"},{"lineNumber":64,"author":{"gitId":"tlyi"},"content":"        return scanner.nextLine();","lastModifiedDate":"2021-10-11"},{"lineNumber":65,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":66,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":67,"author":{"gitId":"tttyyzzz"},"content":"    private static Logger logger \u003d Logger.getLogger(Ui.class.getName());","lastModifiedDate":"2021-10-13"},{"lineNumber":68,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":69,"author":{"gitId":"tttyyzzz"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":70,"author":{"gitId":"tttyyzzz"},"content":"     * Surround strings with lines for user to differentiate results.","lastModifiedDate":"2021-10-08"},{"lineNumber":71,"author":{"gitId":"tttyyzzz"},"content":"     *","lastModifiedDate":"2021-10-08"},{"lineNumber":72,"author":{"gitId":"tttyyzzz"},"content":"     * @param messages is the strings that need to be printed on CLI","lastModifiedDate":"2021-10-08"},{"lineNumber":73,"author":{"gitId":"tttyyzzz"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":74,"author":{"gitId":"tlyi"},"content":"    public void formatMessageFramedWithDivider(String... messages) {","lastModifiedDate":"2021-10-11"},{"lineNumber":75,"author":{"gitId":"tttyyzzz"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2021-10-08"},{"lineNumber":76,"author":{"gitId":"tttyyzzz"},"content":"        for (String message : messages) {","lastModifiedDate":"2021-10-08"},{"lineNumber":77,"author":{"gitId":"tttyyzzz"},"content":"            System.out.println(message);","lastModifiedDate":"2021-10-08"},{"lineNumber":78,"author":{"gitId":"tttyyzzz"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":79,"author":{"gitId":"tttyyzzz"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2021-10-08"},{"lineNumber":80,"author":{"gitId":"tttyyzzz"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":81,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":82,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":83,"author":{"gitId":"tlyi"},"content":"    public void printStartApplicationPage() {","lastModifiedDate":"2021-10-11"},{"lineNumber":84,"author":{"gitId":"tttyyzzz"},"content":"        logger.log(Level.FINE, \"start of application\");","lastModifiedDate":"2021-10-13"},{"lineNumber":85,"author":{"gitId":"tttyyzzz"},"content":"        System.out.println(FITBOT_V0 + EMOJI_1 + LS + MESSAGE_WELCOME);","lastModifiedDate":"2021-10-13"},{"lineNumber":86,"author":{"gitId":"tttyyzzz"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":87,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":88,"author":{"gitId":"tttyyzzz"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"tttyyzzz":62,"tlyi":26}},{"path":"src/test/java/seedu/duke/exercise/ExerciseListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xingjie99"},"content":"package seedu.duke.exercise;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"xingjie99"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"tryyang2001"},"content":"import seedu.duke.item.exercise.Exercise;","lastModifiedDate":"2021-10-16"},{"lineNumber":5,"author":{"gitId":"tryyang2001"},"content":"import seedu.duke.item.exercise.ExerciseList;","lastModifiedDate":"2021-10-16"},{"lineNumber":6,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"tryyang2001"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-16"},{"lineNumber":8,"author":{"gitId":"tryyang2001"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-10-16"},{"lineNumber":9,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"xingjie99"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"xingjie99"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"xingjie99"},"content":"class ExerciseListTest {","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"xingjie99"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"xingjie99"},"content":"    void addExercise_exerciseClassParameter_expectAddInList() {","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"xingjie99"},"content":"        ExerciseList exerciseList \u003d new ExerciseList();","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"xingjie99"},"content":"        exerciseList.addExercise(new Exercise(\"Jumping Jacks\", 100));","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"xingjie99"},"content":"        assertEquals(\"Jumping Jacks (100 cal)\", exerciseList.getExercise(0).toString());","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"xingjie99"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"xingjie99"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"xingjie99"},"content":"    void deleteExercise_exerciseIndex_expectDeleteFromList() {","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"xingjie99"},"content":"        ExerciseList exerciseList \u003d new ExerciseList();","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"xingjie99"},"content":"        exerciseList.addExercise(new Exercise(\"Running\", 250));","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"xingjie99"},"content":"        exerciseList.addExercise(new Exercise(\"Jumping Jacks\", 100));","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"xingjie99"},"content":"        exerciseList.deleteExercise(0);","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"xingjie99"},"content":"        assertEquals(\"Jumping Jacks (100 cal)\", exerciseList.getExercise(0).toString());","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"xingjie99"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"xingjie99"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"xingjie99"},"content":"    void deleteExercise_exerciseIndex_expectCorrectNumberOfTasksLeft() {","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"xingjie99"},"content":"        ExerciseList exerciseList \u003d new ExerciseList();","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"xingjie99"},"content":"        exerciseList.addExercise(new Exercise(\"Running\", 250));","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"xingjie99"},"content":"        exerciseList.addExercise(new Exercise(\"Jumping Jacks\", 100));","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"xingjie99"},"content":"        exerciseList.deleteExercise(0);","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"xingjie99"},"content":"        assertEquals(1, exerciseList.getSize());","lastModifiedDate":"2021-10-11"},{"lineNumber":39,"author":{"gitId":"xingjie99"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":40,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"xingjie99"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"xingjie99"},"content":"    void deleteExercise_invalidIndex_expectException() {","lastModifiedDate":"2021-10-11"},{"lineNumber":43,"author":{"gitId":"xingjie99"},"content":"        ExerciseList exerciseList \u003d new ExerciseList();","lastModifiedDate":"2021-10-11"},{"lineNumber":44,"author":{"gitId":"xingjie99"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e exerciseList.deleteExercise(0));","lastModifiedDate":"2021-10-11"},{"lineNumber":45,"author":{"gitId":"xingjie99"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":46,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":47,"author":{"gitId":"xingjie99"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":48,"author":{"gitId":"xingjie99"},"content":"    void totalCalorie_someExercises_expectTotalCalorie() {","lastModifiedDate":"2021-10-11"},{"lineNumber":49,"author":{"gitId":"xingjie99"},"content":"        ExerciseList exerciseList \u003d new ExerciseList();","lastModifiedDate":"2021-10-11"},{"lineNumber":50,"author":{"gitId":"xingjie99"},"content":"        exerciseList.addExercise(new Exercise(\"Running\", 250));","lastModifiedDate":"2021-10-11"},{"lineNumber":51,"author":{"gitId":"xingjie99"},"content":"        exerciseList.addExercise(new Exercise(\"Jumping Jacks\", 100));","lastModifiedDate":"2021-10-11"},{"lineNumber":52,"author":{"gitId":"xingjie99"},"content":"        exerciseList.addExercise(new Exercise(\"Skipping\", 200));","lastModifiedDate":"2021-10-11"},{"lineNumber":53,"author":{"gitId":"xingjie99"},"content":"        exerciseList.addExercise(new Exercise(\"Swimming\", 300));","lastModifiedDate":"2021-10-11"},{"lineNumber":54,"author":{"gitId":"tlyi"},"content":"        assertEquals(850, exerciseList.getTotalCalories());","lastModifiedDate":"2021-10-13"},{"lineNumber":55,"author":{"gitId":"xingjie99"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":56,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":57,"author":{"gitId":"tryyang2001"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":58,"author":{"gitId":"tryyang2001"},"content":"    void sortExerciseList_callSortExerciseListMethod_expectSortedList() {","lastModifiedDate":"2021-10-16"},{"lineNumber":59,"author":{"gitId":"tryyang2001"},"content":"        ExerciseList exerciseList \u003d new ExerciseList();","lastModifiedDate":"2021-10-16"},{"lineNumber":60,"author":{"gitId":"tryyang2001"},"content":"        exerciseList.addExercise(new Exercise(\"Running\", 250,","lastModifiedDate":"2021-10-16"},{"lineNumber":61,"author":{"gitId":"tryyang2001"},"content":"                LocalDate.parse(\"2021-10-16\", DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"))));","lastModifiedDate":"2021-10-16"},{"lineNumber":62,"author":{"gitId":"tryyang2001"},"content":"        exerciseList.addExercise(new Exercise(\"Jumping Jacks\", 100,","lastModifiedDate":"2021-10-16"},{"lineNumber":63,"author":{"gitId":"tryyang2001"},"content":"                LocalDate.parse(\"2021-10-19\", DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"))));","lastModifiedDate":"2021-10-16"},{"lineNumber":64,"author":{"gitId":"tryyang2001"},"content":"        exerciseList.addExercise(new Exercise(\"Skipping\", 200,","lastModifiedDate":"2021-10-16"},{"lineNumber":65,"author":{"gitId":"tryyang2001"},"content":"                LocalDate.parse(\"2021-10-18\", DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"))));","lastModifiedDate":"2021-10-16"},{"lineNumber":66,"author":{"gitId":"tryyang2001"},"content":"        exerciseList.addExercise(new Exercise(\"Swimming\", 300,","lastModifiedDate":"2021-10-16"},{"lineNumber":67,"author":{"gitId":"tryyang2001"},"content":"                LocalDate.parse(\"2021-10-17\", DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"))));","lastModifiedDate":"2021-10-16"},{"lineNumber":68,"author":{"gitId":"tryyang2001"},"content":"        exerciseList.sortExerciseList();","lastModifiedDate":"2021-10-16"},{"lineNumber":69,"author":{"gitId":"tryyang2001"},"content":"        System.out.println(exerciseList.convertToString());","lastModifiedDate":"2021-10-16"},{"lineNumber":70,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":71,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":72,"author":{"gitId":"tryyang2001"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":73,"author":{"gitId":"tryyang2001"},"content":"    void totalExerciseCaloriesForSingleDate_oneLocalDateInput_expectSumOfCalorieOnThatDay() {","lastModifiedDate":"2021-10-16"},{"lineNumber":74,"author":{"gitId":"tryyang2001"},"content":"        ExerciseList exerciseList \u003d new ExerciseList();","lastModifiedDate":"2021-10-16"},{"lineNumber":75,"author":{"gitId":"tryyang2001"},"content":"        exerciseList.addExercise(new Exercise(\"Running\", 250,","lastModifiedDate":"2021-10-16"},{"lineNumber":76,"author":{"gitId":"tryyang2001"},"content":"                LocalDate.parse(\"2021-10-16\", DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"))));","lastModifiedDate":"2021-10-16"},{"lineNumber":77,"author":{"gitId":"tryyang2001"},"content":"        exerciseList.addExercise(new Exercise(\"Jumping Jacks\", 100,","lastModifiedDate":"2021-10-16"},{"lineNumber":78,"author":{"gitId":"tryyang2001"},"content":"                LocalDate.parse(\"2021-10-19\", DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"))));","lastModifiedDate":"2021-10-16"},{"lineNumber":79,"author":{"gitId":"tryyang2001"},"content":"        exerciseList.addExercise(new Exercise(\"Skipping\", 200,","lastModifiedDate":"2021-10-16"},{"lineNumber":80,"author":{"gitId":"tryyang2001"},"content":"                LocalDate.parse(\"2021-10-18\", DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"))));","lastModifiedDate":"2021-10-16"},{"lineNumber":81,"author":{"gitId":"tryyang2001"},"content":"        exerciseList.addExercise(new Exercise(\"Swimming\", 300,","lastModifiedDate":"2021-10-16"},{"lineNumber":82,"author":{"gitId":"tryyang2001"},"content":"                LocalDate.parse(\"2021-10-17\", DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"))));","lastModifiedDate":"2021-10-16"},{"lineNumber":83,"author":{"gitId":"tryyang2001"},"content":"        exerciseList.addExercise(new Exercise(\"Jump rope\", 453,","lastModifiedDate":"2021-10-16"},{"lineNumber":84,"author":{"gitId":"tryyang2001"},"content":"                LocalDate.parse(\"2021-10-17\", DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"))));","lastModifiedDate":"2021-10-16"},{"lineNumber":85,"author":{"gitId":"tryyang2001"},"content":"        exerciseList.addExercise(new Exercise(\"Biking\", 420,","lastModifiedDate":"2021-10-16"},{"lineNumber":86,"author":{"gitId":"tryyang2001"},"content":"                LocalDate.parse(\"2021-10-17\", DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"))));","lastModifiedDate":"2021-10-16"},{"lineNumber":87,"author":{"gitId":"tryyang2001"},"content":"        assertEquals(1173, exerciseList.getTotalCaloriesWithDate(","lastModifiedDate":"2021-10-16"},{"lineNumber":88,"author":{"gitId":"tryyang2001"},"content":"                LocalDate.parse(\"17-10-2021\", DateTimeFormatter.ofPattern(\"dd-MM-yyyy\"))));","lastModifiedDate":"2021-10-16"},{"lineNumber":89,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":90,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":91,"author":{"gitId":"tryyang2001"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":92,"author":{"gitId":"tryyang2001"},"content":"    void printExerciseListByOneGivenDate_inputLocalDate_expectExerciseListOfTheDayOnly() {","lastModifiedDate":"2021-10-16"},{"lineNumber":93,"author":{"gitId":"tryyang2001"},"content":"        ExerciseList exerciseList \u003d new ExerciseList();","lastModifiedDate":"2021-10-16"},{"lineNumber":94,"author":{"gitId":"tryyang2001"},"content":"        exerciseList.addExercise(new Exercise(\"Running\", 250,","lastModifiedDate":"2021-10-16"},{"lineNumber":95,"author":{"gitId":"tryyang2001"},"content":"                LocalDate.parse(\"2021-10-16\", DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"))));","lastModifiedDate":"2021-10-16"},{"lineNumber":96,"author":{"gitId":"tryyang2001"},"content":"        exerciseList.addExercise(new Exercise(\"Jumping Jacks\", 100,","lastModifiedDate":"2021-10-16"},{"lineNumber":97,"author":{"gitId":"tryyang2001"},"content":"                LocalDate.parse(\"2021-10-19\", DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"))));","lastModifiedDate":"2021-10-16"},{"lineNumber":98,"author":{"gitId":"tryyang2001"},"content":"        exerciseList.addExercise(new Exercise(\"Skipping\", 200,","lastModifiedDate":"2021-10-16"},{"lineNumber":99,"author":{"gitId":"tryyang2001"},"content":"                LocalDate.parse(\"2021-10-18\", DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"))));","lastModifiedDate":"2021-10-16"},{"lineNumber":100,"author":{"gitId":"tryyang2001"},"content":"        exerciseList.addExercise(new Exercise(\"Swimming\", 300,","lastModifiedDate":"2021-10-16"},{"lineNumber":101,"author":{"gitId":"tryyang2001"},"content":"                LocalDate.parse(\"2021-10-17\", DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"))));","lastModifiedDate":"2021-10-16"},{"lineNumber":102,"author":{"gitId":"tryyang2001"},"content":"        exerciseList.addExercise(new Exercise(\"Jump rope\", 453,","lastModifiedDate":"2021-10-16"},{"lineNumber":103,"author":{"gitId":"tryyang2001"},"content":"                LocalDate.parse(\"2021-10-17\", DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"))));","lastModifiedDate":"2021-10-16"},{"lineNumber":104,"author":{"gitId":"tryyang2001"},"content":"        exerciseList.addExercise(new Exercise(\"Biking\", 420,","lastModifiedDate":"2021-10-16"},{"lineNumber":105,"author":{"gitId":"tryyang2001"},"content":"                LocalDate.parse(\"2021-10-17\", DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"))));","lastModifiedDate":"2021-10-16"},{"lineNumber":106,"author":{"gitId":"tryyang2001"},"content":"        System.out.println(exerciseList.convertToStringBySpecificDate(","lastModifiedDate":"2021-10-17"},{"lineNumber":107,"author":{"gitId":"tryyang2001"},"content":"                LocalDate.parse(\"17-10-2021\", DateTimeFormatter.ofPattern(\"dd-MM-yyyy\"))));","lastModifiedDate":"2021-10-16"},{"lineNumber":108,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":109,"author":{"gitId":"xingjie99"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"xingjie99":50,"tryyang2001":58,"tlyi":1}},{"path":"src/test/java/seedu/duke/food/FoodListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.food;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"tryyang2001"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"tryyang2001"},"content":"import seedu.duke.item.food.Food;","lastModifiedDate":"2021-10-16"},{"lineNumber":5,"author":{"gitId":"tryyang2001"},"content":"import seedu.duke.item.food.FoodList;","lastModifiedDate":"2021-10-16"},{"lineNumber":6,"author":{"gitId":"tryyang2001"},"content":"import seedu.duke.item.food.TimePeriod;","lastModifiedDate":"2021-10-17"},{"lineNumber":7,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"tryyang2001"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-16"},{"lineNumber":9,"author":{"gitId":"tryyang2001"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"tryyang2001"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":12,"author":{"gitId":"tryyang2001"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"tryyang2001"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"tryyang2001"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"tlyi"},"content":"class FoodListTest {","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"tryyang2001"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"tryyang2001"},"content":"    void addFoodUsingFoodClassParameter_foodClassParameter_expectExistsInList() {","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"tryyang2001"},"content":"        FoodList foodList \u003d new FoodList();","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"tryyang2001"},"content":"        foodList.addFood(new Food(\"chicken rice\", 607));","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"tryyang2001"},"content":"        assertEquals(\"chicken rice (607 cal)\", foodList.getFood(foodList.getSize() - 1).toString());","lastModifiedDate":"2021-10-16"},{"lineNumber":22,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"tryyang2001"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"tryyang2001"},"content":"    void printNonEmptyFoodList_nonEmptyFoodList_expectCorrectOutputString() {","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"tryyang2001"},"content":"        FoodList foodList \u003d new FoodList();","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"tryyang2001"},"content":"        foodList.addFood(new Food(\"chicken rice\", 607));","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"tryyang2001"},"content":"        foodList.addFood(new Food(\"yong tau foo\", 536));","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"tryyang2001"},"content":"        foodList.addFood(new Food(\"mcspicy alacarte\", 528));","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"tryyang2001"},"content":"        foodList.addFood(new Food(\"char kway teow\", 744));","lastModifiedDate":"2021-10-10"},{"lineNumber":31,"author":{"gitId":"tryyang2001"},"content":"        System.out.println(foodList.convertToString());","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"tryyang2001"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":35,"author":{"gitId":"tryyang2001"},"content":"    void printEmptyFoodList_emptyFoodList_expectEmptyString() {","lastModifiedDate":"2021-10-13"},{"lineNumber":36,"author":{"gitId":"tryyang2001"},"content":"        FoodList foodList \u003d new FoodList();","lastModifiedDate":"2021-10-13"},{"lineNumber":37,"author":{"gitId":"tryyang2001"},"content":"        assertEquals(\"\", foodList.convertToString());","lastModifiedDate":"2021-10-13"},{"lineNumber":38,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":39,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":40,"author":{"gitId":"tryyang2001"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"tryyang2001"},"content":"    void deleteExistingFoodItem_validIndexInput_expectDeleteSuccessful() {","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"tryyang2001"},"content":"        FoodList foodList \u003d new FoodList();","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"tryyang2001"},"content":"        foodList.addFood(new Food(\"chicken rice\", 607));","lastModifiedDate":"2021-10-10"},{"lineNumber":44,"author":{"gitId":"tryyang2001"},"content":"        foodList.addFood(new Food(\"yong tau foo\", 536));","lastModifiedDate":"2021-10-10"},{"lineNumber":45,"author":{"gitId":"tryyang2001"},"content":"        foodList.deleteFood(1);","lastModifiedDate":"2021-10-10"},{"lineNumber":46,"author":{"gitId":"tryyang2001"},"content":"        assertNotEquals(2, foodList.getSize());","lastModifiedDate":"2021-10-10"},{"lineNumber":47,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":48,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":49,"author":{"gitId":"tryyang2001"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":50,"author":{"gitId":"tryyang2001"},"content":"    void deleteNonExistingFoodItem_invalidIndexInput_expectIndexOutOfBoundException() {","lastModifiedDate":"2021-10-07"},{"lineNumber":51,"author":{"gitId":"tryyang2001"},"content":"        FoodList foodList \u003d new FoodList();","lastModifiedDate":"2021-10-07"},{"lineNumber":52,"author":{"gitId":"tryyang2001"},"content":"        foodList.addFood(new Food(\"chicken rice\", 607));","lastModifiedDate":"2021-10-13"},{"lineNumber":53,"author":{"gitId":"tryyang2001"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e foodList.deleteFood(3));","lastModifiedDate":"2021-10-13"},{"lineNumber":54,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":55,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":56,"author":{"gitId":"tryyang2001"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":57,"author":{"gitId":"tryyang2001"},"content":"    void deleteNegativeIndexFoodItem_negativeIndexInput_expectIndexOutOfBoundException() {","lastModifiedDate":"2021-10-13"},{"lineNumber":58,"author":{"gitId":"tryyang2001"},"content":"        FoodList foodList \u003d new FoodList();","lastModifiedDate":"2021-10-13"},{"lineNumber":59,"author":{"gitId":"tryyang2001"},"content":"        foodList.addFood(new Food(\"chicken rice\", 607));","lastModifiedDate":"2021-10-13"},{"lineNumber":60,"author":{"gitId":"tryyang2001"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e foodList.deleteFood(-1));","lastModifiedDate":"2021-10-13"},{"lineNumber":61,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":62,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":63,"author":{"gitId":"tryyang2001"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":64,"author":{"gitId":"tryyang2001"},"content":"    void deleteNonDigitIndexFoodItem_nonDigitIndexInput_expectNumberFormatException() {","lastModifiedDate":"2021-10-13"},{"lineNumber":65,"author":{"gitId":"tryyang2001"},"content":"        FoodList foodList \u003d new FoodList();","lastModifiedDate":"2021-10-13"},{"lineNumber":66,"author":{"gitId":"tryyang2001"},"content":"        foodList.addFood(new Food(\"chicken rice\", 607));","lastModifiedDate":"2021-10-13"},{"lineNumber":67,"author":{"gitId":"tryyang2001"},"content":"        assertThrows(NumberFormatException.class, () -\u003e foodList.deleteFood(Integer.parseInt(\"a\")));","lastModifiedDate":"2021-10-13"},{"lineNumber":68,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":69,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":70,"author":{"gitId":"tryyang2001"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":71,"author":{"gitId":"tryyang2001"},"content":"    void deleteFromEmptyFoodList_emptyFoodList_expectIndexOutOfBoundException() {","lastModifiedDate":"2021-10-13"},{"lineNumber":72,"author":{"gitId":"tryyang2001"},"content":"        FoodList foodList \u003d new FoodList();","lastModifiedDate":"2021-10-13"},{"lineNumber":73,"author":{"gitId":"tryyang2001"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e foodList.deleteFood(1));","lastModifiedDate":"2021-10-13"},{"lineNumber":74,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":75,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":76,"author":{"gitId":"tryyang2001"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":77,"author":{"gitId":"tryyang2001"},"content":"    void deleteAllFoodItems_callDeleteAllMethod_expectEmptyList() {","lastModifiedDate":"2021-10-07"},{"lineNumber":78,"author":{"gitId":"tryyang2001"},"content":"        FoodList foodList \u003d new FoodList();","lastModifiedDate":"2021-10-07"},{"lineNumber":79,"author":{"gitId":"tryyang2001"},"content":"        foodList.addFood(new Food(\"chicken rice\", 607));","lastModifiedDate":"2021-10-10"},{"lineNumber":80,"author":{"gitId":"tryyang2001"},"content":"        foodList.addFood(new Food(\"yong tau foo\", 536));","lastModifiedDate":"2021-10-10"},{"lineNumber":81,"author":{"gitId":"tryyang2001"},"content":"        foodList.addFood(new Food(\"mcspicy alacarte\", 528));","lastModifiedDate":"2021-10-10"},{"lineNumber":82,"author":{"gitId":"tryyang2001"},"content":"        foodList.addFood(new Food(\"char kway teow\", 744));","lastModifiedDate":"2021-10-10"},{"lineNumber":83,"author":{"gitId":"tryyang2001"},"content":"        foodList.clearFoodList();","lastModifiedDate":"2021-10-11"},{"lineNumber":84,"author":{"gitId":"tryyang2001"},"content":"        assertEquals(0, foodList.getSize());","lastModifiedDate":"2021-10-10"},{"lineNumber":85,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":86,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":87,"author":{"gitId":"tryyang2001"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":88,"author":{"gitId":"tryyang2001"},"content":"    void deleteAllFromEmptyFoodList_emptyFoodList_expectEmptyList() {","lastModifiedDate":"2021-10-13"},{"lineNumber":89,"author":{"gitId":"tryyang2001"},"content":"        FoodList foodList \u003d new FoodList();","lastModifiedDate":"2021-10-13"},{"lineNumber":90,"author":{"gitId":"tryyang2001"},"content":"        foodList.clearFoodList();","lastModifiedDate":"2021-10-13"},{"lineNumber":91,"author":{"gitId":"tryyang2001"},"content":"        assertEquals(0, foodList.getSize());","lastModifiedDate":"2021-10-13"},{"lineNumber":92,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":93,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":94,"author":{"gitId":"tryyang2001"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":95,"author":{"gitId":"tryyang2001"},"content":"    void totalFoodCalories_callTotalCaloriesMethod_expectSumOfFoodCalories() {","lastModifiedDate":"2021-10-13"},{"lineNumber":96,"author":{"gitId":"tryyang2001"},"content":"        FoodList foodList \u003d new FoodList();","lastModifiedDate":"2021-10-13"},{"lineNumber":97,"author":{"gitId":"tryyang2001"},"content":"        foodList.addFood(new Food(\"chicken rice\", 607));","lastModifiedDate":"2021-10-13"},{"lineNumber":98,"author":{"gitId":"tryyang2001"},"content":"        foodList.addFood(new Food(\"yong tau foo\", 536));","lastModifiedDate":"2021-10-13"},{"lineNumber":99,"author":{"gitId":"tryyang2001"},"content":"        foodList.addFood(new Food(\"mcspicy alacarte\", 528));","lastModifiedDate":"2021-10-13"},{"lineNumber":100,"author":{"gitId":"tryyang2001"},"content":"        foodList.addFood(new Food(\"char kway teow\", 744));","lastModifiedDate":"2021-10-13"},{"lineNumber":101,"author":{"gitId":"tryyang2001"},"content":"        assertEquals(2415, foodList.getTotalCalories());","lastModifiedDate":"2021-10-13"},{"lineNumber":102,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":103,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":104,"author":{"gitId":"tryyang2001"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":105,"author":{"gitId":"tryyang2001"},"content":"    void totalFoodCalories_emptyFoodList_expectZeroSum() {","lastModifiedDate":"2021-10-13"},{"lineNumber":106,"author":{"gitId":"tryyang2001"},"content":"        FoodList foodList \u003d new FoodList();","lastModifiedDate":"2021-10-13"},{"lineNumber":107,"author":{"gitId":"tryyang2001"},"content":"        assertEquals(0, foodList.getTotalCalories());","lastModifiedDate":"2021-10-13"},{"lineNumber":108,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":109,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":110,"author":{"gitId":"tryyang2001"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":111,"author":{"gitId":"tryyang2001"},"content":"    void sortFoodListAccordingToDate_callSortFoodListMethod_expectSortedList() {","lastModifiedDate":"2021-10-16"},{"lineNumber":112,"author":{"gitId":"tryyang2001"},"content":"        FoodList foodList \u003d new FoodList();","lastModifiedDate":"2021-10-16"},{"lineNumber":113,"author":{"gitId":"tryyang2001"},"content":"        foodList.addFood(new Food(\"chicken rice\", 607,","lastModifiedDate":"2021-10-16"},{"lineNumber":114,"author":{"gitId":"tryyang2001"},"content":"                LocalDateTime.parse(\"2021-10-16 10:20\", DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\"))));","lastModifiedDate":"2021-10-16"},{"lineNumber":115,"author":{"gitId":"tryyang2001"},"content":"        foodList.addFood(new Food(\"char kway teow\", 744,","lastModifiedDate":"2021-10-16"},{"lineNumber":116,"author":{"gitId":"tryyang2001"},"content":"                LocalDateTime.parse(\"2021-10-19 19:00\", DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\"))));","lastModifiedDate":"2021-10-16"},{"lineNumber":117,"author":{"gitId":"tryyang2001"},"content":"        foodList.addFood(new Food(\"yong tau foo\", 536,","lastModifiedDate":"2021-10-16"},{"lineNumber":118,"author":{"gitId":"tryyang2001"},"content":"                LocalDateTime.parse(\"2021-10-17 14:50\", DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\"))));","lastModifiedDate":"2021-10-16"},{"lineNumber":119,"author":{"gitId":"tryyang2001"},"content":"        foodList.addFood(new Food(\"mcspicy alacarte\", 528,","lastModifiedDate":"2021-10-16"},{"lineNumber":120,"author":{"gitId":"tryyang2001"},"content":"                LocalDateTime.parse(\"2021-10-18 16:50\", DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\"))));","lastModifiedDate":"2021-10-16"},{"lineNumber":121,"author":{"gitId":"tryyang2001"},"content":"        foodList.addFood(new Food(\"maggie mee\", 276,","lastModifiedDate":"2021-10-16"},{"lineNumber":122,"author":{"gitId":"tryyang2001"},"content":"                LocalDateTime.parse(\"16-10-2021 10:20\", DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\"))));","lastModifiedDate":"2021-10-16"},{"lineNumber":123,"author":{"gitId":"tryyang2001"},"content":"        foodList.addFood(new Food(\"yong tau foo\", 536,","lastModifiedDate":"2021-10-16"},{"lineNumber":124,"author":{"gitId":"tryyang2001"},"content":"                LocalDateTime.parse(\"2021-10-17 14:50\", DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\"))));","lastModifiedDate":"2021-10-16"},{"lineNumber":125,"author":{"gitId":"tryyang2001"},"content":"        foodList.addFood(new Food(\"McDonald\u0027s Medium Fries\", 380,","lastModifiedDate":"2021-10-16"},{"lineNumber":126,"author":{"gitId":"tryyang2001"},"content":"                LocalDateTime.parse(\"16-10-2021 14:30\", DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\"))));","lastModifiedDate":"2021-10-16"},{"lineNumber":127,"author":{"gitId":"tryyang2001"},"content":"        foodList.addFood(new Food(\"Starbuck\u0027s Old-fashioned Glazed Donut\", 420,","lastModifiedDate":"2021-10-16"},{"lineNumber":128,"author":{"gitId":"tryyang2001"},"content":"                LocalDateTime.parse(\"16-10-2021 10:20\", DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\"))));","lastModifiedDate":"2021-10-16"},{"lineNumber":129,"author":{"gitId":"tryyang2001"},"content":"        foodList.sortFoodList();","lastModifiedDate":"2021-10-16"},{"lineNumber":130,"author":{"gitId":"tryyang2001"},"content":"        System.out.println(foodList.convertToString());","lastModifiedDate":"2021-10-16"},{"lineNumber":131,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":132,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":133,"author":{"gitId":"tryyang2001"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":134,"author":{"gitId":"tryyang2001"},"content":"    void totalFoodCaloriesForSingleDate_oneLocalDateInput_expectSumOfCalorieOnThatDay() {","lastModifiedDate":"2021-10-16"},{"lineNumber":135,"author":{"gitId":"tryyang2001"},"content":"        FoodList foodList \u003d new FoodList();","lastModifiedDate":"2021-10-16"},{"lineNumber":136,"author":{"gitId":"tryyang2001"},"content":"        foodList.addFood(new Food(\"chicken rice\", 607,","lastModifiedDate":"2021-10-16"},{"lineNumber":137,"author":{"gitId":"tryyang2001"},"content":"                LocalDateTime.parse(\"2021-10-16 10:20\", DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\"))));","lastModifiedDate":"2021-10-16"},{"lineNumber":138,"author":{"gitId":"tryyang2001"},"content":"        foodList.addFood(new Food(\"char kway teow\", 744,","lastModifiedDate":"2021-10-16"},{"lineNumber":139,"author":{"gitId":"tryyang2001"},"content":"                LocalDateTime.parse(\"2021-10-19 19:00\", DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\"))));","lastModifiedDate":"2021-10-16"},{"lineNumber":140,"author":{"gitId":"tryyang2001"},"content":"        foodList.addFood(new Food(\"yong tau foo\", 536,","lastModifiedDate":"2021-10-16"},{"lineNumber":141,"author":{"gitId":"tryyang2001"},"content":"                LocalDateTime.parse(\"2021-10-17 14:50\", DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\"))));","lastModifiedDate":"2021-10-16"},{"lineNumber":142,"author":{"gitId":"tryyang2001"},"content":"        foodList.addFood(new Food(\"mcspicy alacarte\", 528,","lastModifiedDate":"2021-10-16"},{"lineNumber":143,"author":{"gitId":"tryyang2001"},"content":"                LocalDateTime.parse(\"2021-10-18 16:50\", DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\"))));","lastModifiedDate":"2021-10-16"},{"lineNumber":144,"author":{"gitId":"tryyang2001"},"content":"        foodList.addFood(new Food(\"maggie mee\", 276,","lastModifiedDate":"2021-10-16"},{"lineNumber":145,"author":{"gitId":"tryyang2001"},"content":"                LocalDateTime.parse(\"16-10-2021 10:20\", DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\"))));","lastModifiedDate":"2021-10-16"},{"lineNumber":146,"author":{"gitId":"tryyang2001"},"content":"        foodList.addFood(new Food(\"McDonald’s Medium Fries\", 380,","lastModifiedDate":"2021-10-16"},{"lineNumber":147,"author":{"gitId":"tryyang2001"},"content":"                LocalDateTime.parse(\"16-10-2021 14:30\", DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\"))));","lastModifiedDate":"2021-10-16"},{"lineNumber":148,"author":{"gitId":"tryyang2001"},"content":"        foodList.addFood(new Food(\"Starbuck’s Old-fashioned Glazed Donut\", 420,","lastModifiedDate":"2021-10-16"},{"lineNumber":149,"author":{"gitId":"tryyang2001"},"content":"                LocalDateTime.parse(\"16-10-2021 10:20\", DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\"))));","lastModifiedDate":"2021-10-16"},{"lineNumber":150,"author":{"gitId":"tryyang2001"},"content":"        assertEquals(1683, foodList.getTotalCaloriesWithDate(","lastModifiedDate":"2021-10-16"},{"lineNumber":151,"author":{"gitId":"tryyang2001"},"content":"                LocalDate.parse(\"16-10-2021\", DateTimeFormatter.ofPattern(\"dd-MM-yyyy\"))));","lastModifiedDate":"2021-10-16"},{"lineNumber":152,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":153,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":154,"author":{"gitId":"tryyang2001"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":155,"author":{"gitId":"tryyang2001"},"content":"    void printFoodListByOneGivenDate_inputLocalDate_expectFoodListOfThatDayOnly() {","lastModifiedDate":"2021-10-16"},{"lineNumber":156,"author":{"gitId":"tryyang2001"},"content":"        FoodList foodList \u003d new FoodList();","lastModifiedDate":"2021-10-16"},{"lineNumber":157,"author":{"gitId":"tryyang2001"},"content":"        foodList.addFood(new Food(\"chicken rice\", 607,","lastModifiedDate":"2021-10-16"},{"lineNumber":158,"author":{"gitId":"tryyang2001"},"content":"                LocalDateTime.parse(\"2021-10-16 10:20\", DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\"))));","lastModifiedDate":"2021-10-16"},{"lineNumber":159,"author":{"gitId":"tryyang2001"},"content":"        foodList.addFood(new Food(\"char kway teow\", 744,","lastModifiedDate":"2021-10-16"},{"lineNumber":160,"author":{"gitId":"tryyang2001"},"content":"                LocalDateTime.parse(\"2021-10-19 19:00\", DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\"))));","lastModifiedDate":"2021-10-16"},{"lineNumber":161,"author":{"gitId":"tryyang2001"},"content":"        foodList.addFood(new Food(\"yong tau foo\", 536,","lastModifiedDate":"2021-10-16"},{"lineNumber":162,"author":{"gitId":"tryyang2001"},"content":"                LocalDateTime.parse(\"2021-10-17 14:50\", DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\"))));","lastModifiedDate":"2021-10-16"},{"lineNumber":163,"author":{"gitId":"tryyang2001"},"content":"        foodList.addFood(new Food(\"mcspicy alacarte\", 528,","lastModifiedDate":"2021-10-16"},{"lineNumber":164,"author":{"gitId":"tryyang2001"},"content":"                LocalDateTime.parse(\"2021-10-18 16:50\", DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\"))));","lastModifiedDate":"2021-10-16"},{"lineNumber":165,"author":{"gitId":"tryyang2001"},"content":"        foodList.addFood(new Food(\"maggie mee\", 276,","lastModifiedDate":"2021-10-16"},{"lineNumber":166,"author":{"gitId":"tryyang2001"},"content":"                LocalDateTime.parse(\"16-10-2021 10:20\", DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\"))));","lastModifiedDate":"2021-10-16"},{"lineNumber":167,"author":{"gitId":"tryyang2001"},"content":"        foodList.addFood(new Food(\"yong tau foo\", 536,","lastModifiedDate":"2021-10-16"},{"lineNumber":168,"author":{"gitId":"tryyang2001"},"content":"                LocalDateTime.parse(\"2021-10-17 14:50\", DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\"))));","lastModifiedDate":"2021-10-16"},{"lineNumber":169,"author":{"gitId":"tryyang2001"},"content":"        foodList.addFood(new Food(\"McDonald\u0027s Medium Fries\", 380,","lastModifiedDate":"2021-10-16"},{"lineNumber":170,"author":{"gitId":"tryyang2001"},"content":"                LocalDateTime.parse(\"16-10-2021 14:30\", DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\"))));","lastModifiedDate":"2021-10-16"},{"lineNumber":171,"author":{"gitId":"tryyang2001"},"content":"        foodList.addFood(new Food(\"Starbuck\u0027s Old-fashioned Glazed Donut\", 420,","lastModifiedDate":"2021-10-16"},{"lineNumber":172,"author":{"gitId":"tryyang2001"},"content":"                LocalDateTime.parse(\"16-10-2021 10:20\", DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\"))));","lastModifiedDate":"2021-10-16"},{"lineNumber":173,"author":{"gitId":"tryyang2001"},"content":"        System.out.println(foodList.convertToStringBySpecificDate(","lastModifiedDate":"2021-10-18"},{"lineNumber":174,"author":{"gitId":"tryyang2001"},"content":"                LocalDate.parse(\"16-10-2021\", DateTimeFormatter.ofPattern(\"dd-MM-yyyy\"))));","lastModifiedDate":"2021-10-16"},{"lineNumber":175,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":176,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":177,"author":{"gitId":"tryyang2001"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":178,"author":{"gitId":"tryyang2001"},"content":"    void printFoodListWithDifferentDateAndTimePeriod_inputDateAndTime_expectFoodListWithDateAndTimePeriodSeparated() {","lastModifiedDate":"2021-10-17"},{"lineNumber":179,"author":{"gitId":"tryyang2001"},"content":"        FoodList foodList \u003d new FoodList();","lastModifiedDate":"2021-10-17"},{"lineNumber":180,"author":{"gitId":"tryyang2001"},"content":"        foodList.addFood(new Food(\"chicken rice\", 607,","lastModifiedDate":"2021-10-17"},{"lineNumber":181,"author":{"gitId":"tryyang2001"},"content":"                LocalDateTime.parse(\"2021-10-16 13:20\", DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\"))));","lastModifiedDate":"2021-10-17"},{"lineNumber":182,"author":{"gitId":"tryyang2001"},"content":"        foodList.addFood(new Food(\"char kway teow\", 744,","lastModifiedDate":"2021-10-17"},{"lineNumber":183,"author":{"gitId":"tryyang2001"},"content":"                LocalDateTime.parse(\"2021-10-17 19:00\", DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\"))));","lastModifiedDate":"2021-10-17"},{"lineNumber":184,"author":{"gitId":"tryyang2001"},"content":"        foodList.addFood(new Food(\"yong tau foo\", 536,","lastModifiedDate":"2021-10-17"},{"lineNumber":185,"author":{"gitId":"tryyang2001"},"content":"                LocalDateTime.parse(\"2021-10-17 14:50\", DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\"))));","lastModifiedDate":"2021-10-17"},{"lineNumber":186,"author":{"gitId":"tryyang2001"},"content":"        foodList.addFood(new Food(\"mcspicy alacarte\", 528,","lastModifiedDate":"2021-10-17"},{"lineNumber":187,"author":{"gitId":"tryyang2001"},"content":"                LocalDateTime.parse(\"2021-10-18 18:50\", DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\"))));","lastModifiedDate":"2021-10-17"},{"lineNumber":188,"author":{"gitId":"tryyang2001"},"content":"        foodList.addFood(new Food(\"maggie mee\", 276,","lastModifiedDate":"2021-10-17"},{"lineNumber":189,"author":{"gitId":"tryyang2001"},"content":"                LocalDateTime.parse(\"16-10-2021 10:20\", DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\"))));","lastModifiedDate":"2021-10-17"},{"lineNumber":190,"author":{"gitId":"tryyang2001"},"content":"        foodList.addFood(new Food(\"yong tau foo\", 536,","lastModifiedDate":"2021-10-17"},{"lineNumber":191,"author":{"gitId":"tryyang2001"},"content":"                LocalDateTime.parse(\"2021-10-17 14:50\", DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\"))));","lastModifiedDate":"2021-10-17"},{"lineNumber":192,"author":{"gitId":"tryyang2001"},"content":"        foodList.addFood(new Food(\"McDonald\u0027s Medium Fries\", 380,","lastModifiedDate":"2021-10-17"},{"lineNumber":193,"author":{"gitId":"tryyang2001"},"content":"                LocalDateTime.parse(\"16-10-2021 10:30\", DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\"))));","lastModifiedDate":"2021-10-17"},{"lineNumber":194,"author":{"gitId":"tryyang2001"},"content":"        foodList.addFood(new Food(\"Starbuck\u0027s Old-fashioned Glazed Donut\", 420,","lastModifiedDate":"2021-10-17"},{"lineNumber":195,"author":{"gitId":"tryyang2001"},"content":"                LocalDateTime.parse(\"17-10-2021 10:20\", DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\"))));","lastModifiedDate":"2021-10-17"},{"lineNumber":196,"author":{"gitId":"tryyang2001"},"content":"        foodList.addFood(new Food(\"fish soup\", 300,","lastModifiedDate":"2021-10-17"},{"lineNumber":197,"author":{"gitId":"tryyang2001"},"content":"                LocalDateTime.parse(\"16-10-2021 19:20\", DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\"))));","lastModifiedDate":"2021-10-17"},{"lineNumber":198,"author":{"gitId":"tryyang2001"},"content":"        foodList.addFood(new Food(\"nasi lemak\", 430,","lastModifiedDate":"2021-10-17"},{"lineNumber":199,"author":{"gitId":"tryyang2001"},"content":"                LocalDateTime.parse(\"16-10-2021 01:20\", DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\"))));","lastModifiedDate":"2021-10-17"},{"lineNumber":200,"author":{"gitId":"tryyang2001"},"content":"        foodList.sortFoodList();","lastModifiedDate":"2021-10-17"},{"lineNumber":201,"author":{"gitId":"tryyang2001"},"content":"        System.out.println(foodList.convertToString());","lastModifiedDate":"2021-10-17"},{"lineNumber":202,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":203,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":204,"author":{"gitId":"tryyang2001"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":205,"author":{"gitId":"tryyang2001"},"content":"    void countSupperWithNonEmptyFoodList_callCountSupperMethod_expectCorrectIntegerSupperCount() {","lastModifiedDate":"2021-10-17"},{"lineNumber":206,"author":{"gitId":"tryyang2001"},"content":"        FoodList foodList \u003d new FoodList();","lastModifiedDate":"2021-10-17"},{"lineNumber":207,"author":{"gitId":"tryyang2001"},"content":"        foodList.addFood(new Food(\"chicken rice\", 607,","lastModifiedDate":"2021-10-17"},{"lineNumber":208,"author":{"gitId":"tryyang2001"},"content":"                LocalDateTime.parse(\"2021-10-16 13:20\", DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\"))));","lastModifiedDate":"2021-10-17"},{"lineNumber":209,"author":{"gitId":"tryyang2001"},"content":"        foodList.addFood(new Food(\"char kway teow\", 744,","lastModifiedDate":"2021-10-17"},{"lineNumber":210,"author":{"gitId":"tryyang2001"},"content":"                LocalDateTime.parse(\"2021-10-17 19:00\", DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\"))));","lastModifiedDate":"2021-10-17"},{"lineNumber":211,"author":{"gitId":"tryyang2001"},"content":"        foodList.addFood(new Food(\"yong tau foo\", 536,","lastModifiedDate":"2021-10-17"},{"lineNumber":212,"author":{"gitId":"tryyang2001"},"content":"                LocalDateTime.parse(\"2021-10-17 14:50\", DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\"))));","lastModifiedDate":"2021-10-17"},{"lineNumber":213,"author":{"gitId":"tryyang2001"},"content":"        foodList.addFood(new Food(\"mcspicy alacarte\", 528,","lastModifiedDate":"2021-10-17"},{"lineNumber":214,"author":{"gitId":"tryyang2001"},"content":"                LocalDateTime.parse(\"2021-10-18 18:50\", DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\"))));","lastModifiedDate":"2021-10-17"},{"lineNumber":215,"author":{"gitId":"tryyang2001"},"content":"        foodList.addFood(new Food(\"maggie mee\", 276,","lastModifiedDate":"2021-10-17"},{"lineNumber":216,"author":{"gitId":"tryyang2001"},"content":"                LocalDateTime.parse(\"16-10-2021 10:20\", DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\"))));","lastModifiedDate":"2021-10-17"},{"lineNumber":217,"author":{"gitId":"tryyang2001"},"content":"        foodList.addFood(new Food(\"yong tau foo\", 536,","lastModifiedDate":"2021-10-17"},{"lineNumber":218,"author":{"gitId":"tryyang2001"},"content":"                LocalDateTime.parse(\"2021-10-17 14:50\", DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\"))));","lastModifiedDate":"2021-10-17"},{"lineNumber":219,"author":{"gitId":"tryyang2001"},"content":"        foodList.addFood(new Food(\"McDonald\u0027s Medium Fries\", 380,","lastModifiedDate":"2021-10-17"},{"lineNumber":220,"author":{"gitId":"tryyang2001"},"content":"                LocalDateTime.parse(\"16-10-2021 10:30\", DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\"))));","lastModifiedDate":"2021-10-17"},{"lineNumber":221,"author":{"gitId":"tryyang2001"},"content":"        foodList.addFood(new Food(\"Starbuck\u0027s Old-fashioned Glazed Donut\", 420,","lastModifiedDate":"2021-10-17"},{"lineNumber":222,"author":{"gitId":"tryyang2001"},"content":"                LocalDateTime.parse(\"17-10-2021 10:20\", DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\"))));","lastModifiedDate":"2021-10-17"},{"lineNumber":223,"author":{"gitId":"tryyang2001"},"content":"        foodList.addFood(new Food(\"fish soup\", 300,","lastModifiedDate":"2021-10-17"},{"lineNumber":224,"author":{"gitId":"tryyang2001"},"content":"                LocalDateTime.parse(\"16-10-2021 19:20\", DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\"))));","lastModifiedDate":"2021-10-17"},{"lineNumber":225,"author":{"gitId":"tryyang2001"},"content":"        foodList.addFood(new Food(\"nasi lemak\", 430,","lastModifiedDate":"2021-10-17"},{"lineNumber":226,"author":{"gitId":"tryyang2001"},"content":"                LocalDateTime.parse(\"16-10-2021 01:20\", DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\"))));","lastModifiedDate":"2021-10-17"},{"lineNumber":227,"author":{"gitId":"tryyang2001"},"content":"        foodList.addFood(new Food(\"cheese chicken burger\", 430,","lastModifiedDate":"2021-10-17"},{"lineNumber":228,"author":{"gitId":"tryyang2001"},"content":"                LocalDateTime.parse(\"18-10-2021 04:20\", DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\"))));","lastModifiedDate":"2021-10-17"},{"lineNumber":229,"author":{"gitId":"tryyang2001"},"content":"        assertEquals(2, foodList.getSupperCount());","lastModifiedDate":"2021-10-17"},{"lineNumber":230,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":231,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":232,"author":{"gitId":"tryyang2001"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":233,"author":{"gitId":"tryyang2001"},"content":"    void printFoodListBySpecificDateAndTime_inputDateAndTimePeriod_expectFoodListForTheDateAndTimePeriodOnly() {","lastModifiedDate":"2021-10-17"},{"lineNumber":234,"author":{"gitId":"tryyang2001"},"content":"        FoodList foodList \u003d new FoodList();","lastModifiedDate":"2021-10-17"},{"lineNumber":235,"author":{"gitId":"tryyang2001"},"content":"        foodList.addFood(new Food(\"chicken rice\", 607,","lastModifiedDate":"2021-10-17"},{"lineNumber":236,"author":{"gitId":"tryyang2001"},"content":"                LocalDateTime.parse(\"2021-10-16 13:20\", DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\"))));","lastModifiedDate":"2021-10-17"},{"lineNumber":237,"author":{"gitId":"tryyang2001"},"content":"        foodList.addFood(new Food(\"char kway teow\", 744,","lastModifiedDate":"2021-10-17"},{"lineNumber":238,"author":{"gitId":"tryyang2001"},"content":"                LocalDateTime.parse(\"2021-10-17 19:00\", DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\"))));","lastModifiedDate":"2021-10-17"},{"lineNumber":239,"author":{"gitId":"tryyang2001"},"content":"        foodList.addFood(new Food(\"yong tau foo\", 536,","lastModifiedDate":"2021-10-17"},{"lineNumber":240,"author":{"gitId":"tryyang2001"},"content":"                LocalDateTime.parse(\"2021-10-17 14:50\", DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\"))));","lastModifiedDate":"2021-10-17"},{"lineNumber":241,"author":{"gitId":"tryyang2001"},"content":"        foodList.addFood(new Food(\"mcspicy alacarte\", 528,","lastModifiedDate":"2021-10-17"},{"lineNumber":242,"author":{"gitId":"tryyang2001"},"content":"                LocalDateTime.parse(\"2021-10-18 18:50\", DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\"))));","lastModifiedDate":"2021-10-17"},{"lineNumber":243,"author":{"gitId":"tryyang2001"},"content":"        foodList.addFood(new Food(\"maggie mee\", 276,","lastModifiedDate":"2021-10-17"},{"lineNumber":244,"author":{"gitId":"tryyang2001"},"content":"                LocalDateTime.parse(\"16-10-2021 10:20\", DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\"))));","lastModifiedDate":"2021-10-17"},{"lineNumber":245,"author":{"gitId":"tryyang2001"},"content":"        foodList.addFood(new Food(\"yong tau foo\", 536,","lastModifiedDate":"2021-10-17"},{"lineNumber":246,"author":{"gitId":"tryyang2001"},"content":"                LocalDateTime.parse(\"2021-10-17 14:50\", DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\"))));","lastModifiedDate":"2021-10-17"},{"lineNumber":247,"author":{"gitId":"tryyang2001"},"content":"        foodList.addFood(new Food(\"McDonald\u0027s Medium Fries\", 380,","lastModifiedDate":"2021-10-17"},{"lineNumber":248,"author":{"gitId":"tryyang2001"},"content":"                LocalDateTime.parse(\"16-10-2021 10:30\", DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\"))));","lastModifiedDate":"2021-10-17"},{"lineNumber":249,"author":{"gitId":"tryyang2001"},"content":"        foodList.addFood(new Food(\"Starbuck\u0027s Old-fashioned Glazed Donut\", 420,","lastModifiedDate":"2021-10-17"},{"lineNumber":250,"author":{"gitId":"tryyang2001"},"content":"                LocalDateTime.parse(\"17-10-2021 10:20\", DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\"))));","lastModifiedDate":"2021-10-17"},{"lineNumber":251,"author":{"gitId":"tryyang2001"},"content":"        foodList.addFood(new Food(\"fish soup\", 300,","lastModifiedDate":"2021-10-17"},{"lineNumber":252,"author":{"gitId":"tryyang2001"},"content":"                LocalDateTime.parse(\"16-10-2021 19:20\", DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\"))));","lastModifiedDate":"2021-10-17"},{"lineNumber":253,"author":{"gitId":"tryyang2001"},"content":"        foodList.addFood(new Food(\"nasi lemak\", 430,","lastModifiedDate":"2021-10-17"},{"lineNumber":254,"author":{"gitId":"tryyang2001"},"content":"                LocalDateTime.parse(\"16-10-2021 01:20\", DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\"))));","lastModifiedDate":"2021-10-17"},{"lineNumber":255,"author":{"gitId":"tryyang2001"},"content":"        foodList.addFood(new Food(\"cheese chicken burger\", 430,","lastModifiedDate":"2021-10-17"},{"lineNumber":256,"author":{"gitId":"tryyang2001"},"content":"                LocalDateTime.parse(\"18-10-2021 04:20\", DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\"))));","lastModifiedDate":"2021-10-17"},{"lineNumber":257,"author":{"gitId":"tryyang2001"},"content":"        foodList.sortFoodList();","lastModifiedDate":"2021-10-17"},{"lineNumber":258,"author":{"gitId":"tryyang2001"},"content":"        System.out.println(foodList.convertToStringBySpecificDateAndTime(","lastModifiedDate":"2021-10-17"},{"lineNumber":259,"author":{"gitId":"tryyang2001"},"content":"                LocalDate.parse(\"16-10-2021\", DateTimeFormatter.ofPattern(\"dd-MM-yyyy\")),","lastModifiedDate":"2021-10-17"},{"lineNumber":260,"author":{"gitId":"tryyang2001"},"content":"                TimePeriod.Morning));","lastModifiedDate":"2021-10-17"},{"lineNumber":261,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":262,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":263,"author":{"gitId":"tryyang2001"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":264,"author":{"gitId":"tryyang2001"},"content":"    void printFoodListBySpecificDateWithEmptyFoodList_emptyFoodList_expectErrorMessage() {","lastModifiedDate":"2021-10-17"},{"lineNumber":265,"author":{"gitId":"tryyang2001"},"content":"        FoodList foodList \u003d new FoodList();","lastModifiedDate":"2021-10-17"},{"lineNumber":266,"author":{"gitId":"tryyang2001"},"content":"        foodList.addFood(new Food(\"chicken rice\", 607,","lastModifiedDate":"2021-10-17"},{"lineNumber":267,"author":{"gitId":"tryyang2001"},"content":"                LocalDateTime.parse(\"17-10-2021 23:59\", DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\"))));","lastModifiedDate":"2021-10-17"},{"lineNumber":268,"author":{"gitId":"tryyang2001"},"content":"        assertEquals(\"There is no food item found by the given date\", foodList.convertToStringBySpecificDate(","lastModifiedDate":"2021-10-18"},{"lineNumber":269,"author":{"gitId":"tryyang2001"},"content":"                LocalDate.parse(\"16-10-2021\", DateTimeFormatter.ofPattern(\"dd-MM-yyyy\"))));","lastModifiedDate":"2021-10-17"},{"lineNumber":270,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":271,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":272,"author":{"gitId":"tryyang2001"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":273,"author":{"gitId":"tryyang2001"},"content":"    void printFoodListBySpecificDateAndTimePeriodWithEmptyFoodList_emptyFoodList_expectErrorMessage() {","lastModifiedDate":"2021-10-17"},{"lineNumber":274,"author":{"gitId":"tryyang2001"},"content":"        FoodList foodList \u003d new FoodList();","lastModifiedDate":"2021-10-17"},{"lineNumber":275,"author":{"gitId":"tryyang2001"},"content":"        foodList.addFood(new Food(\"chicken rice\", 607,","lastModifiedDate":"2021-10-17"},{"lineNumber":276,"author":{"gitId":"tryyang2001"},"content":"                LocalDateTime.parse(\"17-10-2021 23:59\", DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\"))));","lastModifiedDate":"2021-10-17"},{"lineNumber":277,"author":{"gitId":"tryyang2001"},"content":"        assertEquals(\"There is no food item found by the given date and time period\",","lastModifiedDate":"2021-10-17"},{"lineNumber":278,"author":{"gitId":"tryyang2001"},"content":"                foodList.convertToStringBySpecificDateAndTime(","lastModifiedDate":"2021-10-17"},{"lineNumber":279,"author":{"gitId":"tryyang2001"},"content":"                        LocalDate.parse(\"16-10-2021\", DateTimeFormatter.ofPattern(\"dd-MM-yyyy\")), TimePeriod.Morning));","lastModifiedDate":"2021-10-17"},{"lineNumber":280,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":281,"author":{"gitId":"tryyang2001"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"tryyang2001":279,"tlyi":2}},{"path":"src/test/java/seedu/duke/parser/ParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.parser;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"tlyi"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"tlyi"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"tlyi"},"content":"import seedu.duke.commands.AddExerciseBankCommand;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"tlyi"},"content":"import seedu.duke.commands.AddExerciseCommand;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"tlyi"},"content":"import seedu.duke.commands.AddFoodBankCommand;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"tlyi"},"content":"import seedu.duke.commands.AddFoodCommand;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"tlyi"},"content":"import seedu.duke.commands.ByeCommand;","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"tlyi"},"content":"import seedu.duke.commands.CalculateBmiCommand;","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"tlyi"},"content":"import seedu.duke.commands.CalculateBmiWithProfileCommand;","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"tlyi"},"content":"import seedu.duke.commands.Command;","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"tlyi"},"content":"import seedu.duke.commands.HelpCommand;","lastModifiedDate":"2021-10-14"},{"lineNumber":14,"author":{"gitId":"tlyi"},"content":"import seedu.duke.commands.InvalidCommand;","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"tlyi"},"content":"import seedu.duke.commands.OverviewCommand;","lastModifiedDate":"2021-10-14"},{"lineNumber":16,"author":{"gitId":"tlyi"},"content":"import seedu.duke.commands.ProfileUpdateCommand;","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"tlyi"},"content":"import seedu.duke.commands.ViewCommand;","lastModifiedDate":"2021-10-14"},{"lineNumber":18,"author":{"gitId":"tlyi"},"content":"import seedu.duke.commands.ViewExerciseBankCommand;","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"tlyi"},"content":"import seedu.duke.commands.ViewExerciseListCommand;","lastModifiedDate":"2021-10-14"},{"lineNumber":20,"author":{"gitId":"tlyi"},"content":"import seedu.duke.commands.ViewFoodBankCommand;","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"tlyi"},"content":"import seedu.duke.commands.ViewFoodListCommand;","lastModifiedDate":"2021-10-14"},{"lineNumber":22,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"tlyi"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"tlyi"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"tryyang2001"},"content":"import static seedu.duke.parser.Parser.MESSAGE_ERROR_COMMAND_DOES_NOT_EXIST;","lastModifiedDate":"2021-10-14"},{"lineNumber":26,"author":{"gitId":"tryyang2001"},"content":"import static seedu.duke.parser.Parser.MESSAGE_ERROR_ILLEGAL_CHARACTER;","lastModifiedDate":"2021-10-14"},{"lineNumber":27,"author":{"gitId":"tryyang2001"},"content":"import static seedu.duke.parser.Parser.MESSAGE_ERROR_INVALID_CALORIES_INFO;","lastModifiedDate":"2021-10-14"},{"lineNumber":28,"author":{"gitId":"tryyang2001"},"content":"import static seedu.duke.parser.Parser.MESSAGE_ERROR_NOT_A_NUMBER;","lastModifiedDate":"2021-10-14"},{"lineNumber":29,"author":{"gitId":"tryyang2001"},"content":"import static seedu.duke.parser.Parser.MESSAGE_ERROR_TOO_MANY_DELIMITERS;","lastModifiedDate":"2021-10-14"},{"lineNumber":30,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":31,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"tlyi"},"content":"class ParserTest {","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"tlyi"},"content":"    private Parser parser;","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"tlyi"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"tlyi"},"content":"    public void setUp() {","lastModifiedDate":"2021-10-11"},{"lineNumber":39,"author":{"gitId":"tlyi"},"content":"        parser \u003d new Parser();","lastModifiedDate":"2021-10-11"},{"lineNumber":40,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"tlyi"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":43,"author":{"gitId":"tlyi"},"content":"    void parseCommand_invalidCommandWord_commandDoesNotExistMessage() {","lastModifiedDate":"2021-10-11"},{"lineNumber":44,"author":{"gitId":"tlyi"},"content":"        parseAndAssertIncorrectWithMessage(MESSAGE_ERROR_COMMAND_DOES_NOT_EXIST, \"potato\", \"hi\");","lastModifiedDate":"2021-10-11"},{"lineNumber":45,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":46,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":47,"author":{"gitId":"tlyi"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":48,"author":{"gitId":"tlyi"},"content":"    void parseCommand_containsTextFileDelimiter_illegalCharacterMessage() {","lastModifiedDate":"2021-10-13"},{"lineNumber":49,"author":{"gitId":"tlyi"},"content":"        parseAndAssertIncorrectWithMessage(MESSAGE_ERROR_ILLEGAL_CHARACTER, \"potato | as\", \"add |\", \"name h|o\");","lastModifiedDate":"2021-10-13"},{"lineNumber":50,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":51,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":52,"author":{"gitId":"tlyi"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":53,"author":{"gitId":"tlyi"},"content":"    void parseAddCommand_correctInput_addCommand() {","lastModifiedDate":"2021-10-11"},{"lineNumber":54,"author":{"gitId":"tlyi"},"content":"        parseAndAssertCommandType(\"add f/potato c/20\", AddFoodCommand.class);","lastModifiedDate":"2021-10-11"},{"lineNumber":55,"author":{"gitId":"tlyi"},"content":"        parseAndAssertCommandType(\"aDD c/20 f/potato\", AddFoodCommand.class);","lastModifiedDate":"2021-10-11"},{"lineNumber":56,"author":{"gitId":"tlyi"},"content":"        parseAndAssertCommandType(\"add e/potato c/20\", AddExerciseCommand.class);","lastModifiedDate":"2021-10-11"},{"lineNumber":57,"author":{"gitId":"tlyi"},"content":"        parseAndAssertCommandType(\"aDD c/20 e/potato\", AddExerciseCommand.class);","lastModifiedDate":"2021-10-11"},{"lineNumber":58,"author":{"gitId":"tlyi"},"content":"        parseAndAssertCommandType(\"add fbank/potato c/20\", AddFoodBankCommand.class);","lastModifiedDate":"2021-10-19"},{"lineNumber":59,"author":{"gitId":"tlyi"},"content":"        parseAndAssertCommandType(\"add ebank/potato c/20\", AddExerciseBankCommand.class);","lastModifiedDate":"2021-10-19"},{"lineNumber":60,"author":{"gitId":"tlyi"},"content":"        parseAndAssertCommandType(\"add c/20 fbank/potato\", AddFoodBankCommand.class);","lastModifiedDate":"2021-10-19"},{"lineNumber":61,"author":{"gitId":"tlyi"},"content":"        parseAndAssertCommandType(\"add c/20 ebank/potato\", AddExerciseBankCommand.class);","lastModifiedDate":"2021-10-19"},{"lineNumber":62,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":63,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":64,"author":{"gitId":"tlyi"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":65,"author":{"gitId":"tlyi"},"content":"    void parseAddCommand_itemTypeNotSpecified_invalidCommand() {","lastModifiedDate":"2021-10-19"},{"lineNumber":66,"author":{"gitId":"tlyi"},"content":"        parseAndAssertCommandType(\"add\", InvalidCommand.class);","lastModifiedDate":"2021-10-19"},{"lineNumber":67,"author":{"gitId":"tlyi"},"content":"        parseAndAssertCommandType(\"add a/\", InvalidCommand.class);","lastModifiedDate":"2021-10-19"},{"lineNumber":68,"author":{"gitId":"tlyi"},"content":"        parseAndAssertCommandType(\"add a\", InvalidCommand.class);","lastModifiedDate":"2021-10-19"},{"lineNumber":69,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":70,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":71,"author":{"gitId":"tlyi"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":72,"author":{"gitId":"tlyi"},"content":"    void parseAddCommand_nameNotGiven_invalidCommand() {","lastModifiedDate":"2021-10-11"},{"lineNumber":73,"author":{"gitId":"tlyi"},"content":"        parseAndAssertCommandType(\"add f/ c/120\", InvalidCommand.class);","lastModifiedDate":"2021-10-11"},{"lineNumber":74,"author":{"gitId":"tlyi"},"content":"        parseAndAssertCommandType(\"add e/ c/120\", InvalidCommand.class);","lastModifiedDate":"2021-10-11"},{"lineNumber":75,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":76,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":77,"author":{"gitId":"tlyi"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":78,"author":{"gitId":"tlyi"},"content":"    void parseAddCommand_caloriesNotANumber_caloriesNotNumberMessage() {","lastModifiedDate":"2021-10-11"},{"lineNumber":79,"author":{"gitId":"tlyi"},"content":"        parseAndAssertIncorrectWithMessage(MESSAGE_ERROR_INVALID_CALORIES_INFO,","lastModifiedDate":"2021-10-11"},{"lineNumber":80,"author":{"gitId":"tlyi"},"content":"                \"add f/potato c/potato\", \"add e/hiit c/potato\");","lastModifiedDate":"2021-10-11"},{"lineNumber":81,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":82,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":83,"author":{"gitId":"tlyi"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":84,"author":{"gitId":"tlyi"},"content":"    void parseByeCommand_correctInput_byeCommand() {","lastModifiedDate":"2021-10-13"},{"lineNumber":85,"author":{"gitId":"tlyi"},"content":"        parseAndAssertCommandType(\"bye\", ByeCommand.class);","lastModifiedDate":"2021-10-13"},{"lineNumber":86,"author":{"gitId":"tlyi"},"content":"        parseAndAssertCommandType(\"ByE\", ByeCommand.class);","lastModifiedDate":"2021-10-13"},{"lineNumber":87,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":88,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":89,"author":{"gitId":"tlyi"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":90,"author":{"gitId":"tlyi"},"content":"    void parseCalculateBmiWithProfileCommand_correctInput_calculateBmiWithProfileCommand() {","lastModifiedDate":"2021-10-13"},{"lineNumber":91,"author":{"gitId":"tlyi"},"content":"        parseAndAssertCommandType(\"bmi\", CalculateBmiWithProfileCommand.class);","lastModifiedDate":"2021-10-13"},{"lineNumber":92,"author":{"gitId":"tlyi"},"content":"        parseAndAssertCommandType(\"BMI\", CalculateBmiWithProfileCommand.class);","lastModifiedDate":"2021-10-13"},{"lineNumber":93,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":94,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":95,"author":{"gitId":"tlyi"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":96,"author":{"gitId":"tlyi"},"content":"    void parseCalculateBmiCommand_correctInput_calculateBmiCommand() {","lastModifiedDate":"2021-10-13"},{"lineNumber":97,"author":{"gitId":"tlyi"},"content":"        parseAndAssertCommandType(\"bmi h/50 w/20\", CalculateBmiCommand.class);","lastModifiedDate":"2021-10-13"},{"lineNumber":98,"author":{"gitId":"tlyi"},"content":"        parseAndAssertCommandType(\"BMI w/20 h/50\", CalculateBmiCommand.class);","lastModifiedDate":"2021-10-13"},{"lineNumber":99,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":100,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":101,"author":{"gitId":"tlyi"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":102,"author":{"gitId":"tlyi"},"content":"    void parseCalculateBmiCommand_parametersNotGiven_invalidCommand() {","lastModifiedDate":"2021-10-13"},{"lineNumber":103,"author":{"gitId":"tlyi"},"content":"        parseAndAssertCommandType(\"bmi w/20\", InvalidCommand.class);","lastModifiedDate":"2021-10-13"},{"lineNumber":104,"author":{"gitId":"tlyi"},"content":"        parseAndAssertCommandType(\"bmi h/20\", InvalidCommand.class);","lastModifiedDate":"2021-10-13"},{"lineNumber":105,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":106,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":107,"author":{"gitId":"tlyi"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":108,"author":{"gitId":"tlyi"},"content":"    void parseCalculateBmiCommand_parametersInvalid_errorMessage() {","lastModifiedDate":"2021-10-14"},{"lineNumber":109,"author":{"gitId":"tlyi"},"content":"        parseAndAssertIncorrectWithMessage(","lastModifiedDate":"2021-10-19"},{"lineNumber":110,"author":{"gitId":"tlyi"},"content":"                String.format(MESSAGE_ERROR_NOT_A_NUMBER, \"height\"),","lastModifiedDate":"2021-10-19"},{"lineNumber":111,"author":{"gitId":"tlyi"},"content":"                \"BMI w/20 h/potato\");","lastModifiedDate":"2021-10-19"},{"lineNumber":112,"author":{"gitId":"tlyi"},"content":"        parseAndAssertIncorrectWithMessage(","lastModifiedDate":"2021-10-19"},{"lineNumber":113,"author":{"gitId":"tlyi"},"content":"                String.format(MESSAGE_ERROR_NOT_A_NUMBER, \"weight\"),","lastModifiedDate":"2021-10-19"},{"lineNumber":114,"author":{"gitId":"tlyi"},"content":"                \"BMI w/potato h/20\");","lastModifiedDate":"2021-10-19"},{"lineNumber":115,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":116,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":117,"author":{"gitId":"tlyi"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":118,"author":{"gitId":"tlyi"},"content":"    void parseDeleteCommand_itemTypeNotSpecified_invalidCommand() {","lastModifiedDate":"2021-10-19"},{"lineNumber":119,"author":{"gitId":"tlyi"},"content":"        parseAndAssertCommandType(\"delete\", InvalidCommand.class);","lastModifiedDate":"2021-10-19"},{"lineNumber":120,"author":{"gitId":"tlyi"},"content":"        parseAndAssertCommandType(\"delete a/\", InvalidCommand.class);","lastModifiedDate":"2021-10-19"},{"lineNumber":121,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":122,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":123,"author":{"gitId":"tlyi"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":124,"author":{"gitId":"tlyi"},"content":"    void parseDeleteCommand_itemNumInvalid_invalidCommand() {","lastModifiedDate":"2021-10-14"},{"lineNumber":125,"author":{"gitId":"tlyi"},"content":"        parseAndAssertCommandType(\"delete e/ \", InvalidCommand.class);","lastModifiedDate":"2021-10-14"},{"lineNumber":126,"author":{"gitId":"tlyi"},"content":"        parseAndAssertCommandType(\"delete f/\", InvalidCommand.class);","lastModifiedDate":"2021-10-14"},{"lineNumber":127,"author":{"gitId":"tlyi"},"content":"        parseAndAssertCommandType(\"delete f/potato\", InvalidCommand.class);","lastModifiedDate":"2021-10-14"},{"lineNumber":128,"author":{"gitId":"tlyi"},"content":"        parseAndAssertCommandType(\"delete e/potato\", InvalidCommand.class);","lastModifiedDate":"2021-10-14"},{"lineNumber":129,"author":{"gitId":"tlyi"},"content":"        parseAndAssertCommandType(\"delete fbank/ \", InvalidCommand.class);","lastModifiedDate":"2021-10-19"},{"lineNumber":130,"author":{"gitId":"tlyi"},"content":"        parseAndAssertCommandType(\"delete ebank/\", InvalidCommand.class);","lastModifiedDate":"2021-10-19"},{"lineNumber":131,"author":{"gitId":"tlyi"},"content":"        parseAndAssertCommandType(\"delete fbank/potato\", InvalidCommand.class);","lastModifiedDate":"2021-10-19"},{"lineNumber":132,"author":{"gitId":"tlyi"},"content":"        parseAndAssertCommandType(\"delete ebank/potato\", InvalidCommand.class);","lastModifiedDate":"2021-10-19"},{"lineNumber":133,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":134,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":135,"author":{"gitId":"tlyi"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":136,"author":{"gitId":"tlyi"},"content":"    void parseHelpCommand_correctInput_helpCommand() {","lastModifiedDate":"2021-10-14"},{"lineNumber":137,"author":{"gitId":"tlyi"},"content":"        parseAndAssertCommandType(\"help\", HelpCommand.class);","lastModifiedDate":"2021-10-14"},{"lineNumber":138,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":139,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":140,"author":{"gitId":"tlyi"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":141,"author":{"gitId":"tlyi"},"content":"    void parseOverviewCommand_correctInput_overviewCommand() {","lastModifiedDate":"2021-10-14"},{"lineNumber":142,"author":{"gitId":"tlyi"},"content":"        parseAndAssertCommandType(\"overview\", OverviewCommand.class);","lastModifiedDate":"2021-10-14"},{"lineNumber":143,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":144,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":145,"author":{"gitId":"tlyi"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":146,"author":{"gitId":"tlyi"},"content":"    void parseProfileUpdateCommand_correctInput_ProfileCreateCommand() {","lastModifiedDate":"2021-10-19"},{"lineNumber":147,"author":{"gitId":"weidak"},"content":"        parseAndAssertCommandType(\"profile n/hello w/50 h/80 g/50 a/23 s/F x/2\", ProfileUpdateCommand.class);","lastModifiedDate":"2021-10-20"},{"lineNumber":148,"author":{"gitId":"weidak"},"content":"        parseAndAssertCommandType(\"profile g/100 w/50 h/80 n/hi potato a/23 s/F x/2\", ProfileUpdateCommand.class);","lastModifiedDate":"2021-10-20"},{"lineNumber":149,"author":{"gitId":"weidak"},"content":"        parseAndAssertCommandType(\"profile h/50 n/hello potato g/20 w/20 a/23 s/F x/2\", ProfileUpdateCommand.class);","lastModifiedDate":"2021-10-20"},{"lineNumber":150,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":151,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":152,"author":{"gitId":"tlyi"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":153,"author":{"gitId":"tlyi"},"content":"    void parseProfileCreateCommand_parametersNotGiven_invalidCommand() {","lastModifiedDate":"2021-10-19"},{"lineNumber":154,"author":{"gitId":"tlyi"},"content":"        parseAndAssertCommandType(\"profile n/ \", InvalidCommand.class);","lastModifiedDate":"2021-10-19"},{"lineNumber":155,"author":{"gitId":"tlyi"},"content":"        parseAndAssertCommandType(\"profile h/\", InvalidCommand.class);","lastModifiedDate":"2021-10-19"},{"lineNumber":156,"author":{"gitId":"tlyi"},"content":"        parseAndAssertCommandType(\"profile w/\", InvalidCommand.class);","lastModifiedDate":"2021-10-19"},{"lineNumber":157,"author":{"gitId":"tlyi"},"content":"        parseAndAssertCommandType(\"profile n/ h/\", InvalidCommand.class);","lastModifiedDate":"2021-10-19"},{"lineNumber":158,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":159,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":160,"author":{"gitId":"tlyi"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":161,"author":{"gitId":"tlyi"},"content":"    void parseProfileCreateCommand_parametersInvalid_tooManyDelimitersMessage() {","lastModifiedDate":"2021-10-19"},{"lineNumber":162,"author":{"gitId":"tlyi"},"content":"        parseAndAssertIncorrectWithMessage(MESSAGE_ERROR_TOO_MANY_DELIMITERS,\"profile n/hi n/hello\");","lastModifiedDate":"2021-10-19"},{"lineNumber":163,"author":{"gitId":"tlyi"},"content":"        parseAndAssertIncorrectWithMessage(MESSAGE_ERROR_TOO_MANY_DELIMITERS,\"profile n/h/i n/hello\");","lastModifiedDate":"2021-10-19"},{"lineNumber":164,"author":{"gitId":"tlyi"},"content":"        parseAndAssertIncorrectWithMessage(MESSAGE_ERROR_TOO_MANY_DELIMITERS,\"profile n/h/i z/hello\");","lastModifiedDate":"2021-10-19"},{"lineNumber":165,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":166,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":167,"author":{"gitId":"tlyi"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":168,"author":{"gitId":"tlyi"},"content":"    void parseSetGoalCommand_parametersNotGivenOrInvalid_notANumberMessage() {","lastModifiedDate":"2021-10-14"},{"lineNumber":169,"author":{"gitId":"tlyi"},"content":"        parseAndAssertIncorrectWithMessage(String.format(MESSAGE_ERROR_NOT_A_NUMBER, \"goal\"),","lastModifiedDate":"2021-10-19"},{"lineNumber":170,"author":{"gitId":"tlyi"},"content":"                \"goal\", \"goal nope\");","lastModifiedDate":"2021-10-19"},{"lineNumber":171,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":172,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":173,"author":{"gitId":"tlyi"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":174,"author":{"gitId":"tlyi"},"content":"    void parseViewCommand_correctInput_viewCommand() {","lastModifiedDate":"2021-10-14"},{"lineNumber":175,"author":{"gitId":"tlyi"},"content":"        parseAndAssertCommandType(\"view\", ViewCommand.class);","lastModifiedDate":"2021-10-14"},{"lineNumber":176,"author":{"gitId":"tlyi"},"content":"        parseAndAssertCommandType(\"view e/\", ViewExerciseListCommand.class);","lastModifiedDate":"2021-10-14"},{"lineNumber":177,"author":{"gitId":"tlyi"},"content":"        parseAndAssertCommandType(\"view f/\", ViewFoodListCommand.class);","lastModifiedDate":"2021-10-14"},{"lineNumber":178,"author":{"gitId":"tlyi"},"content":"        parseAndAssertCommandType(\"view fbank/\", ViewFoodBankCommand.class);","lastModifiedDate":"2021-10-19"},{"lineNumber":179,"author":{"gitId":"tlyi"},"content":"        parseAndAssertCommandType(\"view ebank/\", ViewExerciseBankCommand.class);","lastModifiedDate":"2021-10-19"},{"lineNumber":180,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":181,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":182,"author":{"gitId":"tlyi"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":183,"author":{"gitId":"tlyi"},"content":"    void parseViewCommand_itemTypeNotSpecified_invalidCommand() {","lastModifiedDate":"2021-10-19"},{"lineNumber":184,"author":{"gitId":"tlyi"},"content":"        parseAndAssertCommandType(\"view a/\", InvalidCommand.class);","lastModifiedDate":"2021-10-19"},{"lineNumber":185,"author":{"gitId":"tlyi"},"content":"        parseAndAssertCommandType(\"view a\", InvalidCommand.class);","lastModifiedDate":"2021-10-19"},{"lineNumber":186,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":187,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":188,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":189,"author":{"gitId":"tlyi"},"content":"    /*","lastModifiedDate":"2021-10-11"},{"lineNumber":190,"author":{"gitId":"tlyi"},"content":"     * Utility methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-11"},{"lineNumber":191,"author":{"gitId":"tlyi"},"content":"     * Adapted from AddressBook-Level2","lastModifiedDate":"2021-10-11"},{"lineNumber":192,"author":{"gitId":"tlyi"},"content":"     * https://github.com/se-edu/addressbook-level2/blob/master/test/java/seedu/addressbook/parser/ParserTest.java","lastModifiedDate":"2021-10-11"},{"lineNumber":193,"author":{"gitId":"tlyi"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":194,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":195,"author":{"gitId":"tlyi"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":196,"author":{"gitId":"tlyi"},"content":"     * Asserts that parsing the given inputs will return IncorrectCommand with the given feedback message.","lastModifiedDate":"2021-10-11"},{"lineNumber":197,"author":{"gitId":"tlyi"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":198,"author":{"gitId":"tlyi"},"content":"    private void parseAndAssertIncorrectWithMessage(String errorMessage, String... inputs) {","lastModifiedDate":"2021-10-11"},{"lineNumber":199,"author":{"gitId":"tlyi"},"content":"        for (String input : inputs) {","lastModifiedDate":"2021-10-11"},{"lineNumber":200,"author":{"gitId":"tlyi"},"content":"            final InvalidCommand result \u003d parseAndAssertCommandType(input, InvalidCommand.class);","lastModifiedDate":"2021-10-11"},{"lineNumber":201,"author":{"gitId":"tlyi"},"content":"            assertEquals(result.errorMessage, errorMessage);","lastModifiedDate":"2021-10-11"},{"lineNumber":202,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":203,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":204,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":205,"author":{"gitId":"tlyi"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":206,"author":{"gitId":"tlyi"},"content":"     * Parses input and asserts the class/type of the returned command object.","lastModifiedDate":"2021-10-11"},{"lineNumber":207,"author":{"gitId":"tlyi"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":208,"author":{"gitId":"tlyi"},"content":"     * @param input                to be parsed","lastModifiedDate":"2021-10-11"},{"lineNumber":209,"author":{"gitId":"tlyi"},"content":"     * @param expectedCommandClass expected class of returned command","lastModifiedDate":"2021-10-11"},{"lineNumber":210,"author":{"gitId":"tlyi"},"content":"     * @return the parsed command object","lastModifiedDate":"2021-10-11"},{"lineNumber":211,"author":{"gitId":"tlyi"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":212,"author":{"gitId":"tlyi"},"content":"    private \u003cT extends Command\u003e T parseAndAssertCommandType(String input, Class\u003cT\u003e expectedCommandClass) {","lastModifiedDate":"2021-10-11"},{"lineNumber":213,"author":{"gitId":"tlyi"},"content":"        final Command result \u003d parser.parseCommand(input);","lastModifiedDate":"2021-10-11"},{"lineNumber":214,"author":{"gitId":"tlyi"},"content":"        assertTrue(result.getClass().isAssignableFrom(expectedCommandClass));","lastModifiedDate":"2021-10-11"},{"lineNumber":215,"author":{"gitId":"tlyi"},"content":"        return (T) result;","lastModifiedDate":"2021-10-11"},{"lineNumber":216,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":217,"author":{"gitId":"tlyi"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"weidak":3,"tryyang2001":6,"tlyi":208}},{"path":"src/test/java/seedu/duke/profile/ProfileTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"weidak"},"content":"package seedu.duke.profile;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"weidak"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"weidak"},"content":"import seedu.duke.profile.exceptions.InvalidCharacteristicException;","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"weidak"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"weidak"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"weidak"},"content":"class ProfileTest {","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"weidak"},"content":"    //TODO Update JUnit for each individual attribute + update profile tests","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"weidak"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"weidak"},"content":"    void calculateBmi_twoDoubleInputs_expectDoubleReturned() throws InvalidCharacteristicException {","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"weidak"},"content":"        final double height \u003d 171.2;","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"weidak"},"content":"        final double weight \u003d 59.8;","lastModifiedDate":"2021-10-18"},{"lineNumber":17,"author":{"gitId":"weidak"},"content":"        assertEquals(20.4, Profile.calculateBmi(height, weight));","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":20,"author":{"gitId":"weidak"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"weidak"},"content":"    void calculateBmi_negativeHeightInput_expectInvalidCharacteristicException() {","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"weidak"},"content":"        final double height \u003d -171.2;","lastModifiedDate":"2021-10-18"},{"lineNumber":23,"author":{"gitId":"weidak"},"content":"        final double weight \u003d 59.8;","lastModifiedDate":"2021-10-18"},{"lineNumber":24,"author":{"gitId":"weidak"},"content":"        assertThrows(InvalidCharacteristicException.class,","lastModifiedDate":"2021-10-18"},{"lineNumber":25,"author":{"gitId":"weidak"},"content":"            () -\u003e Profile.calculateBmi(height, weight));","lastModifiedDate":"2021-10-18"},{"lineNumber":26,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":27,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":28,"author":{"gitId":"weidak"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":29,"author":{"gitId":"weidak"},"content":"    void calculateBmi_negativeWeightInput_expectInvalidCharacteristicException() {","lastModifiedDate":"2021-10-18"},{"lineNumber":30,"author":{"gitId":"weidak"},"content":"        final double height \u003d 171.2;","lastModifiedDate":"2021-10-18"},{"lineNumber":31,"author":{"gitId":"weidak"},"content":"        final double weight \u003d -59.8;","lastModifiedDate":"2021-10-18"},{"lineNumber":32,"author":{"gitId":"weidak"},"content":"        assertThrows(InvalidCharacteristicException.class,","lastModifiedDate":"2021-10-09"},{"lineNumber":33,"author":{"gitId":"weidak"},"content":"            () -\u003e Profile.calculateBmi(height, weight));","lastModifiedDate":"2021-10-09"},{"lineNumber":34,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":35,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":36,"author":{"gitId":"weidak"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":37,"author":{"gitId":"weidak"},"content":"    void retrieveBmiStatus_validBmiInputs_expectCorrectStatuses() {","lastModifiedDate":"2021-10-18"},{"lineNumber":38,"author":{"gitId":"weidak"},"content":"        final String expectedStatusUnderweight \u003d \"Underweight\";","lastModifiedDate":"2021-10-18"},{"lineNumber":39,"author":{"gitId":"weidak"},"content":"        final String expectedStatusHealthy \u003d \"Healthy\";","lastModifiedDate":"2021-10-18"},{"lineNumber":40,"author":{"gitId":"weidak"},"content":"        final String expectedStatusOverweight \u003d \"Overweight\";","lastModifiedDate":"2021-10-18"},{"lineNumber":41,"author":{"gitId":"weidak"},"content":"        final String expectedStatusObese \u003d \"Obese\";","lastModifiedDate":"2021-10-18"},{"lineNumber":42,"author":{"gitId":"weidak"},"content":"        final double bmiUnderweight \u003d 10.5;","lastModifiedDate":"2021-10-18"},{"lineNumber":43,"author":{"gitId":"weidak"},"content":"        final double bmiHealthy \u003d 22.5;","lastModifiedDate":"2021-10-18"},{"lineNumber":44,"author":{"gitId":"weidak"},"content":"        final double bmiOverweight \u003d 25.5;","lastModifiedDate":"2021-10-18"},{"lineNumber":45,"author":{"gitId":"weidak"},"content":"        final double bmiObese \u003d 30.0;","lastModifiedDate":"2021-10-18"},{"lineNumber":46,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":47,"author":{"gitId":"weidak"},"content":"        assertEquals(expectedStatusUnderweight, Profile.retrieveBmiStatus(bmiUnderweight));","lastModifiedDate":"2021-10-18"},{"lineNumber":48,"author":{"gitId":"weidak"},"content":"        assertEquals(expectedStatusHealthy, Profile.retrieveBmiStatus(bmiHealthy));","lastModifiedDate":"2021-10-18"},{"lineNumber":49,"author":{"gitId":"weidak"},"content":"        assertEquals(expectedStatusOverweight, Profile.retrieveBmiStatus(bmiOverweight));","lastModifiedDate":"2021-10-18"},{"lineNumber":50,"author":{"gitId":"weidak"},"content":"        assertEquals(expectedStatusObese, Profile.retrieveBmiStatus(bmiObese));","lastModifiedDate":"2021-10-18"},{"lineNumber":51,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":52,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":53,"author":{"gitId":"weidak"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":54,"author":{"gitId":"weidak"},"content":"    void getBmrValuesMen_validInputs_expectCorrectBmrValues() throws InvalidCharacteristicException {","lastModifiedDate":"2021-10-18"},{"lineNumber":55,"author":{"gitId":"weidak"},"content":"        Profile p \u003d new Profile();","lastModifiedDate":"2021-10-18"},{"lineNumber":56,"author":{"gitId":"weidak"},"content":"        final String name \u003d \"John\";","lastModifiedDate":"2021-10-18"},{"lineNumber":57,"author":{"gitId":"weidak"},"content":"        final double height \u003d 170.1;","lastModifiedDate":"2021-10-18"},{"lineNumber":58,"author":{"gitId":"weidak"},"content":"        final double weight \u003d 60;","lastModifiedDate":"2021-10-18"},{"lineNumber":59,"author":{"gitId":"weidak"},"content":"        final int calorieGoal \u003d 300;","lastModifiedDate":"2021-10-18"},{"lineNumber":60,"author":{"gitId":"weidak"},"content":"        final char gender \u003d \u0027M\u0027;","lastModifiedDate":"2021-10-18"},{"lineNumber":61,"author":{"gitId":"weidak"},"content":"        final int age \u003d 22;","lastModifiedDate":"2021-10-18"},{"lineNumber":62,"author":{"gitId":"weidak"},"content":"        final int activityFactor \u003d 1;","lastModifiedDate":"2021-10-18"},{"lineNumber":63,"author":{"gitId":"weidak"},"content":"        final double baseBmr \u003d 1583.5979;","lastModifiedDate":"2021-10-18"},{"lineNumber":64,"author":{"gitId":"weidak"},"content":"        final int bmrSedentary \u003d (int) Math.round(baseBmr * 1.2);","lastModifiedDate":"2021-10-18"},{"lineNumber":65,"author":{"gitId":"weidak"},"content":"        final int bmrLight \u003d (int) Math.round(baseBmr * 1.375);","lastModifiedDate":"2021-10-18"},{"lineNumber":66,"author":{"gitId":"weidak"},"content":"        final int bmrModerate \u003d (int) Math.round(baseBmr * 1.55);","lastModifiedDate":"2021-10-18"},{"lineNumber":67,"author":{"gitId":"weidak"},"content":"        final int bmrIntense \u003d (int) Math.round(baseBmr * 1.725);","lastModifiedDate":"2021-10-18"},{"lineNumber":68,"author":{"gitId":"weidak"},"content":"        final int bmrExtreme \u003d (int) Math.round(baseBmr * 1.9);","lastModifiedDate":"2021-10-18"},{"lineNumber":69,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":70,"author":{"gitId":"weidak"},"content":"        p.setProfileWithRawInputs(name, height, weight, gender, age, calorieGoal, activityFactor);","lastModifiedDate":"2021-10-20"},{"lineNumber":71,"author":{"gitId":"weidak"},"content":"        assertEquals(bmrSedentary, p.getBmr());","lastModifiedDate":"2021-10-18"},{"lineNumber":72,"author":{"gitId":"weidak"},"content":"        p.getProfileActivityFactor().setActivityFactor(2);","lastModifiedDate":"2021-10-20"},{"lineNumber":73,"author":{"gitId":"weidak"},"content":"        assertEquals(bmrLight, p.getBmr());","lastModifiedDate":"2021-10-18"},{"lineNumber":74,"author":{"gitId":"weidak"},"content":"        p.getProfileActivityFactor().setActivityFactor(3);","lastModifiedDate":"2021-10-20"},{"lineNumber":75,"author":{"gitId":"weidak"},"content":"        assertEquals(bmrModerate, p.getBmr());","lastModifiedDate":"2021-10-18"},{"lineNumber":76,"author":{"gitId":"weidak"},"content":"        p.getProfileActivityFactor().setActivityFactor(4);","lastModifiedDate":"2021-10-20"},{"lineNumber":77,"author":{"gitId":"weidak"},"content":"        assertEquals(bmrIntense, p.getBmr());","lastModifiedDate":"2021-10-18"},{"lineNumber":78,"author":{"gitId":"weidak"},"content":"        p.getProfileActivityFactor().setActivityFactor(5);","lastModifiedDate":"2021-10-20"},{"lineNumber":79,"author":{"gitId":"weidak"},"content":"        assertEquals(bmrExtreme, p.getBmr());","lastModifiedDate":"2021-10-18"},{"lineNumber":80,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":81,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":82,"author":{"gitId":"weidak"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":83,"author":{"gitId":"weidak"},"content":"    void getBmrValuesFemale_validInputs_expectCorrectBmrValues() throws InvalidCharacteristicException {","lastModifiedDate":"2021-10-18"},{"lineNumber":84,"author":{"gitId":"weidak"},"content":"        Profile p \u003d new Profile();","lastModifiedDate":"2021-10-18"},{"lineNumber":85,"author":{"gitId":"weidak"},"content":"        final String name \u003d \"Mary\";","lastModifiedDate":"2021-10-18"},{"lineNumber":86,"author":{"gitId":"weidak"},"content":"        final double height \u003d 160.1;","lastModifiedDate":"2021-10-18"},{"lineNumber":87,"author":{"gitId":"weidak"},"content":"        final double weight \u003d 45.2;","lastModifiedDate":"2021-10-18"},{"lineNumber":88,"author":{"gitId":"weidak"},"content":"        final int calorieGoal \u003d 300;","lastModifiedDate":"2021-10-18"},{"lineNumber":89,"author":{"gitId":"weidak"},"content":"        final char gender \u003d \u0027F\u0027;","lastModifiedDate":"2021-10-18"},{"lineNumber":90,"author":{"gitId":"weidak"},"content":"        final int age \u003d 20;","lastModifiedDate":"2021-10-18"},{"lineNumber":91,"author":{"gitId":"weidak"},"content":"        final int activityFactor \u003d 1;","lastModifiedDate":"2021-10-18"},{"lineNumber":92,"author":{"gitId":"weidak"},"content":"        final double baseBmr \u003d 1274.9472;","lastModifiedDate":"2021-10-18"},{"lineNumber":93,"author":{"gitId":"weidak"},"content":"        final int bmrSedentary \u003d (int) Math.round(baseBmr * 1.2);","lastModifiedDate":"2021-10-18"},{"lineNumber":94,"author":{"gitId":"weidak"},"content":"        final int bmrLight \u003d (int) Math.round(baseBmr * 1.375);","lastModifiedDate":"2021-10-18"},{"lineNumber":95,"author":{"gitId":"weidak"},"content":"        final int bmrModerate \u003d (int) Math.round(baseBmr * 1.55);","lastModifiedDate":"2021-10-18"},{"lineNumber":96,"author":{"gitId":"weidak"},"content":"        final int bmrIntense \u003d (int) Math.round(baseBmr * 1.725);","lastModifiedDate":"2021-10-18"},{"lineNumber":97,"author":{"gitId":"weidak"},"content":"        final int bmrExtreme \u003d (int) Math.round(baseBmr * 1.9);","lastModifiedDate":"2021-10-18"},{"lineNumber":98,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":99,"author":{"gitId":"weidak"},"content":"        p.setProfileWithRawInputs(name, height, weight, gender, age, calorieGoal, activityFactor);","lastModifiedDate":"2021-10-20"},{"lineNumber":100,"author":{"gitId":"weidak"},"content":"        assertEquals(bmrSedentary, p.getBmr());","lastModifiedDate":"2021-10-18"},{"lineNumber":101,"author":{"gitId":"weidak"},"content":"        p.getProfileActivityFactor().setActivityFactor(2);","lastModifiedDate":"2021-10-20"},{"lineNumber":102,"author":{"gitId":"weidak"},"content":"        assertEquals(bmrLight, p.getBmr());","lastModifiedDate":"2021-10-18"},{"lineNumber":103,"author":{"gitId":"weidak"},"content":"        p.getProfileActivityFactor().setActivityFactor(3);","lastModifiedDate":"2021-10-20"},{"lineNumber":104,"author":{"gitId":"weidak"},"content":"        assertEquals(bmrModerate, p.getBmr());","lastModifiedDate":"2021-10-18"},{"lineNumber":105,"author":{"gitId":"weidak"},"content":"        p.getProfileActivityFactor().setActivityFactor(4);","lastModifiedDate":"2021-10-20"},{"lineNumber":106,"author":{"gitId":"weidak"},"content":"        assertEquals(bmrIntense, p.getBmr());","lastModifiedDate":"2021-10-18"},{"lineNumber":107,"author":{"gitId":"weidak"},"content":"        p.getProfileActivityFactor().setActivityFactor(5);","lastModifiedDate":"2021-10-20"},{"lineNumber":108,"author":{"gitId":"weidak"},"content":"        assertEquals(bmrExtreme, p.getBmr());","lastModifiedDate":"2021-10-18"},{"lineNumber":109,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":110,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":111,"author":{"gitId":"weidak"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":112,"author":{"gitId":"weidak"},"content":"    void toFileTextString_validInputs_expectCorrectString() throws InvalidCharacteristicException {","lastModifiedDate":"2021-10-18"},{"lineNumber":113,"author":{"gitId":"weidak"},"content":"        Profile p \u003d new Profile();","lastModifiedDate":"2021-10-18"},{"lineNumber":114,"author":{"gitId":"weidak"},"content":"        String name \u003d \"John\";","lastModifiedDate":"2021-10-18"},{"lineNumber":115,"author":{"gitId":"weidak"},"content":"        double height \u003d 170.1;","lastModifiedDate":"2021-10-18"},{"lineNumber":116,"author":{"gitId":"weidak"},"content":"        double weight \u003d 60;","lastModifiedDate":"2021-10-18"},{"lineNumber":117,"author":{"gitId":"weidak"},"content":"        int calorieGoal \u003d 300;","lastModifiedDate":"2021-10-18"},{"lineNumber":118,"author":{"gitId":"weidak"},"content":"        char gender \u003d \u0027M\u0027;","lastModifiedDate":"2021-10-18"},{"lineNumber":119,"author":{"gitId":"weidak"},"content":"        int age \u003d 22;","lastModifiedDate":"2021-10-18"},{"lineNumber":120,"author":{"gitId":"weidak"},"content":"        int activityFactor \u003d 1;","lastModifiedDate":"2021-10-18"},{"lineNumber":121,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":122,"author":{"gitId":"weidak"},"content":"        p.setProfileWithRawInputs(name, height, weight, gender, age, calorieGoal, activityFactor);","lastModifiedDate":"2021-10-20"},{"lineNumber":123,"author":{"gitId":"weidak"},"content":"        String correctOutput \u003d \"John|170.1|60.0|M|22|300|1\";","lastModifiedDate":"2021-10-20"},{"lineNumber":124,"author":{"gitId":"weidak"},"content":"        System.out.println(p.toFileTextString());","lastModifiedDate":"2021-10-20"},{"lineNumber":125,"author":{"gitId":"weidak"},"content":"        assertEquals(correctOutput, p.toFileTextString());","lastModifiedDate":"2021-10-18"},{"lineNumber":126,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":127,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":128,"author":{"gitId":"weidak"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"weidak":128}},{"path":"src/test/java/seedu/duke/ui/StatisticsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tttyyzzz"},"content":"package seedu.duke.ui;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"tttyyzzz"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"tttyyzzz"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"tttyyzzz"},"content":"class StatisticsTest {","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"tttyyzzz"},"content":"    Statistics stats \u003d new Statistics();","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"tttyyzzz"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"tttyyzzz"},"content":"    void printCalorieResult_netCaloriesAndCalorieGoal_messages() {","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"tttyyzzz"},"content":"        int caloriesGoal \u003d 5000;","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"tttyyzzz"},"content":"        int foodCalories \u003d 3000;","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"tttyyzzz"},"content":"        int exerciseCalories \u003d 2000;","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"tttyyzzz"},"content":"        int netCalories \u003d foodCalories - exerciseCalories;","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"tttyyzzz"},"content":"        String message \u003d stats.printCaloriesMessage(netCalories, caloriesGoal);","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"tttyyzzz"},"content":"        assertEquals(\"You are 4000 cal away from your goal\", message);","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"tttyyzzz"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"tttyyzzz"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"tttyyzzz"},"content":"    void printCalories_foodCaloriesExerciseCaloriesAndCalorieGoal_messageArray() {","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"tttyyzzz"},"content":"        int caloriesGoal \u003d 5000;","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"tttyyzzz"},"content":"        int foodCalories \u003d 3000;","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"tttyyzzz"},"content":"        int exerciseCalories \u003d 2000;","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"tttyyzzz"},"content":"        String expectedResult \u003d \"You are 6000 cal away from your goal\";","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"tttyyzzz"},"content":"        assertEquals(expectedResult, stats.getCaloriesReport(foodCalories, exerciseCalories, caloriesGoal)[4]);","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"tttyyzzz"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"tttyyzzz"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"tttyyzzz":32}}]
