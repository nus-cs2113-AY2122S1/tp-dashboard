[{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"tryyang2001"},"content":"    mainClassName \u003d \"seedu.duke.Main\"","lastModifiedDate":"2021-10-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.23\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"tlyi"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2021-10-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"tryyang2001":1,"-":45,"tlyi":1}},{"path":"config/checkstyle/checkstyle.xml","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\"?\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"\u003c!DOCTYPE module PUBLIC","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"        \"-//Checkstyle//DTD Checkstyle Configuration 1.3//EN\"","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"        \"https://checkstyle.org/dtds/configuration_1_3.dtd\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c!--","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    Checkstyle configuration that checks the Google coding conventions from Google Java Style","lastModifiedDate":"2020-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    that can be found at https://google.github.io/styleguide/javaguide.html","lastModifiedDate":"2020-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    Checkstyle is very configurable. Be sure to read the documentation at","lastModifiedDate":"2020-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    http://checkstyle.sf.net (or in your downloaded distribution).","lastModifiedDate":"2020-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    To completely disable a check, just comment it out or delete it from the file.","lastModifiedDate":"2020-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    Authors: Max Vetrenko, Ruslan Diachenko, Roman Ivanov.","lastModifiedDate":"2020-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" --\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"\u003cmodule name \u003d \"Checker\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003cproperty name\u003d\"charset\" value\u003d\"UTF-8\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003cproperty name\u003d\"severity\" value\u003d\"error\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    \u003cproperty name\u003d\"fileExtensions\" value\u003d\"java, properties, xml\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    \u003c!-- Excludes all \u0027module-info.java\u0027 files              --\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    \u003c!-- See https://checkstyle.org/config_filefilters.html --\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"BeforeExecutionExclusionFileFilter\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        \u003cproperty name\u003d\"fileNamePattern\" value\u003d\"module\\-info\\.java$\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    \u003c!-- Checks for whitespace                               --\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    \u003c!-- See http://checkstyle.sf.net/config_whitespace.html --\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"FileTabCharacter\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        \u003cproperty name\u003d\"eachLine\" value\u003d\"true\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"TreeWalker\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"OuterTypeFilename\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"IllegalTokenText\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"tokens\" value\u003d\"STRING_LITERAL, CHAR_LITERAL\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"format\"","lastModifiedDate":"2020-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                      value\u003d\"\\\\u00(09|0(a|A)|0(c|C)|0(d|D)|22|27|5(C|c))|\\\\(0(10|11|12|14|15|42|47)|134)\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"message\"","lastModifiedDate":"2020-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                      value\u003d\"Consider using special escape sequence instead of octal value or Unicode escaped value.\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"AvoidEscapedUnicodeCharacters\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"allowEscapesForControlCharacters\" value\u003d\"true\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"allowByTailComment\" value\u003d\"true\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"allowNonPrintableEscapes\" value\u003d\"true\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"LineLength\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"max\" value\u003d\"120\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"ignorePattern\" value\u003d\"^package.*|^import.*|a href|href|http://|https://|ftp://\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"AvoidStarImport\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"OneTopLevelClass\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"NoLineWrap\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"EmptyBlock\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"option\" value\u003d\"TEXT\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"tokens\"","lastModifiedDate":"2020-05-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                      value\u003d\"LITERAL_TRY, LITERAL_FINALLY, LITERAL_IF, LITERAL_ELSE, LITERAL_SWITCH\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"NeedBraces\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"LeftCurly\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"RightCurly\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"id\" value\u003d\"RightCurlySame\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"tokens\"","lastModifiedDate":"2020-05-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                      value\u003d\"LITERAL_TRY, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_IF, LITERAL_ELSE,","lastModifiedDate":"2020-05-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                    LITERAL_DO\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"RightCurly\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"id\" value\u003d\"RightCurlyAlone\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"option\" value\u003d\"alone\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"tokens\"","lastModifiedDate":"2020-05-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                      value\u003d\"CLASS_DEF, METHOD_DEF, CTOR_DEF, LITERAL_FOR, LITERAL_WHILE, STATIC_INIT,","lastModifiedDate":"2020-05-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                    INSTANCE_INIT\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"WhitespaceAround\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"allowEmptyConstructors\" value\u003d\"true\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"allowEmptyLambdas\" value\u003d\"true\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"allowEmptyMethods\" value\u003d\"true\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"allowEmptyTypes\" value\u003d\"true\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"allowEmptyLoops\" value\u003d\"true\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            \u003cmessage key\u003d\"ws.notFollowed\"","lastModifiedDate":"2020-05-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                     value\u003d\"WhitespaceAround: \u0027\u0027{0}\u0027\u0027 is not followed by whitespace. Empty blocks may only be represented as \u0027{}\u0027 when not part of a multi-block statement (4.1.3)\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            \u003cmessage key\u003d\"ws.notPreceded\"","lastModifiedDate":"2020-05-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                     value\u003d\"WhitespaceAround: \u0027\u0027{0}\u0027\u0027 is not preceded with whitespace.\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"OneStatementPerLine\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"MultipleVariableDeclarations\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"ArrayTypeStyle\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"MissingSwitchDefault\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"FallThrough\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"UpperEll\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"ModifierOrder\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"EmptyLineSeparator\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"allowNoEmptyLineBetweenFields\" value\u003d\"true\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"SeparatorWrap\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"id\" value\u003d\"SeparatorWrapDot\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"tokens\" value\u003d\"DOT\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"option\" value\u003d\"nl\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"SeparatorWrap\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"id\" value\u003d\"SeparatorWrapComma\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"tokens\" value\u003d\"COMMA\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"option\" value\u003d\"EOL\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"SeparatorWrap\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            \u003c!-- ELLIPSIS is EOL until https://github.com/google/styleguide/issues/258 --\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"id\" value\u003d\"SeparatorWrapEllipsis\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"tokens\" value\u003d\"ELLIPSIS\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"option\" value\u003d\"EOL\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"SeparatorWrap\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            \u003c!-- ARRAY_DECLARATOR is EOL until https://github.com/google/styleguide/issues/259 --\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"id\" value\u003d\"SeparatorWrapArrayDeclarator\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"tokens\" value\u003d\"ARRAY_DECLARATOR\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"option\" value\u003d\"EOL\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"SeparatorWrap\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"id\" value\u003d\"SeparatorWrapMethodRef\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"tokens\" value\u003d\"METHOD_REF\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"option\" value\u003d\"nl\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"PackageName\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"format\" value\u003d\"^[a-z]+(\\.[a-z][a-z0-9]*)*$\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            \u003cmessage key\u003d\"name.invalidPattern\"","lastModifiedDate":"2020-05-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"                     value\u003d\"Package name \u0027\u0027{0}\u0027\u0027 must match pattern \u0027\u0027{1}\u0027\u0027.\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"TypeName\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            \u003cmessage key\u003d\"name.invalidPattern\"","lastModifiedDate":"2020-05-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"                     value\u003d\"Type name \u0027\u0027{0}\u0027\u0027 must match pattern \u0027\u0027{1}\u0027\u0027.\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"MemberName\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"format\" value\u003d\"^[a-z][a-z0-9][a-zA-Z0-9]*$\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            \u003cmessage key\u003d\"name.invalidPattern\"","lastModifiedDate":"2020-05-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"                     value\u003d\"Member name \u0027\u0027{0}\u0027\u0027 must match pattern \u0027\u0027{1}\u0027\u0027.\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"ParameterName\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"format\" value\u003d\"^[a-z]([a-z0-9][a-zA-Z0-9]*)?$\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            \u003cmessage key\u003d\"name.invalidPattern\"","lastModifiedDate":"2020-05-24"},{"lineNumber":138,"author":{"gitId":"-"},"content":"                     value\u003d\"Parameter name \u0027\u0027{0}\u0027\u0027 must match pattern \u0027\u0027{1}\u0027\u0027.\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"LambdaParameterName\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"format\" value\u003d\"^[a-z]([a-z0-9][a-zA-Z0-9]*)?$\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            \u003cmessage key\u003d\"name.invalidPattern\"","lastModifiedDate":"2020-05-24"},{"lineNumber":143,"author":{"gitId":"-"},"content":"                     value\u003d\"Lambda parameter name \u0027\u0027{0}\u0027\u0027 must match pattern \u0027\u0027{1}\u0027\u0027.\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"CatchParameterName\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"format\" value\u003d\"^[a-z]([a-z0-9][a-zA-Z0-9]*)?$\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            \u003cmessage key\u003d\"name.invalidPattern\"","lastModifiedDate":"2020-05-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"                     value\u003d\"Catch parameter name \u0027\u0027{0}\u0027\u0027 must match pattern \u0027\u0027{1}\u0027\u0027.\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"LocalVariableName\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"tokens\" value\u003d\"VARIABLE_DEF\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"format\" value\u003d\"^[a-z]([a-z0-9][a-zA-Z0-9]*)?$\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            \u003cmessage key\u003d\"name.invalidPattern\"","lastModifiedDate":"2020-05-24"},{"lineNumber":154,"author":{"gitId":"-"},"content":"                     value\u003d\"Local variable name \u0027\u0027{0}\u0027\u0027 must match pattern \u0027\u0027{1}\u0027\u0027.\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"ClassTypeParameterName\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"format\" value\u003d\"(^[A-Z][0-9]?)$|([A-Z][a-zA-Z0-9]*[T]$)\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            \u003cmessage key\u003d\"name.invalidPattern\"","lastModifiedDate":"2020-05-24"},{"lineNumber":159,"author":{"gitId":"-"},"content":"                     value\u003d\"Class type name \u0027\u0027{0}\u0027\u0027 must match pattern \u0027\u0027{1}\u0027\u0027.\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"MethodTypeParameterName\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"format\" value\u003d\"(^[A-Z][0-9]?)$|([A-Z][a-zA-Z0-9]*[T]$)\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            \u003cmessage key\u003d\"name.invalidPattern\"","lastModifiedDate":"2020-05-24"},{"lineNumber":164,"author":{"gitId":"-"},"content":"                     value\u003d\"Method type name \u0027\u0027{0}\u0027\u0027 must match pattern \u0027\u0027{1}\u0027\u0027.\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"InterfaceTypeParameterName\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"format\" value\u003d\"(^[A-Z][0-9]?)$|([A-Z][a-zA-Z0-9]*[T]$)\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            \u003cmessage key\u003d\"name.invalidPattern\"","lastModifiedDate":"2020-05-24"},{"lineNumber":169,"author":{"gitId":"-"},"content":"                     value\u003d\"Interface type name \u0027\u0027{0}\u0027\u0027 must match pattern \u0027\u0027{1}\u0027\u0027.\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"NoFinalizer\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"GenericWhitespace\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":173,"author":{"gitId":"-"},"content":"            \u003cmessage key\u003d\"ws.followed\"","lastModifiedDate":"2020-05-24"},{"lineNumber":174,"author":{"gitId":"-"},"content":"                     value\u003d\"GenericWhitespace \u0027\u0027{0}\u0027\u0027 is followed by whitespace.\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":175,"author":{"gitId":"-"},"content":"            \u003cmessage key\u003d\"ws.preceded\"","lastModifiedDate":"2020-05-24"},{"lineNumber":176,"author":{"gitId":"-"},"content":"                     value\u003d\"GenericWhitespace \u0027\u0027{0}\u0027\u0027 is preceded with whitespace.\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            \u003cmessage key\u003d\"ws.illegalFollow\"","lastModifiedDate":"2020-05-24"},{"lineNumber":178,"author":{"gitId":"-"},"content":"                     value\u003d\"GenericWhitespace \u0027\u0027{0}\u0027\u0027 should followed by whitespace.\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":179,"author":{"gitId":"-"},"content":"            \u003cmessage key\u003d\"ws.notPreceded\"","lastModifiedDate":"2020-05-24"},{"lineNumber":180,"author":{"gitId":"-"},"content":"                     value\u003d\"GenericWhitespace \u0027\u0027{0}\u0027\u0027 is not preceded with whitespace.\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"Indentation\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"basicOffset\" value\u003d\"4\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"braceAdjustment\" value\u003d\"0\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"caseIndent\" value\u003d\"0\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":186,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"throwsIndent\" value\u003d\"4\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":187,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"lineWrappingIndentation\" value\u003d\"4\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":188,"author":{"gitId":"tlyi"},"content":"            \u003cproperty name\u003d\"arrayInitIndent\" value\u003d\"8\"/\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"AbbreviationAsWordInName\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"ignoreFinal\" value\u003d\"false\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"allowedAbbreviationLength\" value\u003d\"1\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"OverloadMethodsDeclarationOrder\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"VariableDeclarationUsageDistance\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"MethodParamPad\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"NoWhitespaceBefore\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":198,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"tokens\"","lastModifiedDate":"2020-05-24"},{"lineNumber":199,"author":{"gitId":"-"},"content":"                      value\u003d\"COMMA, SEMI, POST_INC, POST_DEC, DOT, ELLIPSIS, METHOD_REF\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":200,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"allowLineBreaks\" value\u003d\"true\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"ParenPad\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"OperatorWrap\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":204,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"option\" value\u003d\"NL\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":205,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"tokens\"","lastModifiedDate":"2020-05-24"},{"lineNumber":206,"author":{"gitId":"-"},"content":"                      value\u003d\"BAND, BOR, BSR, BXOR, DIV, EQUAL, GE, GT, LAND, LE, LITERAL_INSTANCEOF, LOR,","lastModifiedDate":"2020-05-24"},{"lineNumber":207,"author":{"gitId":"-"},"content":"                    LT, MINUS, MOD, NOT_EQUAL, PLUS, QUESTION, SL, SR, STAR, METHOD_REF \"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"AnnotationLocation\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":210,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"id\" value\u003d\"AnnotationLocationMostCases\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":211,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"tokens\"","lastModifiedDate":"2020-05-24"},{"lineNumber":212,"author":{"gitId":"-"},"content":"                      value\u003d\"CLASS_DEF, INTERFACE_DEF, ENUM_DEF, METHOD_DEF, CTOR_DEF\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"AnnotationLocation\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":215,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"id\" value\u003d\"AnnotationLocationVariables\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":216,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"tokens\" value\u003d\"VARIABLE_DEF\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":217,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"allowSamelineMultipleAnnotations\" value\u003d\"true\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"NonEmptyAtclauseDescription\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"JavadocTagContinuationIndentation\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"SummaryJavadoc\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":222,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"forbiddenSummaryFragments\"","lastModifiedDate":"2020-05-24"},{"lineNumber":223,"author":{"gitId":"-"},"content":"                      value\u003d\"^@return the *|^This method returns |^A [{]@code [a-zA-Z0-9]+[}]( is a )\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"JavadocParagraph\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"AtclauseOrder\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":227,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"tagOrder\" value\u003d\"@param, @return, @throws, @deprecated\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":228,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"target\"","lastModifiedDate":"2020-05-24"},{"lineNumber":229,"author":{"gitId":"-"},"content":"                      value\u003d\"CLASS_DEF, INTERFACE_DEF, ENUM_DEF, METHOD_DEF, CTOR_DEF, VARIABLE_DEF\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":230,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"JavadocMethod\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":232,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"scope\" value\u003d\"public\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":233,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"allowMissingParamTags\" value\u003d\"true\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":234,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"allowMissingThrowsTags\" value\u003d\"true\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":235,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"allowMissingReturnTag\" value\u003d\"true\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":236,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"allowedAnnotations\" value\u003d\"Override, Test\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":237,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"allowThrowsTagsForSubclasses\" value\u003d\"true\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":238,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":239,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"MethodName\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":240,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"format\" value\u003d\"^[a-z][a-z0-9][a-zA-Z0-9_]*$\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":241,"author":{"gitId":"-"},"content":"            \u003cmessage key\u003d\"name.invalidPattern\"","lastModifiedDate":"2020-05-24"},{"lineNumber":242,"author":{"gitId":"-"},"content":"                     value\u003d\"Method name \u0027\u0027{0}\u0027\u0027 must match pattern \u0027\u0027{1}\u0027\u0027.\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":243,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":244,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"SingleLineJavadoc\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":245,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"ignoreInlineTags\" value\u003d\"false\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":246,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":247,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"EmptyCatchBlock\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":248,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"exceptionVariableName\" value\u003d\"expected\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":249,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":250,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"CommentsIndentation\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":252,"author":{"gitId":"-"},"content":"\u003c/module\u003e","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"-":251,"tlyi":1}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"---","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"tlyi"},"content":"layout: page","lastModifiedDate":"2021-10-28"},{"lineNumber":3,"author":{"gitId":"tlyi"},"content":"title: About Us","lastModifiedDate":"2021-10-28"},{"lineNumber":4,"author":{"gitId":"tlyi"},"content":"---","lastModifiedDate":"2021-10-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Display | Name | Github Profile | Portfolio ","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"--------|:----:|:--------------:|:---------:","lastModifiedDate":"2020-05-24"},{"lineNumber":8,"author":{"gitId":"tryyang2001"},"content":"\u003cimg src\u003d\"images/photos/weida.jpg\" width \u003d\"100\"\u003e | Tay Weida | [Github](https://github.com/weidak) | [Portfolio](team/weidak.md)","lastModifiedDate":"2021-11-08"},{"lineNumber":9,"author":{"gitId":"tryyang2001"},"content":"\u003cimg src\u003d\"images/photos/xingjie.jpg\" width \u003d\"100\"\u003e | Tan Xing Jie | [Github](https://github.com/xingjie99) | [Portfolio](team/xingjie99.md)","lastModifiedDate":"2021-11-08"},{"lineNumber":10,"author":{"gitId":"tryyang2001"},"content":"\u003cimg src\u003d\"images/photos/ruiyang.png\" width \u003d\"100\"\u003e| Tan Rui Yang | [Github](https://github.com/tryyang2001) | [Portfolio](team/tryyang2001.md)","lastModifiedDate":"2021-11-08"},{"lineNumber":11,"author":{"gitId":"tryyang2001"},"content":"\u003cimg src\u003d\"images/photos/yizhi.jpg\" width \u003d\"100\"\u003e | Toh Yi Zhi | [Github](https://github.com/tttyyzzz) | [Portfolio](team/tttyyzzz.md)","lastModifiedDate":"2021-11-08"},{"lineNumber":12,"author":{"gitId":"tryyang2001"},"content":"\u003cimg src\u003d\"images/photos/lypic.jpg\" width \u003d\"100\"\u003e| Tan Le Yi | [Github](https://github.com/tlyi) | [Portfolio](team/tlyi.md)","lastModifiedDate":"2021-11-08"}],"authorContributionMap":{"tryyang2001":5,"-":3,"tlyi":4}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"---","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"tlyi"},"content":"layout: page","lastModifiedDate":"2021-10-28"},{"lineNumber":3,"author":{"gitId":"tlyi"},"content":"title: Developer Guide","lastModifiedDate":"2021-10-28"},{"lineNumber":4,"author":{"gitId":"tlyi"},"content":"---","lastModifiedDate":"2021-10-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":6,"author":{"gitId":"tryyang2001"},"content":"The aim of this guide is to help the reader to understand how the system and components of Fitbot is","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"tryyang2001"},"content":"designed, implemented and tested. In the same time, this developer guide also serves to help developers who are interested in understanding the architecture","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"tryyang2001"},"content":"of Fitbot and some design considerations.","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"tryyang2001"},"content":"[Don\u0027t know about Fitbot? Click here to find more.](https://ay2122s1-cs2113t-f14-2.github.io/tp/)","lastModifiedDate":"2021-11-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"tryyang2001"},"content":"## Content page","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"tryyang2001"},"content":"[Acknowledgements](#acknowledgements)","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"tryyang2001"},"content":"[Design](#design)","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"tryyang2001"},"content":"- [Architecture](#architecture)","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"tryyang2001"},"content":"- [Data Component](#data-component)","lastModifiedDate":"2021-11-08"},{"lineNumber":17,"author":{"gitId":"tryyang2001"},"content":"  - [Data Component (Profile)](#data-component-profile)","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"tryyang2001"},"content":"  - [Data Component (ItemBank and Item)](#data-component-item)","lastModifiedDate":"2021-11-08"},{"lineNumber":19,"author":{"gitId":"tryyang2001"},"content":"    - [ItemBank Class Hierarchy](#itembank-class-hierarchy)","lastModifiedDate":"2021-11-08"},{"lineNumber":20,"author":{"gitId":"tryyang2001"},"content":"    - [Item Class Hierarchy](#item-class-hierarchy)","lastModifiedDate":"2021-11-08"},{"lineNumber":21,"author":{"gitId":"tryyang2001"},"content":"- [Logic Component](#logic-component)","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"tryyang2001"},"content":"- [Storage Component](#storage-component)","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"tryyang2001"},"content":"- [Implementation](#implementation)","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"tryyang2001"},"content":"   - [Add Food Item Feature](#add-a-food-item-feature)","lastModifiedDate":"2021-11-08"},{"lineNumber":25,"author":{"gitId":"tryyang2001"},"content":"   - [Design Considerations](#design-considerations)","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"weidak"},"content":"   - [Loading Of Data On Startup](#loading-of-data-on-startup)","lastModifiedDate":"2021-10-31"},{"lineNumber":27,"author":{"gitId":"tttyyzzz"},"content":"   - [Create Profile If Not Exist On Startup](#create-profile-if-not-exist-on-startup)","lastModifiedDate":"2021-11-04"},{"lineNumber":28,"author":{"gitId":"tryyang2001"},"content":"- [Product Scope](#product-scope)","lastModifiedDate":"2021-10-27"},{"lineNumber":29,"author":{"gitId":"tryyang2001"},"content":"   - [Target User Profile](#target-user-profile)","lastModifiedDate":"2021-10-27"},{"lineNumber":30,"author":{"gitId":"tryyang2001"},"content":"   - [Value Proposition](#value-proposition)","lastModifiedDate":"2021-10-27"},{"lineNumber":31,"author":{"gitId":"tryyang2001"},"content":"- [User Stories](#user-stories)","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"tryyang2001"},"content":"- [Non-functional Requirements](#non-functional-requirements)","lastModifiedDate":"2021-10-27"},{"lineNumber":33,"author":{"gitId":"tryyang2001"},"content":"- [Glossary](#glossary)","lastModifiedDate":"2021-10-27"},{"lineNumber":34,"author":{"gitId":"tryyang2001"},"content":"- [Instruction for Manual Testing](#instructions-for-manual-testing)","lastModifiedDate":"2021-10-27"},{"lineNumber":35,"author":{"gitId":"tlyi"},"content":"  - [Launch](#launch)","lastModifiedDate":"2021-11-07"},{"lineNumber":36,"author":{"gitId":"tlyi"},"content":"  - [Setting Up Profile](#setting-up-profile)","lastModifiedDate":"2021-11-07"},{"lineNumber":37,"author":{"gitId":"tlyi"},"content":"  - [Customising Profile](#customising-profile)","lastModifiedDate":"2021-11-07"},{"lineNumber":38,"author":{"gitId":"tlyi"},"content":"  - [Recording Food Items](#recording-food-items)","lastModifiedDate":"2021-11-07"},{"lineNumber":39,"author":{"gitId":"tlyi"},"content":"  - [Recording Exercise Items](#recording-exercise-items)","lastModifiedDate":"2021-11-07"},{"lineNumber":40,"author":{"gitId":"tlyi"},"content":"  - [Scheduling Exercises](#scheduling-exercises)","lastModifiedDate":"2021-11-07"},{"lineNumber":41,"author":{"gitId":"tlyi"},"content":"  - [Building Food Bank](#building-food-bank)","lastModifiedDate":"2021-11-07"},{"lineNumber":42,"author":{"gitId":"tlyi"},"content":"  - [Building Exercise Bank](#building-exercise-bank)","lastModifiedDate":"2021-11-07"},{"lineNumber":43,"author":{"gitId":"tlyi"},"content":"  - [Exiting Program](#exiting-program)","lastModifiedDate":"2021-11-07"},{"lineNumber":44,"author":{"gitId":"weidak"},"content":"  - [Manipulating And Saving Data](#manipulating-and-saving-data)","lastModifiedDate":"2021-11-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":48,"author":{"gitId":"tryyang2001"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-11-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":50,"author":{"gitId":"tlyi"},"content":"Firstly, we would like to acknowledge [AddressBook Level-2](https://github.com/se-edu/addressbook-level2/blob/master/test/java/seedu/addressbook/parser/ParserTest.java) as we adapted its utility methods for","lastModifiedDate":"2021-11-08"},{"lineNumber":51,"author":{"gitId":"tlyi"},"content":"testing in one of our classes, `ParserManager`. \\","lastModifiedDate":"2021-11-08"},{"lineNumber":52,"author":{"gitId":"tlyi"},"content":"We would also like to acknowledge [AddressBook Level-3](https://se-education.org/addressbook-level3/) for providing many useful insights on how to write and structure our code in ","lastModifiedDate":"2021-11-08"},{"lineNumber":53,"author":{"gitId":"tlyi"},"content":"Object-Oriented Programming fashion. ","lastModifiedDate":"2021-11-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":55,"author":{"gitId":"tryyang2001"},"content":"## **Design** ","lastModifiedDate":"2021-11-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":57,"author":{"gitId":"tryyang2001"},"content":"### **Architecture**","lastModifiedDate":"2021-11-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":59,"author":{"gitId":"tlyi"},"content":"\u003cp align\u003d\"center\" width\u003d\"100%\"\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":60,"author":{"gitId":"tlyi"},"content":"  \u003cimage width\u003d\"70%\" src\u003d\"images/ArchitectureDiagram.png\" alt\u003d\"Architecture Diagram\"/\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":61,"author":{"gitId":"tlyi"},"content":"\u003c/p\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":62,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":63,"author":{"gitId":"tlyi"},"content":"`Main` class is the component that interacts with all the necessary classes.","lastModifiedDate":"2021-10-22"},{"lineNumber":64,"author":{"gitId":"tlyi"},"content":"The `Main` class consists of the few components as shown below:","lastModifiedDate":"2021-10-22"},{"lineNumber":65,"author":{"gitId":"tryyang2001"},"content":"- `Ui`: Facilitates interaction between user and application","lastModifiedDate":"2021-11-08"},{"lineNumber":66,"author":{"gitId":"tryyang2001"},"content":"- `Logic`: Parses commands and execute them respectively","lastModifiedDate":"2021-11-08"},{"lineNumber":67,"author":{"gitId":"tryyang2001"},"content":"- `Data`: Allows users to perform CRUD operations on the data in the application","lastModifiedDate":"2021-11-08"},{"lineNumber":68,"author":{"gitId":"tryyang2001"},"content":"- `Storage`: Stores all data in the application. Saves a copy of data in relevant files.","lastModifiedDate":"2021-11-08"},{"lineNumber":69,"author":{"gitId":"tttyyzzz"},"content":"  Data will be retrieved from storage upon starting of application.","lastModifiedDate":"2021-10-22"},{"lineNumber":70,"author":{"gitId":"tryyang2001"},"content":"- `State`: Helps the user to restore or create profile data. ","lastModifiedDate":"2021-11-08"},{"lineNumber":71,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":72,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":73,"author":{"gitId":"tttyyzzz"},"content":"Upon launching of application:","lastModifiedDate":"2021-10-22"},{"lineNumber":74,"author":{"gitId":"tttyyzzz"},"content":"- The application will check if there are files that are already stored in the respective folder.","lastModifiedDate":"2021-10-22"},{"lineNumber":75,"author":{"gitId":"tlyi"},"content":"  If there is such files, the contents of the files will be loaded to the data section of the application.","lastModifiedDate":"2021-10-22"},{"lineNumber":76,"author":{"gitId":"tttyyzzz"},"content":"  Instances of profile, data(e.g. FoodList, ExerciseList, FutureExerciseList, ItemBank) and storage will be created.","lastModifiedDate":"2021-11-08"},{"lineNumber":77,"author":{"gitId":"tttyyzzz"},"content":"- If there is no such files, the files will be created.","lastModifiedDate":"2021-11-08"},{"lineNumber":78,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":79,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":80,"author":{"gitId":"tttyyzzz"},"content":"Upon exiting of application:","lastModifiedDate":"2021-10-22"},{"lineNumber":81,"author":{"gitId":"tttyyzzz"},"content":"- The application will save all data into the files created. All instance of components will be cleared automatically.","lastModifiedDate":"2021-10-22"},{"lineNumber":82,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":83,"author":{"gitId":"tttyyzzz"},"content":"Class diagram of Main","lastModifiedDate":"2021-10-27"},{"lineNumber":84,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":85,"author":{"gitId":"tttyyzzz"},"content":"\u003cp align\u003d\"center\" width\u003d\"100%\"\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":86,"author":{"gitId":"tlyi"},"content":"  \u003cimg width\u003d\"80%\" src\u003d\"images/MainClass.png\" alt\u003d\"Main Class Diagram\"/\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":87,"author":{"gitId":"tttyyzzz"},"content":"\u003c/p\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":88,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":89,"author":{"gitId":"tttyyzzz"},"content":"When _Fitbot_ is being started, the above instances (`Ui`,`State`, `LogicManager`,`DataManager` and `StorageManager`)","lastModifiedDate":"2021-11-08"},{"lineNumber":90,"author":{"gitId":"tttyyzzz"},"content":"are being created in the main class. The main class will require 1 of each instance for the application to function.","lastModifiedDate":"2021-11-08"},{"lineNumber":91,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":92,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":93,"author":{"gitId":"tttyyzzz"},"content":"- Main class start of by running the `start()` function which loads all information using StorageManager class to the ","lastModifiedDate":"2021-10-27"},{"lineNumber":94,"author":{"gitId":"tttyyzzz"},"content":"Profile, FoodList, ExerciseList,ItemBank(foodBank, exerciseBank).","lastModifiedDate":"2021-10-27"},{"lineNumber":95,"author":{"gitId":"tttyyzzz"},"content":"-Next main class will check if user contains the profile using the `checkAndCreateProfile()`. If user does not have","lastModifiedDate":"2021-10-27"},{"lineNumber":96,"author":{"gitId":"tttyyzzz"},"content":"a profile, the application will assist user to create a profile by prompting questions.","lastModifiedDate":"2021-10-27"},{"lineNumber":97,"author":{"gitId":"tttyyzzz"},"content":"-After setting up/ ensuring that user have a profile, the main program will enter `enterTaskModeUntlByeCommand()` ","lastModifiedDate":"2021-11-08"},{"lineNumber":98,"author":{"gitId":"tttyyzzz"},"content":"for user to interact with the application","lastModifiedDate":"2021-11-08"},{"lineNumber":99,"author":{"gitId":"tttyyzzz"},"content":"- Once user has keyed in the command `bye`, the main program will exit out of the `enterTaskModeUntlByeCommand()`","lastModifiedDate":"2021-10-27"},{"lineNumber":100,"author":{"gitId":"tttyyzzz"},"content":"and run the `exit()` command to exit the application.","lastModifiedDate":"2021-10-27"},{"lineNumber":101,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":102,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":103,"author":{"gitId":"tttyyzzz"},"content":"  ","lastModifiedDate":"2021-10-22"},{"lineNumber":104,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":105,"author":{"gitId":"tryyang2001"},"content":"### **Data Component**","lastModifiedDate":"2021-11-08"},{"lineNumber":106,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":107,"author":{"gitId":"weidak"},"content":"\u003cp align\u003d\"center\" width\u003d\"100%\"\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":108,"author":{"gitId":"tryyang2001"},"content":"  \u003cimg width\u003d\"80%\" src\u003d\"images/DataComponent.png\" alt\u003d\"Data Component Diagram\"/\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":109,"author":{"gitId":"tryyang2001"},"content":"\u003c/p\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":110,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":111,"author":{"gitId":"tryyang2001"},"content":"The `Data` component is responsible to perform operations such as data modification and query in the code.","lastModifiedDate":"2021-11-08"},{"lineNumber":112,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":113,"author":{"gitId":"tryyang2001"},"content":"In `Data` component, it consists of:","lastModifiedDate":"2021-11-08"},{"lineNumber":114,"author":{"gitId":"tryyang2001"},"content":"1. `DataManager` class which is responsible to help interaction between classes in `Logic` Component and classes in `Data` Component.","lastModifiedDate":"2021-11-08"},{"lineNumber":115,"author":{"gitId":"tryyang2001"},"content":"2. `Profile` package which is responsible to any manipulation and modification of data for `Profile`.","lastModifiedDate":"2021-11-08"},{"lineNumber":116,"author":{"gitId":"tryyang2001"},"content":"3. `Item` package which is responsible to any manipulation and modification of data for `Item` such as `Food` and `Exercise`.","lastModifiedDate":"2021-11-08"},{"lineNumber":117,"author":{"gitId":"tryyang2001"},"content":"4. `Verifiable` interface which is responsible to check data validity in storage files.","lastModifiedDate":"2021-11-08"},{"lineNumber":118,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":119,"author":{"gitId":"tryyang2001"},"content":"#### **Data Component (Profile)**","lastModifiedDate":"2021-11-08"},{"lineNumber":120,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":121,"author":{"gitId":"weidak"},"content":"\u003cp align\u003d\"center\" width\u003d\"100%\"\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":122,"author":{"gitId":"tryyang2001"},"content":"  \u003cimg width\u003d\"90%\" src\u003d\"images/ProfileClassDiagram.png\" alt\u003d\"Profile Diagram\"/\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":123,"author":{"gitId":"weidak"},"content":"\u003c/p\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":124,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":125,"author":{"gitId":"weidak"},"content":"A `Profile` class has various attributes such as `Name`, `Height`, `Weight`, `Gender`, `Age`, `CalorieGoal` and `ActivityFactor`","lastModifiedDate":"2021-10-27"},{"lineNumber":126,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":127,"author":{"gitId":"weidak"},"content":"- Using these attributes it is able to calculate an estimated Basal Metabolic Rate (BMR) using the Harris-Benedict Equation based on your activity levels. Therefore, while calculating your net calories for the day, your BMR is factored in to give you an estimated calculation of your net calorie.","lastModifiedDate":"2021-10-27"},{"lineNumber":128,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":129,"author":{"gitId":"tlyi"},"content":"- All the attributes implement a `Verifiable` interface to enable us to check if the attributes are valid. This is important for the setting up of profile or the loading of profile from storage to ensure data integrity of the user\u0027s attributes.","lastModifiedDate":"2021-11-07"},{"lineNumber":130,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":131,"author":{"gitId":"weidak"},"content":"The `ProfileUtils` class is used in performing calculations (such as BMR or BMI) with the various attributes of the `Profile` class.","lastModifiedDate":"2021-11-08"},{"lineNumber":132,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":133,"author":{"gitId":"tryyang2001"},"content":"#### **Data Component (Item)**","lastModifiedDate":"2021-11-08"},{"lineNumber":134,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":135,"author":{"gitId":"tlyi"},"content":"\u003cp align\u003d\"center\" width\u003d\"100%\"\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":136,"author":{"gitId":"tryyang2001"},"content":"  \u003cimg width\u003d\"80%\" src\u003d\"images/ItemBankAndItemClassDiagram.png\" alt\u003d\"ItemBank And Item Class Diagram\"/\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":137,"author":{"gitId":"tlyi"},"content":"\u003c/p\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":138,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":139,"author":{"gitId":"tryyang2001"},"content":"Above is a high-level class diagram for all the classes in `Item` package. In `Item` package, it has ","lastModifiedDate":"2021-11-08"},{"lineNumber":140,"author":{"gitId":"tryyang2001"},"content":"two different class hierarchy, one is `ItemBank`, and one is `Item`.","lastModifiedDate":"2021-11-08"},{"lineNumber":141,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":142,"author":{"gitId":"xingjie99"},"content":"The main purpose of having `ItemBank` and `Item` classes is to allow user to perform writing, reading, editing and deleting operations in the program.","lastModifiedDate":"2021-10-27"},{"lineNumber":143,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":144,"author":{"gitId":"tryyang2001"},"content":"#### ItemBank Class Hierarchy","lastModifiedDate":"2021-11-08"},{"lineNumber":145,"author":{"gitId":"tryyang2001"},"content":"1. `ItemBank` is the *highest superclass* that contains one attribute called `internalItems` which is an _array list_ of `Item`.","lastModifiedDate":"2021-11-08"},{"lineNumber":146,"author":{"gitId":"tryyang2001"},"content":"2. `ItemList` being the *subclass* of `ItemBank` and *superclass* of `FoodList` and `ExerciseList`, which inherits all the methods available from `ItemBank`, with additional methods that form a dependency on `Item` class.","lastModifiedDate":"2021-11-08"},{"lineNumber":147,"author":{"gitId":"tryyang2001"},"content":"3. `FoodList` and `ExerciseList` are *subclasses*  that inherit all the methods available from `ItemList`, while each of them also contains more methods that form a dependency","lastModifiedDate":"2021-11-08"},{"lineNumber":148,"author":{"gitId":"tryyang2001"},"content":"on `Food` class and `Exercise` class respectively.","lastModifiedDate":"2021-11-08"},{"lineNumber":149,"author":{"gitId":"tryyang2001"},"content":"4. `FutureExerciseList` is a *subclass*  that inherits all the methods available from `ExerciseList` and contains other methods that form a dependency","lastModifiedDate":"2021-11-08"},{"lineNumber":150,"author":{"gitId":"xingjie99"},"content":"on `Exercise` class.","lastModifiedDate":"2021-10-27"},{"lineNumber":151,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":152,"author":{"gitId":"tryyang2001"},"content":"As shown in the diagram above, `DataManager` class has association with `ItemBank`. This also implies that it has association with","lastModifiedDate":"2021-11-08"},{"lineNumber":153,"author":{"gitId":"tryyang2001"},"content":"all the subclasses that inherits `ItemBank`. ","lastModifiedDate":"2021-11-08"},{"lineNumber":154,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":155,"author":{"gitId":"tryyang2001"},"content":"#### Item Class Hierarchy","lastModifiedDate":"2021-11-08"},{"lineNumber":156,"author":{"gitId":"tryyang2001"},"content":"1. An `Item` class contains two attributes, `name` which represents the name of the item, and `calories` which represents the calorie intake/burnt from the item.","lastModifiedDate":"2021-11-08"},{"lineNumber":157,"author":{"gitId":"tryyang2001"},"content":"2. `Food` and `Exercise` are the only two **_subclasses_** inherit the `Item` class. ","lastModifiedDate":"2021-11-08"},{"lineNumber":158,"author":{"gitId":"tryyang2001"},"content":"3. `Food` class has two extra attributes called `dateTime` and `timePeriod`, the former stores the consumed food date and time, while the latter compute the time period ","lastModifiedDate":"2021-11-08"},{"lineNumber":159,"author":{"gitId":"tryyang2001"},"content":"(only value such as `MORNING`, `AFTERNOON`, `EVENING` and `NIGHT` as shown in the enumeration class `TimePeriod`) of the food consumed time. Note that the `timePeriod` ","lastModifiedDate":"2021-11-08"},{"lineNumber":160,"author":{"gitId":"tryyang2001"},"content":"value must present when a `Food` object is created.","lastModifiedDate":"2021-11-08"},{"lineNumber":161,"author":{"gitId":"tryyang2001"},"content":"4. `Exercise` class has one extra attribute called `date` which stores the date of the exercise taken.","lastModifiedDate":"2021-11-08"},{"lineNumber":162,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":163,"author":{"gitId":"tryyang2001"},"content":"As shown in the diagram above, the `Item` class implements interface `Verifiable`. This interface contains method to check the validity for the items ","lastModifiedDate":"2021-11-08"},{"lineNumber":164,"author":{"gitId":"tryyang2001"},"content":"in the storage files. If the data in storage file is invalid, that item will not be loaded to the program. Note that since the superclass ","lastModifiedDate":"2021-11-08"},{"lineNumber":165,"author":{"gitId":"tryyang2001"},"content":"`Item` implements `Verifiable`, its subclasses `Food` and `Exercise` also implement the interface.","lastModifiedDate":"2021-11-08"},{"lineNumber":166,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":167,"author":{"gitId":"tlyi"},"content":"Abstract classes of Items and ItemLists acts as an agent for meaningful subclasses of Food and Exercise to inherit its attributes and functionality for a more concise use-case.","lastModifiedDate":"2021-11-07"},{"lineNumber":168,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":169,"author":{"gitId":"tryyang2001"},"content":"### **Ui Component**","lastModifiedDate":"2021-11-08"},{"lineNumber":170,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":171,"author":{"gitId":"tttyyzzz"},"content":"The purpose of `Ui` component is to interact with the user. It reads in input from the user and prints messages on the ","lastModifiedDate":"2021-11-08"},{"lineNumber":172,"author":{"gitId":"tttyyzzz"},"content":"console. Below shows a sequence diagram of how `Ui` component interacts with the rest of the application.","lastModifiedDate":"2021-11-08"},{"lineNumber":173,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":174,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":175,"author":{"gitId":"tlyi"},"content":"\u003cp align\u003d\"center\" width\u003d\"100%\"\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":176,"author":{"gitId":"tttyyzzz"},"content":"  \u003cimg width\u003d\"80%\" src\u003d\"images/UiSequenceDiagram.png\" alt\u003d\"Ui Sequence Diagram\"/\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":177,"author":{"gitId":"tlyi"},"content":"\u003c/p\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":178,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":179,"author":{"gitId":"tttyyzzz"},"content":"Step 1: The main program starts off with the run command (command not shown but the activation bar is present), and the ","lastModifiedDate":"2021-11-08"},{"lineNumber":180,"author":{"gitId":"tttyyzzz"},"content":"run command self invoke itself by calling `enterTaskModeUntilByeCommand()`,\\","lastModifiedDate":"2021-11-08"},{"lineNumber":181,"author":{"gitId":"tttyyzzz"},"content":"Step 2: In this method, the main class will prompt for user input using `getUserInput()`.\\","lastModifiedDate":"2021-11-08"},{"lineNumber":182,"author":{"gitId":"tttyyzzz"},"content":"Step 3: Once the ui instance received user input, the main command will process the data(not shown).","lastModifiedDate":"2021-11-08"},{"lineNumber":183,"author":{"gitId":"tttyyzzz"},"content":"Step 4: After processing the data, no matter success or fail, the main command will tap on ui instance again to print","lastModifiedDate":"2021-11-08"},{"lineNumber":184,"author":{"gitId":"tttyyzzz"},"content":"message on the console using `formatMessageFramedWithDivider()`","lastModifiedDate":"2021-11-08"},{"lineNumber":185,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":186,"author":{"gitId":"tttyyzzz"},"content":"The sequence interaction in ref will be elaborated in Parsing of Commands under [Implementation](#implementation).","lastModifiedDate":"2021-11-08"},{"lineNumber":187,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":188,"author":{"gitId":"tttyyzzz"},"content":"Note: The Main class has 2 activation bars are due to the `run()` function which will then activate ","lastModifiedDate":"2021-11-08"},{"lineNumber":189,"author":{"gitId":"tttyyzzz"},"content":"`enterTaskModeUntilByeCommand()`. In the example above, it is assumed that `bye` command is not used as example.","lastModifiedDate":"2021-11-08"},{"lineNumber":190,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":191,"author":{"gitId":"tryyang2001"},"content":"### **Logic Component**","lastModifiedDate":"2021-11-08"},{"lineNumber":192,"author":{"gitId":"tttyyzzz"},"content":" ","lastModifiedDate":"2021-10-22"},{"lineNumber":193,"author":{"gitId":"tlyi"},"content":"The `Logic` component is responsible for making sense of user input.","lastModifiedDate":"2021-10-21"},{"lineNumber":194,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":195,"author":{"gitId":"tlyi"},"content":"Below is a high level class diagram of the `Logic` component, which shows how it interacts with other components ","lastModifiedDate":"2021-10-21"},{"lineNumber":196,"author":{"gitId":"tlyi"},"content":"like `Main`, `Storage` and `Data`.","lastModifiedDate":"2021-11-08"},{"lineNumber":197,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":198,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":199,"author":{"gitId":"tlyi"},"content":"\u003cp align\u003d\"center\" width\u003d\"100%\"\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":200,"author":{"gitId":"tlyi"},"content":"  \u003cimg width\u003d\"90%\" src\u003d\"images/LogicClassDiagram.png\" alt\u003d\"Logic Class Diagram\"/\u003e ","lastModifiedDate":"2021-11-07"},{"lineNumber":201,"author":{"gitId":"tlyi"},"content":"\u003c/p\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":202,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":203,"author":{"gitId":"tlyi"},"content":"The general workflow of the `Logic` component is as follows:","lastModifiedDate":"2021-10-27"},{"lineNumber":204,"author":{"gitId":"tlyi"},"content":"1. When the program first starts, `Main` instantiates `LogicManager` and initialises it with `StorageManager` and `DataManager`. At the same time, `ParserManager` is also instantiated within `LogicManager`.","lastModifiedDate":"2021-11-08"},{"lineNumber":205,"author":{"gitId":"tlyi"},"content":"2. Whenever `Main`  receives user input, it feeds this user input to the `LogicManager`.","lastModifiedDate":"2021-11-08"},{"lineNumber":206,"author":{"gitId":"tlyi"},"content":"3. `LogicManager` then calls on `ParserManager` to parse the user input.","lastModifiedDate":"2021-11-08"},{"lineNumber":207,"author":{"gitId":"tlyi"},"content":"4. The `ParserManager` parses the user input and creates a `Command` object.","lastModifiedDate":"2021-11-08"},{"lineNumber":208,"author":{"gitId":"tlyi"},"content":"   - More specifically, it creates a `XYZCommand` object, where `XYZ` is a placeholder for the ","lastModifiedDate":"2021-10-27"},{"lineNumber":209,"author":{"gitId":"tlyi"},"content":"      specific command type, e.g `AddFoodCommand`, `UpdateProfileCommand`, etc.","lastModifiedDate":"2021-10-27"},{"lineNumber":210,"author":{"gitId":"tlyi"},"content":"   - `XYZCommand` class inherits from the abstract class `Command`, which is used to represent all executable commands in the application.","lastModifiedDate":"2021-10-27"},{"lineNumber":211,"author":{"gitId":"tlyi"},"content":"5. `ParserManager` returns the `Command` object to `LogicManager`, which then executes the `Command`.","lastModifiedDate":"2021-11-08"},{"lineNumber":212,"author":{"gitId":"tlyi"},"content":"6. During execution, `Command` will perform data manipulation on `DataManager`.","lastModifiedDate":"2021-11-08"},{"lineNumber":213,"author":{"gitId":"tlyi"},"content":"7. After execution, all `Command` objects stores the result of the execution in a `CommandResult` object. ","lastModifiedDate":"2021-11-08"},{"lineNumber":214,"author":{"gitId":"tlyi"},"content":"This `CommandResult` object is then returned to `LogicManager`.","lastModifiedDate":"2021-11-08"},{"lineNumber":215,"author":{"gitId":"tlyi"},"content":"8. Depending on the type of `Command` being executed which affects the type of data that has been manipulated, `LogicManager` will call upon `StorageManager` to save the affected data to the file system.","lastModifiedDate":"2021-11-08"},{"lineNumber":216,"author":{"gitId":"tlyi"},"content":"9. Finally, `CommandResult` is returned to `Main`.","lastModifiedDate":"2021-11-08"},{"lineNumber":217,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":218,"author":{"gitId":"tlyi"},"content":"Here is a more detailed class diagram illustrating the classes within the `Logic` component.","lastModifiedDate":"2021-11-08"},{"lineNumber":219,"author":{"gitId":"tlyi"},"content":"\u003cp align\u003d\"center\" width\u003d\"100%\"\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":220,"author":{"gitId":"tlyi"},"content":"  \u003cimg width\u003d\"80%\" src\u003d\"images/ParserClassDiagram.png\" alt\u003d\"Parser Class Diagram\"\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":221,"author":{"gitId":"tlyi"},"content":"\u003c/p\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":222,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":223,"author":{"gitId":"tlyi"},"content":"Taking a closer look into the parsing process, the `ParserManager` actually does not do most of the parsing itself. This is how the parsing process works:","lastModifiedDate":"2021-11-08"},{"lineNumber":224,"author":{"gitId":"tlyi"},"content":"1. `ParserManager` creates `XYZCommandParser`,  which is then responsible for creating the specific `XYZCommand`. ","lastModifiedDate":"2021-11-08"},{"lineNumber":225,"author":{"gitId":"tlyi"},"content":"   - All `XYZCommandParser` classes implement the interface `Parser`, which dictates that ","lastModifiedDate":"2021-11-08"},{"lineNumber":226,"author":{"gitId":"tlyi"},"content":"   they are able to parse user inputs. ","lastModifiedDate":"2021-11-08"},{"lineNumber":227,"author":{"gitId":"tlyi"},"content":"   - They also make use of utility methods stored in `ParserUtils` to extract ","lastModifiedDate":"2021-11-08"},{"lineNumber":228,"author":{"gitId":"tlyi"},"content":"   all the parameters relevant to the command, and constants in `ParserMessages` to format the desired output. ","lastModifiedDate":"2021-11-08"},{"lineNumber":229,"author":{"gitId":"tlyi"},"content":"2. After parsing the input, `XYZCommandParser` returns `XYZCommand` to `ParserManager`,","lastModifiedDate":"2021-11-08"},{"lineNumber":230,"author":{"gitId":"tlyi"},"content":"   which then returns the same `XYZCommand` to `LogicManager`.","lastModifiedDate":"2021-11-08"},{"lineNumber":231,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":232,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":233,"author":{"gitId":"tryyang2001"},"content":"### **Storage component**","lastModifiedDate":"2021-11-08"},{"lineNumber":234,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":235,"author":{"gitId":"weidak"},"content":"This is a (partial) class diagram that represents the `Storage` component.","lastModifiedDate":"2021-11-08"},{"lineNumber":236,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":237,"author":{"gitId":"tlyi"},"content":"\u003cp align\u003d\"center\" width\u003d\"100%\"\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":238,"author":{"gitId":"weidak"},"content":"  \u003cimg width\u003d\"80%\" src\u003d\"images/StorageClassDiagram.png\" alt\u003d\"Storage Class Diagram\"/\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":239,"author":{"gitId":"tlyi"},"content":"\u003c/p\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":240,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":241,"author":{"gitId":"weidak"},"content":"1. Firstly, `Storage` inherits each of the `XYZStorage` interfaces. This ensures the `Storage` API has the relevant load and save functions","lastModifiedDate":"2021-11-08"},{"lineNumber":242,"author":{"gitId":"weidak"},"content":"of the various storages. ","lastModifiedDate":"2021-11-08"},{"lineNumber":243,"author":{"gitId":"weidak"},"content":"2. `StorageManager` then implements the `Storage` API that contains the relevant functionalities and instantiates `XYZStorage` using the respective `XYZStorageUtils`.","lastModifiedDate":"2021-11-08"},{"lineNumber":244,"author":{"gitId":"weidak"},"content":"3. Each of the `XYZStorageUtils` utilizes the general classes of `FileChecker` to create/check for their files and `FileSaver` to write to their respective files.","lastModifiedDate":"2021-11-08"},{"lineNumber":245,"author":{"gitId":"weidak"},"content":"4. `XYZStorageUtils` also uses `XYZDecoder` to decode files from the saved .txt file and a `XYZEncoder` to encode items into the saved file.","lastModifiedDate":"2021-11-08"},{"lineNumber":246,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":247,"author":{"gitId":"weidak"},"content":"The `StorageManager` component loads and saves:","lastModifiedDate":"2021-10-21"},{"lineNumber":248,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":249,"author":{"gitId":"weidak"},"content":"- your profile: name, height, weight, gender, age, calorie goal and activity factor","lastModifiedDate":"2021-10-27"},{"lineNumber":250,"author":{"gitId":"weidak"},"content":"- list of exercises done: including date performed","lastModifiedDate":"2021-10-27"},{"lineNumber":251,"author":{"gitId":"weidak"},"content":"- list of food consumed: including date and time of consumption","lastModifiedDate":"2021-10-27"},{"lineNumber":252,"author":{"gitId":"weidak"},"content":"- upcoming exercises: recurring exercises that are scheduled in the future","lastModifiedDate":"2021-10-27"},{"lineNumber":253,"author":{"gitId":"weidak"},"content":"- food and exercise banks: names and calories of relevant item","lastModifiedDate":"2021-10-27"},{"lineNumber":254,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":255,"author":{"gitId":"weidak"},"content":"This way of design ensures that each class has the correct methods to perform its capabilities.","lastModifiedDate":"2021-11-08"},{"lineNumber":256,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":257,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":258,"author":{"gitId":"tryyang2001"},"content":"### **State Component**","lastModifiedDate":"2021-11-08"},{"lineNumber":259,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":260,"author":{"gitId":"tryyang2001"},"content":"#### **Create Profile (StartState)**","lastModifiedDate":"2021-11-08"},{"lineNumber":261,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":262,"author":{"gitId":"tttyyzzz"},"content":"\u003cp align\u003d\"center\" width\u003d\"100%\"\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":263,"author":{"gitId":"tlyi"},"content":"  \u003cimg width\u003d\"100%\" src\u003d\"images/StartState.png\" alt\u003d\"Start State Class Diagram\"/\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":264,"author":{"gitId":"tttyyzzz"},"content":"\u003c/p\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":265,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":266,"author":{"gitId":"tttyyzzz"},"content":"- When the `StartState` method is being called, it instantiated and execute methods in the 7 classes, which are ","lastModifiedDate":"2021-11-05"},{"lineNumber":267,"author":{"gitId":"tttyyzzz"},"content":"`NameCreator`, `HeightCreator`, `WeightCreator`, `GenderCreator`, `AgeCreator`, `CalorieGoalCreator` and ","lastModifiedDate":"2021-11-05"},{"lineNumber":268,"author":{"gitId":"tttyyzzz"},"content":"`ActivityFactorCreator`.","lastModifiedDate":"2021-11-05"},{"lineNumber":269,"author":{"gitId":"tttyyzzz"},"content":"- The above Classes instantiated by `StartState` are inherited from `AttributeCreator` class. These profile attributes","lastModifiedDate":"2021-11-08"},{"lineNumber":270,"author":{"gitId":"tttyyzzz"},"content":"are inherited from `AttributeCreator` to conform DRY principle, by extracting out common methods.","lastModifiedDate":"2021-11-08"},{"lineNumber":271,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":272,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":273,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":274,"author":{"gitId":"tryyang2001"},"content":"### **Implementation**","lastModifiedDate":"2021-11-08"},{"lineNumber":275,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":276,"author":{"gitId":"tryyang2001"},"content":"This section describes some noteworthy details on how certain features are implemented","lastModifiedDate":"2021-10-27"},{"lineNumber":277,"author":{"gitId":"tryyang2001"},"content":"and some design considerations.","lastModifiedDate":"2021-10-27"},{"lineNumber":278,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":279,"author":{"gitId":"tlyi"},"content":"❗️ **Note**: Due to limitations of PlantUML, the lifeline in sequence diagrams does not end at the destroy marker (X) as it should, but reaches the end of the diagram instead.","lastModifiedDate":"2021-11-08"},{"lineNumber":280,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":281,"author":{"gitId":"tryyang2001"},"content":"#### **Parsing of Commands**","lastModifiedDate":"2021-11-08"},{"lineNumber":282,"author":{"gitId":"tlyi"},"content":"The sequence diagram below models the interactions between the different classes within the Logic component.","lastModifiedDate":"2021-10-27"},{"lineNumber":283,"author":{"gitId":"tlyi"},"content":"This particular case illustrates how a user input add f/potato c/20 is parsed and process to execute the appropriate actions.","lastModifiedDate":"2021-10-27"},{"lineNumber":284,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":285,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":286,"author":{"gitId":"tlyi"},"content":"\u003cp align\u003d\"center\" width\u003d\"100%\"\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":287,"author":{"gitId":"tlyi"},"content":"  \u003cimg width\u003d\"100%\" src\u003d\"images/LogicSequenceDiagram.png\" alt\u003d\"Logic Sequence Diagram\"/\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":288,"author":{"gitId":"tlyi"},"content":"\u003c/p\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":289,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":290,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":291,"author":{"gitId":"tlyi"},"content":"Step 1: When the program first starts, `Main` instantiates `LogicManager`, and initialises it with the objects `storageManager` and `dataManager`. This is so that `LogicManager` has access to the storage and data components.","lastModifiedDate":"2021-11-08"},{"lineNumber":292,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":293,"author":{"gitId":"tlyi"},"content":"Step 2: `LogicManager` then instantiates a `ParserManager` object. This is the class where all the parsing of commands will occur.","lastModifiedDate":"2021-11-08"},{"lineNumber":294,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":295,"author":{"gitId":"tlyi"},"content":"Step 3: In the case where `Main` receives the user input `add f/potato c/30`, `Main` will call the method `execute` from `LogicManager`, and provides the user input as the argument.","lastModifiedDate":"2021-11-08"},{"lineNumber":296,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":297,"author":{"gitId":"tlyi"},"content":"Step 4: `LogicManager` then calls the `parseCommand` method from `ParserManager`. Now, `ParserManager` will start to parse the user input.","lastModifiedDate":"2021-11-08"},{"lineNumber":298,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":299,"author":{"gitId":"tlyi"},"content":"Step 5: Firstly, `ParserManager` has to determine the type of `Command` it is trying to parse. The details of this process is shown in the sequence diagram below.","lastModifiedDate":"2021-11-08"},{"lineNumber":300,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":301,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":302,"author":{"gitId":"tlyi"},"content":"\u003cp align\u003d\"center\" width\u003d\"100%\"\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":303,"author":{"gitId":"tlyi"},"content":"  \u003cimg width\u003d\"80%\" src\u003d\"images/ParseCommandRefFrame.png\" alt\u003d\"Parse Command Ref Frame\"/\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":304,"author":{"gitId":"tlyi"},"content":"\u003c/p\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":305,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":306,"author":{"gitId":"tlyi"},"content":"Step 6: As seen in the above diagram, `ParserManager` first splits the input into command word and the remaining parameters. In this case, the command word is `add`, and the parameters are `f/potato c/30`. ","lastModifiedDate":"2021-11-08"},{"lineNumber":307,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":308,"author":{"gitId":"tlyi"},"content":"Step 7: Depending on the command word, `ParserManager` will then instantiate the appropriate `XYZCommandParser`. In this case, since the command word is `add`, an `AddCommandParser` object is created. ","lastModifiedDate":"2021-11-08"},{"lineNumber":309,"author":{"gitId":"tlyi"},"content":"However, if the command word is not known to the program (i.e. is not equal to any `XYZ` specified), an `InvalidCommand` will be created and returned immediately.","lastModifiedDate":"2021-11-08"},{"lineNumber":310,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":311,"author":{"gitId":"tlyi"},"content":"Step 8: After the appropriate `AddCommandParser` is created, `ParserManager` will then call the method `parse` on the `AddCommandParser`. `AddCommandParser` will then start to parse all the required parameters specific to the `AddCommand`. This process is explained in detail in the below sequence diagram.","lastModifiedDate":"2021-11-08"},{"lineNumber":312,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":313,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":314,"author":{"gitId":"tlyi"},"content":"\u003cp align\u003d\"center\" width\u003d\"100%\"\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":315,"author":{"gitId":"tlyi"},"content":"  \u003cimg width\u003d\"100%\" src\u003d\"images/ParseParametersRefFrame.png\" alt\u003d\"Parse Parameters Ref Frame\"/\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":316,"author":{"gitId":"tlyi"},"content":"\u003c/p\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":317,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":318,"author":{"gitId":"tlyi"},"content":"Step 9: Since the `AddCommand` can be called for different items in the program, such as `FoodList`,  `ExerciseList`, etc., `AddCommandParser` will first call the `extractItemTypePrefix` method from `ParserUtils`. ","lastModifiedDate":"2021-11-08"},{"lineNumber":319,"author":{"gitId":"tlyi"},"content":"Note that all methods from `ParserUtils` are static as `ParserUtils` is purely a utility class. This method will extract the item type prefix, which is the first parameter provided after the command word. In this case, `f` is extracted and returned to `AddCommandParser`.","lastModifiedDate":"2021-11-08"},{"lineNumber":320,"author":{"gitId":"tlyi"},"content":"If at this point the item type prefix extracted is not known to the program, an `InvalidCommand` will be created and returned immediately. ","lastModifiedDate":"2021-11-08"},{"lineNumber":321,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":322,"author":{"gitId":"tlyi"},"content":"Step 10: After determining that the `AddCommand` is to be performed on the `FoodList`, `AddCommandParser` will call its own method, `parseAddToFood`.","lastModifiedDate":"2021-11-08"},{"lineNumber":323,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":324,"author":{"gitId":"tlyi"},"content":"Step 11: Inside the method `parseAddToFood`, `AddCommandParser` will first call the method `hasExtraDelimiters` from `ParserUtils` to determine if there are extra `/` characters in the input, which would make it invalid. If yes, an `InvalidCommand` will be created and returned immediately.","lastModifiedDate":"2021-11-08"},{"lineNumber":325,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":326,"author":{"gitId":"tlyi"},"content":"Step 12: Then, `AddCommandParser` will call the relevant methods from `ParserUtils` to extract specific parameters. In this case, the methods `extractItemDescription`, `extractItemCalories` and `extractDateTime` are called.","lastModifiedDate":"2021-11-08"},{"lineNumber":327,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":328,"author":{"gitId":"tlyi"},"content":"Step 13: If all the parameters extracted are valid, then `AddCommandParser` will instantiate and initialise an `AddFoodCommand` object with the extracted details. Else, if any of the parameters are invalid, an `InvalidCommand` would be created and returned immediately.","lastModifiedDate":"2021-11-08"},{"lineNumber":329,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":330,"author":{"gitId":"tlyi"},"content":"Step 14: The instantiated `Command` object is then returned to `ParserManager`, which then returns it to `LogicManager`. In this case, `AddFoodCommand` is returned.","lastModifiedDate":"2021-11-08"},{"lineNumber":331,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":332,"author":{"gitId":"tlyi"},"content":"Step 15: `LogicManager` then calls the method `setData` on `AddFoodCommand` to provide it with the program\u0027s data. ","lastModifiedDate":"2021-11-08"},{"lineNumber":333,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":334,"author":{"gitId":"tlyi"},"content":"Step 16: `LogicManager` then calls the method `execute` on `AddFoodCommand` to perform the data manipulation process. For example, in this case, a food item will be added to the `FoodList`. The details of this process is not shown here, but can be seen in [this section](#add-a-food-item-feature).","lastModifiedDate":"2021-11-08"},{"lineNumber":335,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":336,"author":{"gitId":"tlyi"},"content":"Step 17: Finally, `AddFoodCommand` instantiates a `CommandResult` object representing the result of the execution. This `CommandResult` is then returned to `LogicManager`, which then returns it to `Main`. ","lastModifiedDate":"2021-11-08"},{"lineNumber":337,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":338,"author":{"gitId":"tryyang2001"},"content":"#### **Add a Food Item Feature**","lastModifiedDate":"2021-11-08"},{"lineNumber":339,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":340,"author":{"gitId":"tryyang2001"},"content":"\u003cp align\u003d\"center\" width\u003d\"100%\"\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":341,"author":{"gitId":"tryyang2001"},"content":"  \u003cimg width\u003d\"100%\" src\u003d\"images/AddFoodItemSequenceDiagram.png\" alt\u003d\"Add Food Item Sequence Diagram\"/\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":342,"author":{"gitId":"tryyang2001"},"content":"\u003c/p\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":343,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":344,"author":{"gitId":"tryyang2001"},"content":"The purpose of this feature is to allow the user to add food item to the food list. The above diagram shown is the ","lastModifiedDate":"2021-10-27"},{"lineNumber":345,"author":{"gitId":"xingjie99"},"content":"sequence diagram of the process of adding the food item. ","lastModifiedDate":"2021-10-27"},{"lineNumber":346,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":347,"author":{"gitId":"tryyang2001"},"content":"When the user gives an input, the `parser` from the `Logic` component will try to read the input, and then call the correct","lastModifiedDate":"2021-10-27"},{"lineNumber":348,"author":{"gitId":"tryyang2001"},"content":"command. In this case we assume that the correct format of **Add Food** input is given and the `AddFoodCommand` has already been","lastModifiedDate":"2021-11-06"},{"lineNumber":349,"author":{"gitId":"tryyang2001"},"content":"called and created.","lastModifiedDate":"2021-10-27"},{"lineNumber":350,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":351,"author":{"gitId":"tryyang2001"},"content":"Step 1: When the `execute` method in the `AddFoodCommand` is being called, it will first check that if the `calories` is equal to null. If this","lastModifiedDate":"2021-11-08"},{"lineNumber":352,"author":{"gitId":"tryyang2001"},"content":"condition is true, meaning that the user does not provide the calorie value of the food item, thus the item is expected to be found in the `FoodBank`.","lastModifiedDate":"2021-11-08"},{"lineNumber":353,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":354,"author":{"gitId":"tryyang2001"},"content":"Step 2: Once the calorie value is determined, whether from `FoodBank` or user input, the AddFoodCommand then call the constructor","lastModifiedDate":"2021-11-08"},{"lineNumber":355,"author":{"gitId":"tryyang2001"},"content":"of the `Food`. When the `Food` constructor is called, it will perform a [self-invocation](#_self-invocation_)`setTimePeriod` to set the enum value `timePeriod`","lastModifiedDate":"2021-11-08"},{"lineNumber":356,"author":{"gitId":"tryyang2001"},"content":"of the Food. After that, it returns the Food object to the `AddFoodCommand`.","lastModifiedDate":"2021-10-27"},{"lineNumber":357,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":358,"author":{"gitId":"tryyang2001"},"content":"Step 3: The newly created Food object `food` is checked if it has a valid calorie value by calling the method `isValid()` in `Food` class. This","lastModifiedDate":"2021-11-08"},{"lineNumber":359,"author":{"gitId":"tryyang2001"},"content":"method returns a boolean result `isValid` to `AddFoodCommand`. Then the program will enter an `alt` block which determines whether the `food` object","lastModifiedDate":"2021-11-08"},{"lineNumber":360,"author":{"gitId":"tryyang2001"},"content":"should be added to the `foodList`.","lastModifiedDate":"2021-11-08"},{"lineNumber":361,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":362,"author":{"gitId":"tryyang2001"},"content":"Step 4a: If the calorie value is invalid, the boolean `isValid` will be false. When this condition is satisfied, it will enter the first","lastModifiedDate":"2021-11-08"},{"lineNumber":363,"author":{"gitId":"tryyang2001"},"content":"alternative path, which then creates a `CommandResult` class object that contains the message to inform the user that the calorie value","lastModifiedDate":"2021-11-08"},{"lineNumber":364,"author":{"gitId":"tryyang2001"},"content":"is incorrect. In this path, no food item is added to the `foodList`. This `CommandResult` object is returned to the `AddFoodCommand`.","lastModifiedDate":"2021-11-08"},{"lineNumber":365,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":366,"author":{"gitId":"tryyang2001"},"content":"Step 4b: If the calorie value is valid, the boolean `isValid` is true, the `AddFoodCommand` will call the method `addItem` from the `FoodList` object, which performs the add food operation in the","lastModifiedDate":"2021-11-08"},{"lineNumber":367,"author":{"gitId":"tryyang2001"},"content":"`Food List`. After the new `Food` Item is added, it will perform a [self-invocation](#_self-invocation_) `sortList` to sort the `FoodList` according to ","lastModifiedDate":"2021-11-08"},{"lineNumber":368,"author":{"gitId":"tryyang2001"},"content":"the date and time of all the food items inside the list. Since the `addItem` method is void type, nothing is returned to `AddFoodCommand`.","lastModifiedDate":"2021-11-08"},{"lineNumber":369,"author":{"gitId":"tryyang2001"},"content":" After the `addItem` method is executed without giving any error, the `AddFoodCommand` then calls a `CommandResult` object that contains the message indicating the command is executed","lastModifiedDate":"2021-11-08"},{"lineNumber":370,"author":{"gitId":"tryyang2001"},"content":"successfully. This `CommandResult` object is returned to the `AddFoodCommand`.","lastModifiedDate":"2021-11-08"},{"lineNumber":371,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":372,"author":{"gitId":"tryyang2001"},"content":"Step 5: Once the `CommandResult` class object is returned, the `AddFoodCommand` then return this `commandResult` to the class that calls it. ","lastModifiedDate":"2021-11-08"},{"lineNumber":373,"author":{"gitId":"tryyang2001"},"content":"At this stage, the `AddFoodCommand` execution is successfully ended.","lastModifiedDate":"2021-11-08"},{"lineNumber":374,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":375,"author":{"gitId":"tryyang2001"},"content":"After all the steps are done, the objects of class `AddFoodCommand`, `Food` and `CommandResult` are no longer referenced and hence get removed","lastModifiedDate":"2021-11-08"},{"lineNumber":376,"author":{"gitId":"tryyang2001"},"content":"by the `Garbage Collector` in Java. However ,the lifeline of `foodBank` and `foodList` objects are still continuing because they","lastModifiedDate":"2021-10-30"},{"lineNumber":377,"author":{"gitId":"tryyang2001"},"content":"are created in `DataManager` class and have the potential to get referenced by other commands call such as `add`, `delete`, `view` and `edit`.","lastModifiedDate":"2021-11-08"},{"lineNumber":378,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":379,"author":{"gitId":"tryyang2001"},"content":"One may also observe that the lifeline does not end even though the object is deleted and no longer be referenced. This problem","lastModifiedDate":"2021-10-30"},{"lineNumber":380,"author":{"gitId":"tryyang2001"},"content":"is due to the flaw of the drawing tool, *PlantUml* used. For a more accurate sequence diagram, the lifeline should end immediately","lastModifiedDate":"2021-10-30"},{"lineNumber":381,"author":{"gitId":"tryyang2001"},"content":"once the object is no longer referenced.","lastModifiedDate":"2021-10-30"},{"lineNumber":382,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":383,"author":{"gitId":"tryyang2001"},"content":"#### **Design considerations:**","lastModifiedDate":"2021-11-08"},{"lineNumber":384,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":385,"author":{"gitId":"tryyang2001"},"content":"The current data structure used in `FoodList` is [Array List](#_array-list_). The rationale of choosing an array list implementation is because","lastModifiedDate":"2021-10-27"},{"lineNumber":386,"author":{"gitId":"tryyang2001"},"content":"it supports resizability and random accessibility. However, the drawback of such an array list is that sorting requires ","lastModifiedDate":"2021-10-27"},{"lineNumber":387,"author":{"gitId":"tryyang2001"},"content":"O(n\u003csup\u003e2\u003c/sup\u003e), which slows down the code efficiency. In the future increment, alternative data structures such as","lastModifiedDate":"2021-10-27"},{"lineNumber":388,"author":{"gitId":"tryyang2001"},"content":"[Priority Queue](#_priority-queue_) and [Min Heap](#_min-heap_) can be implemented to achieve O(logn) addition and they are","lastModifiedDate":"2021-10-28"},{"lineNumber":389,"author":{"gitId":"tryyang2001"},"content":"naturally sorted and thus no additional sorting required.","lastModifiedDate":"2021-10-27"},{"lineNumber":390,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":391,"author":{"gitId":"tryyang2001"},"content":"The same reasoning for the class `ItemBank`, which is the superclass of `FoodList` and `ExerciseList`,the current implementation","lastModifiedDate":"2021-10-27"},{"lineNumber":392,"author":{"gitId":"tryyang2001"},"content":"data structure is also an [Array List](#_array-list_). In the future increment, since the `ItemBank` need to perform query ","lastModifiedDate":"2021-10-27"},{"lineNumber":393,"author":{"gitId":"tryyang2001"},"content":"operation frequently and the items inside need to be sorted alphabetically, the data structure of the attribute will be changed ","lastModifiedDate":"2021-10-27"},{"lineNumber":394,"author":{"gitId":"tlyi"},"content":"to [TreeMap](#_tree-map_) to achieve O(logn) query time.","lastModifiedDate":"2021-11-07"},{"lineNumber":395,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":396,"author":{"gitId":"tlyi"},"content":"\u003cp align\u003d\"center\" width\u003d\"100%\"\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":397,"author":{"gitId":"tlyi"},"content":"  \u003cimg width\u003d\"60%\" src\u003d\"images/ItemBankCodeSnippet.png\" alt\u003d\"Item Bank Code Snippet\"/\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":398,"author":{"gitId":"tlyi"},"content":"\u003c/p\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":399,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":400,"author":{"gitId":"tryyang2001"},"content":"#### **[Proposed] Add a Recurring Exercise Feature**","lastModifiedDate":"2021-11-08"},{"lineNumber":401,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":402,"author":{"gitId":"xingjie99"},"content":"![Add Recurring Exercise Sequence Diagram](images/AddRecurringExerciseSequenceDiagram.png)","lastModifiedDate":"2021-10-27"},{"lineNumber":403,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":404,"author":{"gitId":"xingjie99"},"content":"The purpose of this feature is to allow the user to add recurring exercises to the future exercise list. The above diagram ","lastModifiedDate":"2021-10-27"},{"lineNumber":405,"author":{"gitId":"xingjie99"},"content":"is the sequence diagram of adding recurring exercises to the future exercise list, assuming that the user input satisfies the restrictions","lastModifiedDate":"2021-11-08"},{"lineNumber":406,"author":{"gitId":"xingjie99"},"content":"and does not cause any errors to be thrown.","lastModifiedDate":"2021-11-08"},{"lineNumber":407,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":408,"author":{"gitId":"xingjie99"},"content":"Step 1: The `parser` from the `Logic` component parses the input given by the user and calls the `execute` method in","lastModifiedDate":"2021-10-27"},{"lineNumber":409,"author":{"gitId":"xingjie99"},"content":"`AddRecurringExerciseCommand`. The condition `isCalorieFromBank` is checked to see if the user input any calories for","lastModifiedDate":"2021-10-27"},{"lineNumber":410,"author":{"gitId":"xingjie99"},"content":"the recurring exercise. If it is `true`, it means that no calories input is detected and the method ","lastModifiedDate":"2021-10-27"},{"lineNumber":411,"author":{"gitId":"xingjie99"},"content":"`getCaloriesOfItemWithMatchingName` in class `ItemBank` is called, and it will return an int value of `calories`.","lastModifiedDate":"2021-10-27"},{"lineNumber":412,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":413,"author":{"gitId":"xingjie99"},"content":"Step 2: Within `execute` method, `addRecurringItem` method in `FutureExerciseList` is also called. This method will ","lastModifiedDate":"2021-10-27"},{"lineNumber":414,"author":{"gitId":"xingjie99"},"content":"iteratively call the constructor for `Exercise` class and add the exercises into `FutureExerciseList` via the self-invocation","lastModifiedDate":"2021-10-27"},{"lineNumber":415,"author":{"gitId":"xingjie99"},"content":"`addItem` method. This iteration will end when all exercises on `dayOfTheWeek` between `startDate` and `endDate` are added.","lastModifiedDate":"2021-10-27"},{"lineNumber":416,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":417,"author":{"gitId":"xingjie99"},"content":"Step 3: After `addRecurringExercises` method is executed, `AddRecurringExerciseCommand` calls a `CommandResult` object.","lastModifiedDate":"2021-10-27"},{"lineNumber":418,"author":{"gitId":"xingjie99"},"content":"This object outputs a message and `AddRecurringExerciseCommand` will return `commandResult`, indicating that","lastModifiedDate":"2021-10-27"},{"lineNumber":419,"author":{"gitId":"xingjie99"},"content":"`AddRecurringExerciseCommand` is successfully executed and ended.","lastModifiedDate":"2021-10-27"},{"lineNumber":420,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":421,"author":{"gitId":"tryyang2001"},"content":"#### **Loading of Data On StartUp**","lastModifiedDate":"2021-11-08"},{"lineNumber":422,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":423,"author":{"gitId":"weidak"},"content":"There are many files that are used for our current implementation. ","lastModifiedDate":"2021-10-31"},{"lineNumber":424,"author":{"gitId":"weidak"},"content":"Therefore, since they are similar in behaviour and function, we will only be looking at the loading of the Profile component on the starting up of _Fitbot_.","lastModifiedDate":"2021-10-31"},{"lineNumber":425,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":426,"author":{"gitId":"weidak"},"content":"\u003cp align\u003d\"center\" width\u003d\"100%\"\u003e","lastModifiedDate":"2021-10-31"},{"lineNumber":427,"author":{"gitId":"weidak"},"content":"  \u003cimg width\u003d\"auto\" src\u003d\"images/StorageManagerLoadSequenceDiagram.png\" alt\u003d\"ProfileStorageLoadSequenceDiagram\"/\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":428,"author":{"gitId":"weidak"},"content":"\u003c/p\u003e","lastModifiedDate":"2021-10-31"},{"lineNumber":429,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":430,"author":{"gitId":"weidak"},"content":"Upon successful launch of the application, `Main` will call to initialize `StorageManager`. ","lastModifiedDate":"2021-10-31"},{"lineNumber":431,"author":{"gitId":"weidak"},"content":"This in turn initializes all the subclasses of `Storage`, including `ProfileStorage`, with their respective file paths. ","lastModifiedDate":"2021-10-31"},{"lineNumber":432,"author":{"gitId":"weidak"},"content":"Afterwhich, `Main` calls a loading function `loadAll` that calls an internal `loadProfile()` function (self-invocation). This then calls the `loadProfile()` method of `ProfileStorage`.","lastModifiedDate":"2021-11-08"},{"lineNumber":433,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":434,"author":{"gitId":"weidak"},"content":"`ProfileStorage` then does 2 main things: ","lastModifiedDate":"2021-11-08"},{"lineNumber":435,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":436,"author":{"gitId":"weidak"},"content":"1. Checks and creates the file if it is missing.","lastModifiedDate":"2021-10-31"},{"lineNumber":437,"author":{"gitId":"weidak"},"content":"2. Retrieves the data from the file with the use of the ProfileDecoder to decode.","lastModifiedDate":"2021-10-31"},{"lineNumber":438,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":439,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":440,"author":{"gitId":"weidak"},"content":"\u003cp align\u003d\"center\" width\u003d\"100%\"\u003e","lastModifiedDate":"2021-10-31"},{"lineNumber":441,"author":{"gitId":"weidak"},"content":"  \u003cimg width\u003d\"auto\" src\u003d\"images/ChecksForFileStorage.png\" alt\u003d\"ProfileStorageLoadSequenceDiagram\"/\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":442,"author":{"gitId":"weidak"},"content":"\u003c/p\u003e","lastModifiedDate":"2021-10-31"},{"lineNumber":443,"author":{"gitId":"weidak"},"content":"\u003cp align\u003d\"center\"\u003e\u003ci\u003eReference Diagram: Checks for the file and create directory if it does not exist\u003c/i\u003e\u003c/p\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":444,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":445,"author":{"gitId":"weidak"},"content":"The diagram above explains how the application checks if a file exists. If it exists, it will not perform any additional functionality. Otherwise, it will generate a new file in preparation for storage.","lastModifiedDate":"2021-11-05"},{"lineNumber":446,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":447,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":448,"author":{"gitId":"weidak"},"content":"\u003cp align\u003d\"center\" width\u003d\"100%\"\u003e","lastModifiedDate":"2021-10-31"},{"lineNumber":449,"author":{"gitId":"weidak"},"content":"  \u003cimg width\u003d\"auto\" src\u003d\"images/RetrieveDataFromStorage.png\" alt\u003d\"ProfileStorageLoadSequenceDiagram\"/\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":450,"author":{"gitId":"weidak"},"content":"\u003c/p\u003e","lastModifiedDate":"2021-10-31"},{"lineNumber":451,"author":{"gitId":"weidak"},"content":"\u003cp align\u003d\"center\"\u003e\u003ci\u003eReference Diagram: Retrieval of data from storage with the use of ProfileDecoder to decode\u003c/i\u003e\u003c/p\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":452,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":453,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":454,"author":{"gitId":"weidak"},"content":"The diagram above explains the processes to decode the items from the file.","lastModifiedDate":"2021-10-31"},{"lineNumber":455,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":456,"author":{"gitId":"weidak"},"content":"Upon reaching the `decodeProfile(line)` method, the reference frame depicts a process of decoding its attributes one by one to ensure that they are able to detect each attribute\u0027s readability from storage.","lastModifiedDate":"2021-11-07"},{"lineNumber":457,"author":{"gitId":"weidak"},"content":"If the methods are unable to read the respective attribute from storage, an invalid attribute will be initialized. This then returns an initialized profile with invalid attributes for `StartState` to catch, allowing users to change","lastModifiedDate":"2021-11-07"},{"lineNumber":458,"author":{"gitId":"weidak"},"content":"their attributes instead of losing their entire profile data on startup. ","lastModifiedDate":"2021-11-07"},{"lineNumber":459,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":460,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":461,"author":{"gitId":"weidak"},"content":"\u003cp align\u003d\"center\" width\u003d\"100%\"\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":462,"author":{"gitId":"weidak"},"content":"  \u003cimg width\u003d\"auto\" src\u003d\"images/DecodeAttributes.png\" alt\u003d\"ProfileStorageLoadSequenceDiagram\"/\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":463,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":464,"author":{"gitId":"weidak"},"content":"\u003c/p\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":465,"author":{"gitId":"weidak"},"content":"\u003cp align\u003d\"center\"\u003e\u003ci\u003eReference Diagram: Decode all attributes\u003c/i\u003e\u003c/p\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":466,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":467,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":468,"author":{"gitId":"weidak"},"content":"Below represents each of the attribute\u0027s decoding process:","lastModifiedDate":"2021-11-08"},{"lineNumber":469,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":470,"author":{"gitId":"weidak"},"content":"\u003cp align\u003d\"center\" width\u003d\"100%\"\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":471,"author":{"gitId":"weidak"},"content":"  \u003cimg width\u003d\"auto\" src\u003d\"images/DecodeName.png\" alt\u003d\"ProfileStorageLoadSequenceDiagram\"/\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":472,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":473,"author":{"gitId":"weidak"},"content":"\u003c/p\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":474,"author":{"gitId":"weidak"},"content":"\u003cp align\u003d\"center\"\u003e\u003ci\u003eReference Diagram: Decode Name\u003c/i\u003e\u003c/p\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":475,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":476,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":477,"author":{"gitId":"weidak"},"content":"\u003cp align\u003d\"center\" width\u003d\"100%\"\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":478,"author":{"gitId":"weidak"},"content":"  \u003cimg width\u003d\"auto\" src\u003d\"images/DecodeHeight.png\" alt\u003d\"ProfileStorageLoadSequenceDiagram\"/\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":479,"author":{"gitId":"weidak"},"content":"\u003c/p\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":480,"author":{"gitId":"weidak"},"content":"\u003cp align\u003d\"center\"\u003e\u003ci\u003eReference Diagram: Decode Height\u003c/i\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":481,"author":{"gitId":"weidak"},"content":"\u003c/p\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":482,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":483,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":484,"author":{"gitId":"weidak"},"content":"\u003cp align\u003d\"center\" width\u003d\"100%\"\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":485,"author":{"gitId":"weidak"},"content":"  \u003cimg width\u003d\"auto\" src\u003d\"images/DecodeWeight.png\" alt\u003d\"ProfileStorageLoadSequenceDiagram\"/\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":486,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":487,"author":{"gitId":"weidak"},"content":"\u003c/p\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":488,"author":{"gitId":"weidak"},"content":"\u003cp align\u003d\"center\"\u003e\u003ci\u003eReference Diagram: Decode Weight\u003c/i\u003e\u003c/p\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":489,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":490,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":491,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":492,"author":{"gitId":"weidak"},"content":"\u003cp align\u003d\"center\" width\u003d\"100%\"\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":493,"author":{"gitId":"weidak"},"content":"  \u003cimg width\u003d\"auto\" src\u003d\"images/DecodeGender.png\" alt\u003d\"ProfileStorageLoadSequenceDiagram\"/\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":494,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":495,"author":{"gitId":"weidak"},"content":"\u003c/p\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":496,"author":{"gitId":"weidak"},"content":"\u003cp align\u003d\"center\"\u003e\u003ci\u003eReference Diagram: Decode Gender\u003c/i\u003e\u003c/p\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":497,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":498,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":499,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":500,"author":{"gitId":"weidak"},"content":"\u003cp align\u003d\"center\" width\u003d\"100%\"\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":501,"author":{"gitId":"weidak"},"content":"  \u003cimg width\u003d\"auto\" src\u003d\"images/DecodeAge.png\" alt\u003d\"ProfileStorageLoadSequenceDiagram\"/\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":502,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":503,"author":{"gitId":"weidak"},"content":"\u003c/p\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":504,"author":{"gitId":"weidak"},"content":"\u003cp align\u003d\"center\"\u003e\u003ci\u003eReference Diagram: Decode Age\u003c/i\u003e\u003c/p\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":505,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":506,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":507,"author":{"gitId":"weidak"},"content":"\u003cp align\u003d\"center\" width\u003d\"100%\"\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":508,"author":{"gitId":"weidak"},"content":"  \u003cimg width\u003d\"auto\" src\u003d\"images/DecodeCalorieGoal.png\" alt\u003d\"ProfileStorageLoadSequenceDiagram\"/\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":509,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":510,"author":{"gitId":"weidak"},"content":"\u003c/p\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":511,"author":{"gitId":"weidak"},"content":"\u003cp align\u003d\"center\"\u003e\u003ci\u003eReference Diagram: Decode CalorieGoal\u003c/i\u003e\u003c/p\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":512,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":513,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":514,"author":{"gitId":"weidak"},"content":"\u003cp align\u003d\"center\" width\u003d\"100%\"\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":515,"author":{"gitId":"weidak"},"content":"  \u003cimg width\u003d\"auto\" src\u003d\"images/DecodeActivityFactor.png\" alt\u003d\"ProfileStorageLoadSequenceDiagram\"/\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":516,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":517,"author":{"gitId":"weidak"},"content":"\u003c/p\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":518,"author":{"gitId":"weidak"},"content":"\u003cp align\u003d\"center\"\u003e\u003ci\u003eReference Diagram: Decode ActivityFactor\u003c/i\u003e\u003c/p\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":519,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":520,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":521,"author":{"gitId":"weidak"},"content":"The other storages load in a similar fashion to this, except for each decoder, they decode `Item` for `ItemBank`s, `Food` for `FoodList` and `Exercise` for `ExerciseList`.","lastModifiedDate":"2021-11-08"},{"lineNumber":522,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":523,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":524,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":525,"author":{"gitId":"tryyang2001"},"content":"#### **Create Profile If Not Exist On Startup**","lastModifiedDate":"2021-11-08"},{"lineNumber":526,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":527,"author":{"gitId":"tttyyzzz"},"content":"When user first enters _Fitbot_, the profile of the user is not set up (attributes may not exist). If user were to ","lastModifiedDate":"2021-11-04"},{"lineNumber":528,"author":{"gitId":"tttyyzzz"},"content":"interact with the application, there might be incorrect output, ","lastModifiedDate":"2021-11-04"},{"lineNumber":529,"author":{"gitId":"tttyyzzz"},"content":"therefore the `checkAndCreateProfile()` is implemented to check whether the profile exist","lastModifiedDate":"2021-11-04"},{"lineNumber":530,"author":{"gitId":"tttyyzzz"},"content":"and if it does not exist, _Fitbot_ will guide user through to fill up the profile attributes.","lastModifiedDate":"2021-11-04"},{"lineNumber":531,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":532,"author":{"gitId":"tttyyzzz"},"content":"\u003cp align\u003d\"center\" width\u003d\"100%\"\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":533,"author":{"gitId":"tttyyzzz"},"content":"  \u003cimg width\u003d\"70%\" src\u003d\"images/CreateProfile.png\" alt\u003d\"CreateProfileDiagram\"/\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":534,"author":{"gitId":"tttyyzzz"},"content":"\u003c/p\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":535,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":536,"author":{"gitId":"tttyyzzz"},"content":"On startup, the main function will run `checkAndCreateProfile()` (not in diagram), which will cause StartState","lastModifiedDate":"2021-11-04"},{"lineNumber":537,"author":{"gitId":"tttyyzzz"},"content":"instance to be created by dataManager and run  `new StartState.checkAndCreateProfile()`.","lastModifiedDate":"2021-11-04"},{"lineNumber":538,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":539,"author":{"gitId":"tttyyzzz"},"content":"Step 1: the `checkAndCreateProfile()` will check if there is a profile exist, by checking all the attributes. ","lastModifiedDate":"2021-11-04"},{"lineNumber":540,"author":{"gitId":"tttyyzzz"},"content":"If all attributes are correct, the profile will be returned. If there is all the attributes are incorrect or there is no","lastModifiedDate":"2021-11-04"},{"lineNumber":541,"author":{"gitId":"tttyyzzz"},"content":"attribute in storage, the StartState will self invocate by calling `createProfile()`.","lastModifiedDate":"2021-11-04"},{"lineNumber":542,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":543,"author":{"gitId":"tttyyzzz"},"content":"Step 2: `createProfile()` will instantiate a new profile instance. Using a while loop to check whether all attributes","lastModifiedDate":"2021-11-04"},{"lineNumber":544,"author":{"gitId":"tttyyzzz"},"content":" have been updated, the `createProfile()` will ensure that all attributes in the new profile instance are valid before ","lastModifiedDate":"2021-11-04"},{"lineNumber":545,"author":{"gitId":"tttyyzzz"},"content":"proceeding to next step.","lastModifiedDate":"2021-11-04"},{"lineNumber":546,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":547,"author":{"gitId":"tttyyzzz"},"content":"Step 3: Once all the profile attributes are set up, it will store the profile attributes into storage, by calling ","lastModifiedDate":"2021-11-04"},{"lineNumber":548,"author":{"gitId":"tttyyzzz"},"content":"`saveProfile()` in StorageManager class. ","lastModifiedDate":"2021-11-04"},{"lineNumber":549,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":550,"author":{"gitId":"tttyyzzz"},"content":"Step 4: The StartState will replace the reference of old profile instance with the new profile instance","lastModifiedDate":"2021-11-04"},{"lineNumber":551,"author":{"gitId":"tttyyzzz"},"content":"(not shown in diagram).  Since the old profile instance is being dereferenced, it has reached the end of the lifeline,","lastModifiedDate":"2021-11-04"},{"lineNumber":552,"author":{"gitId":"tttyyzzz"},"content":"shown by a cross at its lifeline. The profile in the StartState will then be returned to the dataManager.","lastModifiedDate":"2021-11-04"},{"lineNumber":553,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":554,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":555,"author":{"gitId":"tryyang2001"},"content":"#### **Design Considerations**","lastModifiedDate":"2021-11-08"},{"lineNumber":556,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":557,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":558,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":559,"author":{"gitId":"tttyyzzz"},"content":"The purpose of replacing the new profile with the old profile is to ensure that if the new user decides to close the ","lastModifiedDate":"2021-11-04"},{"lineNumber":560,"author":{"gitId":"tttyyzzz"},"content":"program without finishing creating profile, the profile attributes keyed in by the user will not be saved. It will only ","lastModifiedDate":"2021-11-04"},{"lineNumber":561,"author":{"gitId":"tttyyzzz"},"content":"save all the profile attributes when all the attributes has been inputted by the user are present and valid.","lastModifiedDate":"2021-11-04"},{"lineNumber":562,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":563,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":564,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":565,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":566,"author":{"gitId":"tttyyzzz"},"content":"Note: Due to limitation of the uml diagram, the lifeline could not be deleted after the \u0027X\u0027.","lastModifiedDate":"2021-11-04"},{"lineNumber":567,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":568,"author":{"gitId":"tryyang2001"},"content":"## **Product scope**","lastModifiedDate":"2021-11-08"},{"lineNumber":569,"author":{"gitId":"tryyang2001"},"content":"### **Target user profile**","lastModifiedDate":"2021-11-08"},{"lineNumber":570,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":571,"author":{"gitId":"weidak"},"content":"University students who are looking to keep track of their calorie consumption and calorie outputs.","lastModifiedDate":"2021-10-21"},{"lineNumber":572,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":573,"author":{"gitId":"tryyang2001"},"content":"### **Value proposition**","lastModifiedDate":"2021-11-08"},{"lineNumber":574,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":575,"author":{"gitId":"weidak"},"content":"During these restricted COVID-19 times, we are confined to home-based learning. As a result, we tend to be less active and have fewer opportunities to stay active. This app aims to help you to gain or lose weight based on your goal of implementing a calorie deficit or calorie surplus.","lastModifiedDate":"2021-10-21"},{"lineNumber":576,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":577,"author":{"gitId":"weidak"},"content":"Its overview shows your progress over the weeks, indicating whether or not you have hit your daily calorie goal target for the past 7 days.","lastModifiedDate":"2021-10-21"},{"lineNumber":578,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":579,"author":{"gitId":"tryyang2001"},"content":"## **User Stories**","lastModifiedDate":"2021-11-08"},{"lineNumber":580,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":581,"author":{"gitId":"-"},"content":"|Version| As a ... | I want to ... | So that I can ...|","lastModifiedDate":"2020-05-24"},{"lineNumber":582,"author":{"gitId":"-"},"content":"|--------|----------|---------------|------------------|","lastModifiedDate":"2020-05-24"},{"lineNumber":583,"author":{"gitId":"-"},"content":"|v1.0|new user|see usage instructions|refer to them when I forget how to use the application|","lastModifiedDate":"2020-05-24"},{"lineNumber":584,"author":{"gitId":"tttyyzzz"},"content":"|v1.0|new user|want to store food records|track my food intake|","lastModifiedDate":"2021-10-22"},{"lineNumber":585,"author":{"gitId":"tttyyzzz"},"content":"|v1.0|new user|want to store exercise records| track my exercises|","lastModifiedDate":"2021-10-22"},{"lineNumber":586,"author":{"gitId":"tttyyzzz"},"content":"|v1.0|new user|delete exercise records| amend wrong inputs.|","lastModifiedDate":"2021-11-08"},{"lineNumber":587,"author":{"gitId":"tttyyzzz"},"content":"|v1.0|new user|delete food records| amend wrong inputs.|","lastModifiedDate":"2021-11-08"},{"lineNumber":588,"author":{"gitId":"tttyyzzz"},"content":"|v1.0|new user|to see how close or how far i am from the calorie target| so that I could manage my calorie input.|","lastModifiedDate":"2021-11-08"},{"lineNumber":589,"author":{"gitId":"tttyyzzz"},"content":"|v1.0|new user|save my profile data|reduce the hassle of typing repeatedly upon application startup.|","lastModifiedDate":"2021-11-08"},{"lineNumber":590,"author":{"gitId":"tttyyzzz"},"content":"|v1.0|new user|calculate BMI|gauge whether I am in the healthy range.|","lastModifiedDate":"2021-11-08"},{"lineNumber":591,"author":{"gitId":"tttyyzzz"},"content":"|v1.0|new user|store all records|refer to them whenever needed|","lastModifiedDate":"2021-10-22"},{"lineNumber":592,"author":{"gitId":"tttyyzzz"},"content":"|v2.0|new user|have a profile| to keep track of all information to calculate my net calories|","lastModifiedDate":"2021-10-22"},{"lineNumber":593,"author":{"gitId":"-"},"content":"|v2.0|user|find a to-do item by name|locate a to-do without having to go through the entire list|","lastModifiedDate":"2020-05-24"},{"lineNumber":594,"author":{"gitId":"tttyyzzz"},"content":"|v2.0|user|set up profile first before entering application|so that a more accurate analysis could be done.|","lastModifiedDate":"2021-11-08"},{"lineNumber":595,"author":{"gitId":"tttyyzzz"},"content":"|v2.0|user|have a summary|see my calorie targets","lastModifiedDate":"2021-10-22"},{"lineNumber":596,"author":{"gitId":"tttyyzzz"},"content":"|v2.0|user|have a history|spend less time typing all the requirements to store items|","lastModifiedDate":"2021-10-22"},{"lineNumber":597,"author":{"gitId":"tryyang2001"},"content":"|v2.0|user|have an exercise list that update itself|have more time for exercises|","lastModifiedDate":"2021-10-28"},{"lineNumber":598,"author":{"gitId":"tttyyzzz"},"content":"|v2.0|user|have a sorted food list|see what I have eaten on different times of the day|","lastModifiedDate":"2021-10-22"},{"lineNumber":599,"author":{"gitId":"tttyyzzz"},"content":"|v2.0|user|have varying inputs methods|reduce unnecessary hassle.|","lastModifiedDate":"2021-11-08"},{"lineNumber":600,"author":{"gitId":"tttyyzzz"},"content":"|v2.0|user|have a delete all command|start afresh|","lastModifiedDate":"2021-10-22"},{"lineNumber":601,"author":{"gitId":"tttyyzzz"},"content":"|v2.0|user|have sorted food list|view the meals I have eaten throughout the week.|","lastModifiedDate":"2021-11-08"},{"lineNumber":602,"author":{"gitId":"tttyyzzz"},"content":"|v2.0|user|have sorted food list by meal time|track the number of supper meals I have in a week.|","lastModifiedDate":"2021-11-08"},{"lineNumber":603,"author":{"gitId":"tttyyzzz"},"content":"|v2.0|frequent user|to have the ability to edit past records|so that I can edit past wrong inputs.|","lastModifiedDate":"2021-11-08"},{"lineNumber":604,"author":{"gitId":"tttyyzzz"},"content":"|v2.0|university student|to be able to store weekly recurring sports activities| I can reduce hassle of input entries.|","lastModifiedDate":"2021-11-08"},{"lineNumber":605,"author":{"gitId":"tryyang2001"},"content":"|v2.0|body-conscious user|to calculate net calories inclusive of BMR.|","lastModifiedDate":"2021-11-08"},{"lineNumber":606,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":607,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":608,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":609,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":610,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":611,"author":{"gitId":"tryyang2001"},"content":"## **Non-Functional Requirements**","lastModifiedDate":"2021-11-08"},{"lineNumber":612,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":613,"author":{"gitId":"weidak"},"content":"1. Should work on any OS as long as it has Java 11 or above installed on their PC.","lastModifiedDate":"2021-10-21"},{"lineNumber":614,"author":{"gitId":"weidak"},"content":"2. Should be able to hold up to at least a year of data without a slowdown of performance in daily use.","lastModifiedDate":"2021-10-21"},{"lineNumber":615,"author":{"gitId":"weidak"},"content":"3. Any user that is comfortable with typing of speeds \u003e55 words per minute would be able to accomplish these tasks faster than if they used a mouse to navigate.","lastModifiedDate":"2021-10-21"},{"lineNumber":616,"author":{"gitId":"tryyang2001"},"content":"## **Glossary**","lastModifiedDate":"2021-11-08"},{"lineNumber":617,"author":{"gitId":"tryyang2001"},"content":"#### _self invocation_","lastModifiedDate":"2021-10-28"},{"lineNumber":618,"author":{"gitId":"tryyang2001"},"content":"In UML sequence diagram, a method that does a calling to another of its own methods is called self-invocation. ","lastModifiedDate":"2021-10-27"},{"lineNumber":619,"author":{"gitId":"tryyang2001"},"content":"#### _array list_","lastModifiedDate":"2021-10-28"},{"lineNumber":620,"author":{"gitId":"tryyang2001"},"content":"A linear data structure that inherits Java `List` implementation and `Array` implementation. It behaves like a normal array,","lastModifiedDate":"2021-10-27"},{"lineNumber":621,"author":{"gitId":"tryyang2001"},"content":"except that it is resizable. Moreover, the amount of time taken for reallocation the elements when capacity grows is a constant","lastModifiedDate":"2021-10-27"},{"lineNumber":622,"author":{"gitId":"tryyang2001"},"content":"time. In Java, array list can be implemented using `ArrayList` in `Collection`.","lastModifiedDate":"2021-10-27"},{"lineNumber":623,"author":{"gitId":"tryyang2001"},"content":"#### _priority queue_","lastModifiedDate":"2021-10-28"},{"lineNumber":624,"author":{"gitId":"tryyang2001"},"content":"An abstract data type similar to a regular queue or stack data structure in which elements in priority queue are ordered","lastModifiedDate":"2021-10-27"},{"lineNumber":625,"author":{"gitId":"tryyang2001"},"content":"and have \"priority\" associated with each element. The priority can be defined by the coder. In the case of `FoodList`, the","lastModifiedDate":"2021-10-27"},{"lineNumber":626,"author":{"gitId":"tryyang2001"},"content":"priority will be defined as earlier date and time will have higher priority.","lastModifiedDate":"2021-10-27"},{"lineNumber":627,"author":{"gitId":"tryyang2001"},"content":"#### _min heap_","lastModifiedDate":"2021-10-28"},{"lineNumber":628,"author":{"gitId":"tryyang2001"},"content":"The implementation of min heap is almost the same as priority queue, in which it is sorted according to some \"priority\" ","lastModifiedDate":"2021-10-27"},{"lineNumber":629,"author":{"gitId":"tryyang2001"},"content":"constraint. In addition, a min heap can be modelled as a [binary tree](https://en.wikipedia.org/wiki/Binary_tree) structure","lastModifiedDate":"2021-10-30"},{"lineNumber":630,"author":{"gitId":"tryyang2001"},"content":"having all the parent nodes smaller or equal to its children nodes. ","lastModifiedDate":"2021-10-27"},{"lineNumber":631,"author":{"gitId":"tryyang2001"},"content":"#### _tree map_","lastModifiedDate":"2021-10-28"},{"lineNumber":632,"author":{"gitId":"tryyang2001"},"content":"A tree map is a combination of tree structure and hash map structure. In Java, tree map is implemented using a self-balancing","lastModifiedDate":"2021-10-27"},{"lineNumber":633,"author":{"gitId":"tryyang2001"},"content":"[Red-Black tree](https://www.geeksforgeeks.org/red-black-tree-set-1-introduction-2/) structure and it is sorted according","lastModifiedDate":"2021-10-27"},{"lineNumber":634,"author":{"gitId":"tryyang2001"},"content":"to the natural order of its keys. In the case of `ItemBank`, the key should be the String type of the `Item` description, ","lastModifiedDate":"2021-10-27"},{"lineNumber":635,"author":{"gitId":"tryyang2001"},"content":"which will be sorted lexicographically. \\","lastModifiedDate":"2021-10-27"},{"lineNumber":636,"author":{"gitId":"tryyang2001"},"content":"(more coming in the future...)","lastModifiedDate":"2021-10-21"},{"lineNumber":637,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":638,"author":{"gitId":"tryyang2001"},"content":"## **Instructions for manual testing**","lastModifiedDate":"2021-11-08"},{"lineNumber":639,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":640,"author":{"gitId":"tryyang2001"},"content":"Given below are some instructions that can be used to test the application manually. ","lastModifiedDate":"2021-10-28"},{"lineNumber":641,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":642,"author":{"gitId":"tryyang2001"},"content":"### **Launch**","lastModifiedDate":"2021-11-08"},{"lineNumber":643,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":644,"author":{"gitId":"tlyi"},"content":"1. Initial launch","lastModifiedDate":"2021-11-07"},{"lineNumber":645,"author":{"gitId":"tlyi"},"content":"   - Prerequisite: There is no Fitbot.jar file on your desktop.","lastModifiedDate":"2021-11-07"},{"lineNumber":646,"author":{"gitId":"tlyi"},"content":"   - Test case:","lastModifiedDate":"2021-11-07"},{"lineNumber":647,"author":{"gitId":"tlyi"},"content":"      1. Download the jar file and copy into an empty folder","lastModifiedDate":"2021-11-07"},{"lineNumber":648,"author":{"gitId":"tlyi"},"content":"      2. Go to your command prompt, and go into your directory.","lastModifiedDate":"2021-11-07"},{"lineNumber":649,"author":{"gitId":"tlyi"},"content":"      3. Run the command `java -jar Fitbot.jar`.","lastModifiedDate":"2021-11-07"},{"lineNumber":650,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":651,"author":{"gitId":"tlyi"},"content":"   Expected: a data folder will be created in the file that contain Fitbot.jar.","lastModifiedDate":"2021-11-07"},{"lineNumber":652,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":653,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":654,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":655,"author":{"gitId":"tryyang2001"},"content":"### **Setting Up Profile**","lastModifiedDate":"2021-11-08"},{"lineNumber":656,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":657,"author":{"gitId":"tttyyzzz"},"content":"1. Setting Up Profile I","lastModifiedDate":"2021-11-08"},{"lineNumber":658,"author":{"gitId":"tlyi"},"content":"   - Prerequisite: Fitbot.jar is in a folder with or without data folder.","lastModifiedDate":"2021-11-07"},{"lineNumber":659,"author":{"gitId":"tlyi"},"content":"   - Test case:","lastModifiedDate":"2021-11-07"},{"lineNumber":660,"author":{"gitId":"tlyi"},"content":"   1. Delete profile.txt from data folder if present.","lastModifiedDate":"2021-11-07"},{"lineNumber":661,"author":{"gitId":"tlyi"},"content":"   2. Run _Fitbot_ using `java -jar Fitbot.jar`.","lastModifiedDate":"2021-11-07"},{"lineNumber":662,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":663,"author":{"gitId":"tlyi"},"content":"   Expected: _Fitbot_will prompt for your name upon start up.","lastModifiedDate":"2021-11-07"},{"lineNumber":664,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":665,"author":{"gitId":"tttyyzzz"},"content":"2. Setting Up Profile II","lastModifiedDate":"2021-11-08"},{"lineNumber":666,"author":{"gitId":"tttyyzzz"},"content":"  - Prerequisite: profile.txt is present.","lastModifiedDate":"2021-11-08"},{"lineNumber":667,"author":{"gitId":"tttyyzzz"},"content":"  - Test case:","lastModifiedDate":"2021-11-08"},{"lineNumber":668,"author":{"gitId":"tttyyzzz"},"content":"    1. Change 1 of the attribute to an invalid attribute.","lastModifiedDate":"2021-11-08"},{"lineNumber":669,"author":{"gitId":"tttyyzzz"},"content":"    2. Run _Fitbot_ using `java -jar Fitbot.jar`.","lastModifiedDate":"2021-11-08"},{"lineNumber":670,"author":{"gitId":"tttyyzzz"},"content":"  Expected: _Fitbot_ will prompt for the attribute missing.","lastModifiedDate":"2021-11-08"},{"lineNumber":671,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":672,"author":{"gitId":"tttyyzzz"},"content":"3. Setting Up Profile III","lastModifiedDate":"2021-11-08"},{"lineNumber":673,"author":{"gitId":"tttyyzzz"},"content":"    - Prerequisite: profile.txt is deleted/ not present.","lastModifiedDate":"2021-11-08"},{"lineNumber":674,"author":{"gitId":"tttyyzzz"},"content":"    - Test case:","lastModifiedDate":"2021-11-08"},{"lineNumber":675,"author":{"gitId":"tttyyzzz"},"content":"   1. Fill in some of the profile attributes. Do not fill up all of them.","lastModifiedDate":"2021-11-08"},{"lineNumber":676,"author":{"gitId":"tttyyzzz"},"content":"   2. Type the command `bye`.","lastModifiedDate":"2021-11-08"},{"lineNumber":677,"author":{"gitId":"tttyyzzz"},"content":"   Expected: _Fitbot_ is able to exit.","lastModifiedDate":"2021-11-08"},{"lineNumber":678,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":679,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":680,"author":{"gitId":"tryyang2001"},"content":"### **Customising Profile**","lastModifiedDate":"2021-11-08"},{"lineNumber":681,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":682,"author":{"gitId":"weidak"},"content":"1. Viewing current profile:","lastModifiedDate":"2021-11-08"},{"lineNumber":683,"author":{"gitId":"weidak"},"content":"   1. Prerequisite: Have an initialized profile after the startup of the program","lastModifiedDate":"2021-11-08"},{"lineNumber":684,"author":{"gitId":"weidak"},"content":"   2. Test case: `profile`\\","lastModifiedDate":"2021-11-08"},{"lineNumber":685,"author":{"gitId":"weidak"},"content":"   Expected: Displays your profile in a viewable format","lastModifiedDate":"2021-11-08"},{"lineNumber":686,"author":{"gitId":"weidak"},"content":"2. Changing attributes:","lastModifiedDate":"2021-11-08"},{"lineNumber":687,"author":{"gitId":"weidak"},"content":"   1. Prerequisite: N.A.","lastModifiedDate":"2021-11-08"},{"lineNumber":688,"author":{"gitId":"weidak"},"content":"   2. Test case: `profile n/John|`\\","lastModifiedDate":"2021-11-08"},{"lineNumber":689,"author":{"gitId":"weidak"},"content":"   Expected: Name is not changed as the use of `|` character is illegal.","lastModifiedDate":"2021-11-08"},{"lineNumber":690,"author":{"gitId":"weidak"},"content":"   3. Test case: `profile n/John/`\\","lastModifiedDate":"2021-11-08"},{"lineNumber":691,"author":{"gitId":"weidak"},"content":"   Expected: Name is not changed as the use of `/` character is also illegal.","lastModifiedDate":"2021-11-08"},{"lineNumber":692,"author":{"gitId":"weidak"},"content":"   4. Test case: `profile h/-20` \\","lastModifiedDate":"2021-11-08"},{"lineNumber":693,"author":{"gitId":"weidak"},"content":"   Expected: An error message shows that you can only input a number between 1 and 300, and height will not change.","lastModifiedDate":"2021-11-08"},{"lineNumber":694,"author":{"gitId":"weidak"},"content":"   5. Test case: `profile w/-200` \\","lastModifiedDate":"2021-11-08"},{"lineNumber":695,"author":{"gitId":"weidak"},"content":"   Expected: An error message shows that you can only input a number between 1 and 300, and weight will not change.","lastModifiedDate":"2021-11-08"},{"lineNumber":696,"author":{"gitId":"weidak"},"content":"   6. Test case: `profile a/170`\\","lastModifiedDate":"2021-11-08"},{"lineNumber":697,"author":{"gitId":"weidak"},"content":"   Expected: An error message shows that you can only input a whole number between 10 and 150.","lastModifiedDate":"2021-11-08"},{"lineNumber":698,"author":{"gitId":"weidak"},"content":"   7. Test case: `profile s/mfe`\\","lastModifiedDate":"2021-11-08"},{"lineNumber":699,"author":{"gitId":"weidak"},"content":"   Expected: Error message displays that you should only use \u0027M\u0027 or \u0027F\u0027 only.","lastModifiedDate":"2021-11-08"},{"lineNumber":700,"author":{"gitId":"weidak"},"content":"   8. Test case: `profile g/20000`\\","lastModifiedDate":"2021-11-08"},{"lineNumber":701,"author":{"gitId":"weidak"},"content":"   Expected: Error message that displays that you can only input from -3000 to 10000.","lastModifiedDate":"2021-11-08"},{"lineNumber":702,"author":{"gitId":"weidak"},"content":"   9. Test case: `profile x/0`\\","lastModifiedDate":"2021-11-08"},{"lineNumber":703,"author":{"gitId":"weidak"},"content":"   Expected: Error message asking you to try a whole number from 1 to 5 instead.","lastModifiedDate":"2021-11-08"},{"lineNumber":704,"author":{"gitId":"weidak"},"content":"   10. Test case: `profile x/2 w/90 h/190 a/22 s/m g/500 n/Johnny English`\\","lastModifiedDate":"2021-11-08"},{"lineNumber":705,"author":{"gitId":"weidak"},"content":"   Expected: Profile will change even with the parameters not being in order. This allows users flexibility to change their attributes in any order and with whichever parameters they want. (At least 1 attribute and at max 7 attributes can be changed at once)","lastModifiedDate":"2021-11-08"},{"lineNumber":706,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":707,"author":{"gitId":"tryyang2001"},"content":"### **Recording Food Items:**","lastModifiedDate":"2021-11-08"},{"lineNumber":708,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":709,"author":{"gitId":"tryyang2001"},"content":"1. Adding a new Food Item when the Food List is empty:","lastModifiedDate":"2021-10-28"},{"lineNumber":710,"author":{"gitId":"tryyang2001"},"content":"   1. Prerequisite: Checks if the food list is empty using `view f/`. An output message showing that","lastModifiedDate":"2021-10-29"},{"lineNumber":711,"author":{"gitId":"tryyang2001"},"content":"   the current food list is empty is expected.","lastModifiedDate":"2021-10-28"},{"lineNumber":712,"author":{"gitId":"tryyang2001"},"content":"   2. Test case: `add f/chicken rice c/607` \\","lastModifiedDate":"2021-10-29"},{"lineNumber":713,"author":{"gitId":"tryyang2001"},"content":"   Expected: New Food Item is added to the Food List. A message telling the user that a new food item has been added will show up. ","lastModifiedDate":"2021-10-28"},{"lineNumber":714,"author":{"gitId":"tryyang2001"},"content":"   The date and time are the date and time when the user call this command.","lastModifiedDate":"2021-10-28"},{"lineNumber":715,"author":{"gitId":"tryyang2001"},"content":"   3. Test case: `add f/chicken rice c/607 d/10-10-2021 t/1200` \\","lastModifiedDate":"2021-10-29"},{"lineNumber":716,"author":{"gitId":"tryyang2001"},"content":"   Expected: No Food Item is added to the Food List. A message will show up and tell the user that ","lastModifiedDate":"2021-10-28"},{"lineNumber":717,"author":{"gitId":"tryyang2001"},"content":"   the date must be within 7 days of today.","lastModifiedDate":"2021-10-28"},{"lineNumber":718,"author":{"gitId":"tryyang2001"},"content":"   4. (more test cases )","lastModifiedDate":"2021-10-29"},{"lineNumber":719,"author":{"gitId":"tryyang2001"},"content":"2. Viewing a new Food Item:","lastModifiedDate":"2021-10-28"},{"lineNumber":720,"author":{"gitId":"tryyang2001"},"content":"   1. Test case: `view f/` when the Food List is empty\\","lastModifiedDate":"2021-10-29"},{"lineNumber":721,"author":{"gitId":"tryyang2001"},"content":"   Expected: No food item shown. ","lastModifiedDate":"2021-10-28"},{"lineNumber":722,"author":{"gitId":"tryyang2001"},"content":"   2. Test case: `view f/` after calling `add f/chicken rice c/607`\\","lastModifiedDate":"2021-10-30"},{"lineNumber":723,"author":{"gitId":"tryyang2001"},"content":"   Expected: The output will show the food list with at least one food item chicken rice, with calorie 607 cal and the date and ","lastModifiedDate":"2021-10-30"},{"lineNumber":724,"author":{"gitId":"tryyang2001"},"content":"   time is when the user called the `add` command.","lastModifiedDate":"2021-10-30"},{"lineNumber":725,"author":{"gitId":"tryyang2001"},"content":"   3. (more test cases)","lastModifiedDate":"2021-10-30"},{"lineNumber":726,"author":{"gitId":"tryyang2001"},"content":"3. Deleting Food Item:","lastModifiedDate":"2021-10-30"},{"lineNumber":727,"author":{"gitId":"tryyang2001"},"content":"    1. Prerequisite: Simply replace the date to any date that is within 7 days of today date. The time field is also optional","lastModifiedDate":"2021-10-30"},{"lineNumber":728,"author":{"gitId":"tryyang2001"},"content":"   and can be replaced with any valid timing.","lastModifiedDate":"2021-10-30"},{"lineNumber":729,"author":{"gitId":"tryyang2001"},"content":"    2. Test case: `delete f/1 d/08-11-2021 t/1400` when the Food List is empty\\","lastModifiedDate":"2021-10-30"},{"lineNumber":730,"author":{"gitId":"tryyang2001"},"content":"   Expected: No food item is deleted. The output will show a message telling the user that the Food List is empty.","lastModifiedDate":"2021-10-30"},{"lineNumber":731,"author":{"gitId":"tryyang2001"},"content":"    3. Test case: `delete f/1 d/09-11-2021 t/1400` after calling `add f/chicken rice c/607 d/09-11-2021 t/1400`\\","lastModifiedDate":"2021-10-30"},{"lineNumber":732,"author":{"gitId":"tryyang2001"},"content":"   Expected:  The food item with index 1 is removed. The output will show a message teling the user that the food item","lastModifiedDate":"2021-10-30"},{"lineNumber":733,"author":{"gitId":"tryyang2001"},"content":"   is deleted. (Note that the food item will be `chicken rice` if there is only one food in the food list)","lastModifiedDate":"2021-10-30"},{"lineNumber":734,"author":{"gitId":"tryyang2001"},"content":"    4. Test case: `delete f/-1 d/09-11-2021 t/1400`\\","lastModifiedDate":"2021-10-30"},{"lineNumber":735,"author":{"gitId":"tryyang2001"},"content":"   Expected: No food item is deleted. The output will show a message telling the user that the input index should be a","lastModifiedDate":"2021-10-30"},{"lineNumber":736,"author":{"gitId":"tryyang2001"},"content":"   number that is greater than 0.","lastModifiedDate":"2021-10-30"},{"lineNumber":737,"author":{"gitId":"tryyang2001"},"content":"    5. (more test cases)","lastModifiedDate":"2021-10-30"},{"lineNumber":738,"author":{"gitId":"tlyi"},"content":"    ","lastModifiedDate":"2021-10-22"},{"lineNumber":739,"author":{"gitId":"tryyang2001"},"content":"### **Recording Exercise Items**","lastModifiedDate":"2021-11-08"},{"lineNumber":740,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":741,"author":{"gitId":"xingjie99"},"content":"1. Adding Exercise Items","lastModifiedDate":"2021-11-08"},{"lineNumber":742,"author":{"gitId":"xingjie99"},"content":"    1. Prerequisite: View the current Exercise List using `view e/`.","lastModifiedDate":"2021-11-08"},{"lineNumber":743,"author":{"gitId":"xingjie99"},"content":"    2. Test case: `add e/running c/200` \\","lastModifiedDate":"2021-11-08"},{"lineNumber":744,"author":{"gitId":"xingjie99"},"content":"       Expected: A new Exercise Item is added to the Exercise List. Details of the added exercise are shown.","lastModifiedDate":"2021-11-08"},{"lineNumber":745,"author":{"gitId":"xingjie99"},"content":"       The date of the exercise is the date when the user calls this command.","lastModifiedDate":"2021-11-08"},{"lineNumber":746,"author":{"gitId":"xingjie99"},"content":"    3. Test case: `add e/running c/200 d/x` (where x is a date in DD-MM-YYYY format and within the past 7 days of today) \\","lastModifiedDate":"2021-11-08"},{"lineNumber":747,"author":{"gitId":"xingjie99"},"content":"       Expected: A new Exercise Item is added to the Exercise List. Details of the added exercise are shown.","lastModifiedDate":"2021-11-08"},{"lineNumber":748,"author":{"gitId":"xingjie99"},"content":"       The date of the exercise is the date that the user input.","lastModifiedDate":"2021-11-08"},{"lineNumber":749,"author":{"gitId":"xingjie99"},"content":"    4. Test case: `add e/running c/200 d/x` (where x is a date in DD-MM-YYYY format and not within the past 7 days of today) \\","lastModifiedDate":"2021-11-08"},{"lineNumber":750,"author":{"gitId":"xingjie99"},"content":"       Expected: No Exercise Item is added to the Exercise List. Error message will show up and inform the user that","lastModifiedDate":"2021-11-08"},{"lineNumber":751,"author":{"gitId":"xingjie99"},"content":"       a valid date within 7 days of today is required.","lastModifiedDate":"2021-11-08"},{"lineNumber":752,"author":{"gitId":"xingjie99"},"content":"2. Viewing Exercise Items","lastModifiedDate":"2021-11-08"},{"lineNumber":753,"author":{"gitId":"xingjie99"},"content":"    1. Test case: `view e/` when the Exercise List is empty\\","lastModifiedDate":"2021-11-08"},{"lineNumber":754,"author":{"gitId":"xingjie99"},"content":"       Expected: Message indicating that the Exercise List is empty is shown.","lastModifiedDate":"2021-11-08"},{"lineNumber":755,"author":{"gitId":"xingjie99"},"content":"    2. Test case: `view e/` when the Exercise List is not empty\\","lastModifiedDate":"2021-11-08"},{"lineNumber":756,"author":{"gitId":"xingjie99"},"content":"       Expected: All of the Exercise Items are displayed.","lastModifiedDate":"2021-11-08"},{"lineNumber":757,"author":{"gitId":"xingjie99"},"content":"3. Deleting Exercise Items","lastModifiedDate":"2021-11-08"},{"lineNumber":758,"author":{"gitId":"xingjie99"},"content":"    1. Prerequisite: View the current Exercise List using `view e/`.","lastModifiedDate":"2021-11-08"},{"lineNumber":759,"author":{"gitId":"xingjie99"},"content":"    2. Test case: `delete e/1 d/x` when the Exercise List is empty (where x is a date in DD-MM-YYYY format and within 7 days of today)\\","lastModifiedDate":"2021-11-08"},{"lineNumber":760,"author":{"gitId":"xingjie99"},"content":"       Expected: No Exercise Item is deleted from the Exercise List. Error message will show up and inform the user that","lastModifiedDate":"2021-11-08"},{"lineNumber":761,"author":{"gitId":"xingjie99"},"content":"       the Exercise List is empty.","lastModifiedDate":"2021-11-08"},{"lineNumber":762,"author":{"gitId":"xingjie99"},"content":"    3. Test case: `delete e/1 d/x` when the Exercise List contains at least one exercise with date x (where x is a date in DD-MM-YYYY format)\\","lastModifiedDate":"2021-11-08"},{"lineNumber":763,"author":{"gitId":"xingjie99"},"content":"       Expected:  The Exercise Item with index 1 is deleted. Details of the deleted exercise are shown.","lastModifiedDate":"2021-11-08"},{"lineNumber":764,"author":{"gitId":"xingjie99"},"content":"    4. Test case: `delete e/2 d/x`\\ when the Exercise List contains only one exercise with date x (where x is a date in DD-MM-YYYY format)\\","lastModifiedDate":"2021-11-08"},{"lineNumber":765,"author":{"gitId":"xingjie99"},"content":"       Expected: No Exercise Item is deleted from the Exercise List. Error message will show up and inform the user that","lastModifiedDate":"2021-11-08"},{"lineNumber":766,"author":{"gitId":"xingjie99"},"content":"       the Exercise Item with index 2 on date x is not found in the Exercise List.","lastModifiedDate":"2021-11-08"},{"lineNumber":767,"author":{"gitId":"xingjie99"},"content":"    5. Test case: `delete e/all` \\","lastModifiedDate":"2021-11-08"},{"lineNumber":768,"author":{"gitId":"xingjie99"},"content":"       Expected:  All Exercise Item in the Exercise List are deleted. Message will show up and inform the user that all exercises","lastModifiedDate":"2021-11-08"},{"lineNumber":769,"author":{"gitId":"xingjie99"},"content":"       in the Exercise List are deleted.","lastModifiedDate":"2021-11-08"},{"lineNumber":770,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":771,"author":{"gitId":"tryyang2001"},"content":"### **Scheduling Exercises**","lastModifiedDate":"2021-11-08"},{"lineNumber":772,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":773,"author":{"gitId":"xingjie99"},"content":"1. Adding Upcoming Exercise Items","lastModifiedDate":"2021-11-08"},{"lineNumber":774,"author":{"gitId":"xingjie99"},"content":"    1. Prerequisite: View the current Upcoming Exercise List using `view u/`.","lastModifiedDate":"2021-11-08"},{"lineNumber":775,"author":{"gitId":"xingjie99"},"content":"    2. Test case: `add e/running c/200 d/x` (where x is a date in DD-MM-YYYY format and one year within the future) \\","lastModifiedDate":"2021-11-08"},{"lineNumber":776,"author":{"gitId":"xingjie99"},"content":"       Expected: A new Upcoming Exercise Item is added to the Upcoming Exercise List. Details of the added upcoming exercise are shown.","lastModifiedDate":"2021-11-08"},{"lineNumber":777,"author":{"gitId":"xingjie99"},"content":"    3. Test case: `add e/running c/200 d/x` (where x is a date in DD-MM-YYYY format and more than one year in the future) \\","lastModifiedDate":"2021-11-08"},{"lineNumber":778,"author":{"gitId":"xingjie99"},"content":"       Expected: No Upcoming Exercise Item is added to the Upcoming Exercise List. Error message will show up and inform the user that","lastModifiedDate":"2021-11-08"},{"lineNumber":779,"author":{"gitId":"xingjie99"},"content":"       a valid future date within one year from today is required.","lastModifiedDate":"2021-11-08"},{"lineNumber":780,"author":{"gitId":"xingjie99"},"content":"2. Adding Recurring Exercise Items","lastModifiedDate":"2021-11-08"},{"lineNumber":781,"author":{"gitId":"xingjie99"},"content":"    1. Prerequisite: View the current Upcoming Exercise List using `view u/`.","lastModifiedDate":"2021-11-08"},{"lineNumber":782,"author":{"gitId":"xingjie99"},"content":"    2. Test case: `add r/running c/200 :/x -/y @/1,3 ` when y occurs after x (where x and y are dates in DD-MM-YYYY format and both one year within the future) \\","lastModifiedDate":"2021-11-08"},{"lineNumber":783,"author":{"gitId":"xingjie99"},"content":"       Expected: Upcoming Exercise Items that occur on Monday and Wednesday (`@/1,3`) between date x and y are added to the Upcoming Exercise List. ","lastModifiedDate":"2021-11-08"},{"lineNumber":784,"author":{"gitId":"xingjie99"},"content":"       A message, indicating that the recurring exercises have been added, will show up.","lastModifiedDate":"2021-11-08"},{"lineNumber":785,"author":{"gitId":"xingjie99"},"content":"    3. Test case: `add r/running c/200 :/x -/y @/1,3 ` when x occurs after y (where x and y are dates in DD-MM-YYYY format) \\","lastModifiedDate":"2021-11-08"},{"lineNumber":786,"author":{"gitId":"xingjie99"},"content":"       Expected: No Upcoming Exercise Item is added to the Upcoming Exercise List. Error message will show up and inform the user that","lastModifiedDate":"2021-11-08"},{"lineNumber":787,"author":{"gitId":"xingjie99"},"content":"       y should occur after x.","lastModifiedDate":"2021-11-08"},{"lineNumber":788,"author":{"gitId":"xingjie99"},"content":"    4. Test case: `add r/running c/200 :/x -/y @/1,3 ` when y occurs after x (where x and y are dates in DD-MM-YYYY format and one or more of them are more than one year in the future) \\","lastModifiedDate":"2021-11-08"},{"lineNumber":789,"author":{"gitId":"xingjie99"},"content":"       Expected: No Upcoming Exercise Item is added to the Upcoming Exercise List. Error message will show up and inform the user that","lastModifiedDate":"2021-11-08"},{"lineNumber":790,"author":{"gitId":"xingjie99"},"content":"       both x and y should be within one year in the future.","lastModifiedDate":"2021-11-08"},{"lineNumber":791,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":792,"author":{"gitId":"xingjie99"},"content":"3. Viewing Upcoming Exercise Items","lastModifiedDate":"2021-11-08"},{"lineNumber":793,"author":{"gitId":"xingjie99"},"content":"    1. Test case: `view u/` when the Upcoming Exercise List is empty\\","lastModifiedDate":"2021-11-08"},{"lineNumber":794,"author":{"gitId":"xingjie99"},"content":"       Expected: Message indicating that the Upcoming Exercise List is empty is shown.","lastModifiedDate":"2021-11-08"},{"lineNumber":795,"author":{"gitId":"xingjie99"},"content":"    2. Test case: `view u/` when the Upcoming Exercise List is not empty\\","lastModifiedDate":"2021-11-08"},{"lineNumber":796,"author":{"gitId":"xingjie99"},"content":"       Expected: All of the Upcoming Exercise Items are displayed.","lastModifiedDate":"2021-11-08"},{"lineNumber":797,"author":{"gitId":"xingjie99"},"content":"4. Editing Upcoming Exercise Items","lastModifiedDate":"2021-11-08"},{"lineNumber":798,"author":{"gitId":"xingjie99"},"content":"    1. Prerequisite: View the current Upcoming Exercise List using `view u/`.","lastModifiedDate":"2021-11-08"},{"lineNumber":799,"author":{"gitId":"xingjie99"},"content":"    2. Test case: `edit u/` \\","lastModifiedDate":"2021-11-08"},{"lineNumber":800,"author":{"gitId":"xingjie99"},"content":"       Expected: No Upcoming Exercise Item is edited. Error message will show up and inform the user that there should be an input for item number.","lastModifiedDate":"2021-11-08"},{"lineNumber":801,"author":{"gitId":"xingjie99"},"content":"    3. Test case: `edit u/1` \\","lastModifiedDate":"2021-11-08"},{"lineNumber":802,"author":{"gitId":"xingjie99"},"content":"       Expected: No Upcoming Exercise Item is edited. Error message will show up and inform the user that there should be an input for the details to be edited.","lastModifiedDate":"2021-11-08"},{"lineNumber":803,"author":{"gitId":"xingjie99"},"content":"    4. Test case: `edit u/1 n/runnning` when the Upcoming Exercise List is empty","lastModifiedDate":"2021-11-08"},{"lineNumber":804,"author":{"gitId":"xingjie99"},"content":"       Expected: No Upcoming Exercise Item is edited. Error message will show up and inform the user that the Upcoming Exercise List is empty.","lastModifiedDate":"2021-11-08"},{"lineNumber":805,"author":{"gitId":"xingjie99"},"content":"    5. Test case: `edit u/1 n/running` when the Upcoming Exercise List is not empty","lastModifiedDate":"2021-11-08"},{"lineNumber":806,"author":{"gitId":"xingjie99"},"content":"       Expected: The name of the Upcoming Exercise List with index 1 in the Upcoming Exercise List is updated to \u0027running\u0027. Details of the newly updated Upcoming Exercise Item will be shown.","lastModifiedDate":"2021-11-08"},{"lineNumber":807,"author":{"gitId":"xingjie99"},"content":"5. Deleting Upcoming Exercise Items","lastModifiedDate":"2021-11-08"},{"lineNumber":808,"author":{"gitId":"xingjie99"},"content":"    1. Prerequisite: View the current Exercise List using `view u/`.","lastModifiedDate":"2021-11-08"},{"lineNumber":809,"author":{"gitId":"xingjie99"},"content":"    2. Test case: `delete u/1` when the Exercise List is empty\\","lastModifiedDate":"2021-11-08"},{"lineNumber":810,"author":{"gitId":"xingjie99"},"content":"       Expected: No Upcoming Exercise Item is deleted from the Upcoming Exercise List. Error message will show up and inform the user that","lastModifiedDate":"2021-11-08"},{"lineNumber":811,"author":{"gitId":"xingjie99"},"content":"       the Upcoming Exercise List is empty.","lastModifiedDate":"2021-11-08"},{"lineNumber":812,"author":{"gitId":"xingjie99"},"content":"    3. Test case: `delete u/1` when the Upcoming Exercise List contains at least one upcoming exercise\\","lastModifiedDate":"2021-11-08"},{"lineNumber":813,"author":{"gitId":"xingjie99"},"content":"       Expected:  The Upcoming Exercise Item with index 1 is deleted. Details of the deleted upcoming exercise are shown.","lastModifiedDate":"2021-11-08"},{"lineNumber":814,"author":{"gitId":"xingjie99"},"content":"    4. Test case: `delete u/1,2,3` when the Exercise List contains three or more exercises\\","lastModifiedDate":"2021-11-08"},{"lineNumber":815,"author":{"gitId":"xingjie99"},"content":"       Expected: The Upcoming Exercise Items with index 1, 2, 3 are deleted. Details of all the deleted upcoming exercises are shown.","lastModifiedDate":"2021-11-08"},{"lineNumber":816,"author":{"gitId":"xingjie99"},"content":"    5. Test case: `delete u/all` \\","lastModifiedDate":"2021-11-08"},{"lineNumber":817,"author":{"gitId":"xingjie99"},"content":"       Expected:  All Upcoming Exercise Items in the Upcoming Exercise List are deleted. Message will show up and inform the user that all upcoming exercises","lastModifiedDate":"2021-11-08"},{"lineNumber":818,"author":{"gitId":"xingjie99"},"content":"       in the Upcoming Exercise List are deleted.","lastModifiedDate":"2021-11-08"},{"lineNumber":819,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":820,"author":{"gitId":"tryyang2001"},"content":"### **Building Food Bank**","lastModifiedDate":"2021-11-08"},{"lineNumber":821,"author":{"gitId":"tlyi"},"content":"1. Adding Food Bank Items","lastModifiedDate":"2021-11-07"},{"lineNumber":822,"author":{"gitId":"tlyi"},"content":"   1. Prerequisite: Food Bank does not contain a Food Item with the name \"potato\".","lastModifiedDate":"2021-11-07"},{"lineNumber":823,"author":{"gitId":"tlyi"},"content":"   2. Test case: `add fbank/potato` \\","lastModifiedDate":"2021-11-07"},{"lineNumber":824,"author":{"gitId":"tlyi"},"content":"      Expected: Error as the item\u0027s calorie details were not provided. ","lastModifiedDate":"2021-11-07"},{"lineNumber":825,"author":{"gitId":"tlyi"},"content":"   3. Test case: `add fbank/potato c/250`\\","lastModifiedDate":"2021-11-07"},{"lineNumber":826,"author":{"gitId":"tlyi"},"content":"      Expected: Food Item with name \u0027potato\u0027 and calories \u0027250\u0027 has been added to Food Bank.","lastModifiedDate":"2021-11-07"},{"lineNumber":827,"author":{"gitId":"tlyi"},"content":"   4. Test case: `add f/potato` \\","lastModifiedDate":"2021-11-07"},{"lineNumber":828,"author":{"gitId":"tlyi"},"content":"      Expected: Food Item with name \u0027potato\u0027 and calories \u0027250\u0027 has been added to Food List. User no longer has","lastModifiedDate":"2021-11-07"},{"lineNumber":829,"author":{"gitId":"tlyi"},"content":"      to provide the calorie details for \u0027potato\u0027 as it can be retrieved from the Food Bank.","lastModifiedDate":"2021-11-07"},{"lineNumber":830,"author":{"gitId":"tlyi"},"content":"   5. Test case: `add fbank/potato c/300`\\","lastModifiedDate":"2021-11-07"},{"lineNumber":831,"author":{"gitId":"tlyi"},"content":"      Expected: Error as the name \"potato\" already exists in the Food Bank, and all names in the Food Bank need to be unique.","lastModifiedDate":"2021-11-07"},{"lineNumber":832,"author":{"gitId":"tlyi"},"content":"2. Viewing Food Bank Items ","lastModifiedDate":"2021-11-07"},{"lineNumber":833,"author":{"gitId":"tlyi"},"content":"   1. Test case: `view fbank/` \\","lastModifiedDate":"2021-11-07"},{"lineNumber":834,"author":{"gitId":"tlyi"},"content":"      Expected: Shows the list of Food Items in the Food Bank.","lastModifiedDate":"2021-11-07"},{"lineNumber":835,"author":{"gitId":"tlyi"},"content":"   2. Test case: `view fbank/a` \\","lastModifiedDate":"2021-11-07"},{"lineNumber":836,"author":{"gitId":"tlyi"},"content":"      Expected: Invalid format. The command word `view` must be followed by `fbank/` exactly.","lastModifiedDate":"2021-11-07"},{"lineNumber":837,"author":{"gitId":"tlyi"},"content":"3. Editing Food Bank Items","lastModifiedDate":"2021-11-07"},{"lineNumber":838,"author":{"gitId":"tlyi"},"content":"   1. Prerequisite: Food Bank contains at least one Item. To find the index of the Item you want to edit, use `view fbank/`.","lastModifiedDate":"2021-11-07"},{"lineNumber":839,"author":{"gitId":"tlyi"},"content":"   2. Test case: `edit fbank/` \\","lastModifiedDate":"2021-11-07"},{"lineNumber":840,"author":{"gitId":"tlyi"},"content":"      Expected: Error as there is no input for item number.","lastModifiedDate":"2021-11-07"},{"lineNumber":841,"author":{"gitId":"tlyi"},"content":"   3. Test case: `edit fbank/1` \\","lastModifiedDate":"2021-11-07"},{"lineNumber":842,"author":{"gitId":"tlyi"},"content":"      Expected: Error as you need to specify what to edit about this Item.","lastModifiedDate":"2021-11-07"},{"lineNumber":843,"author":{"gitId":"tlyi"},"content":"   4. Test case: `edit fbank/1 n/tomato` \\","lastModifiedDate":"2021-11-07"},{"lineNumber":844,"author":{"gitId":"tlyi"},"content":"      Expected: Item number 1 in the Food Bank has been changed to \u0027tomato\u0027 (provided that you do not already have an Item named \u0027tomato\u0027 in the Food Bank).","lastModifiedDate":"2021-11-07"},{"lineNumber":845,"author":{"gitId":"tlyi"},"content":"4. Deleting Food Bank Items","lastModifiedDate":"2021-11-07"},{"lineNumber":846,"author":{"gitId":"tlyi"},"content":"   1. Prerequisite: Food Bank contains at least 3 Items. To find the index of the Item you want to delete, use `view fbank/`.","lastModifiedDate":"2021-11-07"},{"lineNumber":847,"author":{"gitId":"tlyi"},"content":"   2. Test case: `delete fbank/1,2` \\","lastModifiedDate":"2021-11-07"},{"lineNumber":848,"author":{"gitId":"tlyi"},"content":"      Expected: Food Bank Items 1 and 2 have been deleted.","lastModifiedDate":"2021-11-07"},{"lineNumber":849,"author":{"gitId":"tlyi"},"content":"   3. Test case: `delete fbank/1` \\","lastModifiedDate":"2021-11-07"},{"lineNumber":850,"author":{"gitId":"tlyi"},"content":"      Expected: Food Bank Item 1 has been deleted.","lastModifiedDate":"2021-11-07"},{"lineNumber":851,"author":{"gitId":"tlyi"},"content":"   4. Test case: `delete fbank/x`, where x is any number bigger than the size of the list. \\","lastModifiedDate":"2021-11-07"},{"lineNumber":852,"author":{"gitId":"tlyi"},"content":"      Expected: Error as x is out of the range of the item list.","lastModifiedDate":"2021-11-07"},{"lineNumber":853,"author":{"gitId":"tlyi"},"content":"   5. Test case: `delete fbank/all` \\","lastModifiedDate":"2021-11-07"},{"lineNumber":854,"author":{"gitId":"tlyi"},"content":"      Expected: All items in the Food Bank have been deleted.","lastModifiedDate":"2021-11-07"},{"lineNumber":855,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":856,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":857,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":858,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":859,"author":{"gitId":"tryyang2001"},"content":"### **Building Exercise Bank**","lastModifiedDate":"2021-11-08"},{"lineNumber":860,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":861,"author":{"gitId":"tlyi"},"content":"1. Adding Exercise Bank Items","lastModifiedDate":"2021-11-08"},{"lineNumber":862,"author":{"gitId":"tlyi"},"content":"    1. Prerequisite: Exercise Bank does not contain a Exercise Item with the name \"30 mins jogging\".","lastModifiedDate":"2021-11-08"},{"lineNumber":863,"author":{"gitId":"tlyi"},"content":"    2. Test case: `add ebank/30 mins jogging` \\","lastModifiedDate":"2021-11-08"},{"lineNumber":864,"author":{"gitId":"tlyi"},"content":"       Expected: Error as the item\u0027s calorie details were not provided.","lastModifiedDate":"2021-11-08"},{"lineNumber":865,"author":{"gitId":"tlyi"},"content":"    3. Test case: `add ebank/30 mins jogging c/500`\\","lastModifiedDate":"2021-11-08"},{"lineNumber":866,"author":{"gitId":"tlyi"},"content":"       Expected: Exercise Item with name \u002730 mins jogging\u0027 and calories \u0027500\u0027 has been added to Exercise Bank.","lastModifiedDate":"2021-11-08"},{"lineNumber":867,"author":{"gitId":"tlyi"},"content":"    4. Test case: `add e/30 Mins Jogging` \\","lastModifiedDate":"2021-11-08"},{"lineNumber":868,"author":{"gitId":"tlyi"},"content":"       Expected: Exercise Item with name \u002730 Mins Jogging\u0027 and calories \u0027500\u0027 has been added to Food List. User no longer has","lastModifiedDate":"2021-11-08"},{"lineNumber":869,"author":{"gitId":"tlyi"},"content":"       to provide the calorie details for \u002730 Mins Jogging\u0027 as it can be retrieved from the Exercise Bank, since the match for item name in the Item Banks is case-insensitive.","lastModifiedDate":"2021-11-08"},{"lineNumber":870,"author":{"gitId":"tlyi"},"content":"    5. Test case: `add ebank/30 mins jogging c/300`\\","lastModifiedDate":"2021-11-08"},{"lineNumber":871,"author":{"gitId":"tlyi"},"content":"       Expected: Error as the name \"30 mins jogging\" already exists in the Exercise Bank, and all names in the Exercise Bank need to be unique.","lastModifiedDate":"2021-11-08"},{"lineNumber":872,"author":{"gitId":"tlyi"},"content":"2. Viewing Exercise Bank Items","lastModifiedDate":"2021-11-08"},{"lineNumber":873,"author":{"gitId":"tlyi"},"content":"    1. Test case: `view ebank/` \\","lastModifiedDate":"2021-11-08"},{"lineNumber":874,"author":{"gitId":"tlyi"},"content":"       Expected: Shows the list of Exercise Items in the Exercise Bank.","lastModifiedDate":"2021-11-08"},{"lineNumber":875,"author":{"gitId":"tlyi"},"content":"    2. Test case: `view ebank/a` \\","lastModifiedDate":"2021-11-08"},{"lineNumber":876,"author":{"gitId":"tlyi"},"content":"       Expected: Invalid format. The command word `view` must be followed by `ebank/` exactly.","lastModifiedDate":"2021-11-08"},{"lineNumber":877,"author":{"gitId":"tlyi"},"content":"3. Editing Exercise Bank Items","lastModifiedDate":"2021-11-08"},{"lineNumber":878,"author":{"gitId":"tlyi"},"content":"    1. Prerequisite: Exercise Bank contains at least one Item. To find the index of the Item you want to edit, use `view ebank/`.","lastModifiedDate":"2021-11-08"},{"lineNumber":879,"author":{"gitId":"tlyi"},"content":"    2. Test case: `edit ebank/` \\","lastModifiedDate":"2021-11-08"},{"lineNumber":880,"author":{"gitId":"tlyi"},"content":"       Expected: Error as there is no input for item number.","lastModifiedDate":"2021-11-08"},{"lineNumber":881,"author":{"gitId":"tlyi"},"content":"    3. Test case: `edit ebank/1` \\","lastModifiedDate":"2021-11-08"},{"lineNumber":882,"author":{"gitId":"tlyi"},"content":"       Expected: Error as you need to specify what to edit about this Item.","lastModifiedDate":"2021-11-08"},{"lineNumber":883,"author":{"gitId":"tlyi"},"content":"    4. Test case: `edit ebank/1 n/cycling` \\","lastModifiedDate":"2021-11-08"},{"lineNumber":884,"author":{"gitId":"tlyi"},"content":"       Expected: Item number 1 in the Exercise Bank has been changed to \u0027cycling\u0027 (provided that you do not already have an Item named \u0027cycling\u0027 in the Exercise Bank).","lastModifiedDate":"2021-11-08"},{"lineNumber":885,"author":{"gitId":"tlyi"},"content":"4. Deleting Exercise Bank Items","lastModifiedDate":"2021-11-08"},{"lineNumber":886,"author":{"gitId":"tlyi"},"content":"    1. Prerequisite: Exercise Bank contains at least 3 Items. To find the index of the Item you want to delete, use `view ebank/`.","lastModifiedDate":"2021-11-08"},{"lineNumber":887,"author":{"gitId":"tlyi"},"content":"    2. Test case: `delete ebank/1,2` \\","lastModifiedDate":"2021-11-08"},{"lineNumber":888,"author":{"gitId":"tlyi"},"content":"       Expected: Exercise Bank Items 1 and 2 have been deleted.","lastModifiedDate":"2021-11-08"},{"lineNumber":889,"author":{"gitId":"tlyi"},"content":"    3. Test case: `delete ebank/1` \\","lastModifiedDate":"2021-11-08"},{"lineNumber":890,"author":{"gitId":"tlyi"},"content":"       Expected: Exercise Bank Item 1 has been deleted.","lastModifiedDate":"2021-11-08"},{"lineNumber":891,"author":{"gitId":"tlyi"},"content":"    4. Test case: `delete ebank/x`, where x is any number bigger than the size of the list. \\","lastModifiedDate":"2021-11-08"},{"lineNumber":892,"author":{"gitId":"tlyi"},"content":"       Expected: Error as x is out of the range of the item list.","lastModifiedDate":"2021-11-08"},{"lineNumber":893,"author":{"gitId":"tlyi"},"content":"    5. Test case: `delete ebank/all` \\","lastModifiedDate":"2021-11-08"},{"lineNumber":894,"author":{"gitId":"tlyi"},"content":"       Expected: All items in the Exercise Bank have been deleted.","lastModifiedDate":"2021-11-08"},{"lineNumber":895,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":896,"author":{"gitId":"tryyang2001"},"content":"### **Exiting Program**","lastModifiedDate":"2021-11-08"},{"lineNumber":897,"author":{"gitId":"tlyi"},"content":"1. Exiting Program while setting name when creating a new profile","lastModifiedDate":"2021-11-07"},{"lineNumber":898,"author":{"gitId":"tlyi"},"content":"   1. Prerequisite: Make sure the profile.txt file is not created. If you have already created the file, you can manually","lastModifiedDate":"2021-11-07"},{"lineNumber":899,"author":{"gitId":"tlyi"},"content":"      delete it.","lastModifiedDate":"2021-11-07"},{"lineNumber":900,"author":{"gitId":"tlyi"},"content":"   2. Test case: `bye` when being asked to provide a name\\","lastModifiedDate":"2021-11-07"},{"lineNumber":901,"author":{"gitId":"tlyi"},"content":"      Expected: A question shows up to confirm with the user whether the user wants to exit the program or wants to set his or her","lastModifiedDate":"2021-11-07"},{"lineNumber":902,"author":{"gitId":"tlyi"},"content":"      name as \"bye\". The user then need to type 1 to exit the program, 2 to set the name as \"bye\" and any other key to go back.","lastModifiedDate":"2021-11-07"},{"lineNumber":903,"author":{"gitId":"tlyi"},"content":"   3. (more test cases)","lastModifiedDate":"2021-11-07"},{"lineNumber":904,"author":{"gitId":"tttyyzzz"},"content":"   ","lastModifiedDate":"2021-10-28"},{"lineNumber":905,"author":{"gitId":"tryyang2001"},"content":"### **Manipulating and Saving Data**","lastModifiedDate":"2021-11-08"},{"lineNumber":906,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":907,"author":{"gitId":"weidak"},"content":"1. Manipulating _Profile_ data in the text files directly.","lastModifiedDate":"2021-11-08"},{"lineNumber":908,"author":{"gitId":"weidak"},"content":"    - Prerequisite: Data folder with profile.txt already present. (You have run through the profile creation at least once)","lastModifiedDate":"2021-11-07"},{"lineNumber":909,"author":{"gitId":"weidak"},"content":"\u003cul\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":910,"author":{"gitId":"weidak"},"content":"    \u003cul\u003e\u003cli\u003eProcecures:\u003c/li\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":911,"author":{"gitId":"weidak"},"content":"        \u003col\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":912,"author":{"gitId":"weidak"},"content":"            \u003cli\u003eNavigate to the \u003ccode\u003e/data\u003c/code\u003e folder which is in the same directory as your \u003ci\u003e\u003c/i\u003eFitbot.jar\u003c/i\u003e)\u003c/li\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":913,"author":{"gitId":"weidak"},"content":"            \u003cli\u003e\u003cp\u003eOpen the profile.txt with your editor of choice and view the attributes. It should look something like this: \u003ccode\u003ejohn|180.0|65.0|M|22|300|2\u003c/code\u003e\u003c/p\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":914,"author":{"gitId":"weidak"},"content":"                \u003cp align\u003d\"center\"\u003e\u003cimg src\u003d\"images/profile_text_file.png\" alt\u003d\"profile_text_file.png\" /\u003e\u003c/p\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":915,"author":{"gitId":"weidak"},"content":"            \u003c/li\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":916,"author":{"gitId":"weidak"},"content":"            \u003cli\u003e\u003cp\u003eEdit the height attribute to reflect this: \u003ccode\u003ejohn|BUG|65.0|M|22|300|2\u003c/code\u003e\u003c/p\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":917,"author":{"gitId":"weidak"},"content":"                \u003cp align\u003d\"center\"\u003e\u003cimg src\u003d\"images/profile_text_file_modified.png\" alt\u003d\"profile_text_file_modified.png\" /\u003e\u003c/p\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":918,"author":{"gitId":"weidak"},"content":"            \u003c/li\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":919,"author":{"gitId":"weidak"},"content":"            \u003cli\u003eSave the file and try to relaunch the application.\u003c/li\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":920,"author":{"gitId":"weidak"},"content":"         \u003c/ol\u003e   ","lastModifiedDate":"2021-11-08"},{"lineNumber":921,"author":{"gitId":"weidak"},"content":"        \u003cli\u003eExpected: The application should detect the height is invalid and prompts you to change its value inside the application\u003c/li\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":922,"author":{"gitId":"weidak"},"content":"    \u003c/ul\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":923,"author":{"gitId":"weidak"},"content":"\u003c/ul\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":924,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":925,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":926,"author":{"gitId":"weidak"},"content":"2. Manipulating saved text files, leading to invalid line.","lastModifiedDate":"2021-11-08"},{"lineNumber":927,"author":{"gitId":"weidak"},"content":"    - Causes of invalid lines in storage: Invalid number of delimiters present, unrecognizable texts and empty spaces (eg. `E|run|309`, where the date field is not present)","lastModifiedDate":"2021-11-08"},{"lineNumber":928,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":929,"author":{"gitId":"weidak"},"content":"\u003cul\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":930,"author":{"gitId":"weidak"},"content":"    \u003cul\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":931,"author":{"gitId":"weidak"},"content":"        \u003cli\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":932,"author":{"gitId":"weidak"},"content":"            \u003cp\u003ePrerequisite: Data folder is present with items already added to lists. (We will be using _exercise_list.txt_ as an example.)\u003c/p\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":933,"author":{"gitId":"weidak"},"content":"            \u003cp\u003eYour exercise_list.txt should look something like this:\u003c/p\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":934,"author":{"gitId":"weidak"},"content":"            \u003cp align\u003d\"center\"\u003e\u003cimg src\u003d\"images/exercise_list.png\"/\u003e\u003c/p\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":935,"author":{"gitId":"weidak"},"content":"        \u003c/li\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":936,"author":{"gitId":"weidak"},"content":"        \u003cli\u003eProcecures:\u003c/li\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":937,"author":{"gitId":"weidak"},"content":"        \u003col\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":938,"author":{"gitId":"weidak"},"content":"            \u003cli\u003e\u003cp\u003eChange one of the lines generated by the application with \u003ccode\u003einvalid line\u003c/code\u003e.\u003c/p\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":939,"author":{"gitId":"weidak"},"content":"                \u003cp align\u003d\"center\"\u003e\u003cimg src\u003d\"images/exercise_list_modified.png\" alt\u003d\"exercise_list_modified\" /\u003e\u003c/p\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":940,"author":{"gitId":"weidak"},"content":"            \u003c/li\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":941,"author":{"gitId":"weidak"},"content":"            \u003cli\u003eLaunch the application where it should be able to detect the invalid line in storage.\u003c/li\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":942,"author":{"gitId":"weidak"},"content":"         \u003c/ol\u003e   ","lastModifiedDate":"2021-11-08"},{"lineNumber":943,"author":{"gitId":"weidak"},"content":"        \u003cli\u003eExpected: The user will be notified of the invalid line and it will be subsequently ignored. Upon the next operation that requires saving of data (\"bye\", \"add e/\" commands etc.), this invalid line will be overwritten and ignored, preserving the data integrity of the rest of the lines.\u003c/li\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":944,"author":{"gitId":"weidak"},"content":"    \u003c/ul\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":945,"author":{"gitId":"weidak"},"content":"\u003c/ul\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":946,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":947,"author":{"gitId":"weidak"},"content":"   _Note: The dates used here was during the creation of the DeveloperGuide. We have set hard limits to not accept anything past 10 years prior or greater than 1 year into the future for completeness of our data. For instance, you are unable to set a exercise performed in 1991 as it will just ignore the line without notifying the user._","lastModifiedDate":"2021-11-08"},{"lineNumber":948,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":949,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-28"}],"authorContributionMap":{"weidak":206,"tttyyzzz":148,"tryyang2001":227,"xingjie99":98,"-":28,"tlyi":242}},{"path":"docs/README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"tlyi"},"content":"![Start Up Screen](./images/StartupLogo.png)","lastModifiedDate":"2021-10-29"},{"lineNumber":3,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":4,"author":{"gitId":"tlyi"},"content":"_Fitbot_ is a **desktop app** that helps university students who are looking to","lastModifiedDate":"2021-10-29"},{"lineNumber":5,"author":{"gitId":"tlyi"},"content":"**keep track of their calorie consumption and calorie output** with the speed and convenience of","lastModifiedDate":"2021-10-29"},{"lineNumber":6,"author":{"gitId":"tlyi"},"content":"**command-line based** tools, especially in times of online school.","lastModifiedDate":"2021-10-29"},{"lineNumber":7,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":8,"author":{"gitId":"tlyi"},"content":"_Fitbot_ can be used across all operating systems such as Windows, Mac OS X, Linux and Unix. It is optimised for use via ","lastModifiedDate":"2021-10-29"},{"lineNumber":9,"author":{"gitId":"tlyi"},"content":"a [Command-Line Interface (CLI)](https://en.wikipedia.org/wiki/Command-line_interface), so it would be especially beneficial for fast","lastModifiedDate":"2021-10-29"},{"lineNumber":10,"author":{"gitId":"tlyi"},"content":"typers and people who enjoy a clean and simple app interface.","lastModifiedDate":"2021-10-29"},{"lineNumber":11,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":12,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":13,"author":{"gitId":"tlyi"},"content":"If you type fast, and you need an easy and quick way to record your calories, _Fitbot_ is the app for you! 💪💯","lastModifiedDate":"2021-10-29"},{"lineNumber":14,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":15,"author":{"gitId":"tlyi"},"content":"**Useful links**:","lastModifiedDate":"2021-10-29"},{"lineNumber":16,"author":{"gitId":"tlyi"},"content":"* If you are interested to know how to use _Fitbot_ : [User Guide](UserGuide.md)","lastModifiedDate":"2021-10-29"},{"lineNumber":17,"author":{"gitId":"tlyi"},"content":"* If you are interested to know how we built _Fitbot_ : [Developer Guide](DeveloperGuide.md)","lastModifiedDate":"2021-10-29"},{"lineNumber":18,"author":{"gitId":"tlyi"},"content":"* If you are interested to know more about the team behing _Fitbot_: [About Us](AboutUs.md)","lastModifiedDate":"2021-10-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"-":2,"tlyi":17}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"---","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"tlyi"},"content":"layout: page","lastModifiedDate":"2021-10-28"},{"lineNumber":3,"author":{"gitId":"tlyi"},"content":"title: User Guide","lastModifiedDate":"2021-10-28"},{"lineNumber":4,"author":{"gitId":"tlyi"},"content":"---","lastModifiedDate":"2021-10-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":6,"author":{"gitId":"tlyi"},"content":"## **Introducing _Fitbot_**","lastModifiedDate":"2021-10-29"},{"lineNumber":7,"author":{"gitId":"tlyi"},"content":"_Fitbot_ is a **desktop app** that helps university students who are looking to","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"tlyi"},"content":"**keep track of their calorie consumption and calorie output** with the speed and convenience of","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"tlyi"},"content":"**command-line based** tools, especially in times of online school.","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":11,"author":{"gitId":"tlyi"},"content":"_Fitbot_ can be used across all operating systems such as Windows, Mac OS X, Linux and Unix. It is optimised for use via ","lastModifiedDate":"2021-10-29"},{"lineNumber":12,"author":{"gitId":"tlyi"},"content":"a [Command-Line Interface (CLI)](https://en.wikipedia.org/wiki/Command-line_interface), so it would be especially beneficial for fast","lastModifiedDate":"2021-10-29"},{"lineNumber":13,"author":{"gitId":"tlyi"},"content":"typers and people who enjoy a clean and simple app interface.","lastModifiedDate":"2021-10-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"tlyi"},"content":"If you type fast, and you need an easy and quick way to record your calories, _Fitbot_ is the app for you! 💪💯","lastModifiedDate":"2021-10-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":18,"author":{"gitId":"tlyi"},"content":"## **About This User Guide**","lastModifiedDate":"2021-10-29"},{"lineNumber":19,"author":{"gitId":"tlyi"},"content":"This guide explains how you can use all the features available on _Fitbot_ and","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"tlyi"},"content":"maximise your user experience.","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"tlyi"},"content":"To preface, _Fitbot_ was developed with modern-day university students in mind as our target audience. As a result, we do expect users to have a basic level ","lastModifiedDate":"2021-10-29"},{"lineNumber":23,"author":{"gitId":"tlyi"},"content":"of comfort with using computers, and it would be even better if you are familiar with CLI. However, if you do not, do not worry as we","lastModifiedDate":"2021-10-29"},{"lineNumber":24,"author":{"gitId":"xingjie99"},"content":"have provided a comprehensive set of instructions to [get started](#2-quick-start)!","lastModifiedDate":"2021-11-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":27,"author":{"gitId":"tlyi"},"content":"Throughout this guide, we will be using some special formatting and symbols to bring your attention to certain aspects:","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"tlyi"},"content":"| Formatting | Meaning |","lastModifiedDate":"2021-10-29"},{"lineNumber":31,"author":{"gitId":"tlyi"},"content":"|--------|-------|","lastModifiedDate":"2021-10-29"},{"lineNumber":32,"author":{"gitId":"tlyi"},"content":"_italics_ | Text that has been _italicised_ indicates that it is a term specific to _Fitbot_.","lastModifiedDate":"2021-10-29"},{"lineNumber":33,"author":{"gitId":"tlyi"},"content":"**bold** | Text that has been **bolded** indicates that it is important. ","lastModifiedDate":"2021-10-29"},{"lineNumber":34,"author":{"gitId":"tlyi"},"content":"`abc` | Text with a `highlight` indicates that it is code that can be typed by you into the command line or displayed by _Fitbot_.","lastModifiedDate":"2021-10-29"},{"lineNumber":35,"author":{"gitId":"tlyi"},"content":"ℹ️ |This symbol indicates important information. ","lastModifiedDate":"2021-10-29"},{"lineNumber":36,"author":{"gitId":"tlyi"},"content":"❗| This symbol indicates important rules to follow. Make sure you **pay extra attention** to the information, else _Fitbot_ will fail to execute certain functions! ","lastModifiedDate":"2021-10-29"},{"lineNumber":37,"author":{"gitId":"tlyi"},"content":"💡|This symbol indicates tips and tricks that you can use to make your _Fitbot_ experience even smoother.","lastModifiedDate":"2021-10-29"},{"lineNumber":38,"author":{"gitId":"tlyi"},"content":"⏫| This symbol indicates a shortcut to the content page. You may click it to quickly navigate back to the content page.","lastModifiedDate":"2021-11-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":43,"author":{"gitId":"tlyi"},"content":"## **Content Page**","lastModifiedDate":"2021-10-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":45,"author":{"gitId":"tlyi"},"content":"[1. Terminology](#1-terminology)","lastModifiedDate":"2021-11-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":47,"author":{"gitId":"tlyi"},"content":"[2. Quick Start](#2-quick-start)","lastModifiedDate":"2021-11-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":49,"author":{"gitId":"tlyi"},"content":"[3. Set Up Profile](#3-set-up-profile)","lastModifiedDate":"2021-11-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":51,"author":{"gitId":"tlyi"},"content":"[4. Features](#4-features)","lastModifiedDate":"2021-10-25"},{"lineNumber":52,"author":{"gitId":"xingjie99"},"content":"- [4.1 Customising Your Profile](#41-customising-your-profile)","lastModifiedDate":"2021-10-29"},{"lineNumber":53,"author":{"gitId":"xingjie99"},"content":"  - [4.1.1 Setting Up Your Profile](#411-setting-up-your-profile)","lastModifiedDate":"2021-10-29"},{"lineNumber":54,"author":{"gitId":"xingjie99"},"content":"  - [4.1.2 Viewing Profile `profile`](#412-viewing-profile-profile)","lastModifiedDate":"2021-10-29"},{"lineNumber":55,"author":{"gitId":"xingjie99"},"content":"  - [4.1.3 Updating Profile Attributes](#413-updating-profile-attributes)","lastModifiedDate":"2021-10-29"},{"lineNumber":56,"author":{"gitId":"tryyang2001"},"content":"  - [4.1.4 Calculating BMI `bmi`](#414-calculating-bmi-bmi)","lastModifiedDate":"2021-10-29"},{"lineNumber":57,"author":{"gitId":"xingjie99"},"content":"- [4.2 Recording Your Food Consumption](#42-recording-your-food-consumption)","lastModifiedDate":"2021-10-29"},{"lineNumber":58,"author":{"gitId":"tryyang2001"},"content":"  - [4.2.1 Adding Food Items `add f/`](#421-adding-food-items-add-f) ","lastModifiedDate":"2021-10-29"},{"lineNumber":59,"author":{"gitId":"tryyang2001"},"content":"  - [4.2.2 Viewing Food List `view f/`](#422-viewing-food-list-view-f)","lastModifiedDate":"2021-10-26"},{"lineNumber":60,"author":{"gitId":"tryyang2001"},"content":"  - [4.2.3 Deleting Food Items `delete f/`](#423-deleting-food-items-delete-f)","lastModifiedDate":"2021-10-26"},{"lineNumber":61,"author":{"gitId":"xingjie99"},"content":"- [4.3 Recording Your Exercises](#43-recording-your-exercises)","lastModifiedDate":"2021-10-29"},{"lineNumber":62,"author":{"gitId":"tryyang2001"},"content":"  - [4.3.1 Adding Exercise Items `add e/`](#431-adding-exercise-items-add-e) ","lastModifiedDate":"2021-10-28"},{"lineNumber":63,"author":{"gitId":"tryyang2001"},"content":"  - [4.3.2 Viewing Exercise Items `view e/`](#432-viewing-exercise-items-view-e)","lastModifiedDate":"2021-11-07"},{"lineNumber":64,"author":{"gitId":"tryyang2001"},"content":"  - [4.3.3 Deleting Exercises `delete e/`](#433-deleting-exercises-delete-e)","lastModifiedDate":"2021-10-26"},{"lineNumber":65,"author":{"gitId":"xingjie99"},"content":"- [4.4 Scheduling Your Exercises](#44-scheduling-your-exercises)","lastModifiedDate":"2021-10-29"},{"lineNumber":66,"author":{"gitId":"tryyang2001"},"content":"  - [4.4.1 Adding Upcoming Exercise Items `add e/`](#441-adding-upcoming-exercise-items-add-e)","lastModifiedDate":"2021-10-26"},{"lineNumber":67,"author":{"gitId":"tryyang2001"},"content":"  - [4.4.2 Adding Recurring Exercise Items `add r/`](#442-adding-recurring-exercise-items-add-r)","lastModifiedDate":"2021-10-26"},{"lineNumber":68,"author":{"gitId":"xingjie99"},"content":"  - [4.4.3 Viewing Upcoming Exercise List `view u/`](#443-viewing-upcoming-exercise-items-view-u)","lastModifiedDate":"2021-10-29"},{"lineNumber":69,"author":{"gitId":"tryyang2001"},"content":"  - [4.4.4 Editing Upcoming Exercise Items `edit u/`](#444-editing-upcoming-exercise-items-edit-u)","lastModifiedDate":"2021-10-26"},{"lineNumber":70,"author":{"gitId":"tryyang2001"},"content":"  - [4.4.5 Deleting Upcoming Exercise Items `delete u/`](#445-deleting-upcoming-exercise-items-delete-u)","lastModifiedDate":"2021-10-26"},{"lineNumber":71,"author":{"gitId":"xingjie99"},"content":"- [4.5 Building Your Food Bank](#45-building-your-food-bank)","lastModifiedDate":"2021-10-29"},{"lineNumber":72,"author":{"gitId":"xingjie99"},"content":"  - [4.5.1 Adding Food Bank Items `add fbank/`](#451-adding-food-bank-items-add-fbank)","lastModifiedDate":"2021-10-29"},{"lineNumber":73,"author":{"gitId":"tryyang2001"},"content":"  - [4.5.2 Viewing Food Bank `view fbank/`](#452-viewing-food-bank-view-fbank)","lastModifiedDate":"2021-10-26"},{"lineNumber":74,"author":{"gitId":"tryyang2001"},"content":"  - [4.5.3 Editing Food Bank Items `edit fbank/`](#453-editing-food-bank-items-edit-fbank)","lastModifiedDate":"2021-10-26"},{"lineNumber":75,"author":{"gitId":"xingjie99"},"content":"  - [4.5.4 Deleting Food Bank Items `delete fbank/`](#454-deleting-food-bank-items-delete-fbank)","lastModifiedDate":"2021-10-29"},{"lineNumber":76,"author":{"gitId":"xingjie99"},"content":"- [4.6 Building Your Exercise Bank](#46-building-your-exercise-bank)","lastModifiedDate":"2021-10-29"},{"lineNumber":77,"author":{"gitId":"xingjie99"},"content":"  - [4.6.1 Adding Exercise Bank Items `add ebank/`](#461-adding-exercise-bank-items-add-ebank)","lastModifiedDate":"2021-10-29"},{"lineNumber":78,"author":{"gitId":"tryyang2001"},"content":"  - [4.6.2 Viewing Exercise Bank `view ebank/`](#462-viewing-exercise-bank-view-ebank)","lastModifiedDate":"2021-10-26"},{"lineNumber":79,"author":{"gitId":"tryyang2001"},"content":"  - [4.6.3 Editing Exercise Bank Items `edit ebank/`](#463-editing-exercise-bank-items-edit-ebank)","lastModifiedDate":"2021-10-26"},{"lineNumber":80,"author":{"gitId":"tryyang2001"},"content":"  - [4.6.4 Deleting Exercise Bank Items `delete ebank/`](#464-deleting-exercise-bank-items-delete-ebank)","lastModifiedDate":"2021-10-26"},{"lineNumber":81,"author":{"gitId":"xingjie99"},"content":"- [4.7 Viewing Your Calorie Summary `overview`](#47-viewing-your-calorie-summary-overview)","lastModifiedDate":"2021-10-29"},{"lineNumber":82,"author":{"gitId":"xingjie99"},"content":"- [4.8 Viewing Help `help`](#48-viewing-help-help)","lastModifiedDate":"2021-10-29"},{"lineNumber":83,"author":{"gitId":"tryyang2001"},"content":"- [4.9 Exiting Program `bye`](#49-exiting-program-bye)","lastModifiedDate":"2021-10-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":85,"author":{"gitId":"tryyang2001"},"content":"[5. Data Management](#5-data-management)","lastModifiedDate":"2021-10-26"},{"lineNumber":86,"author":{"gitId":"tryyang2001"},"content":"- [5.1 Saving Data](#51-saving-the-data)","lastModifiedDate":"2021-10-29"},{"lineNumber":87,"author":{"gitId":"tryyang2001"},"content":"- [5.2 Editing Data](#52-editing-the-data-file)","lastModifiedDate":"2021-10-29"},{"lineNumber":88,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":89,"author":{"gitId":"tryyang2001"},"content":"[6. Data Limits](#6-data-limits)","lastModifiedDate":"2021-11-08"},{"lineNumber":90,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":91,"author":{"gitId":"tryyang2001"},"content":"[7. FAQ](#7-faq)","lastModifiedDate":"2021-11-08"},{"lineNumber":92,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":93,"author":{"gitId":"tryyang2001"},"content":"[8. Command Summary](#8-command-summary)","lastModifiedDate":"2021-11-08"},{"lineNumber":94,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":95,"author":{"gitId":"tlyi"},"content":"## **1. Terminology**","lastModifiedDate":"2021-11-07"},{"lineNumber":96,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":97,"author":{"gitId":"tlyi"},"content":"***Calorie*** - Calorie is a unit used to measure the energy of an item. One calorie is the amount of energy required to raise the","lastModifiedDate":"2021-11-07"},{"lineNumber":98,"author":{"gitId":"tlyi"},"content":"temperature of one gram of water by one degree Celsius. On average, a male will require approximately 2500 cal consumed","lastModifiedDate":"2021-11-07"},{"lineNumber":99,"author":{"gitId":"tlyi"},"content":"from food per day while a female will require around 2000 cal intake per day.\\","lastModifiedDate":"2021-11-07"},{"lineNumber":100,"author":{"gitId":"tlyi"},"content":"\\","lastModifiedDate":"2021-11-07"},{"lineNumber":101,"author":{"gitId":"xingjie99"},"content":"***Calorie goal*** - The calorie goal is defined as the amount of calories you wish to achieve per day. It calculated by subtracting the calories you burnt naturally and physically per day from your calorie intake. ","lastModifiedDate":"2021-11-08"},{"lineNumber":102,"author":{"gitId":"xingjie99"},"content":"If you are planning to lose weight, it is recommended to set your daily calorie goal as a negative value and if you are planning to gain weight, it is recommended to set your daily calorie goal as","lastModifiedDate":"2021-11-08"},{"lineNumber":103,"author":{"gitId":"xingjie99"},"content":"a positive value calorie goal.","lastModifiedDate":"2021-11-08"},{"lineNumber":104,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":105,"author":{"gitId":"xingjie99"},"content":"***Net Calorie*** - Net calorie is the difference between calorie goal and the total calories burnt from exercising and","lastModifiedDate":"2021-11-08"},{"lineNumber":106,"author":{"gitId":"tlyi"},"content":"[body metabolism](https://www.news-medical.net/life-sciences/What-is-Metabolism.aspx).","lastModifiedDate":"2021-11-07"},{"lineNumber":107,"author":{"gitId":"tlyi"},"content":"For your information, we use [basal metabolic rate (BMR)](https://en.wikipedia.org/wiki/Basal_metabolic_rate) to compute","lastModifiedDate":"2021-11-07"},{"lineNumber":108,"author":{"gitId":"xingjie99"},"content":"the rate of calories consumed by body metabolic activity.\\","lastModifiedDate":"2021-11-08"},{"lineNumber":109,"author":{"gitId":"tlyi"},"content":"\\","lastModifiedDate":"2021-11-07"},{"lineNumber":110,"author":{"gitId":"xingjie99"},"content":"***Activity factor*** - Activity factor is a measure of the level of activity. This value is used in the calculation of BMR. In our application,","lastModifiedDate":"2021-11-08"},{"lineNumber":111,"author":{"gitId":"tlyi"},"content":"we use an integer ranged from 1 to 5 to measure the activity factor:","lastModifiedDate":"2021-11-07"},{"lineNumber":112,"author":{"gitId":"tlyi"},"content":"- *Integer 1*: Little to no exercise (0-1 day of exercises a week)","lastModifiedDate":"2021-11-07"},{"lineNumber":113,"author":{"gitId":"tlyi"},"content":"- *Integer 2*: Lightly active (1-3 days of exercises a week)","lastModifiedDate":"2021-11-07"},{"lineNumber":114,"author":{"gitId":"tlyi"},"content":"- *Integer 3*: Moderately active (3-5 days of exercises a week)","lastModifiedDate":"2021-11-07"},{"lineNumber":115,"author":{"gitId":"tlyi"},"content":"- *Integer 4*: Very active (6-7 days of exercises a week)","lastModifiedDate":"2021-11-07"},{"lineNumber":116,"author":{"gitId":"tlyi"},"content":"- *Integer 5*: Extremely active (when sports is your passion and have a very physical job scope)","lastModifiedDate":"2021-11-07"},{"lineNumber":117,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":118,"author":{"gitId":"tlyi"},"content":"***Body Mass Index (BMI)*** - A measure to evaluate if the body weight is healthy. BMI is computed by using the body","lastModifiedDate":"2021-11-07"},{"lineNumber":119,"author":{"gitId":"tlyi"},"content":"weight (in kg) divided by the square of the body height (in m). \\","lastModifiedDate":"2021-11-07"},{"lineNumber":120,"author":{"gitId":"tlyi"},"content":"\\","lastModifiedDate":"2021-11-07"},{"lineNumber":121,"author":{"gitId":"tlyi"},"content":"***Item*** - We use the term _Item_ to represent the items that can be stored in _Fitbot_. The available items","lastModifiedDate":"2021-11-07"},{"lineNumber":122,"author":{"gitId":"tlyi"},"content":"are _Food Item_ and _Exercise Item_.\\","lastModifiedDate":"2021-11-07"},{"lineNumber":123,"author":{"gitId":"tlyi"},"content":"\\","lastModifiedDate":"2021-11-07"},{"lineNumber":124,"author":{"gitId":"xingjie99"},"content":"***Upcoming Exercise*** - We define the exercise with date after today\u0027s date as an Upcoming Exercise. This kind of exercise","lastModifiedDate":"2021-11-08"},{"lineNumber":125,"author":{"gitId":"tlyi"},"content":"will be handled specifically. It will not be added to the Exercise List but will be saved internally in the storage file. More","lastModifiedDate":"2021-11-07"},{"lineNumber":126,"author":{"gitId":"tlyi"},"content":"details of the process can be found [here](#442-adding-recurring-exercise-items-add-r).\\","lastModifiedDate":"2021-11-07"},{"lineNumber":127,"author":{"gitId":"tlyi"},"content":"\\","lastModifiedDate":"2021-11-07"},{"lineNumber":128,"author":{"gitId":"xingjie99"},"content":"***Item Bank*** - The Item Bank is an item storage that is capable of storing the Food or Exercise Item with its respective calories. This is","lastModifiedDate":"2021-11-08"},{"lineNumber":129,"author":{"gitId":"xingjie99"},"content":"to help you to store the calorie intake of a specific Food Item or the calories burnt from a specific Exercise Item for future use. More details","lastModifiedDate":"2021-11-08"},{"lineNumber":130,"author":{"gitId":"xingjie99"},"content":"on how to add item into the Item Bank can be found [here](#451-adding-food-bank-items-add-fbank).\\","lastModifiedDate":"2021-11-08"},{"lineNumber":131,"author":{"gitId":"tlyi"},"content":"\\","lastModifiedDate":"2021-11-07"},{"lineNumber":132,"author":{"gitId":"tlyi"},"content":"***Parameters*** - Parameters are values in the command format that _Fitbot_ expects you to provide. For example, `height` and `weight`","lastModifiedDate":"2021-11-07"},{"lineNumber":133,"author":{"gitId":"tlyi"},"content":"are parameters used to obtain your body height and weight values.\\","lastModifiedDate":"2021-11-07"},{"lineNumber":134,"author":{"gitId":"tlyi"},"content":"\\","lastModifiedDate":"2021-11-07"},{"lineNumber":135,"author":{"gitId":"xingjie99"},"content":"***Prefix*** - Prefix is used to help _Fitbot_ identifies the corresponding parameters you provided. For example, to allow _Fitbot_","lastModifiedDate":"2021-11-08"},{"lineNumber":136,"author":{"gitId":"tlyi"},"content":"to save your body height and weight, prefixes `h/` and `w/` are used. More details about how to use the prefixes in each","lastModifiedDate":"2021-11-07"},{"lineNumber":137,"author":{"gitId":"tlyi"},"content":"command can be found [here](#4-features).","lastModifiedDate":"2021-11-07"},{"lineNumber":138,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":139,"author":{"gitId":"tlyi"},"content":"[⏫ Back to content page](#content-page)","lastModifiedDate":"2021-11-07"},{"lineNumber":140,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":141,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":142,"author":{"gitId":"tlyi"},"content":"## **2. Quick Start**","lastModifiedDate":"2021-11-07"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":144,"author":{"gitId":"tryyang2001"},"content":"1. Ensure you have Java 11 or above installed in your computer.  If not, install Java 11 [here](https://www.oracle.com/java/technologies/downloads/).","lastModifiedDate":"2021-10-15"},{"lineNumber":145,"author":{"gitId":"tryyang2001"},"content":"2. Download the latest version of [Fitbot.jar](https://github.com/AY2122S1-CS2113T-F14-2/tp/releases) from the cloud.","lastModifiedDate":"2021-10-29"},{"lineNumber":146,"author":{"gitId":"tlyi"},"content":"3. Copy the file to the folder you want to use as the home folder for your _Fitbot_.","lastModifiedDate":"2021-10-25"},{"lineNumber":147,"author":{"gitId":"tlyi"},"content":"4. Go to command prompt and change the directory to the file\u0027s location. [Not sure how to do this?](https://www.groovypost.com/howto/open-command-window-terminal-window-specific-folder-windows-mac-linux/)","lastModifiedDate":"2021-10-25"},{"lineNumber":148,"author":{"gitId":"tlyi"},"content":"5. Type `java -jar Fitbot.jar` into the command prompt and press enter to start the program.","lastModifiedDate":"2021-10-29"},{"lineNumber":149,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":150,"author":{"gitId":"tttyyzzz"},"content":"If successfully loaded, you will see this logo:","lastModifiedDate":"2021-10-24"},{"lineNumber":151,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":152,"author":{"gitId":"tryyang2001"},"content":"![Start Up Screen](./images/StartupLogo.png)","lastModifiedDate":"2021-10-27"},{"lineNumber":153,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":154,"author":{"gitId":"tlyi"},"content":"You are now all good to start using _Fitbot_! ","lastModifiedDate":"2021-10-29"},{"lineNumber":155,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":156,"author":{"gitId":"tlyi"},"content":"[⏫ Back to content page](#content-page)","lastModifiedDate":"2021-11-07"},{"lineNumber":157,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":158,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":159,"author":{"gitId":"tlyi"},"content":"## **3. Set Up Profile**","lastModifiedDate":"2021-11-07"},{"lineNumber":160,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":161,"author":{"gitId":"tlyi"},"content":"_Fitbot_ will detect if there is a profile present in the application. If you have not set up a profile,","lastModifiedDate":"2021-10-25"},{"lineNumber":162,"author":{"gitId":"tlyi"},"content":"_Fitbot_ will ask you for your particulars.","lastModifiedDate":"2021-10-25"},{"lineNumber":163,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":164,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":165,"author":{"gitId":"tlyi"},"content":"Particulars required include name, height, weight, age, gender, calorie goal and activity factor. The application will prompt for your particulars again if your input is incorrect.","lastModifiedDate":"2021-10-25"},{"lineNumber":166,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":167,"author":{"gitId":"xingjie99"},"content":"Below are the questions that you will be prompted.","lastModifiedDate":"2021-11-08"},{"lineNumber":168,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":169,"author":{"gitId":"tttyyzzz"},"content":"**Name Input**","lastModifiedDate":"2021-10-27"},{"lineNumber":170,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":171,"author":{"gitId":"tlyi"},"content":"To let _Fitbot_ know how to address you, please input your name. \\","lastModifiedDate":"2021-11-07"},{"lineNumber":172,"author":{"gitId":"tlyi"},"content":"Note that the special characters `/` and `|` are not allowed!","lastModifiedDate":"2021-11-07"},{"lineNumber":173,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":174,"author":{"gitId":"tttyyzzz"},"content":"```text","lastModifiedDate":"2021-10-27"},{"lineNumber":175,"author":{"gitId":"tlyi"},"content":"*\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d*","lastModifiedDate":"2021-11-07"},{"lineNumber":176,"author":{"gitId":"tlyi"},"content":"      Fitbot realised that your profile has not been created. Let\u0027s start creating a profile below!","lastModifiedDate":"2021-10-29"},{"lineNumber":177,"author":{"gitId":"tttyyzzz"},"content":"__________________________________________________________________________________________________________","lastModifiedDate":"2021-10-27"},{"lineNumber":178,"author":{"gitId":"tttyyzzz"},"content":"What\u0027s your name?","lastModifiedDate":"2021-10-27"},{"lineNumber":179,"author":{"gitId":"tttyyzzz"},"content":"__________________________________________________________________________________________________________","lastModifiedDate":"2021-10-27"},{"lineNumber":180,"author":{"gitId":"tlyi"},"content":"Lisa","lastModifiedDate":"2021-11-07"},{"lineNumber":181,"author":{"gitId":"tttyyzzz"},"content":"```","lastModifiedDate":"2021-10-27"},{"lineNumber":182,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":183,"author":{"gitId":"tlyi"},"content":"Next, _Fitbot_ will need to know some of your personal details in order to calculate your calories more accurately.","lastModifiedDate":"2021-11-07"},{"lineNumber":184,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":185,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":186,"author":{"gitId":"tttyyzzz"},"content":"**Height Input**","lastModifiedDate":"2021-10-27"},{"lineNumber":187,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":188,"author":{"gitId":"tlyi"},"content":"Please input your height (in centimetres) as positive numbers. Decimals are accepted (e.g. 159.2).","lastModifiedDate":"2021-11-07"},{"lineNumber":189,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":190,"author":{"gitId":"tlyi"},"content":"```","lastModifiedDate":"2021-11-07"},{"lineNumber":191,"author":{"gitId":"tttyyzzz"},"content":"__________________________________________________________________________________________________________","lastModifiedDate":"2021-10-27"},{"lineNumber":192,"author":{"gitId":"tlyi"},"content":"Nice name you have there! Hello Lisa.","lastModifiedDate":"2021-11-07"},{"lineNumber":193,"author":{"gitId":"tttyyzzz"},"content":"What\u0027s your height? (in cm)","lastModifiedDate":"2021-10-27"},{"lineNumber":194,"author":{"gitId":"tttyyzzz"},"content":"__________________________________________________________________________________________________________","lastModifiedDate":"2021-10-27"},{"lineNumber":195,"author":{"gitId":"tlyi"},"content":"159.2","lastModifiedDate":"2021-11-07"},{"lineNumber":196,"author":{"gitId":"tttyyzzz"},"content":"```","lastModifiedDate":"2021-10-27"},{"lineNumber":197,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":198,"author":{"gitId":"tttyyzzz"},"content":"**Weight Input**","lastModifiedDate":"2021-10-27"},{"lineNumber":199,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":200,"author":{"gitId":"tlyi"},"content":"Please input your weight (in kilograms) as positive numbers. Similar to height, decimals are accepted (e.g. 50.0).","lastModifiedDate":"2021-11-07"},{"lineNumber":201,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":202,"author":{"gitId":"tttyyzzz"},"content":"```text","lastModifiedDate":"2021-10-27"},{"lineNumber":203,"author":{"gitId":"tttyyzzz"},"content":"__________________________________________________________________________________________________________","lastModifiedDate":"2021-10-27"},{"lineNumber":204,"author":{"gitId":"tlyi"},"content":"Your height is 159.2cm.","lastModifiedDate":"2021-11-07"},{"lineNumber":205,"author":{"gitId":"tttyyzzz"},"content":"What\u0027s your weight? (in kg)","lastModifiedDate":"2021-10-27"},{"lineNumber":206,"author":{"gitId":"tttyyzzz"},"content":"__________________________________________________________________________________________________________","lastModifiedDate":"2021-10-27"},{"lineNumber":207,"author":{"gitId":"tlyi"},"content":"50.0","lastModifiedDate":"2021-11-07"},{"lineNumber":208,"author":{"gitId":"tttyyzzz"},"content":"```","lastModifiedDate":"2021-10-27"},{"lineNumber":209,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":210,"author":{"gitId":"tttyyzzz"},"content":"**Gender Input**","lastModifiedDate":"2021-10-27"},{"lineNumber":211,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":212,"author":{"gitId":"tlyi"},"content":"Please input the letter \u0027m\u0027 if you are a male and \u0027f\u0027 if you are a female (e.g. f).","lastModifiedDate":"2021-11-07"},{"lineNumber":213,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":214,"author":{"gitId":"tttyyzzz"},"content":"```text","lastModifiedDate":"2021-10-27"},{"lineNumber":215,"author":{"gitId":"tttyyzzz"},"content":"__________________________________________________________________________________________________________","lastModifiedDate":"2021-10-27"},{"lineNumber":216,"author":{"gitId":"tlyi"},"content":"Your weight is 50.0kg.","lastModifiedDate":"2021-11-07"},{"lineNumber":217,"author":{"gitId":"tttyyzzz"},"content":"What is your gender? (If you are a male, type \u0027m\u0027, if you are a female , type \u0027f\u0027)","lastModifiedDate":"2021-10-27"},{"lineNumber":218,"author":{"gitId":"tttyyzzz"},"content":"__________________________________________________________________________________________________________","lastModifiedDate":"2021-10-27"},{"lineNumber":219,"author":{"gitId":"tlyi"},"content":"f","lastModifiedDate":"2021-11-07"},{"lineNumber":220,"author":{"gitId":"tttyyzzz"},"content":"```","lastModifiedDate":"2021-10-27"},{"lineNumber":221,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":222,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":223,"author":{"gitId":"tttyyzzz"},"content":"**Age Input**","lastModifiedDate":"2021-10-27"},{"lineNumber":224,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":225,"author":{"gitId":"xingjie99"},"content":"Please input your age as a positive whole number (e.g. 21).","lastModifiedDate":"2021-11-08"},{"lineNumber":226,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":227,"author":{"gitId":"tttyyzzz"},"content":"```text","lastModifiedDate":"2021-10-27"},{"lineNumber":228,"author":{"gitId":"tttyyzzz"},"content":"__________________________________________________________________________________________________________","lastModifiedDate":"2021-10-27"},{"lineNumber":229,"author":{"gitId":"tlyi"},"content":"You are a female.","lastModifiedDate":"2021-11-07"},{"lineNumber":230,"author":{"gitId":"tttyyzzz"},"content":"How old are you?","lastModifiedDate":"2021-10-27"},{"lineNumber":231,"author":{"gitId":"tttyyzzz"},"content":"__________________________________________________________________________________________________________","lastModifiedDate":"2021-10-27"},{"lineNumber":232,"author":{"gitId":"tlyi"},"content":"21","lastModifiedDate":"2021-11-07"},{"lineNumber":233,"author":{"gitId":"tttyyzzz"},"content":"```","lastModifiedDate":"2021-10-27"},{"lineNumber":234,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":235,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":236,"author":{"gitId":"tttyyzzz"},"content":"**Calorie Goal**","lastModifiedDate":"2021-10-27"},{"lineNumber":237,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":238,"author":{"gitId":"xingjie99"},"content":"To customise your experience, let _Fitbot_ know what your [net calorie goal](#1-terminology) (in cal) is so that _Fitbot_ can tell you if you are on track. \\","lastModifiedDate":"2021-11-08"},{"lineNumber":239,"author":{"gitId":"tlyi"},"content":"Please input your calorie goal as a whole number in the range of -3000 to 10000 (e.g. 1500).","lastModifiedDate":"2021-11-07"},{"lineNumber":240,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":241,"author":{"gitId":"tttyyzzz"},"content":"```text","lastModifiedDate":"2021-10-27"},{"lineNumber":242,"author":{"gitId":"tttyyzzz"},"content":"__________________________________________________________________________________________________________","lastModifiedDate":"2021-10-27"},{"lineNumber":243,"author":{"gitId":"tlyi"},"content":"You are 21 years old.","lastModifiedDate":"2021-11-07"},{"lineNumber":244,"author":{"gitId":"tttyyzzz"},"content":"Please input your net calorie goal.","lastModifiedDate":"2021-10-27"},{"lineNumber":245,"author":{"gitId":"tttyyzzz"},"content":"__________________________________________________________________________________________________________","lastModifiedDate":"2021-10-27"},{"lineNumber":246,"author":{"gitId":"tlyi"},"content":"1500","lastModifiedDate":"2021-11-07"},{"lineNumber":247,"author":{"gitId":"tttyyzzz"},"content":"```","lastModifiedDate":"2021-10-27"},{"lineNumber":248,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":249,"author":{"gitId":"tttyyzzz"},"content":"**Activity Factor**","lastModifiedDate":"2021-10-27"},{"lineNumber":250,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":251,"author":{"gitId":"tlyi"},"content":"Let _Fitbot_ know what your [activity factor](#1-terminology) is by choosing 1 to 5 based on the activity level description as shown below (e.g. 2).","lastModifiedDate":"2021-11-07"},{"lineNumber":252,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":253,"author":{"gitId":"tttyyzzz"},"content":"```text","lastModifiedDate":"2021-10-27"},{"lineNumber":254,"author":{"gitId":"tttyyzzz"},"content":"__________________________________________________________________________________________________________","lastModifiedDate":"2021-10-27"},{"lineNumber":255,"author":{"gitId":"tlyi"},"content":"You calorie goal is 1500 cal.","lastModifiedDate":"2021-11-07"},{"lineNumber":256,"author":{"gitId":"tttyyzzz"},"content":"In terms of activity level, how active are you?","lastModifiedDate":"2021-10-27"},{"lineNumber":257,"author":{"gitId":"tlyi"},"content":"Based on the rubrics below, please key in 1 to 5 based on how active you are.","lastModifiedDate":"2021-11-07"},{"lineNumber":258,"author":{"gitId":"tttyyzzz"},"content":"1 -\u003e Sedentary - Little or no exercise","lastModifiedDate":"2021-10-27"},{"lineNumber":259,"author":{"gitId":"tttyyzzz"},"content":"2 -\u003e Lightly Active - Light exercise or sports, around 1-3 days a week","lastModifiedDate":"2021-10-27"},{"lineNumber":260,"author":{"gitId":"tttyyzzz"},"content":"3 -\u003e Moderately Active - Regular exercise or sports, around 3-5 days a week","lastModifiedDate":"2021-10-27"},{"lineNumber":261,"author":{"gitId":"tttyyzzz"},"content":"4 -\u003e Very Active - Frequent exercise or sports, around 6-7 days a week","lastModifiedDate":"2021-10-27"},{"lineNumber":262,"author":{"gitId":"tttyyzzz"},"content":"5 -\u003e If you are extra active - Sports or exercising is your passion and a physical jobscope.","lastModifiedDate":"2021-10-27"},{"lineNumber":263,"author":{"gitId":"tttyyzzz"},"content":"__________________________________________________________________________________________________________","lastModifiedDate":"2021-10-27"},{"lineNumber":264,"author":{"gitId":"tlyi"},"content":"2","lastModifiedDate":"2021-11-07"},{"lineNumber":265,"author":{"gitId":"tttyyzzz"},"content":"```","lastModifiedDate":"2021-10-27"},{"lineNumber":266,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":267,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":268,"author":{"gitId":"tlyi"},"content":"Once you are done filling up all the particulars above, you should see the following message:","lastModifiedDate":"2021-11-07"},{"lineNumber":269,"author":{"gitId":"tttyyzzz"},"content":"```text","lastModifiedDate":"2021-10-27"},{"lineNumber":270,"author":{"gitId":"tlyi"},"content":"Your activity factor is 2.","lastModifiedDate":"2021-11-07"},{"lineNumber":271,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":272,"author":{"gitId":"tlyi"},"content":"                                    Profile created successfully!","lastModifiedDate":"2021-11-07"},{"lineNumber":273,"author":{"gitId":"tlyi"},"content":"*\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d*","lastModifiedDate":"2021-11-07"},{"lineNumber":274,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":275,"author":{"gitId":"tttyyzzz"},"content":"You can start by typing a command or view the list of available commands by typing \"help\".","lastModifiedDate":"2021-10-27"},{"lineNumber":276,"author":{"gitId":"tttyyzzz"},"content":"__________________________________________________________________________________________________________","lastModifiedDate":"2021-10-27"},{"lineNumber":277,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":278,"author":{"gitId":"tlyi"},"content":"```","lastModifiedDate":"2021-11-07"},{"lineNumber":279,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":280,"author":{"gitId":"tlyi"},"content":"After setting up the profile, you are now ready to use the rest of _Fitbot_\u0027s features! ","lastModifiedDate":"2021-11-07"},{"lineNumber":281,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":282,"author":{"gitId":"tttyyzzz"},"content":"❗ You can exit _Fitbot_ with the `bye` command, but if you exit before completing the profile, all attributes will","lastModifiedDate":"2021-11-04"},{"lineNumber":283,"author":{"gitId":"tttyyzzz"},"content":"not be saved.","lastModifiedDate":"2021-11-04"},{"lineNumber":284,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":285,"author":{"gitId":"tlyi"},"content":"[⏫ Back to content page](#content-page)","lastModifiedDate":"2021-11-07"},{"lineNumber":286,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":287,"author":{"gitId":"tlyi"},"content":"## **4. Features**","lastModifiedDate":"2021-10-29"},{"lineNumber":288,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":289,"author":{"gitId":"tryyang2001"},"content":"ℹ️ ***Command Format***","lastModifiedDate":"2021-10-15"},{"lineNumber":290,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":291,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":292,"author":{"gitId":"tlyi"},"content":"- Commands are not case-sensitive (e.g. `help`, `HELP`,`hElP` are all able to execute the `help` command)","lastModifiedDate":"2021-10-25"},{"lineNumber":293,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":294,"author":{"gitId":"tlyi"},"content":"- Words in upper case (e.g. `UPPER_CASE`) are used to signify parameters.","lastModifiedDate":"2021-10-25"},{"lineNumber":295,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":296,"author":{"gitId":"tlyi"},"content":"- Parameters in curly brackets `{}` are optional.","lastModifiedDate":"2021-10-25"},{"lineNumber":297,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":298,"author":{"gitId":"tlyi"},"content":"  e.g. `bmi {h/HEIGHT_IN_CM w/WEIGHT_IN_KG}` can be `bmi` or `bmi h/150 w/70`","lastModifiedDate":"2021-10-25"},{"lineNumber":299,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":300,"author":{"gitId":"tryyang2001"},"content":"- The order of the parameters do not matter.","lastModifiedDate":"2021-10-15"},{"lineNumber":301,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":302,"author":{"gitId":"tlyi"},"content":"  e.g. `add f/potato c/200 d/07-11-2021` or `add f/potato d/07-11-2021 c/200` both adds a Food Item called \"potato\" with 200 calories on 07 Nov 2021.","lastModifiedDate":"2021-11-07"},{"lineNumber":303,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":304,"author":{"gitId":"tlyi"},"content":"❗ Please do not use the characters `/` and `|` in your input other than to specify parameters!","lastModifiedDate":"2021-10-25"},{"lineNumber":305,"author":{"gitId":"weidak"},"content":"([more details](#8-data-limits))","lastModifiedDate":"2021-11-08"},{"lineNumber":306,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":307,"author":{"gitId":"xingjie99"},"content":"### **4.1 Customising Your Profile**","lastModifiedDate":"2021-10-29"},{"lineNumber":308,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":309,"author":{"gitId":"tlyi"},"content":"You can customise your profile with the following commands.","lastModifiedDate":"2021-11-07"},{"lineNumber":310,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":311,"author":{"gitId":"xingjie99"},"content":"#### 4.1.1 Setting Up Your Profile","lastModifiedDate":"2021-10-29"},{"lineNumber":312,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":313,"author":{"gitId":"tlyi"},"content":"Refer to [3. Set Up Profile](#3-set-up-profile) to set up your profile for the first time.","lastModifiedDate":"2021-11-07"},{"lineNumber":314,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":315,"author":{"gitId":"xingjie99"},"content":"#### 4.1.2 Viewing Profile: `profile`","lastModifiedDate":"2021-10-29"},{"lineNumber":316,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":317,"author":{"gitId":"xingjie99"},"content":"This command allows you to view your name, height, weight, gender, age, calorie goal and activity factor.","lastModifiedDate":"2021-11-08"},{"lineNumber":318,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":319,"author":{"gitId":"xingjie99"},"content":"Format: `profile`","lastModifiedDate":"2021-11-08"},{"lineNumber":320,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":321,"author":{"gitId":"weidak"},"content":"Example:","lastModifiedDate":"2021-10-27"},{"lineNumber":322,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":323,"author":{"gitId":"weidak"},"content":"```text","lastModifiedDate":"2021-10-27"},{"lineNumber":324,"author":{"gitId":"weidak"},"content":"profile ","lastModifiedDate":"2021-10-27"},{"lineNumber":325,"author":{"gitId":"weidak"},"content":"__________________________________________________________________________________________________________ ","lastModifiedDate":"2021-10-27"},{"lineNumber":326,"author":{"gitId":"weidak"},"content":"Hello Lisa! This is your profile: ","lastModifiedDate":"2021-11-02"},{"lineNumber":327,"author":{"gitId":"weidak"},"content":"*\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d ","lastModifiedDate":"2021-10-27"},{"lineNumber":328,"author":{"gitId":"tlyi"},"content":"\tHeight \t\t\t159.2cm ","lastModifiedDate":"2021-11-07"},{"lineNumber":329,"author":{"gitId":"weidak"},"content":"\tWeight \t\t\t50.0kg ","lastModifiedDate":"2021-10-27"},{"lineNumber":330,"author":{"gitId":"weidak"},"content":"\tGender \t\t\tF ","lastModifiedDate":"2021-10-27"},{"lineNumber":331,"author":{"gitId":"weidak"},"content":"\tAge \t\t\t21 ","lastModifiedDate":"2021-10-27"},{"lineNumber":332,"author":{"gitId":"xingjie99"},"content":"\tCalorie goal \t\t1500 cal ","lastModifiedDate":"2021-11-08"},{"lineNumber":333,"author":{"gitId":"weidak"},"content":"\tActivity factor \t2 ","lastModifiedDate":"2021-10-27"},{"lineNumber":334,"author":{"gitId":"weidak"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d* ","lastModifiedDate":"2021-10-27"},{"lineNumber":335,"author":{"gitId":"weidak"},"content":"__________________________________________________________________________________________________________ ","lastModifiedDate":"2021-10-27"},{"lineNumber":336,"author":{"gitId":"weidak"},"content":"```","lastModifiedDate":"2021-10-27"},{"lineNumber":337,"author":{"gitId":"xingjie99"},"content":"#### 4.1.3 Updating Profile Attributes ","lastModifiedDate":"2021-10-29"},{"lineNumber":338,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":339,"author":{"gitId":"xingjie99"},"content":"You can update your profile attributes using this command.","lastModifiedDate":"2021-11-08"},{"lineNumber":340,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":341,"author":{"gitId":"xingjie99"},"content":"Format: `profile {n/NAME} {h/HEIGHT} {w/WEIGHT} {s/GENDER} {a/AGE} {g/CALORIE_GOAL} {x/ACTIVITY_FACTOR}` \\","lastModifiedDate":"2021-11-08"},{"lineNumber":342,"author":{"gitId":"weidak"},"content":"\\","lastModifiedDate":"2021-10-27"},{"lineNumber":343,"author":{"gitId":"tryyang2001"},"content":"where : ","lastModifiedDate":"2021-10-28"},{"lineNumber":344,"author":{"gitId":"weidak"},"content":"\\","lastModifiedDate":"2021-10-27"},{"lineNumber":345,"author":{"gitId":"weidak"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; n/ \u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; name \\","lastModifiedDate":"2021-10-27"},{"lineNumber":346,"author":{"gitId":"weidak"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; h/ \u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; height in cm \\","lastModifiedDate":"2021-10-27"},{"lineNumber":347,"author":{"gitId":"weidak"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; w/ \u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;weight in kg \\","lastModifiedDate":"2021-10-27"},{"lineNumber":348,"author":{"gitId":"weidak"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; a/ \u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; age \\","lastModifiedDate":"2021-10-27"},{"lineNumber":349,"author":{"gitId":"weidak"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; g/ \u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; calorie goal \\","lastModifiedDate":"2021-10-27"},{"lineNumber":350,"author":{"gitId":"weidak"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; s/ \u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; gender (M or F) \\","lastModifiedDate":"2021-10-27"},{"lineNumber":351,"author":{"gitId":"weidak"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; x/ \u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; activity factor (1: Sedentary - 5: Extremely Active)","lastModifiedDate":"2021-10-27"},{"lineNumber":352,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":353,"author":{"gitId":"xingjie99"},"content":"❗️ Please input at least 1 of the optional parameters (in no particular order)!","lastModifiedDate":"2021-11-08"},{"lineNumber":354,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":355,"author":{"gitId":"tlyi"},"content":"Example:","lastModifiedDate":"2021-11-07"},{"lineNumber":356,"author":{"gitId":"tlyi"},"content":"```text","lastModifiedDate":"2021-11-07"},{"lineNumber":357,"author":{"gitId":"tlyi"},"content":"profile a/22 g/1800","lastModifiedDate":"2021-11-07"},{"lineNumber":358,"author":{"gitId":"tlyi"},"content":"__________________________________________________________________________________________________________","lastModifiedDate":"2021-11-07"},{"lineNumber":359,"author":{"gitId":"tlyi"},"content":"Your profile has been updated!","lastModifiedDate":"2021-11-07"},{"lineNumber":360,"author":{"gitId":"tlyi"},"content":"Hello Lisa! This is your profile:","lastModifiedDate":"2021-11-07"},{"lineNumber":361,"author":{"gitId":"tlyi"},"content":"*\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-11-07"},{"lineNumber":362,"author":{"gitId":"tlyi"},"content":"\tHeight                 159.2cm","lastModifiedDate":"2021-11-07"},{"lineNumber":363,"author":{"gitId":"tlyi"},"content":"\tWeight                 50.0kg","lastModifiedDate":"2021-11-07"},{"lineNumber":364,"author":{"gitId":"tlyi"},"content":"\tGender                 F","lastModifiedDate":"2021-11-07"},{"lineNumber":365,"author":{"gitId":"tlyi"},"content":"\tAge                    22","lastModifiedDate":"2021-11-07"},{"lineNumber":366,"author":{"gitId":"tlyi"},"content":"\tCalorie Goal           1800 cal","lastModifiedDate":"2021-11-07"},{"lineNumber":367,"author":{"gitId":"tlyi"},"content":"\tActivity Factor        2","lastModifiedDate":"2021-11-07"},{"lineNumber":368,"author":{"gitId":"tlyi"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d*","lastModifiedDate":"2021-11-07"},{"lineNumber":369,"author":{"gitId":"tlyi"},"content":"__________________________________________________________________________________________________________","lastModifiedDate":"2021-11-07"},{"lineNumber":370,"author":{"gitId":"tlyi"},"content":"```","lastModifiedDate":"2021-11-07"},{"lineNumber":371,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":372,"author":{"gitId":"tryyang2001"},"content":"#### 4.1.4 Calculating BMI `bmi`","lastModifiedDate":"2021-10-29"},{"lineNumber":373,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":374,"author":{"gitId":"xingjie99"},"content":"You can calculate your [BMI](#1-terminology) using this command. ","lastModifiedDate":"2021-11-08"},{"lineNumber":375,"author":{"gitId":"tlyi"},"content":"_Fitbot_ will also tell you the status of your BMI *(underweight, healthy, overweight, obese)* based on the calculated value.","lastModifiedDate":"2021-11-07"},{"lineNumber":376,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":377,"author":{"gitId":"xingjie99"},"content":"Format: `bmi {h/HEIGHT_IN_CM} {w/WEIGHT_IN_KG}`","lastModifiedDate":"2021-11-08"},{"lineNumber":378,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":379,"author":{"gitId":"xingjie99"},"content":"💡 **Tip:** If you do not provide the two optional parameters of height and weight, the BMI will be computed based on the current ","lastModifiedDate":"2021-11-08"},{"lineNumber":380,"author":{"gitId":"tlyi"},"content":"height and weight values in your profile.","lastModifiedDate":"2021-11-07"},{"lineNumber":381,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":382,"author":{"gitId":"weidak"},"content":"Example:","lastModifiedDate":"2021-10-29"},{"lineNumber":383,"author":{"gitId":"tlyi"},"content":"- `bmi` calculates the BMI value based on the current height and weight in your profile.","lastModifiedDate":"2021-11-07"},{"lineNumber":384,"author":{"gitId":"tlyi"},"content":"- `bmi h/180 w/65` calculates the BMI value based on height 180cm and weight 65cm.","lastModifiedDate":"2021-11-07"},{"lineNumber":385,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":386,"author":{"gitId":"weidak"},"content":"```text  ","lastModifiedDate":"2021-10-29"},{"lineNumber":387,"author":{"gitId":"weidak"},"content":"bmi","lastModifiedDate":"2021-10-29"},{"lineNumber":388,"author":{"gitId":"weidak"},"content":"__________________________________________________________________________________________________________","lastModifiedDate":"2021-10-29"},{"lineNumber":389,"author":{"gitId":"weidak"},"content":"Your BMI value according to your current profile is:","lastModifiedDate":"2021-10-29"},{"lineNumber":390,"author":{"gitId":"tlyi"},"content":"\t22.5 (Healthy)","lastModifiedDate":"2021-11-07"},{"lineNumber":391,"author":{"gitId":"tlyi"},"content":"__________________________________________________________________________________________________________","lastModifiedDate":"2021-11-07"},{"lineNumber":392,"author":{"gitId":"tlyi"},"content":"bmi h/180 w/65  ","lastModifiedDate":"2021-11-07"},{"lineNumber":393,"author":{"gitId":"weidak"},"content":"__________________________________________________________________________________________________________","lastModifiedDate":"2021-10-29"},{"lineNumber":394,"author":{"gitId":"weidak"},"content":"The calculated BMI value is 20.1 (Healthy)","lastModifiedDate":"2021-10-29"},{"lineNumber":395,"author":{"gitId":"tlyi"},"content":"__________________________________________________________________________________________________________","lastModifiedDate":"2021-11-07"},{"lineNumber":396,"author":{"gitId":"weidak"},"content":"```  ","lastModifiedDate":"2021-10-29"},{"lineNumber":397,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":398,"author":{"gitId":"tlyi"},"content":"[⏫ Back to content page](#content-page)","lastModifiedDate":"2021-11-07"},{"lineNumber":399,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":400,"author":{"gitId":"tlyi"},"content":"### **4.2 Recording Your Food Consumption**","lastModifiedDate":"2021-11-07"},{"lineNumber":401,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":402,"author":{"gitId":"xingjie99"},"content":"You can record all the Food Items consumed within a week into the Food List. This allows you","lastModifiedDate":"2021-11-08"},{"lineNumber":403,"author":{"gitId":"tlyi"},"content":"to keep track of your food calorie consumption and gain a better understanding of your diet habits. ","lastModifiedDate":"2021-11-07"},{"lineNumber":404,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":405,"author":{"gitId":"tryyang2001"},"content":"#### 4.2.1 Adding Food Items `add f/`","lastModifiedDate":"2021-10-27"},{"lineNumber":406,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":407,"author":{"gitId":"xingjie99"},"content":"You can record Food Items consumed on a specific date and time with a specific calorie value into the Food List. ","lastModifiedDate":"2021-11-08"},{"lineNumber":408,"author":{"gitId":"xingjie99"},"content":"This command allows you to add a new Food Item to the Food List. Repeated Food Items on the same day and time is supported too.","lastModifiedDate":"2021-11-08"},{"lineNumber":409,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":410,"author":{"gitId":"tryyang2001"},"content":"Format: `add f/ITEM {c/CALORIES} {d/DD-MM-YYYY} {t/HHMM}` adds a Food Item consumed with its respective calories on the given","lastModifiedDate":"2021-10-27"},{"lineNumber":411,"author":{"gitId":"tryyang2001"},"content":"date (`DD-MM-YYYY`) and time (`HHMM`).","lastModifiedDate":"2021-10-27"},{"lineNumber":412,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":413,"author":{"gitId":"xingjie99"},"content":"❗ The input date `DD-MM-YYYY` must be within the past 7 days (including today). For example, if today date is `07-11-2021`, then the input","lastModifiedDate":"2021-11-08"},{"lineNumber":414,"author":{"gitId":"weidak"},"content":"date must be within `01-11-2021` to `07-11-2021`. ([more details](#8-data-limits))","lastModifiedDate":"2021-11-08"},{"lineNumber":415,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":416,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":417,"author":{"gitId":"tryyang2001"},"content":"Example:","lastModifiedDate":"2021-10-15"},{"lineNumber":418,"author":{"gitId":"tryyang2001"},"content":"```text","lastModifiedDate":"2021-10-15"},{"lineNumber":419,"author":{"gitId":"tryyang2001"},"content":"add f/chicken rice c/607 d/04-11-2021 t/1400","lastModifiedDate":"2021-11-07"},{"lineNumber":420,"author":{"gitId":"tryyang2001"},"content":"__________________________________________________________________________________________________________","lastModifiedDate":"2021-11-07"},{"lineNumber":421,"author":{"gitId":"tryyang2001"},"content":"A food item has been added:","lastModifiedDate":"2021-10-27"},{"lineNumber":422,"author":{"gitId":"tryyang2001"},"content":"\tchicken rice (607 cal) @ 14:00, 04 Nov 2021","lastModifiedDate":"2021-11-07"},{"lineNumber":423,"author":{"gitId":"tryyang2001"},"content":"__________________________________________________________________________________________________________","lastModifiedDate":"2021-11-07"},{"lineNumber":424,"author":{"gitId":"tryyang2001"},"content":"```","lastModifiedDate":"2021-10-15"},{"lineNumber":425,"author":{"gitId":"tryyang2001"},"content":"💡 **Tip:** If you do not specify the date and time of the Food Item, it is assumed that the date and time is based on the date and time of input.","lastModifiedDate":"2021-10-27"},{"lineNumber":426,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":427,"author":{"gitId":"xingjie99"},"content":"💡 **Tip:** It is possible to add Food Item without providing the calories of it. You can do this by saving the corresponding ","lastModifiedDate":"2021-11-08"},{"lineNumber":428,"author":{"gitId":"tlyi"},"content":"Food Item into the Food Bank. More details can be found [here](#45-building-your-food-bank).","lastModifiedDate":"2021-11-07"},{"lineNumber":429,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":430,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":431,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":432,"author":{"gitId":"tryyang2001"},"content":"#### 4.2.2 Viewing Food List `view f/`","lastModifiedDate":"2021-10-27"},{"lineNumber":433,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":434,"author":{"gitId":"xingjie99"},"content":"You may want to view what Food Items you have consumed and how many calories you have taken in this week. This command will show ","lastModifiedDate":"2021-11-08"},{"lineNumber":435,"author":{"gitId":"tlyi"},"content":"the list of Food Items and their calories that you have added within the past 7 days (including today) into the Food List.","lastModifiedDate":"2021-11-07"},{"lineNumber":436,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":437,"author":{"gitId":"tryyang2001"},"content":"Format: `view f/`","lastModifiedDate":"2021-10-27"},{"lineNumber":438,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":439,"author":{"gitId":"tryyang2001"},"content":"Example: ","lastModifiedDate":"2021-10-27"},{"lineNumber":440,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":441,"author":{"gitId":"tryyang2001"},"content":"```text","lastModifiedDate":"2021-10-27"},{"lineNumber":442,"author":{"gitId":"tryyang2001"},"content":"view f/","lastModifiedDate":"2021-10-27"},{"lineNumber":443,"author":{"gitId":"tryyang2001"},"content":"__________________________________________________________________________________________________________","lastModifiedDate":"2021-10-27"},{"lineNumber":444,"author":{"gitId":"tryyang2001"},"content":"Here is a summary of all the food items you have consumed in the past week:","lastModifiedDate":"2021-10-27"},{"lineNumber":445,"author":{"gitId":"tryyang2001"},"content":"..........................................................................................................","lastModifiedDate":"2021-10-27"},{"lineNumber":446,"author":{"gitId":"tryyang2001"},"content":"You have consumed 3 food item(s) on Thursday (04 Nov 2021):","lastModifiedDate":"2021-11-07"},{"lineNumber":447,"author":{"gitId":"tryyang2001"},"content":"In the morning:","lastModifiedDate":"2021-10-27"},{"lineNumber":448,"author":{"gitId":"tryyang2001"},"content":"\t1. donut x2 (607 cal) @ 10:00","lastModifiedDate":"2021-10-27"},{"lineNumber":449,"author":{"gitId":"tryyang2001"},"content":"In the afternoon:","lastModifiedDate":"2021-10-27"},{"lineNumber":450,"author":{"gitId":"tryyang2001"},"content":"\t1. chicken rice (607 cal) @ 14:00","lastModifiedDate":"2021-10-27"},{"lineNumber":451,"author":{"gitId":"tryyang2001"},"content":"In the evening:","lastModifiedDate":"2021-10-27"},{"lineNumber":452,"author":{"gitId":"tryyang2001"},"content":"\t1. yong tau foo (560 cal) @ 19:20","lastModifiedDate":"2021-10-27"},{"lineNumber":453,"author":{"gitId":"tryyang2001"},"content":"Total calories consumed in the day: 1774 cal","lastModifiedDate":"2021-10-27"},{"lineNumber":454,"author":{"gitId":"tryyang2001"},"content":"..........................................................................................................","lastModifiedDate":"2021-10-27"},{"lineNumber":455,"author":{"gitId":"tryyang2001"},"content":"You have consumed 3 food item(s) on Friday (05 Nov 2021):","lastModifiedDate":"2021-11-07"},{"lineNumber":456,"author":{"gitId":"tryyang2001"},"content":"In the morning:","lastModifiedDate":"2021-10-27"},{"lineNumber":457,"author":{"gitId":"tryyang2001"},"content":"\t1. butter bread x2 (418 cal) @ 08:30","lastModifiedDate":"2021-10-27"},{"lineNumber":458,"author":{"gitId":"tryyang2001"},"content":"In the afternoon:","lastModifiedDate":"2021-10-27"},{"lineNumber":459,"author":{"gitId":"tryyang2001"},"content":"\t1. penang laksa (377 cal) @ 13:00","lastModifiedDate":"2021-10-27"},{"lineNumber":460,"author":{"gitId":"tryyang2001"},"content":"In the evening:","lastModifiedDate":"2021-10-27"},{"lineNumber":461,"author":{"gitId":"tryyang2001"},"content":"\t1. sliced fish bee hoon (349 cal) @ 18:40","lastModifiedDate":"2021-10-27"},{"lineNumber":462,"author":{"gitId":"tryyang2001"},"content":"Total calories consumed in the day: 1144 cal","lastModifiedDate":"2021-11-07"},{"lineNumber":463,"author":{"gitId":"tryyang2001"},"content":"..........................................................................................................","lastModifiedDate":"2021-11-07"},{"lineNumber":464,"author":{"gitId":"tryyang2001"},"content":"You have consumed 1 food item(s) on Saturday (06 Nov 2021):","lastModifiedDate":"2021-11-07"},{"lineNumber":465,"author":{"gitId":"tryyang2001"},"content":"At night:","lastModifiedDate":"2021-10-27"},{"lineNumber":466,"author":{"gitId":"tryyang2001"},"content":"\t1. roti prata x3 (507 cal) @ 23:50","lastModifiedDate":"2021-10-27"},{"lineNumber":467,"author":{"gitId":"tryyang2001"},"content":"Total calories consumed in the day: 507 cal","lastModifiedDate":"2021-11-07"},{"lineNumber":468,"author":{"gitId":"tryyang2001"},"content":"..........................................................................................................","lastModifiedDate":"2021-10-27"},{"lineNumber":469,"author":{"gitId":"tryyang2001"},"content":"Total number of food consumed in this week: 7","lastModifiedDate":"2021-10-27"},{"lineNumber":470,"author":{"gitId":"tryyang2001"},"content":"Total calories consumed in this week: 3425 cal","lastModifiedDate":"2021-10-27"},{"lineNumber":471,"author":{"gitId":"tryyang2001"},"content":"__________________________________________________________________________________________________________","lastModifiedDate":"2021-10-27"},{"lineNumber":472,"author":{"gitId":"tryyang2001"},"content":"```","lastModifiedDate":"2021-10-27"},{"lineNumber":473,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":474,"author":{"gitId":"tryyang2001"},"content":"#### 4.2.3 Deleting Food Items `delete f/`","lastModifiedDate":"2021-10-27"},{"lineNumber":475,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":476,"author":{"gitId":"tlyi"},"content":"If you have accidentally added a wrong Food Item inside your Food List, there is no need to worry! This command allows you to ","lastModifiedDate":"2021-11-07"},{"lineNumber":477,"author":{"gitId":"tryyang2001"},"content":"remove a specific Food Item in the Food List.","lastModifiedDate":"2021-10-27"},{"lineNumber":478,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":479,"author":{"gitId":"xingjie99"},"content":"Format: `delete f/LIST_NO d/DD-MM-YYYY t/HHMM` deletes the *n\u003csup\u003eth\u003c/sup\u003e* Food Item in the Food List which has the date (`DD-MM-YYYY`)","lastModifiedDate":"2021-10-29"},{"lineNumber":480,"author":{"gitId":"tryyang2001"},"content":"and time (`HHMM`), where *n* is the index of the Food to delete.","lastModifiedDate":"2021-10-27"},{"lineNumber":481,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":482,"author":{"gitId":"xingjie99"},"content":"❗ `LIST_NO` must be a positive integer within the range of the number of Items in the list.","lastModifiedDate":"2021-10-29"},{"lineNumber":483,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":484,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":485,"author":{"gitId":"tryyang2001"},"content":"Example:","lastModifiedDate":"2021-10-15"},{"lineNumber":486,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":487,"author":{"gitId":"tryyang2001"},"content":"```text","lastModifiedDate":"2021-10-15"},{"lineNumber":488,"author":{"gitId":"tryyang2001"},"content":"delete f/1 d/04-11-2021 t/1000","lastModifiedDate":"2021-11-07"},{"lineNumber":489,"author":{"gitId":"weidak"},"content":"__________________________________________________________________________________________________________","lastModifiedDate":"2021-10-25"},{"lineNumber":490,"author":{"gitId":"tryyang2001"},"content":"A food item has been deleted:","lastModifiedDate":"2021-10-27"},{"lineNumber":491,"author":{"gitId":"tryyang2001"},"content":"\tdonut x2 (607 cal) @ 10:00, 04 Nov 2021","lastModifiedDate":"2021-11-07"},{"lineNumber":492,"author":{"gitId":"weidak"},"content":"__________________________________________________________________________________________________________","lastModifiedDate":"2021-10-25"},{"lineNumber":493,"author":{"gitId":"tryyang2001"},"content":"```","lastModifiedDate":"2021-10-15"},{"lineNumber":494,"author":{"gitId":"tryyang2001"},"content":"💡  **Tip:** If you wish to remove all the Food Items from the list, there is a shortcut command: `delete f/all`.","lastModifiedDate":"2021-10-27"},{"lineNumber":495,"author":{"gitId":"tryyang2001"},"content":"```","lastModifiedDate":"2021-10-27"},{"lineNumber":496,"author":{"gitId":"tryyang2001"},"content":"delete f/all","lastModifiedDate":"2021-10-27"},{"lineNumber":497,"author":{"gitId":"tryyang2001"},"content":"__________________________________________________________________________________________________________","lastModifiedDate":"2021-10-27"},{"lineNumber":498,"author":{"gitId":"tryyang2001"},"content":"All food items have been removed.","lastModifiedDate":"2021-10-27"},{"lineNumber":499,"author":{"gitId":"tryyang2001"},"content":"__________________________________________________________________________________________________________","lastModifiedDate":"2021-10-27"},{"lineNumber":500,"author":{"gitId":"tryyang2001"},"content":"```","lastModifiedDate":"2021-10-27"},{"lineNumber":501,"author":{"gitId":"tlyi"},"content":"[⏫ Back to content page](#content-page)","lastModifiedDate":"2021-11-07"},{"lineNumber":502,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":503,"author":{"gitId":"xingjie99"},"content":"### **4.3 Recording Your Exercises**","lastModifiedDate":"2021-10-29"},{"lineNumber":504,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":505,"author":{"gitId":"xingjie99"},"content":"Besides Food Items, you may also record exercises that you have done into the Exercise List. This will allow you to keep","lastModifiedDate":"2021-11-08"},{"lineNumber":506,"author":{"gitId":"tryyang2001"},"content":"track of total calories burnt and check whether you have done sufficient exercises. ","lastModifiedDate":"2021-10-27"},{"lineNumber":507,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":508,"author":{"gitId":"tryyang2001"},"content":"#### 4.3.1 Adding Exercise Items `add e/`","lastModifiedDate":"2021-10-28"},{"lineNumber":509,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":510,"author":{"gitId":"xingjie99"},"content":"By using this command, you can add any Exercise Items done into the Exercise List. Repeated exercises on the same day is supported too.","lastModifiedDate":"2021-11-02"},{"lineNumber":511,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":512,"author":{"gitId":"tryyang2001"},"content":"Format: `add e/ITEM {c/CALORIES} {d/DD-MM-YYYY}` adds an Exercise Item with its respective calories burnt on the given date","lastModifiedDate":"2021-10-27"},{"lineNumber":513,"author":{"gitId":"tryyang2001"},"content":"(`DD-MM-YYYY`).","lastModifiedDate":"2021-10-27"},{"lineNumber":514,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":515,"author":{"gitId":"tryyang2001"},"content":"ℹ️ If the date `DD-MM-YYYY` provided is in the future, this exercise will be treated as an Upcoming Exercise Item, ","lastModifiedDate":"2021-10-27"},{"lineNumber":516,"author":{"gitId":"tryyang2001"},"content":"and it will be added to the [Upcoming Exercise List](#441-adding-upcoming-exercise-items-add-e) instead.","lastModifiedDate":"2021-10-27"},{"lineNumber":517,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":518,"author":{"gitId":"xingjie99"},"content":"❗ The input date `DD-MM-YYYY` must be within the past 7 days (including today). For example, if today date is `07-11-2021`, then the input","lastModifiedDate":"2021-11-08"},{"lineNumber":519,"author":{"gitId":"weidak"},"content":"date must be within `01-11-2021` to `07-11-2021`. ([more details](#8-data-limits))","lastModifiedDate":"2021-11-08"},{"lineNumber":520,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":521,"author":{"gitId":"tlyi"},"content":"Example:","lastModifiedDate":"2021-10-25"},{"lineNumber":522,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":523,"author":{"gitId":"tryyang2001"},"content":"```text","lastModifiedDate":"2021-10-15"},{"lineNumber":524,"author":{"gitId":"tryyang2001"},"content":"add e/hiit c/290 d/07-11-2021","lastModifiedDate":"2021-11-07"},{"lineNumber":525,"author":{"gitId":"tryyang2001"},"content":"__________________________________________________________________________________________________________","lastModifiedDate":"2021-11-07"},{"lineNumber":526,"author":{"gitId":"tryyang2001"},"content":"An exercise item has been added:","lastModifiedDate":"2021-11-07"},{"lineNumber":527,"author":{"gitId":"tryyang2001"},"content":"\thiit (290 cal) @ 07 Nov 2021","lastModifiedDate":"2021-11-07"},{"lineNumber":528,"author":{"gitId":"tryyang2001"},"content":"__________________________________________________________________________________________________________","lastModifiedDate":"2021-11-07"},{"lineNumber":529,"author":{"gitId":"tryyang2001"},"content":"```","lastModifiedDate":"2021-10-15"},{"lineNumber":530,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":531,"author":{"gitId":"xingjie99"},"content":"💡 **Tip:** Similar to [Food Item](#421-adding-food-items-add-f), if you do not specify the date and time of the Exercise Item,","lastModifiedDate":"2021-11-08"},{"lineNumber":532,"author":{"gitId":"xingjie99"},"content":"it is assumed that the date and time is based on the date and time of input.","lastModifiedDate":"2021-11-08"},{"lineNumber":533,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":534,"author":{"gitId":"xingjie99"},"content":"💡 **Tip:** It is possible to add Exercise Item without providing the calories burnt from it. You can do this by saving the corresponding","lastModifiedDate":"2021-11-08"},{"lineNumber":535,"author":{"gitId":"xingjie99"},"content":"Exercise Item into the Exercise Bank. More details can be found at [here](#46-building-your-exercise-bank).","lastModifiedDate":"2021-11-08"},{"lineNumber":536,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":537,"author":{"gitId":"tryyang2001"},"content":"#### 4.3.2 Viewing Exercise Items `view e/`","lastModifiedDate":"2021-11-07"},{"lineNumber":538,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":539,"author":{"gitId":"xingjie99"},"content":"It is possible to view and check all the exercises you have added. This command is for you to view all the exercises that you have done ","lastModifiedDate":"2021-11-08"},{"lineNumber":540,"author":{"gitId":"xingjie99"},"content":"and their calories within the past 7 days (including today) in the list.","lastModifiedDate":"2021-11-08"},{"lineNumber":541,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":542,"author":{"gitId":"tryyang2001"},"content":"Format: `view e/`","lastModifiedDate":"2021-10-27"},{"lineNumber":543,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":544,"author":{"gitId":"tryyang2001"},"content":"Example: ","lastModifiedDate":"2021-10-15"},{"lineNumber":545,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":546,"author":{"gitId":"tryyang2001"},"content":"```text","lastModifiedDate":"2021-10-15"},{"lineNumber":547,"author":{"gitId":"tryyang2001"},"content":"view e/","lastModifiedDate":"2021-10-27"},{"lineNumber":548,"author":{"gitId":"tryyang2001"},"content":"__________________________________________________________________________________________________________","lastModifiedDate":"2021-10-27"},{"lineNumber":549,"author":{"gitId":"tryyang2001"},"content":"Here is a summary of all the exercises you have done in the past week:","lastModifiedDate":"2021-10-27"},{"lineNumber":550,"author":{"gitId":"tryyang2001"},"content":"..........................................................................................................","lastModifiedDate":"2021-10-27"},{"lineNumber":551,"author":{"gitId":"tryyang2001"},"content":"You have done 1 exercise(s) on Wednesday (03 Nov 2021):","lastModifiedDate":"2021-11-07"},{"lineNumber":552,"author":{"gitId":"tryyang2001"},"content":"\t1. 5km run (500 cal)","lastModifiedDate":"2021-11-07"},{"lineNumber":553,"author":{"gitId":"tryyang2001"},"content":"Total calories burnt in the day: 500 cal","lastModifiedDate":"2021-11-07"},{"lineNumber":554,"author":{"gitId":"tryyang2001"},"content":"..........................................................................................................","lastModifiedDate":"2021-11-07"},{"lineNumber":555,"author":{"gitId":"tryyang2001"},"content":"You have done 1 exercise(s) on Friday (05 Nov 2021):","lastModifiedDate":"2021-11-07"},{"lineNumber":556,"author":{"gitId":"tryyang2001"},"content":"\t1. biking (500 cal)","lastModifiedDate":"2021-10-27"},{"lineNumber":557,"author":{"gitId":"tryyang2001"},"content":"Total calories burnt in the day: 500 cal","lastModifiedDate":"2021-10-27"},{"lineNumber":558,"author":{"gitId":"tryyang2001"},"content":"..........................................................................................................","lastModifiedDate":"2021-10-27"},{"lineNumber":559,"author":{"gitId":"tryyang2001"},"content":"You have done 2 exercise(s) on Sunday (07 Nov 2021):","lastModifiedDate":"2021-11-07"},{"lineNumber":560,"author":{"gitId":"tryyang2001"},"content":"\t1. training (200 cal)","lastModifiedDate":"2021-11-07"},{"lineNumber":561,"author":{"gitId":"tryyang2001"},"content":"\t2. hiit (290 cal)","lastModifiedDate":"2021-11-07"},{"lineNumber":562,"author":{"gitId":"tryyang2001"},"content":"Total calories burnt in the day: 490 cal","lastModifiedDate":"2021-11-07"},{"lineNumber":563,"author":{"gitId":"tryyang2001"},"content":"..........................................................................................................","lastModifiedDate":"2021-10-27"},{"lineNumber":564,"author":{"gitId":"tlyi"},"content":"Total exercises done in this week: 4","lastModifiedDate":"2021-11-07"},{"lineNumber":565,"author":{"gitId":"xingjie99"},"content":"Total calories burnt in this week: 1490 cal","lastModifiedDate":"2021-11-08"},{"lineNumber":566,"author":{"gitId":"tryyang2001"},"content":"__________________________________________________________________________________________________________","lastModifiedDate":"2021-10-27"},{"lineNumber":567,"author":{"gitId":"tryyang2001"},"content":"```","lastModifiedDate":"2021-10-15"},{"lineNumber":568,"author":{"gitId":"xingjie99"},"content":"ℹ️ It is also possible to view all the Upcoming Exercise Items from the Upcoming Exercise List that you have added before. More","lastModifiedDate":"2021-11-08"},{"lineNumber":569,"author":{"gitId":"tryyang2001"},"content":"details can be found [here](#443-viewing-upcoming-exercise-items-view-u).","lastModifiedDate":"2021-10-29"},{"lineNumber":570,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":571,"author":{"gitId":"tryyang2001"},"content":"#### 4.3.3 Deleting Exercises `delete e/`","lastModifiedDate":"2021-10-27"},{"lineNumber":572,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":573,"author":{"gitId":"xingjie99"},"content":"In case you have added the wrong exercise, this command allows you to remove any exercise from the Exercise List.","lastModifiedDate":"2021-11-08"},{"lineNumber":574,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":575,"author":{"gitId":"xingjie99"},"content":"Format: `delete e/LIST_NO d/DD-MM-YYYY` deletes the *n\u003csup\u003eth\u003c/sup\u003e* Exercise Item in the Exercise List which contains the date (`DD-MM-YYYY`),","lastModifiedDate":"2021-11-08"},{"lineNumber":576,"author":{"gitId":"tryyang2001"},"content":"where *n* is the index of the exercise to delete.","lastModifiedDate":"2021-10-27"},{"lineNumber":577,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":578,"author":{"gitId":"xingjie99"},"content":"❗ `LIST_NO` must be a positive integer within the range of the number of Items in the list.","lastModifiedDate":"2021-10-29"},{"lineNumber":579,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":580,"author":{"gitId":"tryyang2001"},"content":"Example:","lastModifiedDate":"2021-10-27"},{"lineNumber":581,"author":{"gitId":"tryyang2001"},"content":"```","lastModifiedDate":"2021-10-15"},{"lineNumber":582,"author":{"gitId":"tryyang2001"},"content":"delete e/1 d/05-11-2021","lastModifiedDate":"2021-11-07"},{"lineNumber":583,"author":{"gitId":"tryyang2001"},"content":"__________________________________________________________________________________________________________","lastModifiedDate":"2021-10-27"},{"lineNumber":584,"author":{"gitId":"tryyang2001"},"content":"An exercise item has been deleted:","lastModifiedDate":"2021-11-07"},{"lineNumber":585,"author":{"gitId":"tryyang2001"},"content":"\tbiking (500 cal) @ 05 Nov 2021","lastModifiedDate":"2021-11-07"},{"lineNumber":586,"author":{"gitId":"tryyang2001"},"content":"__________________________________________________________________________________________________________","lastModifiedDate":"2021-10-27"},{"lineNumber":587,"author":{"gitId":"tryyang2001"},"content":"```","lastModifiedDate":"2021-10-27"},{"lineNumber":588,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":589,"author":{"gitId":"tryyang2001"},"content":"💡   **Tip:** If you wish to remove all the Exercise Items from the Exercise List, there is a shortcut command: `delete e/all`.","lastModifiedDate":"2021-10-27"},{"lineNumber":590,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":591,"author":{"gitId":"tryyang2001"},"content":"```","lastModifiedDate":"2021-10-27"},{"lineNumber":592,"author":{"gitId":"tryyang2001"},"content":"delete e/all","lastModifiedDate":"2021-10-27"},{"lineNumber":593,"author":{"gitId":"tryyang2001"},"content":"__________________________________________________________________________________________________________","lastModifiedDate":"2021-10-27"},{"lineNumber":594,"author":{"gitId":"tryyang2001"},"content":"All exercise items have been removed.","lastModifiedDate":"2021-10-27"},{"lineNumber":595,"author":{"gitId":"tryyang2001"},"content":"__________________________________________________________________________________________________________","lastModifiedDate":"2021-10-27"},{"lineNumber":596,"author":{"gitId":"tryyang2001"},"content":"```","lastModifiedDate":"2021-10-27"},{"lineNumber":597,"author":{"gitId":"tlyi"},"content":"[⏫ Back to content page](#content-page)","lastModifiedDate":"2021-11-07"},{"lineNumber":598,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":599,"author":{"gitId":"xingjie99"},"content":"### **4.4 Scheduling Your Exercises**","lastModifiedDate":"2021-10-29"},{"lineNumber":600,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":601,"author":{"gitId":"xingjie99"},"content":"Besides your current exercises, you may also record all your Upcoming Exercise Items that you plan to do into the Upcoming Exercise List. ","lastModifiedDate":"2021-11-08"},{"lineNumber":602,"author":{"gitId":"xingjie99"},"content":"This will allow you to plan your exercises in advance and be more aware of your calorie output from your exercises in the near future.","lastModifiedDate":"2021-11-08"},{"lineNumber":603,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":604,"author":{"gitId":"weidak"},"content":"ℹ️ All of your upcoming Exercise Items will be automatically loaded into the ExerciseList if the dates of the upcoming Exercise Items have passed.","lastModifiedDate":"2021-11-08"},{"lineNumber":605,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":606,"author":{"gitId":"xingjie99"},"content":"#### 4.4.1 Adding Upcoming Exercise Items `add e/`","lastModifiedDate":"2021-10-29"},{"lineNumber":607,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":608,"author":{"gitId":"xingjie99"},"content":"By adding an Exercise Item with a future date, your exercise will be treated as an Upcoming Exercise Item and gets added into the Upcoming Exercise List.","lastModifiedDate":"2021-11-08"},{"lineNumber":609,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":610,"author":{"gitId":"xingjie99"},"content":"Format:`add e/ITEM {c/CALORIES} {d/DD-MM-YYYY}` adds an Upcoming Exercise Item with its respective calories burnt on the given date (`DD-MM-YYYY`}.","lastModifiedDate":"2021-11-08"},{"lineNumber":611,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":612,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":613,"author":{"gitId":"xingjie99"},"content":"❗️ The date `DD-MM-YYYY` provided must be in the future. Otherwise, if it is within the past 7 days (including today), it will be","lastModifiedDate":"2021-11-02"},{"lineNumber":614,"author":{"gitId":"xingjie99"},"content":"  added to the [Exercise List](#431-adding-exercise-items-add-e) instead.\\","lastModifiedDate":"2021-11-08"},{"lineNumber":615,"author":{"gitId":"weidak"},"content":"❗ The date `DD-MM-YYYY` can only be within a year from tomorrow as any exercises beyond a year is too far into the future. ([more details](#8-data-limits))","lastModifiedDate":"2021-11-08"},{"lineNumber":616,"author":{"gitId":"xingjie99"},"content":" ","lastModifiedDate":"2021-10-29"},{"lineNumber":617,"author":{"gitId":"xingjie99"},"content":"Example:","lastModifiedDate":"2021-11-08"},{"lineNumber":618,"author":{"gitId":"xingjie99"},"content":"```text","lastModifiedDate":"2021-10-29"},{"lineNumber":619,"author":{"gitId":"xingjie99"},"content":"add e/hiit c/290 d/01-01-2022","lastModifiedDate":"2021-10-29"},{"lineNumber":620,"author":{"gitId":"tlyi"},"content":"__________________________________________________________________________________________________________","lastModifiedDate":"2021-11-07"},{"lineNumber":621,"author":{"gitId":"xingjie99"},"content":"An exercise item for the future has been added:","lastModifiedDate":"2021-10-29"},{"lineNumber":622,"author":{"gitId":"tlyi"},"content":"\thiit (290 cal) @ 01 Jan 2022","lastModifiedDate":"2021-11-07"},{"lineNumber":623,"author":{"gitId":"tlyi"},"content":"__________________________________________________________________________________________________________","lastModifiedDate":"2021-11-07"},{"lineNumber":624,"author":{"gitId":"xingjie99"},"content":"```","lastModifiedDate":"2021-10-29"},{"lineNumber":625,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":626,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":627,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":628,"author":{"gitId":"xingjie99"},"content":"#### 4.4.2 Adding Recurring Exercise Items `add r/`","lastModifiedDate":"2021-10-29"},{"lineNumber":629,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":630,"author":{"gitId":"xingjie99"},"content":"It is possible to schedule exercises that you do on a regular basis. By using this command, you can conveniently add recurring exercises","lastModifiedDate":"2021-11-08"},{"lineNumber":631,"author":{"gitId":"xingjie99"},"content":"into the Upcoming Exercise List. This can be particularly useful if you have weekly trainings to record!","lastModifiedDate":"2021-11-08"},{"lineNumber":632,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":633,"author":{"gitId":"xingjie99"},"content":"Format: `add r/ITEM c/CALORIES :/START_DATE -/END_DATE @/DAY_OF_THE_WEEK {,DAY_OF_THE_WEEK,...}` adds recurring exercises with its respective calories burnt to the Upcoming Exercise List. ","lastModifiedDate":"2021-11-08"},{"lineNumber":634,"author":{"gitId":"tlyi"},"content":"You may specify which day(s) of the week by providing multiple `DAY_OF_THE_WEEK` that are separated by commas.","lastModifiedDate":"2021-11-07"},{"lineNumber":635,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":636,"author":{"gitId":"xingjie99"},"content":"❗ `START_DATE` and `END_DATE` must be in the future.\\","lastModifiedDate":"2021-10-29"},{"lineNumber":637,"author":{"gitId":"xingjie99"},"content":"❗ `START_DATE` must be before `END_DATE`.\\","lastModifiedDate":"2021-10-29"},{"lineNumber":638,"author":{"gitId":"xingjie99"},"content":"❗ `START_DATE` and `END_DATE` must follow `DD-MM-YYYY` format.\\","lastModifiedDate":"2021-11-07"},{"lineNumber":639,"author":{"gitId":"tryyang2001"},"content":"❗ `START_DATE` and `END_DATE` can only be within a year from today as any exercises beyond a year is too far into the future.\\","lastModifiedDate":"2021-11-08"},{"lineNumber":640,"author":{"gitId":"xingjie99"},"content":"❗ `DAY_OF_THE_WEEK` must be an integer between 1 and 7, representing Monday to Sunday respectively.","lastModifiedDate":"2021-11-07"},{"lineNumber":641,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":642,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":643,"author":{"gitId":"xingjie99"},"content":"Example:","lastModifiedDate":"2021-11-08"},{"lineNumber":644,"author":{"gitId":"xingjie99"},"content":"```text","lastModifiedDate":"2021-10-29"},{"lineNumber":645,"author":{"gitId":"xingjie99"},"content":"add r/running c/200 :/01-12-2021 -/30-12-2021 @/1,4","lastModifiedDate":"2021-11-07"},{"lineNumber":646,"author":{"gitId":"tlyi"},"content":"__________________________________________________________________________________________________________","lastModifiedDate":"2021-11-07"},{"lineNumber":647,"author":{"gitId":"xingjie99"},"content":"Recurring exercise item for the future has been added!","lastModifiedDate":"2021-11-07"},{"lineNumber":648,"author":{"gitId":"xingjie99"},"content":"You can view your upcoming exercises by typing \"view u/\"!","lastModifiedDate":"2021-11-07"},{"lineNumber":649,"author":{"gitId":"tlyi"},"content":"__________________________________________________________________________________________________________","lastModifiedDate":"2021-11-07"},{"lineNumber":650,"author":{"gitId":"xingjie99"},"content":"```","lastModifiedDate":"2021-10-29"},{"lineNumber":651,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":652,"author":{"gitId":"xingjie99"},"content":"#### 4.4.3 Viewing Upcoming Exercise Items `view u/`","lastModifiedDate":"2021-10-29"},{"lineNumber":653,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":654,"author":{"gitId":"xingjie99"},"content":"In order to view all of your Upcoming Exercise Items, this command can be used and all of your scheduled exercises and their calories ","lastModifiedDate":"2021-11-08"},{"lineNumber":655,"author":{"gitId":"xingjie99"},"content":"will be displayed for you to see.","lastModifiedDate":"2021-11-08"},{"lineNumber":656,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":657,"author":{"gitId":"xingjie99"},"content":"Format: `view u/`","lastModifiedDate":"2021-10-29"},{"lineNumber":658,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":659,"author":{"gitId":"xingjie99"},"content":"Example:","lastModifiedDate":"2021-11-08"},{"lineNumber":660,"author":{"gitId":"xingjie99"},"content":"```text","lastModifiedDate":"2021-10-29"},{"lineNumber":661,"author":{"gitId":"xingjie99"},"content":"view u/","lastModifiedDate":"2021-10-29"},{"lineNumber":662,"author":{"gitId":"tlyi"},"content":"__________________________________________________________________________________________________________","lastModifiedDate":"2021-11-07"},{"lineNumber":663,"author":{"gitId":"tlyi"},"content":"You have 10 upcoming exercise(s):","lastModifiedDate":"2021-11-07"},{"lineNumber":664,"author":{"gitId":"tlyi"},"content":"\t1. running (200 cal) (Thursday 02 Dec 2021)","lastModifiedDate":"2021-11-07"},{"lineNumber":665,"author":{"gitId":"tlyi"},"content":"\t2. running (200 cal) (Monday 06 Dec 2021)","lastModifiedDate":"2021-11-07"},{"lineNumber":666,"author":{"gitId":"tlyi"},"content":"\t3. running (200 cal) (Thursday 09 Dec 2021)","lastModifiedDate":"2021-11-07"},{"lineNumber":667,"author":{"gitId":"tlyi"},"content":"\t4. running (200 cal) (Monday 13 Dec 2021)","lastModifiedDate":"2021-11-07"},{"lineNumber":668,"author":{"gitId":"tlyi"},"content":"\t5. running (200 cal) (Thursday 16 Dec 2021)","lastModifiedDate":"2021-11-07"},{"lineNumber":669,"author":{"gitId":"tlyi"},"content":"\t6. running (200 cal) (Monday 20 Dec 2021)","lastModifiedDate":"2021-11-07"},{"lineNumber":670,"author":{"gitId":"tlyi"},"content":"\t7. running (200 cal) (Thursday 23 Dec 2021)","lastModifiedDate":"2021-11-07"},{"lineNumber":671,"author":{"gitId":"tlyi"},"content":"\t8. running (200 cal) (Monday 27 Dec 2021)","lastModifiedDate":"2021-11-07"},{"lineNumber":672,"author":{"gitId":"tlyi"},"content":"\t9. running (200 cal) (Thursday 30 Dec 2021)","lastModifiedDate":"2021-11-07"},{"lineNumber":673,"author":{"gitId":"tlyi"},"content":"\t10. hiit (290 cal) (Saturday 01 Jan 2022)","lastModifiedDate":"2021-11-07"},{"lineNumber":674,"author":{"gitId":"tlyi"},"content":"__________________________________________________________________________________________________________","lastModifiedDate":"2021-11-07"},{"lineNumber":675,"author":{"gitId":"xingjie99"},"content":"```","lastModifiedDate":"2021-10-29"},{"lineNumber":676,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":677,"author":{"gitId":"xingjie99"},"content":"#### 4.4.4 Editing Upcoming Exercise Items `edit u/`","lastModifiedDate":"2021-10-29"},{"lineNumber":678,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":679,"author":{"gitId":"xingjie99"},"content":"If you would like to make some changes to the details of your Upcoming Exercise Items, this command can be used and your Upcoming Exercise Items","lastModifiedDate":"2021-11-08"},{"lineNumber":680,"author":{"gitId":"xingjie99"},"content":"in the Upcoming Exercise List will be updated.","lastModifiedDate":"2021-11-08"},{"lineNumber":681,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":682,"author":{"gitId":"xingjie99"},"content":"Format: `edit u/LIST_NO {n/NEW_NAME} {c/NEW_CALORIES} {d/NEW_DATE}` edits the n\u003csup\u003eth\u003c/sup\u003e item in the Upcoming Exercise List, where *n* is the index of the Exercise to edit.","lastModifiedDate":"2021-10-29"},{"lineNumber":683,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":684,"author":{"gitId":"xingjie99"},"content":"❗ `LIST_NO` must be a positive integer within the range of the number of Items in the list.\\","lastModifiedDate":"2021-11-08"},{"lineNumber":685,"author":{"gitId":"xingjie99"},"content":"❗ Though the parameters are optional, do provide at least one of them so that _Fitbot_ knows what you want to update about the Item!","lastModifiedDate":"2021-11-08"},{"lineNumber":686,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":687,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":688,"author":{"gitId":"xingjie99"},"content":"Example:","lastModifiedDate":"2021-11-08"},{"lineNumber":689,"author":{"gitId":"tlyi"},"content":"```text","lastModifiedDate":"2021-11-07"},{"lineNumber":690,"author":{"gitId":"xingjie99"},"content":"edit u/1 c/150 d/30-11-2021","lastModifiedDate":"2021-10-29"},{"lineNumber":691,"author":{"gitId":"xingjie99"},"content":"__________________________________________________________________________________________","lastModifiedDate":"2021-10-29"},{"lineNumber":692,"author":{"gitId":"xingjie99"},"content":"Item number 1 in upcoming exercises has been changed to:","lastModifiedDate":"2021-11-07"},{"lineNumber":693,"author":{"gitId":"tlyi"},"content":"\trunning (150 cal) @ 30 Nov 2021","lastModifiedDate":"2021-11-07"},{"lineNumber":694,"author":{"gitId":"xingjie99"},"content":"__________________________________________________________________________________________","lastModifiedDate":"2021-10-29"},{"lineNumber":695,"author":{"gitId":"xingjie99"},"content":"```","lastModifiedDate":"2021-10-29"},{"lineNumber":696,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":697,"author":{"gitId":"xingjie99"},"content":"#### 4.4.5 Deleting Upcoming Exercise Items `delete u/`","lastModifiedDate":"2021-10-29"},{"lineNumber":698,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":699,"author":{"gitId":"xingjie99"},"content":"In case any Upcoming Exercise Item is cancelled and you would like to remove it from the Upcoming Exercise List, you can use ","lastModifiedDate":"2021-11-08"},{"lineNumber":700,"author":{"gitId":"xingjie99"},"content":"this command to delete that particular Upcoming Exercise Item. Deletion of multiple Upcoming Exercise Items is supported too. ","lastModifiedDate":"2021-11-08"},{"lineNumber":701,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":702,"author":{"gitId":"tlyi"},"content":"Format: `delete u/LIST_NO {,LIST_NO,...}` deletes the n\u003csup\u003eth\u003c/sup\u003e Upcoming Exercise Item in the Upcoming Exercise List, where *n* is the index of the exercise to delete.","lastModifiedDate":"2021-11-07"},{"lineNumber":703,"author":{"gitId":"tlyi"},"content":"You may delete multiple Exercise Items at once by providing multiple `LIST_NO` that are separated by commas.","lastModifiedDate":"2021-11-07"},{"lineNumber":704,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":705,"author":{"gitId":"xingjie99"},"content":"❗ `LIST_NO` must be a positive integer within the range of the number of Items in the list.","lastModifiedDate":"2021-10-29"},{"lineNumber":706,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":707,"author":{"gitId":"xingjie99"},"content":"Example:","lastModifiedDate":"2021-10-29"},{"lineNumber":708,"author":{"gitId":"xingjie99"},"content":"```","lastModifiedDate":"2021-10-29"},{"lineNumber":709,"author":{"gitId":"tlyi"},"content":"delete u/1,2","lastModifiedDate":"2021-11-07"},{"lineNumber":710,"author":{"gitId":"xingjie99"},"content":"__________________________________________________________________________________________","lastModifiedDate":"2021-10-29"},{"lineNumber":711,"author":{"gitId":"tlyi"},"content":"All of the following upcoming exercises have been deleted:","lastModifiedDate":"2021-11-07"},{"lineNumber":712,"author":{"gitId":"tlyi"},"content":"\t1. running (150 cal) (Tuesday 30 Nov 2021)","lastModifiedDate":"2021-11-07"},{"lineNumber":713,"author":{"gitId":"tlyi"},"content":"\t2. running (200 cal) (Monday 06 Dec 2021)","lastModifiedDate":"2021-11-07"},{"lineNumber":714,"author":{"gitId":"tlyi"},"content":"Number of upcoming exercise(s) left: 8","lastModifiedDate":"2021-11-07"},{"lineNumber":715,"author":{"gitId":"xingjie99"},"content":"__________________________________________________________________________________________","lastModifiedDate":"2021-10-29"},{"lineNumber":716,"author":{"gitId":"xingjie99"},"content":"```","lastModifiedDate":"2021-10-29"},{"lineNumber":717,"author":{"gitId":"xingjie99"},"content":"💡   **Tip:** If you wish to remove all the Exercise Items from the Upcoming Exercise List, there is a shortcut command: `delete u/all`.","lastModifiedDate":"2021-10-29"},{"lineNumber":718,"author":{"gitId":"xingjie99"},"content":"```","lastModifiedDate":"2021-10-29"},{"lineNumber":719,"author":{"gitId":"xingjie99"},"content":"delete u/all","lastModifiedDate":"2021-10-29"},{"lineNumber":720,"author":{"gitId":"xingjie99"},"content":"__________________________________________________________________________________________________________","lastModifiedDate":"2021-10-29"},{"lineNumber":721,"author":{"gitId":"xingjie99"},"content":"All upcoming exercise items have been removed.","lastModifiedDate":"2021-11-08"},{"lineNumber":722,"author":{"gitId":"xingjie99"},"content":"__________________________________________________________________________________________________________","lastModifiedDate":"2021-10-29"},{"lineNumber":723,"author":{"gitId":"xingjie99"},"content":"```","lastModifiedDate":"2021-10-29"},{"lineNumber":724,"author":{"gitId":"tlyi"},"content":"[⏫ Back to content page](#content-page)","lastModifiedDate":"2021-11-07"},{"lineNumber":725,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":726,"author":{"gitId":"tlyi"},"content":"### **4.5. Building your Food Bank**","lastModifiedDate":"2021-10-29"},{"lineNumber":727,"author":{"gitId":"tlyi"},"content":"Do you have certain dishes or snacks that you frequently consume? Instead of having to key in their calories everytime you want to","lastModifiedDate":"2021-10-29"},{"lineNumber":728,"author":{"gitId":"tlyi"},"content":"record them into the Food List, you can add it into the Food Bank once so that the next time you want to record this item in the Food List,","lastModifiedDate":"2021-10-29"},{"lineNumber":729,"author":{"gitId":"tlyi"},"content":"you would only have to provide the name of the item!","lastModifiedDate":"2021-10-29"},{"lineNumber":730,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":731,"author":{"gitId":"tlyi"},"content":"#### 4.5.1 Adding Food Bank Items `add fbank/`","lastModifiedDate":"2021-10-29"},{"lineNumber":732,"author":{"gitId":"tlyi"},"content":"You can add a Food Item into the Food Bank using this command.","lastModifiedDate":"2021-10-29"},{"lineNumber":733,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":734,"author":{"gitId":"tlyi"},"content":"Format: `add fbank/ITEM c/CALORIES`","lastModifiedDate":"2021-10-29"},{"lineNumber":735,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":736,"author":{"gitId":"xingjie99"},"content":"Example:","lastModifiedDate":"2021-11-08"},{"lineNumber":737,"author":{"gitId":"tlyi"},"content":"```","lastModifiedDate":"2021-10-29"},{"lineNumber":738,"author":{"gitId":"tlyi"},"content":"add fbank/McSpicy Meal c/1081 ","lastModifiedDate":"2021-10-29"},{"lineNumber":739,"author":{"gitId":"tlyi"},"content":"__________________________________________________________________________________________________________","lastModifiedDate":"2021-10-29"},{"lineNumber":740,"author":{"gitId":"tlyi"},"content":"A food item has been added to the food bank:","lastModifiedDate":"2021-10-29"},{"lineNumber":741,"author":{"gitId":"tlyi"},"content":"\tMcSpicy Meal (1081 cal)","lastModifiedDate":"2021-10-29"},{"lineNumber":742,"author":{"gitId":"tlyi"},"content":"__________________________________________________________________________________________________________","lastModifiedDate":"2021-10-29"},{"lineNumber":743,"author":{"gitId":"tlyi"},"content":"```","lastModifiedDate":"2021-10-29"},{"lineNumber":744,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":745,"author":{"gitId":"tlyi"},"content":"❗️ The Food Bank cannot have duplicate item names as _Fitbot_ needs to be able to uniquely identify the item calories. Note that","lastModifiedDate":"2021-10-29"},{"lineNumber":746,"author":{"gitId":"tlyi"},"content":"the match for item name is **case-insensitive**. For example, if an item named `potato` already exists in the Food Bank, an item named `POTATO` also cannot be added in.","lastModifiedDate":"2021-10-29"},{"lineNumber":747,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":748,"author":{"gitId":"tlyi"},"content":"After adding the item to the Food Bank, you can now add the item into the Food List whenever you want without specifying the calories. ","lastModifiedDate":"2021-10-29"},{"lineNumber":749,"author":{"gitId":"tlyi"},"content":"Simply provide the name of the item and _Fitbot_ will search up the corresponding calorie value for the item with the same name for you from the Food Bank! As before, note that the matching of names is ","lastModifiedDate":"2021-10-29"},{"lineNumber":750,"author":{"gitId":"tlyi"},"content":"**case-insensitive**.","lastModifiedDate":"2021-10-29"},{"lineNumber":751,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":752,"author":{"gitId":"xingjie99"},"content":"Example:","lastModifiedDate":"2021-11-08"},{"lineNumber":753,"author":{"gitId":"tlyi"},"content":"```","lastModifiedDate":"2021-10-29"},{"lineNumber":754,"author":{"gitId":"tlyi"},"content":"add f/mcspicy meal d/07-11-2021 t/1536","lastModifiedDate":"2021-11-07"},{"lineNumber":755,"author":{"gitId":"tlyi"},"content":"__________________________________________________________________________________________________________","lastModifiedDate":"2021-10-29"},{"lineNumber":756,"author":{"gitId":"tlyi"},"content":"A food item has been added:","lastModifiedDate":"2021-10-29"},{"lineNumber":757,"author":{"gitId":"tlyi"},"content":"\tmcspicy meal (1081 cal) @ 15:36, 07 Nov 2021","lastModifiedDate":"2021-11-07"},{"lineNumber":758,"author":{"gitId":"tlyi"},"content":"__________________________________________________________________________________________________________","lastModifiedDate":"2021-10-29"},{"lineNumber":759,"author":{"gitId":"tlyi"},"content":"```","lastModifiedDate":"2021-10-29"},{"lineNumber":760,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":761,"author":{"gitId":"tlyi"},"content":"#### 4.5.2 Viewing Food Bank `view fbank/`","lastModifiedDate":"2021-10-29"},{"lineNumber":762,"author":{"gitId":"tlyi"},"content":"You can view all the Items in the Food Bank using this command.","lastModifiedDate":"2021-10-29"},{"lineNumber":763,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":764,"author":{"gitId":"tlyi"},"content":"Format: `view fbank/`","lastModifiedDate":"2021-10-29"},{"lineNumber":765,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":766,"author":{"gitId":"xingjie99"},"content":"Example:","lastModifiedDate":"2021-11-08"},{"lineNumber":767,"author":{"gitId":"tlyi"},"content":"```","lastModifiedDate":"2021-10-29"},{"lineNumber":768,"author":{"gitId":"tlyi"},"content":"view fbank/","lastModifiedDate":"2021-10-29"},{"lineNumber":769,"author":{"gitId":"tlyi"},"content":"__________________________________________________________________________________________________________","lastModifiedDate":"2021-10-29"},{"lineNumber":770,"author":{"gitId":"tlyi"},"content":"You have 2 food(s) in your food bank:","lastModifiedDate":"2021-10-29"},{"lineNumber":771,"author":{"gitId":"tlyi"},"content":"\t1. Baked Potato (300 cal)","lastModifiedDate":"2021-10-29"},{"lineNumber":772,"author":{"gitId":"tlyi"},"content":"\t2. McSpicy Meal (1081 cal)","lastModifiedDate":"2021-10-29"},{"lineNumber":773,"author":{"gitId":"tlyi"},"content":"__________________________________________________________________________________________________________","lastModifiedDate":"2021-10-29"},{"lineNumber":774,"author":{"gitId":"tlyi"},"content":"```","lastModifiedDate":"2021-10-29"},{"lineNumber":775,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":776,"author":{"gitId":"tlyi"},"content":"#### 4.5.3 Editing Food Bank Items `edit fbank/`","lastModifiedDate":"2021-10-29"},{"lineNumber":777,"author":{"gitId":"tlyi"},"content":"If you have entered any wrong information or wish to update existing Items in the Food Bank, you can use this command to do so.","lastModifiedDate":"2021-10-29"},{"lineNumber":778,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":779,"author":{"gitId":"tlyi"},"content":"Format:  `edit fbank/LIST_NO {n/NEW_NAME} {c/NEW_CALORIES}` edits the n\u003csup\u003eth\u003c/sup\u003e Item in the Food Bank, where *n* is the index of the Food Item to edit.","lastModifiedDate":"2021-11-07"},{"lineNumber":780,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":781,"author":{"gitId":"xingjie99"},"content":"❗ `LIST_NO` must be a positive integer within the range of the number of Items in the list.\\","lastModifiedDate":"2021-11-08"},{"lineNumber":782,"author":{"gitId":"xingjie99"},"content":"❗ Though the parameters are optional, do provide at least one of them so that _Fitbot_ knows what you want to update about the Item!","lastModifiedDate":"2021-11-08"},{"lineNumber":783,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":784,"author":{"gitId":"tlyi"},"content":"Example:","lastModifiedDate":"2021-10-29"},{"lineNumber":785,"author":{"gitId":"tlyi"},"content":"```","lastModifiedDate":"2021-10-29"},{"lineNumber":786,"author":{"gitId":"tlyi"},"content":"edit fbank/1 c/350","lastModifiedDate":"2021-10-29"},{"lineNumber":787,"author":{"gitId":"tlyi"},"content":"__________________________________________________________________________________________________________","lastModifiedDate":"2021-10-29"},{"lineNumber":788,"author":{"gitId":"tlyi"},"content":"Item number 1 in the food bank has been changed to:","lastModifiedDate":"2021-10-29"},{"lineNumber":789,"author":{"gitId":"tryyang2001"},"content":"\tBaked Potato (350 cal)","lastModifiedDate":"2021-10-29"},{"lineNumber":790,"author":{"gitId":"tlyi"},"content":"__________________________________________________________________________________________________________","lastModifiedDate":"2021-10-29"},{"lineNumber":791,"author":{"gitId":"tlyi"},"content":"```","lastModifiedDate":"2021-10-29"},{"lineNumber":792,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":793,"author":{"gitId":"tlyi"},"content":"#### 4.5.4 Deleting Food Bank Items `delete fbank/`","lastModifiedDate":"2021-10-29"},{"lineNumber":794,"author":{"gitId":"tlyi"},"content":"You can delete an Item from the Food Bank using this command.","lastModifiedDate":"2021-10-29"},{"lineNumber":795,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":796,"author":{"gitId":"tlyi"},"content":"Format: `edit fbank/LIST_NO {,LIST_NO,...}` deletes the n\u003csup\u003eth\u003c/sup\u003e Item in the Food Bank, where *n* is the index of the Food Item to edit. ","lastModifiedDate":"2021-11-07"},{"lineNumber":797,"author":{"gitId":"tlyi"},"content":"You may delete multiple Food Items at once by providing multiple `LIST_NO` that are separated by commas.  ","lastModifiedDate":"2021-11-07"},{"lineNumber":798,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":799,"author":{"gitId":"xingjie99"},"content":"❗ `LIST_NO` must be a positive integer within the range of the number of Items in the list.","lastModifiedDate":"2021-10-29"},{"lineNumber":800,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":801,"author":{"gitId":"tlyi"},"content":"Example:","lastModifiedDate":"2021-10-29"},{"lineNumber":802,"author":{"gitId":"tlyi"},"content":"```","lastModifiedDate":"2021-10-29"},{"lineNumber":803,"author":{"gitId":"tlyi"},"content":"delete fbank/1,2","lastModifiedDate":"2021-11-07"},{"lineNumber":804,"author":{"gitId":"tlyi"},"content":"__________________________________________________________________________________________________________","lastModifiedDate":"2021-10-29"},{"lineNumber":805,"author":{"gitId":"tlyi"},"content":"All of the following food bank items have been deleted:","lastModifiedDate":"2021-11-07"},{"lineNumber":806,"author":{"gitId":"tlyi"},"content":"\t1. Baked Potato (350 cal) ","lastModifiedDate":"2021-11-07"},{"lineNumber":807,"author":{"gitId":"tlyi"},"content":"\t2. McSpicy Meal (1001 cal) ","lastModifiedDate":"2021-11-07"},{"lineNumber":808,"author":{"gitId":"tlyi"},"content":"Number of food item(s) left in the food bank: 0","lastModifiedDate":"2021-11-07"},{"lineNumber":809,"author":{"gitId":"tlyi"},"content":"__________________________________________________________________________________________________________","lastModifiedDate":"2021-10-29"},{"lineNumber":810,"author":{"gitId":"tlyi"},"content":"```","lastModifiedDate":"2021-10-29"},{"lineNumber":811,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":812,"author":{"gitId":"tlyi"},"content":"💡   **Tip:** If you wish to remove all the Food Items from the Food Bank, there is a shortcut command: `delete fbank/all`.","lastModifiedDate":"2021-10-29"},{"lineNumber":813,"author":{"gitId":"xingjie99"},"content":"```","lastModifiedDate":"2021-11-08"},{"lineNumber":814,"author":{"gitId":"xingjie99"},"content":"delete fbank/all","lastModifiedDate":"2021-11-08"},{"lineNumber":815,"author":{"gitId":"xingjie99"},"content":"__________________________________________________________________________________________________________","lastModifiedDate":"2021-11-08"},{"lineNumber":816,"author":{"gitId":"xingjie99"},"content":"All food items in the food bank have been removed.","lastModifiedDate":"2021-11-08"},{"lineNumber":817,"author":{"gitId":"xingjie99"},"content":"__________________________________________________________________________________________________________","lastModifiedDate":"2021-11-08"},{"lineNumber":818,"author":{"gitId":"xingjie99"},"content":"```","lastModifiedDate":"2021-11-08"},{"lineNumber":819,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":820,"author":{"gitId":"tlyi"},"content":"[⏫ Back to content page](#content-page)","lastModifiedDate":"2021-11-07"},{"lineNumber":821,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":822,"author":{"gitId":"tlyi"},"content":"### **4.6. Building your Exercise Bank**","lastModifiedDate":"2021-10-29"},{"lineNumber":823,"author":{"gitId":"tlyi"},"content":"Have a standard workout routine that you use? You can add it into the Exercise Bank for _Fitbot_ to remember the amount of calories you ","lastModifiedDate":"2021-10-29"},{"lineNumber":824,"author":{"gitId":"tlyi"},"content":"burn from it!","lastModifiedDate":"2021-10-29"},{"lineNumber":825,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":826,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":827,"author":{"gitId":"tlyi"},"content":"#### 4.6.1 Adding Exercise Bank Items `add ebank/`","lastModifiedDate":"2021-10-29"},{"lineNumber":828,"author":{"gitId":"tlyi"},"content":"You can add an Exercise Item into the Exercise Bank using this command.","lastModifiedDate":"2021-10-29"},{"lineNumber":829,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":830,"author":{"gitId":"tlyi"},"content":"Format: `add ebank/ITEM c/CALORIES`","lastModifiedDate":"2021-10-29"},{"lineNumber":831,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":832,"author":{"gitId":"xingjie99"},"content":"Example:","lastModifiedDate":"2021-11-08"},{"lineNumber":833,"author":{"gitId":"tlyi"},"content":"```","lastModifiedDate":"2021-10-25"},{"lineNumber":834,"author":{"gitId":"tlyi"},"content":"add ebank/30 min jog c/450","lastModifiedDate":"2021-10-29"},{"lineNumber":835,"author":{"gitId":"tlyi"},"content":"__________________________________________________________________________________________________________","lastModifiedDate":"2021-10-25"},{"lineNumber":836,"author":{"gitId":"tlyi"},"content":"An exercise item has been added to the exercise bank:","lastModifiedDate":"2021-10-29"},{"lineNumber":837,"author":{"gitId":"tlyi"},"content":"\t30 min jog (450 cal)","lastModifiedDate":"2021-10-29"},{"lineNumber":838,"author":{"gitId":"tlyi"},"content":"__________________________________________________________________________________________________________","lastModifiedDate":"2021-10-25"},{"lineNumber":839,"author":{"gitId":"tlyi"},"content":"```","lastModifiedDate":"2021-10-29"},{"lineNumber":840,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":841,"author":{"gitId":"tlyi"},"content":"❗️ The Exercise Bank cannot have duplicate item names as _Fitbot_ needs to be able to uniquely identify the item calories. Note that","lastModifiedDate":"2021-10-29"},{"lineNumber":842,"author":{"gitId":"tlyi"},"content":"the match for item name is **case-insensitive**. For example, if an item named `jogging` already exists in the Exercise Bank, an item named `Jogging` also cannot be added in.","lastModifiedDate":"2021-10-29"},{"lineNumber":843,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":844,"author":{"gitId":"tlyi"},"content":"Similar to the Food Bank, after adding the item to the Exercise Bank, the next time you want to add this item to your Exercise List, you can just provide its name","lastModifiedDate":"2021-10-29"},{"lineNumber":845,"author":{"gitId":"tlyi"},"content":"and _Fitbot_ will search up the corresponding calorie value for the item with the same name for you from the Exercise Bank! As before, note that the matching of names is","lastModifiedDate":"2021-10-29"},{"lineNumber":846,"author":{"gitId":"tlyi"},"content":"**case-insensitive**.","lastModifiedDate":"2021-10-29"},{"lineNumber":847,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":848,"author":{"gitId":"xingjie99"},"content":"Example:","lastModifiedDate":"2021-11-08"},{"lineNumber":849,"author":{"gitId":"tlyi"},"content":"```","lastModifiedDate":"2021-10-29"},{"lineNumber":850,"author":{"gitId":"tlyi"},"content":"add e/30 Min Jog d/07-11-2021","lastModifiedDate":"2021-11-07"},{"lineNumber":851,"author":{"gitId":"tlyi"},"content":"__________________________________________________________________________________________________________","lastModifiedDate":"2021-10-29"},{"lineNumber":852,"author":{"gitId":"tlyi"},"content":"An exercise item has been added:","lastModifiedDate":"2021-10-29"},{"lineNumber":853,"author":{"gitId":"tlyi"},"content":"\t30 Min Jog (450 cal) @ 07 Nov 2021","lastModifiedDate":"2021-11-07"},{"lineNumber":854,"author":{"gitId":"tlyi"},"content":"__________________________________________________________________________________________________________","lastModifiedDate":"2021-10-29"},{"lineNumber":855,"author":{"gitId":"tlyi"},"content":"```","lastModifiedDate":"2021-10-29"},{"lineNumber":856,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":857,"author":{"gitId":"tlyi"},"content":"#### 4.6.2 Viewing Exercise Bank `view ebank/`","lastModifiedDate":"2021-10-29"},{"lineNumber":858,"author":{"gitId":"tlyi"},"content":"You can view all the Items in the Exercise Bank using this command.","lastModifiedDate":"2021-10-29"},{"lineNumber":859,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":860,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":861,"author":{"gitId":"tlyi"},"content":"Format: `view ebank/`","lastModifiedDate":"2021-10-29"},{"lineNumber":862,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":863,"author":{"gitId":"xingjie99"},"content":"Example:","lastModifiedDate":"2021-11-08"},{"lineNumber":864,"author":{"gitId":"tlyi"},"content":"```","lastModifiedDate":"2021-10-29"},{"lineNumber":865,"author":{"gitId":"tlyi"},"content":"view ebank/","lastModifiedDate":"2021-10-29"},{"lineNumber":866,"author":{"gitId":"tlyi"},"content":"__________________________________________________________________________________________________________","lastModifiedDate":"2021-10-29"},{"lineNumber":867,"author":{"gitId":"tlyi"},"content":"You have 1 exercise(s) in your exercise bank:","lastModifiedDate":"2021-10-29"},{"lineNumber":868,"author":{"gitId":"tlyi"},"content":"\t1. 30 min jog (450 cal)","lastModifiedDate":"2021-10-29"},{"lineNumber":869,"author":{"gitId":"tlyi"},"content":"__________________________________________________________________________________________________________","lastModifiedDate":"2021-10-29"},{"lineNumber":870,"author":{"gitId":"tlyi"},"content":"```","lastModifiedDate":"2021-10-29"},{"lineNumber":871,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":872,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":873,"author":{"gitId":"tlyi"},"content":"#### 4.6.3 Editing Exercise Bank Items `edit ebank/`","lastModifiedDate":"2021-10-29"},{"lineNumber":874,"author":{"gitId":"tlyi"},"content":"If you have entered any wrong information or wish to update existing Items in the Exercise Bank, you can use this command to do so.","lastModifiedDate":"2021-10-29"},{"lineNumber":875,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":876,"author":{"gitId":"tlyi"},"content":"Format:  `edit ebank/LIST_NO {n/NEW_NAME} {c/NEW_CALORIES}` edits the n\u003csup\u003eth\u003c/sup\u003e Item in the Exercise Bank, where *n* is the index of the Exercise Item to edit.","lastModifiedDate":"2021-11-07"},{"lineNumber":877,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":878,"author":{"gitId":"xingjie99"},"content":"❗ `LIST_NO` must be a positive integer within the range of the number of Items in the list.\\","lastModifiedDate":"2021-11-08"},{"lineNumber":879,"author":{"gitId":"xingjie99"},"content":"❗ Though the parameters are optional, do provide at least one of them so that _Fitbot_ knows what you want to update about the Item!","lastModifiedDate":"2021-11-08"},{"lineNumber":880,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":881,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":882,"author":{"gitId":"xingjie99"},"content":"Example:","lastModifiedDate":"2021-11-08"},{"lineNumber":883,"author":{"gitId":"tlyi"},"content":"``` ","lastModifiedDate":"2021-10-29"},{"lineNumber":884,"author":{"gitId":"tlyi"},"content":"edit ebank/1 n/35 min jog","lastModifiedDate":"2021-10-29"},{"lineNumber":885,"author":{"gitId":"tlyi"},"content":"__________________________________________________________________________________________________________","lastModifiedDate":"2021-10-29"},{"lineNumber":886,"author":{"gitId":"tlyi"},"content":"Item number 1 in the exercise bank has been changed to:","lastModifiedDate":"2021-10-29"},{"lineNumber":887,"author":{"gitId":"tlyi"},"content":"\t35 min jog (450 cal)","lastModifiedDate":"2021-10-29"},{"lineNumber":888,"author":{"gitId":"tlyi"},"content":"__________________________________________________________________________________________________________","lastModifiedDate":"2021-10-29"},{"lineNumber":889,"author":{"gitId":"tlyi"},"content":"```","lastModifiedDate":"2021-10-29"},{"lineNumber":890,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":891,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":892,"author":{"gitId":"tlyi"},"content":"#### 4.6.4 Deleting Exercise Bank Items `delete ebank/`","lastModifiedDate":"2021-10-29"},{"lineNumber":893,"author":{"gitId":"tlyi"},"content":"You can delete an Item from the Exercise Bank using this command.","lastModifiedDate":"2021-10-29"},{"lineNumber":894,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":895,"author":{"gitId":"tlyi"},"content":"Format: `delete ebank/LIST_NO {,LIST_NO,...}` deletes the n\u003csup\u003eth\u003c/sup\u003e Item in the Exercise Bank, where *n* is the index of the Exercise Item to edit.","lastModifiedDate":"2021-11-07"},{"lineNumber":896,"author":{"gitId":"tlyi"},"content":"You may delete multiple Exercise Items at once by providing multiple `LIST_NO` that are separated by commas.  ","lastModifiedDate":"2021-11-07"},{"lineNumber":897,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":898,"author":{"gitId":"xingjie99"},"content":"❗ `LIST_NO` must be a positive integer within the range of the number of Items in the list.","lastModifiedDate":"2021-10-29"},{"lineNumber":899,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":900,"author":{"gitId":"tlyi"},"content":"Example:","lastModifiedDate":"2021-10-29"},{"lineNumber":901,"author":{"gitId":"tlyi"},"content":"```","lastModifiedDate":"2021-10-25"},{"lineNumber":902,"author":{"gitId":"tlyi"},"content":"delete ebank/1","lastModifiedDate":"2021-10-29"},{"lineNumber":903,"author":{"gitId":"tlyi"},"content":"__________________________________________________________________________________________________________","lastModifiedDate":"2021-10-25"},{"lineNumber":904,"author":{"gitId":"tlyi"},"content":"An exercise item has been deleted from the exercise bank:","lastModifiedDate":"2021-10-29"},{"lineNumber":905,"author":{"gitId":"tlyi"},"content":"\t35 min jog (450 cal)","lastModifiedDate":"2021-10-29"},{"lineNumber":906,"author":{"gitId":"tlyi"},"content":"Number of exercise item(s) left in the exercise bank: 0","lastModifiedDate":"2021-10-29"},{"lineNumber":907,"author":{"gitId":"tlyi"},"content":"__________________________________________________________________________________________________________","lastModifiedDate":"2021-10-25"},{"lineNumber":908,"author":{"gitId":"tlyi"},"content":"```","lastModifiedDate":"2021-10-29"},{"lineNumber":909,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":910,"author":{"gitId":"tlyi"},"content":"💡   **Tip:** If you wish to remove all the Exercise Items from the Exercise Bank, there is a shortcut command: `delete ebank/all`.","lastModifiedDate":"2021-10-29"},{"lineNumber":911,"author":{"gitId":"xingjie99"},"content":"```","lastModifiedDate":"2021-11-08"},{"lineNumber":912,"author":{"gitId":"xingjie99"},"content":"delete ebank/all","lastModifiedDate":"2021-11-08"},{"lineNumber":913,"author":{"gitId":"xingjie99"},"content":"__________________________________________________________________________________________________________","lastModifiedDate":"2021-11-08"},{"lineNumber":914,"author":{"gitId":"xingjie99"},"content":"All exercise items in the exercise bank have been removed.","lastModifiedDate":"2021-11-08"},{"lineNumber":915,"author":{"gitId":"xingjie99"},"content":"__________________________________________________________________________________________________________","lastModifiedDate":"2021-11-08"},{"lineNumber":916,"author":{"gitId":"xingjie99"},"content":"```","lastModifiedDate":"2021-11-08"},{"lineNumber":917,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":918,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":919,"author":{"gitId":"tlyi"},"content":"[⏫ Back to content page](#content-page)","lastModifiedDate":"2021-11-07"},{"lineNumber":920,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":921,"author":{"gitId":"xingjie99"},"content":"### **4.7 Viewing Your Calorie Summary** `overview`","lastModifiedDate":"2021-10-29"},{"lineNumber":922,"author":{"gitId":"tlyi"},"content":"This command is used to view the summary of the calories gained from food, calories burnt from exercises as well as","lastModifiedDate":"2021-10-25"},{"lineNumber":923,"author":{"gitId":"tttyyzzz"},"content":"net calories after including BMR.","lastModifiedDate":"2021-10-24"},{"lineNumber":924,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":925,"author":{"gitId":"tryyang2001"},"content":"Format: `overview`","lastModifiedDate":"2021-10-15"},{"lineNumber":926,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":927,"author":{"gitId":"tttyyzzz"},"content":"Example:","lastModifiedDate":"2021-10-27"},{"lineNumber":928,"author":{"gitId":"tryyang2001"},"content":"```text","lastModifiedDate":"2021-10-15"},{"lineNumber":929,"author":{"gitId":"tryyang2001"},"content":"overview","lastModifiedDate":"2021-10-15"},{"lineNumber":930,"author":{"gitId":"tttyyzzz"},"content":"-*WEEKLY OVERVIEW*-","lastModifiedDate":"2021-10-27"},{"lineNumber":931,"author":{"gitId":"tlyi"},"content":"Hi Lisa, this is your calorie summary for the week.","lastModifiedDate":"2021-11-07"},{"lineNumber":932,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":933,"author":{"gitId":"tttyyzzz"},"content":"Food:","lastModifiedDate":"2021-10-24"},{"lineNumber":934,"author":{"gitId":"tlyi"},"content":"You have consumed 14600 cal this week from 01-Nov to 07-Nov.","lastModifiedDate":"2021-11-07"},{"lineNumber":935,"author":{"gitId":"tttyyzzz"},"content":"Calorie gained from food (Daily)","lastModifiedDate":"2021-10-24"},{"lineNumber":936,"author":{"gitId":"tlyi"},"content":"01-Nov   █████████████████    2600","lastModifiedDate":"2021-11-07"},{"lineNumber":937,"author":{"gitId":"tlyi"},"content":"02-Nov   █████████████    1900","lastModifiedDate":"2021-11-07"},{"lineNumber":938,"author":{"gitId":"tlyi"},"content":"03-Nov   ██████████████████████████████    4500","lastModifiedDate":"2021-11-07"},{"lineNumber":939,"author":{"gitId":"tlyi"},"content":"04-Nov   ████████████████    2400","lastModifiedDate":"2021-11-07"},{"lineNumber":940,"author":{"gitId":"tlyi"},"content":"05-Nov   █████████████████████    3200","lastModifiedDate":"2021-11-07"},{"lineNumber":941,"author":{"gitId":"tlyi"},"content":"06-Nov       0","lastModifiedDate":"2021-11-07"},{"lineNumber":942,"author":{"gitId":"tlyi"},"content":"07-Nov       0","lastModifiedDate":"2021-11-07"},{"lineNumber":943,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":944,"author":{"gitId":"tttyyzzz"},"content":"Exercise:","lastModifiedDate":"2021-10-29"},{"lineNumber":945,"author":{"gitId":"tlyi"},"content":"You have burnt 3090 cal this week from 01-Nov to 07-Nov.","lastModifiedDate":"2021-11-07"},{"lineNumber":946,"author":{"gitId":"tttyyzzz"},"content":"Calorie burnt from exercise (Daily)","lastModifiedDate":"2021-10-24"},{"lineNumber":947,"author":{"gitId":"tlyi"},"content":"01-Nov   ██████    230","lastModifiedDate":"2021-11-07"},{"lineNumber":948,"author":{"gitId":"tlyi"},"content":"02-Nov   ██████████████████████████████    1200","lastModifiedDate":"2021-11-07"},{"lineNumber":949,"author":{"gitId":"tlyi"},"content":"03-Nov   ████████████████████    780","lastModifiedDate":"2021-11-07"},{"lineNumber":950,"author":{"gitId":"tlyi"},"content":"04-Nov   ██████████████    540","lastModifiedDate":"2021-11-07"},{"lineNumber":951,"author":{"gitId":"tlyi"},"content":"05-Nov   █████████    340","lastModifiedDate":"2021-11-07"},{"lineNumber":952,"author":{"gitId":"tlyi"},"content":"06-Nov       0","lastModifiedDate":"2021-11-07"},{"lineNumber":953,"author":{"gitId":"tlyi"},"content":"07-Nov       0","lastModifiedDate":"2021-11-07"},{"lineNumber":954,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":955,"author":{"gitId":"tttyyzzz"},"content":"Daily net calories**:","lastModifiedDate":"2021-10-29"},{"lineNumber":956,"author":{"gitId":"tlyi"},"content":"01-Nov :   -1130","lastModifiedDate":"2021-11-07"},{"lineNumber":957,"author":{"gitId":"tlyi"},"content":"02-Nov :   -2800","lastModifiedDate":"2021-11-07"},{"lineNumber":958,"author":{"gitId":"tlyi"},"content":"03-Nov :   220","lastModifiedDate":"2021-11-07"},{"lineNumber":959,"author":{"gitId":"tlyi"},"content":"04-Nov :   -1640","lastModifiedDate":"2021-11-07"},{"lineNumber":960,"author":{"gitId":"tlyi"},"content":"05-Nov :   -640","lastModifiedDate":"2021-11-07"},{"lineNumber":961,"author":{"gitId":"tlyi"},"content":"06-Nov :   -3500","lastModifiedDate":"2021-11-07"},{"lineNumber":962,"author":{"gitId":"tlyi"},"content":"07-Nov :   -3500","lastModifiedDate":"2021-11-07"},{"lineNumber":963,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":964,"author":{"gitId":"tttyyzzz"},"content":"Number of supper meals this week: 1","lastModifiedDate":"2021-10-29"},{"lineNumber":965,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":966,"author":{"gitId":"tttyyzzz"},"content":"** Net calories \u003d Food consumed - Exercise output - your basal metabolic rate, where ","lastModifiedDate":"2021-10-29"},{"lineNumber":967,"author":{"gitId":"tttyyzzz"},"content":"your basal metabolic rate is a factor of your age, gender, height and weight retrieved from your profile.","lastModifiedDate":"2021-10-29"},{"lineNumber":968,"author":{"gitId":"tttyyzzz"},"content":"All calculations are done in calories.","lastModifiedDate":"2021-10-29"},{"lineNumber":969,"author":{"gitId":"tttyyzzz"},"content":"__________________________________________________________________________________________________________","lastModifiedDate":"2021-10-27"},{"lineNumber":970,"author":{"gitId":"tttyyzzz"},"content":"This is your calorie overview for today:","lastModifiedDate":"2021-10-27"},{"lineNumber":971,"author":{"gitId":"tttyyzzz"},"content":"Your calorie gained from food is: 0","lastModifiedDate":"2021-10-29"},{"lineNumber":972,"author":{"gitId":"tttyyzzz"},"content":"Your calorie lost from exercise is: 0","lastModifiedDate":"2021-10-29"},{"lineNumber":973,"author":{"gitId":"tttyyzzz"},"content":"Your net calorie intake is: -3500","lastModifiedDate":"2021-10-29"},{"lineNumber":974,"author":{"gitId":"tttyyzzz"},"content":"Your calorie goal is: 123","lastModifiedDate":"2021-10-29"},{"lineNumber":975,"author":{"gitId":"tlyi"},"content":"You are 3623 cal away from your goal!","lastModifiedDate":"2021-11-07"},{"lineNumber":976,"author":{"gitId":"tttyyzzz"},"content":"__________________________________________________________________________________________________________","lastModifiedDate":"2021-10-27"},{"lineNumber":977,"author":{"gitId":"tryyang2001"},"content":"```","lastModifiedDate":"2021-10-15"},{"lineNumber":978,"author":{"gitId":"tlyi"},"content":"[⏫ Back to content page](#content-page)","lastModifiedDate":"2021-11-07"},{"lineNumber":979,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":980,"author":{"gitId":"xingjie99"},"content":"### **4.8 Viewing Help** `help`","lastModifiedDate":"2021-10-29"},{"lineNumber":981,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":982,"author":{"gitId":"tlyi"},"content":"If you need help using _Fitbot_, you can use this command to see a list of commands recognised by _Fitbot_ and their usage.","lastModifiedDate":"2021-11-07"},{"lineNumber":983,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":984,"author":{"gitId":"tttyyzzz"},"content":"Format: `help`","lastModifiedDate":"2021-10-27"},{"lineNumber":985,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":986,"author":{"gitId":"tttyyzzz"},"content":"Example:","lastModifiedDate":"2021-10-27"},{"lineNumber":987,"author":{"gitId":"tttyyzzz"},"content":"```text","lastModifiedDate":"2021-10-27"},{"lineNumber":988,"author":{"gitId":"tttyyzzz"},"content":"help","lastModifiedDate":"2021-10-27"},{"lineNumber":989,"author":{"gitId":"tttyyzzz"},"content":"Welcome to the help page.","lastModifiedDate":"2021-10-27"},{"lineNumber":990,"author":{"gitId":"tttyyzzz"},"content":"Below are the commands to get you started.","lastModifiedDate":"2021-10-27"},{"lineNumber":991,"author":{"gitId":"tttyyzzz"},"content":"More details could be found on: ","lastModifiedDate":"2021-10-27"},{"lineNumber":992,"author":{"gitId":"tttyyzzz"},"content":"https://tinyurl.com/fitbot-user-guide","lastModifiedDate":"2021-10-29"},{"lineNumber":993,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":994,"author":{"gitId":"tttyyzzz"},"content":"In the formats of the command, prefixes wrapped in curly brackets {} means that they are optional.","lastModifiedDate":"2021-10-29"},{"lineNumber":995,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":996,"author":{"gitId":"tttyyzzz"},"content":"add -- Add food or exercise record to the current list.","lastModifiedDate":"2021-10-27"},{"lineNumber":997,"author":{"gitId":"tttyyzzz"},"content":"      Add Food Item","lastModifiedDate":"2021-10-29"},{"lineNumber":998,"author":{"gitId":"tttyyzzz"},"content":"      Format: add f/ITEM {c/CALORIES} {d/DD-MM-YYYY} {t/HHMM}","lastModifiedDate":"2021-10-27"},{"lineNumber":999,"author":{"gitId":"tttyyzzz"},"content":"        Prefix               Input","lastModifiedDate":"2021-10-29"},{"lineNumber":1000,"author":{"gitId":"tlyi"},"content":"          f/             Description of the food","lastModifiedDate":"2021-11-07"},{"lineNumber":1001,"author":{"gitId":"tttyyzzz"},"content":"          c/             Calories of the food","lastModifiedDate":"2021-10-27"},{"lineNumber":1002,"author":{"gitId":"tttyyzzz"},"content":"          d/             Date of food in DD-MM-YYYY","lastModifiedDate":"2021-10-27"},{"lineNumber":1003,"author":{"gitId":"tttyyzzz"},"content":"          t/             Time of food in HHMM","lastModifiedDate":"2021-10-27"},{"lineNumber":1004,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":1005,"author":{"gitId":"tttyyzzz"},"content":"      Add Exercise Item","lastModifiedDate":"2021-10-29"},{"lineNumber":1006,"author":{"gitId":"tttyyzzz"},"content":"      Format: add f/ITEM {c/CALORIES} {d/DD-MM-YYYY} {t/HHMM}","lastModifiedDate":"2021-10-27"},{"lineNumber":1007,"author":{"gitId":"tttyyzzz"},"content":"        Prefix               Input","lastModifiedDate":"2021-10-29"},{"lineNumber":1008,"author":{"gitId":"tttyyzzz"},"content":"          e/             Description of exercise","lastModifiedDate":"2021-10-27"},{"lineNumber":1009,"author":{"gitId":"tttyyzzz"},"content":"          c/             Calories burnt from exercise","lastModifiedDate":"2021-10-27"},{"lineNumber":1010,"author":{"gitId":"tttyyzzz"},"content":"          d/             Date of exercise in DD-MM-YYYY","lastModifiedDate":"2021-10-27"},{"lineNumber":1011,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":1012,"author":{"gitId":"tttyyzzz"},"content":"      Add Recurring Exercise to Upcoming Exercise List","lastModifiedDate":"2021-10-27"},{"lineNumber":1013,"author":{"gitId":"tlyi"},"content":"      Format: add r/ITEM c/CALORIES :/START_DATE -/END_DATE @/DAY_OF_THE_WEEK {,DAY_OF_THE_WEEK,...}","lastModifiedDate":"2021-11-07"},{"lineNumber":1014,"author":{"gitId":"tlyi"},"content":"      Format: delete e/LIST_NO d/DD-MM-YYYY","lastModifiedDate":"2021-11-07"},{"lineNumber":1015,"author":{"gitId":"tttyyzzz"},"content":"        Prefix               Input","lastModifiedDate":"2021-10-29"},{"lineNumber":1016,"author":{"gitId":"tttyyzzz"},"content":"          r/             Description of upcoming exercise","lastModifiedDate":"2021-10-27"},{"lineNumber":1017,"author":{"gitId":"tttyyzzz"},"content":"          c/             Calories burnt from exercise","lastModifiedDate":"2021-10-27"},{"lineNumber":1018,"author":{"gitId":"tttyyzzz"},"content":"          :/             Start date of exercise in DD-MM-YYYY","lastModifiedDate":"2021-10-27"},{"lineNumber":1019,"author":{"gitId":"tttyyzzz"},"content":"          -/             End date of exercise in DD-MM-YYYY","lastModifiedDate":"2021-10-27"},{"lineNumber":1020,"author":{"gitId":"tttyyzzz"},"content":"          @/             Workout days of the week","lastModifiedDate":"2021-10-27"},{"lineNumber":1021,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":1022,"author":{"gitId":"tttyyzzz"},"content":"      Add Food Item in Food Bank","lastModifiedDate":"2021-10-29"},{"lineNumber":1023,"author":{"gitId":"tttyyzzz"},"content":"      Format: add fbank/ITEM c/CALORIES","lastModifiedDate":"2021-10-27"},{"lineNumber":1024,"author":{"gitId":"tttyyzzz"},"content":"        Prefix               Input","lastModifiedDate":"2021-10-29"},{"lineNumber":1025,"author":{"gitId":"tttyyzzz"},"content":"          fbank/         Description of food","lastModifiedDate":"2021-10-27"},{"lineNumber":1026,"author":{"gitId":"tlyi"},"content":"          c/             Calories of the food","lastModifiedDate":"2021-11-07"},{"lineNumber":1027,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":1028,"author":{"gitId":"tttyyzzz"},"content":"      Add Exercise Item in ExerciseBank","lastModifiedDate":"2021-10-29"},{"lineNumber":1029,"author":{"gitId":"tttyyzzz"},"content":"      Format: add fbank/ITEM c/CALORIES","lastModifiedDate":"2021-10-29"},{"lineNumber":1030,"author":{"gitId":"tttyyzzz"},"content":"        Prefix               Input","lastModifiedDate":"2021-10-29"},{"lineNumber":1031,"author":{"gitId":"tlyi"},"content":"          fbank/         Description of exercise","lastModifiedDate":"2021-11-07"},{"lineNumber":1032,"author":{"gitId":"tttyyzzz"},"content":"          c/             Calories burnt from exercise","lastModifiedDate":"2021-10-27"},{"lineNumber":1033,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":1034,"author":{"gitId":"tttyyzzz"},"content":"bmi -- Calculate the Body-Mass-Index of user","lastModifiedDate":"2021-10-27"},{"lineNumber":1035,"author":{"gitId":"tttyyzzz"},"content":"      Format: bmi {h/HEIGHT_IN_CM w/WEIGHT_IN_KG}","lastModifiedDate":"2021-10-27"},{"lineNumber":1036,"author":{"gitId":"tttyyzzz"},"content":"        Prefix               Input ","lastModifiedDate":"2021-10-29"},{"lineNumber":1037,"author":{"gitId":"tttyyzzz"},"content":"          h/             Height of user in cm","lastModifiedDate":"2021-10-27"},{"lineNumber":1038,"author":{"gitId":"tttyyzzz"},"content":"          w/             Weight of user in kg","lastModifiedDate":"2021-10-27"},{"lineNumber":1039,"author":{"gitId":"tlyi"},"content":"      If no prefixes are given, bmi will be calculated using the height and weight in the profile.","lastModifiedDate":"2021-11-07"},{"lineNumber":1040,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":1041,"author":{"gitId":"tttyyzzz"},"content":"bye -- Exit the program.","lastModifiedDate":"2021-10-27"},{"lineNumber":1042,"author":{"gitId":"tttyyzzz"},"content":"      Format: bye","lastModifiedDate":"2021-10-27"},{"lineNumber":1043,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":1044,"author":{"gitId":"tttyyzzz"},"content":"delete -- Delete entry of food or exercise added from a list.","lastModifiedDate":"2021-10-27"},{"lineNumber":1045,"author":{"gitId":"tttyyzzz"},"content":"      Deleting Food Item","lastModifiedDate":"2021-10-29"},{"lineNumber":1046,"author":{"gitId":"tlyi"},"content":"      Format: delete f/LIST_NO d/DD-MM-YYYY t/HHMM","lastModifiedDate":"2021-11-07"},{"lineNumber":1047,"author":{"gitId":"tttyyzzz"},"content":"        Prefix               Input","lastModifiedDate":"2021-10-29"},{"lineNumber":1048,"author":{"gitId":"tttyyzzz"},"content":"          f/             Index of food in Food List within the given date","lastModifiedDate":"2021-10-29"},{"lineNumber":1049,"author":{"gitId":"tttyyzzz"},"content":"          d/             Date of food in DD-MM-YYYY","lastModifiedDate":"2021-10-27"},{"lineNumber":1050,"author":{"gitId":"tttyyzzz"},"content":"          t/             Time of food in HHMM","lastModifiedDate":"2021-10-27"},{"lineNumber":1051,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":1052,"author":{"gitId":"tttyyzzz"},"content":"      Delete Exercise Item","lastModifiedDate":"2021-10-29"},{"lineNumber":1053,"author":{"gitId":"tlyi"},"content":"      Format: delete e/LIST_NO d/DD-MM-YYYY","lastModifiedDate":"2021-11-07"},{"lineNumber":1054,"author":{"gitId":"tttyyzzz"},"content":"        Prefix               Input","lastModifiedDate":"2021-10-29"},{"lineNumber":1055,"author":{"gitId":"tlyi"},"content":"          e/             Index of exercise in Exercise List within the given date","lastModifiedDate":"2021-11-07"},{"lineNumber":1056,"author":{"gitId":"tttyyzzz"},"content":"          d/             Date of exercise in DD-MM-YYYY","lastModifiedDate":"2021-10-27"},{"lineNumber":1057,"author":{"gitId":"tttyyzzz"},"content":"  ","lastModifiedDate":"2021-10-27"},{"lineNumber":1058,"author":{"gitId":"tttyyzzz"},"content":"      Delete Upcoming Exercise Items from Upcoming Exercise List","lastModifiedDate":"2021-10-29"},{"lineNumber":1059,"author":{"gitId":"tlyi"},"content":"      Format: delete u/LIST_NO {,LIST_NO,...}","lastModifiedDate":"2021-11-07"},{"lineNumber":1060,"author":{"gitId":"tttyyzzz"},"content":"        Prefix               Input","lastModifiedDate":"2021-10-29"},{"lineNumber":1061,"author":{"gitId":"tlyi"},"content":"          u/             The index of the item within the Upcoming Exercise List","lastModifiedDate":"2021-11-07"},{"lineNumber":1062,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":1063,"author":{"gitId":"tttyyzzz"},"content":"      Delete Food Item from Food Bank","lastModifiedDate":"2021-10-29"},{"lineNumber":1064,"author":{"gitId":"tlyi"},"content":"      Format: delete fbank/LIST_NO {,LIST_NO,...}","lastModifiedDate":"2021-11-07"},{"lineNumber":1065,"author":{"gitId":"tttyyzzz"},"content":"        Prefix               Input","lastModifiedDate":"2021-10-29"},{"lineNumber":1066,"author":{"gitId":"tlyi"},"content":"          fbank/         The index of the item within the Food Bank","lastModifiedDate":"2021-11-07"},{"lineNumber":1067,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":1068,"author":{"gitId":"tttyyzzz"},"content":"      Delete Exercise Item from Exercise Bank","lastModifiedDate":"2021-10-29"},{"lineNumber":1069,"author":{"gitId":"tlyi"},"content":"      Format: delete ebank/LIST_NO {,LIST_NO,...}","lastModifiedDate":"2021-11-07"},{"lineNumber":1070,"author":{"gitId":"tttyyzzz"},"content":"        Prefix               Input","lastModifiedDate":"2021-10-29"},{"lineNumber":1071,"author":{"gitId":"tlyi"},"content":"          ebank/         The index of the item within the Exercise Bank","lastModifiedDate":"2021-11-07"},{"lineNumber":1072,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":1073,"author":{"gitId":"tttyyzzz"},"content":"edit -- Edit entry of food or exercise added from a list.","lastModifiedDate":"2021-10-27"},{"lineNumber":1074,"author":{"gitId":"tttyyzzz"},"content":"      Edit Food Bank","lastModifiedDate":"2021-10-27"},{"lineNumber":1075,"author":{"gitId":"tlyi"},"content":"      Format: edit fbank/LIST_NO {n/NEW_NAME} {c/NEW_CALORIES}","lastModifiedDate":"2021-11-07"},{"lineNumber":1076,"author":{"gitId":"tttyyzzz"},"content":"        Prefix               Input","lastModifiedDate":"2021-10-29"},{"lineNumber":1077,"author":{"gitId":"tlyi"},"content":"          fbank/         The index of the item within the Food Bank","lastModifiedDate":"2021-11-07"},{"lineNumber":1078,"author":{"gitId":"tttyyzzz"},"content":"          n/             New description of food name","lastModifiedDate":"2021-10-27"},{"lineNumber":1079,"author":{"gitId":"tttyyzzz"},"content":"          c/             Calories of food","lastModifiedDate":"2021-10-27"},{"lineNumber":1080,"author":{"gitId":"tttyyzzz"},"content":"   ","lastModifiedDate":"2021-10-27"},{"lineNumber":1081,"author":{"gitId":"tttyyzzz"},"content":"      Edit Exercise Bank","lastModifiedDate":"2021-10-27"},{"lineNumber":1082,"author":{"gitId":"tlyi"},"content":"      Format: edit ebank/LIST_NO {n/NEW_NAME} {c/NEW_CALORIES}","lastModifiedDate":"2021-11-07"},{"lineNumber":1083,"author":{"gitId":"tttyyzzz"},"content":"        Prefix               Input","lastModifiedDate":"2021-10-29"},{"lineNumber":1084,"author":{"gitId":"tlyi"},"content":"          ebank/         The index of the item within the Exercise Bank","lastModifiedDate":"2021-11-07"},{"lineNumber":1085,"author":{"gitId":"tttyyzzz"},"content":"          n/             New description of exercise name","lastModifiedDate":"2021-10-27"},{"lineNumber":1086,"author":{"gitId":"tttyyzzz"},"content":"          c/             Calories burnt from exercise","lastModifiedDate":"2021-10-27"},{"lineNumber":1087,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":1088,"author":{"gitId":"tttyyzzz"},"content":"     Edit Upcoming Exercise List","lastModifiedDate":"2021-10-27"},{"lineNumber":1089,"author":{"gitId":"tlyi"},"content":"     Format: edit u/LIST_NO {n/NEW_NAME} {c/NEW_CALORIES}","lastModifiedDate":"2021-11-07"},{"lineNumber":1090,"author":{"gitId":"tttyyzzz"},"content":"        Prefix               Input","lastModifiedDate":"2021-10-29"},{"lineNumber":1091,"author":{"gitId":"tlyi"},"content":"          u/             The index of the item within the Upcoming Exercise List","lastModifiedDate":"2021-11-07"},{"lineNumber":1092,"author":{"gitId":"tttyyzzz"},"content":"          n/             New description of exercise name","lastModifiedDate":"2021-10-27"},{"lineNumber":1093,"author":{"gitId":"tttyyzzz"},"content":"          c/             Calories burnt from exercise","lastModifiedDate":"2021-10-27"},{"lineNumber":1094,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":1095,"author":{"gitId":"tttyyzzz"},"content":"help -- View help for commands","lastModifiedDate":"2021-10-27"},{"lineNumber":1096,"author":{"gitId":"tttyyzzz"},"content":"      Format: help","lastModifiedDate":"2021-10-27"},{"lineNumber":1097,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":1098,"author":{"gitId":"tttyyzzz"},"content":"profile -- View or modify profile details","lastModifiedDate":"2021-10-27"},{"lineNumber":1099,"author":{"gitId":"tlyi"},"content":"      Format: profile {n/NAME} {h/HEIGHT(CM)} {w/WEIGHT(KG)} {a/AGE} {g/CALORIEGOAL} {s/GENDER(M/F)} {x/ACTIVITYFACTOR(1-5)}","lastModifiedDate":"2021-11-07"},{"lineNumber":1100,"author":{"gitId":"tttyyzzz"},"content":"        Prefix               Input ","lastModifiedDate":"2021-10-29"},{"lineNumber":1101,"author":{"gitId":"tttyyzzz"},"content":"          n/             Name of user","lastModifiedDate":"2021-10-27"},{"lineNumber":1102,"author":{"gitId":"tttyyzzz"},"content":"          h/             Height of user in cm","lastModifiedDate":"2021-10-27"},{"lineNumber":1103,"author":{"gitId":"tttyyzzz"},"content":"          w/             Weight of user in kg","lastModifiedDate":"2021-10-27"},{"lineNumber":1104,"author":{"gitId":"tttyyzzz"},"content":"          s/             Gender of user, m for male, f for female","lastModifiedDate":"2021-10-27"},{"lineNumber":1105,"author":{"gitId":"tttyyzzz"},"content":"          a/             Age of user","lastModifiedDate":"2021-10-27"},{"lineNumber":1106,"author":{"gitId":"tlyi"},"content":"          g/             Net calorie goal of user.","lastModifiedDate":"2021-11-07"},{"lineNumber":1107,"author":{"gitId":"tlyi"},"content":"                         Net calorie is based on calorie of food consumed - calories burnt from exercise and bmr","lastModifiedDate":"2021-11-07"},{"lineNumber":1108,"author":{"gitId":"tttyyzzz"},"content":"          x/             Activity factor of user, range 1 to 5","lastModifiedDate":"2021-10-27"},{"lineNumber":1109,"author":{"gitId":"tlyi"},"content":"      If no prefixes are given, user will be shown the current profile particulars.","lastModifiedDate":"2021-11-07"},{"lineNumber":1110,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":1111,"author":{"gitId":"tttyyzzz"},"content":"overview -- View weekly and daily summary of calories","lastModifiedDate":"2021-10-27"},{"lineNumber":1112,"author":{"gitId":"tttyyzzz"},"content":"      Format: overview","lastModifiedDate":"2021-10-27"},{"lineNumber":1113,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":1114,"author":{"gitId":"tttyyzzz"},"content":"view -- View all the food and/or exercises added.","lastModifiedDate":"2021-10-27"},{"lineNumber":1115,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":1116,"author":{"gitId":"tttyyzzz"},"content":"      Viewing Food List","lastModifiedDate":"2021-10-27"},{"lineNumber":1117,"author":{"gitId":"tttyyzzz"},"content":"      Format: view f/","lastModifiedDate":"2021-10-27"},{"lineNumber":1118,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":1119,"author":{"gitId":"tttyyzzz"},"content":"      View Exercise List","lastModifiedDate":"2021-10-29"},{"lineNumber":1120,"author":{"gitId":"tttyyzzz"},"content":"      Format: view e/","lastModifiedDate":"2021-10-27"},{"lineNumber":1121,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":1122,"author":{"gitId":"tttyyzzz"},"content":"      View Upcoming Exercise List","lastModifiedDate":"2021-10-27"},{"lineNumber":1123,"author":{"gitId":"tttyyzzz"},"content":"      Format: view u/","lastModifiedDate":"2021-10-27"},{"lineNumber":1124,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":1125,"author":{"gitId":"tttyyzzz"},"content":"      View Exercise Bank","lastModifiedDate":"2021-10-29"},{"lineNumber":1126,"author":{"gitId":"tttyyzzz"},"content":"      Format: view ebank/","lastModifiedDate":"2021-10-31"},{"lineNumber":1127,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":1128,"author":{"gitId":"tttyyzzz"},"content":"      View Food Bank","lastModifiedDate":"2021-10-29"},{"lineNumber":1129,"author":{"gitId":"tttyyzzz"},"content":"      Format: view fbank/","lastModifiedDate":"2021-10-31"},{"lineNumber":1130,"author":{"gitId":"tttyyzzz"},"content":"__________________________________________________________________________________________________________","lastModifiedDate":"2021-10-27"},{"lineNumber":1131,"author":{"gitId":"tryyang2001"},"content":"```","lastModifiedDate":"2021-10-15"},{"lineNumber":1132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":1133,"author":{"gitId":"tlyi"},"content":"[⏫ Back to content page](#content-page)","lastModifiedDate":"2021-11-07"},{"lineNumber":1134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":1135,"author":{"gitId":"xingjie99"},"content":"### **4.9. Exiting Program** `bye`","lastModifiedDate":"2021-10-29"},{"lineNumber":1136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":1137,"author":{"gitId":"xingjie99"},"content":"You can use this command to exit _Fitbot_.","lastModifiedDate":"2021-11-08"},{"lineNumber":1138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":1139,"author":{"gitId":"tryyang2001"},"content":"Format: `bye`","lastModifiedDate":"2021-10-15"},{"lineNumber":1140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":1141,"author":{"gitId":"xingjie99"},"content":"Example:","lastModifiedDate":"2021-11-08"},{"lineNumber":1142,"author":{"gitId":"tryyang2001"},"content":"```text  ","lastModifiedDate":"2021-10-15"},{"lineNumber":1143,"author":{"gitId":"tryyang2001"},"content":"bye  ","lastModifiedDate":"2021-10-15"},{"lineNumber":1144,"author":{"gitId":"tryyang2001"},"content":"_________________________________________________________________________________________________________","lastModifiedDate":"2021-10-28"},{"lineNumber":1145,"author":{"gitId":"tryyang2001"},"content":"Exiting Fitbot....  ","lastModifiedDate":"2021-10-15"},{"lineNumber":1146,"author":{"gitId":"tryyang2001"},"content":"Bye! Hope to see you again soon!!  ","lastModifiedDate":"2021-10-15"},{"lineNumber":1147,"author":{"gitId":"tryyang2001"},"content":"_________________________________________________________________________________________________________  ","lastModifiedDate":"2021-10-28"},{"lineNumber":1148,"author":{"gitId":"tryyang2001"},"content":"```  ","lastModifiedDate":"2021-10-15"},{"lineNumber":1149,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":1150,"author":{"gitId":"tlyi"},"content":"[⏫ Back to content page](#content-page)","lastModifiedDate":"2021-11-07"},{"lineNumber":1151,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":1152,"author":{"gitId":"tryyang2001"},"content":"### **5. Data Management**","lastModifiedDate":"2021-10-29"},{"lineNumber":1153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":1154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":1155,"author":{"gitId":"xingjie99"},"content":"#### 5.1. Saving The Data","lastModifiedDate":"2021-10-29"},{"lineNumber":1156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":1157,"author":{"gitId":"tlyi"},"content":"There is no need to save manually. Any updates made to the data will be automatically stored into the local drive and reloaded when _Fitbot_ is restarted.","lastModifiedDate":"2021-10-25"},{"lineNumber":1158,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":1159,"author":{"gitId":"xingjie99"},"content":"#### 5.2 Editing The Data File","lastModifiedDate":"2021-10-29"},{"lineNumber":1160,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":1161,"author":{"gitId":"tlyi"},"content":"_Fitbot_ data files are saved as `.txt` files `\u003cFitbot.jar file location\u003e/data/\u003ctext file name\u003e.txt`. \\","lastModifiedDate":"2021-11-07"},{"lineNumber":1162,"author":{"gitId":"tlyi"},"content":"Advanced users are welcomed to update data directly by editing the data files. ","lastModifiedDate":"2021-11-07"},{"lineNumber":1163,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":1164,"author":{"gitId":"tlyi"},"content":"❗ If your changes to the data files format are invalid, _Fitbot_ will skip the wrongly formatted line when it loads in the data.","lastModifiedDate":"2021-10-25"},{"lineNumber":1165,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":1166,"author":{"gitId":"tlyi"},"content":"❗ Ensure that you quit _Fitbot_ first if you would like to edit the files. Edits made directly to files when _Fitbot_ is running will not be saved.","lastModifiedDate":"2021-11-07"},{"lineNumber":1167,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":1168,"author":{"gitId":"tlyi"},"content":"[⏫ Back to content page](#content-page)","lastModifiedDate":"2021-11-07"},{"lineNumber":1169,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":1170,"author":{"gitId":"tryyang2001"},"content":"### **6. Data Limits**","lastModifiedDate":"2021-11-08"},{"lineNumber":1171,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1172,"author":{"gitId":"tryyang2001"},"content":"You can see all the data range available in order to help you better understand the input and output. Note that _all the ranges stated here are inclusive of the boundaries._","lastModifiedDate":"2021-11-08"},{"lineNumber":1173,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1174,"author":{"gitId":"tryyang2001"},"content":"- Items:","lastModifiedDate":"2021-11-08"},{"lineNumber":1175,"author":{"gitId":"tryyang2001"},"content":"  (Assuming today\u0027s date is 08 Nov 2021)","lastModifiedDate":"2021-11-08"},{"lineNumber":1176,"author":{"gitId":"tryyang2001"},"content":"  - For food and exercise dates: Past 7 days inclusive of today (eg. 02 Nov 2021 - 08 Nov 2021).","lastModifiedDate":"2021-11-08"},{"lineNumber":1177,"author":{"gitId":"tryyang2001"},"content":"  - For upcoming exercise dates: Tomorrow until 1 year later (eg. 09 Nov 2021 - 08 Nov 2021).","lastModifiedDate":"2021-11-08"},{"lineNumber":1178,"author":{"gitId":"tryyang2001"},"content":"  - Names for items: No usage of `|` or `/` inside the named items. Can substitute with `-` instead.","lastModifiedDate":"2021-11-08"},{"lineNumber":1179,"author":{"gitId":"tryyang2001"},"content":"  - Calories: Whole number from 1 to 10,000.","lastModifiedDate":"2021-11-08"},{"lineNumber":1180,"author":{"gitId":"tryyang2001"},"content":"- Profile:","lastModifiedDate":"2021-11-08"},{"lineNumber":1181,"author":{"gitId":"tryyang2001"},"content":"  - Name: No usage of `|` or `/` inside the names. Can be substituted with `-` instead.","lastModifiedDate":"2021-11-08"},{"lineNumber":1182,"author":{"gitId":"tryyang2001"},"content":"  - Height: Number from 1 to 300.","lastModifiedDate":"2021-11-08"},{"lineNumber":1183,"author":{"gitId":"tryyang2001"},"content":"  - Weight: Number from 1 to 300.","lastModifiedDate":"2021-11-08"},{"lineNumber":1184,"author":{"gitId":"tryyang2001"},"content":"  - Age: Whole number from 10 to 150.","lastModifiedDate":"2021-11-08"},{"lineNumber":1185,"author":{"gitId":"tryyang2001"},"content":"  - Gender: Only \u0027M\u0027 or \u0027F\u0027 characters are accepted (case insensitive). Any additional characters will render the input invalid.","lastModifiedDate":"2021-11-08"},{"lineNumber":1186,"author":{"gitId":"tryyang2001"},"content":"  - Calorie Goal: Whole number from -3000 to 10000.","lastModifiedDate":"2021-11-08"},{"lineNumber":1187,"author":{"gitId":"tryyang2001"},"content":"  - Activity Factor: Whole number from 1 to 5.","lastModifiedDate":"2021-11-08"},{"lineNumber":1188,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1189,"author":{"gitId":"tryyang2001"},"content":"[⏫ Back to content page](#content-page)","lastModifiedDate":"2021-11-08"},{"lineNumber":1190,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1191,"author":{"gitId":"tryyang2001"},"content":"### **7. FAQ**","lastModifiedDate":"2021-11-08"},{"lineNumber":1192,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":1193,"author":{"gitId":"xingjie99"},"content":"**Q:** How do I transfer my data to another computer?\\","lastModifiedDate":"2021-10-25"},{"lineNumber":1194,"author":{"gitId":"tlyi"},"content":"**A:** Zip the folder with _Fitbot_ and its data files, and transfer to the new computer. Extract the zipped folder onto your new computer and follow steps 1, 4 and 5 in [Quick Start](#2-quick-start) to get your _Fitbot_ running on your new computer.","lastModifiedDate":"2021-11-07"},{"lineNumber":1195,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":1196,"author":{"gitId":"xingjie99"},"content":"**Q:** How many profiles can I create?\\","lastModifiedDate":"2021-10-25"},{"lineNumber":1197,"author":{"gitId":"tryyang2001"},"content":"**A:** _Fitbot_ only supports 1 profile. If you need to make any changes to your current profile, you can refer to [Updating Profile Attributes](#413-updating-profile-attributes).","lastModifiedDate":"2021-10-29"},{"lineNumber":1198,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":1199,"author":{"gitId":"xingjie99"},"content":"**Q:** How can I reset _Fitbot_ and its data?\\","lastModifiedDate":"2021-11-02"},{"lineNumber":1200,"author":{"gitId":"tlyi"},"content":"**A:** You can reset _Fitbot_ by deleting the data folder in the same directory as the `Fitbot.jar` file location. If you choose to remove","lastModifiedDate":"2021-11-07"},{"lineNumber":1201,"author":{"gitId":"tlyi"},"content":"only selected `.txt` files, data in the remaining files will still be loaded and viewed in _Fitbot_.","lastModifiedDate":"2021-11-07"},{"lineNumber":1202,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":1203,"author":{"gitId":"tlyi"},"content":"**Q:**  Why does _Fitbot_ need so many personal particulars?\\","lastModifiedDate":"2021-10-29"},{"lineNumber":1204,"author":{"gitId":"tlyi"},"content":"**A:** _Fitbot_ needs your height, weight, age, gender and activity factor so that we can calculate your [BMR](https://en.wikipedia.org/wiki/Basal_metabolic_rate).","lastModifiedDate":"2021-10-29"},{"lineNumber":1205,"author":{"gitId":"tttyyzzz"},"content":"Calorie goal is required to help you check how close or how far you are away from your calorie goal.","lastModifiedDate":"2021-10-29"},{"lineNumber":1206,"author":{"gitId":"tttyyzzz"},"content":"_Fitbot_ needs to know your name to address you.","lastModifiedDate":"2021-10-29"},{"lineNumber":1207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":1208,"author":{"gitId":"tlyi"},"content":"[⏫ Back to content page](#content-page)","lastModifiedDate":"2021-11-07"},{"lineNumber":1209,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":1210,"author":{"gitId":"tryyang2001"},"content":"### **8. Command Summary**","lastModifiedDate":"2021-11-08"},{"lineNumber":1211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":1212,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":1213,"author":{"gitId":"tryyang2001"},"content":"| Action | Format | Examples |","lastModifiedDate":"2021-10-15"},{"lineNumber":1214,"author":{"gitId":"tryyang2001"},"content":"|--------|-------|----------|","lastModifiedDate":"2021-10-29"},{"lineNumber":1215,"author":{"gitId":"xingjie99"},"content":"add|`add f/ITEM {c/CALORIE} {d/DD-MM-YYYY} {t/HHMM}` \u003cbr\u003e\u003cbr\u003e`add e/ITEM {c/CALORIES} {d/DD-MM-YYYY}` \u003cbr\u003e\u003cbr\u003e `add r/ITEM c/CALORIES :/START_DATE -/END_DATE @/DAY_OF_THE_WEEK {,DAY_OF_THE_WEEK,...}` \u003cbr\u003e\u003cbr\u003e  `add fbank/ITEM c/CALORIES` \u003cbr\u003e\u003cbr\u003e  `add ebank/ITEM c/CALORIES`| `add f/chicken rice c/607 d/20-10-2021` \u003cbr\u003e\u003cbr\u003e`add e/hiit c/290 d/23-10-2021` \u003cbr\u003e\u003cbr\u003e `add r/handball training c/432 :/24-10-2021 -/11-11-2021 @/1,3` \u003cbr\u003e\u003cbr\u003e  `add fbank/chicken rice c/667`\u003cbr\u003e\u003cbr\u003e `add ebank/5km run c/478`","lastModifiedDate":"2021-11-08"},{"lineNumber":1216,"author":{"gitId":"xingjie99"},"content":"bmi|`bmi h/HEIGHT_IN_CM w/WEIGHT_IN_KG` \u003cbr\u003e\u003cbr\u003e `bmi`|`bmi h/170 w/65` , \u003cbr\u003e\u003cbr\u003e `bmi`","lastModifiedDate":"2021-11-08"},{"lineNumber":1217,"author":{"gitId":"tryyang2001"},"content":"bye|`bye`|","lastModifiedDate":"2021-10-15"},{"lineNumber":1218,"author":{"gitId":"xingjie99"},"content":"delete|`delete f/LIST_NO d/DD-MM-YYYY t/HHMM` \u003cbr\u003e\u003cbr\u003e `delete e/LIST_NO d/DD-MM-YYYY` \u003cbr\u003e\u003cbr\u003e `delete u/LIST_NO {,LIST_NO,...}` \u003cbr\u003e\u003cbr\u003e `delete fbank/LIST_NO {,LIST_NO,...}` \u003cbr\u003e\u003cbr\u003e `delete ebank/LIST_NO {,LIST_NO,...}` \u003cbr\u003e\u003cbr\u003e `delete f/all` \u003cbr\u003e\u003cbr\u003e `delete e/all` \u003cbr\u003e\u003cbr\u003e `delete u/all` \u003cbr\u003e\u003cbr\u003e `delete fbank/all` \u003cbr\u003e\u003cbr\u003e `delete ebank/all` | `delete f/1 d/04-11-2021 t/1000` \u003cbr\u003e\u003cbr\u003e `delete e/1 d/05-11-2021` \u003cbr\u003e\u003cbr\u003e `delete u/1,2` \u003cbr\u003e\u003cbr\u003e `delete fbank/2,3` \u003cbr\u003e\u003cbr\u003e `delete ebank/2,5` \u003cbr\u003e\u003cbr\u003e\u003cbr\u003e\u003cbr\u003e\u003cbr\u003e\u003cbr\u003e\u003cbr\u003e\u003cbr\u003e\u003cbr\u003e\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":1219,"author":{"gitId":"xingjie99"},"content":"edit| `edit u/LIST_NO {n/NEW_NAME} {c/NEW_CALORIES} {d/NEW_DATE}` \u003cbr\u003e\u003cbr\u003e `edit fbank/LIST_NO {n/NEW_NAME} {c/NEW_CALORIES}` \u003cbr\u003e\u003cbr\u003e `edit ebank/LIST_NO {n/NEW_NAME} {c/NEW_CALORIES}`| `edit u/1 n/volleyball training c/560 d/24-10-2021` \u003cbr\u003e\u003cbr\u003e `edit fbank/1 n/2.4km run c/267` \u003cbr\u003e\u003cbr\u003e `edit ebank/1 n/chicken rice c/800`","lastModifiedDate":"2021-11-08"},{"lineNumber":1220,"author":{"gitId":"tryyang2001"},"content":"help | `help`|","lastModifiedDate":"2021-10-15"},{"lineNumber":1221,"author":{"gitId":"tryyang2001"},"content":"overview|`overview`|","lastModifiedDate":"2021-10-15"},{"lineNumber":1222,"author":{"gitId":"xingjie99"},"content":"profile|`profile {h/HEIGHT_IN_CM} {w/WEIGHT_IN_KG} {n/NAME} {s/GENDER} {a/AGE} {g/CALORIE_IN_CAL} {x/ACTIVITY_FACTOR}`\u003cbr\u003e\u003cbr\u003e `profile`|`profile h/170 w/65 n/John a/22 s/M g/500 x/2` \u003cbr\u003e\u003cbr\u003e `profile`","lastModifiedDate":"2021-11-08"},{"lineNumber":1223,"author":{"gitId":"xingjie99"},"content":"view|`view e/`  \u003cbr\u003e\u003cbr\u003e `view f/` \u003cbr\u003e\u003cbr\u003e `view u/` \u003cbr\u003e\u003cbr\u003e `view fbank/` \u003cbr\u003e\u003cbr\u003e `view ebank/`","lastModifiedDate":"2021-11-08"},{"lineNumber":1224,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":1225,"author":{"gitId":"tlyi"},"content":"[⏫ Back to content page](#content-page)","lastModifiedDate":"2021-11-07"}],"authorContributionMap":{"weidak":52,"tttyyzzz":221,"xingjie99":212,"tryyang2001":251,"-":33,"tlyi":456}},{"path":"docs/diagrams/AddFoodItemSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"tryyang2001"},"content":"@startuml","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"tryyang2001"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2021-10-27"},{"lineNumber":3,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"tryyang2001"},"content":"!include Style.puml","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"tryyang2001"},"content":"hide footbox","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"tryyang2001"},"content":"participant \"command:AddFoodCommand\" As AddFoodCommand LOGIC_COLOUR","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"tryyang2001"},"content":"participant \"foodBank:FoodBank\" As FoodBank DATA_COLOUR","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"tryyang2001"},"content":"?-\u003eAddFoodCommand :execute()","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"tryyang2001"},"content":"activate AddFoodCommand LOGIC_COLOUR","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"tryyang2001"},"content":"opt calories \u003d\u003d null","lastModifiedDate":"2021-11-08"},{"lineNumber":14,"author":{"gitId":"tryyang2001"},"content":"    AddFoodCommand -\u003e FoodBank : findCalorie(description)","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"tryyang2001"},"content":"    activate FoodBank DATA_COLOUR","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"tryyang2001"},"content":"    FoodBank --\u003e AddFoodCommand : calories","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"tryyang2001"},"content":"    deactivate FoodBank","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"tryyang2001"},"content":"end","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"tryyang2001"},"content":"create \"food:Food\" As Food DATA_COLOUR","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"tryyang2001"},"content":"AddFoodCommand -\u003e Food ** : new Food(description,calories,dateTime)","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"tryyang2001"},"content":"activate Food DATA_COLOUR","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"tryyang2001"},"content":"Food -\u003e Food ++ DATA_COLOUR : setTimePeriod (dateTime)","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"tryyang2001"},"content":"Food --\u003e Food --","lastModifiedDate":"2021-10-27"},{"lineNumber":25,"author":{"gitId":"tryyang2001"},"content":"Food --\u003e AddFoodCommand : food","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"tryyang2001"},"content":"deactivate Food","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":28,"author":{"gitId":"tryyang2001"},"content":"AddFoodCommand -\u003e Food : isValid()","lastModifiedDate":"2021-11-08"},{"lineNumber":29,"author":{"gitId":"tryyang2001"},"content":"activate Food DATA_COLOUR","lastModifiedDate":"2021-11-08"},{"lineNumber":30,"author":{"gitId":"tryyang2001"},"content":"participant \":CommandResult\" As CommandResult1 LOGIC_COLOUR","lastModifiedDate":"2021-11-08"},{"lineNumber":31,"author":{"gitId":"tryyang2001"},"content":"Food --\u003e AddFoodCommand :isValid","lastModifiedDate":"2021-11-08"},{"lineNumber":32,"author":{"gitId":"tryyang2001"},"content":"deactivate Food","lastModifiedDate":"2021-11-08"},{"lineNumber":33,"author":{"gitId":"tryyang2001"},"content":"alt !isValid","lastModifiedDate":"2021-11-08"},{"lineNumber":34,"author":{"gitId":"tryyang2001"},"content":"    AddFoodCommand -\u003e CommandResult1 **: new CommandResult(String.format(MESSAGE_INVALID_CALORIES, food))","lastModifiedDate":"2021-11-08"},{"lineNumber":35,"author":{"gitId":"tryyang2001"},"content":"    activate CommandResult1 LOGIC_COLOUR","lastModifiedDate":"2021-11-08"},{"lineNumber":36,"author":{"gitId":"tryyang2001"},"content":"    CommandResult1 --\u003e AddFoodCommand","lastModifiedDate":"2021-11-08"},{"lineNumber":37,"author":{"gitId":"tryyang2001"},"content":"    deactivate CommandResult1","lastModifiedDate":"2021-11-08"},{"lineNumber":38,"author":{"gitId":"tryyang2001"},"content":"else else","lastModifiedDate":"2021-11-08"},{"lineNumber":39,"author":{"gitId":"tryyang2001"},"content":"    participant \"filteredFoodList:FoodList\" As FoodList DATA_COLOUR","lastModifiedDate":"2021-10-27"},{"lineNumber":40,"author":{"gitId":"tryyang2001"},"content":"    participant \":CommandResult\" As CommandResult LOGIC_COLOUR","lastModifiedDate":"2021-11-08"},{"lineNumber":41,"author":{"gitId":"tryyang2001"},"content":"    AddFoodCommand -\u003e FoodList : \\t\\t\\t\\t\\t\\t\\t\\t\\t\\taddItem(food)","lastModifiedDate":"2021-10-27"},{"lineNumber":42,"author":{"gitId":"tryyang2001"},"content":"    activate FoodList DATA_COLOUR","lastModifiedDate":"2021-10-27"},{"lineNumber":43,"author":{"gitId":"tryyang2001"},"content":"    FoodList -\u003e FoodList ++  DATA_COLOUR: sortList()","lastModifiedDate":"2021-10-27"},{"lineNumber":44,"author":{"gitId":"tryyang2001"},"content":"    FoodList --\u003e FoodList --","lastModifiedDate":"2021-10-27"},{"lineNumber":45,"author":{"gitId":"tryyang2001"},"content":"    FoodList --\u003e AddFoodCommand","lastModifiedDate":"2021-10-27"},{"lineNumber":46,"author":{"gitId":"tryyang2001"},"content":"    deactivate FoodList","lastModifiedDate":"2021-10-27"},{"lineNumber":47,"author":{"gitId":"tryyang2001"},"content":"    AddFoodCommand -\u003e CommandResult **: \\t\\t\\t\\t\\tnew CommandResult(String.format(MESSAGE_SUCCESS,food))","lastModifiedDate":"2021-10-27"},{"lineNumber":48,"author":{"gitId":"tryyang2001"},"content":"    activate CommandResult LOGIC_COLOUR","lastModifiedDate":"2021-10-27"},{"lineNumber":49,"author":{"gitId":"tryyang2001"},"content":"    CommandResult --\u003e AddFoodCommand","lastModifiedDate":"2021-10-27"},{"lineNumber":50,"author":{"gitId":"tryyang2001"},"content":"    deactivate CommandResult","lastModifiedDate":"2021-10-27"},{"lineNumber":51,"author":{"gitId":"tryyang2001"},"content":"end","lastModifiedDate":"2021-11-08"},{"lineNumber":52,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":53,"author":{"gitId":"tryyang2001"},"content":"?\u003c-- AddFoodCommand : commandResult\\t\\t","lastModifiedDate":"2021-11-08"},{"lineNumber":54,"author":{"gitId":"tryyang2001"},"content":"deactivate AddFoodCommand","lastModifiedDate":"2021-10-27"},{"lineNumber":55,"author":{"gitId":"tryyang2001"},"content":"destroy Food","lastModifiedDate":"2021-10-27"},{"lineNumber":56,"author":{"gitId":"tryyang2001"},"content":"destroy CommandResult","lastModifiedDate":"2021-10-27"},{"lineNumber":57,"author":{"gitId":"tryyang2001"},"content":"destroy CommandResult1","lastModifiedDate":"2021-11-08"},{"lineNumber":58,"author":{"gitId":"tryyang2001"},"content":"destroy AddFoodCommand","lastModifiedDate":"2021-10-27"},{"lineNumber":59,"author":{"gitId":"tryyang2001"},"content":"@enduml","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"tryyang2001":59}},{"path":"docs/diagrams/AddFutureExerciseSequenceDaigram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"xingjie99"},"content":"@startuml","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"xingjie99"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2021-10-27"},{"lineNumber":3,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"xingjie99"},"content":"!include Style.puml","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"xingjie99"},"content":"hide footbox","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"xingjie99"},"content":"participant \"command:AddFutureExerciseCommand\" As AddFutureExerciseCommand LOGIC_COLOUR","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"xingjie99"},"content":"participant \"exerciseBank:ItemBank\" As ItemBank DATA_COLOUR","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"xingjie99"},"content":"activate AddFutureExerciseCommand LOGIC_COLOUR","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"xingjie99"},"content":"?-\u003eAddFutureExerciseCommand :execute()","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"xingjie99"},"content":"opt isCalorieFromBank","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"xingjie99"},"content":"    AddFutureExerciseCommand -\u003e ItemBank : getCaloriesOfItemWithMatchingName(description)","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"xingjie99"},"content":"    activate ItemBank DATA_COLOUR","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"xingjie99"},"content":"    ItemBank --\u003e AddFutureExerciseCommand : \\t\\t\\t\\tcalories","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"xingjie99"},"content":"    deactivate ItemBank","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"xingjie99"},"content":"end","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"xingjie99"},"content":"create \"Exercise\" As Exercise DATA_COLOUR","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"xingjie99"},"content":"    AddFutureExerciseCommand -\u003e Exercise ** : \\t\\t\\t\\tnew Exercise(description,calories,date)","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"xingjie99"},"content":"    activate Exercise DATA_COLOUR","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"xingjie99"},"content":"    Exercise --\u003e AddFutureExerciseCommand : \\t\\t\\t\\t\\t\\t\\texercise","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"xingjie99"},"content":"    deactivate Exercise","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":25,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"xingjie99"},"content":"participant \"futureExerciseItems:FutureExerciseList\" As FutureExerciseItems DATA_COLOUR","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"xingjie99"},"content":"participant \"commandResult:CommandResult\" As CommandResult LOGIC_COLOUR","lastModifiedDate":"2021-10-27"},{"lineNumber":28,"author":{"gitId":"xingjie99"},"content":"AddFutureExerciseCommand -\u003e FutureExerciseItems : \\t\\t\\t\\t\\t\\t\\t\\t\\t\\taddItem(exercise)","lastModifiedDate":"2021-10-27"},{"lineNumber":29,"author":{"gitId":"xingjie99"},"content":"activate FutureExerciseItems DATA_COLOUR","lastModifiedDate":"2021-10-27"},{"lineNumber":30,"author":{"gitId":"xingjie99"},"content":"FutureExerciseItems -\u003e FutureExerciseItems ++  DATA_COLOUR: sortList()","lastModifiedDate":"2021-10-27"},{"lineNumber":31,"author":{"gitId":"xingjie99"},"content":"FutureExerciseItems --\u003e FutureExerciseItems --","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"xingjie99"},"content":"FutureExerciseItems --\u003e AddFutureExerciseCommand","lastModifiedDate":"2021-10-27"},{"lineNumber":33,"author":{"gitId":"xingjie99"},"content":"deactivate FutureExerciseItems","lastModifiedDate":"2021-10-27"},{"lineNumber":34,"author":{"gitId":"xingjie99"},"content":"AddFutureExerciseCommand -\u003e CommandResult **: \\t\\t\\t\\t\\t\\t\\tnew CommandResult(String.format(MESSAGE_SUCCESS,exercise))","lastModifiedDate":"2021-10-27"},{"lineNumber":35,"author":{"gitId":"xingjie99"},"content":"activate CommandResult LOGIC_COLOUR","lastModifiedDate":"2021-10-27"},{"lineNumber":36,"author":{"gitId":"xingjie99"},"content":"CommandResult --\u003e AddFutureExerciseCommand","lastModifiedDate":"2021-10-27"},{"lineNumber":37,"author":{"gitId":"xingjie99"},"content":"deactivate CommandResult","lastModifiedDate":"2021-10-27"},{"lineNumber":38,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":39,"author":{"gitId":"xingjie99"},"content":"?\u003c-- AddFutureExerciseCommand : commandResult","lastModifiedDate":"2021-10-27"},{"lineNumber":40,"author":{"gitId":"xingjie99"},"content":"deactivate AddFutureExerciseCommand","lastModifiedDate":"2021-10-27"},{"lineNumber":41,"author":{"gitId":"xingjie99"},"content":"destroy Exercise","lastModifiedDate":"2021-10-27"},{"lineNumber":42,"author":{"gitId":"xingjie99"},"content":"destroy CommandResult","lastModifiedDate":"2021-10-27"},{"lineNumber":43,"author":{"gitId":"xingjie99"},"content":"destroy AddFutureExerciseCommand","lastModifiedDate":"2021-10-27"},{"lineNumber":44,"author":{"gitId":"xingjie99"},"content":"@enduml","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"xingjie99":44}},{"path":"docs/diagrams/AddRecurringExerciseSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"xingjie99"},"content":"@startuml","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"xingjie99"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2021-10-27"},{"lineNumber":3,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"xingjie99"},"content":"!include Style.puml","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"xingjie99"},"content":"hide footbox","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"xingjie99"},"content":"participant \"command:AddRecurringExerciseCommand\" As AddRecurringExerciseCommand LOGIC_COLOUR","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"xingjie99"},"content":"participant \"exerciseBank:ItemBank\" As ItemBank DATA_COLOUR","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"xingjie99"},"content":"activate AddRecurringExerciseCommand LOGIC_COLOUR","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"xingjie99"},"content":"?-\u003eAddRecurringExerciseCommand :execute()","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"xingjie99"},"content":"opt isCalorieFromBank","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"xingjie99"},"content":"    AddRecurringExerciseCommand -\u003e ItemBank : getCaloriesOfItemWithMatchingName(description)","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"xingjie99"},"content":"    activate ItemBank DATA_COLOUR","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"xingjie99"},"content":"    ItemBank --\u003e AddRecurringExerciseCommand : \\t\\t\\t\\tcalories","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"xingjie99"},"content":"    deactivate ItemBank","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"xingjie99"},"content":"end","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"xingjie99"},"content":"participant \"futureExerciseItems:FutureExerciseList\" As FutureExerciseItems DATA_COLOUR","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"xingjie99"},"content":"AddRecurringExerciseCommand -\u003e FutureExerciseItems : \\taddRecurringExercises(exercise, calories, startDate, endDate, dayOfTheWeek)","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"xingjie99"},"content":"activate FutureExerciseItems DATA_COLOUR","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"xingjie99"},"content":"loop matchesAllDayAndDate","lastModifiedDate":"2021-10-27"},{"lineNumber":25,"author":{"gitId":"xingjie99"},"content":"create \"Exercise\" As Exercise DATA_COLOUR","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"xingjie99"},"content":"    FutureExerciseItems -\u003e Exercise ** : \\tnew Exercise(description,calories,date)","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"xingjie99"},"content":"    activate Exercise DATA_COLOUR","lastModifiedDate":"2021-10-27"},{"lineNumber":28,"author":{"gitId":"xingjie99"},"content":"    Exercise --\u003e FutureExerciseItems : \\t\\t\\texercise","lastModifiedDate":"2021-10-27"},{"lineNumber":29,"author":{"gitId":"xingjie99"},"content":"    deactivate Exercise","lastModifiedDate":"2021-10-27"},{"lineNumber":30,"author":{"gitId":"xingjie99"},"content":"FutureExerciseItems -\u003e FutureExerciseItems ++  DATA_COLOUR: addItem(exercise)","lastModifiedDate":"2021-10-27"},{"lineNumber":31,"author":{"gitId":"xingjie99"},"content":"FutureExerciseItems --\u003e FutureExerciseItems --","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"xingjie99"},"content":"end","lastModifiedDate":"2021-10-27"},{"lineNumber":33,"author":{"gitId":"xingjie99"},"content":"FutureExerciseItems -\u003e FutureExerciseItems ++  DATA_COLOUR: sortList()","lastModifiedDate":"2021-10-27"},{"lineNumber":34,"author":{"gitId":"xingjie99"},"content":"FutureExerciseItems --\u003e FutureExerciseItems --","lastModifiedDate":"2021-10-27"},{"lineNumber":35,"author":{"gitId":"xingjie99"},"content":"FutureExerciseItems --\u003e AddRecurringExerciseCommand","lastModifiedDate":"2021-10-27"},{"lineNumber":36,"author":{"gitId":"xingjie99"},"content":"deactivate FutureExerciseItems","lastModifiedDate":"2021-10-27"},{"lineNumber":37,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":38,"author":{"gitId":"xingjie99"},"content":"participant \"commandResult:CommandResult\" As CommandResult LOGIC_COLOUR","lastModifiedDate":"2021-10-27"},{"lineNumber":39,"author":{"gitId":"xingjie99"},"content":"AddRecurringExerciseCommand -\u003e CommandResult **: \\t\\t\\t\\t\\t\\t\\tnew CommandResult(MESSAGE_SUCCESS)","lastModifiedDate":"2021-10-27"},{"lineNumber":40,"author":{"gitId":"xingjie99"},"content":"activate CommandResult LOGIC_COLOUR","lastModifiedDate":"2021-10-27"},{"lineNumber":41,"author":{"gitId":"xingjie99"},"content":"CommandResult --\u003e AddRecurringExerciseCommand","lastModifiedDate":"2021-10-27"},{"lineNumber":42,"author":{"gitId":"xingjie99"},"content":"deactivate CommandResult","lastModifiedDate":"2021-10-27"},{"lineNumber":43,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":44,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":45,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":46,"author":{"gitId":"xingjie99"},"content":"?\u003c-- AddRecurringExerciseCommand : commandResult","lastModifiedDate":"2021-10-27"},{"lineNumber":47,"author":{"gitId":"xingjie99"},"content":"deactivate AddRecurringExerciseCommand","lastModifiedDate":"2021-10-27"},{"lineNumber":48,"author":{"gitId":"xingjie99"},"content":"destroy Exercise","lastModifiedDate":"2021-10-27"},{"lineNumber":49,"author":{"gitId":"xingjie99"},"content":"destroy CommandResult","lastModifiedDate":"2021-10-27"},{"lineNumber":50,"author":{"gitId":"xingjie99"},"content":"destroy AddRecurringExerciseCommand","lastModifiedDate":"2021-10-27"},{"lineNumber":51,"author":{"gitId":"xingjie99"},"content":"@enduml","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"xingjie99":51}},{"path":"docs/diagrams/Architecture.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"tttyyzzz"},"content":"@startuml","lastModifiedDate":"2021-10-26"},{"lineNumber":2,"author":{"gitId":"tttyyzzz"},"content":"!include style.puml","lastModifiedDate":"2021-10-26"},{"lineNumber":3,"author":{"gitId":"tttyyzzz"},"content":"hide footbox","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"tttyyzzz"},"content":"participant \":Ui\" as ui UI_COLOUR","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"tttyyzzz"},"content":"participant \":Main\" as main MAIN_COLOUR","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"tttyyzzz"},"content":"main -\u003e ui ++ UI_COLOUR: getUserInput()","lastModifiedDate":"2021-10-31"},{"lineNumber":8,"author":{"gitId":"tttyyzzz"},"content":"main++ MAIN_COLOUR","lastModifiedDate":"2021-10-31"},{"lineNumber":9,"author":{"gitId":"tttyyzzz"},"content":"-\u003e ui   UI_COLOUR : addFoodItem","lastModifiedDate":"2021-10-31"},{"lineNumber":10,"author":{"gitId":"tttyyzzz"},"content":"ui --\u003e main --","lastModifiedDate":"2021-10-31"},{"lineNumber":11,"author":{"gitId":"tttyyzzz"},"content":"\u0027create \":Parser\" as parser LOGIC_COLOUR","lastModifiedDate":"2021-11-05"},{"lineNumber":12,"author":{"gitId":"tttyyzzz"},"content":"main -\u003e parser ++ LOGIC_COLOUR : parseAddFoodItem()","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"tttyyzzz"},"content":"participant \":Data\" as itemlist DATA_COLOUR","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"tttyyzzz"},"content":"parser -\u003e itemlist ++ DATA_COLOUR : addFoodItem()","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"tttyyzzz"},"content":"itemlist --\u003e parser --  :","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"tttyyzzz"},"content":"parser --\u003e main --","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"tttyyzzz"},"content":"participant \":Storage\" as storage STORAGE_COLOUR","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"tttyyzzz"},"content":"main -\u003e storage ++ STORAGE_COLOUR: saveFoodList()","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"tttyyzzz"},"content":"\u0027destroy parser","lastModifiedDate":"2021-11-05"},{"lineNumber":20,"author":{"gitId":"tttyyzzz"},"content":"storage -\u003e storage ++ STORAGE_COLOUR: save to file","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"tttyyzzz"},"content":"storage --\u003e storage --","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"tttyyzzz"},"content":"storage --\u003e main --","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"tttyyzzz"},"content":"main --\u003e ui ++ UI_COLOUR: formatMessageFramedWithDivider() success","lastModifiedDate":"2021-10-31"},{"lineNumber":24,"author":{"gitId":"tttyyzzz"},"content":"\u003c- ui  : show add food item\\n success message","lastModifiedDate":"2021-10-31"},{"lineNumber":25,"author":{"gitId":"tttyyzzz"},"content":"ui --\u003e main --","lastModifiedDate":"2021-10-31"},{"lineNumber":26,"author":{"gitId":"tttyyzzz"},"content":"main --","lastModifiedDate":"2021-10-26"},{"lineNumber":27,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"tttyyzzz"},"content":"@enduml","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"tttyyzzz":28}},{"path":"docs/diagrams/ChecksForFileStorage.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"weidak"},"content":"@startuml","lastModifiedDate":"2021-10-31"},{"lineNumber":2,"author":{"gitId":"weidak"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2021-10-31"},{"lineNumber":3,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":4,"author":{"gitId":"weidak"},"content":"!include style.puml","lastModifiedDate":"2021-10-31"},{"lineNumber":5,"author":{"gitId":"weidak"},"content":"hide footbox","lastModifiedDate":"2021-10-31"},{"lineNumber":6,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":7,"author":{"gitId":"weidak"},"content":"group sd Checks for file and create directory if missing","lastModifiedDate":"2021-11-08"},{"lineNumber":8,"author":{"gitId":"weidak"},"content":"participant \"profileStorage:ProfileStorage\" As ProfileStorage STORAGE_COLOUR","lastModifiedDate":"2021-10-31"},{"lineNumber":9,"author":{"gitId":"weidak"},"content":"participant \":FileChecker\" As FileChecker STORAGE_COLOUR","lastModifiedDate":"2021-10-31"},{"lineNumber":10,"author":{"gitId":"weidak"},"content":"participant \"file:File\" As File STORAGE_COLOUR","lastModifiedDate":"2021-10-31"},{"lineNumber":11,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":12,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":13,"author":{"gitId":"weidak"},"content":"activate ProfileStorage STORAGE_COLOUR","lastModifiedDate":"2021-11-08"},{"lineNumber":14,"author":{"gitId":"weidak"},"content":"ProfileStorage -\u003e FileChecker: createFileIfMissing(filePath)","lastModifiedDate":"2021-10-31"},{"lineNumber":15,"author":{"gitId":"weidak"},"content":"activate FileChecker STORAGE_COLOUR","lastModifiedDate":"2021-10-31"},{"lineNumber":16,"author":{"gitId":"weidak"},"content":"    FileChecker -\u003e File **: new File(filePath)","lastModifiedDate":"2021-10-31"},{"lineNumber":17,"author":{"gitId":"weidak"},"content":"    activate File STORAGE_COLOUR","lastModifiedDate":"2021-10-31"},{"lineNumber":18,"author":{"gitId":"weidak"},"content":"        File --\u003e FileChecker: file","lastModifiedDate":"2021-10-31"},{"lineNumber":19,"author":{"gitId":"weidak"},"content":"    deactivate","lastModifiedDate":"2021-10-31"},{"lineNumber":20,"author":{"gitId":"weidak"},"content":"    FileChecker -\u003e FileChecker ++ STORAGE_COLOUR: createDirectory()","lastModifiedDate":"2021-10-31"},{"lineNumber":21,"author":{"gitId":"weidak"},"content":"    FileChecker --\u003e FileChecker --","lastModifiedDate":"2021-10-31"},{"lineNumber":22,"author":{"gitId":"weidak"},"content":"    opt !file.exists()","lastModifiedDate":"2021-10-31"},{"lineNumber":23,"author":{"gitId":"weidak"},"content":"        FileChecker -\u003e File : createNewFile()","lastModifiedDate":"2021-10-31"},{"lineNumber":24,"author":{"gitId":"weidak"},"content":"        activate File STORAGE_COLOUR","lastModifiedDate":"2021-10-31"},{"lineNumber":25,"author":{"gitId":"weidak"},"content":"            File --\u003e FileChecker","lastModifiedDate":"2021-10-31"},{"lineNumber":26,"author":{"gitId":"weidak"},"content":"        deactivate","lastModifiedDate":"2021-10-31"},{"lineNumber":27,"author":{"gitId":"weidak"},"content":"    end","lastModifiedDate":"2021-10-31"},{"lineNumber":28,"author":{"gitId":"weidak"},"content":"    destroy File","lastModifiedDate":"2021-10-31"},{"lineNumber":29,"author":{"gitId":"weidak"},"content":"    FileChecker --\u003e ProfileStorage","lastModifiedDate":"2021-10-31"},{"lineNumber":30,"author":{"gitId":"weidak"},"content":"deactivate","lastModifiedDate":"2021-10-31"},{"lineNumber":31,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":32,"author":{"gitId":"weidak"},"content":"end","lastModifiedDate":"2021-11-08"},{"lineNumber":33,"author":{"gitId":"weidak"},"content":"@enduml","lastModifiedDate":"2021-10-31"}],"authorContributionMap":{"weidak":33}},{"path":"docs/diagrams/CreateProfile.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"tttyyzzz"},"content":"@startuml","lastModifiedDate":"2021-11-04"},{"lineNumber":2,"author":{"gitId":"tttyyzzz"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2021-11-04"},{"lineNumber":3,"author":{"gitId":"tttyyzzz"},"content":"hide footbox","lastModifiedDate":"2021-11-04"},{"lineNumber":4,"author":{"gitId":"tttyyzzz"},"content":"!include Style.puml","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"tttyyzzz"},"content":"participant \":StartState\" As StartState MAIN_COLOUR","lastModifiedDate":"2021-11-04"},{"lineNumber":6,"author":{"gitId":"tttyyzzz"},"content":"-\u003e StartState ++ MAIN_COLOUR: checkAndCreateProfile()","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"tttyyzzz"},"content":"participant \"oldProfile:Profile\" as oldProfile DATA_COLOUR","lastModifiedDate":"2021-11-08"},{"lineNumber":8,"author":{"gitId":"tttyyzzz"},"content":"StartState -\u003e oldProfile ++ DATA_COLOUR :checkProfileComplete()","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"tttyyzzz"},"content":"oldProfile --\u003e StartState --","lastModifiedDate":"2021-11-04"},{"lineNumber":10,"author":{"gitId":"tttyyzzz"},"content":"alt profile.checkProfileComplete()","lastModifiedDate":"2021-11-08"},{"lineNumber":11,"author":{"gitId":"tttyyzzz"},"content":"else","lastModifiedDate":"2021-11-08"},{"lineNumber":12,"author":{"gitId":"tttyyzzz"},"content":"StartState -\u003e StartState ++ MAIN_COLOUR: createProfile()","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"tttyyzzz"},"content":"participant \"newProfile:Profile\" as newProfile DATA_COLOUR","lastModifiedDate":"2021-11-08"},{"lineNumber":14,"author":{"gitId":"tttyyzzz"},"content":"create newProfile","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"tttyyzzz"},"content":"StartState -\u003enewProfile ++ DATA_COLOUR : new Profile()","lastModifiedDate":"2021-11-08"},{"lineNumber":16,"author":{"gitId":"tttyyzzz"},"content":"loop !profile.checkProfileComplete","lastModifiedDate":"2021-11-04"},{"lineNumber":17,"author":{"gitId":"tttyyzzz"},"content":"ref over StartState,newProfile","lastModifiedDate":"2021-11-04"},{"lineNumber":18,"author":{"gitId":"tttyyzzz"},"content":"create Profile attributes","lastModifiedDate":"2021-11-04"},{"lineNumber":19,"author":{"gitId":"tttyyzzz"},"content":"end","lastModifiedDate":"2021-11-04"},{"lineNumber":20,"author":{"gitId":"tttyyzzz"},"content":"end","lastModifiedDate":"2021-11-04"},{"lineNumber":21,"author":{"gitId":"tttyyzzz"},"content":"newProfile --\u003e StartState --","lastModifiedDate":"2021-11-04"},{"lineNumber":22,"author":{"gitId":"tttyyzzz"},"content":"participant \":StorageManager\" as StoreManager STORAGE_COLOUR","lastModifiedDate":"2021-11-08"},{"lineNumber":23,"author":{"gitId":"tttyyzzz"},"content":"StartState -\u003e StoreManager ++ STORAGE_COLOUR: saveProfile(profile)","lastModifiedDate":"2021-11-04"},{"lineNumber":24,"author":{"gitId":"tttyyzzz"},"content":"StoreManager --\u003e StartState --","lastModifiedDate":"2021-11-04"},{"lineNumber":25,"author":{"gitId":"tttyyzzz"},"content":"StartState --\u003e StartState -- MAIN_COLOUR : replace profile","lastModifiedDate":"2021-11-04"},{"lineNumber":26,"author":{"gitId":"tttyyzzz"},"content":"end","lastModifiedDate":"2021-11-08"},{"lineNumber":27,"author":{"gitId":"tttyyzzz"},"content":"\u003c-- StartState -- : profile","lastModifiedDate":"2021-11-04"},{"lineNumber":28,"author":{"gitId":"tttyyzzz"},"content":"destroy oldProfile","lastModifiedDate":"2021-11-04"},{"lineNumber":29,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":30,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":31,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":32,"author":{"gitId":"tttyyzzz"},"content":"@enduml","lastModifiedDate":"2021-11-04"}],"authorContributionMap":{"tttyyzzz":32}},{"path":"docs/diagrams/DataComponent.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"weidak"},"content":"@startuml","lastModifiedDate":"2021-11-08"},{"lineNumber":2,"author":{"gitId":"weidak"},"content":"\u0027https://plantuml.com/class-diagram","lastModifiedDate":"2021-11-08"},{"lineNumber":3,"author":{"gitId":"weidak"},"content":"!include Style.puml","lastModifiedDate":"2021-11-08"},{"lineNumber":4,"author":{"gitId":"weidak"},"content":"hide interface methods","lastModifiedDate":"2021-11-08"},{"lineNumber":5,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":6,"author":{"gitId":"weidak"},"content":"package Data {","lastModifiedDate":"2021-11-08"},{"lineNumber":7,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":8,"author":{"gitId":"weidak"},"content":"    class DataManager DATA_COLOUR {","lastModifiedDate":"2021-11-08"},{"lineNumber":9,"author":{"gitId":"weidak"},"content":"        - profile: Profile","lastModifiedDate":"2021-11-08"},{"lineNumber":10,"author":{"gitId":"weidak"},"content":"        - foodItems: FoodList","lastModifiedDate":"2021-11-08"},{"lineNumber":11,"author":{"gitId":"weidak"},"content":"        - filteredFoodItems: FoodList","lastModifiedDate":"2021-11-08"},{"lineNumber":12,"author":{"gitId":"weidak"},"content":"        - exerciseItems: ExerciseList","lastModifiedDate":"2021-11-08"},{"lineNumber":13,"author":{"gitId":"weidak"},"content":"        - filteredExerciseItems: ExerciseList","lastModifiedDate":"2021-11-08"},{"lineNumber":14,"author":{"gitId":"weidak"},"content":"        - foodBank: ItemBank","lastModifiedDate":"2021-11-08"},{"lineNumber":15,"author":{"gitId":"weidak"},"content":"        - exerciseBank: ItemBank","lastModifiedDate":"2021-11-08"},{"lineNumber":16,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":17,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":18,"author":{"gitId":"weidak"},"content":"    class \"\u003c\u003cinterface\u003e\u003e\\nVerifiable\" As Verifiable DATA_COLOUR {","lastModifiedDate":"2021-11-08"},{"lineNumber":19,"author":{"gitId":"weidak"},"content":"        isValid(): boolean","lastModifiedDate":"2021-11-08"},{"lineNumber":20,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":21,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":22,"author":{"gitId":"weidak"},"content":"    package Profile {","lastModifiedDate":"2021-11-08"},{"lineNumber":23,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":24,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":25,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":26,"author":{"gitId":"weidak"},"content":"    package Item {","lastModifiedDate":"2021-11-08"},{"lineNumber":27,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":28,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":29,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":30,"author":{"gitId":"weidak"},"content":"}","lastModifiedDate":"2021-11-08"},{"lineNumber":31,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":32,"author":{"gitId":"weidak"},"content":"Verifiable \u003c|.. Item","lastModifiedDate":"2021-11-08"},{"lineNumber":33,"author":{"gitId":"weidak"},"content":"Verifiable \u003c|.. Profile","lastModifiedDate":"2021-11-08"},{"lineNumber":34,"author":{"gitId":"weidak"},"content":"DataManager --\u003e Profile","lastModifiedDate":"2021-11-08"},{"lineNumber":35,"author":{"gitId":"weidak"},"content":"DataManager --\u003e Item","lastModifiedDate":"2021-11-08"},{"lineNumber":36,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":37,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":38,"author":{"gitId":"weidak"},"content":"@enduml","lastModifiedDate":"2021-11-08"}],"authorContributionMap":{"weidak":38}},{"path":"docs/diagrams/DecodeActivityFactor.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"weidak"},"content":"@startuml","lastModifiedDate":"2021-11-08"},{"lineNumber":2,"author":{"gitId":"weidak"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2021-11-08"},{"lineNumber":3,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":4,"author":{"gitId":"weidak"},"content":"!include style.puml","lastModifiedDate":"2021-11-08"},{"lineNumber":5,"author":{"gitId":"weidak"},"content":"hide footbox","lastModifiedDate":"2021-11-08"},{"lineNumber":6,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":7,"author":{"gitId":"weidak"},"content":"group sd Decode ActivityFactor","lastModifiedDate":"2021-11-08"},{"lineNumber":8,"author":{"gitId":"weidak"},"content":"participant \":ProfileDecoder\" As ProfileDecoder STORAGE_COLOUR","lastModifiedDate":"2021-11-08"},{"lineNumber":9,"author":{"gitId":"weidak"},"content":"participant ActivityFactor DATA_COLOUR","lastModifiedDate":"2021-11-08"},{"lineNumber":10,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":11,"author":{"gitId":"weidak"},"content":"activate ProfileDecoder STORAGE_COLOUR","lastModifiedDate":"2021-11-08"},{"lineNumber":12,"author":{"gitId":"weidak"},"content":"alt no errors thrown","lastModifiedDate":"2021-11-08"},{"lineNumber":13,"author":{"gitId":"weidak"},"content":"ProfileDecoder -\u003e ActivityFactor ** DATA_COLOUR: new ActivityFactor(Integer.parse(detail))","lastModifiedDate":"2021-11-08"},{"lineNumber":14,"author":{"gitId":"weidak"},"content":"activate ActivityFactor DATA_COLOUR","lastModifiedDate":"2021-11-08"},{"lineNumber":15,"author":{"gitId":"weidak"},"content":"    ActivityFactor --\u003e ProfileDecoder","lastModifiedDate":"2021-11-08"},{"lineNumber":16,"author":{"gitId":"weidak"},"content":"deactivate","lastModifiedDate":"2021-11-08"},{"lineNumber":17,"author":{"gitId":"weidak"},"content":"destroy ActivityFactor","lastModifiedDate":"2021-11-08"},{"lineNumber":18,"author":{"gitId":"weidak"},"content":"else NumberFormatException","lastModifiedDate":"2021-11-08"},{"lineNumber":19,"author":{"gitId":"weidak"},"content":"ProfileDecoder -\u003e ActivityFactor ** DATA_COLOUR: new ActivityFactor(Integer.MIN_VALUE)","lastModifiedDate":"2021-11-08"},{"lineNumber":20,"author":{"gitId":"weidak"},"content":"note right STORAGE_FADED_COLOUR: The (Integer.MIN_VALUE)\\nhere represents an invalid integer of\\nActivityFactor that is handled\\nlater on in the startup of the\\nbot.","lastModifiedDate":"2021-11-08"},{"lineNumber":21,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":22,"author":{"gitId":"weidak"},"content":"activate ActivityFactor DATA_COLOUR","lastModifiedDate":"2021-11-08"},{"lineNumber":23,"author":{"gitId":"weidak"},"content":"    ActivityFactor --\u003e ProfileDecoder","lastModifiedDate":"2021-11-08"},{"lineNumber":24,"author":{"gitId":"weidak"},"content":"deactivate","lastModifiedDate":"2021-11-08"},{"lineNumber":25,"author":{"gitId":"weidak"},"content":"destroy ActivityFactor","lastModifiedDate":"2021-11-08"},{"lineNumber":26,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":27,"author":{"gitId":"weidak"},"content":"end","lastModifiedDate":"2021-11-08"},{"lineNumber":28,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":29,"author":{"gitId":"weidak"},"content":"end","lastModifiedDate":"2021-11-08"},{"lineNumber":30,"author":{"gitId":"weidak"},"content":"@enduml","lastModifiedDate":"2021-11-08"}],"authorContributionMap":{"weidak":30}},{"path":"docs/diagrams/DecodeAge.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"weidak"},"content":"@startuml","lastModifiedDate":"2021-11-08"},{"lineNumber":2,"author":{"gitId":"weidak"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2021-11-08"},{"lineNumber":3,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":4,"author":{"gitId":"weidak"},"content":"!include style.puml","lastModifiedDate":"2021-11-08"},{"lineNumber":5,"author":{"gitId":"weidak"},"content":"hide footbox","lastModifiedDate":"2021-11-08"},{"lineNumber":6,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":7,"author":{"gitId":"weidak"},"content":"group sd Decode Age","lastModifiedDate":"2021-11-08"},{"lineNumber":8,"author":{"gitId":"weidak"},"content":"participant \":ProfileDecoder\" As ProfileDecoder STORAGE_COLOUR","lastModifiedDate":"2021-11-08"},{"lineNumber":9,"author":{"gitId":"weidak"},"content":"participant Age DATA_COLOUR","lastModifiedDate":"2021-11-08"},{"lineNumber":10,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":11,"author":{"gitId":"weidak"},"content":"activate ProfileDecoder STORAGE_COLOUR","lastModifiedDate":"2021-11-08"},{"lineNumber":12,"author":{"gitId":"weidak"},"content":"alt no errors thrown","lastModifiedDate":"2021-11-08"},{"lineNumber":13,"author":{"gitId":"weidak"},"content":"ProfileDecoder -\u003e Age ** DATA_COLOUR: new Age(Integer.parse(detail))","lastModifiedDate":"2021-11-08"},{"lineNumber":14,"author":{"gitId":"weidak"},"content":"activate Age DATA_COLOUR","lastModifiedDate":"2021-11-08"},{"lineNumber":15,"author":{"gitId":"weidak"},"content":"    Age --\u003e ProfileDecoder","lastModifiedDate":"2021-11-08"},{"lineNumber":16,"author":{"gitId":"weidak"},"content":"deactivate","lastModifiedDate":"2021-11-08"},{"lineNumber":17,"author":{"gitId":"weidak"},"content":"destroy Age","lastModifiedDate":"2021-11-08"},{"lineNumber":18,"author":{"gitId":"weidak"},"content":"else NumberFormatException","lastModifiedDate":"2021-11-08"},{"lineNumber":19,"author":{"gitId":"weidak"},"content":"ProfileDecoder -\u003e Age ** DATA_COLOUR: new Age(Integer.MIN_VALUE)","lastModifiedDate":"2021-11-08"},{"lineNumber":20,"author":{"gitId":"weidak"},"content":"note right STORAGE_FADED_COLOUR: The (Integer.MIN_VALUE) \\nhere represents an invalid\\ninteger of Age that is handled\\nlater on in the startup of the \\nbot.","lastModifiedDate":"2021-11-08"},{"lineNumber":21,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":22,"author":{"gitId":"weidak"},"content":"activate Age DATA_COLOUR","lastModifiedDate":"2021-11-08"},{"lineNumber":23,"author":{"gitId":"weidak"},"content":"    Age --\u003e ProfileDecoder","lastModifiedDate":"2021-11-08"},{"lineNumber":24,"author":{"gitId":"weidak"},"content":"deactivate","lastModifiedDate":"2021-11-08"},{"lineNumber":25,"author":{"gitId":"weidak"},"content":"destroy Age","lastModifiedDate":"2021-11-08"},{"lineNumber":26,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":27,"author":{"gitId":"weidak"},"content":"end","lastModifiedDate":"2021-11-08"},{"lineNumber":28,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":29,"author":{"gitId":"weidak"},"content":"end","lastModifiedDate":"2021-11-08"},{"lineNumber":30,"author":{"gitId":"weidak"},"content":"@enduml","lastModifiedDate":"2021-11-08"}],"authorContributionMap":{"weidak":30}},{"path":"docs/diagrams/DecodeAttributes.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"weidak"},"content":"@startuml","lastModifiedDate":"2021-11-08"},{"lineNumber":2,"author":{"gitId":"weidak"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2021-11-08"},{"lineNumber":3,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":4,"author":{"gitId":"weidak"},"content":"!include style.puml","lastModifiedDate":"2021-11-08"},{"lineNumber":5,"author":{"gitId":"weidak"},"content":"hide footbox","lastModifiedDate":"2021-11-08"},{"lineNumber":6,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":7,"author":{"gitId":"weidak"},"content":"group sd Decode all attributes","lastModifiedDate":"2021-11-08"},{"lineNumber":8,"author":{"gitId":"weidak"},"content":"participant \":ProfileDecoder\" As ProfileDecoder STORAGE_COLOUR","lastModifiedDate":"2021-11-08"},{"lineNumber":9,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":10,"author":{"gitId":"weidak"},"content":"ref over ProfileDecoder","lastModifiedDate":"2021-11-08"},{"lineNumber":11,"author":{"gitId":"weidak"},"content":"Decode Name","lastModifiedDate":"2021-11-08"},{"lineNumber":12,"author":{"gitId":"weidak"},"content":"end ref","lastModifiedDate":"2021-11-08"},{"lineNumber":13,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":14,"author":{"gitId":"weidak"},"content":"ref over ProfileDecoder","lastModifiedDate":"2021-11-08"},{"lineNumber":15,"author":{"gitId":"weidak"},"content":"Decode Height","lastModifiedDate":"2021-11-08"},{"lineNumber":16,"author":{"gitId":"weidak"},"content":"end ref","lastModifiedDate":"2021-11-08"},{"lineNumber":17,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":18,"author":{"gitId":"weidak"},"content":"ref over ProfileDecoder","lastModifiedDate":"2021-11-08"},{"lineNumber":19,"author":{"gitId":"weidak"},"content":"Decode Weight","lastModifiedDate":"2021-11-08"},{"lineNumber":20,"author":{"gitId":"weidak"},"content":"end ref","lastModifiedDate":"2021-11-08"},{"lineNumber":21,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":22,"author":{"gitId":"weidak"},"content":"ref over ProfileDecoder","lastModifiedDate":"2021-11-08"},{"lineNumber":23,"author":{"gitId":"weidak"},"content":"Decode Gender","lastModifiedDate":"2021-11-08"},{"lineNumber":24,"author":{"gitId":"weidak"},"content":"end ref","lastModifiedDate":"2021-11-08"},{"lineNumber":25,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":26,"author":{"gitId":"weidak"},"content":"ref over ProfileDecoder","lastModifiedDate":"2021-11-08"},{"lineNumber":27,"author":{"gitId":"weidak"},"content":"Decode Age","lastModifiedDate":"2021-11-08"},{"lineNumber":28,"author":{"gitId":"weidak"},"content":"end ref","lastModifiedDate":"2021-11-08"},{"lineNumber":29,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":30,"author":{"gitId":"weidak"},"content":"ref over ProfileDecoder","lastModifiedDate":"2021-11-08"},{"lineNumber":31,"author":{"gitId":"weidak"},"content":"Decode CalorieGoal","lastModifiedDate":"2021-11-08"},{"lineNumber":32,"author":{"gitId":"weidak"},"content":"end ref","lastModifiedDate":"2021-11-08"},{"lineNumber":33,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":34,"author":{"gitId":"weidak"},"content":"ref over ProfileDecoder","lastModifiedDate":"2021-11-08"},{"lineNumber":35,"author":{"gitId":"weidak"},"content":"Decode ActivityFactor","lastModifiedDate":"2021-11-08"},{"lineNumber":36,"author":{"gitId":"weidak"},"content":"end ref","lastModifiedDate":"2021-11-08"},{"lineNumber":37,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":38,"author":{"gitId":"weidak"},"content":"activate ProfileDecoder STORAGE_COLOUR","lastModifiedDate":"2021-11-08"},{"lineNumber":39,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":40,"author":{"gitId":"weidak"},"content":"end","lastModifiedDate":"2021-11-08"},{"lineNumber":41,"author":{"gitId":"weidak"},"content":"@enduml","lastModifiedDate":"2021-11-08"}],"authorContributionMap":{"weidak":41}},{"path":"docs/diagrams/DecodeCalorieGoal.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"weidak"},"content":"@startuml","lastModifiedDate":"2021-11-08"},{"lineNumber":2,"author":{"gitId":"weidak"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2021-11-08"},{"lineNumber":3,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":4,"author":{"gitId":"weidak"},"content":"!include style.puml","lastModifiedDate":"2021-11-08"},{"lineNumber":5,"author":{"gitId":"weidak"},"content":"hide footbox","lastModifiedDate":"2021-11-08"},{"lineNumber":6,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":7,"author":{"gitId":"weidak"},"content":"group sd Decode CalorieGoal","lastModifiedDate":"2021-11-08"},{"lineNumber":8,"author":{"gitId":"weidak"},"content":"participant \":ProfileDecoder\" As ProfileDecoder STORAGE_COLOUR","lastModifiedDate":"2021-11-08"},{"lineNumber":9,"author":{"gitId":"weidak"},"content":"participant CalorieGoal DATA_COLOUR","lastModifiedDate":"2021-11-08"},{"lineNumber":10,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":11,"author":{"gitId":"weidak"},"content":"activate ProfileDecoder STORAGE_COLOUR","lastModifiedDate":"2021-11-08"},{"lineNumber":12,"author":{"gitId":"weidak"},"content":"alt no errors thrown","lastModifiedDate":"2021-11-08"},{"lineNumber":13,"author":{"gitId":"weidak"},"content":"ProfileDecoder -\u003e CalorieGoal ** DATA_COLOUR: new CalorieGoal(Integer.parse(detail))","lastModifiedDate":"2021-11-08"},{"lineNumber":14,"author":{"gitId":"weidak"},"content":"activate CalorieGoal DATA_COLOUR","lastModifiedDate":"2021-11-08"},{"lineNumber":15,"author":{"gitId":"weidak"},"content":"    CalorieGoal --\u003e ProfileDecoder","lastModifiedDate":"2021-11-08"},{"lineNumber":16,"author":{"gitId":"weidak"},"content":"deactivate","lastModifiedDate":"2021-11-08"},{"lineNumber":17,"author":{"gitId":"weidak"},"content":"destroy CalorieGoal","lastModifiedDate":"2021-11-08"},{"lineNumber":18,"author":{"gitId":"weidak"},"content":"else NumberFormatException","lastModifiedDate":"2021-11-08"},{"lineNumber":19,"author":{"gitId":"weidak"},"content":"ProfileDecoder -\u003e CalorieGoal ** DATA_COLOUR: new CalorieGoal(Integer.MIN_VALUE)","lastModifiedDate":"2021-11-08"},{"lineNumber":20,"author":{"gitId":"weidak"},"content":"note right STORAGE_FADED_COLOUR: The (Integer.MIN_VALUE) \\nhere represents an invalid integer of \\nCalorieGoal that is handled\\nlater on in the startup of the \\nbot.","lastModifiedDate":"2021-11-08"},{"lineNumber":21,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":22,"author":{"gitId":"weidak"},"content":"activate CalorieGoal DATA_COLOUR","lastModifiedDate":"2021-11-08"},{"lineNumber":23,"author":{"gitId":"weidak"},"content":"    CalorieGoal --\u003e ProfileDecoder","lastModifiedDate":"2021-11-08"},{"lineNumber":24,"author":{"gitId":"weidak"},"content":"deactivate","lastModifiedDate":"2021-11-08"},{"lineNumber":25,"author":{"gitId":"weidak"},"content":"destroy CalorieGoal","lastModifiedDate":"2021-11-08"},{"lineNumber":26,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":27,"author":{"gitId":"weidak"},"content":"end","lastModifiedDate":"2021-11-08"},{"lineNumber":28,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":29,"author":{"gitId":"weidak"},"content":"end","lastModifiedDate":"2021-11-08"},{"lineNumber":30,"author":{"gitId":"weidak"},"content":"@enduml","lastModifiedDate":"2021-11-08"}],"authorContributionMap":{"weidak":30}},{"path":"docs/diagrams/DecodeGender.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"weidak"},"content":"@startuml","lastModifiedDate":"2021-11-08"},{"lineNumber":2,"author":{"gitId":"weidak"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2021-11-08"},{"lineNumber":3,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":4,"author":{"gitId":"weidak"},"content":"!include style.puml","lastModifiedDate":"2021-11-08"},{"lineNumber":5,"author":{"gitId":"weidak"},"content":"hide footbox","lastModifiedDate":"2021-11-08"},{"lineNumber":6,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":7,"author":{"gitId":"weidak"},"content":"group sd Decode Gender","lastModifiedDate":"2021-11-08"},{"lineNumber":8,"author":{"gitId":"weidak"},"content":"participant \":ProfileDecoder\" As ProfileDecoder STORAGE_COLOUR","lastModifiedDate":"2021-11-08"},{"lineNumber":9,"author":{"gitId":"weidak"},"content":"participant Gender DATA_COLOUR","lastModifiedDate":"2021-11-08"},{"lineNumber":10,"author":{"gitId":"weidak"},"content":"activate ProfileDecoder STORAGE_COLOUR","lastModifiedDate":"2021-11-08"},{"lineNumber":11,"author":{"gitId":"weidak"},"content":"alt detail.length() \u003e 1","lastModifiedDate":"2021-11-08"},{"lineNumber":12,"author":{"gitId":"weidak"},"content":"ProfileDecoder -\u003e Gender ** DATA_COLOUR: new Gender(\u0027X\u0027)","lastModifiedDate":"2021-11-08"},{"lineNumber":13,"author":{"gitId":"weidak"},"content":"activate Gender DATA_COLOUR","lastModifiedDate":"2021-11-08"},{"lineNumber":14,"author":{"gitId":"weidak"},"content":"    Gender --\u003e ProfileDecoder","lastModifiedDate":"2021-11-08"},{"lineNumber":15,"author":{"gitId":"weidak"},"content":"deactivate","lastModifiedDate":"2021-11-08"},{"lineNumber":16,"author":{"gitId":"weidak"},"content":"else else","lastModifiedDate":"2021-11-08"},{"lineNumber":17,"author":{"gitId":"weidak"},"content":"destroy Gender","lastModifiedDate":"2021-11-08"},{"lineNumber":18,"author":{"gitId":"weidak"},"content":"ProfileDecoder -\u003e Gender ** DATA_COLOUR: new Gender(detail)","lastModifiedDate":"2021-11-08"},{"lineNumber":19,"author":{"gitId":"weidak"},"content":"activate Gender DATA_COLOUR","lastModifiedDate":"2021-11-08"},{"lineNumber":20,"author":{"gitId":"weidak"},"content":"    Gender --\u003e ProfileDecoder","lastModifiedDate":"2021-11-08"},{"lineNumber":21,"author":{"gitId":"weidak"},"content":"deactivate","lastModifiedDate":"2021-11-08"},{"lineNumber":22,"author":{"gitId":"weidak"},"content":"destroy Gender","lastModifiedDate":"2021-11-08"},{"lineNumber":23,"author":{"gitId":"weidak"},"content":"end","lastModifiedDate":"2021-11-08"},{"lineNumber":24,"author":{"gitId":"weidak"},"content":"note right STORAGE_FADED_COLOUR: The \u0027X\u0027 here represents an \\ninvalid gender that is handled\\nlater on in the startup of the \\nbot. It only accept single\\ncharacters.","lastModifiedDate":"2021-11-08"},{"lineNumber":25,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":26,"author":{"gitId":"weidak"},"content":"end","lastModifiedDate":"2021-11-08"},{"lineNumber":27,"author":{"gitId":"weidak"},"content":"@enduml","lastModifiedDate":"2021-11-08"}],"authorContributionMap":{"weidak":27}},{"path":"docs/diagrams/DecodeHeight.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"weidak"},"content":"@startuml","lastModifiedDate":"2021-11-08"},{"lineNumber":2,"author":{"gitId":"weidak"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2021-11-08"},{"lineNumber":3,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":4,"author":{"gitId":"weidak"},"content":"!include style.puml","lastModifiedDate":"2021-11-08"},{"lineNumber":5,"author":{"gitId":"weidak"},"content":"hide footbox","lastModifiedDate":"2021-11-08"},{"lineNumber":6,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":7,"author":{"gitId":"weidak"},"content":"group sd Decode Height","lastModifiedDate":"2021-11-08"},{"lineNumber":8,"author":{"gitId":"weidak"},"content":"participant \":ProfileDecoder\" As ProfileDecoder STORAGE_COLOUR","lastModifiedDate":"2021-11-08"},{"lineNumber":9,"author":{"gitId":"weidak"},"content":"participant Height DATA_COLOUR","lastModifiedDate":"2021-11-08"},{"lineNumber":10,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":11,"author":{"gitId":"weidak"},"content":"activate ProfileDecoder STORAGE_COLOUR","lastModifiedDate":"2021-11-08"},{"lineNumber":12,"author":{"gitId":"weidak"},"content":"alt no errors thrown","lastModifiedDate":"2021-11-08"},{"lineNumber":13,"author":{"gitId":"weidak"},"content":"ProfileDecoder -\u003e Height ** DATA_COLOUR: new Height(Double.parse(detail))","lastModifiedDate":"2021-11-08"},{"lineNumber":14,"author":{"gitId":"weidak"},"content":"activate Height DATA_COLOUR","lastModifiedDate":"2021-11-08"},{"lineNumber":15,"author":{"gitId":"weidak"},"content":"    Height --\u003e ProfileDecoder","lastModifiedDate":"2021-11-08"},{"lineNumber":16,"author":{"gitId":"weidak"},"content":"deactivate","lastModifiedDate":"2021-11-08"},{"lineNumber":17,"author":{"gitId":"weidak"},"content":"destroy Height","lastModifiedDate":"2021-11-08"},{"lineNumber":18,"author":{"gitId":"weidak"},"content":"else NumberFormatException","lastModifiedDate":"2021-11-08"},{"lineNumber":19,"author":{"gitId":"weidak"},"content":"ProfileDecoder -\u003e Height ** DATA_COLOUR: new Height(Double.MIN_VALUE)","lastModifiedDate":"2021-11-08"},{"lineNumber":20,"author":{"gitId":"weidak"},"content":"note right STORAGE_FADED_COLOUR: The (Double.MIN_VALUE) \\nhere represents an invalid\\ndouble of Height that is handled\\nlater on in the startup of the \\nbot.","lastModifiedDate":"2021-11-08"},{"lineNumber":21,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":22,"author":{"gitId":"weidak"},"content":"activate Height DATA_COLOUR","lastModifiedDate":"2021-11-08"},{"lineNumber":23,"author":{"gitId":"weidak"},"content":"    Height --\u003e ProfileDecoder","lastModifiedDate":"2021-11-08"},{"lineNumber":24,"author":{"gitId":"weidak"},"content":"deactivate","lastModifiedDate":"2021-11-08"},{"lineNumber":25,"author":{"gitId":"weidak"},"content":"destroy Height","lastModifiedDate":"2021-11-08"},{"lineNumber":26,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":27,"author":{"gitId":"weidak"},"content":"end","lastModifiedDate":"2021-11-08"},{"lineNumber":28,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":29,"author":{"gitId":"weidak"},"content":"end","lastModifiedDate":"2021-11-08"},{"lineNumber":30,"author":{"gitId":"weidak"},"content":"@enduml","lastModifiedDate":"2021-11-08"}],"authorContributionMap":{"weidak":30}},{"path":"docs/diagrams/DecodeName.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"weidak"},"content":"@startuml","lastModifiedDate":"2021-11-08"},{"lineNumber":2,"author":{"gitId":"weidak"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2021-11-08"},{"lineNumber":3,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":4,"author":{"gitId":"weidak"},"content":"!include style.puml","lastModifiedDate":"2021-11-08"},{"lineNumber":5,"author":{"gitId":"weidak"},"content":"hide footbox","lastModifiedDate":"2021-11-08"},{"lineNumber":6,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":7,"author":{"gitId":"weidak"},"content":"group sd Decode Name","lastModifiedDate":"2021-11-08"},{"lineNumber":8,"author":{"gitId":"weidak"},"content":"participant \":ProfileDecoder\" As ProfileDecoder STORAGE_COLOUR","lastModifiedDate":"2021-11-08"},{"lineNumber":9,"author":{"gitId":"weidak"},"content":"participant Name DATA_COLOUR","lastModifiedDate":"2021-11-08"},{"lineNumber":10,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":11,"author":{"gitId":"weidak"},"content":"activate ProfileDecoder STORAGE_COLOUR","lastModifiedDate":"2021-11-08"},{"lineNumber":12,"author":{"gitId":"weidak"},"content":"ProfileDecoder -\u003e Name ** DATA_COLOUR: new Name(detail)","lastModifiedDate":"2021-11-08"},{"lineNumber":13,"author":{"gitId":"weidak"},"content":"activate Name DATA_COLOUR","lastModifiedDate":"2021-11-08"},{"lineNumber":14,"author":{"gitId":"weidak"},"content":"    Name --\u003e ProfileDecoder","lastModifiedDate":"2021-11-08"},{"lineNumber":15,"author":{"gitId":"weidak"},"content":"deactivate","lastModifiedDate":"2021-11-08"},{"lineNumber":16,"author":{"gitId":"weidak"},"content":"destroy Name","lastModifiedDate":"2021-11-08"},{"lineNumber":17,"author":{"gitId":"weidak"},"content":"end","lastModifiedDate":"2021-11-08"},{"lineNumber":18,"author":{"gitId":"weidak"},"content":"@enduml","lastModifiedDate":"2021-11-08"}],"authorContributionMap":{"weidak":18}},{"path":"docs/diagrams/DecodeWeight.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"weidak"},"content":"@startuml","lastModifiedDate":"2021-11-08"},{"lineNumber":2,"author":{"gitId":"weidak"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2021-11-08"},{"lineNumber":3,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":4,"author":{"gitId":"weidak"},"content":"!include style.puml","lastModifiedDate":"2021-11-08"},{"lineNumber":5,"author":{"gitId":"weidak"},"content":"hide footbox","lastModifiedDate":"2021-11-08"},{"lineNumber":6,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":7,"author":{"gitId":"weidak"},"content":"group sd Decode Weight","lastModifiedDate":"2021-11-08"},{"lineNumber":8,"author":{"gitId":"weidak"},"content":"participant \":ProfileDecoder\" As ProfileDecoder STORAGE_COLOUR","lastModifiedDate":"2021-11-08"},{"lineNumber":9,"author":{"gitId":"weidak"},"content":"participant Weight DATA_COLOUR","lastModifiedDate":"2021-11-08"},{"lineNumber":10,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":11,"author":{"gitId":"weidak"},"content":"activate ProfileDecoder STORAGE_COLOUR","lastModifiedDate":"2021-11-08"},{"lineNumber":12,"author":{"gitId":"weidak"},"content":"alt no errors thrown","lastModifiedDate":"2021-11-08"},{"lineNumber":13,"author":{"gitId":"weidak"},"content":"ProfileDecoder -\u003e Weight ** DATA_COLOUR: new Weight(Double.parse(detail))","lastModifiedDate":"2021-11-08"},{"lineNumber":14,"author":{"gitId":"weidak"},"content":"activate Weight DATA_COLOUR","lastModifiedDate":"2021-11-08"},{"lineNumber":15,"author":{"gitId":"weidak"},"content":"    Weight --\u003e ProfileDecoder","lastModifiedDate":"2021-11-08"},{"lineNumber":16,"author":{"gitId":"weidak"},"content":"deactivate","lastModifiedDate":"2021-11-08"},{"lineNumber":17,"author":{"gitId":"weidak"},"content":"destroy Weight","lastModifiedDate":"2021-11-08"},{"lineNumber":18,"author":{"gitId":"weidak"},"content":"else NumberFormatException","lastModifiedDate":"2021-11-08"},{"lineNumber":19,"author":{"gitId":"weidak"},"content":"ProfileDecoder -\u003e Weight ** DATA_COLOUR: new Weight(Double.MIN_VALUE)","lastModifiedDate":"2021-11-08"},{"lineNumber":20,"author":{"gitId":"weidak"},"content":"note right STORAGE_FADED_COLOUR: The (Double.MIN_VALUE) \\nhere represents an invalid\\ndouble of Weight that is handled\\nlater on in the startup of the \\nbot.","lastModifiedDate":"2021-11-08"},{"lineNumber":21,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":22,"author":{"gitId":"weidak"},"content":"activate Weight DATA_COLOUR","lastModifiedDate":"2021-11-08"},{"lineNumber":23,"author":{"gitId":"weidak"},"content":"    Weight --\u003e ProfileDecoder","lastModifiedDate":"2021-11-08"},{"lineNumber":24,"author":{"gitId":"weidak"},"content":"deactivate","lastModifiedDate":"2021-11-08"},{"lineNumber":25,"author":{"gitId":"weidak"},"content":"destroy Weight","lastModifiedDate":"2021-11-08"},{"lineNumber":26,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":27,"author":{"gitId":"weidak"},"content":"end","lastModifiedDate":"2021-11-08"},{"lineNumber":28,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":29,"author":{"gitId":"weidak"},"content":"end","lastModifiedDate":"2021-11-08"},{"lineNumber":30,"author":{"gitId":"weidak"},"content":"@enduml","lastModifiedDate":"2021-11-08"}],"authorContributionMap":{"weidak":30}},{"path":"docs/diagrams/ItemBankAndItemClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"tryyang2001"},"content":"@startuml","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"tryyang2001"},"content":"\u0027https://plantuml.com/class-diagram","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"tlyi"},"content":"!include Style.puml","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"tryyang2001"},"content":"hide circle","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"tryyang2001"},"content":"skinparam classAttributeIconSize 0","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"tryyang2001"},"content":"class DataManager DATA_COLOUR","lastModifiedDate":"2021-11-08"},{"lineNumber":8,"author":{"gitId":"tryyang2001"},"content":"class \"\u003c\u003cinterface\u003e\u003e\\nVerifiable\" As Verifiable DATA_COLOUR","lastModifiedDate":"2021-11-08"},{"lineNumber":9,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":10,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":11,"author":{"gitId":"tryyang2001"},"content":"package \"Item\" As Item1 {","lastModifiedDate":"2021-11-08"},{"lineNumber":12,"author":{"gitId":"tryyang2001"},"content":"class ItemBank DATA_COLOUR","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"tryyang2001"},"content":"class \"{abstract}\\nItemList\" as ItemList DATA_COLOUR","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"tryyang2001"},"content":"class FoodList DATA_COLOUR","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"tryyang2001"},"content":"class ExerciseList DATA_COLOUR","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"tryyang2001"},"content":"class FutureExerciseList DATA_COLOUR","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"tryyang2001"},"content":"DataManager -left-\u003e ItemBank","lastModifiedDate":"2021-11-08"},{"lineNumber":18,"author":{"gitId":"tryyang2001"},"content":"class \"{abstract}\\nItem\" as Item DATA_COLOUR{","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"tryyang2001"},"content":"#name: String","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"tryyang2001"},"content":"#calories: int","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"tryyang2001"},"content":"}","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"tryyang2001"},"content":"class Food DATA_COLOUR {","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"tryyang2001"},"content":"#dateTime: LocalDateTime","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"tryyang2001"},"content":"}","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"tryyang2001"},"content":"class Exercise DATA_COLOUR {","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"tryyang2001"},"content":"#date: LocalDate","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"tryyang2001"},"content":"}","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"tryyang2001"},"content":"enum \"\u003c\u003cenumeration\u003e\u003e\\nTimePeriod\" as TimePeriod DATA_COLOUR {","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"tryyang2001"},"content":"MORNING, AFTERNOON,","lastModifiedDate":"2021-11-07"},{"lineNumber":33,"author":{"gitId":"tryyang2001"},"content":"EVENING, NIGHT","lastModifiedDate":"2021-11-07"},{"lineNumber":34,"author":{"gitId":"tryyang2001"},"content":"}","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"tryyang2001"},"content":"hide TimePeriod method","lastModifiedDate":"2021-10-30"},{"lineNumber":37,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":38,"author":{"gitId":"tryyang2001"},"content":"ItemBank \u003c|-- ItemList","lastModifiedDate":"2021-10-30"},{"lineNumber":39,"author":{"gitId":"tryyang2001"},"content":"ItemList \u003c|-- FoodList","lastModifiedDate":"2021-10-30"},{"lineNumber":40,"author":{"gitId":"tryyang2001"},"content":"ItemList \u003c|-- ExerciseList","lastModifiedDate":"2021-10-30"},{"lineNumber":41,"author":{"gitId":"tryyang2001"},"content":"ExerciseList \u003c|-- FutureExerciseList","lastModifiedDate":"2021-10-30"},{"lineNumber":42,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":43,"author":{"gitId":"tryyang2001"},"content":"Verifiable \u003c|.left. Item : \"\\t\\t\"","lastModifiedDate":"2021-10-30"},{"lineNumber":44,"author":{"gitId":"tryyang2001"},"content":"Item \u003c|-left- Food","lastModifiedDate":"2021-11-08"},{"lineNumber":45,"author":{"gitId":"tryyang2001"},"content":"Item \u003c|-- Exercise","lastModifiedDate":"2021-10-30"},{"lineNumber":46,"author":{"gitId":"tryyang2001"},"content":"Item \"*\" \u003c-- ItemBank: \"internalItems\\n\\n\\n\"","lastModifiedDate":"2021-10-30"},{"lineNumber":47,"author":{"gitId":"tryyang2001"},"content":"TimePeriod \"1 \" \u003c-up- Food : \"\\n\\n\\n timePeriod\"","lastModifiedDate":"2021-11-08"},{"lineNumber":48,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":49,"author":{"gitId":"tryyang2001"},"content":"Food \u003c.. FoodList","lastModifiedDate":"2021-10-24"},{"lineNumber":50,"author":{"gitId":"tryyang2001"},"content":"Exercise \u003c.. ExerciseList","lastModifiedDate":"2021-10-24"},{"lineNumber":51,"author":{"gitId":"tryyang2001"},"content":"}","lastModifiedDate":"2021-11-08"},{"lineNumber":52,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":53,"author":{"gitId":"tryyang2001"},"content":"@enduml","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"tryyang2001":52,"tlyi":1}},{"path":"docs/diagrams/LogicClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"@startuml","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"tlyi"},"content":"\u0027https://plantuml.com/class-diagram","lastModifiedDate":"2021-10-27"},{"lineNumber":3,"author":{"gitId":"tlyi"},"content":"!include Style.puml","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"tlyi"},"content":"hide circle","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"tlyi"},"content":"hide empty members","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"tlyi"},"content":"skinparam minclassWidth 120","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"tlyi"},"content":"skinparam Padding 5","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"tlyi"},"content":"class StorageManager STORAGE_COLOUR","lastModifiedDate":"2021-11-07"},{"lineNumber":10,"author":{"gitId":"tlyi"},"content":"class DataManager DATA_COLOUR","lastModifiedDate":"2021-11-07"},{"lineNumber":11,"author":{"gitId":"tlyi"},"content":"class LogicManager LOGIC_COLOUR","lastModifiedDate":"2021-11-07"},{"lineNumber":12,"author":{"gitId":"tlyi"},"content":"class ParserManager LOGIC_COLOUR","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"tlyi"},"content":"class CommandResult LOGIC_COLOUR","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"tlyi"},"content":"class XYZCommand LOGIC_COLOUR","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"tlyi"},"content":"abstract class \"{abstract}\\nCommand\" AS Command LOGIC_COLOUR","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":18,"author":{"gitId":"tlyi"},"content":"LogicManager --\u003e \"1\" ParserManager","lastModifiedDate":"2021-11-08"},{"lineNumber":19,"author":{"gitId":"tlyi"},"content":"LogicManager --\u003e \"1\" StorageManager","lastModifiedDate":"2021-11-08"},{"lineNumber":20,"author":{"gitId":"tlyi"},"content":"LogicManager -\u003e \"1\" DataManager","lastModifiedDate":"2021-11-08"},{"lineNumber":21,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":22,"author":{"gitId":"tlyi"},"content":"ParserManager ..\u003e XYZCommand : \u003e creates","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"tlyi"},"content":"XYZCommand --|\u003e Command","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"tlyi"},"content":"Command .right.\u003e CommandResult : \u003e produces","lastModifiedDate":"2021-10-27"},{"lineNumber":25,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":27,"author":{"gitId":"tlyi"},"content":"class Main MAIN_COLOUR","lastModifiedDate":"2021-10-27"},{"lineNumber":28,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":29,"author":{"gitId":"tlyi"},"content":"Main --\u003e \"1\" LogicManager : \u003e instantiates and \\n feeds user input","lastModifiedDate":"2021-11-08"},{"lineNumber":30,"author":{"gitId":"tlyi"},"content":"Command --\u003e DataManager : \u003e modifies","lastModifiedDate":"2021-11-07"},{"lineNumber":31,"author":{"gitId":"tlyi"},"content":"ParserManager ..\u003e Command : \u003e returns","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"tlyi"},"content":"StorageManager ..\u003e DataManager : \u003e saves","lastModifiedDate":"2021-11-07"},{"lineNumber":33,"author":{"gitId":"tlyi"},"content":"LogicManager ..\u003e Command : \u003e executes","lastModifiedDate":"2021-11-07"},{"lineNumber":34,"author":{"gitId":"tlyi"},"content":"Main ..\u003e CommandResult : \u003e retrieves","lastModifiedDate":"2021-10-27"},{"lineNumber":35,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":36,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":37,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":38,"author":{"gitId":"tlyi"},"content":"@enduml","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"tlyi":38}},{"path":"docs/diagrams/LogicSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"@startuml","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"tlyi"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2021-10-27"},{"lineNumber":3,"author":{"gitId":"tlyi"},"content":"!include Style.puml","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"tlyi"},"content":"hide footbox","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"tlyi"},"content":"autoactivate on","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"tlyi"},"content":"participant \":Main\" AS Main MAIN_COLOUR","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"tlyi"},"content":"participant \":LogicManager\" AS LogicManager LOGIC_COLOUR","lastModifiedDate":"2021-11-07"},{"lineNumber":9,"author":{"gitId":"tlyi"},"content":"participant \":ParserManager\" AS ParserManager LOGIC_COLOUR","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"tlyi"},"content":"participant \":AddCommandParser\" AS AddCommandParser LOGIC_COLOUR","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"tlyi"},"content":"participant \"c:AddFoodCommand\" AS AddFoodCommand LOGIC_COLOUR","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"tlyi"},"content":"participant \"r:CommandResult\" AS CommandResult LOGIC_COLOUR","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"tlyi"},"content":"activate Main MAIN_COLOUR","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":15,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":16,"author":{"gitId":"tlyi"},"content":"create LogicManager","lastModifiedDate":"2021-11-07"},{"lineNumber":17,"author":{"gitId":"tlyi"},"content":"Main -\u003e LogicManager LOGIC_COLOUR : new LogicManager(storageManager, dataManager)","lastModifiedDate":"2021-11-07"},{"lineNumber":18,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":19,"author":{"gitId":"tlyi"},"content":"create ParserManager","lastModifiedDate":"2021-11-07"},{"lineNumber":20,"author":{"gitId":"tlyi"},"content":"LogicManager-\u003e ParserManager LOGIC_COLOUR","lastModifiedDate":"2021-11-07"},{"lineNumber":21,"author":{"gitId":"tlyi"},"content":"return","lastModifiedDate":"2021-11-07"},{"lineNumber":22,"author":{"gitId":"tlyi"},"content":"return","lastModifiedDate":"2021-11-07"},{"lineNumber":23,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":24,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":25,"author":{"gitId":"tlyi"},"content":"Main -\u003e LogicManager LOGIC_COLOUR : execute(\"add f/potato c/30\")","lastModifiedDate":"2021-11-07"},{"lineNumber":26,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":27,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":28,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":29,"author":{"gitId":"tlyi"},"content":"LogicManager -\u003e ParserManager LOGIC_COLOUR : parseCommand (\"add f/potato c/30\")","lastModifiedDate":"2021-11-07"},{"lineNumber":30,"author":{"gitId":"tlyi"},"content":"ref over ParserManager","lastModifiedDate":"2021-10-27"},{"lineNumber":31,"author":{"gitId":"tlyi"},"content":"    determine type","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"tlyi"},"content":"    of command","lastModifiedDate":"2021-10-27"},{"lineNumber":33,"author":{"gitId":"tlyi"},"content":"end ref","lastModifiedDate":"2021-10-27"},{"lineNumber":34,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":35,"author":{"gitId":"tlyi"},"content":"create AddCommandParser","lastModifiedDate":"2021-10-27"},{"lineNumber":36,"author":{"gitId":"tlyi"},"content":"ParserManager -\u003e AddCommandParser LOGIC_COLOUR","lastModifiedDate":"2021-10-27"},{"lineNumber":37,"author":{"gitId":"tlyi"},"content":"return","lastModifiedDate":"2021-10-27"},{"lineNumber":38,"author":{"gitId":"tlyi"},"content":"ParserManager -\u003e AddCommandParser LOGIC_COLOUR : parse(\"f/...\")","lastModifiedDate":"2021-10-27"},{"lineNumber":39,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":40,"author":{"gitId":"tlyi"},"content":"ref over AddCommandParser","lastModifiedDate":"2021-10-27"},{"lineNumber":41,"author":{"gitId":"tlyi"},"content":"    parse required","lastModifiedDate":"2021-10-27"},{"lineNumber":42,"author":{"gitId":"tlyi"},"content":"    parameters","lastModifiedDate":"2021-10-27"},{"lineNumber":43,"author":{"gitId":"tlyi"},"content":"    for the command","lastModifiedDate":"2021-10-27"},{"lineNumber":44,"author":{"gitId":"tlyi"},"content":"end ref","lastModifiedDate":"2021-10-27"},{"lineNumber":45,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":46,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":47,"author":{"gitId":"tlyi"},"content":"create AddFoodCommand","lastModifiedDate":"2021-10-27"},{"lineNumber":48,"author":{"gitId":"tlyi"},"content":"AddCommandParser -\u003e AddFoodCommand LOGIC_COLOUR : new AddFoodCommand(\"potato\", ...)","lastModifiedDate":"2021-10-27"},{"lineNumber":49,"author":{"gitId":"tlyi"},"content":"return c","lastModifiedDate":"2021-10-27"},{"lineNumber":50,"author":{"gitId":"tlyi"},"content":"return c","lastModifiedDate":"2021-10-27"},{"lineNumber":51,"author":{"gitId":"tlyi"},"content":"return c","lastModifiedDate":"2021-10-27"},{"lineNumber":52,"author":{"gitId":"tlyi"},"content":"destroy AddCommandParser","lastModifiedDate":"2021-10-27"},{"lineNumber":53,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":54,"author":{"gitId":"tlyi"},"content":"LogicManager -\u003e AddFoodCommand LOGIC_COLOUR : setData(dataManager)","lastModifiedDate":"2021-11-07"},{"lineNumber":55,"author":{"gitId":"tlyi"},"content":"destroy ParserManager","lastModifiedDate":"2021-10-27"},{"lineNumber":56,"author":{"gitId":"tlyi"},"content":"return","lastModifiedDate":"2021-10-27"},{"lineNumber":57,"author":{"gitId":"tlyi"},"content":"LogicManager -\u003e AddFoodCommand LOGIC_COLOUR : execute()","lastModifiedDate":"2021-11-07"},{"lineNumber":58,"author":{"gitId":"tlyi"},"content":"note over AddFoodCommand #WHITE : The data manipulation process \\n is not shown here.","lastModifiedDate":"2021-11-08"},{"lineNumber":59,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":60,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":61,"author":{"gitId":"tlyi"},"content":"create CommandResult","lastModifiedDate":"2021-10-27"},{"lineNumber":62,"author":{"gitId":"tlyi"},"content":"AddFoodCommand -\u003e CommandResult LOGIC_COLOUR","lastModifiedDate":"2021-10-27"},{"lineNumber":63,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":64,"author":{"gitId":"tlyi"},"content":"return r","lastModifiedDate":"2021-10-27"},{"lineNumber":65,"author":{"gitId":"tlyi"},"content":"return r","lastModifiedDate":"2021-10-27"},{"lineNumber":66,"author":{"gitId":"tlyi"},"content":"destroy CommandResult","lastModifiedDate":"2021-10-27"},{"lineNumber":67,"author":{"gitId":"tlyi"},"content":"return r","lastModifiedDate":"2021-11-07"},{"lineNumber":68,"author":{"gitId":"tlyi"},"content":"destroy AddFoodCommand","lastModifiedDate":"2021-11-07"},{"lineNumber":69,"author":{"gitId":"tlyi"},"content":"@enduml","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"tlyi":69}},{"path":"docs/diagrams/MainClass.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"tttyyzzz"},"content":"@startuml","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"tttyyzzz"},"content":"!include Style.puml","lastModifiedDate":"2021-10-27"},{"lineNumber":3,"author":{"gitId":"tttyyzzz"},"content":"\u0027https://plantuml.com/class-diagram","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"tttyyzzz"},"content":"hide circle","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"tttyyzzz"},"content":"class  \"        Ui        \" as Ui","lastModifiedDate":"2021-11-05"},{"lineNumber":7,"author":{"gitId":"tttyyzzz"},"content":"class \"     State     \" as State STATE_COLOUR","lastModifiedDate":"2021-11-08"},{"lineNumber":8,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"tlyi"},"content":"class DataManager DATA_COLOUR","lastModifiedDate":"2021-11-07"},{"lineNumber":10,"author":{"gitId":"tlyi"},"content":"DataManager \"1\" \u003c-- Main: stores \u003c","lastModifiedDate":"2021-11-07"},{"lineNumber":11,"author":{"gitId":"tttyyzzz"},"content":"LogicManager \"1\" \u003c-- Main : parse \u003c","lastModifiedDate":"2021-11-05"},{"lineNumber":12,"author":{"gitId":"tttyyzzz"},"content":"Ui \"1\" \u003c-- Main : formats output \u003c","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"tttyyzzz"},"content":"StorageManager \"1\" \u003c-- Main : retrieves \u003c","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"tttyyzzz"},"content":"State \"1\" \u003c-- Main : checks \u003c","lastModifiedDate":"2021-11-08"},{"lineNumber":15,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":16,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"tttyyzzz"},"content":"class Main MAIN_COLOUR {","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"tttyyzzz"},"content":"start()","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"tttyyzzz"},"content":"checkAndCreateProfile()","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"tttyyzzz"},"content":"enterTaskModeUntilByeCommand()","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"tttyyzzz"},"content":"exit()","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"tttyyzzz"},"content":"}","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"tttyyzzz"},"content":"class LogicManager LOGIC_COLOUR","lastModifiedDate":"2021-11-05"},{"lineNumber":25,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"tttyyzzz"},"content":"class StorageManager STORAGE_COLOUR","lastModifiedDate":"2021-11-05"},{"lineNumber":27,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":28,"author":{"gitId":"tttyyzzz"},"content":"class Ui UI_COLOUR","lastModifiedDate":"2021-10-27"},{"lineNumber":29,"author":{"gitId":"tttyyzzz"},"content":"@enduml","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"tttyyzzz":27,"tlyi":2}},{"path":"docs/diagrams/OverviewCommand.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"tttyyzzz"},"content":"@startuml","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"tttyyzzz"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2021-10-27"},{"lineNumber":3,"author":{"gitId":"tttyyzzz"},"content":"!include Style.puml","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"tttyyzzz"},"content":"hide footbox","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"tttyyzzz"},"content":"participant Data DATA_COLOUR","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"tttyyzzz"},"content":"participant Ui UI_COLOUR","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"tttyyzzz"},"content":"-\u003e Ui ++ UI_COLOUR: overview","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"tttyyzzz"},"content":"participant Main MAIN_COLOUR","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"tttyyzzz"},"content":"Ui -\u003e Main ++ MAIN_COLOUR: getInput()","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"tttyyzzz"},"content":"participant Parser LOGIC_COLOUR","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"tttyyzzz"},"content":"create Parser LOGIC_COLOUR","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"tttyyzzz"},"content":"Main -\u003e Parser ++ LOGIC_COLOUR : parseInput()","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"tttyyzzz"},"content":"participant OverviewCommand LOGIC_COLOUR","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"tttyyzzz"},"content":"create OverviewCommand LOGIC_COLOUR","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"tttyyzzz"},"content":"Parser -\u003e OverviewCommand ++ LOGIC_COLOUR","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"tttyyzzz"},"content":"OverviewCommand --\u003e Parser -- LOGIC_COLOUR","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"tttyyzzz"},"content":"Parser --\u003e Main -- LOGIC_COLOUR","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"tttyyzzz"},"content":"Main -\u003e OverviewCommand ++ LOGIC_COLOUR: execute()","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"tttyyzzz"},"content":"participant Statistics UI_COLOUR","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"tttyyzzz"},"content":"create Statistics","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"tttyyzzz"},"content":"OverviewCommand -\u003e Statistics ++ UI_COLOUR","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"tttyyzzz"},"content":"destroy Parser","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"tttyyzzz"},"content":"Statistics -\u003e Data ++ DATA_COLOUR","lastModifiedDate":"2021-10-27"},{"lineNumber":25,"author":{"gitId":"tttyyzzz"},"content":"Data --\u003e Statistics -- : data","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"tttyyzzz"},"content":"Statistics --\u003e OverviewCommand --","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"tttyyzzz"},"content":"participant CommandResult LOGIC_COLOUR","lastModifiedDate":"2021-10-27"},{"lineNumber":28,"author":{"gitId":"tttyyzzz"},"content":"create CommandResult","lastModifiedDate":"2021-10-27"},{"lineNumber":29,"author":{"gitId":"tttyyzzz"},"content":"OverviewCommand -\u003e CommandResult ++ LOGIC_COLOUR","lastModifiedDate":"2021-10-27"},{"lineNumber":30,"author":{"gitId":"tttyyzzz"},"content":"CommandResult -\u003e OverviewCommand --","lastModifiedDate":"2021-10-27"},{"lineNumber":31,"author":{"gitId":"tttyyzzz"},"content":"OverviewCommand --\u003e Main --","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"tttyyzzz"},"content":"destroy Statistics","lastModifiedDate":"2021-10-27"},{"lineNumber":33,"author":{"gitId":"tttyyzzz"},"content":"Main -\u003e CommandResult ++ LOGIC_COLOUR","lastModifiedDate":"2021-10-27"},{"lineNumber":34,"author":{"gitId":"tttyyzzz"},"content":"CommandResult -\u003e Main -- : overviewMessage","lastModifiedDate":"2021-10-27"},{"lineNumber":35,"author":{"gitId":"tttyyzzz"},"content":"Main -\u003e Ui -- : formatMessage()","lastModifiedDate":"2021-10-27"},{"lineNumber":36,"author":{"gitId":"tttyyzzz"},"content":"destroy OverviewCommand","lastModifiedDate":"2021-10-27"},{"lineNumber":37,"author":{"gitId":"tttyyzzz"},"content":"\u003c--Ui --","lastModifiedDate":"2021-10-27"},{"lineNumber":38,"author":{"gitId":"tttyyzzz"},"content":"destroy CommandResult","lastModifiedDate":"2021-10-27"},{"lineNumber":39,"author":{"gitId":"tttyyzzz"},"content":"@enduml","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"tttyyzzz":39}},{"path":"docs/diagrams/ParseCommandRefFrame.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"@startuml","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"tlyi"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2021-10-27"},{"lineNumber":3,"author":{"gitId":"tlyi"},"content":"!include Style.puml","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"tlyi"},"content":"mainframe sd determine type of command","lastModifiedDate":"2021-11-08"},{"lineNumber":5,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"tlyi"},"content":"participant \":ParserManager\" AS ParserManager LOGIC_COLOUR","lastModifiedDate":"2021-11-08"},{"lineNumber":8,"author":{"gitId":"tlyi"},"content":"participant \":AddCommandParser\" AS AddCommandParser LOGIC_COLOUR","lastModifiedDate":"2021-11-08"},{"lineNumber":9,"author":{"gitId":"tlyi"},"content":"participant \":XYZCommandParser\" AS XYZCommandParser LOGIC_COLOUR","lastModifiedDate":"2021-11-08"},{"lineNumber":10,"author":{"gitId":"tlyi"},"content":"-\u003e ParserManager : parseCommand(\"add f/potato c/30\")","lastModifiedDate":"2021-11-08"},{"lineNumber":11,"author":{"gitId":"tlyi"},"content":"participant \":InvalidCommand\" AS InvalidCommand LOGIC_COLOUR","lastModifiedDate":"2021-11-08"},{"lineNumber":12,"author":{"gitId":"tlyi"},"content":"activate ParserManager LOGIC_COLOUR","lastModifiedDate":"2021-11-08"},{"lineNumber":13,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":14,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":15,"author":{"gitId":"tlyi"},"content":"activate ParserManager LOGIC_COLOUR","lastModifiedDate":"2021-11-08"},{"lineNumber":16,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":17,"author":{"gitId":"tlyi"},"content":"ParserManager -\u003e ParserManager : splitInputIntoCommandAndParams(input)","lastModifiedDate":"2021-11-08"},{"lineNumber":18,"author":{"gitId":"tlyi"},"content":"activate ParserManager LOGIC_COLOUR","lastModifiedDate":"2021-11-08"},{"lineNumber":19,"author":{"gitId":"tlyi"},"content":"return [\"add\", \"f/potato c/30\"]","lastModifiedDate":"2021-11-08"},{"lineNumber":20,"author":{"gitId":"tlyi"},"content":"alt command word is \"add\"","lastModifiedDate":"2021-11-08"},{"lineNumber":21,"author":{"gitId":"tlyi"},"content":"    create AddCommandParser","lastModifiedDate":"2021-11-08"},{"lineNumber":22,"author":{"gitId":"tlyi"},"content":"    ParserManager -\u003e AddCommandParser LOGIC_COLOUR : new AddCommandParser()","lastModifiedDate":"2021-11-08"},{"lineNumber":23,"author":{"gitId":"tlyi"},"content":"    activate AddCommandParser LOGIC_COLOUR","lastModifiedDate":"2021-11-08"},{"lineNumber":24,"author":{"gitId":"tlyi"},"content":"    return","lastModifiedDate":"2021-11-08"},{"lineNumber":25,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":26,"author":{"gitId":"tlyi"},"content":"else command word is \"xyz\"","lastModifiedDate":"2021-11-08"},{"lineNumber":27,"author":{"gitId":"tlyi"},"content":"    create XYZCommandParser","lastModifiedDate":"2021-11-08"},{"lineNumber":28,"author":{"gitId":"tlyi"},"content":"    ParserManager -\u003e XYZCommandParser LOGIC_COLOUR : new XYZCommandParser()","lastModifiedDate":"2021-11-08"},{"lineNumber":29,"author":{"gitId":"tlyi"},"content":"    activate XYZCommandParser LOGIC_COLOUR","lastModifiedDate":"2021-11-08"},{"lineNumber":30,"author":{"gitId":"tlyi"},"content":"    return","lastModifiedDate":"2021-11-08"},{"lineNumber":31,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":32,"author":{"gitId":"tlyi"},"content":"    note left #WHITE: XYZ \u003d Delete, View, \\nEdit, etc.","lastModifiedDate":"2021-11-08"},{"lineNumber":33,"author":{"gitId":"tlyi"},"content":"else command word is not known","lastModifiedDate":"2021-11-08"},{"lineNumber":34,"author":{"gitId":"tlyi"},"content":"    create InvalidCommand","lastModifiedDate":"2021-11-08"},{"lineNumber":35,"author":{"gitId":"tlyi"},"content":"    ParserManager -\u003e InvalidCommand LOGIC_COLOUR : new InvalidCommand(ParserMessages.MESSAGE_ERROR_COMMAND_DOES_NOT_EXIST)","lastModifiedDate":"2021-11-08"},{"lineNumber":36,"author":{"gitId":"tlyi"},"content":"    activate InvalidCommand LOGIC_COLOUR","lastModifiedDate":"2021-11-08"},{"lineNumber":37,"author":{"gitId":"tlyi"},"content":"    return","lastModifiedDate":"2021-11-08"},{"lineNumber":38,"author":{"gitId":"tlyi"},"content":"end","lastModifiedDate":"2021-11-08"},{"lineNumber":39,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":40,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":41,"author":{"gitId":"tlyi"},"content":"@enduml","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"tlyi":41}},{"path":"docs/diagrams/ParseParametersRefFrame.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"@startuml","lastModifiedDate":"2021-11-08"},{"lineNumber":2,"author":{"gitId":"tlyi"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2021-11-08"},{"lineNumber":3,"author":{"gitId":"tlyi"},"content":"!include Style.puml","lastModifiedDate":"2021-11-08"},{"lineNumber":4,"author":{"gitId":"tlyi"},"content":"mainframe sd parse required parameters for the command","lastModifiedDate":"2021-11-08"},{"lineNumber":5,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":6,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":7,"author":{"gitId":"tlyi"},"content":"participant \":AddCommandParser\" AS AddCommandParser LOGIC_COLOUR","lastModifiedDate":"2021-11-08"},{"lineNumber":8,"author":{"gitId":"tlyi"},"content":"participant \"\u003c\u003cclass\u003e\u003e \\n ParserUtils\" AS ParserUtils LOGIC_COLOUR","lastModifiedDate":"2021-11-08"},{"lineNumber":9,"author":{"gitId":"tlyi"},"content":"participant \"a:InvalidCommand\" AS InvalidCommand1 LOGIC_COLOUR","lastModifiedDate":"2021-11-08"},{"lineNumber":10,"author":{"gitId":"tlyi"},"content":"participant \":AddFoodCommand\" AS AddFoodCommand LOGIC_COLOUR","lastModifiedDate":"2021-11-08"},{"lineNumber":11,"author":{"gitId":"tlyi"},"content":"participant \"b:InvalidCommand\" AS InvalidCommand2 LOGIC_COLOUR","lastModifiedDate":"2021-11-08"},{"lineNumber":12,"author":{"gitId":"tlyi"},"content":"participant \"c:InvalidCommand\" AS InvalidCommand3 LOGIC_COLOUR","lastModifiedDate":"2021-11-08"},{"lineNumber":13,"author":{"gitId":"tlyi"},"content":"-\u003e AddCommandParser : parse(\"f/potato c/30\")","lastModifiedDate":"2021-11-08"},{"lineNumber":14,"author":{"gitId":"tlyi"},"content":"activate AddCommandParser LOGIC_COLOUR","lastModifiedDate":"2021-11-08"},{"lineNumber":15,"author":{"gitId":"tlyi"},"content":"AddCommandParser -\u003e ParserUtils : extractItemTypePrefix(\"f/potato c/30\")","lastModifiedDate":"2021-11-08"},{"lineNumber":16,"author":{"gitId":"tlyi"},"content":"activate ParserUtils LOGIC_COLOUR","lastModifiedDate":"2021-11-08"},{"lineNumber":17,"author":{"gitId":"tlyi"},"content":"return \"f\"","lastModifiedDate":"2021-11-08"},{"lineNumber":18,"author":{"gitId":"tlyi"},"content":"alt item type is food","lastModifiedDate":"2021-11-08"},{"lineNumber":19,"author":{"gitId":"tlyi"},"content":"    AddCommandParser -\u003e AddCommandParser : parseAddToFood(\"f/potato c/30\", \"f\")","lastModifiedDate":"2021-11-08"},{"lineNumber":20,"author":{"gitId":"tlyi"},"content":"    activate AddCommandParser LOGIC_COLOUR","lastModifiedDate":"2021-11-08"},{"lineNumber":21,"author":{"gitId":"tlyi"},"content":"    AddCommandParser -\u003e ParserUtils ++ LOGIC_COLOUR : hasExtraDelimiters(\"f/potato c/30\", AddFoodCommand.EXPECTED_PREFIXES)","lastModifiedDate":"2021-11-08"},{"lineNumber":22,"author":{"gitId":"tlyi"},"content":"    return","lastModifiedDate":"2021-11-08"},{"lineNumber":23,"author":{"gitId":"tlyi"},"content":"    alt hasExtraDelimiters","lastModifiedDate":"2021-11-08"},{"lineNumber":24,"author":{"gitId":"tlyi"},"content":"        create InvalidCommand1","lastModifiedDate":"2021-11-08"},{"lineNumber":25,"author":{"gitId":"tlyi"},"content":"        AddCommandParser -\u003e InvalidCommand1 : new InvalidCommand(ParserMessages.MESSAGE_ERROR_TOO_MANY_DELIMITERS)","lastModifiedDate":"2021-11-08"},{"lineNumber":26,"author":{"gitId":"tlyi"},"content":"        activate InvalidCommand1 LOGIC_COLOUR","lastModifiedDate":"2021-11-08"},{"lineNumber":27,"author":{"gitId":"tlyi"},"content":"        return command","lastModifiedDate":"2021-11-08"},{"lineNumber":28,"author":{"gitId":"tlyi"},"content":"    else else","lastModifiedDate":"2021-11-08"},{"lineNumber":29,"author":{"gitId":"tlyi"},"content":"        AddCommandParser -\u003e ParserUtils ++ LOGIC_COLOUR : extractItemDescription(\"f/potato c/30\", \"f\")","lastModifiedDate":"2021-11-08"},{"lineNumber":30,"author":{"gitId":"tlyi"},"content":"        return \"potato\"","lastModifiedDate":"2021-11-08"},{"lineNumber":31,"author":{"gitId":"tlyi"},"content":"        AddCommandParser -\u003e ParserUtils ++ LOGIC_COLOUR : extractItemCalories(\"f/potato c/30\")","lastModifiedDate":"2021-11-08"},{"lineNumber":32,"author":{"gitId":"tlyi"},"content":"        return \"30\"","lastModifiedDate":"2021-11-08"},{"lineNumber":33,"author":{"gitId":"tlyi"},"content":"        AddCommandParser -\u003e ParserUtils ++ LOGIC_COLOUR : extractDateTime(\"f/potato c/30\")","lastModifiedDate":"2021-11-08"},{"lineNumber":34,"author":{"gitId":"tlyi"},"content":"        return LocalDate.now()","lastModifiedDate":"2021-11-08"},{"lineNumber":35,"author":{"gitId":"tlyi"},"content":"        alt all parameters are valid","lastModifiedDate":"2021-11-08"},{"lineNumber":36,"author":{"gitId":"tlyi"},"content":"            create AddFoodCommand","lastModifiedDate":"2021-11-08"},{"lineNumber":37,"author":{"gitId":"tlyi"},"content":"            AddCommandParser -\u003e AddFoodCommand ++ LOGIC_COLOUR : new AddFoodCommand(\"potato\", 30, LocalDate.now())","lastModifiedDate":"2021-11-08"},{"lineNumber":38,"author":{"gitId":"tlyi"},"content":"            return command","lastModifiedDate":"2021-11-08"},{"lineNumber":39,"author":{"gitId":"tlyi"},"content":"       else else","lastModifiedDate":"2021-11-08"},{"lineNumber":40,"author":{"gitId":"tlyi"},"content":"            create InvalidCommand2","lastModifiedDate":"2021-11-08"},{"lineNumber":41,"author":{"gitId":"tlyi"},"content":"            AddCommandParser -\u003e InvalidCommand2 ++ LOGIC_COLOUR : new InvalidCommand(ParserException.getMessage())","lastModifiedDate":"2021-11-08"},{"lineNumber":42,"author":{"gitId":"tlyi"},"content":"            return command","lastModifiedDate":"2021-11-08"},{"lineNumber":43,"author":{"gitId":"tlyi"},"content":"        end","lastModifiedDate":"2021-11-08"},{"lineNumber":44,"author":{"gitId":"tlyi"},"content":"end","lastModifiedDate":"2021-11-08"},{"lineNumber":45,"author":{"gitId":"tlyi"},"content":"else item type is X","lastModifiedDate":"2021-11-08"},{"lineNumber":46,"author":{"gitId":"tlyi"},"content":"    note over AddCommandParser #WHITE: The process for extracting parameters \\n differ for each X, \\n where X \u003d exercise, recurring exercise, \\n exercise bank, food bank. However, the process is similar, \\n hence they have been omitted for simplicity.","lastModifiedDate":"2021-11-08"},{"lineNumber":47,"author":{"gitId":"tlyi"},"content":"else item type is not known","lastModifiedDate":"2021-11-08"},{"lineNumber":48,"author":{"gitId":"tlyi"},"content":"    create InvalidCommand3","lastModifiedDate":"2021-11-08"},{"lineNumber":49,"author":{"gitId":"tlyi"},"content":"    AddCommandParser -\u003e InvalidCommand3 ++ LOGIC_COLOUR : new InvalidCommand(ParserMessages.MESSAGE_ADD_COMMAND_INVALID_FORMAT)","lastModifiedDate":"2021-11-08"},{"lineNumber":50,"author":{"gitId":"tlyi"},"content":"    return command","lastModifiedDate":"2021-11-08"},{"lineNumber":51,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":52,"author":{"gitId":"tlyi"},"content":"end","lastModifiedDate":"2021-11-08"},{"lineNumber":53,"author":{"gitId":"tlyi"},"content":"return command","lastModifiedDate":"2021-11-08"},{"lineNumber":54,"author":{"gitId":"tlyi"},"content":"return command","lastModifiedDate":"2021-11-08"},{"lineNumber":55,"author":{"gitId":"tlyi"},"content":"@enduml","lastModifiedDate":"2021-11-08"}],"authorContributionMap":{"tlyi":55}},{"path":"docs/diagrams/ParserClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"@startuml","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"tlyi"},"content":"\u0027https://plantuml.com/class-diagram","lastModifiedDate":"2021-10-27"},{"lineNumber":3,"author":{"gitId":"tlyi"},"content":"!include Style.puml","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"tlyi"},"content":"hide empty members","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"tlyi"},"content":"skinparam minclassWidth 120","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"tlyi"},"content":"skinparam Padding 2","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"tlyi"},"content":"class ParserMessages LOGIC_COLOUR","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"tlyi"},"content":"class ParserManager LOGIC_COLOUR","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"tlyi"},"content":"class ParserUtils LOGIC_COLOUR","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"tlyi"},"content":"class XYZCommandParser LOGIC_COLOUR","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"tlyi"},"content":"class XYZCommand LOGIC_COLOUR","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"tlyi"},"content":"abstract class \"{abstract}\\nCommand\" AS Command LOGIC_COLOUR","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"tlyi"},"content":"class Parser \u003c\u003cinterface\u003e\u003e LOGIC_COLOUR","lastModifiedDate":"2021-11-08"},{"lineNumber":15,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"tlyi"},"content":"ParserManager ..\u003e ParserMessages : \u003e uses","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"tlyi"},"content":"ParserManager .down.\u003e XYZCommandParser : \u003e creates","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"tlyi"},"content":"XYZCommandParser ..right|\u003e Parser","lastModifiedDate":"2021-11-07"},{"lineNumber":19,"author":{"gitId":"tlyi"},"content":"XYZCommandParser .up.\u003e ParserMessages : \u003e uses","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":22,"author":{"gitId":"tlyi"},"content":"note as N2 #white","lastModifiedDate":"2021-11-07"},{"lineNumber":23,"author":{"gitId":"tlyi"},"content":"XYZCommand \u003d","lastModifiedDate":"2021-11-07"},{"lineNumber":24,"author":{"gitId":"tlyi"},"content":"AddCommand,","lastModifiedDate":"2021-11-07"},{"lineNumber":25,"author":{"gitId":"tlyi"},"content":"DeleteCommand,","lastModifiedDate":"2021-11-07"},{"lineNumber":26,"author":{"gitId":"tlyi"},"content":"ViewCommand, etc.","lastModifiedDate":"2021-11-07"},{"lineNumber":27,"author":{"gitId":"tlyi"},"content":"end note","lastModifiedDate":"2021-11-07"},{"lineNumber":28,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":29,"author":{"gitId":"tlyi"},"content":"XYZCommandParser .. N2 #transparent","lastModifiedDate":"2021-11-07"},{"lineNumber":30,"author":{"gitId":"tlyi"},"content":"N2 .. XYZCommand #transparent","lastModifiedDate":"2021-11-07"},{"lineNumber":31,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":32,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":33,"author":{"gitId":"tlyi"},"content":"XYZCommandParser .left.\u003e ParserUtils : \u003e uses","lastModifiedDate":"2021-11-07"},{"lineNumber":34,"author":{"gitId":"tlyi"},"content":"XYZCommandParser ...\u003e XYZCommand : \u003e creates and returns","lastModifiedDate":"2021-11-08"},{"lineNumber":35,"author":{"gitId":"tlyi"},"content":"XYZCommand -right[hidden]- XYZCommandParser","lastModifiedDate":"2021-10-27"},{"lineNumber":36,"author":{"gitId":"tlyi"},"content":"ParserManager -down[hidden]-XYZCommandParser","lastModifiedDate":"2021-10-27"},{"lineNumber":37,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":38,"author":{"gitId":"tlyi"},"content":"ParserManager ..\u003e Command :\u003e returns","lastModifiedDate":"2021-10-27"},{"lineNumber":39,"author":{"gitId":"tlyi"},"content":"XYZCommand -|\u003e Command","lastModifiedDate":"2021-11-07"},{"lineNumber":40,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":41,"author":{"gitId":"tlyi"},"content":"note as N1 #white","lastModifiedDate":"2021-11-07"},{"lineNumber":42,"author":{"gitId":"tlyi"},"content":"ParserMessages and ParserUtils","lastModifiedDate":"2021-11-07"},{"lineNumber":43,"author":{"gitId":"tlyi"},"content":"are purely utility classes","lastModifiedDate":"2021-11-07"},{"lineNumber":44,"author":{"gitId":"tlyi"},"content":"and contain static","lastModifiedDate":"2021-11-07"},{"lineNumber":45,"author":{"gitId":"tlyi"},"content":"methods/constants only.","lastModifiedDate":"2021-11-07"},{"lineNumber":46,"author":{"gitId":"tlyi"},"content":"end note","lastModifiedDate":"2021-11-07"},{"lineNumber":47,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":48,"author":{"gitId":"tlyi"},"content":"ParserMessages.. N1 #transparent","lastModifiedDate":"2021-11-07"},{"lineNumber":49,"author":{"gitId":"tlyi"},"content":"N1 .. ParserUtils #transparent","lastModifiedDate":"2021-11-07"},{"lineNumber":50,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":51,"author":{"gitId":"tlyi"},"content":"@enduml","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"tlyi":51}},{"path":"docs/diagrams/ProfileClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"weidak"},"content":"@startuml","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"weidak"},"content":"\u0027https://plantuml.com/class-diagram","lastModifiedDate":"2021-10-27"},{"lineNumber":3,"author":{"gitId":"weidak"},"content":"!include Style.puml","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"weidak"},"content":"hide class fields","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"weidak"},"content":"hide class methods","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"weidak"},"content":"hide interface fields","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"weidak"},"content":"hide interface methods","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":10,"author":{"gitId":"weidak"},"content":"package Profile {","lastModifiedDate":"2021-11-08"},{"lineNumber":11,"author":{"gitId":"weidak"},"content":"    class Profile DATA_COLOUR","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"weidak"},"content":"    package Attributes {","lastModifiedDate":"2021-11-08"},{"lineNumber":13,"author":{"gitId":"weidak"},"content":"        class Name DATA_COLOUR","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"weidak"},"content":"        class Height DATA_COLOUR","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"weidak"},"content":"        class Weight DATA_COLOUR","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"weidak"},"content":"        class Age DATA_COLOUR","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"weidak"},"content":"        class Gender DATA_COLOUR","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"weidak"},"content":"        class CalorieGoal DATA_COLOUR","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"weidak"},"content":"        class ActivityFactor DATA_COLOUR","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":21,"author":{"gitId":"weidak"},"content":"    package Utilities {","lastModifiedDate":"2021-11-08"},{"lineNumber":22,"author":{"gitId":"weidak"},"content":"        class ProfileUtils DATA_COLOUR","lastModifiedDate":"2021-10-31"},{"lineNumber":23,"author":{"gitId":"weidak"},"content":"        class \"\u003c\u003cenumeration\u003e\u003e\\nActivityLevel\" DATA_COLOUR","lastModifiedDate":"2021-10-31"},{"lineNumber":24,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":25,"author":{"gitId":"weidak"},"content":"}","lastModifiedDate":"2021-11-08"},{"lineNumber":26,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":27,"author":{"gitId":"weidak"},"content":"    class DataManager DATA_COLOUR","lastModifiedDate":"2021-11-08"},{"lineNumber":28,"author":{"gitId":"weidak"},"content":"    class \"\u003c\u003cInterface\u003e\u003e\\nVerifiable\" DATA_COLOUR","lastModifiedDate":"2021-10-31"},{"lineNumber":29,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":30,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":31,"author":{"gitId":"weidak"},"content":"\u0027Attributes ..|\u003e \"\u003c\u003cInterface\u003e\u003e\\nVerifiable\"","lastModifiedDate":"2021-11-08"},{"lineNumber":32,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":33,"author":{"gitId":"weidak"},"content":"Profile \"1\" \u003c-right- DataManager : profile","lastModifiedDate":"2021-11-08"},{"lineNumber":34,"author":{"gitId":"weidak"},"content":"Name \"1\" --* Profile : name","lastModifiedDate":"2021-11-08"},{"lineNumber":35,"author":{"gitId":"weidak"},"content":"Profile *-- \"1\" Height : height","lastModifiedDate":"2021-11-07"},{"lineNumber":36,"author":{"gitId":"weidak"},"content":"Profile *-- \"1\" Weight : weight","lastModifiedDate":"2021-11-07"},{"lineNumber":37,"author":{"gitId":"weidak"},"content":"Profile *-- \"1\" Age : age","lastModifiedDate":"2021-11-07"},{"lineNumber":38,"author":{"gitId":"weidak"},"content":"Profile *-- \"1\" Gender : gender","lastModifiedDate":"2021-11-07"},{"lineNumber":39,"author":{"gitId":"weidak"},"content":"Profile *-- \"1\" CalorieGoal : calorieGoal","lastModifiedDate":"2021-11-07"},{"lineNumber":40,"author":{"gitId":"weidak"},"content":"Profile *-- \"1\" ActivityFactor : activityFactor","lastModifiedDate":"2021-11-07"},{"lineNumber":41,"author":{"gitId":"weidak"},"content":"ActivityFactor ..\u003e \"\u003c\u003cenumeration\u003e\u003e\\nActivityLevel\" :\u003e retrieves","lastModifiedDate":"2021-11-08"},{"lineNumber":42,"author":{"gitId":"weidak"},"content":"ProfileUtils ..\u003e \"\u003c\u003cenumeration\u003e\u003e\\nActivityLevel\" :\u003e calculates with","lastModifiedDate":"2021-11-08"},{"lineNumber":43,"author":{"gitId":"weidak"},"content":"Profile \u003c.up. ProfileUtils :\u003c manipulates","lastModifiedDate":"2021-11-07"},{"lineNumber":44,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":45,"author":{"gitId":"weidak"},"content":"\"\u003c\u003cInterface\u003e\u003e\\nVerifiable\" \u003c|.up. Name","lastModifiedDate":"2021-10-27"},{"lineNumber":46,"author":{"gitId":"weidak"},"content":"\"\u003c\u003cInterface\u003e\u003e\\nVerifiable\" \u003c|.up. Height","lastModifiedDate":"2021-10-27"},{"lineNumber":47,"author":{"gitId":"weidak"},"content":"\"\u003c\u003cInterface\u003e\u003e\\nVerifiable\" \u003c|.up. Weight","lastModifiedDate":"2021-10-27"},{"lineNumber":48,"author":{"gitId":"weidak"},"content":"\"\u003c\u003cInterface\u003e\u003e\\nVerifiable\" \u003c|.up. Age","lastModifiedDate":"2021-10-27"},{"lineNumber":49,"author":{"gitId":"weidak"},"content":"\"\u003c\u003cInterface\u003e\u003e\\nVerifiable\" \u003c|.up. Gender","lastModifiedDate":"2021-10-27"},{"lineNumber":50,"author":{"gitId":"weidak"},"content":"\"\u003c\u003cInterface\u003e\u003e\\nVerifiable\" \u003c|.up. CalorieGoal","lastModifiedDate":"2021-10-27"},{"lineNumber":51,"author":{"gitId":"weidak"},"content":"\"\u003c\u003cInterface\u003e\u003e\\nVerifiable\" \u003c|.up. ActivityFactor","lastModifiedDate":"2021-10-27"},{"lineNumber":52,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":53,"author":{"gitId":"weidak"},"content":"@enduml","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"weidak":53}},{"path":"docs/diagrams/ProfileStorageClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"weidak"},"content":"@startuml","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"weidak"},"content":"\u0027https://plantuml.com/class-diagram","lastModifiedDate":"2021-10-27"},{"lineNumber":3,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"weidak"},"content":"!include Style.puml","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"weidak"},"content":"hide class fields","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"weidak"},"content":"hide class methods","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"weidak"},"content":"hide interface fields","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"weidak"},"content":"hide interface methods","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"weidak"},"content":"class ProfileDecoder STORAGE_COLOUR","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"weidak"},"content":"class ProfileStorage STORAGE_COLOUR","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"weidak"},"content":"class \"{abstract}\\nStorage\" STORAGE_COLOUR","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"weidak"},"content":"class ProfileEncoder STORAGE_COLOUR","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"weidak"},"content":"class FileChecker STORAGE_COLOUR","lastModifiedDate":"2021-10-31"},{"lineNumber":15,"author":{"gitId":"weidak"},"content":"class FileSaver STORAGE_COLOUR","lastModifiedDate":"2021-10-31"},{"lineNumber":16,"author":{"gitId":"weidak"},"content":"interface \"\u003c\u003cinterface\u003e\u003e\\nProfileStorageInterface\" STORAGE_COLOUR","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"weidak"},"content":"ProfileStorage \u003c.up.. \" \"","lastModifiedDate":"2021-11-07"},{"lineNumber":19,"author":{"gitId":"weidak"},"content":"\"{abstract}\\nStorage\" \u003c|-down- ProfileStorage","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"weidak"},"content":"\"\u003c\u003cinterface\u003e\u003e\\nProfileStorageInterface\" \u003c|.left. ProfileStorage","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"weidak"},"content":"ProfileDecoder \u003c.up. ProfileStorage :\u003c decodes","lastModifiedDate":"2021-11-07"},{"lineNumber":22,"author":{"gitId":"weidak"},"content":"ProfileEncoder \u003c.up. ProfileStorage :\u003c encodes","lastModifiedDate":"2021-11-07"},{"lineNumber":23,"author":{"gitId":"weidak"},"content":"ProfileStorage .down.\u003e FileChecker :\u003e checks for file","lastModifiedDate":"2021-11-07"},{"lineNumber":24,"author":{"gitId":"weidak"},"content":"ProfileStorage .left.\u003e FileSaver :\u003e saves","lastModifiedDate":"2021-11-07"},{"lineNumber":25,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"weidak"},"content":"@enduml","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"weidak":26}},{"path":"docs/diagrams/RetrieveDataFromStorage.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"weidak"},"content":"@startuml","lastModifiedDate":"2021-10-31"},{"lineNumber":2,"author":{"gitId":"weidak"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2021-10-31"},{"lineNumber":3,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":4,"author":{"gitId":"weidak"},"content":"!include style.puml","lastModifiedDate":"2021-10-31"},{"lineNumber":5,"author":{"gitId":"weidak"},"content":"hide footbox","lastModifiedDate":"2021-10-31"},{"lineNumber":6,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":7,"author":{"gitId":"weidak"},"content":"group sd Retrieval of data from storage with the use of ProfileDecoder to decode","lastModifiedDate":"2021-11-08"},{"lineNumber":8,"author":{"gitId":"weidak"},"content":"participant \"profileStorage:ProfileStorage\" As ProfileStorage STORAGE_COLOUR","lastModifiedDate":"2021-10-31"},{"lineNumber":9,"author":{"gitId":"weidak"},"content":"participant \":ProfileDecoder\" As ProfileDecoder STORAGE_COLOUR","lastModifiedDate":"2021-10-31"},{"lineNumber":10,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":11,"author":{"gitId":"weidak"},"content":"participant \"file:File\" As File STORAGE_COLOUR","lastModifiedDate":"2021-10-31"},{"lineNumber":12,"author":{"gitId":"weidak"},"content":"participant \"in:Scanner\" As Scanner STORAGE_COLOUR","lastModifiedDate":"2021-10-31"},{"lineNumber":13,"author":{"gitId":"weidak"},"content":"participant \"profile:Profile\" As Profile DATA_COLOUR","lastModifiedDate":"2021-10-31"},{"lineNumber":14,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":15,"author":{"gitId":"weidak"},"content":"activate ProfileStorage STORAGE_COLOUR","lastModifiedDate":"2021-11-08"},{"lineNumber":16,"author":{"gitId":"weidak"},"content":"ProfileStorage -\u003e ProfileDecoder: retrieveProfileFromData(filePath)","lastModifiedDate":"2021-10-31"},{"lineNumber":17,"author":{"gitId":"weidak"},"content":"activate ProfileDecoder STORAGE_COLOUR","lastModifiedDate":"2021-10-31"},{"lineNumber":18,"author":{"gitId":"weidak"},"content":"    ProfileDecoder -\u003e File **: new File(filePath)","lastModifiedDate":"2021-10-31"},{"lineNumber":19,"author":{"gitId":"weidak"},"content":"    activate File STORAGE_COLOUR","lastModifiedDate":"2021-10-31"},{"lineNumber":20,"author":{"gitId":"weidak"},"content":"        File --\u003e ProfileDecoder: file","lastModifiedDate":"2021-10-31"},{"lineNumber":21,"author":{"gitId":"weidak"},"content":"    deactivate","lastModifiedDate":"2021-10-31"},{"lineNumber":22,"author":{"gitId":"weidak"},"content":"    ProfileDecoder -\u003e Scanner ** : new Scanner(file)","lastModifiedDate":"2021-10-31"},{"lineNumber":23,"author":{"gitId":"weidak"},"content":"    activate Scanner STORAGE_COLOUR","lastModifiedDate":"2021-10-31"},{"lineNumber":24,"author":{"gitId":"weidak"},"content":"        Scanner --\u003e ProfileDecoder:","lastModifiedDate":"2021-10-31"},{"lineNumber":25,"author":{"gitId":"weidak"},"content":"    deactivate","lastModifiedDate":"2021-10-31"},{"lineNumber":26,"author":{"gitId":"weidak"},"content":"        ProfileDecoder -\u003e Scanner : nextLine()","lastModifiedDate":"2021-10-31"},{"lineNumber":27,"author":{"gitId":"weidak"},"content":"        activate Scanner STORAGE_COLOUR","lastModifiedDate":"2021-10-31"},{"lineNumber":28,"author":{"gitId":"weidak"},"content":"            Scanner --\u003e ProfileDecoder: line","lastModifiedDate":"2021-10-31"},{"lineNumber":29,"author":{"gitId":"weidak"},"content":"        deactivate","lastModifiedDate":"2021-10-31"},{"lineNumber":30,"author":{"gitId":"weidak"},"content":"        ProfileDecoder -\u003e ProfileDecoder ++ STORAGE_COLOUR: decodeProfile(line)","lastModifiedDate":"2021-11-05"},{"lineNumber":31,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":32,"author":{"gitId":"weidak"},"content":"        ref over ProfileDecoder","lastModifiedDate":"2021-11-05"},{"lineNumber":33,"author":{"gitId":"weidak"},"content":"        Decode all the attributes","lastModifiedDate":"2021-11-08"},{"lineNumber":34,"author":{"gitId":"weidak"},"content":"        end ref","lastModifiedDate":"2021-11-05"},{"lineNumber":35,"author":{"gitId":"weidak"},"content":"        ProfileDecoder -\u003e Profile ** : new Profile(name, height, ...)","lastModifiedDate":"2021-11-08"},{"lineNumber":36,"author":{"gitId":"weidak"},"content":"        activate Profile DATA_COLOUR","lastModifiedDate":"2021-10-31"},{"lineNumber":37,"author":{"gitId":"weidak"},"content":"            Profile --\u003e ProfileDecoder :","lastModifiedDate":"2021-10-31"},{"lineNumber":38,"author":{"gitId":"weidak"},"content":"        deactivate","lastModifiedDate":"2021-10-31"},{"lineNumber":39,"author":{"gitId":"weidak"},"content":"        ProfileDecoder --\u003e ProfileDecoder -- : profile","lastModifiedDate":"2021-10-31"},{"lineNumber":40,"author":{"gitId":"weidak"},"content":"        destroy Profile","lastModifiedDate":"2021-10-31"},{"lineNumber":41,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":42,"author":{"gitId":"weidak"},"content":"    destroy Scanner","lastModifiedDate":"2021-10-31"},{"lineNumber":43,"author":{"gitId":"weidak"},"content":"    destroy File","lastModifiedDate":"2021-10-31"},{"lineNumber":44,"author":{"gitId":"weidak"},"content":"    ProfileDecoder --\u003e ProfileStorage : profile","lastModifiedDate":"2021-10-31"},{"lineNumber":45,"author":{"gitId":"weidak"},"content":"deactivate","lastModifiedDate":"2021-10-31"},{"lineNumber":46,"author":{"gitId":"weidak"},"content":"end","lastModifiedDate":"2021-11-08"},{"lineNumber":47,"author":{"gitId":"weidak"},"content":"@enduml","lastModifiedDate":"2021-10-31"}],"authorContributionMap":{"weidak":47}},{"path":"docs/diagrams/StartState.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"tttyyzzz"},"content":"@startuml","lastModifiedDate":"2021-11-05"},{"lineNumber":2,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":3,"author":{"gitId":"tttyyzzz"},"content":"!include Style.puml","lastModifiedDate":"2021-11-05"},{"lineNumber":4,"author":{"gitId":"tttyyzzz"},"content":"hide circle","lastModifiedDate":"2021-11-05"},{"lineNumber":5,"author":{"gitId":"tttyyzzz"},"content":"hide empty members","lastModifiedDate":"2021-11-05"},{"lineNumber":6,"author":{"gitId":"tttyyzzz"},"content":"skinparam minclassWidth 120","lastModifiedDate":"2021-11-05"},{"lineNumber":7,"author":{"gitId":"tttyyzzz"},"content":"skinparam Padding 5","lastModifiedDate":"2021-11-05"},{"lineNumber":8,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":9,"author":{"gitId":"tttyyzzz"},"content":"class AttributeCreator MAIN_COLOUR","lastModifiedDate":"2021-11-05"},{"lineNumber":10,"author":{"gitId":"tttyyzzz"},"content":"class NameCreator MAIN_COLOUR","lastModifiedDate":"2021-11-05"},{"lineNumber":11,"author":{"gitId":"tttyyzzz"},"content":"class HeightCreator MAIN_COLOUR","lastModifiedDate":"2021-11-05"},{"lineNumber":12,"author":{"gitId":"tttyyzzz"},"content":"class WeightCreator MAIN_COLOUR","lastModifiedDate":"2021-11-05"},{"lineNumber":13,"author":{"gitId":"tttyyzzz"},"content":"class GenderCreator MAIN_COLOUR","lastModifiedDate":"2021-11-05"},{"lineNumber":14,"author":{"gitId":"tttyyzzz"},"content":"class AgeCreator MAIN_COLOUR","lastModifiedDate":"2021-11-05"},{"lineNumber":15,"author":{"gitId":"tttyyzzz"},"content":"class CalorieGoalCreator MAIN_COLOUR","lastModifiedDate":"2021-11-05"},{"lineNumber":16,"author":{"gitId":"tttyyzzz"},"content":"class ActivityFactorCreator MAIN_COLOUR","lastModifiedDate":"2021-11-05"},{"lineNumber":17,"author":{"gitId":"tttyyzzz"},"content":"class StartState MAIN_COLOUR","lastModifiedDate":"2021-11-05"},{"lineNumber":18,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":19,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":20,"author":{"gitId":"tttyyzzz"},"content":"StartState ..\u003e NameCreator : \u003e executes","lastModifiedDate":"2021-11-05"},{"lineNumber":21,"author":{"gitId":"tttyyzzz"},"content":"StartState ..\u003e HeightCreator : \u003e executes","lastModifiedDate":"2021-11-05"},{"lineNumber":22,"author":{"gitId":"tttyyzzz"},"content":"StartState ..\u003e WeightCreator : \u003e executes","lastModifiedDate":"2021-11-05"},{"lineNumber":23,"author":{"gitId":"tttyyzzz"},"content":"StartState ..\u003e GenderCreator : \u003e executes","lastModifiedDate":"2021-11-05"},{"lineNumber":24,"author":{"gitId":"tttyyzzz"},"content":"StartState ..\u003e AgeCreator : \u003e executes","lastModifiedDate":"2021-11-05"},{"lineNumber":25,"author":{"gitId":"tttyyzzz"},"content":"StartState ..\u003e CalorieGoalCreator : \u003e executes","lastModifiedDate":"2021-11-05"},{"lineNumber":26,"author":{"gitId":"tttyyzzz"},"content":"StartState ..\u003e ActivityFactorCreator : \u003e executes","lastModifiedDate":"2021-11-05"},{"lineNumber":27,"author":{"gitId":"tttyyzzz"},"content":"NameCreator --|\u003e AttributeCreator","lastModifiedDate":"2021-11-05"},{"lineNumber":28,"author":{"gitId":"tttyyzzz"},"content":"HeightCreator --|\u003e AttributeCreator","lastModifiedDate":"2021-11-05"},{"lineNumber":29,"author":{"gitId":"tttyyzzz"},"content":"WeightCreator --|\u003e AttributeCreator","lastModifiedDate":"2021-11-05"},{"lineNumber":30,"author":{"gitId":"tttyyzzz"},"content":"GenderCreator --|\u003e AttributeCreator","lastModifiedDate":"2021-11-05"},{"lineNumber":31,"author":{"gitId":"tttyyzzz"},"content":"AgeCreator --|\u003e AttributeCreator","lastModifiedDate":"2021-11-05"},{"lineNumber":32,"author":{"gitId":"tttyyzzz"},"content":"CalorieGoalCreator --|\u003e AttributeCreator","lastModifiedDate":"2021-11-05"},{"lineNumber":33,"author":{"gitId":"tttyyzzz"},"content":"ActivityFactorCreator --|\u003e AttributeCreator","lastModifiedDate":"2021-11-05"},{"lineNumber":34,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":35,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":36,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":37,"author":{"gitId":"tttyyzzz"},"content":"@enduml","lastModifiedDate":"2021-11-05"}],"authorContributionMap":{"tttyyzzz":37}},{"path":"docs/diagrams/StorageClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"weidak"},"content":"@startuml","lastModifiedDate":"2021-11-07"},{"lineNumber":2,"author":{"gitId":"weidak"},"content":"\u0027https://plantuml.com/class-diagram","lastModifiedDate":"2021-11-07"},{"lineNumber":3,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":4,"author":{"gitId":"weidak"},"content":"!include Style.puml","lastModifiedDate":"2021-11-07"},{"lineNumber":5,"author":{"gitId":"weidak"},"content":"hide class fields","lastModifiedDate":"2021-11-07"},{"lineNumber":6,"author":{"gitId":"weidak"},"content":"hide class methods","lastModifiedDate":"2021-11-07"},{"lineNumber":7,"author":{"gitId":"weidak"},"content":"hide interface fields","lastModifiedDate":"2021-11-07"},{"lineNumber":8,"author":{"gitId":"weidak"},"content":"hide interface methods","lastModifiedDate":"2021-11-07"},{"lineNumber":9,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":10,"author":{"gitId":"weidak"},"content":"package Storage {","lastModifiedDate":"2021-11-08"},{"lineNumber":11,"author":{"gitId":"weidak"},"content":"class XYZDecoder STORAGE_COLOUR","lastModifiedDate":"2021-11-07"},{"lineNumber":12,"author":{"gitId":"weidak"},"content":"class XYZEncoder STORAGE_COLOUR","lastModifiedDate":"2021-11-07"},{"lineNumber":13,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":14,"author":{"gitId":"weidak"},"content":"class FileChecker STORAGE_COLOUR","lastModifiedDate":"2021-11-07"},{"lineNumber":15,"author":{"gitId":"weidak"},"content":"class FileSaver STORAGE_COLOUR","lastModifiedDate":"2021-11-07"},{"lineNumber":16,"author":{"gitId":"weidak"},"content":"class StorageManager STORAGE_COLOUR","lastModifiedDate":"2021-11-07"},{"lineNumber":17,"author":{"gitId":"weidak"},"content":"class XYZStorageUtils STORAGE_COLOUR","lastModifiedDate":"2021-11-07"},{"lineNumber":18,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":19,"author":{"gitId":"weidak"},"content":"class \"\u003c\u003cinterface\u003e\u003e\\nXYZStorage\" STORAGE_COLOUR","lastModifiedDate":"2021-11-07"},{"lineNumber":20,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":21,"author":{"gitId":"weidak"},"content":"class \"\u003c\u003cinterface\u003e\u003e\\nStorage\" STORAGE_COLOUR","lastModifiedDate":"2021-11-07"},{"lineNumber":22,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":23,"author":{"gitId":"weidak"},"content":"}","lastModifiedDate":"2021-11-08"},{"lineNumber":24,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":25,"author":{"gitId":"weidak"},"content":"package Data {","lastModifiedDate":"2021-11-08"},{"lineNumber":26,"author":{"gitId":"weidak"},"content":"}","lastModifiedDate":"2021-11-08"},{"lineNumber":27,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":28,"author":{"gitId":"weidak"},"content":"package Logic {","lastModifiedDate":"2021-11-08"},{"lineNumber":29,"author":{"gitId":"weidak"},"content":"}","lastModifiedDate":"2021-11-08"},{"lineNumber":30,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":31,"author":{"gitId":"weidak"},"content":"Data \u003c.. \"StorageManager\"","lastModifiedDate":"2021-11-08"},{"lineNumber":32,"author":{"gitId":"weidak"},"content":"Logic --\u003e \"StorageManager\"","lastModifiedDate":"2021-11-08"},{"lineNumber":33,"author":{"gitId":"weidak"},"content":"Logic -left-\u003e Data","lastModifiedDate":"2021-11-08"},{"lineNumber":34,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":35,"author":{"gitId":"weidak"},"content":"\"\u003c\u003cinterface\u003e\u003e\\nXYZStorage\" \u003c|-left- \"\u003c\u003cinterface\u003e\u003e\\nStorage\"","lastModifiedDate":"2021-11-08"},{"lineNumber":36,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":37,"author":{"gitId":"weidak"},"content":"StorageManager .left.|\u003e \"\u003c\u003cinterface\u003e\u003e\\nStorage\"","lastModifiedDate":"2021-11-08"},{"lineNumber":38,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":39,"author":{"gitId":"weidak"},"content":"\"\u003c\u003cinterface\u003e\u003e\\nXYZStorage\" \u003c|.. XYZStorageUtils","lastModifiedDate":"2021-11-07"},{"lineNumber":40,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":41,"author":{"gitId":"weidak"},"content":"StorageManager --\u003e \"1\" \"\u003c\u003cinterface\u003e\u003e\\nXYZStorage\"","lastModifiedDate":"2021-11-07"},{"lineNumber":42,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":43,"author":{"gitId":"weidak"},"content":"XYZDecoder \u003c.up. XYZStorageUtils :\u003c decodes","lastModifiedDate":"2021-11-07"},{"lineNumber":44,"author":{"gitId":"weidak"},"content":"XYZEncoder \u003c.up. XYZStorageUtils :\u003c encodes","lastModifiedDate":"2021-11-07"},{"lineNumber":45,"author":{"gitId":"weidak"},"content":"XYZStorageUtils .right.\u003e FileChecker :\u003e checks for file","lastModifiedDate":"2021-11-07"},{"lineNumber":46,"author":{"gitId":"weidak"},"content":"XYZStorageUtils .left.\u003e FileSaver :\u003e saves","lastModifiedDate":"2021-11-07"},{"lineNumber":47,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":48,"author":{"gitId":"weidak"},"content":"@enduml","lastModifiedDate":"2021-11-07"}],"authorContributionMap":{"weidak":48}},{"path":"docs/diagrams/StorageManagerClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"weidak"},"content":"@startuml","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"weidak"},"content":"\u0027https://plantuml.com/class-diagram","lastModifiedDate":"2021-10-27"},{"lineNumber":3,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"weidak"},"content":"!include Style.puml","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"weidak"},"content":"hide class fields","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"weidak"},"content":"hide class methods","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"weidak"},"content":"hide interface fields","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"weidak"},"content":"hide interface methods","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"weidak"},"content":"class StorageManager STORAGE_COLOUR","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"weidak"},"content":"class ProfileStorageUtils STORAGE_COLOUR","lastModifiedDate":"2021-11-07"},{"lineNumber":12,"author":{"gitId":"weidak"},"content":"class FoodBankStorageUtils STORAGE_COLOUR","lastModifiedDate":"2021-11-07"},{"lineNumber":13,"author":{"gitId":"weidak"},"content":"class FoodListStorageUtils STORAGE_COLOUR","lastModifiedDate":"2021-11-07"},{"lineNumber":14,"author":{"gitId":"weidak"},"content":"class ExerciseListStorageUtils STORAGE_COLOUR","lastModifiedDate":"2021-11-07"},{"lineNumber":15,"author":{"gitId":"weidak"},"content":"class FutureExerciseListStorageUtils STORAGE_COLOUR","lastModifiedDate":"2021-11-07"},{"lineNumber":16,"author":{"gitId":"weidak"},"content":"class ExerciseBankStorageUtils STORAGE_COLOUR","lastModifiedDate":"2021-11-07"},{"lineNumber":17,"author":{"gitId":"weidak"},"content":"class \"\u003c\u003cinterface\u003e\u003e\\nProfileStorage\" STORAGE_COLOUR","lastModifiedDate":"2021-11-07"},{"lineNumber":18,"author":{"gitId":"weidak"},"content":"class \"\u003c\u003cinterface\u003e\u003e\\nFoodBankStorage\" STORAGE_COLOUR","lastModifiedDate":"2021-11-07"},{"lineNumber":19,"author":{"gitId":"weidak"},"content":"class \"\u003c\u003cinterface\u003e\u003e\\nExerciseBankStorage\" STORAGE_COLOUR","lastModifiedDate":"2021-11-07"},{"lineNumber":20,"author":{"gitId":"weidak"},"content":"class \"\u003c\u003cinterface\u003e\u003e\\nFoodListStorage\" STORAGE_COLOUR","lastModifiedDate":"2021-11-07"},{"lineNumber":21,"author":{"gitId":"weidak"},"content":"class \"\u003c\u003cinterface\u003e\u003e\\nExerciseListStorage\" STORAGE_COLOUR","lastModifiedDate":"2021-11-07"},{"lineNumber":22,"author":{"gitId":"weidak"},"content":"class \"\u003c\u003cinterface\u003e\u003e\\nUpcomingStorage\" STORAGE_COLOUR","lastModifiedDate":"2021-11-07"},{"lineNumber":23,"author":{"gitId":"weidak"},"content":"class \"\u003c\u003cinterface\u003e\u003e\\nStorage\" STORAGE_COLOUR","lastModifiedDate":"2021-11-07"},{"lineNumber":24,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":25,"author":{"gitId":"weidak"},"content":"\"\u003c\u003cinterface\u003e\u003e\\nProfileStorage\" \u003c|-- \"\u003c\u003cinterface\u003e\u003e\\nStorage\"","lastModifiedDate":"2021-11-07"},{"lineNumber":26,"author":{"gitId":"weidak"},"content":"\"\u003c\u003cinterface\u003e\u003e\\nFoodBankStorage\" \u003c|-- \"\u003c\u003cinterface\u003e\u003e\\nStorage\"","lastModifiedDate":"2021-11-07"},{"lineNumber":27,"author":{"gitId":"weidak"},"content":"\"\u003c\u003cinterface\u003e\u003e\\nExerciseBankStorage\" \u003c|-- \"\u003c\u003cinterface\u003e\u003e\\nStorage\"","lastModifiedDate":"2021-11-07"},{"lineNumber":28,"author":{"gitId":"weidak"},"content":"\"\u003c\u003cinterface\u003e\u003e\\nFoodListStorage\" \u003c|-- \"\u003c\u003cinterface\u003e\u003e\\nStorage\"","lastModifiedDate":"2021-11-07"},{"lineNumber":29,"author":{"gitId":"weidak"},"content":"\"\u003c\u003cinterface\u003e\u003e\\nExerciseListStorage\" \u003c|-- \"\u003c\u003cinterface\u003e\u003e\\nStorage\"","lastModifiedDate":"2021-11-07"},{"lineNumber":30,"author":{"gitId":"weidak"},"content":"\"\u003c\u003cinterface\u003e\u003e\\nUpcomingStorage\" \u003c|-- \"\u003c\u003cinterface\u003e\u003e\\nStorage\"","lastModifiedDate":"2021-11-07"},{"lineNumber":31,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"weidak"},"content":"StorageManager \u003c|.up. \"\u003c\u003cinterface\u003e\u003e\\nStorage\"","lastModifiedDate":"2021-11-07"},{"lineNumber":33,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":34,"author":{"gitId":"weidak"},"content":"\"\u003c\u003cinterface\u003e\u003e\\nProfileStorage\" \u003c|.. ProfileStorageUtils","lastModifiedDate":"2021-11-07"},{"lineNumber":35,"author":{"gitId":"weidak"},"content":"\"\u003c\u003cinterface\u003e\u003e\\nFoodBankStorage\" \u003c|.. FoodBankStorageUtils","lastModifiedDate":"2021-11-07"},{"lineNumber":36,"author":{"gitId":"weidak"},"content":"\"\u003c\u003cinterface\u003e\u003e\\nExerciseBankStorage\" \u003c|.. ExerciseBankStorageUtils","lastModifiedDate":"2021-11-07"},{"lineNumber":37,"author":{"gitId":"weidak"},"content":"\"\u003c\u003cinterface\u003e\u003e\\nFoodListStorage\" \u003c|.. FoodListStorageUtils","lastModifiedDate":"2021-11-07"},{"lineNumber":38,"author":{"gitId":"weidak"},"content":"\"\u003c\u003cinterface\u003e\u003e\\nExerciseListStorage\" \u003c|.. ExerciseListStorageUtils","lastModifiedDate":"2021-11-07"},{"lineNumber":39,"author":{"gitId":"weidak"},"content":"\"\u003c\u003cinterface\u003e\u003e\\nUpcomingStorage\" \u003c|.. FutureExerciseListStorageUtils","lastModifiedDate":"2021-11-07"},{"lineNumber":40,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":41,"author":{"gitId":"weidak"},"content":"StorageManager --\u003e \"1\" \"\u003c\u003cinterface\u003e\u003e\\nProfileStorage\"","lastModifiedDate":"2021-11-07"},{"lineNumber":42,"author":{"gitId":"weidak"},"content":"StorageManager --\u003e \"1\" \"\u003c\u003cinterface\u003e\u003e\\nFoodBankStorage\"","lastModifiedDate":"2021-11-07"},{"lineNumber":43,"author":{"gitId":"weidak"},"content":"StorageManager --\u003e \"1\" \"\u003c\u003cinterface\u003e\u003e\\nExerciseBankStorage\"","lastModifiedDate":"2021-11-07"},{"lineNumber":44,"author":{"gitId":"weidak"},"content":"StorageManager --\u003e \"1\" \"\u003c\u003cinterface\u003e\u003e\\nFoodListStorage\"","lastModifiedDate":"2021-11-07"},{"lineNumber":45,"author":{"gitId":"weidak"},"content":"StorageManager --\u003e \"1\" \"\u003c\u003cinterface\u003e\u003e\\nExerciseListStorage\"","lastModifiedDate":"2021-11-07"},{"lineNumber":46,"author":{"gitId":"weidak"},"content":"StorageManager --\u003e \"1\" \"\u003c\u003cinterface\u003e\u003e\\nUpcomingStorage\"","lastModifiedDate":"2021-11-07"},{"lineNumber":47,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":48,"author":{"gitId":"weidak"},"content":"@enduml","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"weidak":48}},{"path":"docs/diagrams/StorageManagerLoadSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"weidak"},"content":"@startuml","lastModifiedDate":"2021-10-31"},{"lineNumber":2,"author":{"gitId":"weidak"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2021-10-31"},{"lineNumber":3,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":4,"author":{"gitId":"weidak"},"content":"!include style.puml","lastModifiedDate":"2021-10-31"},{"lineNumber":5,"author":{"gitId":"weidak"},"content":"hide footbox","lastModifiedDate":"2021-10-31"},{"lineNumber":6,"author":{"gitId":"weidak"},"content":"skinparam ParticipantPadding 1","lastModifiedDate":"2021-11-07"},{"lineNumber":7,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":8,"author":{"gitId":"weidak"},"content":"participant \":Main\" As Main MAIN_COLOUR","lastModifiedDate":"2021-10-31"},{"lineNumber":9,"author":{"gitId":"weidak"},"content":"participant \"storage:StorageManager\" As StorageManager STORAGE_COLOUR","lastModifiedDate":"2021-10-31"},{"lineNumber":10,"author":{"gitId":"weidak"},"content":"participant \"profileStorage:ProfileStorage\" As ProfileStorage STORAGE_COLOUR","lastModifiedDate":"2021-10-31"},{"lineNumber":11,"author":{"gitId":"weidak"},"content":"participant Profile DATA_COLOUR","lastModifiedDate":"2021-11-08"},{"lineNumber":12,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":13,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":14,"author":{"gitId":"weidak"},"content":"activate Main MAIN_COLOUR","lastModifiedDate":"2021-11-08"},{"lineNumber":15,"author":{"gitId":"weidak"},"content":"create \"storage:StorageManager\" As StorageManager STORAGE_COLOUR","lastModifiedDate":"2021-10-31"},{"lineNumber":16,"author":{"gitId":"weidak"},"content":"Main -\u003e StorageManager **: new StorageManager()","lastModifiedDate":"2021-10-31"},{"lineNumber":17,"author":{"gitId":"weidak"},"content":"activate StorageManager STORAGE_COLOUR","lastModifiedDate":"2021-10-31"},{"lineNumber":18,"author":{"gitId":"weidak"},"content":"    create \"profileStorage:ProfileStorage\" As ProfileStorage STORAGE_COLOUR","lastModifiedDate":"2021-10-31"},{"lineNumber":19,"author":{"gitId":"weidak"},"content":"    StorageManager -\u003e ProfileStorage ** : new ProfileStorage(filePath)","lastModifiedDate":"2021-10-31"},{"lineNumber":20,"author":{"gitId":"weidak"},"content":"        activate ProfileStorage STORAGE_COLOUR","lastModifiedDate":"2021-10-31"},{"lineNumber":21,"author":{"gitId":"weidak"},"content":"        ProfileStorage --\u003e StorageManager : profileStorage","lastModifiedDate":"2021-10-31"},{"lineNumber":22,"author":{"gitId":"weidak"},"content":"        deactivate","lastModifiedDate":"2021-10-31"},{"lineNumber":23,"author":{"gitId":"weidak"},"content":"    StorageManager --\u003e Main : storage","lastModifiedDate":"2021-10-31"},{"lineNumber":24,"author":{"gitId":"weidak"},"content":"deactivate","lastModifiedDate":"2021-10-31"},{"lineNumber":25,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":26,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":27,"author":{"gitId":"weidak"},"content":"Main -\u003e StorageManager: loadAll()","lastModifiedDate":"2021-10-31"},{"lineNumber":28,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":29,"author":{"gitId":"weidak"},"content":"activate StorageManager STORAGE_COLOUR","lastModifiedDate":"2021-10-31"},{"lineNumber":30,"author":{"gitId":"weidak"},"content":"    alt no errors thrown","lastModifiedDate":"2021-11-08"},{"lineNumber":31,"author":{"gitId":"weidak"},"content":"    StorageManager -\u003e StorageManager ++ STORAGE_COLOUR : loadProfile()","lastModifiedDate":"2021-11-07"},{"lineNumber":32,"author":{"gitId":"weidak"},"content":"    StorageManager -\u003e ProfileStorage : loadProfile()","lastModifiedDate":"2021-10-31"},{"lineNumber":33,"author":{"gitId":"weidak"},"content":"    activate ProfileStorage STORAGE_COLOUR","lastModifiedDate":"2021-10-31"},{"lineNumber":34,"author":{"gitId":"weidak"},"content":"        participant \":FileChecker\" As FileChecker STORAGE_COLOUR","lastModifiedDate":"2021-10-31"},{"lineNumber":35,"author":{"gitId":"weidak"},"content":"        participant \":ProfileDecoder\" As ProfileDecoder STORAGE_COLOUR","lastModifiedDate":"2021-10-31"},{"lineNumber":36,"author":{"gitId":"weidak"},"content":"        ref over ProfileStorage, FileChecker","lastModifiedDate":"2021-10-31"},{"lineNumber":37,"author":{"gitId":"weidak"},"content":"            Checks for the file and create directory if it does not exist","lastModifiedDate":"2021-10-31"},{"lineNumber":38,"author":{"gitId":"weidak"},"content":"        end ref","lastModifiedDate":"2021-10-31"},{"lineNumber":39,"author":{"gitId":"weidak"},"content":"        ref over ProfileStorage, ProfileDecoder","lastModifiedDate":"2021-10-31"},{"lineNumber":40,"author":{"gitId":"weidak"},"content":"            Retrieval of data from storage with the use of ProfileDecoder to decode","lastModifiedDate":"2021-10-31"},{"lineNumber":41,"author":{"gitId":"weidak"},"content":"        end ref","lastModifiedDate":"2021-10-31"},{"lineNumber":42,"author":{"gitId":"weidak"},"content":"        ProfileStorage --\u003e StorageManager:profile","lastModifiedDate":"2021-10-31"},{"lineNumber":43,"author":{"gitId":"weidak"},"content":"    deactivate","lastModifiedDate":"2021-10-31"},{"lineNumber":44,"author":{"gitId":"weidak"},"content":"    StorageManager --\u003e StorageManager -- :profile","lastModifiedDate":"2021-11-07"},{"lineNumber":45,"author":{"gitId":"weidak"},"content":"    else UnableToReadFileException","lastModifiedDate":"2021-11-08"},{"lineNumber":46,"author":{"gitId":"weidak"},"content":"        StorageManager -\u003e Profile **: new Profile()","lastModifiedDate":"2021-11-08"},{"lineNumber":47,"author":{"gitId":"weidak"},"content":"        activate Profile DATA_COLOUR","lastModifiedDate":"2021-11-08"},{"lineNumber":48,"author":{"gitId":"weidak"},"content":"            Profile --\u003e StorageManager --","lastModifiedDate":"2021-11-08"},{"lineNumber":49,"author":{"gitId":"weidak"},"content":"        destroy Profile","lastModifiedDate":"2021-11-08"},{"lineNumber":50,"author":{"gitId":"weidak"},"content":"    end","lastModifiedDate":"2021-11-08"},{"lineNumber":51,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":52,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":53,"author":{"gitId":"weidak"},"content":"    StorageManager --\u003e Main: data","lastModifiedDate":"2021-10-31"},{"lineNumber":54,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":55,"author":{"gitId":"weidak"},"content":"deactivate","lastModifiedDate":"2021-10-31"},{"lineNumber":56,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":57,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":58,"author":{"gitId":"weidak"},"content":"@enduml","lastModifiedDate":"2021-10-31"}],"authorContributionMap":{"weidak":58}},{"path":"docs/diagrams/Style.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"@startuml","lastModifiedDate":"2021-10-22"},{"lineNumber":2,"author":{"gitId":"tlyi"},"content":"\u0027COLOURS","lastModifiedDate":"2021-10-22"},{"lineNumber":3,"author":{"gitId":"tlyi"},"content":"!define BLACK #2F3030","lastModifiedDate":"2021-10-22"},{"lineNumber":4,"author":{"gitId":"tlyi"},"content":"!define UI_COLOUR #FFCCFF","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"tlyi"},"content":"!define UI_FADED_COLOUR #FFE6F3","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"tlyi"},"content":"!define MAIN_COLOUR #EA6B66","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"tlyi"},"content":"!define MAIN_FADED_COLOUR #F1C3BE","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"tlyi"},"content":"!define LOGIC_COLOUR #FFFF66","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"tlyi"},"content":"!define LOGIC_FADED_COLOUR #FFF7C4","lastModifiedDate":"2021-10-22"},{"lineNumber":10,"author":{"gitId":"tlyi"},"content":"!define DATA_COLOUR #99FFFF","lastModifiedDate":"2021-10-22"},{"lineNumber":11,"author":{"gitId":"tlyi"},"content":"!define DATA_FADED_COLOUR #DAE8FC","lastModifiedDate":"2021-10-22"},{"lineNumber":12,"author":{"gitId":"tlyi"},"content":"!define STORAGE_COLOUR #D5E8D4","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"tlyi"},"content":"!define STORAGE_FADED_COLOUR #E1F7E7","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"tlyi"},"content":"!define STATE_COLOUR #40ff49","lastModifiedDate":"2021-11-07"},{"lineNumber":15,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":16,"author":{"gitId":"tlyi"},"content":"hide circle","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"tlyi"},"content":"hide footbox","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":19,"author":{"gitId":"tlyi"},"content":"skinparam Shadowing false","lastModifiedDate":"2021-10-22"},{"lineNumber":20,"author":{"gitId":"tlyi"},"content":"skinparam class {","lastModifiedDate":"2021-10-22"},{"lineNumber":21,"author":{"gitId":"tlyi"},"content":"    BorderColor BLACK","lastModifiedDate":"2021-10-22"},{"lineNumber":22,"author":{"gitId":"tlyi"},"content":"    BorderThickness 1","lastModifiedDate":"2021-10-22"},{"lineNumber":23,"author":{"gitId":"tlyi"},"content":"    AttributeIconSize 0","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"tlyi"},"content":"}","lastModifiedDate":"2021-10-22"},{"lineNumber":25,"author":{"gitId":"tlyi"},"content":"skinparam participant {","lastModifiedDate":"2021-10-22"},{"lineNumber":26,"author":{"gitId":"tlyi"},"content":"    BorderColor BLACK","lastModifiedDate":"2021-10-22"},{"lineNumber":27,"author":{"gitId":"tlyi"},"content":"    BorderThickness 1","lastModifiedDate":"2021-10-22"},{"lineNumber":28,"author":{"gitId":"tlyi"},"content":"}","lastModifiedDate":"2021-10-22"},{"lineNumber":29,"author":{"gitId":"tlyi"},"content":"skinparam arrow {","lastModifiedDate":"2021-10-22"},{"lineNumber":30,"author":{"gitId":"tlyi"},"content":"    Color BLACK","lastModifiedDate":"2021-10-22"},{"lineNumber":31,"author":{"gitId":"tlyi"},"content":"}","lastModifiedDate":"2021-10-22"},{"lineNumber":32,"author":{"gitId":"tlyi"},"content":"skinparam sequence {","lastModifiedDate":"2021-10-22"},{"lineNumber":33,"author":{"gitId":"tlyi"},"content":"    TitleFontColor BLACK","lastModifiedDate":"2021-10-22"},{"lineNumber":34,"author":{"gitId":"tlyi"},"content":"    LifeLineBackgroundColor WHITE","lastModifiedDate":"2021-10-22"},{"lineNumber":35,"author":{"gitId":"tlyi"},"content":"    LifeLineBorderColor BLACK","lastModifiedDate":"2021-10-22"},{"lineNumber":36,"author":{"gitId":"tlyi"},"content":"}","lastModifiedDate":"2021-10-22"},{"lineNumber":37,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":38,"author":{"gitId":"weidak"},"content":"hide circle","lastModifiedDate":"2021-10-27"},{"lineNumber":39,"author":{"gitId":"weidak"},"content":"hide enum methods","lastModifiedDate":"2021-10-27"},{"lineNumber":40,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":41,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":42,"author":{"gitId":"tlyi"},"content":"@enduml","lastModifiedDate":"2021-10-22"}],"authorContributionMap":{"weidak":2,"tlyi":40}},{"path":"docs/diagrams/UiClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"tttyyzzz"},"content":"@startuml","lastModifiedDate":"2021-11-05"},{"lineNumber":2,"author":{"gitId":"tttyyzzz"},"content":"!include Style.puml","lastModifiedDate":"2021-11-05"},{"lineNumber":3,"author":{"gitId":"tttyyzzz"},"content":"hide empty members","lastModifiedDate":"2021-11-05"},{"lineNumber":4,"author":{"gitId":"tttyyzzz"},"content":"skinparam minclassWidth 120","lastModifiedDate":"2021-11-05"},{"lineNumber":5,"author":{"gitId":"tttyyzzz"},"content":"skinparam Padding 2","lastModifiedDate":"2021-11-05"},{"lineNumber":6,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":7,"author":{"gitId":"tttyyzzz"},"content":"class Parser LOGIC_COLOUR","lastModifiedDate":"2021-11-05"},{"lineNumber":8,"author":{"gitId":"tttyyzzz"},"content":"class Ui UI_COLOUR","lastModifiedDate":"2021-11-05"},{"lineNumber":9,"author":{"gitId":"tttyyzzz"},"content":"class XYZCommand LOGIC_COLOUR","lastModifiedDate":"2021-11-05"},{"lineNumber":10,"author":{"gitId":"tttyyzzz"},"content":"class OverviewCommand LOGIC_COLOUR","lastModifiedDate":"2021-11-05"},{"lineNumber":11,"author":{"gitId":"tttyyzzz"},"content":"class Main MAIN_COLOUR","lastModifiedDate":"2021-11-05"},{"lineNumber":12,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":13,"author":{"gitId":"tttyyzzz"},"content":"Ui .right.\u003e Main : \u003e sends input","lastModifiedDate":"2021-11-05"},{"lineNumber":14,"author":{"gitId":"tttyyzzz"},"content":"Main ..\u003e Parser : \u003e creates","lastModifiedDate":"2021-11-05"},{"lineNumber":15,"author":{"gitId":"tttyyzzz"},"content":"Parser ..\u003e XYZCommand : \u003e creates","lastModifiedDate":"2021-11-05"},{"lineNumber":16,"author":{"gitId":"tttyyzzz"},"content":"Parser ..\u003e OverviewCommand : \u003e creates","lastModifiedDate":"2021-11-05"},{"lineNumber":17,"author":{"gitId":"tttyyzzz"},"content":"OverviewCommand ..\u003e Statistics : \u003e creates","lastModifiedDate":"2021-11-05"},{"lineNumber":18,"author":{"gitId":"tttyyzzz"},"content":"Statistics ..\u003e OverviewCommand : \u003e returns","lastModifiedDate":"2021-11-05"},{"lineNumber":19,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":20,"author":{"gitId":"tttyyzzz"},"content":"XYZCommand ..\u003e Ui : \u003e returns message","lastModifiedDate":"2021-11-05"},{"lineNumber":21,"author":{"gitId":"tttyyzzz"},"content":"OverviewCommand ..\u003e Ui : \u003e returns message","lastModifiedDate":"2021-11-05"},{"lineNumber":22,"author":{"gitId":"tttyyzzz"},"content":"XYZCommand -right[hidden]- OverviewCommand","lastModifiedDate":"2021-11-05"},{"lineNumber":23,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":24,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":25,"author":{"gitId":"tttyyzzz"},"content":"@enduml","lastModifiedDate":"2021-11-05"}],"authorContributionMap":{"tttyyzzz":25}},{"path":"docs/diagrams/UiSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"tttyyzzz"},"content":"@startuml","lastModifiedDate":"2021-11-08"},{"lineNumber":2,"author":{"gitId":"tttyyzzz"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2021-11-08"},{"lineNumber":3,"author":{"gitId":"tttyyzzz"},"content":"!include Style.puml","lastModifiedDate":"2021-11-08"},{"lineNumber":4,"author":{"gitId":"tttyyzzz"},"content":"hide footbox","lastModifiedDate":"2021-11-08"},{"lineNumber":5,"author":{"gitId":"tttyyzzz"},"content":"actor user #ffffff","lastModifiedDate":"2021-11-08"},{"lineNumber":6,"author":{"gitId":"tttyyzzz"},"content":"participant Ui as ui UI_COLOUR","lastModifiedDate":"2021-11-08"},{"lineNumber":7,"author":{"gitId":"tttyyzzz"},"content":"participant Main as main MAIN_COLOUR","lastModifiedDate":"2021-11-08"},{"lineNumber":8,"author":{"gitId":"tttyyzzz"},"content":"main ++ MAIN_COLOUR","lastModifiedDate":"2021-11-08"},{"lineNumber":9,"author":{"gitId":"tttyyzzz"},"content":"main -\u003e main ++ MAIN_COLOUR: enterTaskModeUntilByeCommand()","lastModifiedDate":"2021-11-08"},{"lineNumber":10,"author":{"gitId":"tttyyzzz"},"content":"main -\u003e ui ++ UI_COLOUR : getUserInput()","lastModifiedDate":"2021-11-08"},{"lineNumber":11,"author":{"gitId":"tttyyzzz"},"content":"user -\u003e ui : type command","lastModifiedDate":"2021-11-08"},{"lineNumber":12,"author":{"gitId":"tttyyzzz"},"content":"ui --\u003e main -- :     command","lastModifiedDate":"2021-11-08"},{"lineNumber":13,"author":{"gitId":"tttyyzzz"},"content":"ref over main","lastModifiedDate":"2021-11-08"},{"lineNumber":14,"author":{"gitId":"tttyyzzz"},"content":"parsing of commands","lastModifiedDate":"2021-11-08"},{"lineNumber":15,"author":{"gitId":"tttyyzzz"},"content":"end","lastModifiedDate":"2021-11-08"},{"lineNumber":16,"author":{"gitId":"tttyyzzz"},"content":"main -\u003e ui ++ UI_COLOUR: formatMessageFramedWithDivider()","lastModifiedDate":"2021-11-08"},{"lineNumber":17,"author":{"gitId":"tttyyzzz"},"content":"ui -\u003e user : prints message \\n on console","lastModifiedDate":"2021-11-08"},{"lineNumber":18,"author":{"gitId":"tttyyzzz"},"content":"ui --\u003e main --","lastModifiedDate":"2021-11-08"},{"lineNumber":19,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":20,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":21,"author":{"gitId":"tttyyzzz"},"content":"@enduml","lastModifiedDate":"2021-11-08"}],"authorContributionMap":{"tttyyzzz":21}},{"path":"docs/team/tlyi.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"---","lastModifiedDate":"2021-11-08"},{"lineNumber":2,"author":{"gitId":"tlyi"},"content":"layout: page","lastModifiedDate":"2021-11-08"},{"lineNumber":3,"author":{"gitId":"tlyi"},"content":"title: Le Yi\u0027s Project Portfolio Page","lastModifiedDate":"2021-11-08"},{"lineNumber":4,"author":{"gitId":"tlyi"},"content":"---","lastModifiedDate":"2021-11-08"},{"lineNumber":5,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":6,"author":{"gitId":"tlyi"},"content":"## Overview","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"tlyi"},"content":"Fitbot is a desktop app that helps university students who are looking to keep track of their calorie consumption and calorie","lastModifiedDate":"2021-11-08"},{"lineNumber":8,"author":{"gitId":"tlyi"},"content":"output with the speed and convenience of command-line based tools, especially in times of online school.","lastModifiedDate":"2021-11-08"},{"lineNumber":9,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":10,"author":{"gitId":"tlyi"},"content":"## Summary of Contributions","lastModifiedDate":"2021-11-08"},{"lineNumber":11,"author":{"gitId":"tlyi"},"content":"The following sections summarise what I have contributed to the project.","lastModifiedDate":"2021-11-08"},{"lineNumber":12,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"tlyi"},"content":"#### **New Feature**: Added the ability to parse user input into commands","lastModifiedDate":"2021-11-08"},{"lineNumber":14,"author":{"gitId":"tlyi"},"content":"- What it does: Makes sense of user input and extracts the relevant type of command and parameters.","lastModifiedDate":"2021-11-08"},{"lineNumber":15,"author":{"gitId":"tlyi"},"content":"- Justification: This feature is necessary for Fitbot to understand the user inputs.","lastModifiedDate":"2021-11-08"},{"lineNumber":16,"author":{"gitId":"tlyi"},"content":"- Highlights:","lastModifiedDate":"2021-11-08"},{"lineNumber":17,"author":{"gitId":"tlyi"},"content":"  - _Flexible parameter ordering_ - Parameters can be provided in any order and will still be parsed appropriately for the user\u0027s convenience.","lastModifiedDate":"2021-11-08"},{"lineNumber":18,"author":{"gitId":"tlyi"},"content":"  - _Optional parameters_ - Some commands are able to take in many parameters, but not all are required at all times. Hence, the parser was implemented such that it can handle variable number of parameters for the same command. For example, to edit the profile using the `profile` command, users can input up to 7 parameters, but at any time, only one parameter is required. ","lastModifiedDate":"2021-11-08"},{"lineNumber":19,"author":{"gitId":"tlyi"},"content":"  This makes the commands shorter and more user-friendly.","lastModifiedDate":"2021-11-08"},{"lineNumber":20,"author":{"gitId":"tlyi"},"content":"  - _Error handling_ - Specific error messages are shown for cases where user input is invalid, e.g. item type is not specified, unnecessary parameters detected, string given where numbers were expected, etc. ","lastModifiedDate":"2021-11-08"},{"lineNumber":21,"author":{"gitId":"tlyi"},"content":"- Pull requests: [#36](https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/36), [#42](https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/42), [#96](https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/96), [#121](https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/121), [#169](https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/169)","lastModifiedDate":"2021-11-08"},{"lineNumber":22,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":23,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":24,"author":{"gitId":"tlyi"},"content":"#### **New Feature**: Add, View, and Delete Food Bank/Exercise Bank Items","lastModifiedDate":"2021-11-08"},{"lineNumber":25,"author":{"gitId":"tlyi"},"content":"- What it does: The Food Bank and Exercise Bank allows users to store commonly consumed food/commonly done exercise items and their respective calories so that the next time they want to record them, they no longer have to provide the calories for these items. ","lastModifiedDate":"2021-11-08"},{"lineNumber":26,"author":{"gitId":"tlyi"},"content":"- Justification: This makes it much more convenient for users to record their calories as they do not have to manually key in the calories everytime.","lastModifiedDate":"2021-11-08"},{"lineNumber":27,"author":{"gitId":"tlyi"},"content":"- Highlights: ","lastModifiedDate":"2021-11-08"},{"lineNumber":28,"author":{"gitId":"tlyi"},"content":"  - _Case insensitive match for item names_: For example, if the user stores the item with name \"jogging\" in the Exercise Bank, the next time he/she tries to record \"JOGGING\" as an Exercise Item, the calories for the item \"jogging\" will be automatically retrieved. This is so that it is more convenient for the user and he/she does not need to worry if the names are an exact match. ","lastModifiedDate":"2021-11-08"},{"lineNumber":29,"author":{"gitId":"tlyi"},"content":"- Pull requests: [#96](https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/96)","lastModifiedDate":"2021-11-08"},{"lineNumber":30,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":31,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":32,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":33,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":34,"author":{"gitId":"tlyi"},"content":"#### **Code Contributed**:  [Reposense Link](https://nus-cs2113-ay2122s1.github.io/tp-dashboard/?search\u003d\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2021-09-25\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dtlyi\u0026tabRepo\u003dAY2122S1-CS2113T-F14-2%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code~other\u0026authorshipIsBinaryFileTypeChecked\u003dfalse)","lastModifiedDate":"2021-11-08"},{"lineNumber":35,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":36,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":37,"author":{"gitId":"tlyi"},"content":"#### **Project Management**:","lastModifiedDate":"2021-11-04"},{"lineNumber":38,"author":{"gitId":"tlyi"},"content":"- Created issues and user stories for `v2.0`, `v2.0b`","lastModifiedDate":"2021-11-08"},{"lineNumber":39,"author":{"gitId":"tlyi"},"content":"- Assigned PE-D issues to team for `v2.1`","lastModifiedDate":"2021-11-08"},{"lineNumber":40,"author":{"gitId":"tlyi"},"content":"- Oversaw the code integration and reviewing process with the team for major code increments ","lastModifiedDate":"2021-11-08"},{"lineNumber":41,"author":{"gitId":"tlyi"},"content":"([#37](https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/37), ","lastModifiedDate":"2021-11-08"},{"lineNumber":42,"author":{"gitId":"tlyi"},"content":"[#123](https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/123),","lastModifiedDate":"2021-11-08"},{"lineNumber":43,"author":{"gitId":"tlyi"},"content":"[#224](https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/224),","lastModifiedDate":"2021-11-08"},{"lineNumber":44,"author":{"gitId":"tlyi"},"content":" [#230](https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/230),","lastModifiedDate":"2021-11-08"},{"lineNumber":45,"author":{"gitId":"tlyi"},"content":"[#234](https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/234/files))","lastModifiedDate":"2021-11-08"},{"lineNumber":46,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":47,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":48,"author":{"gitId":"tlyi"},"content":"#### **Enhancements To Existing Features**:","lastModifiedDate":"2021-11-04"},{"lineNumber":49,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":50,"author":{"gitId":"tlyi"},"content":"#### **Built the skeleton code for Command classes**","lastModifiedDate":"2021-11-08"},{"lineNumber":51,"author":{"gitId":"tlyi"},"content":"To start off the project, we needed a base structure to build on for parsing and execution of commands. I set up the abstract `Command` class and the initial few `XYZCommand` classes for v1.0 to provide the structure for the rest of the team to build on.","lastModifiedDate":"2021-11-08"},{"lineNumber":52,"author":{"gitId":"tlyi"},"content":"([#36](https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/36))","lastModifiedDate":"2021-11-08"},{"lineNumber":53,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":54,"author":{"gitId":"tlyi"},"content":"#### **Make the Logic Component more OOP**","lastModifiedDate":"2021-11-08"},{"lineNumber":55,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":56,"author":{"gitId":"tlyi"},"content":"This was done in several increments.","lastModifiedDate":"2021-11-08"},{"lineNumber":57,"author":{"gitId":"tlyi"},"content":"1. Created `Parser` as an interface with various `Parser` classes specific to each `Command` class implementing it ([#102](https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/102))","lastModifiedDate":"2021-11-08"},{"lineNumber":58,"author":{"gitId":"tlyi"},"content":"2. Integrate command parsing and execution into a single `LogicManager` class ([#141](https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/141))","lastModifiedDate":"2021-11-08"},{"lineNumber":59,"author":{"gitId":"tlyi"},"content":"3. Integrate `DataManager` and `StorageManager` with `LogicManager` so that all operations involving command parsing, data manipulation and data saving are contained within `LogicManager`. ([#145](https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/145))","lastModifiedDate":"2021-11-08"},{"lineNumber":60,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":61,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":62,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":63,"author":{"gitId":"tlyi"},"content":"#### **Documentation**:","lastModifiedDate":"2021-11-04"},{"lineNumber":64,"author":{"gitId":"tlyi"},"content":"- User Guide:","lastModifiedDate":"2021-11-08"},{"lineNumber":65,"author":{"gitId":"tlyi"},"content":"  - Added more details to the introduction of Fitbot ([#128](https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/128))","lastModifiedDate":"2021-11-08"},{"lineNumber":66,"author":{"gitId":"tlyi"},"content":"  - Added a section to explain the usage of the User Guide ([#128](https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/128))","lastModifiedDate":"2021-11-08"},{"lineNumber":67,"author":{"gitId":"tlyi"},"content":"  - Added documentation for all Food Bank and Exercise Bank related commands, i.e. the sections [_\"Building Your Food Bank\"_](https://ay2122s1-cs2113t-f14-2.github.io/tp/UserGuide.html#45-building-your-food-bank) and [_\"Building Your Exercise Bank\"_](https://ay2122s1-cs2113t-f14-2.github.io/tp/UserGuide.html#46-building-your-exercise-bank).","lastModifiedDate":"2021-11-08"},{"lineNumber":68,"author":{"gitId":"tlyi"},"content":"  - Added shortcuts back to content page after every major section for easier navigation ([#230](https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/230))","lastModifiedDate":"2021-11-08"},{"lineNumber":69,"author":{"gitId":"tlyi"},"content":"- Developer Guide:","lastModifiedDate":"2021-11-08"},{"lineNumber":70,"author":{"gitId":"tlyi"},"content":"  - Added documentation for the [_`Logic` component_](https://ay2122s1-cs2113t-f14-2.github.io/tp/DeveloperGuide.html#logic-component) ([#134](https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/134), [#241](https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/241))","lastModifiedDate":"2021-11-08"},{"lineNumber":71,"author":{"gitId":"tlyi"},"content":"  - Added documentation for the implementation of [_\"Parsing of Commands\"_](https://ay2122s1-cs2113t-f14-2.github.io/tp/DeveloperGuide.html#parsing-of-commands) ([#241](https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/241))","lastModifiedDate":"2021-11-08"},{"lineNumber":72,"author":{"gitId":"tlyi"},"content":"  - Added instructions of manual testing on [_\"Building Food Bank\"_](https://ay2122s1-cs2113t-f14-2.github.io/tp/DeveloperGuide.html#building-food-bank) and [_\"Building Exercise Bank\"_](https://ay2122s1-cs2113t-f14-2.github.io/tp/DeveloperGuide.html#building-exercise-bank) ([#230](https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/230))","lastModifiedDate":"2021-11-08"},{"lineNumber":73,"author":{"gitId":"tlyi"},"content":"  - Standardised styling for PlantUML diagrams ([#117](https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/117))","lastModifiedDate":"2021-11-08"},{"lineNumber":74,"author":{"gitId":"tlyi"},"content":"- Standardised the styling on Github Pages for Product Website. ([#115](https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/115), [#236](https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/236))","lastModifiedDate":"2021-11-08"},{"lineNumber":75,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":76,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":77,"author":{"gitId":"tlyi"},"content":"#### **Community**: ","lastModifiedDate":"2021-11-04"},{"lineNumber":78,"author":{"gitId":"tlyi"},"content":"- PRs reviewed (with non-trivial comments): [#32](https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/32), [#33](https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/33), [#34](https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/34), [#35](https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/35). [#39](https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/39)","lastModifiedDate":"2021-11-08"},{"lineNumber":79,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-11-04"}],"authorContributionMap":{"tlyi":79}},{"path":"docs/team/tryyang2001.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"---","lastModifiedDate":"2021-11-08"},{"lineNumber":2,"author":{"gitId":"tlyi"},"content":"layout: page","lastModifiedDate":"2021-11-08"},{"lineNumber":3,"author":{"gitId":"tlyi"},"content":"title: Rui Yang\u0027s Project Portfolio Page","lastModifiedDate":"2021-11-08"},{"lineNumber":4,"author":{"gitId":"tlyi"},"content":"---","lastModifiedDate":"2021-11-08"},{"lineNumber":5,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":6,"author":{"gitId":"tryyang2001"},"content":"## **Overview**","lastModifiedDate":"2021-11-06"},{"lineNumber":7,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":8,"author":{"gitId":"tryyang2001"},"content":"Fitbot is a desktop app that helps university students who are looking to keep track of their calorie consumption and calorie ","lastModifiedDate":"2021-11-06"},{"lineNumber":9,"author":{"gitId":"tryyang2001"},"content":"output with the speed and convenience of command-line based tools, especially in times of online school.","lastModifiedDate":"2021-11-06"},{"lineNumber":10,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"tryyang2001"},"content":"### **Summary of Contributions**","lastModifiedDate":"2021-11-06"},{"lineNumber":12,"author":{"gitId":"tryyang2001"},"content":"Below are all the contributions done by the author to Fitbot.","lastModifiedDate":"2021-11-06"},{"lineNumber":13,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":14,"author":{"gitId":"tryyang2001"},"content":"#### **New Feature**: Add Food Item","lastModifiedDate":"2021-11-06"},{"lineNumber":15,"author":{"gitId":"tryyang2001"},"content":"- What it does: This feature allows users to add a new food item to the food list, together with the calorie of the food item,","lastModifiedDate":"2021-11-06"},{"lineNumber":16,"author":{"gitId":"tryyang2001"},"content":"  and the date and time when consuming the food.","lastModifiedDate":"2021-11-06"},{"lineNumber":17,"author":{"gitId":"tryyang2001"},"content":"- Justification: This feature is one of the core feature in Fitbot application. It can help the users to keep track of the ","lastModifiedDate":"2021-11-06"},{"lineNumber":18,"author":{"gitId":"tryyang2001"},"content":"  food calorie taken. With all the food items stored in a list, this feature enables calculation of total calorie, and the number","lastModifiedDate":"2021-11-06"},{"lineNumber":19,"author":{"gitId":"tryyang2001"},"content":"  of suppers taken. ","lastModifiedDate":"2021-11-06"},{"lineNumber":20,"author":{"gitId":"tryyang2001"},"content":"- Highlights: This feature adds a food item to the food list, and ensures that the food items are sorted according to their date ","lastModifiedDate":"2021-11-06"},{"lineNumber":21,"author":{"gitId":"tryyang2001"},"content":"  time. ","lastModifiedDate":"2021-11-06"},{"lineNumber":22,"author":{"gitId":"tryyang2001"},"content":"- Pull requests: [#34](https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/34), [#40](https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/40), ","lastModifiedDate":"2021-11-07"},{"lineNumber":23,"author":{"gitId":"tryyang2001"},"content":"  [#46](https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/46), [#81](https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/81)","lastModifiedDate":"2021-11-07"},{"lineNumber":24,"author":{"gitId":"tryyang2001"},"content":"  [#82](https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/82), [#98](https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/98)","lastModifiedDate":"2021-11-07"},{"lineNumber":25,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":26,"author":{"gitId":"tryyang2001"},"content":"#### **New Feature**: View Food Item","lastModifiedDate":"2021-11-06"},{"lineNumber":27,"author":{"gitId":"tryyang2001"},"content":"- What it does: This feature allows users to view all the food items he or she added. In addition to that, it also shows the total ","lastModifiedDate":"2021-11-06"},{"lineNumber":28,"author":{"gitId":"tryyang2001"},"content":"  food item consumed for each date and time period in the week. Moreover, it also shows the total calorie consumed ","lastModifiedDate":"2021-11-06"},{"lineNumber":29,"author":{"gitId":"tryyang2001"},"content":"  for each day and also in the week.","lastModifiedDate":"2021-11-06"},{"lineNumber":30,"author":{"gitId":"tryyang2001"},"content":"- Justification: This feature allows users to check their food list, so that they can do some operations such as `add` and `delete` ","lastModifiedDate":"2021-11-06"},{"lineNumber":31,"author":{"gitId":"tryyang2001"},"content":"  whenever necessary.","lastModifiedDate":"2021-11-06"},{"lineNumber":32,"author":{"gitId":"tryyang2001"},"content":"- Highlights: This feature will show a list of food consumed by the users within 7 days of today. The food items are separated with ","lastModifiedDate":"2021-11-06"},{"lineNumber":33,"author":{"gitId":"tryyang2001"},"content":"  different date and time period, covered with nice frames.","lastModifiedDate":"2021-11-06"},{"lineNumber":34,"author":{"gitId":"tryyang2001"},"content":"- - Pull requests: [#34](https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/34), [#40](https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/40),","lastModifiedDate":"2021-11-07"},{"lineNumber":35,"author":{"gitId":"tryyang2001"},"content":"    [#46](https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/46), [#81](https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/81)","lastModifiedDate":"2021-11-07"},{"lineNumber":36,"author":{"gitId":"tryyang2001"},"content":"    [#82](https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/82), [#98](https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/98)","lastModifiedDate":"2021-11-07"},{"lineNumber":37,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":38,"author":{"gitId":"tryyang2001"},"content":"#### **New Feature**: Delete Food Item","lastModifiedDate":"2021-11-06"},{"lineNumber":39,"author":{"gitId":"tryyang2001"},"content":"- What it does: This feature allows users to delete unwanted food items. ","lastModifiedDate":"2021-11-06"},{"lineNumber":40,"author":{"gitId":"tryyang2001"},"content":"- Justification: Whenever the user adds a wrong food item or makes a typo, he or she may want to delete it. This feature allows the permanent deletion of","lastModifiedDate":"2021-11-06"},{"lineNumber":41,"author":{"gitId":"tryyang2001"},"content":"  food item.","lastModifiedDate":"2021-11-06"},{"lineNumber":42,"author":{"gitId":"tryyang2001"},"content":"- Highlights: This feature will delete the food item specified by the user. It will first check if the food item with the item index, date and time given","lastModifiedDate":"2021-11-06"},{"lineNumber":43,"author":{"gitId":"tryyang2001"},"content":"  by the user are correct and existing, then delete the corresponding food item. This feature also supports clearing the food list when the users want to ","lastModifiedDate":"2021-11-06"},{"lineNumber":44,"author":{"gitId":"tryyang2001"},"content":"  have a new food list.","lastModifiedDate":"2021-11-06"},{"lineNumber":45,"author":{"gitId":"tryyang2001"},"content":"- Pull requests: [#34](https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/34), [#40](https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/40),","lastModifiedDate":"2021-11-07"},{"lineNumber":46,"author":{"gitId":"tryyang2001"},"content":"  [#46](https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/46), [#81](https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/81)","lastModifiedDate":"2021-11-07"},{"lineNumber":47,"author":{"gitId":"tryyang2001"},"content":"  [#82](https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/82), [#98](https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/98)","lastModifiedDate":"2021-11-07"},{"lineNumber":48,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":49,"author":{"gitId":"tryyang2001"},"content":"#### **Code Contributed**:","lastModifiedDate":"2021-11-04"},{"lineNumber":50,"author":{"gitId":"tryyang2001"},"content":"Here is the [link](https://nus-cs2113-ay2122s1.github.io/tp-dashboard/?search\u003d\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2021-09-25\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dfalse\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dtryyang2001\u0026tabRepo\u003dAY2122S1-CS2113T-F14-2%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code~other\u0026authorshipIsBinaryFileTypeChecked\u003dfalse) ","lastModifiedDate":"2021-11-06"},{"lineNumber":51,"author":{"gitId":"tryyang2001"},"content":"to see the code contributed by the author. ","lastModifiedDate":"2021-11-06"},{"lineNumber":52,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":53,"author":{"gitId":"tryyang2001"},"content":"#### **Project Management**:","lastModifiedDate":"2021-11-04"},{"lineNumber":54,"author":{"gitId":"tryyang2001"},"content":"- Creates Github organization for the team ","lastModifiedDate":"2021-11-06"},{"lineNumber":55,"author":{"gitId":"tryyang2001"},"content":"- Helps to set up Github team repository","lastModifiedDate":"2021-11-06"},{"lineNumber":56,"author":{"gitId":"tryyang2001"},"content":"- Helps in maintaining issue tracker","lastModifiedDate":"2021-11-06"},{"lineNumber":57,"author":{"gitId":"tryyang2001"},"content":"- Helps to edit the code in the gradlew checkstyle file to fix the bug of array indentation","lastModifiedDate":"2021-11-06"},{"lineNumber":58,"author":{"gitId":"tryyang2001"},"content":"- Helps to review, approve and merge Github pull requests","lastModifiedDate":"2021-11-06"},{"lineNumber":59,"author":{"gitId":"tryyang2001"},"content":"- Helps to publish release in team repo","lastModifiedDate":"2021-11-06"},{"lineNumber":60,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":61,"author":{"gitId":"tryyang2001"},"content":"#### **Enhancements To Existing Features**:","lastModifiedDate":"2021-11-04"},{"lineNumber":62,"author":{"gitId":"tryyang2001"},"content":"##### **Delete exercise according to date**","lastModifiedDate":"2021-11-07"},{"lineNumber":63,"author":{"gitId":"tryyang2001"},"content":"- Since exercises stored in the exercise list are split according to their date, users are now required to delete the exercise","lastModifiedDate":"2021-11-07"},{"lineNumber":64,"author":{"gitId":"tryyang2001"},"content":"  by specifying the index and the date.","lastModifiedDate":"2021-11-07"},{"lineNumber":65,"author":{"gitId":"tryyang2001"},"content":"- Pull request: [#98](https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/98)","lastModifiedDate":"2021-11-07"},{"lineNumber":66,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":67,"author":{"gitId":"tryyang2001"},"content":"##### **Create Item class and ItemList class to make the code more OOP**","lastModifiedDate":"2021-11-06"},{"lineNumber":68,"author":{"gitId":"tryyang2001"},"content":"- Applies inheritance in Food, Exercise, FoodList and ExerciseList classes, helps to extract common methods, refactor ","lastModifiedDate":"2021-11-06"},{"lineNumber":69,"author":{"gitId":"tryyang2001"},"content":"  codes to improve efficiency, adds javaDoc to all public methods and most of the private methods, and standardizes the ","lastModifiedDate":"2021-11-06"},{"lineNumber":70,"author":{"gitId":"tryyang2001"},"content":"  code style.","lastModifiedDate":"2021-11-06"},{"lineNumber":71,"author":{"gitId":"tryyang2001"},"content":"- Pull request: [#81](https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/81)","lastModifiedDate":"2021-11-07"},{"lineNumber":72,"author":{"gitId":"tryyang2001"},"content":"  [#82](https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/82), [#98](https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/98), [#118](https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/118)","lastModifiedDate":"2021-11-07"},{"lineNumber":73,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":74,"author":{"gitId":"tryyang2001"},"content":"##### **Implement filtering items within 7 days of today tom improve code efficiency**","lastModifiedDate":"2021-11-07"},{"lineNumber":75,"author":{"gitId":"tryyang2001"},"content":"- When the program starts, filters the food list and exercise list to only take in items that are within 7 days of today (including today)","lastModifiedDate":"2021-11-07"},{"lineNumber":76,"author":{"gitId":"tryyang2001"},"content":"  so that the users can only view the food and exercise items taken within this period. ","lastModifiedDate":"2021-11-07"},{"lineNumber":77,"author":{"gitId":"tryyang2001"},"content":"- Pull request: [#122](https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/122), [#140](https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/140)","lastModifiedDate":"2021-11-07"},{"lineNumber":78,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":79,"author":{"gitId":"tryyang2001"},"content":"##### **Checking for Food and Exercise Item data validity**","lastModifiedDate":"2021-11-07"},{"lineNumber":80,"author":{"gitId":"tryyang2001"},"content":"- Checks whether the date and input calorie from a food or exercise item are valid.","lastModifiedDate":"2021-11-07"},{"lineNumber":81,"author":{"gitId":"tryyang2001"},"content":"- Pull request: [#220](https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/220)","lastModifiedDate":"2021-11-07"},{"lineNumber":82,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":83,"author":{"gitId":"tryyang2001"},"content":"#### **Documentation**:","lastModifiedDate":"2021-11-04"},{"lineNumber":84,"author":{"gitId":"tryyang2001"},"content":"##### **Contribution to User Guide**","lastModifiedDate":"2021-11-06"},{"lineNumber":85,"author":{"gitId":"tryyang2001"},"content":"- Writes documentation for Section 3 (Terminology), 4.2 (Recording Food) and 4.3 (Recording Exercise) [#124](https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/124)","lastModifiedDate":"2021-11-07"},{"lineNumber":86,"author":{"gitId":"tryyang2001"},"content":"- Fixes formatting issue in UG [#55](https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/55), [#56](https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/56), [#57](https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/57),","lastModifiedDate":"2021-11-07"},{"lineNumber":87,"author":{"gitId":"tryyang2001"},"content":"- Ensures all the links provided in UG are valid [#161](https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/161)","lastModifiedDate":"2021-11-07"},{"lineNumber":88,"author":{"gitId":"tryyang2001"},"content":"- Other Pull request: [#137](https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/137)","lastModifiedDate":"2021-11-07"},{"lineNumber":89,"author":{"gitId":"tryyang2001"},"content":"  ","lastModifiedDate":"2021-11-07"},{"lineNumber":90,"author":{"gitId":"tryyang2001"},"content":"  ","lastModifiedDate":"2021-11-07"},{"lineNumber":91,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":92,"author":{"gitId":"tryyang2001"},"content":"##### **Contribution to Documentation Guide**","lastModifiedDate":"2021-11-06"},{"lineNumber":93,"author":{"gitId":"tryyang2001"},"content":"- Writes simple introduction, creates content page draft, ensures hyperlinks provided in DG are valid [#132](https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/132)","lastModifiedDate":"2021-11-07"},{"lineNumber":94,"author":{"gitId":"tryyang2001"},"content":"- Diagrams drawn:","lastModifiedDate":"2021-11-06"},{"lineNumber":95,"author":{"gitId":"tryyang2001"},"content":"  - Architecture diagram [#106](https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/106)","lastModifiedDate":"2021-11-07"},{"lineNumber":96,"author":{"gitId":"tryyang2001"},"content":"  - ItemBank and Item class diagram [#106](https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/106), [#183](https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/183)","lastModifiedDate":"2021-11-07"},{"lineNumber":97,"author":{"gitId":"tryyang2001"},"content":"  - Add Food Item sequence diagram","lastModifiedDate":"2021-11-06"},{"lineNumber":98,"author":{"gitId":"tryyang2001"},"content":"- Writes design details for Data Component (ItemBank and Item) [#133](https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/133)","lastModifiedDate":"2021-11-07"},{"lineNumber":99,"author":{"gitId":"tryyang2001"},"content":"- Writes implementation details and design considerations for Add Food Item [#111](https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/111)","lastModifiedDate":"2021-11-07"},{"lineNumber":100,"author":{"gitId":"tryyang2001"},"content":"- Writes documentation in glossary [#111](https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/111), [#137](https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/137)","lastModifiedDate":"2021-11-07"},{"lineNumber":101,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":102,"author":{"gitId":"tryyang2001"},"content":"#### **Community**:","lastModifiedDate":"2021-11-04"},{"lineNumber":103,"author":{"gitId":"tryyang2001"},"content":"- PRs reviewed (with non-trivial comments): [#32](https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/32), [#33](https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/33), [#35](https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/35), [#36](https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/36), [#39](https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/39), [#43](https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/43), [#80](https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/80), [#216](https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/216),","lastModifiedDate":"2021-11-07"},{"lineNumber":104,"author":{"gitId":"tryyang2001"},"content":"- Reported bugs and suggestions for other teams in the class: [Team ConTech Developer Guide Reviews](https://github.com/nus-cs2113-AY2122S1/tp/pull/24)","lastModifiedDate":"2021-11-07"}],"authorContributionMap":{"tryyang2001":100,"tlyi":4}},{"path":"docs/team/tttyyzzz.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"---","lastModifiedDate":"2021-11-08"},{"lineNumber":2,"author":{"gitId":"tlyi"},"content":"layout: page","lastModifiedDate":"2021-11-08"},{"lineNumber":3,"author":{"gitId":"tlyi"},"content":"title: Yi Zhi\u0027s Project Portfolio Page","lastModifiedDate":"2021-11-08"},{"lineNumber":4,"author":{"gitId":"tlyi"},"content":"---","lastModifiedDate":"2021-11-08"},{"lineNumber":5,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":6,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":7,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":8,"author":{"gitId":"tttyyzzz"},"content":"## Overview","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"tttyyzzz"},"content":"Fitbot is a desktop app that helps university students who are looking to keep track of their calorie consumption and calorie","lastModifiedDate":"2021-11-08"},{"lineNumber":10,"author":{"gitId":"tttyyzzz"},"content":"output with the speed and convenience of command-line based tools, especially in times of online school.","lastModifiedDate":"2021-11-08"},{"lineNumber":11,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"tttyyzzz"},"content":"### Summary of Contributions","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"tttyyzzz"},"content":"Summary of contributions are as listed below.","lastModifiedDate":"2021-11-08"},{"lineNumber":14,"author":{"gitId":"tttyyzzz"},"content":"### **New Feature**","lastModifiedDate":"2021-11-08"},{"lineNumber":15,"author":{"gitId":"tttyyzzz"},"content":"####**creation of create profile**","lastModifiedDate":"2021-11-08"},{"lineNumber":16,"author":{"gitId":"tttyyzzz"},"content":"- What it does: _Fitbot_ will prompt and guide user for profile particulars before allowing users to type in ","lastModifiedDate":"2021-11-08"},{"lineNumber":17,"author":{"gitId":"tttyyzzz"},"content":"other commands.","lastModifiedDate":"2021-11-08"},{"lineNumber":18,"author":{"gitId":"tttyyzzz"},"content":"- Justification: There are some commands that require profile attributes such as `BMI` and `Overview` commands.","lastModifiedDate":"2021-11-08"},{"lineNumber":19,"author":{"gitId":"tttyyzzz"},"content":"A bug might occur if the user decides to use the commands above first instead of setting up profile.","lastModifiedDate":"2021-11-08"},{"lineNumber":20,"author":{"gitId":"tttyyzzz"},"content":"- Highlights: If the user profile is not complete, profile data will not be saved.","lastModifiedDate":"2021-11-08"},{"lineNumber":21,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":22,"author":{"gitId":"tttyyzzz"},"content":"### **New Feature**","lastModifiedDate":"2021-11-08"},{"lineNumber":23,"author":{"gitId":"tttyyzzz"},"content":"####**Overview**","lastModifiedDate":"2021-11-08"},{"lineNumber":24,"author":{"gitId":"tttyyzzz"},"content":"-What it does: create a summary of the daily and weekly overview of the calories gained from food and ","lastModifiedDate":"2021-11-08"},{"lineNumber":25,"author":{"gitId":"tttyyzzz"},"content":"lost from exercise.","lastModifiedDate":"2021-11-08"},{"lineNumber":26,"author":{"gitId":"tttyyzzz"},"content":"-Justification: allows users to have a better user experience and allow users to visualised data.","lastModifiedDate":"2021-11-08"},{"lineNumber":27,"author":{"gitId":"tttyyzzz"},"content":"- Highlights: There is bar graph in the overview","lastModifiedDate":"2021-11-08"},{"lineNumber":28,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":29,"author":{"gitId":"tttyyzzz"},"content":"**creation of `Help` Class**","lastModifiedDate":"2021-11-05"},{"lineNumber":30,"author":{"gitId":"tttyyzzz"},"content":"A summary of all the commands and their formats.","lastModifiedDate":"2021-11-05"},{"lineNumber":31,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":32,"author":{"gitId":"tttyyzzz"},"content":"### **New Feature**","lastModifiedDate":"2021-11-08"},{"lineNumber":33,"author":{"gitId":"tttyyzzz"},"content":"Fitbot start-up page.","lastModifiedDate":"2021-11-08"},{"lineNumber":34,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":35,"author":{"gitId":"tttyyzzz"},"content":"#### **Code Contributed**:","lastModifiedDate":"2021-11-05"},{"lineNumber":36,"author":{"gitId":"tttyyzzz"},"content":"[Link](https://nus-cs2113-ay2122s1.github.io/tp-dashboard/?search\u003d\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2021-09-25\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dtttyyzzz\u0026tabRepo\u003dAY2122S1-CS2113T-F14-2%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code\u0026authorshipIsBinaryFileTypeChecked\u003dfalse)","lastModifiedDate":"2021-11-08"},{"lineNumber":37,"author":{"gitId":"tttyyzzz"},"content":"#### **Project Management**:","lastModifiedDate":"2021-11-04"},{"lineNumber":38,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":39,"author":{"gitId":"tttyyzzz"},"content":"PRs reviewed: [#33](https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/33#discussion_r725440121),","lastModifiedDate":"2021-11-08"},{"lineNumber":40,"author":{"gitId":"tttyyzzz"},"content":"[#36](https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/36#discussion_r725726457),","lastModifiedDate":"2021-11-08"},{"lineNumber":41,"author":{"gitId":"tttyyzzz"},"content":"[#39](https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/39#discussion_r726717261),","lastModifiedDate":"2021-11-08"},{"lineNumber":42,"author":{"gitId":"tttyyzzz"},"content":"[#217](https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/217#discussion_r742581641)","lastModifiedDate":"2021-11-08"},{"lineNumber":43,"author":{"gitId":"tttyyzzz"},"content":"#### **Enhancements To Existing Features**:","lastModifiedDate":"2021-11-04"},{"lineNumber":44,"author":{"gitId":"tttyyzzz"},"content":"#### Create Profile v2.0","lastModifiedDate":"2021-11-08"},{"lineNumber":45,"author":{"gitId":"tttyyzzz"},"content":"Will check if the attributes is valid. IF most of the attributes are invalid, it will ask user to recreate the profile.","lastModifiedDate":"2021-11-08"},{"lineNumber":46,"author":{"gitId":"tttyyzzz"},"content":"Else, the system will pick up those attributes that are invalid and will prompt the user for a valid input upon ","lastModifiedDate":"2021-11-08"},{"lineNumber":47,"author":{"gitId":"tttyyzzz"},"content":"starting up _Fitbot_","lastModifiedDate":"2021-11-08"},{"lineNumber":48,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":49,"author":{"gitId":"tttyyzzz"},"content":"Allow users to have the option to quit the application if they wish to quit while setting up the profile attributes.","lastModifiedDate":"2021-11-08"},{"lineNumber":50,"author":{"gitId":"tttyyzzz"},"content":"#### **Documentation**","lastModifiedDate":"2021-11-08"},{"lineNumber":51,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":52,"author":{"gitId":"tttyyzzz"},"content":"**User guide** ","lastModifiedDate":"2021-11-08"},{"lineNumber":53,"author":{"gitId":"tttyyzzz"},"content":"- Section 3: Set Up profile","lastModifiedDate":"2021-11-08"},{"lineNumber":54,"author":{"gitId":"tttyyzzz"},"content":"- Section 4.7: Viewing Your Calorie Summary `overview`","lastModifiedDate":"2021-11-08"},{"lineNumber":55,"author":{"gitId":"tttyyzzz"},"content":"- Section 4.8: Viewing Help `help`","lastModifiedDate":"2021-11-08"},{"lineNumber":56,"author":{"gitId":"tttyyzzz"},"content":"[Link to user guide](https://ay2122s1-cs2113t-f14-2.github.io/tp/UserGuide.html)","lastModifiedDate":"2021-11-08"},{"lineNumber":57,"author":{"gitId":"tttyyzzz"},"content":"**Developer Guide**","lastModifiedDate":"2021-11-08"},{"lineNumber":58,"author":{"gitId":"tttyyzzz"},"content":"- Explanation for Main Architecture Diagram.","lastModifiedDate":"2021-11-08"},{"lineNumber":59,"author":{"gitId":"tttyyzzz"},"content":"- Explanation of _Ui component_ (includes ui sequence diagram)","lastModifiedDate":"2021-11-08"},{"lineNumber":60,"author":{"gitId":"tttyyzzz"},"content":"- Explanation of _State component_ (includes state class diagram)","lastModifiedDate":"2021-11-08"},{"lineNumber":61,"author":{"gitId":"tttyyzzz"},"content":"- Explanation of _Create Profile If Not Exist On Startup_ (create profile sequence diagram)","lastModifiedDate":"2021-11-08"},{"lineNumber":62,"author":{"gitId":"tttyyzzz"},"content":"- Give test cases for _Setting Up Profile_ in _Instructions for manual testing_","lastModifiedDate":"2021-11-08"},{"lineNumber":63,"author":{"gitId":"tttyyzzz"},"content":"[Link to developer guide](https://ay2122s1-cs2113t-f14-2.github.io/tp/DeveloperGuide.html)","lastModifiedDate":"2021-11-08"},{"lineNumber":64,"author":{"gitId":"tttyyzzz"},"content":"#### **Community**:","lastModifiedDate":"2021-11-04"}],"authorContributionMap":{"tttyyzzz":58,"tlyi":6}},{"path":"docs/team/weidak.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"---","lastModifiedDate":"2021-11-08"},{"lineNumber":2,"author":{"gitId":"tlyi"},"content":"layout: page","lastModifiedDate":"2021-11-08"},{"lineNumber":3,"author":{"gitId":"tlyi"},"content":"title: Weida\u0027s Project Portfolio Page","lastModifiedDate":"2021-11-08"},{"lineNumber":4,"author":{"gitId":"tlyi"},"content":"---","lastModifiedDate":"2021-11-08"},{"lineNumber":5,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"## Overview","lastModifiedDate":"2020-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":9,"author":{"gitId":"weidak"},"content":"Fitbot is a desktop app that helps university students who are looking to keep track of their calorie consumption and calorie output with the speed and convenience of command-line based tools, especially in times of online school.","lastModifiedDate":"2021-11-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"### Summary of Contributions","lastModifiedDate":"2020-05-24"},{"lineNumber":12,"author":{"gitId":"weidak"},"content":"The following items listed below are what I have contributed to the team:","lastModifiedDate":"2021-11-05"},{"lineNumber":13,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"weidak"},"content":"#### **New Feature**: Profile","lastModifiedDate":"2021-11-05"},{"lineNumber":15,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":16,"author":{"gitId":"weidak"},"content":"- What it does: Contains the user\u0027s attributes such as Name, Height, Weight, Age, Gender, Calorie Goal, Activity Factor.","lastModifiedDate":"2021-11-05"},{"lineNumber":17,"author":{"gitId":"weidak"},"content":"- Justification: The main idea behind the profile was to make Fitbot feel more personalized and let it know your characteristics. Most of these attributes are required in the Harris-Benedict Equation we used to calculate one\u0027s Basal Metabolic Rate, which is","lastModifiedDate":"2021-11-08"},{"lineNumber":18,"author":{"gitId":"weidak"},"content":"  important in determining an accurate calorie budget for the day.","lastModifiedDate":"2021-11-05"},{"lineNumber":19,"author":{"gitId":"weidak"},"content":"- Highlights: This feature incorporates its individual classes of each attribute to ensure data integrity is preserved and profile is a container that","lastModifiedDate":"2021-11-07"},{"lineNumber":20,"author":{"gitId":"weidak"},"content":"  holds these attributes together.","lastModifiedDate":"2021-11-05"},{"lineNumber":21,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":22,"author":{"gitId":"weidak"},"content":"#### **New Feature**: Saving and loading of data from Storage","lastModifiedDate":"2021-11-07"},{"lineNumber":23,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":24,"author":{"gitId":"weidak"},"content":"- What it does: It allows users to load all the data upon startup of the application and save data depending on the command that is being executed. ","lastModifiedDate":"2021-11-07"},{"lineNumber":25,"author":{"gitId":"weidak"},"content":"- Justification: Having a storage utility is crucial in our app\u0027s functionality of calculating the past week of exercise/food consumed,","lastModifiedDate":"2021-11-07"},{"lineNumber":26,"author":{"gitId":"weidak"},"content":"as well as remembering one\u0027s profile attributes that lead to the calculations.","lastModifiedDate":"2021-11-07"},{"lineNumber":27,"author":{"gitId":"weidak"},"content":"- Highlights: This feature loads and saves all the different data structures we have come up with, including FoodList, ExerciseList, FutureExerciseList, ItemBank, Profile. It can detect an anomaly within the file and handle it in a way that it can be dealt with later on","lastModifiedDate":"2021-11-07"},{"lineNumber":28,"author":{"gitId":"weidak"},"content":"in another state whereby users can modify their attributes again in case they have accidentally corrupted a particular attribute.","lastModifiedDate":"2021-11-07"},{"lineNumber":29,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":30,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":31,"author":{"gitId":"weidak"},"content":"#### **Code Contributed**:","lastModifiedDate":"2021-11-05"},{"lineNumber":32,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":33,"author":{"gitId":"weidak"},"content":"[Reposense Link](https://nus-cs2113-ay2122s1.github.io/tp-dashboard/?search\u003dweidak\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2021-09-25\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dweidak\u0026tabRepo\u003dAY2122S1-CS2113T-F14-2%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code\u0026authorshipIsBinaryFileTypeChecked\u003dfalse)","lastModifiedDate":"2021-11-05"},{"lineNumber":34,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":35,"author":{"gitId":"weidak"},"content":"#### **Project Management**:","lastModifiedDate":"2021-11-05"},{"lineNumber":36,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":37,"author":{"gitId":"weidak"},"content":"- Aided in setting up the GitHub repo and initializing the project during the early stages of the project","lastModifiedDate":"2021-11-05"},{"lineNumber":38,"author":{"gitId":"weidak"},"content":"- Helped to find bugs and assign new issues on a consistent basis","lastModifiedDate":"2021-11-05"},{"lineNumber":39,"author":{"gitId":"weidak"},"content":"- PRs reviewed: [#34](https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/34), [#35](https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/35), ","lastModifiedDate":"2021-11-07"},{"lineNumber":40,"author":{"gitId":"weidak"},"content":"[#80](https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/80), [#119](https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/119)","lastModifiedDate":"2021-11-07"},{"lineNumber":41,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":42,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":43,"author":{"gitId":"weidak"},"content":"[comment]: \u003c\u003e (TODO add the PRs reviewed on github prs..)","lastModifiedDate":"2021-11-05"},{"lineNumber":44,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":45,"author":{"gitId":"weidak"},"content":"#### **Enhancements To Existing Features**:","lastModifiedDate":"2021-11-05"},{"lineNumber":46,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":47,"author":{"gitId":"weidak"},"content":"**Add verifiability to various Profile attributes**","lastModifiedDate":"2021-11-07"},{"lineNumber":48,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":49,"author":{"gitId":"weidak"},"content":"- As our program loads the attributes from storage (to see whether it has been modified maliciously), it detects the attribute validity. With this","lastModifiedDate":"2021-11-07"},{"lineNumber":50,"author":{"gitId":"weidak"},"content":"implementation, we are able to utilize the StartState (implemented by Yi Zhi) to rectify the problem without discarding the entire profile data. ([#88](https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/88))","lastModifiedDate":"2021-11-07"},{"lineNumber":51,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":52,"author":{"gitId":"weidak"},"content":"**Creation of StorageManager Class**","lastModifiedDate":"2021-11-07"},{"lineNumber":53,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":54,"author":{"gitId":"weidak"},"content":"- As we grew in our list of features, our storages for the various features grew as well. As such, acting as an agent, it encapsulates all storages required to make our program work with their respective functionality (loading/saving). ([#99](https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/99))","lastModifiedDate":"2021-11-07"},{"lineNumber":55,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":56,"author":{"gitId":"weidak"},"content":"**Creation of DataManager Class**","lastModifiedDate":"2021-11-05"},{"lineNumber":57,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":58,"author":{"gitId":"weidak"},"content":"- After deliberating with the other members, a DataManager class was created to encompass all the different types of Data we have (FoodList, Profile, ExerciseBank etc.)","lastModifiedDate":"2021-11-05"},{"lineNumber":59,"author":{"gitId":"weidak"},"content":"and ensured all the items are localised in this class. This de-clutters Main.java and primarily acts as an agent for the various items. ([#143](https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/143))","lastModifiedDate":"2021-11-07"},{"lineNumber":60,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":61,"author":{"gitId":"weidak"},"content":"#### **Documentation**:","lastModifiedDate":"2021-11-05"},{"lineNumber":62,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":63,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":64,"author":{"gitId":"weidak"},"content":"- User Guide: Section 4.2 (Profile commands and its calculation of BMI) ([#126](https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/126))","lastModifiedDate":"2021-11-07"},{"lineNumber":65,"author":{"gitId":"weidak"},"content":"- Developer Guide:","lastModifiedDate":"2021-11-05"},{"lineNumber":66,"author":{"gitId":"weidak"},"content":"  - Profile Class Diagram (Design) ([#108](https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/108), [#135](https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/135), [#208](https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/208))","lastModifiedDate":"2021-11-07"},{"lineNumber":67,"author":{"gitId":"weidak"},"content":"  - StorageManager Class Diagram (Design) ([#108](https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/108), [#135](https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/135), [#208](https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/208))","lastModifiedDate":"2021-11-07"},{"lineNumber":68,"author":{"gitId":"weidak"},"content":"  - ProfileStorage Class Diagram (Design) ([#108](https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/108), [#135](https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/135), [#208](https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/208))","lastModifiedDate":"2021-11-07"},{"lineNumber":69,"author":{"gitId":"weidak"},"content":"  - Loading of Data on Startup (Implementation) ([#208](https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/208))","lastModifiedDate":"2021-11-07"},{"lineNumber":70,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":71,"author":{"gitId":"weidak"},"content":"(some documentation were done on Notion before being transferred, hence there was a lack of PRs)","lastModifiedDate":"2021-11-07"},{"lineNumber":72,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":73,"author":{"gitId":"weidak"},"content":"#### **Community**:","lastModifiedDate":"2021-11-05"}],"authorContributionMap":{"weidak":63,"-":5,"tlyi":5}},{"path":"docs/team/xingjie99.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"---","lastModifiedDate":"2021-11-08"},{"lineNumber":2,"author":{"gitId":"tlyi"},"content":"layout: page","lastModifiedDate":"2021-11-08"},{"lineNumber":3,"author":{"gitId":"tlyi"},"content":"title: Xing Jie\u0027s Project Portfolio Page","lastModifiedDate":"2021-11-08"},{"lineNumber":4,"author":{"gitId":"tlyi"},"content":"---","lastModifiedDate":"2021-11-08"},{"lineNumber":5,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":6,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"xingjie99"},"content":"## Overview","lastModifiedDate":"2021-11-04"},{"lineNumber":8,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"xingjie99"},"content":"Fitbot is a desktop app that helps university students who are looking to keep track of their calorie consumption and calorie output with the speed and convenience of command-line based tools, especially in times of online school.","lastModifiedDate":"2021-11-07"},{"lineNumber":10,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":11,"author":{"gitId":"xingjie99"},"content":"### Summary of Contributions","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"xingjie99"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-11-07"},{"lineNumber":14,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":15,"author":{"gitId":"xingjie99"},"content":"#### **New Feature**: Add, Delete and View Upcoming Exercises in Upcoming Exercise List","lastModifiedDate":"2021-11-07"},{"lineNumber":16,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":17,"author":{"gitId":"xingjie99"},"content":"- What it does: Allows user to add, delete and view exercises that occur in the future in the Upcoming Exercise List. ","lastModifiedDate":"2021-11-08"},{"lineNumber":18,"author":{"gitId":"xingjie99"},"content":"  All of the upcoming exercises added will automatically be loaded into the exercise list if the dates of the upcoming exercises have passed.","lastModifiedDate":"2021-11-08"},{"lineNumber":19,"author":{"gitId":"xingjie99"},"content":"- Justification: This feature improves the product by enabling the user to keep track of his/her upcoming exercises and plan them in advance.","lastModifiedDate":"2021-11-08"},{"lineNumber":20,"author":{"gitId":"xingjie99"},"content":"- Highlights: Users are also able to add exercises that occur on a timely basis by adding recurring exercises into the Upcoming Exercise List.","lastModifiedDate":"2021-11-07"},{"lineNumber":21,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":22,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":23,"author":{"gitId":"xingjie99"},"content":"#### **New Feature**: Edit items in Upcoming Exercise List, Food Bank and Exercise Bank.","lastModifiedDate":"2021-11-07"},{"lineNumber":24,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":25,"author":{"gitId":"xingjie99"},"content":"- What it does: Allows user to edit items with wrong information in the Upcoming Exercise List, Food Bank and Exercise Bank.","lastModifiedDate":"2021-11-07"},{"lineNumber":26,"author":{"gitId":"xingjie99"},"content":"- Justification: This feature improves the product by enabling user to change the information of the item directly, instead of having to delete and add the item again.","lastModifiedDate":"2021-11-07"},{"lineNumber":27,"author":{"gitId":"xingjie99"},"content":"- Highlights: Users are only required to key in the information that needs to be changed instead of having to type out all the information again.","lastModifiedDate":"2021-11-07"},{"lineNumber":28,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":29,"author":{"gitId":"xingjie99"},"content":"#### **New Feature**: Delete multiple items in Upcoming Exercise List, Food Bank and Exercise Bank.","lastModifiedDate":"2021-11-08"},{"lineNumber":30,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":31,"author":{"gitId":"xingjie99"},"content":"- What it does: Allows user to delete multiple items at once in the Upcoming Exercise List, Food Bank and Exercise Bank.","lastModifiedDate":"2021-11-08"},{"lineNumber":32,"author":{"gitId":"xingjie99"},"content":"- Justification: This feature improves the product by enabling user to delete multiple items at once instead of having to delete them one by one.","lastModifiedDate":"2021-11-08"},{"lineNumber":33,"author":{"gitId":"xingjie99"},"content":"- Highlights: Users are only required to key in the indexes of all the items they wish to delete.","lastModifiedDate":"2021-11-08"},{"lineNumber":34,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":35,"author":{"gitId":"xingjie99"},"content":"(Completed this feature together with Le Yi)","lastModifiedDate":"2021-11-08"},{"lineNumber":36,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":37,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":38,"author":{"gitId":"xingjie99"},"content":"#### **Code Contributed**:","lastModifiedDate":"2021-11-04"},{"lineNumber":39,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":40,"author":{"gitId":"xingjie99"},"content":"[RepoSense Link](https://nus-cs2113-ay2122s1.github.io/tp-dashboard/?search\u003dxingjie99\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2021-09-25\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dxingjie99\u0026tabRepo\u003dAY2122S1-CS2113T-F14-2%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code\u0026authorshipIsBinaryFileTypeChecked\u003dfalse)","lastModifiedDate":"2021-11-07"},{"lineNumber":41,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":42,"author":{"gitId":"xingjie99"},"content":"#### **Project Management**:","lastModifiedDate":"2021-11-04"},{"lineNumber":43,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":44,"author":{"gitId":"xingjie99"},"content":"- Partake in maintaining issue tracker (create issues, assign labels and assignees )","lastModifiedDate":"2021-11-08"},{"lineNumber":45,"author":{"gitId":"xingjie99"},"content":"- Partake in reviewing, approving and merging PRs","lastModifiedDate":"2021-11-08"},{"lineNumber":46,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":47,"author":{"gitId":"xingjie99"},"content":"#### **Enhancements to Existing Features**:","lastModifiedDate":"2021-11-04"},{"lineNumber":48,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":49,"author":{"gitId":"xingjie99"},"content":"- Restricted upcoming exercises to be within a year to prevent addition of exercises that are too far into the future.","lastModifiedDate":"2021-11-08"},{"lineNumber":50,"author":{"gitId":"xingjie99"},"content":"- Automatically loads upcoming exercises into Exercise List upon re-running the application if the dates have passed.","lastModifiedDate":"2021-11-08"},{"lineNumber":51,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":52,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":53,"author":{"gitId":"xingjie99"},"content":"#### **Documentation**:","lastModifiedDate":"2021-11-04"},{"lineNumber":54,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":55,"author":{"gitId":"xingjie99"},"content":"- User Guide:","lastModifiedDate":"2021-11-08"},{"lineNumber":56,"author":{"gitId":"xingjie99"},"content":"  ","lastModifiedDate":"2021-11-08"},{"lineNumber":57,"author":{"gitId":"xingjie99"},"content":"  - Wrote Section 4.4 Scheduling Your Exercises","lastModifiedDate":"2021-11-08"},{"lineNumber":58,"author":{"gitId":"xingjie99"},"content":"  - Wrote FAQ","lastModifiedDate":"2021-11-08"},{"lineNumber":59,"author":{"gitId":"xingjie99"},"content":"  - Looked through the whole UG and standardized the formatting and wordings. [#237](https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/237)","lastModifiedDate":"2021-11-08"},{"lineNumber":60,"author":{"gitId":"xingjie99"},"content":"  ","lastModifiedDate":"2021-11-08"},{"lineNumber":61,"author":{"gitId":"xingjie99"},"content":"- Developer Guide:","lastModifiedDate":"2021-11-08"},{"lineNumber":62,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":63,"author":{"gitId":"xingjie99"},"content":"  - Wrote the manual testing for Recording Exercise Items and Scheduling Exercise","lastModifiedDate":"2021-11-08"},{"lineNumber":64,"author":{"gitId":"xingjie99"},"content":"  - Wrote implementation details and design considerations for Add Recurring Exercises.","lastModifiedDate":"2021-11-08"},{"lineNumber":65,"author":{"gitId":"xingjie99"},"content":" ","lastModifiedDate":"2021-11-08"},{"lineNumber":66,"author":{"gitId":"xingjie99"},"content":"  ","lastModifiedDate":"2021-11-08"},{"lineNumber":67,"author":{"gitId":"xingjie99"},"content":"#### **Community**:","lastModifiedDate":"2021-11-04"},{"lineNumber":68,"author":{"gitId":"xingjie99"},"content":"- PR reviewed: [#34](https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/34), [#36](https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/36), [#39](https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/39) ","lastModifiedDate":"2021-11-08"},{"lineNumber":69,"author":{"gitId":"xingjie99"},"content":"- Reported bugs and suggestions for other teams in the class: [Team LOTS Developer Guide Review](https://github.com/nus-cs2113-AY2122S1/tp/pull/34)","lastModifiedDate":"2021-11-08"}],"authorContributionMap":{"xingjie99":64,"tlyi":5}},{"path":"src/main/java/seedu/duke/Main.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"weidak"},"content":"import seedu.duke.data.DataManager;","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"tlyi"},"content":"import seedu.duke.logic.LogicManager;","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"tlyi"},"content":"import seedu.duke.logic.commands.CommandResult;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"tlyi"},"content":"import seedu.duke.state.StartState;","lastModifiedDate":"2021-11-07"},{"lineNumber":7,"author":{"gitId":"weidak"},"content":"import seedu.duke.storage.Storage;","lastModifiedDate":"2021-11-08"},{"lineNumber":8,"author":{"gitId":"tlyi"},"content":"import seedu.duke.storage.StorageManager;","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"tlyi"},"content":"import seedu.duke.storage.exceptions.UnableToWriteFileException;","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"tlyi"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"tlyi"},"content":"/**","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"tlyi"},"content":" * Main class of Fitbot.","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"tlyi"},"content":" * Initialises the application and starts interaction with user.","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"tlyi"},"content":" */","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"tlyi"},"content":"public class Main {","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"weidak"},"content":"    private DataManager dataManager;","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"tlyi"},"content":"    private Ui ui;","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"weidak"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"tlyi"},"content":"    private LogicManager logicManager;","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"tttyyzzz"},"content":"    private StartState startState;","lastModifiedDate":"2021-11-08"},{"lineNumber":23,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":24,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":26,"author":{"gitId":"tlyi"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"tlyi"},"content":"     * Entry point of the application.","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"tlyi"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"tlyi"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-11-07"},{"lineNumber":30,"author":{"gitId":"tlyi"},"content":"        new Main().run(args);","lastModifiedDate":"2021-10-10"},{"lineNumber":31,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"tlyi"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":34,"author":{"gitId":"tlyi"},"content":"     * Runs the application until command is given to exit it.","lastModifiedDate":"2021-10-10"},{"lineNumber":35,"author":{"gitId":"tlyi"},"content":"     **/","lastModifiedDate":"2021-10-10"},{"lineNumber":36,"author":{"gitId":"tlyi"},"content":"    private void run(String[] args) {","lastModifiedDate":"2021-11-07"},{"lineNumber":37,"author":{"gitId":"tlyi"},"content":"        start();","lastModifiedDate":"2021-10-10"},{"lineNumber":38,"author":{"gitId":"tttyyzzz"},"content":"        checkAndCreateProfile();","lastModifiedDate":"2021-10-26"},{"lineNumber":39,"author":{"gitId":"tlyi"},"content":"        enterTaskModeUntilByeCommand();","lastModifiedDate":"2021-10-10"},{"lineNumber":40,"author":{"gitId":"tlyi"},"content":"        exit();","lastModifiedDate":"2021-10-10"},{"lineNumber":41,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":42,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":43,"author":{"gitId":"tttyyzzz"},"content":"    //@@author tttyyzzz","lastModifiedDate":"2021-10-27"},{"lineNumber":44,"author":{"gitId":"tttyyzzz"},"content":"    /**","lastModifiedDate":"2021-11-08"},{"lineNumber":45,"author":{"gitId":"tttyyzzz"},"content":"     * Checks the attributes of profile in dataManager.","lastModifiedDate":"2021-11-08"},{"lineNumber":46,"author":{"gitId":"tttyyzzz"},"content":"     */","lastModifiedDate":"2021-11-08"},{"lineNumber":47,"author":{"gitId":"tttyyzzz"},"content":"    private void checkAndCreateProfile() {","lastModifiedDate":"2021-10-26"},{"lineNumber":48,"author":{"gitId":"tttyyzzz"},"content":"        dataManager.setProfile(startState.checkAndCreateProfile());","lastModifiedDate":"2021-11-08"},{"lineNumber":49,"author":{"gitId":"tttyyzzz"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":50,"author":{"gitId":"tttyyzzz"},"content":"    //@@author","lastModifiedDate":"2021-10-27"},{"lineNumber":51,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":52,"author":{"gitId":"tlyi"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":53,"author":{"gitId":"tlyi"},"content":"     * Initialises the application by creating the required objects and loading data from the","lastModifiedDate":"2021-10-13"},{"lineNumber":54,"author":{"gitId":"tlyi"},"content":"     * storage file, then showing the welcome message.","lastModifiedDate":"2021-10-10"},{"lineNumber":55,"author":{"gitId":"tlyi"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":56,"author":{"gitId":"tlyi"},"content":"    private void start() {","lastModifiedDate":"2021-10-10"},{"lineNumber":57,"author":{"gitId":"weidak"},"content":"        this.storageManager \u003d new StorageManager();","lastModifiedDate":"2021-10-20"},{"lineNumber":58,"author":{"gitId":"tlyi"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2021-10-11"},{"lineNumber":59,"author":{"gitId":"weidak"},"content":"        this.dataManager \u003d storageManager.loadAll();","lastModifiedDate":"2021-11-02"},{"lineNumber":60,"author":{"gitId":"weidak"},"content":"        this.logicManager \u003d new LogicManager(storageManager, dataManager);","lastModifiedDate":"2021-10-27"},{"lineNumber":61,"author":{"gitId":"tttyyzzz"},"content":"        this.startState \u003d new StartState(dataManager.getProfile(), storageManager, ui);","lastModifiedDate":"2021-11-08"},{"lineNumber":62,"author":{"gitId":"weidak"},"content":"        ui.printStartMessage(","lastModifiedDate":"2021-10-27"},{"lineNumber":63,"author":{"gitId":"weidak"},"content":"                dataManager.getProfile().checkProfileComplete(),","lastModifiedDate":"2021-10-27"},{"lineNumber":64,"author":{"gitId":"weidak"},"content":"                dataManager.getProfile().checkProfilePresent());","lastModifiedDate":"2021-10-27"},{"lineNumber":65,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":66,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":67,"author":{"gitId":"tlyi"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":68,"author":{"gitId":"tlyi"},"content":"     * Reads the user input and executes appropriate command.","lastModifiedDate":"2021-10-10"},{"lineNumber":69,"author":{"gitId":"tlyi"},"content":"     * Runs indefinitely until user inputs the Bye command.","lastModifiedDate":"2021-10-10"},{"lineNumber":70,"author":{"gitId":"tlyi"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":71,"author":{"gitId":"tlyi"},"content":"    private void enterTaskModeUntilByeCommand() {","lastModifiedDate":"2021-10-10"},{"lineNumber":72,"author":{"gitId":"tlyi"},"content":"        CommandResult result;","lastModifiedDate":"2021-10-27"},{"lineNumber":73,"author":{"gitId":"tlyi"},"content":"        do {","lastModifiedDate":"2021-10-10"},{"lineNumber":74,"author":{"gitId":"tlyi"},"content":"            String userInput \u003d ui.getUserInput();","lastModifiedDate":"2021-10-11"},{"lineNumber":75,"author":{"gitId":"tlyi"},"content":"            result \u003d logicManager.execute(userInput);","lastModifiedDate":"2021-10-27"},{"lineNumber":76,"author":{"gitId":"tlyi"},"content":"            ui.formatMessageFramedWithDivider(result.toString());","lastModifiedDate":"2021-10-11"},{"lineNumber":77,"author":{"gitId":"tlyi"},"content":"        } while (!result.isBye());","lastModifiedDate":"2021-10-27"},{"lineNumber":78,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":79,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":80,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":81,"author":{"gitId":"tlyi"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":82,"author":{"gitId":"tlyi"},"content":"     * Exits the application.","lastModifiedDate":"2021-10-10"},{"lineNumber":83,"author":{"gitId":"tlyi"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":84,"author":{"gitId":"tlyi"},"content":"    private void exit() {","lastModifiedDate":"2021-10-10"},{"lineNumber":85,"author":{"gitId":"tlyi"},"content":"        System.exit(0);","lastModifiedDate":"2021-10-10"},{"lineNumber":86,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":87,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":88,"author":{"gitId":"tlyi"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"weidak":10,"tttyyzzz":14,"xingjie99":1,"tlyi":63}},{"path":"src/main/java/seedu/duke/data/DataManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weidak"},"content":"package seedu.duke.data;","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":3,"author":{"gitId":"tryyang2001"},"content":"import seedu.duke.data.item.Item;","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"weidak"},"content":"import seedu.duke.data.item.ItemBank;","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"tryyang2001"},"content":"import seedu.duke.data.item.exercise.Exercise;","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"weidak"},"content":"import seedu.duke.data.item.exercise.ExerciseList;","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"weidak"},"content":"import seedu.duke.data.item.exercise.FutureExerciseList;","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"tryyang2001"},"content":"import seedu.duke.data.item.food.Food;","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"weidak"},"content":"import seedu.duke.data.item.food.FoodList;","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"weidak"},"content":"import seedu.duke.data.profile.Profile;","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"tryyang2001"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"weidak"},"content":"/**","lastModifiedDate":"2021-10-30"},{"lineNumber":15,"author":{"gitId":"weidak"},"content":" * Manages the data that is processed by the application.","lastModifiedDate":"2021-10-30"},{"lineNumber":16,"author":{"gitId":"weidak"},"content":" */","lastModifiedDate":"2021-10-30"},{"lineNumber":17,"author":{"gitId":"weidak"},"content":"public class DataManager {","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"tryyang2001"},"content":"    private ExerciseList filteredExerciseItems;","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"weidak"},"content":"    private ExerciseList exerciseItems;","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"weidak"},"content":"    private FutureExerciseList futureExerciseItems;","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"tryyang2001"},"content":"    private FoodList filteredFoodItems;","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"weidak"},"content":"    private FoodList foodItems;","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"weidak"},"content":"    private ItemBank exerciseBank;","lastModifiedDate":"2021-10-27"},{"lineNumber":25,"author":{"gitId":"weidak"},"content":"    private ItemBank foodBank;","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"weidak"},"content":"    private Profile profile;","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":28,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":29,"author":{"gitId":"weidak"},"content":"     * Handles the different types of data going into and out of the bot.","lastModifiedDate":"2021-10-27"},{"lineNumber":30,"author":{"gitId":"weidak"},"content":"     * Used for storage purposes.","lastModifiedDate":"2021-10-27"},{"lineNumber":31,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"weidak"},"content":"     * @param exerciseItems       Exercises items to be initialized","lastModifiedDate":"2021-10-27"},{"lineNumber":33,"author":{"gitId":"weidak"},"content":"     * @param futureExerciseItems Upcoming exercise items to be initialized","lastModifiedDate":"2021-10-27"},{"lineNumber":34,"author":{"gitId":"weidak"},"content":"     * @param foodItems           Food items to be initialized","lastModifiedDate":"2021-10-27"},{"lineNumber":35,"author":{"gitId":"weidak"},"content":"     * @param exerciseBank        Exercise bank items to be initialized","lastModifiedDate":"2021-10-27"},{"lineNumber":36,"author":{"gitId":"weidak"},"content":"     * @param foodBank            Food bank items to be initialized","lastModifiedDate":"2021-10-27"},{"lineNumber":37,"author":{"gitId":"weidak"},"content":"     * @param profile             Profile to be initialized","lastModifiedDate":"2021-10-27"},{"lineNumber":38,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":39,"author":{"gitId":"weidak"},"content":"    public DataManager(ExerciseList exerciseItems, FutureExerciseList futureExerciseItems, FoodList foodItems,","lastModifiedDate":"2021-10-27"},{"lineNumber":40,"author":{"gitId":"weidak"},"content":"                       ItemBank exerciseBank, ItemBank foodBank, Profile profile) {","lastModifiedDate":"2021-10-27"},{"lineNumber":41,"author":{"gitId":"weidak"},"content":"        this.exerciseItems \u003d exerciseItems;","lastModifiedDate":"2021-10-27"},{"lineNumber":42,"author":{"gitId":"weidak"},"content":"        this.futureExerciseItems \u003d futureExerciseItems;","lastModifiedDate":"2021-10-27"},{"lineNumber":43,"author":{"gitId":"weidak"},"content":"        this.foodItems \u003d foodItems;","lastModifiedDate":"2021-10-27"},{"lineNumber":44,"author":{"gitId":"weidak"},"content":"        this.exerciseBank \u003d exerciseBank;","lastModifiedDate":"2021-10-27"},{"lineNumber":45,"author":{"gitId":"weidak"},"content":"        this.foodBank \u003d foodBank;","lastModifiedDate":"2021-10-27"},{"lineNumber":46,"author":{"gitId":"weidak"},"content":"        this.profile \u003d profile;","lastModifiedDate":"2021-10-27"},{"lineNumber":47,"author":{"gitId":"weidak"},"content":"        loadsFutureExercisesToList();","lastModifiedDate":"2021-11-02"},{"lineNumber":48,"author":{"gitId":"tryyang2001"},"content":"        filterExerciseListAndFoodList();","lastModifiedDate":"2021-10-27"},{"lineNumber":49,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":50,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":51,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":52,"author":{"gitId":"xingjie99"},"content":"    //@@author xingjie99","lastModifiedDate":"2021-11-02"},{"lineNumber":53,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":54,"author":{"gitId":"xingjie99"},"content":"    /**","lastModifiedDate":"2021-11-02"},{"lineNumber":55,"author":{"gitId":"xingjie99"},"content":"     * Check whether the dates of the exercises in the future exercise list have passed.","lastModifiedDate":"2021-11-02"},{"lineNumber":56,"author":{"gitId":"xingjie99"},"content":"     * If the dates have passed, move the exercises in the exercise list.","lastModifiedDate":"2021-11-02"},{"lineNumber":57,"author":{"gitId":"xingjie99"},"content":"     */","lastModifiedDate":"2021-11-02"},{"lineNumber":58,"author":{"gitId":"xingjie99"},"content":"    private void loadsFutureExercisesToList() {","lastModifiedDate":"2021-11-02"},{"lineNumber":59,"author":{"gitId":"xingjie99"},"content":"        int index \u003d 0;","lastModifiedDate":"2021-11-02"},{"lineNumber":60,"author":{"gitId":"xingjie99"},"content":"        LocalDate today \u003d LocalDate.now();","lastModifiedDate":"2021-11-02"},{"lineNumber":61,"author":{"gitId":"xingjie99"},"content":"        while (futureExerciseItems.getSize() !\u003d 0","lastModifiedDate":"2021-11-02"},{"lineNumber":62,"author":{"gitId":"xingjie99"},"content":"                \u0026\u0026 (futureExerciseItems.getItem(index).getDate().isBefore(today)","lastModifiedDate":"2021-11-02"},{"lineNumber":63,"author":{"gitId":"xingjie99"},"content":"                || futureExerciseItems.getItem(index).getDate().isEqual(today))) {","lastModifiedDate":"2021-11-02"},{"lineNumber":64,"author":{"gitId":"xingjie99"},"content":"            String name \u003d futureExerciseItems.getItem(index).getName();","lastModifiedDate":"2021-11-02"},{"lineNumber":65,"author":{"gitId":"xingjie99"},"content":"            int calories \u003d futureExerciseItems.getItem(index).getCalories();","lastModifiedDate":"2021-11-02"},{"lineNumber":66,"author":{"gitId":"xingjie99"},"content":"            LocalDate date \u003d futureExerciseItems.getItem(index).getDate();","lastModifiedDate":"2021-11-02"},{"lineNumber":67,"author":{"gitId":"xingjie99"},"content":"            exerciseItems.addItem(new Exercise(name, calories, date));","lastModifiedDate":"2021-11-02"},{"lineNumber":68,"author":{"gitId":"xingjie99"},"content":"            futureExerciseItems.deleteItem(index);","lastModifiedDate":"2021-11-02"},{"lineNumber":69,"author":{"gitId":"xingjie99"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":70,"author":{"gitId":"xingjie99"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":71,"author":{"gitId":"xingjie99"},"content":"    //@@author","lastModifiedDate":"2021-11-02"},{"lineNumber":72,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":73,"author":{"gitId":"tryyang2001"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003dFiltered Lists methods\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-27"},{"lineNumber":74,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":75,"author":{"gitId":"tryyang2001"},"content":"    /**","lastModifiedDate":"2021-10-28"},{"lineNumber":76,"author":{"gitId":"tryyang2001"},"content":"     * Returns the filtered Exercise List.","lastModifiedDate":"2021-10-28"},{"lineNumber":77,"author":{"gitId":"tryyang2001"},"content":"     *","lastModifiedDate":"2021-10-28"},{"lineNumber":78,"author":{"gitId":"tryyang2001"},"content":"     * @return filtered exercise list in DataManager object","lastModifiedDate":"2021-10-28"},{"lineNumber":79,"author":{"gitId":"tryyang2001"},"content":"     */","lastModifiedDate":"2021-10-28"},{"lineNumber":80,"author":{"gitId":"tryyang2001"},"content":"    public ExerciseList getFilteredExerciseItems() {","lastModifiedDate":"2021-10-27"},{"lineNumber":81,"author":{"gitId":"tryyang2001"},"content":"        return filteredExerciseItems;","lastModifiedDate":"2021-10-27"},{"lineNumber":82,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":83,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":84,"author":{"gitId":"tryyang2001"},"content":"    /**","lastModifiedDate":"2021-10-28"},{"lineNumber":85,"author":{"gitId":"tryyang2001"},"content":"     * Returns the filtered Food List.","lastModifiedDate":"2021-10-28"},{"lineNumber":86,"author":{"gitId":"tryyang2001"},"content":"     *","lastModifiedDate":"2021-10-28"},{"lineNumber":87,"author":{"gitId":"tryyang2001"},"content":"     * @return filtered food list in DataManager object","lastModifiedDate":"2021-10-28"},{"lineNumber":88,"author":{"gitId":"tryyang2001"},"content":"     */","lastModifiedDate":"2021-10-28"},{"lineNumber":89,"author":{"gitId":"tryyang2001"},"content":"    public FoodList getFilteredFoodItems() {","lastModifiedDate":"2021-10-27"},{"lineNumber":90,"author":{"gitId":"tryyang2001"},"content":"        return filteredFoodItems;","lastModifiedDate":"2021-10-27"},{"lineNumber":91,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":92,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":93,"author":{"gitId":"tryyang2001"},"content":"    /**","lastModifiedDate":"2021-10-28"},{"lineNumber":94,"author":{"gitId":"tryyang2001"},"content":"     * Filters exercise list and food list that are within 7 days before today.","lastModifiedDate":"2021-10-28"},{"lineNumber":95,"author":{"gitId":"tryyang2001"},"content":"     */","lastModifiedDate":"2021-10-28"},{"lineNumber":96,"author":{"gitId":"tryyang2001"},"content":"    private void filterExerciseListAndFoodList() {","lastModifiedDate":"2021-10-28"},{"lineNumber":97,"author":{"gitId":"tryyang2001"},"content":"        this.filteredExerciseItems \u003d new ExerciseList();","lastModifiedDate":"2021-10-28"},{"lineNumber":98,"author":{"gitId":"tryyang2001"},"content":"        filterExerciseListWithPastSevenDaysRecordOnly();","lastModifiedDate":"2021-10-28"},{"lineNumber":99,"author":{"gitId":"tryyang2001"},"content":"        this.filteredFoodItems \u003d new FoodList();","lastModifiedDate":"2021-10-28"},{"lineNumber":100,"author":{"gitId":"tryyang2001"},"content":"        filterFoodListWithPastSevenDaysRecordOnly();","lastModifiedDate":"2021-10-28"},{"lineNumber":101,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":102,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":103,"author":{"gitId":"tryyang2001"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":104,"author":{"gitId":"tryyang2001"},"content":"     * Filters food list and add food items that are within 7 days before today.","lastModifiedDate":"2021-10-27"},{"lineNumber":105,"author":{"gitId":"tryyang2001"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":106,"author":{"gitId":"tryyang2001"},"content":"    private void filterFoodListWithPastSevenDaysRecordOnly() {","lastModifiedDate":"2021-10-27"},{"lineNumber":107,"author":{"gitId":"tryyang2001"},"content":"        LocalDate today \u003d LocalDate.now();","lastModifiedDate":"2021-10-27"},{"lineNumber":108,"author":{"gitId":"tryyang2001"},"content":"        for (int i \u003d foodItems.getSize() - 1; i \u003e\u003d 0; i--) {","lastModifiedDate":"2021-10-28"},{"lineNumber":109,"author":{"gitId":"tryyang2001"},"content":"            Food food \u003d (Food) foodItems.getItem(i);","lastModifiedDate":"2021-10-28"},{"lineNumber":110,"author":{"gitId":"tryyang2001"},"content":"            if (food.getDate().isBefore(today.minusDays(7))) {","lastModifiedDate":"2021-10-27"},{"lineNumber":111,"author":{"gitId":"tryyang2001"},"content":"                break;","lastModifiedDate":"2021-10-27"},{"lineNumber":112,"author":{"gitId":"tryyang2001"},"content":"            }","lastModifiedDate":"2021-10-27"},{"lineNumber":113,"author":{"gitId":"tryyang2001"},"content":"            if (isWithinPastSevenDays(food, today)) {","lastModifiedDate":"2021-10-27"},{"lineNumber":114,"author":{"gitId":"tryyang2001"},"content":"                filteredFoodItems.addItem(food);","lastModifiedDate":"2021-10-27"},{"lineNumber":115,"author":{"gitId":"tryyang2001"},"content":"            }","lastModifiedDate":"2021-10-27"},{"lineNumber":116,"author":{"gitId":"tryyang2001"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":117,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":118,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":119,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":120,"author":{"gitId":"tryyang2001"},"content":"     * Checks if the item is within 7 days of today.","lastModifiedDate":"2021-10-27"},{"lineNumber":121,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-10-27"},{"lineNumber":122,"author":{"gitId":"tryyang2001"},"content":"     * @param item The item from the item list","lastModifiedDate":"2021-10-27"},{"lineNumber":123,"author":{"gitId":"tryyang2001"},"content":"     * @return True if the item date is not before 7 days from today, and is not after today","lastModifiedDate":"2021-10-27"},{"lineNumber":124,"author":{"gitId":"tryyang2001"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":125,"author":{"gitId":"tryyang2001"},"content":"    private boolean isWithinPastSevenDays(Item item, LocalDate today) {","lastModifiedDate":"2021-10-27"},{"lineNumber":126,"author":{"gitId":"tryyang2001"},"content":"        boolean isBeforeOrEqualToday \u003d item.getDate().isEqual(today) || item.getDate().isBefore(today);","lastModifiedDate":"2021-10-27"},{"lineNumber":127,"author":{"gitId":"weidak"},"content":"        boolean isWithinOneWeek \u003d item.getDate().isAfter(today.minusDays(7));","lastModifiedDate":"2021-11-08"},{"lineNumber":128,"author":{"gitId":"tryyang2001"},"content":"        return isBeforeOrEqualToday \u0026\u0026 isWithinOneWeek;","lastModifiedDate":"2021-10-27"},{"lineNumber":129,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":130,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":131,"author":{"gitId":"tryyang2001"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":132,"author":{"gitId":"tryyang2001"},"content":"     * Filters exercise list and add exercises that are within 7 days before today.","lastModifiedDate":"2021-10-27"},{"lineNumber":133,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":134,"author":{"gitId":"tryyang2001"},"content":"    private void filterExerciseListWithPastSevenDaysRecordOnly() {","lastModifiedDate":"2021-10-27"},{"lineNumber":135,"author":{"gitId":"tryyang2001"},"content":"        LocalDate today \u003d LocalDate.now();","lastModifiedDate":"2021-10-27"},{"lineNumber":136,"author":{"gitId":"tryyang2001"},"content":"        for (int i \u003d exerciseItems.getSize() - 1; i \u003e\u003d 0; i--) {","lastModifiedDate":"2021-10-28"},{"lineNumber":137,"author":{"gitId":"tryyang2001"},"content":"            Exercise exercise \u003d (Exercise) exerciseItems.getItem(i);","lastModifiedDate":"2021-10-28"},{"lineNumber":138,"author":{"gitId":"tryyang2001"},"content":"            if (exercise.getDate().isBefore(today.minusDays(7))) {","lastModifiedDate":"2021-10-27"},{"lineNumber":139,"author":{"gitId":"tryyang2001"},"content":"                break;","lastModifiedDate":"2021-10-27"},{"lineNumber":140,"author":{"gitId":"tryyang2001"},"content":"            }","lastModifiedDate":"2021-10-27"},{"lineNumber":141,"author":{"gitId":"tryyang2001"},"content":"            if (isWithinPastSevenDays(exercise, today)) {","lastModifiedDate":"2021-10-27"},{"lineNumber":142,"author":{"gitId":"tryyang2001"},"content":"                filteredExerciseItems.addItem(exercise);","lastModifiedDate":"2021-10-27"},{"lineNumber":143,"author":{"gitId":"tryyang2001"},"content":"            }","lastModifiedDate":"2021-10-27"},{"lineNumber":144,"author":{"gitId":"weidak"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":145,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":146,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":147,"author":{"gitId":"weidak"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003dExerciseList methods\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-27"},{"lineNumber":148,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":149,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":150,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":151,"author":{"gitId":"weidak"},"content":"     * Returns the exercise list.","lastModifiedDate":"2021-10-27"},{"lineNumber":152,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-10-27"},{"lineNumber":153,"author":{"gitId":"weidak"},"content":"     * @return exercise list in DataManager object","lastModifiedDate":"2021-10-27"},{"lineNumber":154,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":155,"author":{"gitId":"weidak"},"content":"    public ExerciseList getExerciseItems() {","lastModifiedDate":"2021-10-27"},{"lineNumber":156,"author":{"gitId":"tryyang2001"},"content":"        return this.exerciseItems;","lastModifiedDate":"2021-10-28"},{"lineNumber":157,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":158,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":159,"author":{"gitId":"weidak"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003dFutureExerciseList methods\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-27"},{"lineNumber":160,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":161,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":162,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":163,"author":{"gitId":"weidak"},"content":"     * Returns the future exercise items.","lastModifiedDate":"2021-10-27"},{"lineNumber":164,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-10-27"},{"lineNumber":165,"author":{"gitId":"weidak"},"content":"     * @return future exercise list in DataManager object","lastModifiedDate":"2021-10-27"},{"lineNumber":166,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":167,"author":{"gitId":"weidak"},"content":"    public FutureExerciseList getFutureExerciseItems() {","lastModifiedDate":"2021-10-27"},{"lineNumber":168,"author":{"gitId":"weidak"},"content":"        return this.futureExerciseItems;","lastModifiedDate":"2021-10-27"},{"lineNumber":169,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":170,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":171,"author":{"gitId":"weidak"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003dFoodList methods\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-27"},{"lineNumber":172,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":173,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":174,"author":{"gitId":"weidak"},"content":"     * Returns the food items.","lastModifiedDate":"2021-10-27"},{"lineNumber":175,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-10-27"},{"lineNumber":176,"author":{"gitId":"weidak"},"content":"     * @return food items in DataManager object","lastModifiedDate":"2021-10-27"},{"lineNumber":177,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":178,"author":{"gitId":"weidak"},"content":"    public FoodList getFoodItems() {","lastModifiedDate":"2021-10-27"},{"lineNumber":179,"author":{"gitId":"tryyang2001"},"content":"        return this.foodItems;","lastModifiedDate":"2021-10-28"},{"lineNumber":180,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":181,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":182,"author":{"gitId":"weidak"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003dFoodBank methods\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-27"},{"lineNumber":183,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":184,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":185,"author":{"gitId":"weidak"},"content":"     * Returns food bank items.","lastModifiedDate":"2021-10-27"},{"lineNumber":186,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-10-27"},{"lineNumber":187,"author":{"gitId":"weidak"},"content":"     * @return food bank items in DataManager object","lastModifiedDate":"2021-10-27"},{"lineNumber":188,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":189,"author":{"gitId":"weidak"},"content":"    public ItemBank getFoodBank() {","lastModifiedDate":"2021-10-27"},{"lineNumber":190,"author":{"gitId":"weidak"},"content":"        return this.foodBank;","lastModifiedDate":"2021-10-27"},{"lineNumber":191,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":192,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":193,"author":{"gitId":"weidak"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003dExerciseBank methods\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-27"},{"lineNumber":194,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":195,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":196,"author":{"gitId":"weidak"},"content":"     * Returns exercise bank items.","lastModifiedDate":"2021-10-27"},{"lineNumber":197,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-10-27"},{"lineNumber":198,"author":{"gitId":"weidak"},"content":"     * @return exercise bank items in DataManager object","lastModifiedDate":"2021-10-27"},{"lineNumber":199,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":200,"author":{"gitId":"weidak"},"content":"    public ItemBank getExerciseBank() {","lastModifiedDate":"2021-10-27"},{"lineNumber":201,"author":{"gitId":"weidak"},"content":"        return this.exerciseBank;","lastModifiedDate":"2021-10-27"},{"lineNumber":202,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":203,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":204,"author":{"gitId":"weidak"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003dProfile method\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-27"},{"lineNumber":205,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":206,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":207,"author":{"gitId":"weidak"},"content":"     * Replaces profile with data in {@code profile}.","lastModifiedDate":"2021-10-27"},{"lineNumber":208,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-10-27"},{"lineNumber":209,"author":{"gitId":"weidak"},"content":"     * @param profile profile to be set","lastModifiedDate":"2021-10-27"},{"lineNumber":210,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":211,"author":{"gitId":"weidak"},"content":"    public void setProfile(Profile profile) {","lastModifiedDate":"2021-10-27"},{"lineNumber":212,"author":{"gitId":"weidak"},"content":"        this.profile \u003d profile;","lastModifiedDate":"2021-10-27"},{"lineNumber":213,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":214,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":215,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":216,"author":{"gitId":"weidak"},"content":"     * Returns profile.","lastModifiedDate":"2021-10-27"},{"lineNumber":217,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-10-27"},{"lineNumber":218,"author":{"gitId":"weidak"},"content":"     * @return profile in DataManager object","lastModifiedDate":"2021-10-27"},{"lineNumber":219,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":220,"author":{"gitId":"weidak"},"content":"    public Profile getProfile() {","lastModifiedDate":"2021-10-27"},{"lineNumber":221,"author":{"gitId":"weidak"},"content":"        return this.profile;","lastModifiedDate":"2021-10-27"},{"lineNumber":222,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":223,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":224,"author":{"gitId":"weidak"},"content":"}","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"weidak":124,"tryyang2001":80,"xingjie99":20}},{"path":"src/main/java/seedu/duke/data/Verifiable.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weidak"},"content":"package seedu.duke.data;","lastModifiedDate":"2021-10-30"},{"lineNumber":2,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"weidak"},"content":"/**","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"weidak"},"content":" * Interface that implements verifiability to various objects.","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"weidak"},"content":" */","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"weidak"},"content":"public interface Verifiable {","lastModifiedDate":"2021-10-30"},{"lineNumber":7,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"weidak"},"content":"     * Implements a simple check that verifies if the attribute tied to Verifiable is valid.","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"weidak"},"content":"     * @return True if valid, false if invalid as specified by each attribute","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"weidak"},"content":"    boolean isValid();","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"weidak"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"weidak":13}},{"path":"src/main/java/seedu/duke/data/item/Item.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.data.item;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":3,"author":{"gitId":"weidak"},"content":"import seedu.duke.data.Verifiable;","lastModifiedDate":"2021-10-30"},{"lineNumber":4,"author":{"gitId":"tlyi"},"content":"import seedu.duke.data.item.food.TimePeriod;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"tryyang2001"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"tryyang2001"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"tryyang2001"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"tryyang2001"},"content":"/**","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"tryyang2001"},"content":" * Item is an abstract class that contains methods used in common in Food and Exercise classes.","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"tryyang2001"},"content":" */","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"weidak"},"content":"public abstract class Item implements Verifiable {","lastModifiedDate":"2021-10-30"},{"lineNumber":14,"author":{"gitId":"tryyang2001"},"content":"    public static final String FILE_TEXT_DELIMITER \u003d \"|\";","lastModifiedDate":"2021-10-16"},{"lineNumber":15,"author":{"gitId":"tryyang2001"},"content":"    public static final DateTimeFormatter TIME_FORMATTER \u003d DateTimeFormatter.ofPattern(\"HH:mm\");","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"tryyang2001"},"content":"    public static final DateTimeFormatter DATE_FORMATTER_FOR_STORAGE \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy\");","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"tryyang2001"},"content":"    public static final DateTimeFormatter DATE_TIME_FORMATTER \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\");","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"tryyang2001"},"content":"    public static final DateTimeFormatter DATE_FORMAT_FOR_PRINTING \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy\");","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"tryyang2001"},"content":"    public static final String PREFIX_DELIMITER \u003d \"/\";","lastModifiedDate":"2021-10-30"},{"lineNumber":20,"author":{"gitId":"tryyang2001"},"content":"    public static final int HIGHEST_CALORIE \u003d 10000;","lastModifiedDate":"2021-11-04"},{"lineNumber":21,"author":{"gitId":"tryyang2001"},"content":"    public static final int LOWEST_CALORIE \u003d 0;","lastModifiedDate":"2021-11-04"},{"lineNumber":22,"author":{"gitId":"tryyang2001"},"content":"    protected String name;","lastModifiedDate":"2021-10-16"},{"lineNumber":23,"author":{"gitId":"tryyang2001"},"content":"    protected int calories;","lastModifiedDate":"2021-10-16"},{"lineNumber":24,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":25,"author":{"gitId":"tryyang2001"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":26,"author":{"gitId":"tryyang2001"},"content":"     * Constructor for item object.","lastModifiedDate":"2021-10-16"},{"lineNumber":27,"author":{"gitId":"tryyang2001"},"content":"     *","lastModifiedDate":"2021-10-16"},{"lineNumber":28,"author":{"gitId":"tryyang2001"},"content":"     * @param name     The name or description of the item","lastModifiedDate":"2021-10-16"},{"lineNumber":29,"author":{"gitId":"tryyang2001"},"content":"     * @param calories The calorie intake/burnt from the item","lastModifiedDate":"2021-10-16"},{"lineNumber":30,"author":{"gitId":"tryyang2001"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":31,"author":{"gitId":"tryyang2001"},"content":"    public Item(String name, int calories) {","lastModifiedDate":"2021-10-16"},{"lineNumber":32,"author":{"gitId":"tryyang2001"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-10-16"},{"lineNumber":33,"author":{"gitId":"tryyang2001"},"content":"        this.calories \u003d calories;","lastModifiedDate":"2021-10-16"},{"lineNumber":34,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":35,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":36,"author":{"gitId":"tryyang2001"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003dGetter and Setter Methods\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-28"},{"lineNumber":37,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":38,"author":{"gitId":"tryyang2001"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":39,"author":{"gitId":"tryyang2001"},"content":"     * Gets the name or description of the item.","lastModifiedDate":"2021-10-16"},{"lineNumber":40,"author":{"gitId":"tryyang2001"},"content":"     *","lastModifiedDate":"2021-10-16"},{"lineNumber":41,"author":{"gitId":"tryyang2001"},"content":"     * @return The name or description of the item","lastModifiedDate":"2021-10-16"},{"lineNumber":42,"author":{"gitId":"tryyang2001"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":43,"author":{"gitId":"tryyang2001"},"content":"    public String getName() {","lastModifiedDate":"2021-10-16"},{"lineNumber":44,"author":{"gitId":"tryyang2001"},"content":"        return this.name;","lastModifiedDate":"2021-10-16"},{"lineNumber":45,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":46,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":47,"author":{"gitId":"tryyang2001"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":48,"author":{"gitId":"tryyang2001"},"content":"     * Gets the calorie intake/burnt for the item.","lastModifiedDate":"2021-10-16"},{"lineNumber":49,"author":{"gitId":"tryyang2001"},"content":"     *","lastModifiedDate":"2021-10-16"},{"lineNumber":50,"author":{"gitId":"tryyang2001"},"content":"     * @return The calorie intake/burnt from the item","lastModifiedDate":"2021-10-16"},{"lineNumber":51,"author":{"gitId":"tryyang2001"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":52,"author":{"gitId":"tryyang2001"},"content":"    public int getCalories() {","lastModifiedDate":"2021-10-16"},{"lineNumber":53,"author":{"gitId":"tryyang2001"},"content":"        return this.calories;","lastModifiedDate":"2021-10-16"},{"lineNumber":54,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":55,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":56,"author":{"gitId":"tryyang2001"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":57,"author":{"gitId":"tryyang2001"},"content":"     * Updates the name or description of the item.","lastModifiedDate":"2021-10-16"},{"lineNumber":58,"author":{"gitId":"tryyang2001"},"content":"     *","lastModifiedDate":"2021-10-16"},{"lineNumber":59,"author":{"gitId":"tryyang2001"},"content":"     * @param name The new name or description of the item","lastModifiedDate":"2021-10-16"},{"lineNumber":60,"author":{"gitId":"tryyang2001"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":61,"author":{"gitId":"tryyang2001"},"content":"    public void setName(String name) {","lastModifiedDate":"2021-10-16"},{"lineNumber":62,"author":{"gitId":"tryyang2001"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-10-16"},{"lineNumber":63,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":64,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":65,"author":{"gitId":"tryyang2001"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":66,"author":{"gitId":"tryyang2001"},"content":"     * Updates the calorie intake/burnt from the item.","lastModifiedDate":"2021-10-16"},{"lineNumber":67,"author":{"gitId":"tryyang2001"},"content":"     *","lastModifiedDate":"2021-10-16"},{"lineNumber":68,"author":{"gitId":"tryyang2001"},"content":"     * @param calories The new calorie intake/burnt from the item","lastModifiedDate":"2021-10-16"},{"lineNumber":69,"author":{"gitId":"tryyang2001"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":70,"author":{"gitId":"tryyang2001"},"content":"    public void setCalories(int calories) {","lastModifiedDate":"2021-10-16"},{"lineNumber":71,"author":{"gitId":"tryyang2001"},"content":"        this.calories \u003d calories;","lastModifiedDate":"2021-10-16"},{"lineNumber":72,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":73,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":74,"author":{"gitId":"tryyang2001"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003dNon-abstract methods\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-28"},{"lineNumber":75,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":76,"author":{"gitId":"tryyang2001"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":77,"author":{"gitId":"tryyang2001"},"content":"     * Converts the item in correct string format.","lastModifiedDate":"2021-10-16"},{"lineNumber":78,"author":{"gitId":"tryyang2001"},"content":"     *","lastModifiedDate":"2021-10-16"},{"lineNumber":79,"author":{"gitId":"tryyang2001"},"content":"     * @return The item name and calorie displayed in string","lastModifiedDate":"2021-10-16"},{"lineNumber":80,"author":{"gitId":"tryyang2001"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":81,"author":{"gitId":"tryyang2001"},"content":"    @Override","lastModifiedDate":"2021-10-16"},{"lineNumber":82,"author":{"gitId":"tryyang2001"},"content":"    public String toString() {","lastModifiedDate":"2021-10-16"},{"lineNumber":83,"author":{"gitId":"tryyang2001"},"content":"        return this.getName() + \" (\" + this.getCalories() + \" cal)\";","lastModifiedDate":"2021-10-16"},{"lineNumber":84,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":85,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":86,"author":{"gitId":"tryyang2001"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":87,"author":{"gitId":"tryyang2001"},"content":"     * Converts the item to external file string format.","lastModifiedDate":"2021-10-16"},{"lineNumber":88,"author":{"gitId":"tryyang2001"},"content":"     *","lastModifiedDate":"2021-10-16"},{"lineNumber":89,"author":{"gitId":"tryyang2001"},"content":"     * @return Name and calorie of the item in string","lastModifiedDate":"2021-10-16"},{"lineNumber":90,"author":{"gitId":"tryyang2001"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":91,"author":{"gitId":"tryyang2001"},"content":"    public String toFileTextString() {","lastModifiedDate":"2021-10-16"},{"lineNumber":92,"author":{"gitId":"tryyang2001"},"content":"        return FILE_TEXT_DELIMITER + this.getName() + FILE_TEXT_DELIMITER + this.getCalories();","lastModifiedDate":"2021-10-16"},{"lineNumber":93,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":94,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":95,"author":{"gitId":"tryyang2001"},"content":"    /**","lastModifiedDate":"2021-10-30"},{"lineNumber":96,"author":{"gitId":"tryyang2001"},"content":"     * Checks if the name of the item is valid.","lastModifiedDate":"2021-10-30"},{"lineNumber":97,"author":{"gitId":"tryyang2001"},"content":"     *","lastModifiedDate":"2021-10-30"},{"lineNumber":98,"author":{"gitId":"tryyang2001"},"content":"     * @return True if the item name is valid, false otherwise","lastModifiedDate":"2021-10-30"},{"lineNumber":99,"author":{"gitId":"tryyang2001"},"content":"     */","lastModifiedDate":"2021-10-30"},{"lineNumber":100,"author":{"gitId":"tryyang2001"},"content":"    @Override","lastModifiedDate":"2021-10-30"},{"lineNumber":101,"author":{"gitId":"tryyang2001"},"content":"    public boolean isValid() {","lastModifiedDate":"2021-10-30"},{"lineNumber":102,"author":{"gitId":"tryyang2001"},"content":"        boolean isValidName \u003d !name.contains(PREFIX_DELIMITER) \u0026\u0026 !name.contains(FILE_TEXT_DELIMITER);","lastModifiedDate":"2021-11-04"},{"lineNumber":103,"author":{"gitId":"tryyang2001"},"content":"        boolean isValidCalorie \u003d this.calories \u003e LOWEST_CALORIE \u0026\u0026 this.calories \u003c\u003d HIGHEST_CALORIE;","lastModifiedDate":"2021-11-04"},{"lineNumber":104,"author":{"gitId":"tryyang2001"},"content":"        return isValidName \u0026\u0026 isValidCalorie;","lastModifiedDate":"2021-11-04"},{"lineNumber":105,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":106,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":107,"author":{"gitId":"tryyang2001"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003dAbstract methods\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-28"},{"lineNumber":108,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":109,"author":{"gitId":"tryyang2001"},"content":"    /**","lastModifiedDate":"2021-10-28"},{"lineNumber":110,"author":{"gitId":"tryyang2001"},"content":"     * Converts the item in string format which only shows the item name description and calorie,","lastModifiedDate":"2021-10-28"},{"lineNumber":111,"author":{"gitId":"tryyang2001"},"content":"     * will be implemented in Food and Exercise classes.","lastModifiedDate":"2021-10-28"},{"lineNumber":112,"author":{"gitId":"tryyang2001"},"content":"     *","lastModifiedDate":"2021-10-28"},{"lineNumber":113,"author":{"gitId":"tryyang2001"},"content":"     * @return The item name and calorie display","lastModifiedDate":"2021-10-28"},{"lineNumber":114,"author":{"gitId":"tryyang2001"},"content":"     */","lastModifiedDate":"2021-10-28"},{"lineNumber":115,"author":{"gitId":"tryyang2001"},"content":"    public abstract String toStringWithoutDateAndTime();","lastModifiedDate":"2021-10-28"},{"lineNumber":116,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":117,"author":{"gitId":"tryyang2001"},"content":"    /**","lastModifiedDate":"2021-10-28"},{"lineNumber":118,"author":{"gitId":"tryyang2001"},"content":"     * Converts the item in the string format same as toString method but with date.","lastModifiedDate":"2021-10-28"},{"lineNumber":119,"author":{"gitId":"tryyang2001"},"content":"     *","lastModifiedDate":"2021-10-30"},{"lineNumber":120,"author":{"gitId":"tryyang2001"},"content":"     * @return The item name, calorie and date in string","lastModifiedDate":"2021-10-28"},{"lineNumber":121,"author":{"gitId":"tryyang2001"},"content":"     */","lastModifiedDate":"2021-10-28"},{"lineNumber":122,"author":{"gitId":"tryyang2001"},"content":"    public abstract String toStringWithDate();","lastModifiedDate":"2021-10-28"},{"lineNumber":123,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":124,"author":{"gitId":"tryyang2001"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":125,"author":{"gitId":"tryyang2001"},"content":"     * Gets the date of the item, will be implemented in Food and Exercise classes.","lastModifiedDate":"2021-10-19"},{"lineNumber":126,"author":{"gitId":"tryyang2001"},"content":"     *","lastModifiedDate":"2021-10-19"},{"lineNumber":127,"author":{"gitId":"tryyang2001"},"content":"     * @return The date of the item","lastModifiedDate":"2021-10-19"},{"lineNumber":128,"author":{"gitId":"tryyang2001"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":129,"author":{"gitId":"tryyang2001"},"content":"    public abstract LocalDate getDate();","lastModifiedDate":"2021-10-19"},{"lineNumber":130,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":131,"author":{"gitId":"tlyi"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":132,"author":{"gitId":"tlyi"},"content":"     * Updates the date. To be implemented in Exercise class.","lastModifiedDate":"2021-10-24"},{"lineNumber":133,"author":{"gitId":"tlyi"},"content":"     *","lastModifiedDate":"2021-10-24"},{"lineNumber":134,"author":{"gitId":"tlyi"},"content":"     * @param date The new date of the exercise done in LocalDate","lastModifiedDate":"2021-10-24"},{"lineNumber":135,"author":{"gitId":"tlyi"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":136,"author":{"gitId":"tlyi"},"content":"    public abstract void setDate(LocalDate date);","lastModifiedDate":"2021-10-24"},{"lineNumber":137,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":138,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":139,"author":{"gitId":"tryyang2001"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003dFood Item methods\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-28"},{"lineNumber":140,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":141,"author":{"gitId":"tryyang2001"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":142,"author":{"gitId":"tryyang2001"},"content":"     * Gets the time period of the item, will be implemented in Food class.","lastModifiedDate":"2021-10-19"},{"lineNumber":143,"author":{"gitId":"tryyang2001"},"content":"     *","lastModifiedDate":"2021-10-19"},{"lineNumber":144,"author":{"gitId":"tryyang2001"},"content":"     * @return The time period of the food item","lastModifiedDate":"2021-10-19"},{"lineNumber":145,"author":{"gitId":"tryyang2001"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":146,"author":{"gitId":"tryyang2001"},"content":"    public TimePeriod getTimePeriod() {","lastModifiedDate":"2021-10-19"},{"lineNumber":147,"author":{"gitId":"tryyang2001"},"content":"        return null;","lastModifiedDate":"2021-10-19"},{"lineNumber":148,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":149,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":150,"author":{"gitId":"tryyang2001"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":151,"author":{"gitId":"tryyang2001"},"content":"     * Gets the date and time of the item, will be implemented in Food class.","lastModifiedDate":"2021-10-19"},{"lineNumber":152,"author":{"gitId":"tryyang2001"},"content":"     *","lastModifiedDate":"2021-10-19"},{"lineNumber":153,"author":{"gitId":"tryyang2001"},"content":"     * @return The date and time of the food item in LocalDateTime","lastModifiedDate":"2021-10-19"},{"lineNumber":154,"author":{"gitId":"tryyang2001"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":155,"author":{"gitId":"tryyang2001"},"content":"    public LocalDateTime getDateTime() {","lastModifiedDate":"2021-10-19"},{"lineNumber":156,"author":{"gitId":"tryyang2001"},"content":"        return null;","lastModifiedDate":"2021-10-19"},{"lineNumber":157,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":158,"author":{"gitId":"tryyang2001"},"content":"}","lastModifiedDate":"2021-10-16"}],"authorContributionMap":{"weidak":2,"tryyang2001":146,"tlyi":10}},{"path":"src/main/java/seedu/duke/data/item/ItemBank.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.data.item;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"tlyi"},"content":"import seedu.duke.data.item.exceptions.DuplicateItemInBankException;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"tlyi"},"content":"import seedu.duke.data.item.exceptions.ItemNotFoundInBankException;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"tlyi"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"xingjie99"},"content":"import java.util.Collections;","lastModifiedDate":"2021-11-02"},{"lineNumber":8,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"tlyi"},"content":"/**","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"tlyi"},"content":" * Represents a list of Items, meant to store a repository of user-defined Exercise items or Food items.","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"tlyi"},"content":" * Contains all the methods for actions that can be done on the list.","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"tlyi"},"content":" */","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"tlyi"},"content":"public class ItemBank {","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"tlyi"},"content":"    protected static final String LS \u003d System.lineSeparator();","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"tlyi"},"content":"    protected static final String TAB \u003d \"\\t\";","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"tryyang2001"},"content":"    protected ArrayList\u003cItem\u003e internalItems \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-23"},{"lineNumber":17,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"tryyang2001"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":19,"author":{"gitId":"tryyang2001"},"content":"     * Adds new item to the item bank.","lastModifiedDate":"2021-10-23"},{"lineNumber":20,"author":{"gitId":"tryyang2001"},"content":"     *","lastModifiedDate":"2021-10-23"},{"lineNumber":21,"author":{"gitId":"tryyang2001"},"content":"     * @param item The new item to add","lastModifiedDate":"2021-10-23"},{"lineNumber":22,"author":{"gitId":"tryyang2001"},"content":"     * @throws DuplicateItemInBankException Throws this error when duplicate items are found","lastModifiedDate":"2021-10-23"},{"lineNumber":23,"author":{"gitId":"tryyang2001"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":24,"author":{"gitId":"tlyi"},"content":"    public void addItem(Item item) throws DuplicateItemInBankException {","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"tlyi"},"content":"        checkNoDuplicateItemName(item.getName());","lastModifiedDate":"2021-10-28"},{"lineNumber":26,"author":{"gitId":"tlyi"},"content":"        internalItems.add(item);","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":29,"author":{"gitId":"tryyang2001"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":30,"author":{"gitId":"tryyang2001"},"content":"     * Returns item with the given index in the item bank.","lastModifiedDate":"2021-10-23"},{"lineNumber":31,"author":{"gitId":"tryyang2001"},"content":"     *","lastModifiedDate":"2021-10-23"},{"lineNumber":32,"author":{"gitId":"tryyang2001"},"content":"     * @param index The index of the item","lastModifiedDate":"2021-10-23"},{"lineNumber":33,"author":{"gitId":"tryyang2001"},"content":"     * @return The item with the given index","lastModifiedDate":"2021-10-23"},{"lineNumber":34,"author":{"gitId":"tryyang2001"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":35,"author":{"gitId":"weidak"},"content":"    public Item getItem(int index) {","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"weidak"},"content":"        return internalItems.get(index);","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"tryyang2001"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":40,"author":{"gitId":"tryyang2001"},"content":"     * Deletes the item in the bank.","lastModifiedDate":"2021-10-23"},{"lineNumber":41,"author":{"gitId":"tryyang2001"},"content":"     *","lastModifiedDate":"2021-10-23"},{"lineNumber":42,"author":{"gitId":"tryyang2001"},"content":"     * @param index The index of the item to delete","lastModifiedDate":"2021-10-23"},{"lineNumber":43,"author":{"gitId":"tryyang2001"},"content":"     * @return The deleted item","lastModifiedDate":"2021-10-23"},{"lineNumber":44,"author":{"gitId":"tryyang2001"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":45,"author":{"gitId":"tlyi"},"content":"    public Item deleteItem(int index) {","lastModifiedDate":"2021-10-19"},{"lineNumber":46,"author":{"gitId":"tlyi"},"content":"        return internalItems.remove(index);","lastModifiedDate":"2021-10-19"},{"lineNumber":47,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":48,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":49,"author":{"gitId":"tryyang2001"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":50,"author":{"gitId":"tryyang2001"},"content":"     * Deletes all the item inside the item bank.","lastModifiedDate":"2021-10-23"},{"lineNumber":51,"author":{"gitId":"tryyang2001"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":52,"author":{"gitId":"tlyi"},"content":"    public void clearList() {","lastModifiedDate":"2021-10-19"},{"lineNumber":53,"author":{"gitId":"tlyi"},"content":"        internalItems.clear();","lastModifiedDate":"2021-10-19"},{"lineNumber":54,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":55,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":56,"author":{"gitId":"tryyang2001"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":57,"author":{"gitId":"tryyang2001"},"content":"     * Returns the size of the item bank.","lastModifiedDate":"2021-10-23"},{"lineNumber":58,"author":{"gitId":"tryyang2001"},"content":"     *","lastModifiedDate":"2021-10-23"},{"lineNumber":59,"author":{"gitId":"tryyang2001"},"content":"     * @return The size of the array list attribute","lastModifiedDate":"2021-10-23"},{"lineNumber":60,"author":{"gitId":"tryyang2001"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":61,"author":{"gitId":"tlyi"},"content":"    public int getSize() {","lastModifiedDate":"2021-10-19"},{"lineNumber":62,"author":{"gitId":"tlyi"},"content":"        return internalItems.size();","lastModifiedDate":"2021-10-19"},{"lineNumber":63,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":64,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":65,"author":{"gitId":"tryyang2001"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":66,"author":{"gitId":"tryyang2001"},"content":"     * Converts the array list to a string for printing purpose.","lastModifiedDate":"2021-10-23"},{"lineNumber":67,"author":{"gitId":"tryyang2001"},"content":"     *","lastModifiedDate":"2021-10-23"},{"lineNumber":68,"author":{"gitId":"tryyang2001"},"content":"     * @return The array list in string","lastModifiedDate":"2021-10-23"},{"lineNumber":69,"author":{"gitId":"tryyang2001"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":70,"author":{"gitId":"tlyi"},"content":"    public String convertToString() {","lastModifiedDate":"2021-10-19"},{"lineNumber":71,"author":{"gitId":"tlyi"},"content":"        StringBuilder listToString \u003d new StringBuilder();","lastModifiedDate":"2021-10-19"},{"lineNumber":72,"author":{"gitId":"tlyi"},"content":"        for (int i \u003d 0; i \u003c internalItems.size(); i++) {","lastModifiedDate":"2021-10-19"},{"lineNumber":73,"author":{"gitId":"tlyi"},"content":"            listToString.append(TAB).append(i + 1).append(\". \")","lastModifiedDate":"2021-10-24"},{"lineNumber":74,"author":{"gitId":"tryyang2001"},"content":"                    .append(internalItems.get(i).toStringWithoutDateAndTime()).append(LS);","lastModifiedDate":"2021-10-28"},{"lineNumber":75,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":76,"author":{"gitId":"tlyi"},"content":"        return listToString.toString().stripTrailing();","lastModifiedDate":"2021-10-19"},{"lineNumber":77,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":78,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":79,"author":{"gitId":"tryyang2001"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":80,"author":{"gitId":"tryyang2001"},"content":"     * Gets the calories of the item which has the same name as the input item.","lastModifiedDate":"2021-10-23"},{"lineNumber":81,"author":{"gitId":"tryyang2001"},"content":"     *","lastModifiedDate":"2021-10-23"},{"lineNumber":82,"author":{"gitId":"tryyang2001"},"content":"     * @param inputName The input item name in string","lastModifiedDate":"2021-10-23"},{"lineNumber":83,"author":{"gitId":"tryyang2001"},"content":"     * @return The calories value of the item which has the same name as the input item.","lastModifiedDate":"2021-10-23"},{"lineNumber":84,"author":{"gitId":"tryyang2001"},"content":"     * @throws ItemNotFoundInBankException Throws this exception when there is no item which has the same name","lastModifiedDate":"2021-10-23"},{"lineNumber":85,"author":{"gitId":"tryyang2001"},"content":"     *                                     as the input item","lastModifiedDate":"2021-10-23"},{"lineNumber":86,"author":{"gitId":"tryyang2001"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":87,"author":{"gitId":"tryyang2001"},"content":"    public int findCalorie(String inputName) throws ItemNotFoundInBankException {","lastModifiedDate":"2021-10-28"},{"lineNumber":88,"author":{"gitId":"tlyi"},"content":"        Item matchingItem \u003d internalItems","lastModifiedDate":"2021-10-19"},{"lineNumber":89,"author":{"gitId":"tlyi"},"content":"                .stream()","lastModifiedDate":"2021-10-19"},{"lineNumber":90,"author":{"gitId":"tlyi"},"content":"                .filter(item -\u003e item.getName().equalsIgnoreCase(inputName))","lastModifiedDate":"2021-10-20"},{"lineNumber":91,"author":{"gitId":"tlyi"},"content":"                .findAny()","lastModifiedDate":"2021-10-19"},{"lineNumber":92,"author":{"gitId":"tlyi"},"content":"                .orElse(null);","lastModifiedDate":"2021-10-19"},{"lineNumber":93,"author":{"gitId":"tlyi"},"content":"        if (matchingItem \u003d\u003d null) {","lastModifiedDate":"2021-10-19"},{"lineNumber":94,"author":{"gitId":"tlyi"},"content":"            throw new ItemNotFoundInBankException();","lastModifiedDate":"2021-10-19"},{"lineNumber":95,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":96,"author":{"gitId":"tlyi"},"content":"        return matchingItem.getCalories();","lastModifiedDate":"2021-10-19"},{"lineNumber":97,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":98,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":99,"author":{"gitId":"tlyi"},"content":"    /**","lastModifiedDate":"2021-10-28"},{"lineNumber":100,"author":{"gitId":"tlyi"},"content":"     * Checks if there already exists an item in the bank with the same name as the input.","lastModifiedDate":"2021-10-28"},{"lineNumber":101,"author":{"gitId":"tlyi"},"content":"     * Used before adding/editing items to/from the bank.","lastModifiedDate":"2021-10-28"},{"lineNumber":102,"author":{"gitId":"tlyi"},"content":"     *","lastModifiedDate":"2021-10-28"},{"lineNumber":103,"author":{"gitId":"tlyi"},"content":"     * @param inputName String to check against","lastModifiedDate":"2021-10-28"},{"lineNumber":104,"author":{"gitId":"tlyi"},"content":"     * @throws DuplicateItemInBankException Throws this exception if there already exists an item in the bank with","lastModifiedDate":"2021-10-28"},{"lineNumber":105,"author":{"gitId":"tlyi"},"content":"     *                                      the same name (case-insensitive).","lastModifiedDate":"2021-10-28"},{"lineNumber":106,"author":{"gitId":"tlyi"},"content":"     */","lastModifiedDate":"2021-10-28"},{"lineNumber":107,"author":{"gitId":"tlyi"},"content":"    public void checkNoDuplicateItemName(String inputName) throws DuplicateItemInBankException {","lastModifiedDate":"2021-10-28"},{"lineNumber":108,"author":{"gitId":"tlyi"},"content":"        long numOfMatchingItems \u003d internalItems","lastModifiedDate":"2021-10-28"},{"lineNumber":109,"author":{"gitId":"tlyi"},"content":"                .stream()","lastModifiedDate":"2021-10-28"},{"lineNumber":110,"author":{"gitId":"tlyi"},"content":"                .filter(item -\u003e item.getName().equalsIgnoreCase(inputName))","lastModifiedDate":"2021-10-28"},{"lineNumber":111,"author":{"gitId":"tlyi"},"content":"                .count();","lastModifiedDate":"2021-10-28"},{"lineNumber":112,"author":{"gitId":"tlyi"},"content":"        if (numOfMatchingItems \u003e 0) {","lastModifiedDate":"2021-10-28"},{"lineNumber":113,"author":{"gitId":"tlyi"},"content":"            throw new DuplicateItemInBankException();","lastModifiedDate":"2021-10-28"},{"lineNumber":114,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":115,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":116,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":117,"author":{"gitId":"tlyi"},"content":"    /**","lastModifiedDate":"2021-11-03"},{"lineNumber":118,"author":{"gitId":"tlyi"},"content":"     * Deletes multiple items in the list.","lastModifiedDate":"2021-11-03"},{"lineNumber":119,"author":{"gitId":"tlyi"},"content":"     *","lastModifiedDate":"2021-11-03"},{"lineNumber":120,"author":{"gitId":"tlyi"},"content":"     * @param itemIndexArray Array of indexes to delete from","lastModifiedDate":"2021-11-03"},{"lineNumber":121,"author":{"gitId":"tlyi"},"content":"     * @throws IndexOutOfBoundsException Throws this exception if any of the index in the provided array does not exist","lastModifiedDate":"2021-11-03"},{"lineNumber":122,"author":{"gitId":"tlyi"},"content":"     */","lastModifiedDate":"2021-11-03"},{"lineNumber":123,"author":{"gitId":"xingjie99"},"content":"    public String deleteMultipleItems(ArrayList\u003cInteger\u003e itemIndexArray) {","lastModifiedDate":"2021-11-04"},{"lineNumber":124,"author":{"gitId":"xingjie99"},"content":"        Collections.sort(itemIndexArray);","lastModifiedDate":"2021-11-04"},{"lineNumber":125,"author":{"gitId":"xingjie99"},"content":"        StringBuilder itemsToString \u003d new StringBuilder();","lastModifiedDate":"2021-11-04"},{"lineNumber":126,"author":{"gitId":"xingjie99"},"content":"        int numberPointer \u003d 0;","lastModifiedDate":"2021-11-04"},{"lineNumber":127,"author":{"gitId":"xingjie99"},"content":"        for (Integer index : itemIndexArray) {","lastModifiedDate":"2021-11-04"},{"lineNumber":128,"author":{"gitId":"xingjie99"},"content":"            itemsToString.append(LS)","lastModifiedDate":"2021-11-04"},{"lineNumber":129,"author":{"gitId":"xingjie99"},"content":"                    .append(TAB)","lastModifiedDate":"2021-11-04"},{"lineNumber":130,"author":{"gitId":"xingjie99"},"content":"                    .append(index + 1)","lastModifiedDate":"2021-11-04"},{"lineNumber":131,"author":{"gitId":"xingjie99"},"content":"                    .append(\". \")","lastModifiedDate":"2021-11-04"},{"lineNumber":132,"author":{"gitId":"xingjie99"},"content":"                    .append(deleteItem(index - numberPointer).toStringWithoutDateAndTime());","lastModifiedDate":"2021-11-08"},{"lineNumber":133,"author":{"gitId":"xingjie99"},"content":"            numberPointer++;","lastModifiedDate":"2021-11-04"},{"lineNumber":134,"author":{"gitId":"xingjie99"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":135,"author":{"gitId":"xingjie99"},"content":"        return itemsToString.toString().stripTrailing();","lastModifiedDate":"2021-11-04"},{"lineNumber":136,"author":{"gitId":"xingjie99"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":137,"author":{"gitId":"tlyi"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"weidak":3,"xingjie99":16,"tryyang2001":42,"tlyi":76}},{"path":"src/main/java/seedu/duke/data/item/ItemList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.data.item;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":3,"author":{"gitId":"tryyang2001"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"tryyang2001"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"tryyang2001"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"tryyang2001"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":8,"author":{"gitId":"tryyang2001"},"content":"/**","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"tryyang2001"},"content":" * ItemList is an abstract class that contains all the common methods for food list and exercise list.","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"tryyang2001"},"content":" */","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"tryyang2001"},"content":"public abstract class ItemList extends ItemBank {","lastModifiedDate":"2021-10-23"},{"lineNumber":12,"author":{"gitId":"tryyang2001"},"content":"    public static final String MESSAGE_ITEM \u003d \"%d. %s\";","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"tryyang2001"},"content":"    public static final String ITEM_LIST_DIVIDER \u003d \"...............................................\"","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"tryyang2001"},"content":"            + \"...........................................................\";","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"tryyang2001"},"content":"    protected static final String DATE_FORMAT \u003d \"dd MMM yyyy\";","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"tryyang2001"},"content":"    protected static final String LS \u003d System.lineSeparator();","lastModifiedDate":"2021-10-16"},{"lineNumber":17,"author":{"gitId":"tryyang2001"},"content":"    protected static final String TAB \u003d \"\\t\";","lastModifiedDate":"2021-10-16"},{"lineNumber":18,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":20,"author":{"gitId":"tryyang2001"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003dOverride methods\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-28"},{"lineNumber":21,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":22,"author":{"gitId":"tryyang2001"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"tryyang2001"},"content":"     * Adds an item into the item list.","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"tryyang2001"},"content":"     *","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"tryyang2001"},"content":"     * @param item The item class object to add","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"tryyang2001"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"tryyang2001"},"content":"    @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":28,"author":{"gitId":"tryyang2001"},"content":"    public void addItem(Item item) {","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"tryyang2001"},"content":"        this.internalItems.add(item);","lastModifiedDate":"2021-10-23"},{"lineNumber":30,"author":{"gitId":"weidak"},"content":"        sortList();","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":34,"author":{"gitId":"tryyang2001"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003dPublic methods\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-30"},{"lineNumber":35,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":36,"author":{"gitId":"tryyang2001"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":37,"author":{"gitId":"tryyang2001"},"content":"     * Computes the sum of calorie of all items in the item list.","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"tryyang2001"},"content":"     *","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"tryyang2001"},"content":"     * @return Integer value of the sum of calorie of all the items","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"tryyang2001"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":41,"author":{"gitId":"tryyang2001"},"content":"    public int getTotalCalories() {","lastModifiedDate":"2021-10-19"},{"lineNumber":42,"author":{"gitId":"tryyang2001"},"content":"        int totalCalories \u003d internalItems.stream().mapToInt(Item::getCalories).sum();","lastModifiedDate":"2021-10-23"},{"lineNumber":43,"author":{"gitId":"tryyang2001"},"content":"        assert totalCalories \u003e\u003d 0 : \"Total calories cannot less than 0\";","lastModifiedDate":"2021-10-19"},{"lineNumber":44,"author":{"gitId":"tryyang2001"},"content":"        return totalCalories;","lastModifiedDate":"2021-10-19"},{"lineNumber":45,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":46,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":47,"author":{"gitId":"tryyang2001"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":48,"author":{"gitId":"tryyang2001"},"content":"     * Computes the sum of calorie of all food items consumed in a specific date.","lastModifiedDate":"2021-10-19"},{"lineNumber":49,"author":{"gitId":"tryyang2001"},"content":"     *","lastModifiedDate":"2021-10-19"},{"lineNumber":50,"author":{"gitId":"tryyang2001"},"content":"     * @param date The date to query all the consumed food items","lastModifiedDate":"2021-10-19"},{"lineNumber":51,"author":{"gitId":"tryyang2001"},"content":"     * @return Integer value of the sum of calorie of all food items consumed in the given date","lastModifiedDate":"2021-10-19"},{"lineNumber":52,"author":{"gitId":"tryyang2001"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":53,"author":{"gitId":"tryyang2001"},"content":"    public int getTotalCaloriesWithDate(LocalDate date) {","lastModifiedDate":"2021-10-19"},{"lineNumber":54,"author":{"gitId":"tryyang2001"},"content":"        int totalCalories \u003d internalItems.stream()","lastModifiedDate":"2021-10-23"},{"lineNumber":55,"author":{"gitId":"tryyang2001"},"content":"                .filter(i -\u003e i.getDate().isEqual(date))","lastModifiedDate":"2021-10-19"},{"lineNumber":56,"author":{"gitId":"tryyang2001"},"content":"                .mapToInt(Item::getCalories)","lastModifiedDate":"2021-10-19"},{"lineNumber":57,"author":{"gitId":"tryyang2001"},"content":"                .sum();","lastModifiedDate":"2021-10-19"},{"lineNumber":58,"author":{"gitId":"tryyang2001"},"content":"        assert totalCalories \u003e\u003d 0 : \"Total calories cannot less than 0\";","lastModifiedDate":"2021-10-19"},{"lineNumber":59,"author":{"gitId":"tryyang2001"},"content":"        return totalCalories;","lastModifiedDate":"2021-10-19"},{"lineNumber":60,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":61,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":62,"author":{"gitId":"tryyang2001"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":63,"author":{"gitId":"tryyang2001"},"content":"     * Sorts the item list according to date (and) time, will be implemented in FoodList and ExerciseList.","lastModifiedDate":"2021-10-19"},{"lineNumber":64,"author":{"gitId":"tryyang2001"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":65,"author":{"gitId":"tryyang2001"},"content":"    public abstract void sortList();","lastModifiedDate":"2021-10-19"},{"lineNumber":66,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":67,"author":{"gitId":"tryyang2001"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":68,"author":{"gitId":"tryyang2001"},"content":"     * Converts the item list of a specific date to a string for printing purpose,","lastModifiedDate":"2021-10-19"},{"lineNumber":69,"author":{"gitId":"tryyang2001"},"content":"     * will be implemented in FoodList and ExerciseList.","lastModifiedDate":"2021-10-19"},{"lineNumber":70,"author":{"gitId":"tryyang2001"},"content":"     *","lastModifiedDate":"2021-10-19"},{"lineNumber":71,"author":{"gitId":"tryyang2001"},"content":"     * @param date The given date to query the item list","lastModifiedDate":"2021-10-19"},{"lineNumber":72,"author":{"gitId":"tryyang2001"},"content":"     * @return The string of the item list of a specific date","lastModifiedDate":"2021-10-19"},{"lineNumber":73,"author":{"gitId":"tryyang2001"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":74,"author":{"gitId":"tryyang2001"},"content":"    public abstract String convertToStringBySpecificDate(LocalDate date);","lastModifiedDate":"2021-10-19"},{"lineNumber":75,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":76,"author":{"gitId":"tryyang2001"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":77,"author":{"gitId":"tryyang2001"},"content":"     * Adds all items in the filtered list to the list, also prevents adding duplicate items.","lastModifiedDate":"2021-10-26"},{"lineNumber":78,"author":{"gitId":"tryyang2001"},"content":"     *","lastModifiedDate":"2021-10-26"},{"lineNumber":79,"author":{"gitId":"tryyang2001"},"content":"     * @param filteredItemList The other item list","lastModifiedDate":"2021-10-26"},{"lineNumber":80,"author":{"gitId":"tryyang2001"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":81,"author":{"gitId":"tryyang2001"},"content":"    public void addAll(ItemList filteredItemList) {","lastModifiedDate":"2021-10-26"},{"lineNumber":82,"author":{"gitId":"tryyang2001"},"content":"        LocalDate today \u003d LocalDate.now();","lastModifiedDate":"2021-10-26"},{"lineNumber":83,"author":{"gitId":"tryyang2001"},"content":"        ArrayList\u003cItem\u003e listToRemove \u003d (ArrayList\u003cItem\u003e) internalItems","lastModifiedDate":"2021-10-26"},{"lineNumber":84,"author":{"gitId":"tryyang2001"},"content":"                .stream()","lastModifiedDate":"2021-10-26"},{"lineNumber":85,"author":{"gitId":"tryyang2001"},"content":"                .filter(f -\u003e f.getDate().isAfter(today.minusDays(8)))","lastModifiedDate":"2021-10-26"},{"lineNumber":86,"author":{"gitId":"tryyang2001"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2021-10-26"},{"lineNumber":87,"author":{"gitId":"tryyang2001"},"content":"        internalItems.removeAll(listToRemove);","lastModifiedDate":"2021-10-26"},{"lineNumber":88,"author":{"gitId":"tryyang2001"},"content":"        for (int i \u003d 0; i \u003c filteredItemList.getSize(); i++) {","lastModifiedDate":"2021-10-26"},{"lineNumber":89,"author":{"gitId":"tryyang2001"},"content":"            internalItems.add(filteredItemList.getItem(i));","lastModifiedDate":"2021-10-26"},{"lineNumber":90,"author":{"gitId":"tryyang2001"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":91,"author":{"gitId":"tryyang2001"},"content":"        this.sortList();","lastModifiedDate":"2021-10-26"},{"lineNumber":92,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":93,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":94,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":95,"author":{"gitId":"tryyang2001"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003dCommon Helper methods for Food List and Exercise List\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-28"},{"lineNumber":96,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":97,"author":{"gitId":"tryyang2001"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":98,"author":{"gitId":"tryyang2001"},"content":"     * Gets the day of the week of the given date.","lastModifiedDate":"2021-10-16"},{"lineNumber":99,"author":{"gitId":"tryyang2001"},"content":"     *","lastModifiedDate":"2021-10-16"},{"lineNumber":100,"author":{"gitId":"tryyang2001"},"content":"     * @param currentDate The date to query the day of the week","lastModifiedDate":"2021-10-16"},{"lineNumber":101,"author":{"gitId":"tryyang2001"},"content":"     * @return The day of the week in string","lastModifiedDate":"2021-10-16"},{"lineNumber":102,"author":{"gitId":"tryyang2001"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":103,"author":{"gitId":"tryyang2001"},"content":"    protected String getDayOfWeek(LocalDate currentDate) {","lastModifiedDate":"2021-10-19"},{"lineNumber":104,"author":{"gitId":"tryyang2001"},"content":"        String day \u003d currentDate.getDayOfWeek().toString();","lastModifiedDate":"2021-10-16"},{"lineNumber":105,"author":{"gitId":"tryyang2001"},"content":"        day \u003d day.charAt(0) + day.substring(1).toLowerCase();","lastModifiedDate":"2021-10-16"},{"lineNumber":106,"author":{"gitId":"tryyang2001"},"content":"        return day;","lastModifiedDate":"2021-10-16"},{"lineNumber":107,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":108,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":109,"author":{"gitId":"tryyang2001"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":110,"author":{"gitId":"tryyang2001"},"content":"     * Common method used in food list and exercise list to generate the item count string.","lastModifiedDate":"2021-10-18"},{"lineNumber":111,"author":{"gitId":"tryyang2001"},"content":"     *","lastModifiedDate":"2021-10-18"},{"lineNumber":112,"author":{"gitId":"tryyang2001"},"content":"     * @param itemListInString The StringBuilder that will contain the correct output string format","lastModifiedDate":"2021-10-18"},{"lineNumber":113,"author":{"gitId":"tryyang2001"},"content":"     * @param size             The size of the item list","lastModifiedDate":"2021-10-18"},{"lineNumber":114,"author":{"gitId":"tryyang2001"},"content":"     * @param date             The date to query the item count","lastModifiedDate":"2021-10-18"},{"lineNumber":115,"author":{"gitId":"tryyang2001"},"content":"     * @param message          The string format to display","lastModifiedDate":"2021-10-18"},{"lineNumber":116,"author":{"gitId":"tryyang2001"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":117,"author":{"gitId":"tryyang2001"},"content":"    protected void convertItemCountToString(StringBuilder itemListInString, int size, LocalDate date, String message) {","lastModifiedDate":"2021-10-18"},{"lineNumber":118,"author":{"gitId":"tryyang2001"},"content":"        itemListInString","lastModifiedDate":"2021-10-18"},{"lineNumber":119,"author":{"gitId":"tryyang2001"},"content":"                .append(String.format(message, size, getDayOfWeek(date),","lastModifiedDate":"2021-10-19"},{"lineNumber":120,"author":{"gitId":"tryyang2001"},"content":"                        date.format(DateTimeFormatter.ofPattern(DATE_FORMAT))))","lastModifiedDate":"2021-10-18"},{"lineNumber":121,"author":{"gitId":"tryyang2001"},"content":"                .append(ItemList.LS);","lastModifiedDate":"2021-10-18"},{"lineNumber":122,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":123,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":124,"author":{"gitId":"tryyang2001"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":125,"author":{"gitId":"tryyang2001"},"content":"     * Common method used in food list and exercise list to generate the item string.","lastModifiedDate":"2021-10-18"},{"lineNumber":126,"author":{"gitId":"tryyang2001"},"content":"     *","lastModifiedDate":"2021-10-18"},{"lineNumber":127,"author":{"gitId":"tryyang2001"},"content":"     * @param itemListInString The StringBuilder that will contain the correct output string format","lastModifiedDate":"2021-10-18"},{"lineNumber":128,"author":{"gitId":"tryyang2001"},"content":"     * @param index            The index of the item in the list","lastModifiedDate":"2021-10-18"},{"lineNumber":129,"author":{"gitId":"tryyang2001"},"content":"     * @param item             The item to convert to string","lastModifiedDate":"2021-10-18"},{"lineNumber":130,"author":{"gitId":"tryyang2001"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":131,"author":{"gitId":"tryyang2001"},"content":"    protected void convertItemToString(StringBuilder itemListInString, int index, Item item) {","lastModifiedDate":"2021-10-18"},{"lineNumber":132,"author":{"gitId":"tryyang2001"},"content":"        itemListInString.append(ItemList.TAB).append(String.format(MESSAGE_ITEM, index, item)).append(ItemList.LS);","lastModifiedDate":"2021-10-19"},{"lineNumber":133,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":134,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":135,"author":{"gitId":"tryyang2001"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":136,"author":{"gitId":"tryyang2001"},"content":"     * Common method used in food list and exercise list to generate the total calorie string.","lastModifiedDate":"2021-10-18"},{"lineNumber":137,"author":{"gitId":"tryyang2001"},"content":"     *","lastModifiedDate":"2021-10-18"},{"lineNumber":138,"author":{"gitId":"tryyang2001"},"content":"     * @param itemListInString The StringBuilder that will contain the correct output string format","lastModifiedDate":"2021-10-18"},{"lineNumber":139,"author":{"gitId":"tryyang2001"},"content":"     * @param totalCalories    The sum of calorie for each item stored inside the list","lastModifiedDate":"2021-10-18"},{"lineNumber":140,"author":{"gitId":"tryyang2001"},"content":"     * @param message          The string format to display","lastModifiedDate":"2021-10-18"},{"lineNumber":141,"author":{"gitId":"tryyang2001"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":142,"author":{"gitId":"tryyang2001"},"content":"    protected void convertTotalCaloriesToString(StringBuilder itemListInString, int totalCalories, String message) {","lastModifiedDate":"2021-10-18"},{"lineNumber":143,"author":{"gitId":"tryyang2001"},"content":"        itemListInString.append(String.format(message, totalCalories)).append(ItemList.LS);","lastModifiedDate":"2021-10-19"},{"lineNumber":144,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":145,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":146,"author":{"gitId":"tryyang2001"},"content":"    /**","lastModifiedDate":"2021-10-30"},{"lineNumber":147,"author":{"gitId":"tryyang2001"},"content":"     * Helper method used in deleteItem method in FoodList and ExerciseList to get the","lastModifiedDate":"2021-10-30"},{"lineNumber":148,"author":{"gitId":"tryyang2001"},"content":"     * actual index from the entire list of the items to delete.","lastModifiedDate":"2021-10-30"},{"lineNumber":149,"author":{"gitId":"tryyang2001"},"content":"     *","lastModifiedDate":"2021-10-30"},{"lineNumber":150,"author":{"gitId":"tryyang2001"},"content":"     * @param index       The index of the item as shown in the view f/ or view e/ command","lastModifiedDate":"2021-10-30"},{"lineNumber":151,"author":{"gitId":"tryyang2001"},"content":"     * @param deletedItem The item to delete","lastModifiedDate":"2021-10-30"},{"lineNumber":152,"author":{"gitId":"tryyang2001"},"content":"     * @return The actual index of the item in the entire item list","lastModifiedDate":"2021-10-30"},{"lineNumber":153,"author":{"gitId":"tryyang2001"},"content":"     */","lastModifiedDate":"2021-10-30"},{"lineNumber":154,"author":{"gitId":"tryyang2001"},"content":"    protected int getActualIndex(int index, Item deletedItem) {","lastModifiedDate":"2021-10-30"},{"lineNumber":155,"author":{"gitId":"tryyang2001"},"content":"        for (int i \u003d 0; i \u003c internalItems.size(); i++) {","lastModifiedDate":"2021-10-30"},{"lineNumber":156,"author":{"gitId":"tryyang2001"},"content":"            if (isListToQuery(deletedItem, i) \u0026\u0026 isItemToDelete(deletedItem, i, index)) {","lastModifiedDate":"2021-10-30"},{"lineNumber":157,"author":{"gitId":"tryyang2001"},"content":"                return i + index;","lastModifiedDate":"2021-10-30"},{"lineNumber":158,"author":{"gitId":"tryyang2001"},"content":"            } else if (isListToQuery(deletedItem, i)) {","lastModifiedDate":"2021-10-30"},{"lineNumber":159,"author":{"gitId":"tryyang2001"},"content":"                break;","lastModifiedDate":"2021-10-30"},{"lineNumber":160,"author":{"gitId":"tryyang2001"},"content":"            }","lastModifiedDate":"2021-10-30"},{"lineNumber":161,"author":{"gitId":"tryyang2001"},"content":"        }","lastModifiedDate":"2021-10-30"},{"lineNumber":162,"author":{"gitId":"tryyang2001"},"content":"        return -1;","lastModifiedDate":"2021-10-30"},{"lineNumber":163,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":164,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":165,"author":{"gitId":"tryyang2001"},"content":"    /**","lastModifiedDate":"2021-10-30"},{"lineNumber":166,"author":{"gitId":"tryyang2001"},"content":"     * Helper method used in getActualIndex to check if the current index has the same date,","lastModifiedDate":"2021-10-30"},{"lineNumber":167,"author":{"gitId":"tryyang2001"},"content":"     * (and time period for food) as the user input, will be implemented in FoodList and ExerciseList.","lastModifiedDate":"2021-10-30"},{"lineNumber":168,"author":{"gitId":"tryyang2001"},"content":"     *","lastModifiedDate":"2021-10-30"},{"lineNumber":169,"author":{"gitId":"tryyang2001"},"content":"     * @param deletedItem  The item to delete","lastModifiedDate":"2021-10-30"},{"lineNumber":170,"author":{"gitId":"tryyang2001"},"content":"     * @param currentIndex The current index of the entire item list","lastModifiedDate":"2021-10-30"},{"lineNumber":171,"author":{"gitId":"tryyang2001"},"content":"     * @return True if the current index points to the item that has the same date (and time for food)","lastModifiedDate":"2021-10-30"},{"lineNumber":172,"author":{"gitId":"tryyang2001"},"content":"     *         as the item to delete, false otherwise","lastModifiedDate":"2021-10-30"},{"lineNumber":173,"author":{"gitId":"tryyang2001"},"content":"     */","lastModifiedDate":"2021-10-30"},{"lineNumber":174,"author":{"gitId":"tryyang2001"},"content":"    protected abstract boolean isListToQuery(Item deletedItem, int currentIndex);","lastModifiedDate":"2021-10-30"},{"lineNumber":175,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":176,"author":{"gitId":"tryyang2001"},"content":"    /**","lastModifiedDate":"2021-10-30"},{"lineNumber":177,"author":{"gitId":"tryyang2001"},"content":"     * Helper method used in getActualIndex to check if the current index points to the item to delete,","lastModifiedDate":"2021-10-30"},{"lineNumber":178,"author":{"gitId":"tryyang2001"},"content":"     * will be implemented in FoodList and ExerciseList accordingly.","lastModifiedDate":"2021-10-30"},{"lineNumber":179,"author":{"gitId":"tryyang2001"},"content":"     *","lastModifiedDate":"2021-10-30"},{"lineNumber":180,"author":{"gitId":"tryyang2001"},"content":"     * @param deletedItem   The item to delete","lastModifiedDate":"2021-10-30"},{"lineNumber":181,"author":{"gitId":"tryyang2001"},"content":"     * @param currentIndex  The current index of the entire item list","lastModifiedDate":"2021-10-30"},{"lineNumber":182,"author":{"gitId":"tryyang2001"},"content":"     * @param indexToDelete The index to delete as shown in view f/ or view e/ command","lastModifiedDate":"2021-10-30"},{"lineNumber":183,"author":{"gitId":"tryyang2001"},"content":"     * @return true if the current index points to the item to delete, false otherwise","lastModifiedDate":"2021-10-30"},{"lineNumber":184,"author":{"gitId":"tryyang2001"},"content":"     */","lastModifiedDate":"2021-10-30"},{"lineNumber":185,"author":{"gitId":"tryyang2001"},"content":"    protected abstract boolean isItemToDelete(Item deletedItem, int currentIndex, int indexToDelete);","lastModifiedDate":"2021-10-30"},{"lineNumber":186,"author":{"gitId":"tryyang2001"},"content":"}","lastModifiedDate":"2021-10-16"}],"authorContributionMap":{"weidak":1,"tryyang2001":184,"tlyi":1}},{"path":"src/main/java/seedu/duke/data/item/exceptions/DuplicateItemInBankException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.data.item.exceptions;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"tlyi"},"content":"/**","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"tlyi"},"content":" * Represents an error where the item to be added to the bank already exists (compared by name).","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"tlyi"},"content":" */","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"tlyi"},"content":"public class DuplicateItemInBankException extends Exception {","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"tlyi"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"tlyi":8}},{"path":"src/main/java/seedu/duke/data/item/exceptions/ItemNotFoundInBankException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.data.item.exceptions;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"tlyi"},"content":"/**","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"tlyi"},"content":" * Represents an error where the item is not found in the item bank.","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"tlyi"},"content":" */","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"tlyi"},"content":"public class ItemNotFoundInBankException extends Exception {","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"tlyi"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"tlyi":7}},{"path":"src/main/java/seedu/duke/data/item/exercise/Exercise.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.data.item.exercise;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"tlyi"},"content":"import seedu.duke.data.item.Item;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":5,"author":{"gitId":"tryyang2001"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-16"},{"lineNumber":6,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"tryyang2001"},"content":"public class Exercise extends Item {","lastModifiedDate":"2021-10-16"},{"lineNumber":8,"author":{"gitId":"xingjie99"},"content":"    public static final String EXERCISE_TYPE \u003d \"E\";","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"tryyang2001"},"content":"    public static final String AT \u003d \" @ \";","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"tryyang2001"},"content":"    protected LocalDate date;","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"xingjie99"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"tryyang2001"},"content":"     * Constructor for exercise object when the date is not provided.","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"xingjie99"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"tryyang2001"},"content":"     * @param name     The name or description of the exercise.","lastModifiedDate":"2021-10-16"},{"lineNumber":16,"author":{"gitId":"tryyang2001"},"content":"     * @param calories The calorie burnt from the exercise.","lastModifiedDate":"2021-10-16"},{"lineNumber":17,"author":{"gitId":"xingjie99"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"xingjie99"},"content":"    public Exercise(String name, int calories) {","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"tryyang2001"},"content":"        super(name, calories);","lastModifiedDate":"2021-10-16"},{"lineNumber":20,"author":{"gitId":"tryyang2001"},"content":"        this.date \u003d LocalDate.now();","lastModifiedDate":"2021-10-16"},{"lineNumber":21,"author":{"gitId":"xingjie99"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"tryyang2001"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":24,"author":{"gitId":"tryyang2001"},"content":"     * Constructor for the exercise object when all attributes are provided.","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"tryyang2001"},"content":"     *","lastModifiedDate":"2021-10-16"},{"lineNumber":26,"author":{"gitId":"tryyang2001"},"content":"     * @param name     The name or description of the exercise","lastModifiedDate":"2021-10-16"},{"lineNumber":27,"author":{"gitId":"tryyang2001"},"content":"     * @param calories The calorie burnt from the exercise","lastModifiedDate":"2021-10-16"},{"lineNumber":28,"author":{"gitId":"tryyang2001"},"content":"     * @param date     The date when the exercise is taken","lastModifiedDate":"2021-10-16"},{"lineNumber":29,"author":{"gitId":"tryyang2001"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":30,"author":{"gitId":"tryyang2001"},"content":"    public Exercise(String name, int calories, LocalDate date) {","lastModifiedDate":"2021-10-16"},{"lineNumber":31,"author":{"gitId":"tryyang2001"},"content":"        super(name, calories);","lastModifiedDate":"2021-10-16"},{"lineNumber":32,"author":{"gitId":"tryyang2001"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-10-16"},{"lineNumber":33,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":34,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":35,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":36,"author":{"gitId":"tryyang2001"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003dGetter and Setter methods\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-28"},{"lineNumber":37,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":38,"author":{"gitId":"tryyang2001"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":39,"author":{"gitId":"tryyang2001"},"content":"     * Gets the date of the exercise taken.","lastModifiedDate":"2021-10-16"},{"lineNumber":40,"author":{"gitId":"tryyang2001"},"content":"     *","lastModifiedDate":"2021-10-16"},{"lineNumber":41,"author":{"gitId":"tryyang2001"},"content":"     * @return The date of the exercise done in LocalDate","lastModifiedDate":"2021-10-16"},{"lineNumber":42,"author":{"gitId":"tryyang2001"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":43,"author":{"gitId":"tryyang2001"},"content":"    @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":44,"author":{"gitId":"tryyang2001"},"content":"    public LocalDate getDate() {","lastModifiedDate":"2021-10-16"},{"lineNumber":45,"author":{"gitId":"tryyang2001"},"content":"        return date;","lastModifiedDate":"2021-10-16"},{"lineNumber":46,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":47,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":48,"author":{"gitId":"tryyang2001"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":49,"author":{"gitId":"tryyang2001"},"content":"     * Updates the date of the exercise taken.","lastModifiedDate":"2021-10-16"},{"lineNumber":50,"author":{"gitId":"tryyang2001"},"content":"     *","lastModifiedDate":"2021-10-16"},{"lineNumber":51,"author":{"gitId":"tryyang2001"},"content":"     * @param date The new date of the exercise done in LocalDate","lastModifiedDate":"2021-10-16"},{"lineNumber":52,"author":{"gitId":"tryyang2001"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":53,"author":{"gitId":"tlyi"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":54,"author":{"gitId":"tryyang2001"},"content":"    public void setDate(LocalDate date) {","lastModifiedDate":"2021-10-16"},{"lineNumber":55,"author":{"gitId":"tryyang2001"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-10-16"},{"lineNumber":56,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":57,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":58,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":59,"author":{"gitId":"tryyang2001"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003dTo String methods\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-28"},{"lineNumber":60,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":61,"author":{"gitId":"xingjie99"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":62,"author":{"gitId":"tryyang2001"},"content":"     * Converts the exercise item in string format which only shows the exercise item name description and calorie.","lastModifiedDate":"2021-10-28"},{"lineNumber":63,"author":{"gitId":"xingjie99"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":64,"author":{"gitId":"tryyang2001"},"content":"     * @return The exercise item name and calorie display","lastModifiedDate":"2021-10-28"},{"lineNumber":65,"author":{"gitId":"xingjie99"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":66,"author":{"gitId":"tryyang2001"},"content":"    @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":67,"author":{"gitId":"tryyang2001"},"content":"    public String toStringWithoutDateAndTime() {","lastModifiedDate":"2021-10-28"},{"lineNumber":68,"author":{"gitId":"tryyang2001"},"content":"        return super.toString();","lastModifiedDate":"2021-10-28"},{"lineNumber":69,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":70,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":71,"author":{"gitId":"tryyang2001"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":72,"author":{"gitId":"tryyang2001"},"content":"     * Converts the Exercise item to string for printing after adding or deleting Exercise.","lastModifiedDate":"2021-10-27"},{"lineNumber":73,"author":{"gitId":"tryyang2001"},"content":"     *","lastModifiedDate":"2021-10-27"},{"lineNumber":74,"author":{"gitId":"tryyang2001"},"content":"     * @return String pattern of Food item with time and date","lastModifiedDate":"2021-10-27"},{"lineNumber":75,"author":{"gitId":"tryyang2001"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":76,"author":{"gitId":"tryyang2001"},"content":"    public String toStringWithDate() {","lastModifiedDate":"2021-10-27"},{"lineNumber":77,"author":{"gitId":"tryyang2001"},"content":"        return super.toString() + AT + this.getDate().format(DATE_FORMAT_FOR_PRINTING);","lastModifiedDate":"2021-10-27"},{"lineNumber":78,"author":{"gitId":"xingjie99"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":79,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":80,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":81,"author":{"gitId":"tryyang2001"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003dStorage methods\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-30"},{"lineNumber":82,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":83,"author":{"gitId":"tryyang2001"},"content":"    /**","lastModifiedDate":"2021-10-28"},{"lineNumber":84,"author":{"gitId":"tryyang2001"},"content":"     * Converts the exercise to external file string format.","lastModifiedDate":"2021-10-28"},{"lineNumber":85,"author":{"gitId":"tryyang2001"},"content":"     *","lastModifiedDate":"2021-10-28"},{"lineNumber":86,"author":{"gitId":"tryyang2001"},"content":"     * @return Name, calorie and date of the exercise in string","lastModifiedDate":"2021-10-28"},{"lineNumber":87,"author":{"gitId":"tryyang2001"},"content":"     */","lastModifiedDate":"2021-10-28"},{"lineNumber":88,"author":{"gitId":"tryyang2001"},"content":"    @Override","lastModifiedDate":"2021-10-28"},{"lineNumber":89,"author":{"gitId":"tryyang2001"},"content":"    public String toFileTextString() {","lastModifiedDate":"2021-10-28"},{"lineNumber":90,"author":{"gitId":"tryyang2001"},"content":"        return EXERCISE_TYPE","lastModifiedDate":"2021-10-28"},{"lineNumber":91,"author":{"gitId":"tryyang2001"},"content":"                + super.toFileTextString()","lastModifiedDate":"2021-10-28"},{"lineNumber":92,"author":{"gitId":"tryyang2001"},"content":"                + FILE_TEXT_DELIMITER","lastModifiedDate":"2021-10-28"},{"lineNumber":93,"author":{"gitId":"tryyang2001"},"content":"                + this.getDate().format(DATE_FORMATTER_FOR_STORAGE);","lastModifiedDate":"2021-10-28"},{"lineNumber":94,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":95,"author":{"gitId":"xingjie99"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"xingjie99":14,"tryyang2001":78,"tlyi":3}},{"path":"src/main/java/seedu/duke/data/item/exercise/ExerciseList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.data.item.exercise;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"tlyi"},"content":"import seedu.duke.data.item.Item;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"tlyi"},"content":"import seedu.duke.data.item.ItemList;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":6,"author":{"gitId":"tryyang2001"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"xingjie99"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"tryyang2001"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-10-16"},{"lineNumber":9,"author":{"gitId":"tryyang2001"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"tryyang2001"},"content":"public class ExerciseList extends ItemList {","lastModifiedDate":"2021-10-16"},{"lineNumber":12,"author":{"gitId":"tryyang2001"},"content":"    public static final String MESSAGE_EXERCISE_DONE_PER_DAY \u003d \"You have done %d exercise(s) on %s (%s):\";","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"tryyang2001"},"content":"    public static final String MESSAGE_TOTAL_CALORIE_BURNT_PER_DAY \u003d \"Total calories burnt in the day: %d cal\";","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"xingjie99"},"content":"    public static final String MESSAGE_TOTAL_CALORIE_BURNT_PER_WEEK \u003d \"Total calories burnt in this week: %d cal\";","lastModifiedDate":"2021-11-08"},{"lineNumber":15,"author":{"gitId":"tryyang2001"},"content":"    public static final String MESSAGE_TOTAL_EXERCISE_DONE_PER_WEEK \u003d \"Total exercises done in this week: %d\";","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"xingjie99"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"tryyang2001"},"content":"     * Default constructor for exercise list.","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"xingjie99"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"tryyang2001"},"content":"    public ExerciseList() {","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"tryyang2001"},"content":"        internalItems \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-23"},{"lineNumber":22,"author":{"gitId":"xingjie99"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"xingjie99"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"tryyang2001"},"content":"     * Deletes a food item according to its index number, date and time.","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"xingjie99"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"tryyang2001"},"content":"     * @param index The index of the exercise as shown in the view e/ command","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"tryyang2001"},"content":"     * @param date  The date of the exercise taken","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"tryyang2001"},"content":"     * @return The deleted exercise","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"xingjie99"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":31,"author":{"gitId":"tryyang2001"},"content":"    public Exercise deleteItem(int index, LocalDate date) {","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"tryyang2001"},"content":"        Exercise deletedExercise \u003d new Exercise(\"\", 1, date);","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"tryyang2001"},"content":"        int actualIndex \u003d getActualIndex(index, deletedExercise);","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"tryyang2001"},"content":"        deletedExercise \u003d (Exercise) internalItems.remove(actualIndex);","lastModifiedDate":"2021-10-23"},{"lineNumber":35,"author":{"gitId":"tryyang2001"},"content":"        return deletedExercise;","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"xingjie99"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":37,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":38,"author":{"gitId":"xingjie99"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":39,"author":{"gitId":"tryyang2001"},"content":"     * Converts the entire exercise list to string format for printing purpose.","lastModifiedDate":"2021-10-16"},{"lineNumber":40,"author":{"gitId":"xingjie99"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"tryyang2001"},"content":"     * @return The exercise list in a single string","lastModifiedDate":"2021-10-16"},{"lineNumber":42,"author":{"gitId":"xingjie99"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":43,"author":{"gitId":"tryyang2001"},"content":"    @Override","lastModifiedDate":"2021-10-16"},{"lineNumber":44,"author":{"gitId":"xingjie99"},"content":"    public String convertToString() {","lastModifiedDate":"2021-10-11"},{"lineNumber":45,"author":{"gitId":"tryyang2001"},"content":"        StringBuilder exerciseListInString \u003d extractExerciseListByEachDate();","lastModifiedDate":"2021-10-16"},{"lineNumber":46,"author":{"gitId":"tryyang2001"},"content":"        return exerciseListInString.toString().stripTrailing();","lastModifiedDate":"2021-10-16"},{"lineNumber":47,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":48,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":49,"author":{"gitId":"tryyang2001"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":50,"author":{"gitId":"tryyang2001"},"content":"     * Converts the food list of a specific date to string format for printing purpose.","lastModifiedDate":"2021-10-16"},{"lineNumber":51,"author":{"gitId":"tryyang2001"},"content":"     *","lastModifiedDate":"2021-10-16"},{"lineNumber":52,"author":{"gitId":"tryyang2001"},"content":"     * @param date The date for the food list","lastModifiedDate":"2021-10-16"},{"lineNumber":53,"author":{"gitId":"tryyang2001"},"content":"     * @return The food list of the specific date in a single string","lastModifiedDate":"2021-10-16"},{"lineNumber":54,"author":{"gitId":"tryyang2001"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":55,"author":{"gitId":"tryyang2001"},"content":"    public String convertToStringBySpecificDate(LocalDate date) {","lastModifiedDate":"2021-10-17"},{"lineNumber":56,"author":{"gitId":"tryyang2001"},"content":"        StringBuilder exerciseListInString \u003d extractExerciseListBySpecificDate(date);","lastModifiedDate":"2021-10-16"},{"lineNumber":57,"author":{"gitId":"tryyang2001"},"content":"        return exerciseListInString.toString().stripTrailing();","lastModifiedDate":"2021-10-16"},{"lineNumber":58,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":59,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":60,"author":{"gitId":"xingjie99"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":61,"author":{"gitId":"tryyang2001"},"content":"     * Sorts the exercise list in ascending format according to the date.","lastModifiedDate":"2021-10-19"},{"lineNumber":62,"author":{"gitId":"xingjie99"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":63,"author":{"gitId":"tryyang2001"},"content":"    public void sortList() {","lastModifiedDate":"2021-10-19"},{"lineNumber":64,"author":{"gitId":"tryyang2001"},"content":"        this.internalItems.sort(Comparator.comparing(Item::getDate));","lastModifiedDate":"2021-10-23"},{"lineNumber":65,"author":{"gitId":"xingjie99"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":66,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":67,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":68,"author":{"gitId":"tryyang2001"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003dPrivate methods\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-28"},{"lineNumber":69,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":70,"author":{"gitId":"xingjie99"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":71,"author":{"gitId":"tryyang2001"},"content":"     * Helper boolean method used in getActualIndex to determine if the exercise is the exercise to delete.","lastModifiedDate":"2021-10-20"},{"lineNumber":72,"author":{"gitId":"tryyang2001"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":73,"author":{"gitId":"tryyang2001"},"content":"     * @param deletedExercise The exercise to delete","lastModifiedDate":"2021-10-20"},{"lineNumber":74,"author":{"gitId":"tryyang2001"},"content":"     * @param currentIndex    The current index of the entire exercise list","lastModifiedDate":"2021-10-20"},{"lineNumber":75,"author":{"gitId":"tryyang2001"},"content":"     * @param index           The exercise index to delete as shown in view e/","lastModifiedDate":"2021-10-20"},{"lineNumber":76,"author":{"gitId":"tryyang2001"},"content":"     * @return True if the current exercise is the exercise to delete, false otherwise","lastModifiedDate":"2021-10-20"},{"lineNumber":77,"author":{"gitId":"xingjie99"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":78,"author":{"gitId":"tryyang2001"},"content":"    protected boolean isItemToDelete(Item deletedExercise, int currentIndex, int index) {","lastModifiedDate":"2021-10-30"},{"lineNumber":79,"author":{"gitId":"tryyang2001"},"content":"        return internalItems.get(currentIndex + index).getDate().equals(deletedExercise.getDate());","lastModifiedDate":"2021-10-23"},{"lineNumber":80,"author":{"gitId":"xingjie99"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":81,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":82,"author":{"gitId":"tryyang2001"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":83,"author":{"gitId":"tryyang2001"},"content":"     * Helper method used in getActualIndex to determine if the current index points to the correct exercise position.","lastModifiedDate":"2021-10-20"},{"lineNumber":84,"author":{"gitId":"tryyang2001"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":85,"author":{"gitId":"tryyang2001"},"content":"     * @param deletedExercise The exercise to delete","lastModifiedDate":"2021-10-20"},{"lineNumber":86,"author":{"gitId":"tryyang2001"},"content":"     * @param currentIndex    The current index of the entire exerciselist","lastModifiedDate":"2021-10-20"},{"lineNumber":87,"author":{"gitId":"tryyang2001"},"content":"     * @return True if the current exercise has the same date and time period as the deletedItem, false otherwise","lastModifiedDate":"2021-10-20"},{"lineNumber":88,"author":{"gitId":"tryyang2001"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":89,"author":{"gitId":"tryyang2001"},"content":"    protected boolean isListToQuery(Item deletedExercise, int currentIndex) {","lastModifiedDate":"2021-10-30"},{"lineNumber":90,"author":{"gitId":"tryyang2001"},"content":"        return internalItems.get(currentIndex).getDate().equals(deletedExercise.getDate());","lastModifiedDate":"2021-10-23"},{"lineNumber":91,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":92,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":93,"author":{"gitId":"tryyang2001"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":94,"author":{"gitId":"tryyang2001"},"content":"     * Helper function used in convertToString to extract exercises list","lastModifiedDate":"2021-10-18"},{"lineNumber":95,"author":{"gitId":"tryyang2001"},"content":"     * according to each date presented in the entire exercise list.","lastModifiedDate":"2021-10-18"},{"lineNumber":96,"author":{"gitId":"tryyang2001"},"content":"     *","lastModifiedDate":"2021-10-17"},{"lineNumber":97,"author":{"gitId":"tryyang2001"},"content":"     * @return String which contains exercise lists with different date","lastModifiedDate":"2021-10-17"},{"lineNumber":98,"author":{"gitId":"tryyang2001"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":99,"author":{"gitId":"tryyang2001"},"content":"    private StringBuilder extractExerciseListByEachDate() {","lastModifiedDate":"2021-10-17"},{"lineNumber":100,"author":{"gitId":"tryyang2001"},"content":"        StringBuilder exerciseListInString \u003d new StringBuilder();","lastModifiedDate":"2021-10-17"},{"lineNumber":101,"author":{"gitId":"tryyang2001"},"content":"        for (int index \u003d 0; index \u003c internalItems.size(); index++) {","lastModifiedDate":"2021-10-23"},{"lineNumber":102,"author":{"gitId":"tryyang2001"},"content":"            LocalDate currentDate \u003d internalItems.get(index).getDate();","lastModifiedDate":"2021-10-23"},{"lineNumber":103,"author":{"gitId":"tryyang2001"},"content":"            ExerciseList subList \u003d new ExerciseList();","lastModifiedDate":"2021-10-17"},{"lineNumber":104,"author":{"gitId":"tryyang2001"},"content":"            while (index \u003c internalItems.size() \u0026\u0026 currentDate.isEqual(internalItems.get(index).getDate())) {","lastModifiedDate":"2021-10-23"},{"lineNumber":105,"author":{"gitId":"tryyang2001"},"content":"                subList.addItem(internalItems.get(index++));","lastModifiedDate":"2021-10-23"},{"lineNumber":106,"author":{"gitId":"tryyang2001"},"content":"            }","lastModifiedDate":"2021-10-17"},{"lineNumber":107,"author":{"gitId":"tryyang2001"},"content":"            exerciseListInString.append(ITEM_LIST_DIVIDER).append(LS);","lastModifiedDate":"2021-10-24"},{"lineNumber":108,"author":{"gitId":"tryyang2001"},"content":"            convertItemCountToString(exerciseListInString,","lastModifiedDate":"2021-10-24"},{"lineNumber":109,"author":{"gitId":"tryyang2001"},"content":"                    subList.getSize(),","lastModifiedDate":"2021-10-24"},{"lineNumber":110,"author":{"gitId":"tryyang2001"},"content":"                    currentDate,","lastModifiedDate":"2021-10-24"},{"lineNumber":111,"author":{"gitId":"tryyang2001"},"content":"                    MESSAGE_EXERCISE_DONE_PER_DAY);","lastModifiedDate":"2021-10-24"},{"lineNumber":112,"author":{"gitId":"tryyang2001"},"content":"            for (int i \u003d 1; i \u003c\u003d subList.getSize(); i++) {","lastModifiedDate":"2021-10-17"},{"lineNumber":113,"author":{"gitId":"tryyang2001"},"content":"                convertItemToString(exerciseListInString, i, subList.getItem(i - 1));","lastModifiedDate":"2021-10-19"},{"lineNumber":114,"author":{"gitId":"tryyang2001"},"content":"            }","lastModifiedDate":"2021-10-18"},{"lineNumber":115,"author":{"gitId":"tryyang2001"},"content":"            convertTotalCaloriesToString(","lastModifiedDate":"2021-10-18"},{"lineNumber":116,"author":{"gitId":"tryyang2001"},"content":"                    exerciseListInString,","lastModifiedDate":"2021-10-18"},{"lineNumber":117,"author":{"gitId":"tryyang2001"},"content":"                    this.getTotalCaloriesWithDate(currentDate),","lastModifiedDate":"2021-10-18"},{"lineNumber":118,"author":{"gitId":"tryyang2001"},"content":"                    MESSAGE_TOTAL_CALORIE_BURNT_PER_DAY);","lastModifiedDate":"2021-10-24"},{"lineNumber":119,"author":{"gitId":"tryyang2001"},"content":"            index--;","lastModifiedDate":"2021-10-17"},{"lineNumber":120,"author":{"gitId":"tryyang2001"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":121,"author":{"gitId":"tryyang2001"},"content":"        exerciseListInString.append(ITEM_LIST_DIVIDER).append(LS);","lastModifiedDate":"2021-10-24"},{"lineNumber":122,"author":{"gitId":"tryyang2001"},"content":"        exerciseListInString.append(String.format(MESSAGE_TOTAL_EXERCISE_DONE_PER_WEEK, getSize())).append(LS);","lastModifiedDate":"2021-10-24"},{"lineNumber":123,"author":{"gitId":"tryyang2001"},"content":"        exerciseListInString.append(String.format(MESSAGE_TOTAL_CALORIE_BURNT_PER_WEEK, getTotalCalories()));","lastModifiedDate":"2021-10-24"},{"lineNumber":124,"author":{"gitId":"tryyang2001"},"content":"        exerciseListInString.append(LS);","lastModifiedDate":"2021-10-24"},{"lineNumber":125,"author":{"gitId":"tryyang2001"},"content":"        return exerciseListInString;","lastModifiedDate":"2021-10-17"},{"lineNumber":126,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":127,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":128,"author":{"gitId":"tryyang2001"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":129,"author":{"gitId":"tryyang2001"},"content":"     * Helper method used in convertToStringBySpecificDate for extracting","lastModifiedDate":"2021-10-18"},{"lineNumber":130,"author":{"gitId":"tryyang2001"},"content":"     * exercise list which contains all the exercises done on the date.","lastModifiedDate":"2021-10-18"},{"lineNumber":131,"author":{"gitId":"tryyang2001"},"content":"     *","lastModifiedDate":"2021-10-17"},{"lineNumber":132,"author":{"gitId":"tryyang2001"},"content":"     * @param date The date to query all the exercises done","lastModifiedDate":"2021-10-17"},{"lineNumber":133,"author":{"gitId":"tryyang2001"},"content":"     * @return StringBuilder type string which contains an exercise list with the given date","lastModifiedDate":"2021-10-17"},{"lineNumber":134,"author":{"gitId":"tryyang2001"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":135,"author":{"gitId":"tryyang2001"},"content":"    private StringBuilder extractExerciseListBySpecificDate(LocalDate date) {","lastModifiedDate":"2021-10-17"},{"lineNumber":136,"author":{"gitId":"tryyang2001"},"content":"        StringBuilder exerciseListInString \u003d new StringBuilder();","lastModifiedDate":"2021-10-19"},{"lineNumber":137,"author":{"gitId":"tryyang2001"},"content":"        ArrayList\u003cItem\u003e subList \u003d (ArrayList\u003cItem\u003e) this.internalItems.stream()","lastModifiedDate":"2021-10-23"},{"lineNumber":138,"author":{"gitId":"tryyang2001"},"content":"                .filter(e -\u003e e.getDate().isEqual(date))","lastModifiedDate":"2021-10-17"},{"lineNumber":139,"author":{"gitId":"tryyang2001"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2021-10-17"},{"lineNumber":140,"author":{"gitId":"tryyang2001"},"content":"        convertItemCountToString(exerciseListInString, subList.size(), date, MESSAGE_EXERCISE_DONE_PER_DAY);","lastModifiedDate":"2021-10-24"},{"lineNumber":141,"author":{"gitId":"tryyang2001"},"content":"        for (int i \u003d 1; i \u003c\u003d subList.size(); i++) {","lastModifiedDate":"2021-10-17"},{"lineNumber":142,"author":{"gitId":"tryyang2001"},"content":"            convertItemToString(exerciseListInString, i, subList.get(i - 1));","lastModifiedDate":"2021-10-18"},{"lineNumber":143,"author":{"gitId":"tryyang2001"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":144,"author":{"gitId":"tryyang2001"},"content":"        convertTotalCaloriesToString(","lastModifiedDate":"2021-10-18"},{"lineNumber":145,"author":{"gitId":"tryyang2001"},"content":"                exerciseListInString,","lastModifiedDate":"2021-10-18"},{"lineNumber":146,"author":{"gitId":"tryyang2001"},"content":"                this.getTotalCaloriesWithDate(date),","lastModifiedDate":"2021-10-18"},{"lineNumber":147,"author":{"gitId":"tryyang2001"},"content":"                MESSAGE_TOTAL_CALORIE_BURNT_PER_DAY);","lastModifiedDate":"2021-10-24"},{"lineNumber":148,"author":{"gitId":"tryyang2001"},"content":"        return exerciseListInString;","lastModifiedDate":"2021-10-17"},{"lineNumber":149,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":150,"author":{"gitId":"xingjie99"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"xingjie99":27,"tryyang2001":120,"tlyi":3}},{"path":"src/main/java/seedu/duke/data/item/exercise/FutureExerciseList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.data.item.exercise;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"xingjie99"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"xingjie99"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"xingjie99"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"xingjie99"},"content":"import java.util.Collections;","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"xingjie99"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-11-04"},{"lineNumber":8,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"xingjie99"},"content":"//@@author xingjie99","lastModifiedDate":"2021-11-05"},{"lineNumber":10,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":11,"author":{"gitId":"xingjie99"},"content":"public class FutureExerciseList extends ExerciseList {","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"xingjie99"},"content":"    private static final int ONE_DAY \u003d 1;","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"xingjie99"},"content":"    private static final int ONE_WEEK \u003d 7;","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"xingjie99"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"xingjie99"},"content":"     * Deletes and exercise item from the future exercise list.","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"xingjie99"},"content":"     *","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"xingjie99"},"content":"     * @param index Index of the exercise to be deleted.","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"xingjie99"},"content":"     * @return Exercise object removed.","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"xingjie99"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"xingjie99"},"content":"    public Exercise deleteItem(int index) {","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"xingjie99"},"content":"        return (Exercise) internalItems.remove(index);","lastModifiedDate":"2021-10-23"},{"lineNumber":24,"author":{"gitId":"xingjie99"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":25,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":26,"author":{"gitId":"xingjie99"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"xingjie99"},"content":"     * Converts the entire future exercise list to string format for printing purpose.","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"xingjie99"},"content":"     *","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"xingjie99"},"content":"     * @return The future exercise list in a single string.","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"xingjie99"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"xingjie99"},"content":"    @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":32,"author":{"gitId":"xingjie99"},"content":"    public String convertToString() {","lastModifiedDate":"2021-10-18"},{"lineNumber":33,"author":{"gitId":"xingjie99"},"content":"        StringBuilder futureExerciseListToString \u003d new StringBuilder();","lastModifiedDate":"2021-10-18"},{"lineNumber":34,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":35,"author":{"gitId":"xingjie99"},"content":"        for (int i \u003d 0; i \u003c internalItems.size(); i++) {","lastModifiedDate":"2021-10-23"},{"lineNumber":36,"author":{"gitId":"xingjie99"},"content":"            futureExerciseListToString","lastModifiedDate":"2021-10-18"},{"lineNumber":37,"author":{"gitId":"xingjie99"},"content":"                    .append(TAB)","lastModifiedDate":"2021-10-18"},{"lineNumber":38,"author":{"gitId":"xingjie99"},"content":"                    .append(i + 1)","lastModifiedDate":"2021-10-18"},{"lineNumber":39,"author":{"gitId":"xingjie99"},"content":"                    .append(\". \")","lastModifiedDate":"2021-10-18"},{"lineNumber":40,"author":{"gitId":"xingjie99"},"content":"                    .append(internalItems.get(i))","lastModifiedDate":"2021-10-23"},{"lineNumber":41,"author":{"gitId":"xingjie99"},"content":"                    .append(\" (\")","lastModifiedDate":"2021-10-18"},{"lineNumber":42,"author":{"gitId":"xingjie99"},"content":"                    .append(getDayOfWeek(internalItems.get(i).getDate()))","lastModifiedDate":"2021-10-23"},{"lineNumber":43,"author":{"gitId":"xingjie99"},"content":"                    .append(\" \")","lastModifiedDate":"2021-10-18"},{"lineNumber":44,"author":{"gitId":"xingjie99"},"content":"                    .append(internalItems.get(i).getDate().format(DateTimeFormatter.ofPattern(DATE_FORMAT)))","lastModifiedDate":"2021-10-23"},{"lineNumber":45,"author":{"gitId":"xingjie99"},"content":"                    .append(\")\")","lastModifiedDate":"2021-10-18"},{"lineNumber":46,"author":{"gitId":"xingjie99"},"content":"                    .append(LS);","lastModifiedDate":"2021-10-18"},{"lineNumber":47,"author":{"gitId":"xingjie99"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":48,"author":{"gitId":"xingjie99"},"content":"        return futureExerciseListToString.toString().stripTrailing();","lastModifiedDate":"2021-10-18"},{"lineNumber":49,"author":{"gitId":"xingjie99"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":50,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":51,"author":{"gitId":"xingjie99"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":52,"author":{"gitId":"xingjie99"},"content":"     * Adds all recurring exercises between two dates into the FutureExerciseList.","lastModifiedDate":"2021-10-20"},{"lineNumber":53,"author":{"gitId":"xingjie99"},"content":"     *","lastModifiedDate":"2021-10-28"},{"lineNumber":54,"author":{"gitId":"xingjie99"},"content":"     * @param description The name description of the recurring exercise","lastModifiedDate":"2021-10-28"},{"lineNumber":55,"author":{"gitId":"xingjie99"},"content":"     * @param calories The calorie burnt per each exercise","lastModifiedDate":"2021-10-28"},{"lineNumber":56,"author":{"gitId":"xingjie99"},"content":"     * @param startDate The starting date of the recurring exercise","lastModifiedDate":"2021-10-28"},{"lineNumber":57,"author":{"gitId":"xingjie99"},"content":"     * @param endDate The end date of the recurring exercise","lastModifiedDate":"2021-10-28"},{"lineNumber":58,"author":{"gitId":"xingjie99"},"content":"     * @param dayOfTheWeek The day(s) of the week for participating in the recurring exercise","lastModifiedDate":"2021-10-28"},{"lineNumber":59,"author":{"gitId":"xingjie99"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":60,"author":{"gitId":"xingjie99"},"content":"    public void addRecurringExercises(String description, int calories,","lastModifiedDate":"2021-10-20"},{"lineNumber":61,"author":{"gitId":"xingjie99"},"content":"                                      LocalDate startDate, LocalDate endDate, ArrayList\u003cInteger\u003e dayOfTheWeek) {","lastModifiedDate":"2021-10-20"},{"lineNumber":62,"author":{"gitId":"xingjie99"},"content":"        for (Integer day : dayOfTheWeek) {","lastModifiedDate":"2021-10-20"},{"lineNumber":63,"author":{"gitId":"xingjie99"},"content":"            int dayOfReoccurrence \u003d startDate.getDayOfWeek().getValue();","lastModifiedDate":"2021-10-20"},{"lineNumber":64,"author":{"gitId":"xingjie99"},"content":"            LocalDate currentDate \u003d startDate;","lastModifiedDate":"2021-10-20"},{"lineNumber":65,"author":{"gitId":"xingjie99"},"content":"            while (currentDate.isBefore(endDate) || currentDate.isEqual(endDate)) {","lastModifiedDate":"2021-10-20"},{"lineNumber":66,"author":{"gitId":"xingjie99"},"content":"                if (dayOfReoccurrence \u003d\u003d day) {","lastModifiedDate":"2021-10-20"},{"lineNumber":67,"author":{"gitId":"xingjie99"},"content":"                    super.addItem(new Exercise(description, calories, currentDate));","lastModifiedDate":"2021-10-24"},{"lineNumber":68,"author":{"gitId":"xingjie99"},"content":"                    currentDate \u003d currentDate.plusDays(ONE_WEEK);","lastModifiedDate":"2021-10-20"},{"lineNumber":69,"author":{"gitId":"xingjie99"},"content":"                } else {","lastModifiedDate":"2021-10-20"},{"lineNumber":70,"author":{"gitId":"xingjie99"},"content":"                    currentDate \u003d currentDate.plusDays(ONE_DAY);","lastModifiedDate":"2021-10-20"},{"lineNumber":71,"author":{"gitId":"xingjie99"},"content":"                }","lastModifiedDate":"2021-10-18"},{"lineNumber":72,"author":{"gitId":"xingjie99"},"content":"                dayOfReoccurrence \u003d currentDate.getDayOfWeek().getValue();","lastModifiedDate":"2021-10-28"},{"lineNumber":73,"author":{"gitId":"xingjie99"},"content":"            }","lastModifiedDate":"2021-10-18"},{"lineNumber":74,"author":{"gitId":"xingjie99"},"content":"            super.sortList();","lastModifiedDate":"2021-10-27"},{"lineNumber":75,"author":{"gitId":"xingjie99"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":76,"author":{"gitId":"xingjie99"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":77,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":78,"author":{"gitId":"xingjie99"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":79,"author":{"gitId":"xingjie99"},"content":"     * Deletes multiple items in the FutureExerciseList.","lastModifiedDate":"2021-11-04"},{"lineNumber":80,"author":{"gitId":"xingjie99"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":81,"author":{"gitId":"xingjie99"},"content":"     * @param itemIndexArray Array of indexes to delete from","lastModifiedDate":"2021-11-04"},{"lineNumber":82,"author":{"gitId":"xingjie99"},"content":"     * @throws IndexOutOfBoundsException Throws this exception if any of the index in the provided array does not exist","lastModifiedDate":"2021-11-04"},{"lineNumber":83,"author":{"gitId":"xingjie99"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":84,"author":{"gitId":"xingjie99"},"content":"    @Override","lastModifiedDate":"2021-11-04"},{"lineNumber":85,"author":{"gitId":"xingjie99"},"content":"    public String deleteMultipleItems(ArrayList\u003cInteger\u003e itemIndexArray) {","lastModifiedDate":"2021-11-04"},{"lineNumber":86,"author":{"gitId":"xingjie99"},"content":"        Collections.sort(itemIndexArray);","lastModifiedDate":"2021-11-04"},{"lineNumber":87,"author":{"gitId":"xingjie99"},"content":"        StringBuilder itemsToString \u003d new StringBuilder();","lastModifiedDate":"2021-11-04"},{"lineNumber":88,"author":{"gitId":"xingjie99"},"content":"        int numberPointer \u003d 0;","lastModifiedDate":"2021-11-04"},{"lineNumber":89,"author":{"gitId":"xingjie99"},"content":"        for (Integer index : itemIndexArray) {","lastModifiedDate":"2021-11-04"},{"lineNumber":90,"author":{"gitId":"xingjie99"},"content":"            itemsToString.append(LS)","lastModifiedDate":"2021-11-04"},{"lineNumber":91,"author":{"gitId":"xingjie99"},"content":"                    .append(TAB)","lastModifiedDate":"2021-11-04"},{"lineNumber":92,"author":{"gitId":"xingjie99"},"content":"                    .append(index + 1)","lastModifiedDate":"2021-11-04"},{"lineNumber":93,"author":{"gitId":"xingjie99"},"content":"                    .append(\". \")","lastModifiedDate":"2021-11-04"},{"lineNumber":94,"author":{"gitId":"xingjie99"},"content":"                    .append(getItem(index - numberPointer))","lastModifiedDate":"2021-11-04"},{"lineNumber":95,"author":{"gitId":"xingjie99"},"content":"                    .append(\" (\")","lastModifiedDate":"2021-11-04"},{"lineNumber":96,"author":{"gitId":"xingjie99"},"content":"                    .append(getDayOfWeek(getItem(index - numberPointer).getDate()))","lastModifiedDate":"2021-11-04"},{"lineNumber":97,"author":{"gitId":"xingjie99"},"content":"                    .append(\" \")","lastModifiedDate":"2021-11-04"},{"lineNumber":98,"author":{"gitId":"xingjie99"},"content":"                    .append(deleteItem(index - numberPointer).getDate()","lastModifiedDate":"2021-11-04"},{"lineNumber":99,"author":{"gitId":"xingjie99"},"content":"                            .format(DateTimeFormatter.ofPattern(DATE_FORMAT)))","lastModifiedDate":"2021-11-04"},{"lineNumber":100,"author":{"gitId":"xingjie99"},"content":"                    .append(\")\");","lastModifiedDate":"2021-11-04"},{"lineNumber":101,"author":{"gitId":"xingjie99"},"content":"            numberPointer++;","lastModifiedDate":"2021-11-04"},{"lineNumber":102,"author":{"gitId":"xingjie99"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":103,"author":{"gitId":"xingjie99"},"content":"        return itemsToString.toString().stripTrailing();","lastModifiedDate":"2021-11-04"},{"lineNumber":104,"author":{"gitId":"xingjie99"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":105,"author":{"gitId":"xingjie99"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"xingjie99":104,"tlyi":1}},{"path":"src/main/java/seedu/duke/data/item/food/Food.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.data.item.food;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"tlyi"},"content":"import seedu.duke.data.item.Item;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"tryyang2001"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-16"},{"lineNumber":6,"author":{"gitId":"tryyang2001"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"tryyang2001"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-10-16"},{"lineNumber":8,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":9,"author":{"gitId":"tryyang2001"},"content":"public class Food extends Item {","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"tryyang2001"},"content":"    public static final String FOOD_TYPE \u003d \"F\";","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"tryyang2001"},"content":"    private static final int EARLIEST_NIGHT_HOUR \u003d 21;","lastModifiedDate":"2021-10-17"},{"lineNumber":12,"author":{"gitId":"tryyang2001"},"content":"    private static final int LATEST_NIGHT_HOUR \u003d 4;","lastModifiedDate":"2021-10-17"},{"lineNumber":13,"author":{"gitId":"tryyang2001"},"content":"    private static final int EARLIEST_EVENING_HOUR \u003d 17;","lastModifiedDate":"2021-10-17"},{"lineNumber":14,"author":{"gitId":"tryyang2001"},"content":"    private static final int LATEST_EVENING_HOUR \u003d 20;","lastModifiedDate":"2021-10-17"},{"lineNumber":15,"author":{"gitId":"tryyang2001"},"content":"    private static final int EARLIEST_AFTERNOON_HOUR \u003d 12;","lastModifiedDate":"2021-10-17"},{"lineNumber":16,"author":{"gitId":"tryyang2001"},"content":"    private static final int LATEST_AFTERNOON_HOUR \u003d 16;","lastModifiedDate":"2021-10-17"},{"lineNumber":17,"author":{"gitId":"tryyang2001"},"content":"    private static final int EARLIEST_MORNING_HOUR \u003d 5;","lastModifiedDate":"2021-10-17"},{"lineNumber":18,"author":{"gitId":"tryyang2001"},"content":"    private static final int LATEST_MORNING_HOUR \u003d 11;","lastModifiedDate":"2021-10-17"},{"lineNumber":19,"author":{"gitId":"tryyang2001"},"content":"    public static final String MESSAGE_FOOD \u003d \"%s @ %s\";","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"tryyang2001"},"content":"    protected LocalDateTime dateTime;","lastModifiedDate":"2021-10-16"},{"lineNumber":21,"author":{"gitId":"tryyang2001"},"content":"    protected TimePeriod timePeriod;","lastModifiedDate":"2021-10-17"},{"lineNumber":22,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"tryyang2001"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"tryyang2001"},"content":"     * Constructor for the food object when the date and time are not provided.","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"tryyang2001"},"content":"     *","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"tryyang2001"},"content":"     * @param name     The name or description of the food","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"tryyang2001"},"content":"     * @param calories The calorie of the food consumed","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"tryyang2001"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"tryyang2001"},"content":"    public Food(String name, int calories) {","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"tryyang2001"},"content":"        super(name, calories);","lastModifiedDate":"2021-10-16"},{"lineNumber":31,"author":{"gitId":"tryyang2001"},"content":"        this.dateTime \u003d LocalDateTime.now(); //sets to current date and time","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"tryyang2001"},"content":"        setTimePeriod(this.dateTime);","lastModifiedDate":"2021-10-17"},{"lineNumber":33,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":34,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"tryyang2001"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":36,"author":{"gitId":"tryyang2001"},"content":"     * Constructor for the food object when all attributes are provided.","lastModifiedDate":"2021-10-19"},{"lineNumber":37,"author":{"gitId":"tryyang2001"},"content":"     *","lastModifiedDate":"2021-10-16"},{"lineNumber":38,"author":{"gitId":"tryyang2001"},"content":"     * @param name     The name or description of the food","lastModifiedDate":"2021-10-16"},{"lineNumber":39,"author":{"gitId":"tryyang2001"},"content":"     * @param calories The calorie intake from the food","lastModifiedDate":"2021-10-16"},{"lineNumber":40,"author":{"gitId":"tryyang2001"},"content":"     * @param dateTime The date and time when the food is consumed","lastModifiedDate":"2021-10-16"},{"lineNumber":41,"author":{"gitId":"tryyang2001"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":42,"author":{"gitId":"tryyang2001"},"content":"    public Food(String name, int calories, LocalDateTime dateTime) {","lastModifiedDate":"2021-10-16"},{"lineNumber":43,"author":{"gitId":"tryyang2001"},"content":"        super(name, calories);","lastModifiedDate":"2021-10-16"},{"lineNumber":44,"author":{"gitId":"tryyang2001"},"content":"        this.dateTime \u003d dateTime;","lastModifiedDate":"2021-10-16"},{"lineNumber":45,"author":{"gitId":"tryyang2001"},"content":"        setTimePeriod(this.dateTime);","lastModifiedDate":"2021-10-17"},{"lineNumber":46,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":47,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":48,"author":{"gitId":"tryyang2001"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003dGetter and Setter methods\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-28"},{"lineNumber":49,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":50,"author":{"gitId":"tryyang2001"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":51,"author":{"gitId":"tryyang2001"},"content":"     * Gets the date and time of the food consumed.","lastModifiedDate":"2021-10-16"},{"lineNumber":52,"author":{"gitId":"tryyang2001"},"content":"     *","lastModifiedDate":"2021-10-16"},{"lineNumber":53,"author":{"gitId":"tryyang2001"},"content":"     * @return The date and time of the food consumed in LocalDateTime","lastModifiedDate":"2021-10-16"},{"lineNumber":54,"author":{"gitId":"tryyang2001"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":55,"author":{"gitId":"tryyang2001"},"content":"    public LocalDateTime getDateTime() {","lastModifiedDate":"2021-10-16"},{"lineNumber":56,"author":{"gitId":"tryyang2001"},"content":"        return dateTime;","lastModifiedDate":"2021-10-16"},{"lineNumber":57,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":58,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":59,"author":{"gitId":"tryyang2001"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":60,"author":{"gitId":"tryyang2001"},"content":"     * Updates the date and time of the food consumed.","lastModifiedDate":"2021-10-16"},{"lineNumber":61,"author":{"gitId":"tryyang2001"},"content":"     *","lastModifiedDate":"2021-10-16"},{"lineNumber":62,"author":{"gitId":"tryyang2001"},"content":"     * @param dateTime The new date and time of the food consumed in LocalDateTime","lastModifiedDate":"2021-10-16"},{"lineNumber":63,"author":{"gitId":"tryyang2001"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":64,"author":{"gitId":"tryyang2001"},"content":"    public void setDateTime(LocalDateTime dateTime) {","lastModifiedDate":"2021-10-16"},{"lineNumber":65,"author":{"gitId":"tryyang2001"},"content":"        this.dateTime \u003d dateTime;","lastModifiedDate":"2021-10-16"},{"lineNumber":66,"author":{"gitId":"tryyang2001"},"content":"        setTimePeriod(this.dateTime);","lastModifiedDate":"2021-10-17"},{"lineNumber":67,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":68,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":69,"author":{"gitId":"tryyang2001"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":70,"author":{"gitId":"tryyang2001"},"content":"     * Gets the date of the food consumed.","lastModifiedDate":"2021-10-16"},{"lineNumber":71,"author":{"gitId":"tryyang2001"},"content":"     *","lastModifiedDate":"2021-10-16"},{"lineNumber":72,"author":{"gitId":"tryyang2001"},"content":"     * @return The date of the food consumed in LocalDate","lastModifiedDate":"2021-10-16"},{"lineNumber":73,"author":{"gitId":"tryyang2001"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":74,"author":{"gitId":"tryyang2001"},"content":"    @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":75,"author":{"gitId":"tryyang2001"},"content":"    public LocalDate getDate() {","lastModifiedDate":"2021-10-16"},{"lineNumber":76,"author":{"gitId":"tryyang2001"},"content":"        return this.dateTime.toLocalDate();","lastModifiedDate":"2021-10-16"},{"lineNumber":77,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":78,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":79,"author":{"gitId":"tryyang2001"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":80,"author":{"gitId":"tryyang2001"},"content":"     * Updates the date of the food consumed.","lastModifiedDate":"2021-10-19"},{"lineNumber":81,"author":{"gitId":"tryyang2001"},"content":"     *","lastModifiedDate":"2021-10-19"},{"lineNumber":82,"author":{"gitId":"tryyang2001"},"content":"     * @param date The new date of the food consumed in LocalDate","lastModifiedDate":"2021-10-19"},{"lineNumber":83,"author":{"gitId":"tryyang2001"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":84,"author":{"gitId":"tryyang2001"},"content":"    public void setDate(LocalDate date) {","lastModifiedDate":"2021-10-19"},{"lineNumber":85,"author":{"gitId":"tryyang2001"},"content":"        LocalTime time \u003d this.dateTime.toLocalTime();","lastModifiedDate":"2021-10-19"},{"lineNumber":86,"author":{"gitId":"tryyang2001"},"content":"        setDateTime(date.atTime(time));","lastModifiedDate":"2021-10-19"},{"lineNumber":87,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":88,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":89,"author":{"gitId":"tryyang2001"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":90,"author":{"gitId":"tryyang2001"},"content":"     * Gets the time of the food consumed.","lastModifiedDate":"2021-10-16"},{"lineNumber":91,"author":{"gitId":"tryyang2001"},"content":"     *","lastModifiedDate":"2021-10-16"},{"lineNumber":92,"author":{"gitId":"tryyang2001"},"content":"     * @return The time of the food consumed in LocalTime","lastModifiedDate":"2021-10-16"},{"lineNumber":93,"author":{"gitId":"tryyang2001"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":94,"author":{"gitId":"tryyang2001"},"content":"    public LocalTime getTime() {","lastModifiedDate":"2021-10-16"},{"lineNumber":95,"author":{"gitId":"tryyang2001"},"content":"        return this.dateTime.toLocalTime();","lastModifiedDate":"2021-10-16"},{"lineNumber":96,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":97,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":98,"author":{"gitId":"tryyang2001"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":99,"author":{"gitId":"tryyang2001"},"content":"     * Updates the time of the food consumed.","lastModifiedDate":"2021-10-19"},{"lineNumber":100,"author":{"gitId":"tryyang2001"},"content":"     *","lastModifiedDate":"2021-10-19"},{"lineNumber":101,"author":{"gitId":"tryyang2001"},"content":"     * @param time The new time of the food consumed","lastModifiedDate":"2021-10-19"},{"lineNumber":102,"author":{"gitId":"tryyang2001"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":103,"author":{"gitId":"tryyang2001"},"content":"    public void setTime(LocalTime time) {","lastModifiedDate":"2021-10-19"},{"lineNumber":104,"author":{"gitId":"tryyang2001"},"content":"        LocalDate date \u003d this.dateTime.toLocalDate();","lastModifiedDate":"2021-10-19"},{"lineNumber":105,"author":{"gitId":"tryyang2001"},"content":"        setDateTime(date.atTime(time));","lastModifiedDate":"2021-10-19"},{"lineNumber":106,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":107,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":108,"author":{"gitId":"tryyang2001"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":109,"author":{"gitId":"tryyang2001"},"content":"     * Gets the time period of the food consumed.","lastModifiedDate":"2021-10-17"},{"lineNumber":110,"author":{"gitId":"tryyang2001"},"content":"     *","lastModifiedDate":"2021-10-19"},{"lineNumber":111,"author":{"gitId":"tryyang2001"},"content":"     * @return TimePeriod enum which represents the time period","lastModifiedDate":"2021-10-17"},{"lineNumber":112,"author":{"gitId":"tryyang2001"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":113,"author":{"gitId":"tryyang2001"},"content":"    public TimePeriod getTimePeriod() {","lastModifiedDate":"2021-10-17"},{"lineNumber":114,"author":{"gitId":"tryyang2001"},"content":"        return timePeriod;","lastModifiedDate":"2021-10-17"},{"lineNumber":115,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":116,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":117,"author":{"gitId":"tryyang2001"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003dTo String methods\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-28"},{"lineNumber":118,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":119,"author":{"gitId":"tryyang2001"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":120,"author":{"gitId":"tryyang2001"},"content":"     * Converts the Food item to string for printing in the Food List.","lastModifiedDate":"2021-10-27"},{"lineNumber":121,"author":{"gitId":"tryyang2001"},"content":"     *","lastModifiedDate":"2021-10-27"},{"lineNumber":122,"author":{"gitId":"tryyang2001"},"content":"     * @return String pattern of Food item with time but no date","lastModifiedDate":"2021-10-27"},{"lineNumber":123,"author":{"gitId":"tryyang2001"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":124,"author":{"gitId":"tlyi"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":125,"author":{"gitId":"tryyang2001"},"content":"    public String toString() {","lastModifiedDate":"2021-10-19"},{"lineNumber":126,"author":{"gitId":"tryyang2001"},"content":"        return String.format(MESSAGE_FOOD, super.toString(), this.getTime().format(TIME_FORMATTER));","lastModifiedDate":"2021-10-24"},{"lineNumber":127,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":128,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":129,"author":{"gitId":"tryyang2001"},"content":"    /**","lastModifiedDate":"2021-10-28"},{"lineNumber":130,"author":{"gitId":"tryyang2001"},"content":"     * Converts the food item in string format which only shows the food item name description and calorie.","lastModifiedDate":"2021-10-28"},{"lineNumber":131,"author":{"gitId":"tryyang2001"},"content":"     *","lastModifiedDate":"2021-10-28"},{"lineNumber":132,"author":{"gitId":"tryyang2001"},"content":"     * @return The food item name and calorie display","lastModifiedDate":"2021-10-28"},{"lineNumber":133,"author":{"gitId":"tryyang2001"},"content":"     */","lastModifiedDate":"2021-10-28"},{"lineNumber":134,"author":{"gitId":"tryyang2001"},"content":"    @Override","lastModifiedDate":"2021-10-28"},{"lineNumber":135,"author":{"gitId":"tryyang2001"},"content":"    public String toStringWithoutDateAndTime() {","lastModifiedDate":"2021-10-28"},{"lineNumber":136,"author":{"gitId":"tryyang2001"},"content":"        return super.toString();","lastModifiedDate":"2021-10-28"},{"lineNumber":137,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":138,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":139,"author":{"gitId":"tryyang2001"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":140,"author":{"gitId":"tryyang2001"},"content":"     * Converts the Food item to string for printing after adding or deleting food.","lastModifiedDate":"2021-10-27"},{"lineNumber":141,"author":{"gitId":"tryyang2001"},"content":"     *","lastModifiedDate":"2021-10-27"},{"lineNumber":142,"author":{"gitId":"tryyang2001"},"content":"     * @return String pattern of Food item with time and date","lastModifiedDate":"2021-10-27"},{"lineNumber":143,"author":{"gitId":"tryyang2001"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":144,"author":{"gitId":"tryyang2001"},"content":"    public String toStringWithDate() {","lastModifiedDate":"2021-10-27"},{"lineNumber":145,"author":{"gitId":"tryyang2001"},"content":"        return this + \", \" + this.getDate().format(DATE_FORMAT_FOR_PRINTING);","lastModifiedDate":"2021-10-27"},{"lineNumber":146,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":147,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":148,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":149,"author":{"gitId":"tryyang2001"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003dStorage methods\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-30"},{"lineNumber":150,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":151,"author":{"gitId":"tryyang2001"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":152,"author":{"gitId":"tryyang2001"},"content":"     * Converts the food to external file string format.","lastModifiedDate":"2021-10-16"},{"lineNumber":153,"author":{"gitId":"tlyi"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":154,"author":{"gitId":"tryyang2001"},"content":"     * @return Name, calorie, date and time of the food in string","lastModifiedDate":"2021-10-18"},{"lineNumber":155,"author":{"gitId":"tryyang2001"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":156,"author":{"gitId":"tryyang2001"},"content":"    @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":157,"author":{"gitId":"tryyang2001"},"content":"    public String toFileTextString() {","lastModifiedDate":"2021-10-11"},{"lineNumber":158,"author":{"gitId":"tryyang2001"},"content":"        return FOOD_TYPE","lastModifiedDate":"2021-10-18"},{"lineNumber":159,"author":{"gitId":"tryyang2001"},"content":"                + super.toFileTextString()","lastModifiedDate":"2021-10-18"},{"lineNumber":160,"author":{"gitId":"tryyang2001"},"content":"                + FILE_TEXT_DELIMITER","lastModifiedDate":"2021-10-18"},{"lineNumber":161,"author":{"gitId":"tryyang2001"},"content":"                + this.getDateTime().format(DATE_TIME_FORMATTER);","lastModifiedDate":"2021-10-19"},{"lineNumber":162,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":163,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":164,"author":{"gitId":"tryyang2001"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003dPrivate methods\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-28"},{"lineNumber":165,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":166,"author":{"gitId":"tryyang2001"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":167,"author":{"gitId":"tryyang2001"},"content":"     * Sets or updates time period according to the time provided in dateTime.","lastModifiedDate":"2021-10-17"},{"lineNumber":168,"author":{"gitId":"tryyang2001"},"content":"     *","lastModifiedDate":"2021-10-17"},{"lineNumber":169,"author":{"gitId":"tryyang2001"},"content":"     * @param dateTime Date and time provided","lastModifiedDate":"2021-10-17"},{"lineNumber":170,"author":{"gitId":"tryyang2001"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":171,"author":{"gitId":"tryyang2001"},"content":"    private void setTimePeriod(LocalDateTime dateTime) {","lastModifiedDate":"2021-10-17"},{"lineNumber":172,"author":{"gitId":"tryyang2001"},"content":"        if (isMorning(dateTime)) {","lastModifiedDate":"2021-10-17"},{"lineNumber":173,"author":{"gitId":"tryyang2001"},"content":"            this.timePeriod \u003d TimePeriod.MORNING;","lastModifiedDate":"2021-11-08"},{"lineNumber":174,"author":{"gitId":"tryyang2001"},"content":"        } else if (isAfternoon(dateTime)) {","lastModifiedDate":"2021-10-17"},{"lineNumber":175,"author":{"gitId":"tryyang2001"},"content":"            this.timePeriod \u003d TimePeriod.AFTERNOON;","lastModifiedDate":"2021-11-08"},{"lineNumber":176,"author":{"gitId":"tryyang2001"},"content":"        } else if (isEvening(dateTime)) {","lastModifiedDate":"2021-10-17"},{"lineNumber":177,"author":{"gitId":"tryyang2001"},"content":"            this.timePeriod \u003d TimePeriod.EVENING;","lastModifiedDate":"2021-11-08"},{"lineNumber":178,"author":{"gitId":"tryyang2001"},"content":"        } else if (isNight(dateTime)) {","lastModifiedDate":"2021-10-17"},{"lineNumber":179,"author":{"gitId":"tryyang2001"},"content":"            this.timePeriod \u003d TimePeriod.NIGHT;","lastModifiedDate":"2021-11-08"},{"lineNumber":180,"author":{"gitId":"tryyang2001"},"content":"        } else {","lastModifiedDate":"2021-10-17"},{"lineNumber":181,"author":{"gitId":"tryyang2001"},"content":"            this.timePeriod \u003d null;","lastModifiedDate":"2021-10-17"},{"lineNumber":182,"author":{"gitId":"tryyang2001"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":183,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":184,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":185,"author":{"gitId":"tryyang2001"},"content":"    private boolean isNight(LocalDateTime dateTime) {","lastModifiedDate":"2021-10-17"},{"lineNumber":186,"author":{"gitId":"tryyang2001"},"content":"        return dateTime.getHour() \u003e\u003d EARLIEST_NIGHT_HOUR || dateTime.getHour() \u003c\u003d LATEST_NIGHT_HOUR;","lastModifiedDate":"2021-10-17"},{"lineNumber":187,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":188,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":189,"author":{"gitId":"tryyang2001"},"content":"    private boolean isEvening(LocalDateTime dateTime) {","lastModifiedDate":"2021-10-17"},{"lineNumber":190,"author":{"gitId":"tryyang2001"},"content":"        return dateTime.getHour() \u003e\u003d EARLIEST_EVENING_HOUR \u0026\u0026 dateTime.getHour() \u003c\u003d LATEST_EVENING_HOUR;","lastModifiedDate":"2021-10-17"},{"lineNumber":191,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":192,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":193,"author":{"gitId":"tryyang2001"},"content":"    private boolean isAfternoon(LocalDateTime dateTime) {","lastModifiedDate":"2021-10-17"},{"lineNumber":194,"author":{"gitId":"tryyang2001"},"content":"        return dateTime.getHour() \u003e\u003d EARLIEST_AFTERNOON_HOUR \u0026\u0026 dateTime.getHour() \u003c\u003d LATEST_AFTERNOON_HOUR;","lastModifiedDate":"2021-10-17"},{"lineNumber":195,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":196,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":197,"author":{"gitId":"tryyang2001"},"content":"    private boolean isMorning(LocalDateTime dateTime) {","lastModifiedDate":"2021-10-17"},{"lineNumber":198,"author":{"gitId":"tryyang2001"},"content":"        return dateTime.getHour() \u003e\u003d EARLIEST_MORNING_HOUR \u0026\u0026 dateTime.getHour() \u003c\u003d LATEST_MORNING_HOUR;","lastModifiedDate":"2021-10-17"},{"lineNumber":199,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":200,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":201,"author":{"gitId":"tryyang2001"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"tryyang2001":197,"tlyi":4}},{"path":"src/main/java/seedu/duke/data/item/food/FoodList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.data.item.food;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"tlyi"},"content":"import seedu.duke.data.item.Item;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"tlyi"},"content":"import seedu.duke.data.item.ItemList;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"tryyang2001"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"tryyang2001"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"tryyang2001"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"tryyang2001"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"tryyang2001"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"tryyang2001"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-10-16"},{"lineNumber":12,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"tryyang2001"},"content":"public class FoodList extends ItemList {","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"tryyang2001"},"content":"    public static final String MESSAGE_FOOD_CONSUMED \u003d \"You have consumed %d food item(s) on %s (%s):\";","lastModifiedDate":"2021-10-17"},{"lineNumber":15,"author":{"gitId":"tryyang2001"},"content":"    public static final String MESSAGE_TOTAL_CALORIE_CONSUMED_PER_DAY \u003d \"Total calories consumed in the day: %d cal\";","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"tryyang2001"},"content":"    public static final String MESSAGE_TOTAL_CALORIE_CONSUMED_PER_WEEK \u003d \"Total calories consumed in this week: %d cal\";","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"tryyang2001"},"content":"    public static final String MESSAGE_MORNING \u003d \"In the morning:\";","lastModifiedDate":"2021-10-17"},{"lineNumber":18,"author":{"gitId":"tryyang2001"},"content":"    public static final String MESSAGE_AFTERNOON \u003d \"In the afternoon:\";","lastModifiedDate":"2021-10-17"},{"lineNumber":19,"author":{"gitId":"tryyang2001"},"content":"    public static final String MESSAGE_EVENING \u003d \"In the evening:\";","lastModifiedDate":"2021-10-17"},{"lineNumber":20,"author":{"gitId":"tryyang2001"},"content":"    public static final String MESSAGE_NIGHT \u003d \"At night:\";","lastModifiedDate":"2021-10-17"},{"lineNumber":21,"author":{"gitId":"tryyang2001"},"content":"    public static final String MESSAGE_NO_FOOD_IN_DATE_TIME \u003d","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"tryyang2001"},"content":"            \"There is no food item found by the given date and time period\";","lastModifiedDate":"2021-10-17"},{"lineNumber":23,"author":{"gitId":"tryyang2001"},"content":"    public static final String MESSAGE_NO_FOOD_IN_DATE \u003d \"There is no food item found by the given date\";","lastModifiedDate":"2021-10-17"},{"lineNumber":24,"author":{"gitId":"tryyang2001"},"content":"    public static final String MESSAGE_TOTAL_FOOD_CONSUMED_PER_WEEK \u003d \"Total number of food consumed in this week: %d\";","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"tryyang2001"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"tryyang2001"},"content":"     * Default constructor for food list.","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"tryyang2001"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"tryyang2001"},"content":"    public FoodList() {","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"tryyang2001"},"content":"        internalItems \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-23"},{"lineNumber":31,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":33,"author":{"gitId":"tryyang2001"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":34,"author":{"gitId":"tryyang2001"},"content":"     * Deletes a food item according to its index number, date and time.","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"tryyang2001"},"content":"     *","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"tryyang2001"},"content":"     * @param index The index of the food item as shown in the view f/ command","lastModifiedDate":"2021-10-19"},{"lineNumber":37,"author":{"gitId":"tryyang2001"},"content":"     * @param date  The date of the food item consumed","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"tryyang2001"},"content":"     * @param time  The time of the food item consumed","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"tryyang2001"},"content":"     * @return The deleted food item","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"tryyang2001"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":41,"author":{"gitId":"tryyang2001"},"content":"    public Food deleteItem(int index, LocalDate date, LocalTime time) {","lastModifiedDate":"2021-10-19"},{"lineNumber":42,"author":{"gitId":"tryyang2001"},"content":"        LocalDateTime dateTime \u003d date.atTime(time);","lastModifiedDate":"2021-10-19"},{"lineNumber":43,"author":{"gitId":"tryyang2001"},"content":"        Food deletedFood \u003d new Food(\"\", 0, dateTime); //constructs food object to get the time period","lastModifiedDate":"2021-10-19"},{"lineNumber":44,"author":{"gitId":"tryyang2001"},"content":"        int actualIndex \u003d getActualIndex(index, deletedFood);","lastModifiedDate":"2021-10-19"},{"lineNumber":45,"author":{"gitId":"tryyang2001"},"content":"        //actualIndex is set to -1 if the provided index is not correct","lastModifiedDate":"2021-10-19"},{"lineNumber":46,"author":{"gitId":"tryyang2001"},"content":"        deletedFood \u003d (Food) internalItems.remove(actualIndex);","lastModifiedDate":"2021-10-23"},{"lineNumber":47,"author":{"gitId":"tryyang2001"},"content":"        return deletedFood;","lastModifiedDate":"2021-10-19"},{"lineNumber":48,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":49,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":50,"author":{"gitId":"tryyang2001"},"content":"    /**","lastModifiedDate":"2021-10-28"},{"lineNumber":51,"author":{"gitId":"tryyang2001"},"content":"     * Sorts the food list in ascending format according to the date and time.","lastModifiedDate":"2021-10-28"},{"lineNumber":52,"author":{"gitId":"tryyang2001"},"content":"     */","lastModifiedDate":"2021-10-28"},{"lineNumber":53,"author":{"gitId":"tryyang2001"},"content":"    @Override","lastModifiedDate":"2021-10-28"},{"lineNumber":54,"author":{"gitId":"tryyang2001"},"content":"    public void sortList() {","lastModifiedDate":"2021-10-28"},{"lineNumber":55,"author":{"gitId":"tryyang2001"},"content":"        this.internalItems.sort(Comparator.comparing(Item::getDateTime));","lastModifiedDate":"2021-10-28"},{"lineNumber":56,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":57,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":58,"author":{"gitId":"tryyang2001"},"content":"    /**","lastModifiedDate":"2021-10-28"},{"lineNumber":59,"author":{"gitId":"tryyang2001"},"content":"     * Counts the number of food items consumed at night in the week.","lastModifiedDate":"2021-10-28"},{"lineNumber":60,"author":{"gitId":"tryyang2001"},"content":"     *","lastModifiedDate":"2021-10-28"},{"lineNumber":61,"author":{"gitId":"tryyang2001"},"content":"     * @return The integer value count which indicates the number of food items consumed at night","lastModifiedDate":"2021-10-28"},{"lineNumber":62,"author":{"gitId":"tryyang2001"},"content":"     */","lastModifiedDate":"2021-10-28"},{"lineNumber":63,"author":{"gitId":"tryyang2001"},"content":"    public int getSupperCount() {","lastModifiedDate":"2021-10-28"},{"lineNumber":64,"author":{"gitId":"tryyang2001"},"content":"        return (int) internalItems.stream().filter(f -\u003e f.getTimePeriod().equals(TimePeriod.NIGHT)).count();","lastModifiedDate":"2021-11-08"},{"lineNumber":65,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":66,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":67,"author":{"gitId":"tryyang2001"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003dPrinting methods\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-28"},{"lineNumber":68,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":69,"author":{"gitId":"tryyang2001"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":70,"author":{"gitId":"tryyang2001"},"content":"     * Converts the entire food list to string format for printing purpose.","lastModifiedDate":"2021-10-11"},{"lineNumber":71,"author":{"gitId":"tryyang2001"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":72,"author":{"gitId":"tryyang2001"},"content":"     * @return The food list in a single string","lastModifiedDate":"2021-10-10"},{"lineNumber":73,"author":{"gitId":"tryyang2001"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":74,"author":{"gitId":"tryyang2001"},"content":"    @Override","lastModifiedDate":"2021-10-16"},{"lineNumber":75,"author":{"gitId":"tryyang2001"},"content":"    public String convertToString() {","lastModifiedDate":"2021-10-10"},{"lineNumber":76,"author":{"gitId":"tryyang2001"},"content":"        StringBuilder foodListInString \u003d extractFoodListByEachDateAndTimePeriod();","lastModifiedDate":"2021-10-18"},{"lineNumber":77,"author":{"gitId":"tryyang2001"},"content":"        return foodListInString.toString().stripTrailing();","lastModifiedDate":"2021-10-16"},{"lineNumber":78,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":79,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":80,"author":{"gitId":"tryyang2001"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":81,"author":{"gitId":"tryyang2001"},"content":"     * Converts the food list of a specific date to string format for printing purpose.","lastModifiedDate":"2021-10-16"},{"lineNumber":82,"author":{"gitId":"tryyang2001"},"content":"     *","lastModifiedDate":"2021-10-16"},{"lineNumber":83,"author":{"gitId":"tryyang2001"},"content":"     * @param date The date for the food list","lastModifiedDate":"2021-10-16"},{"lineNumber":84,"author":{"gitId":"tryyang2001"},"content":"     * @return The food list of the specific date in a single string","lastModifiedDate":"2021-10-16"},{"lineNumber":85,"author":{"gitId":"tryyang2001"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":86,"author":{"gitId":"tryyang2001"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":87,"author":{"gitId":"tryyang2001"},"content":"    public String convertToStringBySpecificDate(LocalDate date) {","lastModifiedDate":"2021-10-18"},{"lineNumber":88,"author":{"gitId":"tryyang2001"},"content":"        StringBuilder foodListInString \u003d extractFoodListBySpecificDate(date);","lastModifiedDate":"2021-10-16"},{"lineNumber":89,"author":{"gitId":"weidak"},"content":"        return foodListInString.toString().stripTrailing();","lastModifiedDate":"2021-10-14"},{"lineNumber":90,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":91,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":92,"author":{"gitId":"tryyang2001"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":93,"author":{"gitId":"tryyang2001"},"content":"     * Extracts a food list according to the given date and time period and converts it to string for printing purpose.","lastModifiedDate":"2021-10-17"},{"lineNumber":94,"author":{"gitId":"tryyang2001"},"content":"     *","lastModifiedDate":"2021-10-17"},{"lineNumber":95,"author":{"gitId":"tryyang2001"},"content":"     * @param date       The date given to query the food list","lastModifiedDate":"2021-10-17"},{"lineNumber":96,"author":{"gitId":"tryyang2001"},"content":"     * @param timePeriod The time period given to query the food list","lastModifiedDate":"2021-10-17"},{"lineNumber":97,"author":{"gitId":"tryyang2001"},"content":"     * @return The food list of the specific date and time period in a single string","lastModifiedDate":"2021-10-18"},{"lineNumber":98,"author":{"gitId":"tryyang2001"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":99,"author":{"gitId":"tryyang2001"},"content":"    public String convertToStringBySpecificDateAndTime(LocalDate date, TimePeriod timePeriod) {","lastModifiedDate":"2021-10-17"},{"lineNumber":100,"author":{"gitId":"tryyang2001"},"content":"        StringBuilder foodListInString \u003d new StringBuilder();","lastModifiedDate":"2021-10-17"},{"lineNumber":101,"author":{"gitId":"tryyang2001"},"content":"        ArrayList\u003cItem\u003e subList \u003d filterListAccordingToDateAndTimePeriod(date, timePeriod);","lastModifiedDate":"2021-10-19"},{"lineNumber":102,"author":{"gitId":"tryyang2001"},"content":"        if (subList.size() \u003d\u003d 0) {","lastModifiedDate":"2021-10-17"},{"lineNumber":103,"author":{"gitId":"tryyang2001"},"content":"            foodListInString","lastModifiedDate":"2021-10-17"},{"lineNumber":104,"author":{"gitId":"tryyang2001"},"content":"                    .append(MESSAGE_NO_FOOD_IN_DATE_TIME)","lastModifiedDate":"2021-10-18"},{"lineNumber":105,"author":{"gitId":"tryyang2001"},"content":"                    .append(ItemList.LS);","lastModifiedDate":"2021-10-17"},{"lineNumber":106,"author":{"gitId":"tryyang2001"},"content":"            return foodListInString.toString().stripTrailing();","lastModifiedDate":"2021-10-17"},{"lineNumber":107,"author":{"gitId":"tryyang2001"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":108,"author":{"gitId":"tryyang2001"},"content":"        processListToString(date, timePeriod, foodListInString, subList);","lastModifiedDate":"2021-10-18"},{"lineNumber":109,"author":{"gitId":"tryyang2001"},"content":"        return foodListInString.toString().stripTrailing();","lastModifiedDate":"2021-10-17"},{"lineNumber":110,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":111,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":112,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":113,"author":{"gitId":"tryyang2001"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003dPrivate methods\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-28"},{"lineNumber":114,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":115,"author":{"gitId":"tryyang2001"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":116,"author":{"gitId":"tryyang2001"},"content":"     * Helper method used in getActualIndex to determine if the current index points to the correct food position.","lastModifiedDate":"2021-10-19"},{"lineNumber":117,"author":{"gitId":"tryyang2001"},"content":"     *","lastModifiedDate":"2021-10-18"},{"lineNumber":118,"author":{"gitId":"tryyang2001"},"content":"     * @param deletedFood  The food item to delete","lastModifiedDate":"2021-10-18"},{"lineNumber":119,"author":{"gitId":"tryyang2001"},"content":"     * @param currentIndex The current index of the entire food list","lastModifiedDate":"2021-10-18"},{"lineNumber":120,"author":{"gitId":"tryyang2001"},"content":"     * @return True if the current food item has the same date and time period as the deletedFood, false otherwise","lastModifiedDate":"2021-10-19"},{"lineNumber":121,"author":{"gitId":"tryyang2001"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":122,"author":{"gitId":"tryyang2001"},"content":"    protected boolean isListToQuery(Item deletedFood, int currentIndex) {","lastModifiedDate":"2021-10-30"},{"lineNumber":123,"author":{"gitId":"tryyang2001"},"content":"        boolean isSameDate \u003d internalItems.get(currentIndex).getDate().equals(deletedFood.getDate());","lastModifiedDate":"2021-10-23"},{"lineNumber":124,"author":{"gitId":"tryyang2001"},"content":"        boolean isSameTimePeriod \u003d internalItems.get(currentIndex).getTimePeriod().equals(deletedFood.getTimePeriod());","lastModifiedDate":"2021-10-23"},{"lineNumber":125,"author":{"gitId":"tryyang2001"},"content":"        return isSameDate \u0026\u0026 isSameTimePeriod;","lastModifiedDate":"2021-10-19"},{"lineNumber":126,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":127,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":128,"author":{"gitId":"tryyang2001"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":129,"author":{"gitId":"tryyang2001"},"content":"     * Helper boolean method used in getActualIndex to determine if the food item is the food to delete.","lastModifiedDate":"2021-10-19"},{"lineNumber":130,"author":{"gitId":"tryyang2001"},"content":"     *","lastModifiedDate":"2021-10-19"},{"lineNumber":131,"author":{"gitId":"tryyang2001"},"content":"     * @param deletedFood  The food item to delete","lastModifiedDate":"2021-10-19"},{"lineNumber":132,"author":{"gitId":"tryyang2001"},"content":"     * @param currentIndex The current index of the entire food list","lastModifiedDate":"2021-10-19"},{"lineNumber":133,"author":{"gitId":"tryyang2001"},"content":"     * @param index        The food index to delete as shown in view f/","lastModifiedDate":"2021-10-19"},{"lineNumber":134,"author":{"gitId":"tryyang2001"},"content":"     * @return True if the current food item is the food to delete, false otherwise","lastModifiedDate":"2021-10-19"},{"lineNumber":135,"author":{"gitId":"tryyang2001"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":136,"author":{"gitId":"tryyang2001"},"content":"    protected boolean isItemToDelete(Item deletedFood, int currentIndex, int index) {","lastModifiedDate":"2021-10-30"},{"lineNumber":137,"author":{"gitId":"tryyang2001"},"content":"        return internalItems.get(currentIndex + index).getTimePeriod().equals(deletedFood.getTimePeriod());","lastModifiedDate":"2021-10-23"},{"lineNumber":138,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":139,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":140,"author":{"gitId":"tryyang2001"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":141,"author":{"gitId":"tryyang2001"},"content":"     * Helper method used in convertToStringBySpecificDateAndTime to append strings to the string builder.","lastModifiedDate":"2021-10-18"},{"lineNumber":142,"author":{"gitId":"tryyang2001"},"content":"     *","lastModifiedDate":"2021-10-18"},{"lineNumber":143,"author":{"gitId":"tryyang2001"},"content":"     * @param date             The date to query the food list","lastModifiedDate":"2021-10-18"},{"lineNumber":144,"author":{"gitId":"tryyang2001"},"content":"     * @param timePeriod       The time period to query the food list","lastModifiedDate":"2021-10-18"},{"lineNumber":145,"author":{"gitId":"tryyang2001"},"content":"     * @param foodListInString The StringBuilder food list which contains the correct output string","lastModifiedDate":"2021-10-18"},{"lineNumber":146,"author":{"gitId":"tryyang2001"},"content":"     * @param subList          The array list of food items that contains all the food items with same date and time","lastModifiedDate":"2021-10-18"},{"lineNumber":147,"author":{"gitId":"tryyang2001"},"content":"     *                         period as the given date and timePeriod","lastModifiedDate":"2021-10-18"},{"lineNumber":148,"author":{"gitId":"tryyang2001"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":149,"author":{"gitId":"tryyang2001"},"content":"    private void processListToString(LocalDate date, TimePeriod timePeriod,","lastModifiedDate":"2021-10-18"},{"lineNumber":150,"author":{"gitId":"tryyang2001"},"content":"                                     StringBuilder foodListInString, ArrayList\u003cItem\u003e subList) {","lastModifiedDate":"2021-10-19"},{"lineNumber":151,"author":{"gitId":"tryyang2001"},"content":"        FoodList timePeriodList \u003d new FoodList();","lastModifiedDate":"2021-10-18"},{"lineNumber":152,"author":{"gitId":"tryyang2001"},"content":"        for (Item f : subList) {","lastModifiedDate":"2021-10-19"},{"lineNumber":153,"author":{"gitId":"tryyang2001"},"content":"            if (f.getTimePeriod().equals(timePeriod)) {","lastModifiedDate":"2021-10-18"},{"lineNumber":154,"author":{"gitId":"tryyang2001"},"content":"                timePeriodList.addItem(f);","lastModifiedDate":"2021-10-19"},{"lineNumber":155,"author":{"gitId":"tryyang2001"},"content":"            }","lastModifiedDate":"2021-10-18"},{"lineNumber":156,"author":{"gitId":"tryyang2001"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":157,"author":{"gitId":"tryyang2001"},"content":"        convertItemCountToString(foodListInString, subList.size(), date, MESSAGE_FOOD_CONSUMED);","lastModifiedDate":"2021-10-18"},{"lineNumber":158,"author":{"gitId":"tryyang2001"},"content":"        addTimePeriodMessage(timePeriod, foodListInString);","lastModifiedDate":"2021-10-18"},{"lineNumber":159,"author":{"gitId":"tryyang2001"},"content":"        for (int i \u003d 1; i \u003c\u003d timePeriodList.getSize(); i++) {","lastModifiedDate":"2021-10-18"},{"lineNumber":160,"author":{"gitId":"tryyang2001"},"content":"            convertItemToString(foodListInString, i, timePeriodList.getItem(i - 1));","lastModifiedDate":"2021-10-19"},{"lineNumber":161,"author":{"gitId":"tryyang2001"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":162,"author":{"gitId":"tryyang2001"},"content":"        convertTotalCaloriesToString(","lastModifiedDate":"2021-10-18"},{"lineNumber":163,"author":{"gitId":"tryyang2001"},"content":"                foodListInString,","lastModifiedDate":"2021-10-18"},{"lineNumber":164,"author":{"gitId":"tryyang2001"},"content":"                subList.stream().mapToInt(Item::getCalories).sum(),","lastModifiedDate":"2021-10-19"},{"lineNumber":165,"author":{"gitId":"tryyang2001"},"content":"                MESSAGE_TOTAL_CALORIE_CONSUMED_PER_DAY);","lastModifiedDate":"2021-10-24"},{"lineNumber":166,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":167,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":168,"author":{"gitId":"tryyang2001"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":169,"author":{"gitId":"tryyang2001"},"content":"     * Helper method used in convertToStringBySpecificDateAndTime to filter the original food list.","lastModifiedDate":"2021-10-18"},{"lineNumber":170,"author":{"gitId":"tryyang2001"},"content":"     *","lastModifiedDate":"2021-10-18"},{"lineNumber":171,"author":{"gitId":"tryyang2001"},"content":"     * @param date       The date to query the food list","lastModifiedDate":"2021-10-18"},{"lineNumber":172,"author":{"gitId":"tryyang2001"},"content":"     * @param timePeriod The time period to query the food list","lastModifiedDate":"2021-10-18"},{"lineNumber":173,"author":{"gitId":"tryyang2001"},"content":"     * @return The array list which contains food items with same date and time period as provided","lastModifiedDate":"2021-10-18"},{"lineNumber":174,"author":{"gitId":"tryyang2001"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":175,"author":{"gitId":"tryyang2001"},"content":"    private ArrayList\u003cItem\u003e filterListAccordingToDateAndTimePeriod(LocalDate date, TimePeriod timePeriod) {","lastModifiedDate":"2021-10-19"},{"lineNumber":176,"author":{"gitId":"tryyang2001"},"content":"        return (ArrayList\u003cItem\u003e) this.internalItems.stream()","lastModifiedDate":"2021-10-23"},{"lineNumber":177,"author":{"gitId":"tryyang2001"},"content":"                .filter(f -\u003e f.getDate().isEqual(date) \u0026\u0026 f.getTimePeriod().equals(timePeriod))","lastModifiedDate":"2021-10-18"},{"lineNumber":178,"author":{"gitId":"tryyang2001"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2021-10-18"},{"lineNumber":179,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":180,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":181,"author":{"gitId":"tryyang2001"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":182,"author":{"gitId":"tryyang2001"},"content":"     * Helper method used in processListToString to retrieve the relevant message to the provided time period.","lastModifiedDate":"2021-10-18"},{"lineNumber":183,"author":{"gitId":"tryyang2001"},"content":"     *","lastModifiedDate":"2021-10-18"},{"lineNumber":184,"author":{"gitId":"tryyang2001"},"content":"     * @param timePeriod       The time period to query the food list","lastModifiedDate":"2021-10-18"},{"lineNumber":185,"author":{"gitId":"tryyang2001"},"content":"     * @param foodListInString The StringBuilder food list which contains the correct output string","lastModifiedDate":"2021-10-18"},{"lineNumber":186,"author":{"gitId":"tryyang2001"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":187,"author":{"gitId":"tryyang2001"},"content":"    private void addTimePeriodMessage(TimePeriod timePeriod, StringBuilder foodListInString) {","lastModifiedDate":"2021-10-17"},{"lineNumber":188,"author":{"gitId":"tryyang2001"},"content":"        switch (timePeriod) {","lastModifiedDate":"2021-10-17"},{"lineNumber":189,"author":{"gitId":"tryyang2001"},"content":"        case MORNING:","lastModifiedDate":"2021-11-08"},{"lineNumber":190,"author":{"gitId":"tryyang2001"},"content":"            foodListInString.append(MESSAGE_MORNING).append(ItemList.LS);","lastModifiedDate":"2021-10-17"},{"lineNumber":191,"author":{"gitId":"tryyang2001"},"content":"            break;","lastModifiedDate":"2021-10-17"},{"lineNumber":192,"author":{"gitId":"tryyang2001"},"content":"        case AFTERNOON:","lastModifiedDate":"2021-11-08"},{"lineNumber":193,"author":{"gitId":"tryyang2001"},"content":"            foodListInString.append(MESSAGE_AFTERNOON).append(ItemList.LS);","lastModifiedDate":"2021-10-17"},{"lineNumber":194,"author":{"gitId":"tryyang2001"},"content":"            break;","lastModifiedDate":"2021-10-17"},{"lineNumber":195,"author":{"gitId":"tryyang2001"},"content":"        case EVENING:","lastModifiedDate":"2021-11-08"},{"lineNumber":196,"author":{"gitId":"tryyang2001"},"content":"            foodListInString.append(MESSAGE_EVENING).append(ItemList.LS);","lastModifiedDate":"2021-10-17"},{"lineNumber":197,"author":{"gitId":"tryyang2001"},"content":"            break;","lastModifiedDate":"2021-10-17"},{"lineNumber":198,"author":{"gitId":"tryyang2001"},"content":"        case NIGHT:","lastModifiedDate":"2021-11-08"},{"lineNumber":199,"author":{"gitId":"tryyang2001"},"content":"            foodListInString.append(MESSAGE_NIGHT).append(ItemList.LS);","lastModifiedDate":"2021-10-17"},{"lineNumber":200,"author":{"gitId":"tryyang2001"},"content":"            break;","lastModifiedDate":"2021-10-17"},{"lineNumber":201,"author":{"gitId":"tryyang2001"},"content":"        default:","lastModifiedDate":"2021-10-17"},{"lineNumber":202,"author":{"gitId":"tryyang2001"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":203,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":204,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":205,"author":{"gitId":"tryyang2001"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":206,"author":{"gitId":"tryyang2001"},"content":"     * Helper method used in convertToString for extracting each food list","lastModifiedDate":"2021-10-18"},{"lineNumber":207,"author":{"gitId":"tryyang2001"},"content":"     * according to the date and time presented in the entire food list.","lastModifiedDate":"2021-10-18"},{"lineNumber":208,"author":{"gitId":"tryyang2001"},"content":"     *","lastModifiedDate":"2021-10-17"},{"lineNumber":209,"author":{"gitId":"tryyang2001"},"content":"     * @return StringBuilder type string which contains food lists with different date and time","lastModifiedDate":"2021-10-17"},{"lineNumber":210,"author":{"gitId":"tryyang2001"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":211,"author":{"gitId":"tryyang2001"},"content":"    private StringBuilder extractFoodListByEachDateAndTimePeriod() {","lastModifiedDate":"2021-10-18"},{"lineNumber":212,"author":{"gitId":"tryyang2001"},"content":"        if (getSize() \u003d\u003d 0) {","lastModifiedDate":"2021-10-25"},{"lineNumber":213,"author":{"gitId":"tryyang2001"},"content":"            return new StringBuilder();","lastModifiedDate":"2021-10-25"},{"lineNumber":214,"author":{"gitId":"tryyang2001"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":215,"author":{"gitId":"tryyang2001"},"content":"        StringBuilder foodListInString \u003d new StringBuilder(); //declares as StringBuilder for mutable String object","lastModifiedDate":"2021-10-17"},{"lineNumber":216,"author":{"gitId":"tryyang2001"},"content":"        for (int index \u003d 0; index \u003c internalItems.size(); index++) {","lastModifiedDate":"2021-10-23"},{"lineNumber":217,"author":{"gitId":"tryyang2001"},"content":"            LocalDate currentDate \u003d internalItems.get(index).getDate();","lastModifiedDate":"2021-10-23"},{"lineNumber":218,"author":{"gitId":"tryyang2001"},"content":"            FoodList subList \u003d new FoodList();","lastModifiedDate":"2021-10-17"},{"lineNumber":219,"author":{"gitId":"tryyang2001"},"content":"            while (index \u003c internalItems.size() \u0026\u0026 currentDate.isEqual(internalItems.get(index).getDate())) {","lastModifiedDate":"2021-10-23"},{"lineNumber":220,"author":{"gitId":"tryyang2001"},"content":"                subList.addItem(internalItems.get(index++));","lastModifiedDate":"2021-10-23"},{"lineNumber":221,"author":{"gitId":"tryyang2001"},"content":"            }","lastModifiedDate":"2021-10-17"},{"lineNumber":222,"author":{"gitId":"tryyang2001"},"content":"            assert subList.getSize() \u003e 0 : \"Sub list should not be empty.\";","lastModifiedDate":"2021-10-17"},{"lineNumber":223,"author":{"gitId":"tryyang2001"},"content":"            foodListInString.append(ITEM_LIST_DIVIDER).append(LS);","lastModifiedDate":"2021-10-24"},{"lineNumber":224,"author":{"gitId":"tryyang2001"},"content":"            convertItemCountToString(foodListInString, subList.getSize(), currentDate, MESSAGE_FOOD_CONSUMED);","lastModifiedDate":"2021-10-18"},{"lineNumber":225,"author":{"gitId":"tryyang2001"},"content":"            separateDifferentTimePeriodFoodList(foodListInString, subList);","lastModifiedDate":"2021-10-17"},{"lineNumber":226,"author":{"gitId":"tryyang2001"},"content":"            convertTotalCaloriesToString(","lastModifiedDate":"2021-10-18"},{"lineNumber":227,"author":{"gitId":"tryyang2001"},"content":"                    foodListInString,","lastModifiedDate":"2021-10-18"},{"lineNumber":228,"author":{"gitId":"tryyang2001"},"content":"                    this.getTotalCaloriesWithDate(currentDate),","lastModifiedDate":"2021-10-18"},{"lineNumber":229,"author":{"gitId":"tryyang2001"},"content":"                    MESSAGE_TOTAL_CALORIE_CONSUMED_PER_DAY);","lastModifiedDate":"2021-10-24"},{"lineNumber":230,"author":{"gitId":"tryyang2001"},"content":"            index--; //prevents double adding of index","lastModifiedDate":"2021-10-17"},{"lineNumber":231,"author":{"gitId":"tryyang2001"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":232,"author":{"gitId":"tryyang2001"},"content":"        foodListInString.append(ITEM_LIST_DIVIDER).append(LS);","lastModifiedDate":"2021-10-24"},{"lineNumber":233,"author":{"gitId":"tryyang2001"},"content":"        foodListInString.append(String.format(MESSAGE_TOTAL_FOOD_CONSUMED_PER_WEEK, getSize())).append(LS);","lastModifiedDate":"2021-10-24"},{"lineNumber":234,"author":{"gitId":"tryyang2001"},"content":"        foodListInString.append(String.format(MESSAGE_TOTAL_CALORIE_CONSUMED_PER_WEEK, getTotalCalories()));","lastModifiedDate":"2021-10-24"},{"lineNumber":235,"author":{"gitId":"tryyang2001"},"content":"        foodListInString.append(LS);","lastModifiedDate":"2021-10-24"},{"lineNumber":236,"author":{"gitId":"tryyang2001"},"content":"        return foodListInString;","lastModifiedDate":"2021-10-17"},{"lineNumber":237,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":238,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":239,"author":{"gitId":"tryyang2001"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":240,"author":{"gitId":"tryyang2001"},"content":"     * Helper method used in extractFoodListByEachDateAndTimePeriod to extract food list","lastModifiedDate":"2021-10-18"},{"lineNumber":241,"author":{"gitId":"tryyang2001"},"content":"     * on the same date according to its different time period.","lastModifiedDate":"2021-10-18"},{"lineNumber":242,"author":{"gitId":"tryyang2001"},"content":"     *","lastModifiedDate":"2021-10-17"},{"lineNumber":243,"author":{"gitId":"tryyang2001"},"content":"     * @param foodListInString The StringBuilder food list.","lastModifiedDate":"2021-10-17"},{"lineNumber":244,"author":{"gitId":"tryyang2001"},"content":"     * @param subList          FoodList which contains only the food items for the same date","lastModifiedDate":"2021-10-17"},{"lineNumber":245,"author":{"gitId":"tryyang2001"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":246,"author":{"gitId":"tryyang2001"},"content":"    private void separateDifferentTimePeriodFoodList(StringBuilder foodListInString, FoodList subList) {","lastModifiedDate":"2021-10-17"},{"lineNumber":247,"author":{"gitId":"tryyang2001"},"content":"        FoodList morningList \u003d new FoodList();","lastModifiedDate":"2021-10-17"},{"lineNumber":248,"author":{"gitId":"tryyang2001"},"content":"        FoodList afternoonList \u003d new FoodList();","lastModifiedDate":"2021-10-17"},{"lineNumber":249,"author":{"gitId":"tryyang2001"},"content":"        FoodList eveningList \u003d new FoodList();","lastModifiedDate":"2021-10-17"},{"lineNumber":250,"author":{"gitId":"tryyang2001"},"content":"        FoodList midnightList \u003d new FoodList();","lastModifiedDate":"2021-10-17"},{"lineNumber":251,"author":{"gitId":"tryyang2001"},"content":"        extractFoodListByEachTimePeriod(subList, morningList, afternoonList, eveningList, midnightList);","lastModifiedDate":"2021-10-17"},{"lineNumber":252,"author":{"gitId":"tryyang2001"},"content":"        appendWithList(foodListInString, morningList, MESSAGE_MORNING);","lastModifiedDate":"2021-10-17"},{"lineNumber":253,"author":{"gitId":"tryyang2001"},"content":"        appendWithList(foodListInString, afternoonList, MESSAGE_AFTERNOON);","lastModifiedDate":"2021-10-17"},{"lineNumber":254,"author":{"gitId":"tryyang2001"},"content":"        appendWithList(foodListInString, eveningList, MESSAGE_EVENING);","lastModifiedDate":"2021-10-17"},{"lineNumber":255,"author":{"gitId":"tryyang2001"},"content":"        appendWithList(foodListInString, midnightList, MESSAGE_NIGHT);","lastModifiedDate":"2021-10-17"},{"lineNumber":256,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":257,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":258,"author":{"gitId":"tryyang2001"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":259,"author":{"gitId":"tryyang2001"},"content":"     * Helper method used in separateDifferentTimePeriodFoodList to append","lastModifiedDate":"2021-10-18"},{"lineNumber":260,"author":{"gitId":"tryyang2001"},"content":"     * the StringBuilder foodListInString with each time period food list.","lastModifiedDate":"2021-10-18"},{"lineNumber":261,"author":{"gitId":"tryyang2001"},"content":"     *","lastModifiedDate":"2021-10-17"},{"lineNumber":262,"author":{"gitId":"tryyang2001"},"content":"     * @param foodListInString The StringBuilder food list which contains the correct output string","lastModifiedDate":"2021-10-17"},{"lineNumber":263,"author":{"gitId":"tryyang2001"},"content":"     * @param timePeriodList   The food list that contains food items that consumed within the time period","lastModifiedDate":"2021-10-17"},{"lineNumber":264,"author":{"gitId":"tryyang2001"},"content":"     * @param periodMessage    The message to indicate the time period","lastModifiedDate":"2021-10-17"},{"lineNumber":265,"author":{"gitId":"tryyang2001"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":266,"author":{"gitId":"tryyang2001"},"content":"    private void appendWithList(StringBuilder foodListInString, FoodList timePeriodList, String periodMessage) {","lastModifiedDate":"2021-10-17"},{"lineNumber":267,"author":{"gitId":"tryyang2001"},"content":"        if (timePeriodList.getSize() \u003e 0) {","lastModifiedDate":"2021-10-17"},{"lineNumber":268,"author":{"gitId":"tryyang2001"},"content":"            foodListInString.append(periodMessage).append(ItemList.LS);","lastModifiedDate":"2021-10-17"},{"lineNumber":269,"author":{"gitId":"tryyang2001"},"content":"            for (int i \u003d 1; i \u003c\u003d timePeriodList.getSize(); i++) {","lastModifiedDate":"2021-10-17"},{"lineNumber":270,"author":{"gitId":"tryyang2001"},"content":"                convertItemToString(foodListInString, i, timePeriodList.getItem(i - 1));","lastModifiedDate":"2021-10-19"},{"lineNumber":271,"author":{"gitId":"tryyang2001"},"content":"            }","lastModifiedDate":"2021-10-17"},{"lineNumber":272,"author":{"gitId":"tryyang2001"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":273,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":274,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":275,"author":{"gitId":"tryyang2001"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":276,"author":{"gitId":"tryyang2001"},"content":"     * Helper method used in separateDifferentTimePeriodFoodList to extract the larger subList into 4 smaller lists","lastModifiedDate":"2021-10-18"},{"lineNumber":277,"author":{"gitId":"tryyang2001"},"content":"     * which contain food items with same date according to the time period.","lastModifiedDate":"2021-10-18"},{"lineNumber":278,"author":{"gitId":"tryyang2001"},"content":"     *","lastModifiedDate":"2021-10-18"},{"lineNumber":279,"author":{"gitId":"tryyang2001"},"content":"     * @param subList       The food list that contains all the food items consumed on the same date","lastModifiedDate":"2021-10-18"},{"lineNumber":280,"author":{"gitId":"tryyang2001"},"content":"     * @param morningList   The food list that contains all the food items consumed in the morning of a given date","lastModifiedDate":"2021-10-18"},{"lineNumber":281,"author":{"gitId":"tryyang2001"},"content":"     * @param afternoonList The food list that contains all the food items consumed in the afternoon of a given date","lastModifiedDate":"2021-10-18"},{"lineNumber":282,"author":{"gitId":"tryyang2001"},"content":"     * @param eveningList   The food list that contains all the food items consumed in the evening of a given date","lastModifiedDate":"2021-10-18"},{"lineNumber":283,"author":{"gitId":"tryyang2001"},"content":"     * @param nightList     The food list that contains all the food items consumed at night of a given date","lastModifiedDate":"2021-10-18"},{"lineNumber":284,"author":{"gitId":"tryyang2001"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":285,"author":{"gitId":"tryyang2001"},"content":"    private void extractFoodListByEachTimePeriod(FoodList subList, FoodList morningList, FoodList afternoonList,","lastModifiedDate":"2021-10-17"},{"lineNumber":286,"author":{"gitId":"tryyang2001"},"content":"                                                 FoodList eveningList, FoodList nightList) {","lastModifiedDate":"2021-10-17"},{"lineNumber":287,"author":{"gitId":"tryyang2001"},"content":"        for (int i \u003d 1; i \u003c\u003d subList.getSize(); i++) {","lastModifiedDate":"2021-10-17"},{"lineNumber":288,"author":{"gitId":"tryyang2001"},"content":"            switch (subList.getItem(i - 1).getTimePeriod()) {","lastModifiedDate":"2021-10-19"},{"lineNumber":289,"author":{"gitId":"tryyang2001"},"content":"            case MORNING:","lastModifiedDate":"2021-11-08"},{"lineNumber":290,"author":{"gitId":"tryyang2001"},"content":"                morningList.addItem(subList.getItem(i - 1));","lastModifiedDate":"2021-10-19"},{"lineNumber":291,"author":{"gitId":"tryyang2001"},"content":"                break;","lastModifiedDate":"2021-10-17"},{"lineNumber":292,"author":{"gitId":"tryyang2001"},"content":"            case AFTERNOON:","lastModifiedDate":"2021-11-08"},{"lineNumber":293,"author":{"gitId":"tryyang2001"},"content":"                afternoonList.addItem(subList.getItem(i - 1));","lastModifiedDate":"2021-10-19"},{"lineNumber":294,"author":{"gitId":"tryyang2001"},"content":"                break;","lastModifiedDate":"2021-10-17"},{"lineNumber":295,"author":{"gitId":"tryyang2001"},"content":"            case EVENING:","lastModifiedDate":"2021-11-08"},{"lineNumber":296,"author":{"gitId":"tryyang2001"},"content":"                eveningList.addItem(subList.getItem(i - 1));","lastModifiedDate":"2021-10-19"},{"lineNumber":297,"author":{"gitId":"tryyang2001"},"content":"                break;","lastModifiedDate":"2021-10-17"},{"lineNumber":298,"author":{"gitId":"tryyang2001"},"content":"            case NIGHT:","lastModifiedDate":"2021-11-08"},{"lineNumber":299,"author":{"gitId":"tryyang2001"},"content":"                nightList.addItem(subList.getItem(i - 1));","lastModifiedDate":"2021-10-19"},{"lineNumber":300,"author":{"gitId":"tryyang2001"},"content":"                break;","lastModifiedDate":"2021-10-17"},{"lineNumber":301,"author":{"gitId":"tryyang2001"},"content":"            default:","lastModifiedDate":"2021-10-17"},{"lineNumber":302,"author":{"gitId":"tryyang2001"},"content":"            }","lastModifiedDate":"2021-10-17"},{"lineNumber":303,"author":{"gitId":"tryyang2001"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":304,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":305,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":306,"author":{"gitId":"tryyang2001"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":307,"author":{"gitId":"tryyang2001"},"content":"     * Helper method used in convertToStringBySpecificDate for extracting","lastModifiedDate":"2021-10-18"},{"lineNumber":308,"author":{"gitId":"tryyang2001"},"content":"     * food list which contains all the food item consumed on the date.","lastModifiedDate":"2021-10-18"},{"lineNumber":309,"author":{"gitId":"tryyang2001"},"content":"     *","lastModifiedDate":"2021-10-17"},{"lineNumber":310,"author":{"gitId":"tryyang2001"},"content":"     * @param date The date to query all the food items consumed","lastModifiedDate":"2021-10-17"},{"lineNumber":311,"author":{"gitId":"tryyang2001"},"content":"     * @return StringBuilder type string which contains a food list with the given date","lastModifiedDate":"2021-10-17"},{"lineNumber":312,"author":{"gitId":"tryyang2001"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":313,"author":{"gitId":"tryyang2001"},"content":"    private StringBuilder extractFoodListBySpecificDate(LocalDate date) {","lastModifiedDate":"2021-10-17"},{"lineNumber":314,"author":{"gitId":"tryyang2001"},"content":"        StringBuilder foodListInString \u003d new StringBuilder(); //declares as StringBuilder for mutable String object","lastModifiedDate":"2021-10-17"},{"lineNumber":315,"author":{"gitId":"tryyang2001"},"content":"        ArrayList\u003cItem\u003e subList \u003d (ArrayList\u003cItem\u003e) this.internalItems.stream()","lastModifiedDate":"2021-10-23"},{"lineNumber":316,"author":{"gitId":"tryyang2001"},"content":"                .filter(f -\u003e f.getDate().isEqual(date))","lastModifiedDate":"2021-10-17"},{"lineNumber":317,"author":{"gitId":"tryyang2001"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2021-10-17"},{"lineNumber":318,"author":{"gitId":"tryyang2001"},"content":"        if (subList.size() \u003d\u003d 0) {","lastModifiedDate":"2021-10-17"},{"lineNumber":319,"author":{"gitId":"tryyang2001"},"content":"            foodListInString","lastModifiedDate":"2021-10-17"},{"lineNumber":320,"author":{"gitId":"tryyang2001"},"content":"                    .append(MESSAGE_NO_FOOD_IN_DATE)","lastModifiedDate":"2021-10-17"},{"lineNumber":321,"author":{"gitId":"tryyang2001"},"content":"                    .append(ItemList.LS);","lastModifiedDate":"2021-10-17"},{"lineNumber":322,"author":{"gitId":"tryyang2001"},"content":"            return foodListInString;","lastModifiedDate":"2021-10-17"},{"lineNumber":323,"author":{"gitId":"tryyang2001"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":324,"author":{"gitId":"tryyang2001"},"content":"        convertItemCountToString(foodListInString, subList.size(), date, MESSAGE_FOOD_CONSUMED);","lastModifiedDate":"2021-10-18"},{"lineNumber":325,"author":{"gitId":"tryyang2001"},"content":"        for (int i \u003d 1; i \u003c\u003d subList.size(); i++) {","lastModifiedDate":"2021-10-17"},{"lineNumber":326,"author":{"gitId":"tryyang2001"},"content":"            convertItemToString(foodListInString, i, subList.get(i - 1));","lastModifiedDate":"2021-10-18"},{"lineNumber":327,"author":{"gitId":"tryyang2001"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":328,"author":{"gitId":"tryyang2001"},"content":"        convertTotalCaloriesToString(","lastModifiedDate":"2021-10-18"},{"lineNumber":329,"author":{"gitId":"tryyang2001"},"content":"                foodListInString,","lastModifiedDate":"2021-10-18"},{"lineNumber":330,"author":{"gitId":"tryyang2001"},"content":"                this.getTotalCaloriesWithDate(date),","lastModifiedDate":"2021-10-18"},{"lineNumber":331,"author":{"gitId":"tryyang2001"},"content":"                MESSAGE_TOTAL_CALORIE_CONSUMED_PER_DAY);","lastModifiedDate":"2021-10-24"},{"lineNumber":332,"author":{"gitId":"tryyang2001"},"content":"        return foodListInString;","lastModifiedDate":"2021-10-17"},{"lineNumber":333,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":334,"author":{"gitId":"tryyang2001"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"weidak":1,"tryyang2001":329,"tlyi":4}},{"path":"src/main/java/seedu/duke/data/item/food/TimePeriod.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.data.item.food;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":3,"author":{"gitId":"tryyang2001"},"content":"public enum TimePeriod {","lastModifiedDate":"2021-10-17"},{"lineNumber":4,"author":{"gitId":"tryyang2001"},"content":"    MORNING, AFTERNOON, EVENING, NIGHT","lastModifiedDate":"2021-11-08"},{"lineNumber":5,"author":{"gitId":"tryyang2001"},"content":"}","lastModifiedDate":"2021-10-17"}],"authorContributionMap":{"tryyang2001":4,"tlyi":1}},{"path":"src/main/java/seedu/duke/data/profile/Profile.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.data.profile;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"tlyi"},"content":"import seedu.duke.data.profile.attributes.ActivityFactor;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"tlyi"},"content":"import seedu.duke.data.profile.attributes.Age;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"tlyi"},"content":"import seedu.duke.data.profile.attributes.CalorieGoal;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"tlyi"},"content":"import seedu.duke.data.profile.attributes.Gender;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"tlyi"},"content":"import seedu.duke.data.profile.attributes.Height;","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"tlyi"},"content":"import seedu.duke.data.profile.attributes.Name;","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"tlyi"},"content":"import seedu.duke.data.profile.attributes.Weight;","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"weidak"},"content":"/**","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"weidak"},"content":" * Profile that contains the relevant details input by user.","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"weidak"},"content":" */","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"weidak"},"content":"public class Profile {","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"weidak"},"content":"    public static final String FILE_TEXT_DELIMITER \u003d \"|\";","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"weidak"},"content":"    private static final String LS \u003d System.lineSeparator();","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"tlyi"},"content":"    private static final String TAB \u003d \"\\t\";","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"tlyi"},"content":"    private static final String INDENTED_LS \u003d LS + TAB;","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"weidak"},"content":"    public static final String MESSAGE_PROFILE \u003d \"Hello %1$s! This is your profile:\" + LS","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"weidak"},"content":"            + \"*\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\"","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"weidak"},"content":"            + INDENTED_LS + \"Height                 %2$scm\"","lastModifiedDate":"2021-10-27"},{"lineNumber":25,"author":{"gitId":"weidak"},"content":"            + INDENTED_LS + \"Weight                 %3$skg\"","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"weidak"},"content":"            + INDENTED_LS + \"Gender                 %4$s\"","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"weidak"},"content":"            + INDENTED_LS + \"Age                    %5$s\"","lastModifiedDate":"2021-10-27"},{"lineNumber":28,"author":{"gitId":"weidak"},"content":"            + INDENTED_LS + \"Calorie Goal           %6$s cal\"","lastModifiedDate":"2021-10-27"},{"lineNumber":29,"author":{"gitId":"weidak"},"content":"            + INDENTED_LS + \"Activity Factor        %7$s\"","lastModifiedDate":"2021-10-27"},{"lineNumber":30,"author":{"gitId":"weidak"},"content":"            + LS + \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d*\";","lastModifiedDate":"2021-10-27"},{"lineNumber":31,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"weidak"},"content":"    protected Name name;","lastModifiedDate":"2021-10-30"},{"lineNumber":33,"author":{"gitId":"weidak"},"content":"    protected Height height;","lastModifiedDate":"2021-10-30"},{"lineNumber":34,"author":{"gitId":"weidak"},"content":"    protected Weight weight;","lastModifiedDate":"2021-10-30"},{"lineNumber":35,"author":{"gitId":"weidak"},"content":"    protected Gender gender;","lastModifiedDate":"2021-10-30"},{"lineNumber":36,"author":{"gitId":"weidak"},"content":"    protected Age age;","lastModifiedDate":"2021-10-30"},{"lineNumber":37,"author":{"gitId":"weidak"},"content":"    protected CalorieGoal calorieGoal;","lastModifiedDate":"2021-10-30"},{"lineNumber":38,"author":{"gitId":"weidak"},"content":"    protected ActivityFactor activityFactor;","lastModifiedDate":"2021-10-30"},{"lineNumber":39,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":40,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-10-30"},{"lineNumber":41,"author":{"gitId":"weidak"},"content":"     * Initializing a new Profile class with empty attributes.","lastModifiedDate":"2021-10-30"},{"lineNumber":42,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-10-30"},{"lineNumber":43,"author":{"gitId":"tlyi"},"content":"    public Profile() {","lastModifiedDate":"2021-10-11"},{"lineNumber":44,"author":{"gitId":"weidak"},"content":"        name \u003d new Name();","lastModifiedDate":"2021-10-30"},{"lineNumber":45,"author":{"gitId":"weidak"},"content":"        height \u003d new Height();","lastModifiedDate":"2021-10-30"},{"lineNumber":46,"author":{"gitId":"weidak"},"content":"        weight \u003d new Weight();","lastModifiedDate":"2021-10-30"},{"lineNumber":47,"author":{"gitId":"weidak"},"content":"        gender \u003d new Gender();","lastModifiedDate":"2021-10-30"},{"lineNumber":48,"author":{"gitId":"weidak"},"content":"        age \u003d new Age();","lastModifiedDate":"2021-10-30"},{"lineNumber":49,"author":{"gitId":"weidak"},"content":"        calorieGoal \u003d new CalorieGoal();","lastModifiedDate":"2021-10-30"},{"lineNumber":50,"author":{"gitId":"weidak"},"content":"        activityFactor \u003d new ActivityFactor();","lastModifiedDate":"2021-10-30"},{"lineNumber":51,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":52,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":53,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":54,"author":{"gitId":"weidak"},"content":"     * Constructor for the Profile class.","lastModifiedDate":"2021-10-20"},{"lineNumber":55,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-10-19"},{"lineNumber":56,"author":{"gitId":"weidak"},"content":"     * @param name           Name of user","lastModifiedDate":"2021-10-19"},{"lineNumber":57,"author":{"gitId":"weidak"},"content":"     * @param height         Height of user","lastModifiedDate":"2021-10-19"},{"lineNumber":58,"author":{"gitId":"weidak"},"content":"     * @param weight         Weight of user","lastModifiedDate":"2021-10-19"},{"lineNumber":59,"author":{"gitId":"weidak"},"content":"     * @param calorieGoal    Calorie target of user","lastModifiedDate":"2021-10-19"},{"lineNumber":60,"author":{"gitId":"weidak"},"content":"     * @param gender         Gender of user (M/F)","lastModifiedDate":"2021-10-19"},{"lineNumber":61,"author":{"gitId":"weidak"},"content":"     * @param age            Age of user","lastModifiedDate":"2021-10-19"},{"lineNumber":62,"author":{"gitId":"weidak"},"content":"     * @param activityFactor Activity level of user","lastModifiedDate":"2021-10-19"},{"lineNumber":63,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":64,"author":{"gitId":"weidak"},"content":"    public Profile(Name name, Height height, Weight weight, Gender gender,","lastModifiedDate":"2021-10-20"},{"lineNumber":65,"author":{"gitId":"weidak"},"content":"                   Age age, CalorieGoal calorieGoal, ActivityFactor activityFactor) {","lastModifiedDate":"2021-10-20"},{"lineNumber":66,"author":{"gitId":"weidak"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-10-20"},{"lineNumber":67,"author":{"gitId":"weidak"},"content":"        this.height \u003d height;","lastModifiedDate":"2021-10-20"},{"lineNumber":68,"author":{"gitId":"weidak"},"content":"        this.weight \u003d weight;","lastModifiedDate":"2021-10-20"},{"lineNumber":69,"author":{"gitId":"weidak"},"content":"        this.gender \u003d gender;","lastModifiedDate":"2021-10-20"},{"lineNumber":70,"author":{"gitId":"weidak"},"content":"        this.age \u003d age;","lastModifiedDate":"2021-10-20"},{"lineNumber":71,"author":{"gitId":"weidak"},"content":"        this.calorieGoal \u003d calorieGoal;","lastModifiedDate":"2021-10-20"},{"lineNumber":72,"author":{"gitId":"weidak"},"content":"        this.activityFactor \u003d activityFactor;","lastModifiedDate":"2021-10-20"},{"lineNumber":73,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":74,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":75,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":76,"author":{"gitId":"weidak"},"content":"     * A set command that enables setting of profile through passing by reference.","lastModifiedDate":"2021-10-21"},{"lineNumber":77,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-10-21"},{"lineNumber":78,"author":{"gitId":"weidak"},"content":"     * @param name           Name of user","lastModifiedDate":"2021-10-21"},{"lineNumber":79,"author":{"gitId":"weidak"},"content":"     * @param height         Height of user","lastModifiedDate":"2021-10-21"},{"lineNumber":80,"author":{"gitId":"weidak"},"content":"     * @param weight         Weight of user","lastModifiedDate":"2021-10-21"},{"lineNumber":81,"author":{"gitId":"weidak"},"content":"     * @param calorieGoal    Calorie target of user","lastModifiedDate":"2021-10-21"},{"lineNumber":82,"author":{"gitId":"weidak"},"content":"     * @param gender         Gender of user (M/F)","lastModifiedDate":"2021-10-21"},{"lineNumber":83,"author":{"gitId":"weidak"},"content":"     * @param age            Age of user","lastModifiedDate":"2021-10-21"},{"lineNumber":84,"author":{"gitId":"weidak"},"content":"     * @param activityFactor Activity level of user","lastModifiedDate":"2021-10-21"},{"lineNumber":85,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":86,"author":{"gitId":"weidak"},"content":"    public void setProfile(Name name, Height height, Weight weight, Gender gender,","lastModifiedDate":"2021-10-21"},{"lineNumber":87,"author":{"gitId":"weidak"},"content":"                           Age age, CalorieGoal calorieGoal, ActivityFactor activityFactor) {","lastModifiedDate":"2021-10-21"},{"lineNumber":88,"author":{"gitId":"weidak"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-10-21"},{"lineNumber":89,"author":{"gitId":"weidak"},"content":"        this.height \u003d height;","lastModifiedDate":"2021-10-21"},{"lineNumber":90,"author":{"gitId":"weidak"},"content":"        this.weight \u003d weight;","lastModifiedDate":"2021-10-21"},{"lineNumber":91,"author":{"gitId":"weidak"},"content":"        this.gender \u003d gender;","lastModifiedDate":"2021-10-21"},{"lineNumber":92,"author":{"gitId":"weidak"},"content":"        this.age \u003d age;","lastModifiedDate":"2021-10-21"},{"lineNumber":93,"author":{"gitId":"weidak"},"content":"        this.calorieGoal \u003d calorieGoal;","lastModifiedDate":"2021-10-21"},{"lineNumber":94,"author":{"gitId":"weidak"},"content":"        this.activityFactor \u003d activityFactor;","lastModifiedDate":"2021-10-21"},{"lineNumber":95,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":96,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":97,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":98,"author":{"gitId":"weidak"},"content":"     * Sets the profile in various commands with the raw inputs if necessary.","lastModifiedDate":"2021-10-20"},{"lineNumber":99,"author":{"gitId":"weidak"},"content":"     * Usually used for retrieving data from storage.","lastModifiedDate":"2021-10-20"},{"lineNumber":100,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-10-19"},{"lineNumber":101,"author":{"gitId":"weidak"},"content":"     * @param name           Name of user","lastModifiedDate":"2021-10-19"},{"lineNumber":102,"author":{"gitId":"weidak"},"content":"     * @param height         Height of user","lastModifiedDate":"2021-10-19"},{"lineNumber":103,"author":{"gitId":"weidak"},"content":"     * @param weight         Weight of user","lastModifiedDate":"2021-10-19"},{"lineNumber":104,"author":{"gitId":"weidak"},"content":"     * @param calorieGoal    Calorie target of user","lastModifiedDate":"2021-10-19"},{"lineNumber":105,"author":{"gitId":"weidak"},"content":"     * @param gender         Gender of user (M/F)","lastModifiedDate":"2021-10-19"},{"lineNumber":106,"author":{"gitId":"weidak"},"content":"     * @param age            Age of user","lastModifiedDate":"2021-10-19"},{"lineNumber":107,"author":{"gitId":"weidak"},"content":"     * @param activityFactor Activity level of user","lastModifiedDate":"2021-10-19"},{"lineNumber":108,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":109,"author":{"gitId":"weidak"},"content":"    public void setProfileWithRawInputs(String name, double height, double weight,","lastModifiedDate":"2021-10-20"},{"lineNumber":110,"author":{"gitId":"weidak"},"content":"                                        char gender, int age, int calorieGoal, int activityFactor) {","lastModifiedDate":"2021-10-20"},{"lineNumber":111,"author":{"gitId":"weidak"},"content":"        this.name.setName(name);","lastModifiedDate":"2021-10-20"},{"lineNumber":112,"author":{"gitId":"weidak"},"content":"        this.height.setHeight(height);","lastModifiedDate":"2021-10-20"},{"lineNumber":113,"author":{"gitId":"weidak"},"content":"        this.weight.setWeight(weight);","lastModifiedDate":"2021-10-20"},{"lineNumber":114,"author":{"gitId":"weidak"},"content":"        this.gender.setGender(gender);","lastModifiedDate":"2021-10-20"},{"lineNumber":115,"author":{"gitId":"weidak"},"content":"        this.age.setAge(age);","lastModifiedDate":"2021-10-20"},{"lineNumber":116,"author":{"gitId":"weidak"},"content":"        this.calorieGoal.setCalorieGoal(calorieGoal);","lastModifiedDate":"2021-10-20"},{"lineNumber":117,"author":{"gitId":"weidak"},"content":"        this.activityFactor.setUserInput(activityFactor);","lastModifiedDate":"2021-10-30"},{"lineNumber":118,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":119,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":120,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":121,"author":{"gitId":"weidak"},"content":"     * Sets the profile name with a new Name object.","lastModifiedDate":"2021-10-20"},{"lineNumber":122,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":123,"author":{"gitId":"weidak"},"content":"     * @param name Name object to be set","lastModifiedDate":"2021-10-20"},{"lineNumber":124,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":125,"author":{"gitId":"weidak"},"content":"    public void setProfileName(Name name) {","lastModifiedDate":"2021-10-20"},{"lineNumber":126,"author":{"gitId":"weidak"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-10-09"},{"lineNumber":127,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":128,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":129,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":130,"author":{"gitId":"weidak"},"content":"     * Sets the profile height with a new Height object.","lastModifiedDate":"2021-10-20"},{"lineNumber":131,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":132,"author":{"gitId":"weidak"},"content":"     * @param height Height object to be set","lastModifiedDate":"2021-10-20"},{"lineNumber":133,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":134,"author":{"gitId":"weidak"},"content":"    public void setProfileHeight(Height height) {","lastModifiedDate":"2021-10-20"},{"lineNumber":135,"author":{"gitId":"weidak"},"content":"        this.height \u003d height;","lastModifiedDate":"2021-10-18"},{"lineNumber":136,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":137,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":138,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":139,"author":{"gitId":"weidak"},"content":"     * Sets the profile weight with a new Weight object.","lastModifiedDate":"2021-10-20"},{"lineNumber":140,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":141,"author":{"gitId":"weidak"},"content":"     * @param weight Weight object to be set","lastModifiedDate":"2021-10-20"},{"lineNumber":142,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":143,"author":{"gitId":"weidak"},"content":"    public void setProfileWeight(Weight weight) {","lastModifiedDate":"2021-10-20"},{"lineNumber":144,"author":{"gitId":"weidak"},"content":"        this.weight \u003d weight;","lastModifiedDate":"2021-10-20"},{"lineNumber":145,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":146,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":147,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":148,"author":{"gitId":"weidak"},"content":"     * Sets the profile gender with a new Profile object.","lastModifiedDate":"2021-10-20"},{"lineNumber":149,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":150,"author":{"gitId":"weidak"},"content":"     * @param gender Gender object to be set","lastModifiedDate":"2021-10-20"},{"lineNumber":151,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":152,"author":{"gitId":"weidak"},"content":"    public void setProfileGender(Gender gender) {","lastModifiedDate":"2021-10-20"},{"lineNumber":153,"author":{"gitId":"weidak"},"content":"        this.gender \u003d gender;","lastModifiedDate":"2021-10-19"},{"lineNumber":154,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":155,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":156,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":157,"author":{"gitId":"weidak"},"content":"     * Sets the profile age with a new Age object.","lastModifiedDate":"2021-10-20"},{"lineNumber":158,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":159,"author":{"gitId":"weidak"},"content":"     * @param age Age object to be set","lastModifiedDate":"2021-10-20"},{"lineNumber":160,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":161,"author":{"gitId":"weidak"},"content":"    public void setProfileAge(Age age) {","lastModifiedDate":"2021-10-20"},{"lineNumber":162,"author":{"gitId":"weidak"},"content":"        this.age \u003d age;","lastModifiedDate":"2021-10-19"},{"lineNumber":163,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":164,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":165,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":166,"author":{"gitId":"weidak"},"content":"     * Sets the profile calorie goal with a new CalorieGoal object.","lastModifiedDate":"2021-10-20"},{"lineNumber":167,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":168,"author":{"gitId":"weidak"},"content":"     * @param calorieGoal CalorieGoal object to be set","lastModifiedDate":"2021-10-20"},{"lineNumber":169,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":170,"author":{"gitId":"weidak"},"content":"    public void setProfileCalorieGoal(CalorieGoal calorieGoal) {","lastModifiedDate":"2021-10-20"},{"lineNumber":171,"author":{"gitId":"weidak"},"content":"        this.calorieGoal \u003d calorieGoal;","lastModifiedDate":"2021-10-19"},{"lineNumber":172,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":173,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":174,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":175,"author":{"gitId":"weidak"},"content":"     * Sets the profile activity factor with a new ActivityFactor object.","lastModifiedDate":"2021-10-20"},{"lineNumber":176,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":177,"author":{"gitId":"weidak"},"content":"     * @param activityFactor ActivityFactor object to be set","lastModifiedDate":"2021-10-20"},{"lineNumber":178,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":179,"author":{"gitId":"weidak"},"content":"    public void setProfileActivityFactor(ActivityFactor activityFactor) {","lastModifiedDate":"2021-10-20"},{"lineNumber":180,"author":{"gitId":"weidak"},"content":"        this.activityFactor \u003d activityFactor;","lastModifiedDate":"2021-10-20"},{"lineNumber":181,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":182,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":183,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":184,"author":{"gitId":"weidak"},"content":"     * Retrieves the Name object from the profile.","lastModifiedDate":"2021-10-20"},{"lineNumber":185,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":186,"author":{"gitId":"weidak"},"content":"     * @return Name object","lastModifiedDate":"2021-10-20"},{"lineNumber":187,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":188,"author":{"gitId":"weidak"},"content":"    public Name getProfileName() {","lastModifiedDate":"2021-10-20"},{"lineNumber":189,"author":{"gitId":"weidak"},"content":"        return this.name;","lastModifiedDate":"2021-10-20"},{"lineNumber":190,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":191,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":192,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":193,"author":{"gitId":"weidak"},"content":"     * Retrieves the Height object from the profile.","lastModifiedDate":"2021-10-20"},{"lineNumber":194,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":195,"author":{"gitId":"weidak"},"content":"     * @return Height object","lastModifiedDate":"2021-10-20"},{"lineNumber":196,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":197,"author":{"gitId":"weidak"},"content":"    public Height getProfileHeight() {","lastModifiedDate":"2021-10-20"},{"lineNumber":198,"author":{"gitId":"weidak"},"content":"        return this.height;","lastModifiedDate":"2021-10-19"},{"lineNumber":199,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":200,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":201,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":202,"author":{"gitId":"weidak"},"content":"     * Retrieves the Weight object from the profile.","lastModifiedDate":"2021-10-20"},{"lineNumber":203,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":204,"author":{"gitId":"weidak"},"content":"     * @return Weight object","lastModifiedDate":"2021-10-20"},{"lineNumber":205,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":206,"author":{"gitId":"weidak"},"content":"    public Weight getProfileWeight() {","lastModifiedDate":"2021-10-20"},{"lineNumber":207,"author":{"gitId":"weidak"},"content":"        return this.weight;","lastModifiedDate":"2021-10-19"},{"lineNumber":208,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":209,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":210,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":211,"author":{"gitId":"weidak"},"content":"     * Retrieves the Gender object from the profile.","lastModifiedDate":"2021-10-20"},{"lineNumber":212,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":213,"author":{"gitId":"weidak"},"content":"     * @return Gender object","lastModifiedDate":"2021-10-20"},{"lineNumber":214,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":215,"author":{"gitId":"weidak"},"content":"    public Gender getProfileGender() {","lastModifiedDate":"2021-10-20"},{"lineNumber":216,"author":{"gitId":"weidak"},"content":"        return this.gender;","lastModifiedDate":"2021-10-20"},{"lineNumber":217,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":218,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":219,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":220,"author":{"gitId":"weidak"},"content":"     * Retrieves the Age object from the profile.","lastModifiedDate":"2021-10-20"},{"lineNumber":221,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":222,"author":{"gitId":"weidak"},"content":"     * @return Age object","lastModifiedDate":"2021-10-20"},{"lineNumber":223,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":224,"author":{"gitId":"weidak"},"content":"    public Age getProfileAge() {","lastModifiedDate":"2021-10-20"},{"lineNumber":225,"author":{"gitId":"weidak"},"content":"        return this.age;","lastModifiedDate":"2021-10-20"},{"lineNumber":226,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":227,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":228,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":229,"author":{"gitId":"weidak"},"content":"     * Retrieves the CalorieGoal object from the profile.","lastModifiedDate":"2021-10-20"},{"lineNumber":230,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":231,"author":{"gitId":"weidak"},"content":"     * @return CalorieGoal object","lastModifiedDate":"2021-10-20"},{"lineNumber":232,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":233,"author":{"gitId":"weidak"},"content":"    public CalorieGoal getProfileCalorieGoal() {","lastModifiedDate":"2021-10-20"},{"lineNumber":234,"author":{"gitId":"weidak"},"content":"        return this.calorieGoal;","lastModifiedDate":"2021-10-20"},{"lineNumber":235,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":236,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":237,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":238,"author":{"gitId":"weidak"},"content":"     * Retrieves the ActivityFactor object from the profile.","lastModifiedDate":"2021-10-20"},{"lineNumber":239,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":240,"author":{"gitId":"weidak"},"content":"     * @return ActivityFactor object","lastModifiedDate":"2021-10-20"},{"lineNumber":241,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":242,"author":{"gitId":"weidak"},"content":"    public ActivityFactor getProfileActivityFactor() {","lastModifiedDate":"2021-10-20"},{"lineNumber":243,"author":{"gitId":"weidak"},"content":"        return this.activityFactor;","lastModifiedDate":"2021-10-20"},{"lineNumber":244,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":245,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":246,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":247,"author":{"gitId":"weidak"},"content":"     * Converts the Profile to a String for printing purposes.","lastModifiedDate":"2021-10-30"},{"lineNumber":248,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":249,"author":{"gitId":"weidak"},"content":"     * @return Formatted String with all Profile attributes.","lastModifiedDate":"2021-10-30"},{"lineNumber":250,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":251,"author":{"gitId":"weidak"},"content":"    public String convertToString() {","lastModifiedDate":"2021-10-30"},{"lineNumber":252,"author":{"gitId":"weidak"},"content":"        return String.format(MESSAGE_PROFILE,","lastModifiedDate":"2021-10-30"},{"lineNumber":253,"author":{"gitId":"weidak"},"content":"                this.name.getName(),","lastModifiedDate":"2021-10-30"},{"lineNumber":254,"author":{"gitId":"weidak"},"content":"                this.height.getHeight(),","lastModifiedDate":"2021-10-30"},{"lineNumber":255,"author":{"gitId":"weidak"},"content":"                this.weight.getWeight(),","lastModifiedDate":"2021-10-30"},{"lineNumber":256,"author":{"gitId":"weidak"},"content":"                this.gender.getGender(),","lastModifiedDate":"2021-10-30"},{"lineNumber":257,"author":{"gitId":"weidak"},"content":"                this.age.getAge(),","lastModifiedDate":"2021-10-30"},{"lineNumber":258,"author":{"gitId":"weidak"},"content":"                this.calorieGoal.getCalorieGoal(),","lastModifiedDate":"2021-10-30"},{"lineNumber":259,"author":{"gitId":"weidak"},"content":"                this.activityFactor.getUserInput());","lastModifiedDate":"2021-10-30"},{"lineNumber":260,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":261,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":262,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":263,"author":{"gitId":"weidak"},"content":"     * Converts the file into a string that is used for storage.","lastModifiedDate":"2021-10-13"},{"lineNumber":264,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":265,"author":{"gitId":"weidak"},"content":"     * @return String that is used for storage.","lastModifiedDate":"2021-10-13"},{"lineNumber":266,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":267,"author":{"gitId":"weidak"},"content":"    public String toFileTextString() {","lastModifiedDate":"2021-10-12"},{"lineNumber":268,"author":{"gitId":"weidak"},"content":"        return name.getName() + FILE_TEXT_DELIMITER + height.getHeight() + FILE_TEXT_DELIMITER","lastModifiedDate":"2021-10-20"},{"lineNumber":269,"author":{"gitId":"weidak"},"content":"                + weight.getWeight() + FILE_TEXT_DELIMITER + gender.getGender() + FILE_TEXT_DELIMITER","lastModifiedDate":"2021-10-20"},{"lineNumber":270,"author":{"gitId":"weidak"},"content":"                + age.getAge() + FILE_TEXT_DELIMITER + calorieGoal.getCalorieGoal() + FILE_TEXT_DELIMITER","lastModifiedDate":"2021-10-20"},{"lineNumber":271,"author":{"gitId":"weidak"},"content":"                + activityFactor.getUserInput();","lastModifiedDate":"2021-10-30"},{"lineNumber":272,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":273,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":274,"author":{"gitId":"tttyyzzz"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":275,"author":{"gitId":"tttyyzzz"},"content":"     * Check if all attributes of profile are valid.","lastModifiedDate":"2021-10-16"},{"lineNumber":276,"author":{"gitId":"tttyyzzz"},"content":"     *","lastModifiedDate":"2021-10-16"},{"lineNumber":277,"author":{"gitId":"tttyyzzz"},"content":"     * @return false if at least one of the profile attributes are invalid.","lastModifiedDate":"2021-10-16"},{"lineNumber":278,"author":{"gitId":"tttyyzzz"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":279,"author":{"gitId":"tttyyzzz"},"content":"    public boolean checkProfileComplete() {","lastModifiedDate":"2021-10-20"},{"lineNumber":280,"author":{"gitId":"weidak"},"content":"        return name.isValid() \u0026\u0026 height.isValid() \u0026\u0026 weight.isValid() \u0026\u0026 gender.isValid()","lastModifiedDate":"2021-10-30"},{"lineNumber":281,"author":{"gitId":"weidak"},"content":"                \u0026\u0026 age.isValid() \u0026\u0026 activityFactor.isValid() \u0026\u0026 calorieGoal.isValid();","lastModifiedDate":"2021-10-30"},{"lineNumber":282,"author":{"gitId":"tttyyzzz"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":283,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":284,"author":{"gitId":"tttyyzzz"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":285,"author":{"gitId":"tttyyzzz"},"content":"     * Check if any of profile attributes is valid.","lastModifiedDate":"2021-10-20"},{"lineNumber":286,"author":{"gitId":"tttyyzzz"},"content":"     * If all profile attributes are incorrect, it will be deemed as profile not present.","lastModifiedDate":"2021-10-20"},{"lineNumber":287,"author":{"gitId":"tttyyzzz"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":288,"author":{"gitId":"tttyyzzz"},"content":"     * @return true if at least one of the profile attributes is valid.","lastModifiedDate":"2021-10-28"},{"lineNumber":289,"author":{"gitId":"tttyyzzz"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":290,"author":{"gitId":"tttyyzzz"},"content":"    public boolean checkProfilePresent() {","lastModifiedDate":"2021-10-20"},{"lineNumber":291,"author":{"gitId":"weidak"},"content":"        return name.isValid() || height.isValid() || weight.isValid() || gender.isValid()","lastModifiedDate":"2021-10-30"},{"lineNumber":292,"author":{"gitId":"weidak"},"content":"                || age.isValid() || activityFactor.isValid();","lastModifiedDate":"2021-10-30"},{"lineNumber":293,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":294,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":295,"author":{"gitId":"weidak"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"weidak":260,"tttyyzzz":15,"tlyi":20}},{"path":"src/main/java/seedu/duke/data/profile/attributes/ActivityFactor.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.data.profile.attributes;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"weidak"},"content":"import seedu.duke.data.Verifiable;","lastModifiedDate":"2021-10-30"},{"lineNumber":4,"author":{"gitId":"weidak"},"content":"import seedu.duke.data.profile.utilities.ActivityLevel;","lastModifiedDate":"2021-10-30"},{"lineNumber":5,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":6,"author":{"gitId":"weidak"},"content":"/**","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"weidak"},"content":" * Activity Factor attribute of profile.","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"weidak"},"content":" */","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"weidak"},"content":"public class ActivityFactor implements Verifiable {","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"weidak"},"content":"    public static final int LIMIT_LOWER_ACTIVITY_FACTOR \u003d 1;","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"weidak"},"content":"    public static final int LIMIT_UPPER_ACTIVITY_FACTOR \u003d 5;","lastModifiedDate":"2021-10-30"},{"lineNumber":13,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"weidak"},"content":"    protected int userInput;","lastModifiedDate":"2021-10-30"},{"lineNumber":15,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"weidak"},"content":"    public ActivityFactor() {","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"weidak"},"content":"     * Constructs an activity factor object.","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"weidak"},"content":"     * @param activityFactor activity factor input by user","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"weidak"},"content":"    public ActivityFactor(int activityFactor) {","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"weidak"},"content":"        setUserInput(activityFactor);","lastModifiedDate":"2021-10-30"},{"lineNumber":27,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":28,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":29,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-10-30"},{"lineNumber":30,"author":{"gitId":"weidak"},"content":"     * Obtains a ActivityLevel object depending on the activity factor.","lastModifiedDate":"2021-10-30"},{"lineNumber":31,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-10-30"},{"lineNumber":32,"author":{"gitId":"weidak"},"content":"     * @return ActivityLevel along with its associated factor.","lastModifiedDate":"2021-10-30"},{"lineNumber":33,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-10-30"},{"lineNumber":34,"author":{"gitId":"weidak"},"content":"    public ActivityLevel getActivityLevel() {","lastModifiedDate":"2021-10-30"},{"lineNumber":35,"author":{"gitId":"weidak"},"content":"        switch (userInput) {","lastModifiedDate":"2021-10-30"},{"lineNumber":36,"author":{"gitId":"weidak"},"content":"        case 1:","lastModifiedDate":"2021-10-30"},{"lineNumber":37,"author":{"gitId":"weidak"},"content":"            return ActivityLevel.SEDENTARY;","lastModifiedDate":"2021-10-30"},{"lineNumber":38,"author":{"gitId":"weidak"},"content":"        case 2:","lastModifiedDate":"2021-10-30"},{"lineNumber":39,"author":{"gitId":"weidak"},"content":"            return ActivityLevel.LIGHT;","lastModifiedDate":"2021-10-30"},{"lineNumber":40,"author":{"gitId":"weidak"},"content":"        case 3:","lastModifiedDate":"2021-10-30"},{"lineNumber":41,"author":{"gitId":"weidak"},"content":"            return ActivityLevel.MODERATE;","lastModifiedDate":"2021-10-30"},{"lineNumber":42,"author":{"gitId":"weidak"},"content":"        case 4:","lastModifiedDate":"2021-10-30"},{"lineNumber":43,"author":{"gitId":"weidak"},"content":"            return ActivityLevel.INTENSE;","lastModifiedDate":"2021-10-30"},{"lineNumber":44,"author":{"gitId":"weidak"},"content":"        case 5:","lastModifiedDate":"2021-10-30"},{"lineNumber":45,"author":{"gitId":"weidak"},"content":"            return ActivityLevel.EXTREME;","lastModifiedDate":"2021-10-30"},{"lineNumber":46,"author":{"gitId":"weidak"},"content":"        default:","lastModifiedDate":"2021-10-30"},{"lineNumber":47,"author":{"gitId":"weidak"},"content":"            return ActivityLevel.DEFAULT;","lastModifiedDate":"2021-10-30"},{"lineNumber":48,"author":{"gitId":"weidak"},"content":"        }","lastModifiedDate":"2021-10-30"},{"lineNumber":49,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":50,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":51,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":52,"author":{"gitId":"weidak"},"content":"     * Retrieves the activity factor of ActivityFactorobject.","lastModifiedDate":"2021-10-20"},{"lineNumber":53,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":54,"author":{"gitId":"weidak"},"content":"     * @return the activity factor of ActivityFactor object","lastModifiedDate":"2021-10-20"},{"lineNumber":55,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":56,"author":{"gitId":"weidak"},"content":"    public int getUserInput() {","lastModifiedDate":"2021-10-30"},{"lineNumber":57,"author":{"gitId":"weidak"},"content":"        return userInput;","lastModifiedDate":"2021-10-30"},{"lineNumber":58,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":59,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":60,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":61,"author":{"gitId":"weidak"},"content":"     * Sets the activity factor of ActivityFactor object.","lastModifiedDate":"2021-10-20"},{"lineNumber":62,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":63,"author":{"gitId":"weidak"},"content":"     * @param userInput activity factor input by user","lastModifiedDate":"2021-10-30"},{"lineNumber":64,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":65,"author":{"gitId":"weidak"},"content":"    public void setUserInput(int userInput) {","lastModifiedDate":"2021-10-30"},{"lineNumber":66,"author":{"gitId":"weidak"},"content":"        this.userInput \u003d userInput;","lastModifiedDate":"2021-10-30"},{"lineNumber":67,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":68,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":69,"author":{"gitId":"weidak"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":70,"author":{"gitId":"weidak"},"content":"    public boolean isValid() {","lastModifiedDate":"2021-10-20"},{"lineNumber":71,"author":{"gitId":"weidak"},"content":"        return userInput \u003e\u003d LIMIT_LOWER_ACTIVITY_FACTOR \u0026\u0026 userInput \u003c\u003d LIMIT_UPPER_ACTIVITY_FACTOR;","lastModifiedDate":"2021-10-30"},{"lineNumber":72,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":73,"author":{"gitId":"weidak"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"weidak":72,"tlyi":1}},{"path":"src/main/java/seedu/duke/data/profile/attributes/Age.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.data.profile.attributes;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"weidak"},"content":"import seedu.duke.data.Verifiable;","lastModifiedDate":"2021-10-30"},{"lineNumber":4,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":5,"author":{"gitId":"weidak"},"content":"/**","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"weidak"},"content":" * Age attribute of profile.","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"weidak"},"content":" */","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"weidak"},"content":"public class Age implements Verifiable {","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"weidak"},"content":"    public static final int LOWER_AGE_LIMIT \u003d 10;","lastModifiedDate":"2021-11-02"},{"lineNumber":11,"author":{"gitId":"weidak"},"content":"    public static final int UPPER_AGE_LIMIT \u003d 150;","lastModifiedDate":"2021-11-02"},{"lineNumber":12,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"weidak"},"content":"    protected int age;","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"weidak"},"content":"    public Age() {","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"weidak"},"content":"     * Constructs an age object.","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"weidak"},"content":"     * @param age age input by user","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"weidak"},"content":"    public Age(int age) {","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"weidak"},"content":"        setAge(age);","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"weidak"},"content":"     * Retrieves age of Age object.","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"weidak"},"content":"     * @return age of Age object","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"weidak"},"content":"    public int getAge() {","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"weidak"},"content":"        return age;","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"weidak"},"content":"     * Sets the age of Age object.","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"weidak"},"content":"     * @param age age input by user","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":42,"author":{"gitId":"weidak"},"content":"    public void setAge(int age) {","lastModifiedDate":"2021-10-20"},{"lineNumber":43,"author":{"gitId":"weidak"},"content":"        this.age \u003d age;","lastModifiedDate":"2021-10-20"},{"lineNumber":44,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":45,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":46,"author":{"gitId":"weidak"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":47,"author":{"gitId":"weidak"},"content":"    public boolean isValid() {","lastModifiedDate":"2021-10-20"},{"lineNumber":48,"author":{"gitId":"weidak"},"content":"        return age \u003e\u003d LOWER_AGE_LIMIT \u0026\u0026 age \u003c\u003d UPPER_AGE_LIMIT;","lastModifiedDate":"2021-11-02"},{"lineNumber":49,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":50,"author":{"gitId":"weidak"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"weidak":49,"tlyi":1}},{"path":"src/main/java/seedu/duke/data/profile/attributes/CalorieGoal.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.data.profile.attributes;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"weidak"},"content":"import seedu.duke.data.Verifiable;","lastModifiedDate":"2021-10-30"},{"lineNumber":4,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":5,"author":{"gitId":"weidak"},"content":"/**","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"weidak"},"content":" * Calorie Goal attribute of profile.","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"weidak"},"content":" */","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"weidak"},"content":"public class CalorieGoal implements Verifiable {","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"weidak"},"content":"    private static final String LS \u003d System.lineSeparator();","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"weidak"},"content":"    public static final int LIMIT_UPPER_CALORIES \u003d 10000;","lastModifiedDate":"2021-11-02"},{"lineNumber":13,"author":{"gitId":"weidak"},"content":"    public static final int LIMIT_LOWER_CALORIES \u003d -3000;","lastModifiedDate":"2021-11-02"},{"lineNumber":14,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"weidak"},"content":"    protected int calorieGoal;","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"weidak"},"content":"    public CalorieGoal() {","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"weidak"},"content":"     * Constructs a calorie goal object.","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"weidak"},"content":"     * @param calorieGoal goal input by user","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"weidak"},"content":"    public CalorieGoal(int calorieGoal) {","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"weidak"},"content":"        setCalorieGoal(calorieGoal);","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"weidak"},"content":"     * Retrieves the calorie goal of CalorieGoal object.","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"weidak"},"content":"     * @return the calorie goal stored in CalorieGoal object","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"weidak"},"content":"    public int getCalorieGoal() {","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"weidak"},"content":"        return calorieGoal;","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"weidak"},"content":"     * Sets the calorie goal for CalorieGoal object.","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":42,"author":{"gitId":"weidak"},"content":"     * @param calorieGoal calorie goal input by user","lastModifiedDate":"2021-10-20"},{"lineNumber":43,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":44,"author":{"gitId":"weidak"},"content":"    public void setCalorieGoal(int calorieGoal) {","lastModifiedDate":"2021-10-20"},{"lineNumber":45,"author":{"gitId":"weidak"},"content":"        this.calorieGoal \u003d calorieGoal;","lastModifiedDate":"2021-10-20"},{"lineNumber":46,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":47,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":48,"author":{"gitId":"weidak"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":49,"author":{"gitId":"weidak"},"content":"    public boolean isValid() {","lastModifiedDate":"2021-10-20"},{"lineNumber":50,"author":{"gitId":"weidak"},"content":"        if (calorieGoal \u003c LIMIT_LOWER_CALORIES || calorieGoal \u003e LIMIT_UPPER_CALORIES) {","lastModifiedDate":"2021-10-20"},{"lineNumber":51,"author":{"gitId":"weidak"},"content":"            return false;","lastModifiedDate":"2021-10-20"},{"lineNumber":52,"author":{"gitId":"weidak"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":53,"author":{"gitId":"weidak"},"content":"        return true;","lastModifiedDate":"2021-10-20"},{"lineNumber":54,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":55,"author":{"gitId":"weidak"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"weidak":54,"tlyi":1}},{"path":"src/main/java/seedu/duke/data/profile/attributes/Gender.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.data.profile.attributes;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"weidak"},"content":"import seedu.duke.data.Verifiable;","lastModifiedDate":"2021-10-30"},{"lineNumber":4,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":5,"author":{"gitId":"weidak"},"content":"/**","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"weidak"},"content":" * Gender attribute of profile.","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"weidak"},"content":" */","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"weidak"},"content":"public class Gender implements Verifiable {","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"weidak"},"content":"    private static final char GENDER_M \u003d \u0027M\u0027;","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"weidak"},"content":"    private static final char GENDER_F \u003d \u0027F\u0027;","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"weidak"},"content":"    protected char gender;","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"weidak"},"content":"    public Gender() {","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"weidak"},"content":"     * Constructs a gender object.","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"weidak"},"content":"     * @param gender gender input by user.","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"weidak"},"content":"    public Gender(char gender) {","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"tlyi"},"content":"        this.gender \u003d Character.toUpperCase(gender);","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"weidak"},"content":"     * Retrieves the gender of the Gender object.","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"weidak"},"content":"     * @return the gender of the gender object.","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"weidak"},"content":"    public char getGender() {","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"weidak"},"content":"        return gender;","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"weidak"},"content":"     * Sets the gender of the Gender object.","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"weidak"},"content":"     * @param gender gender input by user","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":42,"author":{"gitId":"weidak"},"content":"    public void setGender(char gender) {","lastModifiedDate":"2021-10-20"},{"lineNumber":43,"author":{"gitId":"tlyi"},"content":"        this.gender \u003d Character.toUpperCase(gender);","lastModifiedDate":"2021-10-24"},{"lineNumber":44,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":45,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":46,"author":{"gitId":"weidak"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":47,"author":{"gitId":"weidak"},"content":"    public boolean isValid() {","lastModifiedDate":"2021-10-20"},{"lineNumber":48,"author":{"gitId":"weidak"},"content":"        return gender \u003d\u003d GENDER_F || gender \u003d\u003d GENDER_M;","lastModifiedDate":"2021-11-02"},{"lineNumber":49,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":50,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":51,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":52,"author":{"gitId":"weidak"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"weidak":49,"tlyi":3}},{"path":"src/main/java/seedu/duke/data/profile/attributes/Height.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.data.profile.attributes;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"weidak"},"content":"import seedu.duke.data.Verifiable;","lastModifiedDate":"2021-10-30"},{"lineNumber":4,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":5,"author":{"gitId":"weidak"},"content":"/**","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"weidak"},"content":" * Height attribute of Profile.","lastModifiedDate":"2021-11-02"},{"lineNumber":7,"author":{"gitId":"weidak"},"content":" */","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"weidak"},"content":"public class Height implements Verifiable {","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"weidak"},"content":"    public static final int LOWER_HEIGHT_LIMIT \u003d 1;","lastModifiedDate":"2021-11-02"},{"lineNumber":11,"author":{"gitId":"weidak"},"content":"    public static final int UPPER_HEIGHT_LIMIT \u003d 300;","lastModifiedDate":"2021-11-02"},{"lineNumber":12,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"weidak"},"content":"    protected double height;","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"weidak"},"content":"    public Height() {","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"weidak"},"content":"     * Constructs a height object.","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"weidak"},"content":"     * @param height height input by user.","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"weidak"},"content":"    public Height(double height) {","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"weidak"},"content":"        setHeight(height);","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"weidak"},"content":"     * Retrieves the height of Height object.","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"weidak"},"content":"     * @return the height of Height object","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"weidak"},"content":"    public double getHeight() {","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"weidak"},"content":"        return height;","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"weidak"},"content":"     * Sets the height for Height object.","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"weidak"},"content":"     * @param height height input by user","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":42,"author":{"gitId":"weidak"},"content":"    public void setHeight(double height) {","lastModifiedDate":"2021-10-20"},{"lineNumber":43,"author":{"gitId":"weidak"},"content":"        this.height \u003d height;","lastModifiedDate":"2021-10-20"},{"lineNumber":44,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":45,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":46,"author":{"gitId":"weidak"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":47,"author":{"gitId":"weidak"},"content":"    public boolean isValid() {","lastModifiedDate":"2021-10-20"},{"lineNumber":48,"author":{"gitId":"weidak"},"content":"        return height \u003e\u003d LOWER_HEIGHT_LIMIT \u0026\u0026 height \u003c\u003d UPPER_HEIGHT_LIMIT;","lastModifiedDate":"2021-11-02"},{"lineNumber":49,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":50,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":51,"author":{"gitId":"weidak"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"weidak":50,"tlyi":1}},{"path":"src/main/java/seedu/duke/data/profile/attributes/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.data.profile.attributes;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"weidak"},"content":"import seedu.duke.data.Verifiable;","lastModifiedDate":"2021-10-30"},{"lineNumber":4,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":5,"author":{"gitId":"weidak"},"content":"/**","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"weidak"},"content":" * Name attribute of profile.","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"weidak"},"content":" */","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"weidak"},"content":"public class Name implements Verifiable {","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"weidak"},"content":"    protected String name;","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"tttyyzzz"},"content":"    private static final String EMPTY_STRING \u003d \"\";","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"weidak"},"content":"    public Name() {","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"weidak"},"content":"     * Constructs a name object.","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"weidak"},"content":"     * @param name name input of user","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"weidak"},"content":"    public Name(String name) {","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"tttyyzzz"},"content":"        setName(name.trim());","lastModifiedDate":"2021-10-31"},{"lineNumber":24,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"weidak"},"content":"     * Retrieves the name from Name object.","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"weidak"},"content":"     * @return name of Name object","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"weidak"},"content":"    public String getName() {","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"weidak"},"content":"        return name;","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"weidak"},"content":"     * Sets the name for the Name Object.","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"weidak"},"content":"     * @param name name input by the user","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"weidak"},"content":"    public void setName(String name) {","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"tttyyzzz"},"content":"        this.name \u003d name.trim();","lastModifiedDate":"2021-10-27"},{"lineNumber":42,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":43,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":44,"author":{"gitId":"weidak"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":45,"author":{"gitId":"weidak"},"content":"    public boolean isValid() {","lastModifiedDate":"2021-10-20"},{"lineNumber":46,"author":{"gitId":"tttyyzzz"},"content":"        if (name \u003d\u003d null || name.trim().equals(EMPTY_STRING)) {","lastModifiedDate":"2021-10-31"},{"lineNumber":47,"author":{"gitId":"tttyyzzz"},"content":"            return false;","lastModifiedDate":"2021-10-20"},{"lineNumber":48,"author":{"gitId":"tttyyzzz"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":49,"author":{"gitId":"weidak"},"content":"        for (int i \u003d 0; i \u003c name.length(); i++) {","lastModifiedDate":"2021-10-20"},{"lineNumber":50,"author":{"gitId":"weidak"},"content":"            if (name.charAt(i) \u003d\u003d \u0027|\u0027 || name.charAt(i) \u003d\u003d \u0027/\u0027) {","lastModifiedDate":"2021-10-20"},{"lineNumber":51,"author":{"gitId":"weidak"},"content":"                return false;","lastModifiedDate":"2021-10-20"},{"lineNumber":52,"author":{"gitId":"weidak"},"content":"            }","lastModifiedDate":"2021-10-20"},{"lineNumber":53,"author":{"gitId":"weidak"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":54,"author":{"gitId":"weidak"},"content":"        return true;","lastModifiedDate":"2021-10-20"},{"lineNumber":55,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":56,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":57,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":58,"author":{"gitId":"weidak"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"weidak":51,"tttyyzzz":6,"tlyi":1}},{"path":"src/main/java/seedu/duke/data/profile/attributes/Weight.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.data.profile.attributes;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"weidak"},"content":"import seedu.duke.data.Verifiable;","lastModifiedDate":"2021-10-30"},{"lineNumber":4,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":5,"author":{"gitId":"weidak"},"content":"/**","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"weidak"},"content":" * Weight attribute of profile.","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"weidak"},"content":" */","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"weidak"},"content":"public class Weight implements Verifiable {","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"weidak"},"content":"    public static final int LOWER_WEIGHT_LIMIT \u003d 1;","lastModifiedDate":"2021-11-02"},{"lineNumber":11,"author":{"gitId":"weidak"},"content":"    public static final int UPPER_WEIGHT_LIMIT \u003d 300;","lastModifiedDate":"2021-11-02"},{"lineNumber":12,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"weidak"},"content":"    protected double weight;","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"weidak"},"content":"    public Weight() {","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"weidak"},"content":"     * Constructs a weight object.","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"weidak"},"content":"     * @param weight weight input by user","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"weidak"},"content":"    public Weight(double weight) {","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"weidak"},"content":"        setWeight(weight);","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"weidak"},"content":"     * Retrieves the weight from the Weight object.","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"weidak"},"content":"     * @return the weight of Weight object","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"weidak"},"content":"    public double getWeight() {","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"weidak"},"content":"        return weight;","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"weidak"},"content":"     * Sets the weight of the Weight object.","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"weidak"},"content":"     * @param weight weight input by user","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":42,"author":{"gitId":"weidak"},"content":"    public void setWeight(double weight) {","lastModifiedDate":"2021-10-20"},{"lineNumber":43,"author":{"gitId":"weidak"},"content":"        this.weight \u003d weight;","lastModifiedDate":"2021-10-20"},{"lineNumber":44,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":45,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":46,"author":{"gitId":"weidak"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":47,"author":{"gitId":"weidak"},"content":"    public boolean isValid() {","lastModifiedDate":"2021-10-20"},{"lineNumber":48,"author":{"gitId":"weidak"},"content":"        return weight \u003e\u003d LOWER_WEIGHT_LIMIT \u0026\u0026 weight \u003c\u003d UPPER_WEIGHT_LIMIT;","lastModifiedDate":"2021-11-02"},{"lineNumber":49,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":50,"author":{"gitId":"weidak"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"weidak":49,"tlyi":1}},{"path":"src/main/java/seedu/duke/data/profile/exceptions/InvalidCharacteristicException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.data.profile.exceptions;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"weidak"},"content":"/**","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"weidak"},"content":" * Exception that is thrown when the input human characteristics are invalid.","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"weidak"},"content":" */","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"weidak"},"content":"public class InvalidCharacteristicException extends Exception {","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"weidak"},"content":"    public InvalidCharacteristicException(String message) {","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"weidak"},"content":"        super(message);","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"weidak"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"weidak":10,"tlyi":1}},{"path":"src/main/java/seedu/duke/data/profile/utilities/ActivityLevel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weidak"},"content":"package seedu.duke.data.profile.utilities;","lastModifiedDate":"2021-10-30"},{"lineNumber":2,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":3,"author":{"gitId":"weidak"},"content":"/**","lastModifiedDate":"2021-10-30"},{"lineNumber":4,"author":{"gitId":"weidak"},"content":" * Different levels of activity depending on the ActivityFactor in Profile.","lastModifiedDate":"2021-10-30"},{"lineNumber":5,"author":{"gitId":"weidak"},"content":" */","lastModifiedDate":"2021-10-30"},{"lineNumber":6,"author":{"gitId":"weidak"},"content":"public enum ActivityLevel {","lastModifiedDate":"2021-10-30"},{"lineNumber":7,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":8,"author":{"gitId":"weidak"},"content":"    DEFAULT(Constants.FACTOR_DEFAULT),","lastModifiedDate":"2021-10-30"},{"lineNumber":9,"author":{"gitId":"weidak"},"content":"    SEDENTARY(Constants.FACTOR_SEDENTARY),","lastModifiedDate":"2021-10-30"},{"lineNumber":10,"author":{"gitId":"weidak"},"content":"    LIGHT(Constants.FACTOR_LIGHT),","lastModifiedDate":"2021-10-30"},{"lineNumber":11,"author":{"gitId":"weidak"},"content":"    MODERATE(Constants.FACTOR_MODERATE),","lastModifiedDate":"2021-10-30"},{"lineNumber":12,"author":{"gitId":"weidak"},"content":"    INTENSE(Constants.FACTOR_INTENSE),","lastModifiedDate":"2021-10-30"},{"lineNumber":13,"author":{"gitId":"weidak"},"content":"    EXTREME(Constants.FACTOR_EXTREME);","lastModifiedDate":"2021-10-30"},{"lineNumber":14,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":15,"author":{"gitId":"weidak"},"content":"    private final double factor;","lastModifiedDate":"2021-10-30"},{"lineNumber":16,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":17,"author":{"gitId":"weidak"},"content":"    ActivityLevel(double factor) {","lastModifiedDate":"2021-10-30"},{"lineNumber":18,"author":{"gitId":"weidak"},"content":"        this.factor \u003d factor;","lastModifiedDate":"2021-10-30"},{"lineNumber":19,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":20,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":21,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-10-30"},{"lineNumber":22,"author":{"gitId":"weidak"},"content":"     * Returns the constant associated with the level of activity.","lastModifiedDate":"2021-10-30"},{"lineNumber":23,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-10-30"},{"lineNumber":24,"author":{"gitId":"weidak"},"content":"     * @return the factor depending on level of activity","lastModifiedDate":"2021-10-30"},{"lineNumber":25,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-10-30"},{"lineNumber":26,"author":{"gitId":"weidak"},"content":"    public double getFactor() {","lastModifiedDate":"2021-10-30"},{"lineNumber":27,"author":{"gitId":"weidak"},"content":"        return factor;","lastModifiedDate":"2021-10-30"},{"lineNumber":28,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":29,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":30,"author":{"gitId":"weidak"},"content":"    private static class Constants {","lastModifiedDate":"2021-10-30"},{"lineNumber":31,"author":{"gitId":"weidak"},"content":"        public static final double FACTOR_DEFAULT \u003d 1.0;","lastModifiedDate":"2021-10-30"},{"lineNumber":32,"author":{"gitId":"weidak"},"content":"        public static final double FACTOR_SEDENTARY \u003d 1.2;","lastModifiedDate":"2021-10-30"},{"lineNumber":33,"author":{"gitId":"weidak"},"content":"        public static final double FACTOR_LIGHT \u003d 1.375;","lastModifiedDate":"2021-10-30"},{"lineNumber":34,"author":{"gitId":"weidak"},"content":"        public static final double FACTOR_MODERATE \u003d 1.55;","lastModifiedDate":"2021-10-30"},{"lineNumber":35,"author":{"gitId":"weidak"},"content":"        public static final double FACTOR_INTENSE \u003d 1.725;","lastModifiedDate":"2021-10-30"},{"lineNumber":36,"author":{"gitId":"weidak"},"content":"        public static final double FACTOR_EXTREME \u003d 1.9;","lastModifiedDate":"2021-10-30"},{"lineNumber":37,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":38,"author":{"gitId":"weidak"},"content":"}","lastModifiedDate":"2021-10-30"}],"authorContributionMap":{"weidak":38}},{"path":"src/main/java/seedu/duke/data/profile/utilities/ProfileUtils.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weidak"},"content":"package seedu.duke.data.profile.utilities;","lastModifiedDate":"2021-10-30"},{"lineNumber":2,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":3,"author":{"gitId":"weidak"},"content":"import seedu.duke.data.profile.Profile;","lastModifiedDate":"2021-10-30"},{"lineNumber":4,"author":{"gitId":"weidak"},"content":"import seedu.duke.data.profile.attributes.ActivityFactor;","lastModifiedDate":"2021-10-30"},{"lineNumber":5,"author":{"gitId":"weidak"},"content":"import seedu.duke.data.profile.attributes.Age;","lastModifiedDate":"2021-11-02"},{"lineNumber":6,"author":{"gitId":"weidak"},"content":"import seedu.duke.data.profile.attributes.CalorieGoal;","lastModifiedDate":"2021-10-30"},{"lineNumber":7,"author":{"gitId":"weidak"},"content":"import seedu.duke.data.profile.attributes.Height;","lastModifiedDate":"2021-11-02"},{"lineNumber":8,"author":{"gitId":"weidak"},"content":"import seedu.duke.data.profile.attributes.Weight;","lastModifiedDate":"2021-11-02"},{"lineNumber":9,"author":{"gitId":"weidak"},"content":"import seedu.duke.data.profile.exceptions.InvalidCharacteristicException;","lastModifiedDate":"2021-10-30"},{"lineNumber":10,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":11,"author":{"gitId":"weidak"},"content":"/**","lastModifiedDate":"2021-10-30"},{"lineNumber":12,"author":{"gitId":"weidak"},"content":" * Utilities that can be used for the Profile class.","lastModifiedDate":"2021-10-30"},{"lineNumber":13,"author":{"gitId":"weidak"},"content":" */","lastModifiedDate":"2021-10-30"},{"lineNumber":14,"author":{"gitId":"weidak"},"content":"public class ProfileUtils {","lastModifiedDate":"2021-10-30"},{"lineNumber":15,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":16,"author":{"gitId":"weidak"},"content":"    private static final String LS \u003d System.lineSeparator();","lastModifiedDate":"2021-10-30"},{"lineNumber":17,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":18,"author":{"gitId":"weidak"},"content":"    public static final int NON_POSITIVE_LIMIT \u003d 0;","lastModifiedDate":"2021-10-30"},{"lineNumber":19,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":20,"author":{"gitId":"weidak"},"content":"    private static final String BMI_STATUS_UNDERWEIGHT \u003d \"Underweight\";","lastModifiedDate":"2021-10-30"},{"lineNumber":21,"author":{"gitId":"weidak"},"content":"    private static final String BMI_STATUS_HEALTHY \u003d \"Healthy\";","lastModifiedDate":"2021-10-30"},{"lineNumber":22,"author":{"gitId":"weidak"},"content":"    private static final String BMI_STATUS_OVERWEIGHT \u003d \"Overweight\";","lastModifiedDate":"2021-10-30"},{"lineNumber":23,"author":{"gitId":"weidak"},"content":"    private static final String BMI_STATUS_OBESE \u003d \"Obese\";","lastModifiedDate":"2021-10-30"},{"lineNumber":24,"author":{"gitId":"weidak"},"content":"    public static final double BMI_LIMIT_UNDERWEIGHT \u003d 18.5;","lastModifiedDate":"2021-10-30"},{"lineNumber":25,"author":{"gitId":"weidak"},"content":"    public static final double BMI_LIMIT_HEALTHY \u003d 24.9;","lastModifiedDate":"2021-10-30"},{"lineNumber":26,"author":{"gitId":"weidak"},"content":"    public static final double BMI_LIMIT_OVERWEIGHT \u003d 29.9;","lastModifiedDate":"2021-10-30"},{"lineNumber":27,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":28,"author":{"gitId":"weidak"},"content":"    private static final char GENDER_M \u003d \u0027M\u0027;","lastModifiedDate":"2021-10-30"},{"lineNumber":29,"author":{"gitId":"weidak"},"content":"    private static final char GENDER_F \u003d \u0027F\u0027;","lastModifiedDate":"2021-10-30"},{"lineNumber":30,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":31,"author":{"gitId":"weidak"},"content":"    public static final double GENDER_M_WEIGHT_FACTOR \u003d 13.397;","lastModifiedDate":"2021-10-30"},{"lineNumber":32,"author":{"gitId":"weidak"},"content":"    public static final double GENDER_M_HEIGHT_FACTOR \u003d 4.799;","lastModifiedDate":"2021-10-30"},{"lineNumber":33,"author":{"gitId":"weidak"},"content":"    public static final double GENDER_M_AGE_FACTOR \u003d 5.677;","lastModifiedDate":"2021-10-30"},{"lineNumber":34,"author":{"gitId":"weidak"},"content":"    public static final double GENDER_M_CONSTANT \u003d 88.362;","lastModifiedDate":"2021-10-30"},{"lineNumber":35,"author":{"gitId":"weidak"},"content":"    public static final double GENDER_F_WEIGHT_FACTOR \u003d 9.247;","lastModifiedDate":"2021-10-30"},{"lineNumber":36,"author":{"gitId":"weidak"},"content":"    public static final double GENDER_F_HEIGHT_FACTOR \u003d 3.098;","lastModifiedDate":"2021-10-30"},{"lineNumber":37,"author":{"gitId":"weidak"},"content":"    public static final double GENDER_F_AGE_FACTOR \u003d 4.330;","lastModifiedDate":"2021-10-30"},{"lineNumber":38,"author":{"gitId":"weidak"},"content":"    public static final double GENDER_F_CONSTANT \u003d 447.593;","lastModifiedDate":"2021-10-30"},{"lineNumber":39,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":40,"author":{"gitId":"weidak"},"content":"    public static final String ERROR_NAME \u003d \"Try not to use / and | in your name as it can make our commands invalid.\\n\"","lastModifiedDate":"2021-10-30"},{"lineNumber":41,"author":{"gitId":"tlyi"},"content":"            + \"Maybe you can replace them with \\\\ or - and try again!\";","lastModifiedDate":"2021-11-04"},{"lineNumber":42,"author":{"gitId":"tlyi"},"content":"    public static final String ERROR_HEIGHT \u003d \"Your height cannot be of this value!\" + LS","lastModifiedDate":"2021-11-04"},{"lineNumber":43,"author":{"gitId":"weidak"},"content":"            + \"Maybe you can try a number from \" + Height.LOWER_HEIGHT_LIMIT + \" to \" + Height.UPPER_HEIGHT_LIMIT + \".\";","lastModifiedDate":"2021-11-02"},{"lineNumber":44,"author":{"gitId":"tlyi"},"content":"    public static final String ERROR_WEIGHT \u003d \"Your weight cannot be of this value!\" + LS","lastModifiedDate":"2021-11-04"},{"lineNumber":45,"author":{"gitId":"weidak"},"content":"            + \"Maybe you can try a number from \" + Weight.LOWER_WEIGHT_LIMIT + \" to \" + Weight.UPPER_WEIGHT_LIMIT + \".\";","lastModifiedDate":"2021-11-02"},{"lineNumber":46,"author":{"gitId":"weidak"},"content":"    public static final String ERROR_GENDER \u003d \"Please type in M or F only!\";","lastModifiedDate":"2021-10-30"},{"lineNumber":47,"author":{"gitId":"tlyi"},"content":"    public static final String ERROR_AGE \u003d \"Your age cannot be this value.\" + LS","lastModifiedDate":"2021-11-04"},{"lineNumber":48,"author":{"gitId":"weidak"},"content":"            + \"Maybe you can try a whole number from \" + Age.LOWER_AGE_LIMIT + \" to \" + Age.UPPER_AGE_LIMIT + \".\";","lastModifiedDate":"2021-11-02"},{"lineNumber":49,"author":{"gitId":"weidak"},"content":"    public static final String ERROR_ACTIVITY_FACTOR \u003d \"Maybe you can try a whole number from \"","lastModifiedDate":"2021-11-02"},{"lineNumber":50,"author":{"gitId":"weidak"},"content":"            + ActivityFactor.LIMIT_LOWER_ACTIVITY_FACTOR","lastModifiedDate":"2021-10-30"},{"lineNumber":51,"author":{"gitId":"weidak"},"content":"            + \" to \"","lastModifiedDate":"2021-10-30"},{"lineNumber":52,"author":{"gitId":"tlyi"},"content":"            + ActivityFactor.LIMIT_UPPER_ACTIVITY_FACTOR + \".\";","lastModifiedDate":"2021-11-04"},{"lineNumber":53,"author":{"gitId":"weidak"},"content":"    public static final String ERROR_CALORIE_GOAL \u003d","lastModifiedDate":"2021-10-30"},{"lineNumber":54,"author":{"gitId":"tlyi"},"content":"            \"Your calorie goal cannot be of this value!\" + LS","lastModifiedDate":"2021-11-04"},{"lineNumber":55,"author":{"gitId":"weidak"},"content":"                    + \"Maybe you can try a whole number from \"","lastModifiedDate":"2021-11-02"},{"lineNumber":56,"author":{"gitId":"weidak"},"content":"                    + CalorieGoal.LIMIT_LOWER_CALORIES","lastModifiedDate":"2021-11-02"},{"lineNumber":57,"author":{"gitId":"weidak"},"content":"                    + \" to \"","lastModifiedDate":"2021-11-02"},{"lineNumber":58,"author":{"gitId":"tlyi"},"content":"                    + CalorieGoal.LIMIT_UPPER_CALORIES + \".\";","lastModifiedDate":"2021-11-04"},{"lineNumber":59,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":60,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-10-30"},{"lineNumber":61,"author":{"gitId":"weidak"},"content":"     * Retrieves the Basal Metabolic Rate of the user based on their activity factor indicated on the profile.","lastModifiedDate":"2021-10-30"},{"lineNumber":62,"author":{"gitId":"weidak"},"content":"     * A higher activity factor indicates a greater metabolic rate and thus more calories they burn off.","lastModifiedDate":"2021-10-30"},{"lineNumber":63,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-10-30"},{"lineNumber":64,"author":{"gitId":"weidak"},"content":"     * @return BMR value based on their indicated activity factor","lastModifiedDate":"2021-10-30"},{"lineNumber":65,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-10-30"},{"lineNumber":66,"author":{"gitId":"weidak"},"content":"    public static int getBmr(Profile profile) {","lastModifiedDate":"2021-10-30"},{"lineNumber":67,"author":{"gitId":"weidak"},"content":"        double bmr \u003d getBaseBmrValue(profile);","lastModifiedDate":"2021-10-30"},{"lineNumber":68,"author":{"gitId":"weidak"},"content":"        double factor \u003d profile.getProfileActivityFactor().getActivityLevel().getFactor();","lastModifiedDate":"2021-10-30"},{"lineNumber":69,"author":{"gitId":"weidak"},"content":"        return (int) Math.round(bmr * factor);","lastModifiedDate":"2021-10-30"},{"lineNumber":70,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":71,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":72,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-10-30"},{"lineNumber":73,"author":{"gitId":"weidak"},"content":"     * Manually calculates the BMI.","lastModifiedDate":"2021-10-30"},{"lineNumber":74,"author":{"gitId":"weidak"},"content":"     * Used when the user input values that is not be stored in his/her profile.","lastModifiedDate":"2021-10-30"},{"lineNumber":75,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-10-30"},{"lineNumber":76,"author":{"gitId":"weidak"},"content":"     * @param height Value of manual input of height","lastModifiedDate":"2021-10-30"},{"lineNumber":77,"author":{"gitId":"weidak"},"content":"     * @param weight Value of manual input of weight","lastModifiedDate":"2021-10-30"},{"lineNumber":78,"author":{"gitId":"weidak"},"content":"     * @return The calculated BMI of the manual inputs","lastModifiedDate":"2021-10-30"},{"lineNumber":79,"author":{"gitId":"weidak"},"content":"     * @throws InvalidCharacteristicException When the user inputs negative values for either height or weight","lastModifiedDate":"2021-10-30"},{"lineNumber":80,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-10-30"},{"lineNumber":81,"author":{"gitId":"weidak"},"content":"    public static double calculateBmi(double height, double weight) throws InvalidCharacteristicException {","lastModifiedDate":"2021-10-30"},{"lineNumber":82,"author":{"gitId":"weidak"},"content":"        checkWeightValidity(weight);","lastModifiedDate":"2021-10-30"},{"lineNumber":83,"author":{"gitId":"weidak"},"content":"        checkHeightValidity(height);","lastModifiedDate":"2021-10-30"},{"lineNumber":84,"author":{"gitId":"weidak"},"content":"        assert weight \u003e 0 : \"Weight cannot be non-positive.\";","lastModifiedDate":"2021-10-30"},{"lineNumber":85,"author":{"gitId":"weidak"},"content":"        assert height \u003e 0 : \"Height cannot be non-positive.\";","lastModifiedDate":"2021-10-30"},{"lineNumber":86,"author":{"gitId":"weidak"},"content":"        return computeBmi(height, weight);","lastModifiedDate":"2021-10-30"},{"lineNumber":87,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":88,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":89,"author":{"gitId":"weidak"},"content":"    private static double computeBmi(double height, double weight) {","lastModifiedDate":"2021-10-30"},{"lineNumber":90,"author":{"gitId":"weidak"},"content":"        double heightInM \u003d height / 100.0;","lastModifiedDate":"2021-10-30"},{"lineNumber":91,"author":{"gitId":"weidak"},"content":"        return Math.round((weight / (Math.pow(heightInM, 2))) * 10) / 10.0;","lastModifiedDate":"2021-10-30"},{"lineNumber":92,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":93,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":94,"author":{"gitId":"weidak"},"content":"    private static void checkWeightValidity(double weight) throws InvalidCharacteristicException {","lastModifiedDate":"2021-10-30"},{"lineNumber":95,"author":{"gitId":"weidak"},"content":"        if (weight \u003c\u003d NON_POSITIVE_LIMIT) {","lastModifiedDate":"2021-10-30"},{"lineNumber":96,"author":{"gitId":"weidak"},"content":"            throw new InvalidCharacteristicException(ERROR_WEIGHT);","lastModifiedDate":"2021-10-30"},{"lineNumber":97,"author":{"gitId":"weidak"},"content":"        }","lastModifiedDate":"2021-10-30"},{"lineNumber":98,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":99,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":100,"author":{"gitId":"weidak"},"content":"    private static void checkHeightValidity(double height) throws InvalidCharacteristicException {","lastModifiedDate":"2021-10-30"},{"lineNumber":101,"author":{"gitId":"weidak"},"content":"        if (height \u003c\u003d NON_POSITIVE_LIMIT) {","lastModifiedDate":"2021-10-30"},{"lineNumber":102,"author":{"gitId":"weidak"},"content":"            throw new InvalidCharacteristicException(ERROR_HEIGHT);","lastModifiedDate":"2021-10-30"},{"lineNumber":103,"author":{"gitId":"weidak"},"content":"        }","lastModifiedDate":"2021-10-30"},{"lineNumber":104,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":105,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":106,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-10-30"},{"lineNumber":107,"author":{"gitId":"weidak"},"content":"     * Retrieves the indication with regard to the value of their BMI.","lastModifiedDate":"2021-10-30"},{"lineNumber":108,"author":{"gitId":"weidak"},"content":"     * Should not have any exceptions thrown since the other functions handled invalid cases.","lastModifiedDate":"2021-10-30"},{"lineNumber":109,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-10-30"},{"lineNumber":110,"author":{"gitId":"weidak"},"content":"     * @param bmi The bmi of the user","lastModifiedDate":"2021-10-30"},{"lineNumber":111,"author":{"gitId":"weidak"},"content":"     * @return The status of his current body","lastModifiedDate":"2021-10-30"},{"lineNumber":112,"author":{"gitId":"weidak"},"content":"     **/","lastModifiedDate":"2021-10-30"},{"lineNumber":113,"author":{"gitId":"weidak"},"content":"    public static String retrieveBmiStatus(double bmi) {","lastModifiedDate":"2021-10-30"},{"lineNumber":114,"author":{"gitId":"weidak"},"content":"        String result;","lastModifiedDate":"2021-10-30"},{"lineNumber":115,"author":{"gitId":"weidak"},"content":"        assert bmi \u003e 0 : \"BMI cannot be non-positive.\";","lastModifiedDate":"2021-10-30"},{"lineNumber":116,"author":{"gitId":"weidak"},"content":"        if (bmi \u003c BMI_LIMIT_UNDERWEIGHT) {","lastModifiedDate":"2021-10-30"},{"lineNumber":117,"author":{"gitId":"weidak"},"content":"            result \u003d BMI_STATUS_UNDERWEIGHT;","lastModifiedDate":"2021-10-30"},{"lineNumber":118,"author":{"gitId":"weidak"},"content":"        } else if (bmi \u003c\u003d BMI_LIMIT_HEALTHY) {","lastModifiedDate":"2021-10-30"},{"lineNumber":119,"author":{"gitId":"weidak"},"content":"            result \u003d BMI_STATUS_HEALTHY;","lastModifiedDate":"2021-10-30"},{"lineNumber":120,"author":{"gitId":"weidak"},"content":"        } else if (bmi \u003c\u003d BMI_LIMIT_OVERWEIGHT) {","lastModifiedDate":"2021-10-30"},{"lineNumber":121,"author":{"gitId":"weidak"},"content":"            result \u003d BMI_STATUS_OVERWEIGHT;","lastModifiedDate":"2021-10-30"},{"lineNumber":122,"author":{"gitId":"weidak"},"content":"        } else {","lastModifiedDate":"2021-10-30"},{"lineNumber":123,"author":{"gitId":"weidak"},"content":"            result \u003d BMI_STATUS_OBESE;","lastModifiedDate":"2021-10-30"},{"lineNumber":124,"author":{"gitId":"weidak"},"content":"        }","lastModifiedDate":"2021-10-30"},{"lineNumber":125,"author":{"gitId":"weidak"},"content":"        return result;","lastModifiedDate":"2021-10-30"},{"lineNumber":126,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":127,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":128,"author":{"gitId":"weidak"},"content":"    private static double getBaseBmrValue(Profile profile) {","lastModifiedDate":"2021-10-30"},{"lineNumber":129,"author":{"gitId":"weidak"},"content":"        char gender \u003d profile.getProfileGender().getGender();","lastModifiedDate":"2021-10-30"},{"lineNumber":130,"author":{"gitId":"weidak"},"content":"        double weight \u003d profile.getProfileWeight().getWeight();","lastModifiedDate":"2021-10-30"},{"lineNumber":131,"author":{"gitId":"weidak"},"content":"        double height \u003d profile.getProfileHeight().getHeight();","lastModifiedDate":"2021-10-30"},{"lineNumber":132,"author":{"gitId":"weidak"},"content":"        int age \u003d profile.getProfileAge().getAge();","lastModifiedDate":"2021-10-30"},{"lineNumber":133,"author":{"gitId":"weidak"},"content":"        double bmr;","lastModifiedDate":"2021-10-30"},{"lineNumber":134,"author":{"gitId":"weidak"},"content":"        if (gender \u003d\u003d GENDER_M) {","lastModifiedDate":"2021-10-30"},{"lineNumber":135,"author":{"gitId":"weidak"},"content":"            bmr \u003d GENDER_M_WEIGHT_FACTOR * weight","lastModifiedDate":"2021-10-30"},{"lineNumber":136,"author":{"gitId":"weidak"},"content":"                    + GENDER_M_HEIGHT_FACTOR * height","lastModifiedDate":"2021-10-30"},{"lineNumber":137,"author":{"gitId":"weidak"},"content":"                    - GENDER_M_AGE_FACTOR * age","lastModifiedDate":"2021-10-30"},{"lineNumber":138,"author":{"gitId":"weidak"},"content":"                    + GENDER_M_CONSTANT;","lastModifiedDate":"2021-10-30"},{"lineNumber":139,"author":{"gitId":"weidak"},"content":"        } else {","lastModifiedDate":"2021-10-30"},{"lineNumber":140,"author":{"gitId":"weidak"},"content":"            bmr \u003d GENDER_F_WEIGHT_FACTOR * weight","lastModifiedDate":"2021-10-30"},{"lineNumber":141,"author":{"gitId":"weidak"},"content":"                    + GENDER_F_HEIGHT_FACTOR * height","lastModifiedDate":"2021-10-30"},{"lineNumber":142,"author":{"gitId":"weidak"},"content":"                    - GENDER_F_AGE_FACTOR * age","lastModifiedDate":"2021-10-30"},{"lineNumber":143,"author":{"gitId":"weidak"},"content":"                    + GENDER_F_CONSTANT;","lastModifiedDate":"2021-10-30"},{"lineNumber":144,"author":{"gitId":"weidak"},"content":"        }","lastModifiedDate":"2021-10-30"},{"lineNumber":145,"author":{"gitId":"weidak"},"content":"        return bmr;","lastModifiedDate":"2021-10-30"},{"lineNumber":146,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":147,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":148,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-10-30"},{"lineNumber":149,"author":{"gitId":"weidak"},"content":"     * Calculates the difference between food calories and exercise calories, factoring in metabolic rate.","lastModifiedDate":"2021-10-30"},{"lineNumber":150,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-10-30"},{"lineNumber":151,"author":{"gitId":"weidak"},"content":"     * @param foodCalories     Total intake consumption","lastModifiedDate":"2021-10-30"},{"lineNumber":152,"author":{"gitId":"weidak"},"content":"     * @param exerciseCalories Total output exerted","lastModifiedDate":"2021-10-30"},{"lineNumber":153,"author":{"gitId":"weidak"},"content":"     * @return The net calories of food - (exercise + BMR)","lastModifiedDate":"2021-10-30"},{"lineNumber":154,"author":{"gitId":"weidak"},"content":"     * @throws InvalidCharacteristicException Only if activity factor has been misappropriated in .txt file","lastModifiedDate":"2021-10-30"},{"lineNumber":155,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-10-30"},{"lineNumber":156,"author":{"gitId":"weidak"},"content":"    public static int calculateNetCalories(int foodCalories, int exerciseCalories, Profile p)","lastModifiedDate":"2021-10-30"},{"lineNumber":157,"author":{"gitId":"weidak"},"content":"            throws InvalidCharacteristicException {","lastModifiedDate":"2021-10-30"},{"lineNumber":158,"author":{"gitId":"weidak"},"content":"        return foodCalories - exerciseCalories - getBmr(p);","lastModifiedDate":"2021-10-30"},{"lineNumber":159,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":160,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":161,"author":{"gitId":"weidak"},"content":"}","lastModifiedDate":"2021-10-30"}],"authorContributionMap":{"weidak":154,"tlyi":7}},{"path":"src/main/java/seedu/duke/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.logic;","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":3,"author":{"gitId":"weidak"},"content":"import seedu.duke.data.DataManager;","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"tlyi"},"content":"import seedu.duke.logic.commands.ByeCommand;","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"tlyi"},"content":"import seedu.duke.logic.commands.Command;","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"tlyi"},"content":"import seedu.duke.logic.commands.CommandResult;","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"tlyi"},"content":"import seedu.duke.logic.parser.ParserManager;","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"tlyi"},"content":"import seedu.duke.storage.StorageManager;","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"tlyi"},"content":"import seedu.duke.storage.exceptions.UnableToWriteFileException;","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"tlyi"},"content":"//@@author tlyi","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"tlyi"},"content":"/**","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"tlyi"},"content":" * Handles the parsing and execution of all commands.","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"tlyi"},"content":" */","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"tlyi"},"content":"public class LogicManager {","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"tlyi"},"content":"    final ParserManager parserManager;","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"tlyi"},"content":"    final StorageManager storageManager;","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"tlyi"},"content":"    final DataManager dataManager;","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"tlyi"},"content":"    public LogicManager(StorageManager storageManager, DataManager dataManager) {","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"tlyi"},"content":"        this.parserManager \u003d new ParserManager();","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"tlyi"},"content":"        this.storageManager \u003d storageManager;","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"tlyi"},"content":"        this.dataManager \u003d dataManager;","lastModifiedDate":"2021-10-27"},{"lineNumber":25,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"tlyi"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":28,"author":{"gitId":"tlyi"},"content":"     * Executes the given Command and (to be implemented) calls for storage operation if required.","lastModifiedDate":"2021-10-27"},{"lineNumber":29,"author":{"gitId":"tlyi"},"content":"     *","lastModifiedDate":"2021-10-27"},{"lineNumber":30,"author":{"gitId":"tlyi"},"content":"     * @param userInput Raw user input","lastModifiedDate":"2021-10-27"},{"lineNumber":31,"author":{"gitId":"tlyi"},"content":"     * @return CommandResult representing result of execution of the command","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"tlyi"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":33,"author":{"gitId":"tlyi"},"content":"    public CommandResult execute(String userInput) {","lastModifiedDate":"2021-10-27"},{"lineNumber":34,"author":{"gitId":"tlyi"},"content":"        final Command command \u003d parserManager.parseCommand(userInput);","lastModifiedDate":"2021-10-27"},{"lineNumber":35,"author":{"gitId":"tlyi"},"content":"        command.setData(dataManager);","lastModifiedDate":"2021-10-27"},{"lineNumber":36,"author":{"gitId":"tlyi"},"content":"        final CommandResult result \u003d command.execute();","lastModifiedDate":"2021-10-27"},{"lineNumber":37,"author":{"gitId":"tlyi"},"content":"        try {","lastModifiedDate":"2021-10-27"},{"lineNumber":38,"author":{"gitId":"tlyi"},"content":"            if (ByeCommand.isBye(command)) {","lastModifiedDate":"2021-10-27"},{"lineNumber":39,"author":{"gitId":"tlyi"},"content":"                storageManager.saveAll(dataManager);","lastModifiedDate":"2021-10-27"},{"lineNumber":40,"author":{"gitId":"tlyi"},"content":"            }","lastModifiedDate":"2021-10-27"},{"lineNumber":41,"author":{"gitId":"tlyi"},"content":"            if (Command.requiresProfileStorageRewrite(command)) {","lastModifiedDate":"2021-10-27"},{"lineNumber":42,"author":{"gitId":"tlyi"},"content":"                storageManager.saveProfile(dataManager.getProfile());","lastModifiedDate":"2021-10-27"},{"lineNumber":43,"author":{"gitId":"tlyi"},"content":"            }","lastModifiedDate":"2021-10-27"},{"lineNumber":44,"author":{"gitId":"tlyi"},"content":"            if (Command.requiresExerciseListStorageRewrite(command)) {","lastModifiedDate":"2021-10-27"},{"lineNumber":45,"author":{"gitId":"tlyi"},"content":"                dataManager.getExerciseItems().addAll(dataManager.getFilteredExerciseItems());","lastModifiedDate":"2021-10-28"},{"lineNumber":46,"author":{"gitId":"tlyi"},"content":"                storageManager.saveExerciseList(dataManager.getExerciseItems());","lastModifiedDate":"2021-10-27"},{"lineNumber":47,"author":{"gitId":"tlyi"},"content":"            }","lastModifiedDate":"2021-10-27"},{"lineNumber":48,"author":{"gitId":"tlyi"},"content":"            if (Command.requiresFoodListStorageRewrite(command)) {","lastModifiedDate":"2021-10-27"},{"lineNumber":49,"author":{"gitId":"tlyi"},"content":"                dataManager.getFoodItems().addAll(dataManager.getFilteredFoodItems());","lastModifiedDate":"2021-10-28"},{"lineNumber":50,"author":{"gitId":"tlyi"},"content":"                storageManager.saveFoodList(dataManager.getFoodItems());","lastModifiedDate":"2021-10-27"},{"lineNumber":51,"author":{"gitId":"tlyi"},"content":"            }","lastModifiedDate":"2021-10-27"},{"lineNumber":52,"author":{"gitId":"tlyi"},"content":"            if (Command.requiresFutureExerciseListStorageRewrite(command)) {","lastModifiedDate":"2021-10-27"},{"lineNumber":53,"author":{"gitId":"tlyi"},"content":"                storageManager.saveFutureExerciseList(dataManager.getFutureExerciseItems());","lastModifiedDate":"2021-10-27"},{"lineNumber":54,"author":{"gitId":"tlyi"},"content":"            }","lastModifiedDate":"2021-10-27"},{"lineNumber":55,"author":{"gitId":"tlyi"},"content":"            if (Command.requiresFoodBankStorageRewrite(command)) {","lastModifiedDate":"2021-10-27"},{"lineNumber":56,"author":{"gitId":"tlyi"},"content":"                storageManager.saveFoodBank(dataManager.getFoodBank());","lastModifiedDate":"2021-10-27"},{"lineNumber":57,"author":{"gitId":"tlyi"},"content":"            }","lastModifiedDate":"2021-10-27"},{"lineNumber":58,"author":{"gitId":"tlyi"},"content":"            if (Command.requiresExerciseBankStorageRewrite(command)) {","lastModifiedDate":"2021-10-27"},{"lineNumber":59,"author":{"gitId":"tlyi"},"content":"                storageManager.saveExerciseBank(dataManager.getExerciseBank());","lastModifiedDate":"2021-10-27"},{"lineNumber":60,"author":{"gitId":"tlyi"},"content":"            }","lastModifiedDate":"2021-10-27"},{"lineNumber":61,"author":{"gitId":"tlyi"},"content":"        } catch (UnableToWriteFileException e) {","lastModifiedDate":"2021-10-27"},{"lineNumber":62,"author":{"gitId":"tlyi"},"content":"            return new CommandResult(e.getMessage());","lastModifiedDate":"2021-10-27"},{"lineNumber":63,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":64,"author":{"gitId":"tlyi"},"content":"        return result;","lastModifiedDate":"2021-10-27"},{"lineNumber":65,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":66,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":67,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":68,"author":{"gitId":"tlyi"},"content":"}","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"weidak":1,"tlyi":67}},{"path":"src/main/java/seedu/duke/logic/Statistics.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.logic;","lastModifiedDate":"2021-11-07"},{"lineNumber":2,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"tlyi"},"content":"import seedu.duke.data.item.exercise.ExerciseList;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"tlyi"},"content":"import seedu.duke.data.item.food.FoodList;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"tlyi"},"content":"import seedu.duke.data.profile.Profile;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"tttyyzzz"},"content":"import seedu.duke.data.profile.exceptions.InvalidCharacteristicException;","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"tlyi"},"content":"import seedu.duke.data.profile.utilities.ProfileUtils;","lastModifiedDate":"2021-11-04"},{"lineNumber":8,"author":{"gitId":"tlyi"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2021-11-07"},{"lineNumber":9,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"tlyi"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"tttyyzzz"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"tlyi"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"tttyyzzz"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"tttyyzzz"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"tttyyzzz"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"tttyyzzz"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"tlyi"},"content":"/** A class that manage the statistics of the calories. */","lastModifiedDate":"2021-11-07"},{"lineNumber":19,"author":{"gitId":"tttyyzzz"},"content":"public class Statistics {","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"tttyyzzz"},"content":"    private static final String FULL_BLOCK \u003d \"█\";","lastModifiedDate":"2021-11-04"},{"lineNumber":21,"author":{"gitId":"tttyyzzz"},"content":"    private static final String LS \u003d System.lineSeparator();","lastModifiedDate":"2021-11-04"},{"lineNumber":22,"author":{"gitId":"tttyyzzz"},"content":"    private static final String MESSAGE_CALORIE_GAIN \u003d \"Your calorie gained from food is: %d\";","lastModifiedDate":"2021-11-04"},{"lineNumber":23,"author":{"gitId":"tttyyzzz"},"content":"    private static final String MESSAGE_CALORIE_LOST \u003d \"Your calorie lost from exercise is: %d\";","lastModifiedDate":"2021-11-04"},{"lineNumber":24,"author":{"gitId":"tttyyzzz"},"content":"    private static final String MESSAGE_CALORIE_NET \u003d \"Your net calorie intake is: %d\";","lastModifiedDate":"2021-11-04"},{"lineNumber":25,"author":{"gitId":"tttyyzzz"},"content":"    private static final String MESSAGE_CALORIE_GOAL \u003d \"Your calorie goal is: %d\";","lastModifiedDate":"2021-11-04"},{"lineNumber":26,"author":{"gitId":"tttyyzzz"},"content":"    private static final String MESSAGE_CALORIE_EXACT \u003d \"You have reached your calorie goal exactly. Good job!\";","lastModifiedDate":"2021-11-04"},{"lineNumber":27,"author":{"gitId":"tlyi"},"content":"    private static final String MESSAGE_CALORIE_LESS_THAN \u003d \"You are %s cal away from your goal!\";","lastModifiedDate":"2021-11-04"},{"lineNumber":28,"author":{"gitId":"tlyi"},"content":"    private static final String MESSAGE_CALORIE_MORE_THAN \u003d \"You have exceeded your calorie goal by %s cal! \";","lastModifiedDate":"2021-11-04"},{"lineNumber":29,"author":{"gitId":"tttyyzzz"},"content":"    private static final String OVERVIEW_HEADER \u003d \"-*WEEKLY OVERVIEW*-\" + LS","lastModifiedDate":"2021-11-04"},{"lineNumber":30,"author":{"gitId":"tttyyzzz"},"content":"            + \"Hi %s, this is your calorie summary for the week.\" + LS;","lastModifiedDate":"2021-11-04"},{"lineNumber":31,"author":{"gitId":"tttyyzzz"},"content":"    private static final String FOOD_HEADER \u003d \"Food:\" + LS","lastModifiedDate":"2021-11-04"},{"lineNumber":32,"author":{"gitId":"tttyyzzz"},"content":"            + \"You have consumed %1$s cal this week from %2$s to %3$s.\";","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"tttyyzzz"},"content":"    private static final String EXERCISE_HEADER \u003d \"Exercise:\" + LS","lastModifiedDate":"2021-11-04"},{"lineNumber":34,"author":{"gitId":"tttyyzzz"},"content":"            + \"You have burnt %1$s cal this week from %2$s to %3$s.\";","lastModifiedDate":"2021-10-28"},{"lineNumber":35,"author":{"gitId":"tttyyzzz"},"content":"    private static final String FOOD_GRAPH_HEADER \u003d \"Calorie gained from food (Daily)\" + LS + \"%s\";","lastModifiedDate":"2021-11-04"},{"lineNumber":36,"author":{"gitId":"tttyyzzz"},"content":"    private static final String EXERCISE_GRAPH_HEADER \u003d \"Calorie burnt from exercise (Daily)\" + LS + \"%s\";","lastModifiedDate":"2021-11-04"},{"lineNumber":37,"author":{"gitId":"tttyyzzz"},"content":"    private static final String MESSAGE_CAUTION \u003d LS + \"** Net calories \u003d Food consumed - Exercise output - \"","lastModifiedDate":"2021-11-04"},{"lineNumber":38,"author":{"gitId":"tttyyzzz"},"content":"            + \"your basal metabolic rate, where \" + LS","lastModifiedDate":"2021-11-04"},{"lineNumber":39,"author":{"gitId":"tttyyzzz"},"content":"            + \"your basal metabolic rate is a factor of your age, gender, \"","lastModifiedDate":"2021-10-28"},{"lineNumber":40,"author":{"gitId":"tttyyzzz"},"content":"            + \"height and weight retrieved from your profile.\" + LS","lastModifiedDate":"2021-11-04"},{"lineNumber":41,"author":{"gitId":"tttyyzzz"},"content":"            + \"All calculations are done in calories.\";","lastModifiedDate":"2021-10-28"},{"lineNumber":42,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":43,"author":{"gitId":"tttyyzzz"},"content":"    private static final String GRAPH_BUILDER \u003d \"%1$s   %2$s    %3$s\";","lastModifiedDate":"2021-11-04"},{"lineNumber":44,"author":{"gitId":"tttyyzzz"},"content":"    private static final int MAX_DATE_OFFSET \u003d 6;","lastModifiedDate":"2021-11-04"},{"lineNumber":45,"author":{"gitId":"tttyyzzz"},"content":"    private static final int NO_OFFSET \u003d 0;","lastModifiedDate":"2021-11-04"},{"lineNumber":46,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":47,"author":{"gitId":"tttyyzzz"},"content":"    private static final String MESSAGE_NET_CALORIES_INTRO \u003d \"Daily net calories**:\" + LS;","lastModifiedDate":"2021-11-04"},{"lineNumber":48,"author":{"gitId":"tttyyzzz"},"content":"    private static final String MESSAGE_SUPPER_COUNT_INTRO \u003d \"Number of supper meals this week: %s\";","lastModifiedDate":"2021-11-04"},{"lineNumber":49,"author":{"gitId":"tttyyzzz"},"content":"    private static final int MAX_BAR_LENGTH \u003d 30;","lastModifiedDate":"2021-11-04"},{"lineNumber":50,"author":{"gitId":"tttyyzzz"},"content":"    private static final int EMPTY_CALORIES \u003d 0;","lastModifiedDate":"2021-11-04"},{"lineNumber":51,"author":{"gitId":"tttyyzzz"},"content":"    private static final String MESSAGE_DAILY_OVERVIEW \u003d \"This is your calorie overview for today:\" + LS;","lastModifiedDate":"2021-11-04"},{"lineNumber":52,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":53,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":54,"author":{"gitId":"tttyyzzz"},"content":"    private FoodList foodItems;","lastModifiedDate":"2021-10-21"},{"lineNumber":55,"author":{"gitId":"tttyyzzz"},"content":"    private ExerciseList exerciseItems;","lastModifiedDate":"2021-10-21"},{"lineNumber":56,"author":{"gitId":"tttyyzzz"},"content":"    private Profile profile;","lastModifiedDate":"2021-10-21"},{"lineNumber":57,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":58,"author":{"gitId":"tttyyzzz"},"content":"    public Statistics(FoodList foodItems, ExerciseList exerciseItems, Profile profile) {","lastModifiedDate":"2021-10-21"},{"lineNumber":59,"author":{"gitId":"tttyyzzz"},"content":"        this.foodItems \u003d foodItems;","lastModifiedDate":"2021-10-21"},{"lineNumber":60,"author":{"gitId":"tttyyzzz"},"content":"        this.exerciseItems \u003d exerciseItems;","lastModifiedDate":"2021-10-21"},{"lineNumber":61,"author":{"gitId":"tttyyzzz"},"content":"        this.profile \u003d profile;","lastModifiedDate":"2021-10-21"},{"lineNumber":62,"author":{"gitId":"tttyyzzz"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":63,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":64,"author":{"gitId":"tttyyzzz"},"content":"    private static Logger logger \u003d Logger.getLogger(Statistics.class.getName());","lastModifiedDate":"2021-10-13"},{"lineNumber":65,"author":{"gitId":"tttyyzzz"},"content":"    private LocalDate date;","lastModifiedDate":"2021-10-26"},{"lineNumber":66,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":67,"author":{"gitId":"tttyyzzz"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":68,"author":{"gitId":"tttyyzzz"},"content":"     * Calculate netCalories and format exerciseCalories, foodCalories, calorieGoal","lastModifiedDate":"2021-10-13"},{"lineNumber":69,"author":{"gitId":"tttyyzzz"},"content":"     * into strings.","lastModifiedDate":"2021-10-13"},{"lineNumber":70,"author":{"gitId":"tttyyzzz"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":71,"author":{"gitId":"tttyyzzz"},"content":"     * @param exerciseCalories is the total calories lost by exercising","lastModifiedDate":"2021-10-13"},{"lineNumber":72,"author":{"gitId":"tttyyzzz"},"content":"     * @param foodCalories     is the total calories gained by consuming food","lastModifiedDate":"2021-10-13"},{"lineNumber":73,"author":{"gitId":"tttyyzzz"},"content":"     * @param calorieGoal      is the goal set by the user","lastModifiedDate":"2021-10-13"},{"lineNumber":74,"author":{"gitId":"tttyyzzz"},"content":"     * @return formatted strings.","lastModifiedDate":"2021-10-13"},{"lineNumber":75,"author":{"gitId":"tttyyzzz"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":76,"author":{"gitId":"tttyyzzz"},"content":"    String[] getCaloriesReport(int exerciseCalories, int foodCalories, int calorieGoal) {","lastModifiedDate":"2021-11-08"},{"lineNumber":77,"author":{"gitId":"tttyyzzz"},"content":"        int netCalories \u003d calculateNetCalories(foodCalories, exerciseCalories);","lastModifiedDate":"2021-10-26"},{"lineNumber":78,"author":{"gitId":"tttyyzzz"},"content":"        return new String[]{String.format(MESSAGE_CALORIE_GAIN, foodCalories),","lastModifiedDate":"2021-10-13"},{"lineNumber":79,"author":{"gitId":"tttyyzzz"},"content":"                String.format(MESSAGE_CALORIE_LOST, exerciseCalories),","lastModifiedDate":"2021-10-13"},{"lineNumber":80,"author":{"gitId":"tttyyzzz"},"content":"                String.format(MESSAGE_CALORIE_NET, netCalories),","lastModifiedDate":"2021-10-13"},{"lineNumber":81,"author":{"gitId":"tryyang2001"},"content":"                String.format(MESSAGE_CALORIE_GOAL, calorieGoal),","lastModifiedDate":"2021-10-14"},{"lineNumber":82,"author":{"gitId":"tttyyzzz"},"content":"                printCaloriesMessage(netCalories, calorieGoal)};","lastModifiedDate":"2021-10-13"},{"lineNumber":83,"author":{"gitId":"tttyyzzz"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":84,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":85,"author":{"gitId":"tttyyzzz"},"content":"    private int calculateNetCalories(int foodCalories, int exerciseCalories) {","lastModifiedDate":"2021-10-26"},{"lineNumber":86,"author":{"gitId":"tttyyzzz"},"content":"        try {","lastModifiedDate":"2021-10-26"},{"lineNumber":87,"author":{"gitId":"weidak"},"content":"            return ProfileUtils.calculateNetCalories(foodCalories, exerciseCalories, this.profile);","lastModifiedDate":"2021-10-30"},{"lineNumber":88,"author":{"gitId":"tttyyzzz"},"content":"        } catch (InvalidCharacteristicException e) {","lastModifiedDate":"2021-10-26"},{"lineNumber":89,"author":{"gitId":"tttyyzzz"},"content":"            return 0;","lastModifiedDate":"2021-10-26"},{"lineNumber":90,"author":{"gitId":"tttyyzzz"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":91,"author":{"gitId":"tttyyzzz"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":92,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":93,"author":{"gitId":"tttyyzzz"},"content":"    private String getCurrentDayOverview() {","lastModifiedDate":"2021-11-08"},{"lineNumber":94,"author":{"gitId":"tttyyzzz"},"content":"        int foodCalories \u003d foodItems.getTotalCaloriesWithDate(date);","lastModifiedDate":"2021-10-26"},{"lineNumber":95,"author":{"gitId":"tttyyzzz"},"content":"        int exerciseCalories \u003d exerciseItems.getTotalCaloriesWithDate(date);","lastModifiedDate":"2021-10-26"},{"lineNumber":96,"author":{"gitId":"tttyyzzz"},"content":"        int calorieGoal \u003d profile.getProfileCalorieGoal().getCalorieGoal();","lastModifiedDate":"2021-10-26"},{"lineNumber":97,"author":{"gitId":"tttyyzzz"},"content":"        logger.log(Level.FINE, String.valueOf(calorieGoal));","lastModifiedDate":"2021-10-26"},{"lineNumber":98,"author":{"gitId":"tttyyzzz"},"content":"        String[] messages \u003d getCaloriesReport(exerciseCalories, foodCalories, calorieGoal);","lastModifiedDate":"2021-10-27"},{"lineNumber":99,"author":{"gitId":"tttyyzzz"},"content":"        StringBuilder currentDayOverview \u003d new StringBuilder(MESSAGE_DAILY_OVERVIEW);","lastModifiedDate":"2021-10-26"},{"lineNumber":100,"author":{"gitId":"tttyyzzz"},"content":"        for (String message : messages) {","lastModifiedDate":"2021-10-26"},{"lineNumber":101,"author":{"gitId":"tttyyzzz"},"content":"            currentDayOverview.append(message).append(Ui.LS);","lastModifiedDate":"2021-10-26"},{"lineNumber":102,"author":{"gitId":"tttyyzzz"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":103,"author":{"gitId":"tttyyzzz"},"content":"        return currentDayOverview.toString().trim();","lastModifiedDate":"2021-10-26"},{"lineNumber":104,"author":{"gitId":"tttyyzzz"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":105,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":106,"author":{"gitId":"tttyyzzz"},"content":"    public String printCaloriesMessage(int netCalories, int calorieGoal) {","lastModifiedDate":"2021-10-13"},{"lineNumber":107,"author":{"gitId":"tttyyzzz"},"content":"        logger.log(Level.FINE, \"preparing calories message\");","lastModifiedDate":"2021-10-13"},{"lineNumber":108,"author":{"gitId":"tttyyzzz"},"content":"        int calorieDifference \u003d calorieGoal - netCalories;","lastModifiedDate":"2021-10-13"},{"lineNumber":109,"author":{"gitId":"tttyyzzz"},"content":"        String message;","lastModifiedDate":"2021-10-13"},{"lineNumber":110,"author":{"gitId":"tttyyzzz"},"content":"        if (calorieGoal \u003e netCalories) {","lastModifiedDate":"2021-10-13"},{"lineNumber":111,"author":{"gitId":"tryyang2001"},"content":"            message \u003d String.format(MESSAGE_CALORIE_LESS_THAN, calorieDifference);","lastModifiedDate":"2021-10-14"},{"lineNumber":112,"author":{"gitId":"tttyyzzz"},"content":"        } else if (calorieGoal \u003c netCalories) {","lastModifiedDate":"2021-10-13"},{"lineNumber":113,"author":{"gitId":"tryyang2001"},"content":"            message \u003d String.format(MESSAGE_CALORIE_MORE_THAN, -calorieDifference);","lastModifiedDate":"2021-10-14"},{"lineNumber":114,"author":{"gitId":"tttyyzzz"},"content":"        } else {","lastModifiedDate":"2021-10-13"},{"lineNumber":115,"author":{"gitId":"tttyyzzz"},"content":"            assert calorieDifference \u003d\u003d 0 : \"calorieDifference should be 0\";","lastModifiedDate":"2021-10-13"},{"lineNumber":116,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":117,"author":{"gitId":"tttyyzzz"},"content":"            message \u003d MESSAGE_CALORIE_EXACT;","lastModifiedDate":"2021-11-08"},{"lineNumber":118,"author":{"gitId":"tttyyzzz"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":119,"author":{"gitId":"tttyyzzz"},"content":"        return message;","lastModifiedDate":"2021-10-13"},{"lineNumber":120,"author":{"gitId":"tttyyzzz"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":121,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":122,"author":{"gitId":"tttyyzzz"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":123,"author":{"gitId":"tttyyzzz"},"content":"     * Set the date to current date.","lastModifiedDate":"2021-10-21"},{"lineNumber":124,"author":{"gitId":"tttyyzzz"},"content":"     * Date to be updated upon calling the overview command.","lastModifiedDate":"2021-10-21"},{"lineNumber":125,"author":{"gitId":"tttyyzzz"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":126,"author":{"gitId":"tttyyzzz"},"content":"    private void setLocalDate() {","lastModifiedDate":"2021-10-21"},{"lineNumber":127,"author":{"gitId":"tttyyzzz"},"content":"        date \u003d LocalDateTime.now().toLocalDate();","lastModifiedDate":"2021-10-21"},{"lineNumber":128,"author":{"gitId":"tttyyzzz"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":129,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":130,"author":{"gitId":"tttyyzzz"},"content":"    private LocalDate dateOffset(int offset) {","lastModifiedDate":"2021-10-21"},{"lineNumber":131,"author":{"gitId":"tttyyzzz"},"content":"        return date.minusDays(offset);","lastModifiedDate":"2021-10-21"},{"lineNumber":132,"author":{"gitId":"tttyyzzz"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":133,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":134,"author":{"gitId":"tttyyzzz"},"content":"    private ArrayList\u003cInteger\u003e getDailyFoodCalories() {","lastModifiedDate":"2021-10-21"},{"lineNumber":135,"author":{"gitId":"tttyyzzz"},"content":"        ArrayList\u003cInteger\u003e dailyFoodCalories \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-21"},{"lineNumber":136,"author":{"gitId":"tttyyzzz"},"content":"        for (int i \u003d MAX_DATE_OFFSET; i \u003e\u003d NO_OFFSET; i--) {","lastModifiedDate":"2021-11-04"},{"lineNumber":137,"author":{"gitId":"tttyyzzz"},"content":"            dailyFoodCalories.add(foodItems.getTotalCaloriesWithDate(date.minusDays(i)));","lastModifiedDate":"2021-11-04"},{"lineNumber":138,"author":{"gitId":"tttyyzzz"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":139,"author":{"gitId":"tttyyzzz"},"content":"        return dailyFoodCalories;","lastModifiedDate":"2021-10-21"},{"lineNumber":140,"author":{"gitId":"tttyyzzz"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":141,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":142,"author":{"gitId":"tttyyzzz"},"content":"    private String getGraph(ArrayList\u003cInteger\u003e dailyCalories) {","lastModifiedDate":"2021-10-21"},{"lineNumber":143,"author":{"gitId":"tttyyzzz"},"content":"        int maxCalories \u003d Collections.max(dailyCalories);","lastModifiedDate":"2021-10-21"},{"lineNumber":144,"author":{"gitId":"tttyyzzz"},"content":"        StringBuilder graph \u003d new StringBuilder();","lastModifiedDate":"2021-10-21"},{"lineNumber":145,"author":{"gitId":"tttyyzzz"},"content":"        int dateOffset \u003d MAX_DATE_OFFSET;","lastModifiedDate":"2021-10-21"},{"lineNumber":146,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":147,"author":{"gitId":"tttyyzzz"},"content":"        for (int calories : dailyCalories) {","lastModifiedDate":"2021-10-21"},{"lineNumber":148,"author":{"gitId":"tttyyzzz"},"content":"            String progressBar \u003d \"\";","lastModifiedDate":"2021-10-21"},{"lineNumber":149,"author":{"gitId":"tttyyzzz"},"content":"            int numberOfBars;","lastModifiedDate":"2021-10-26"},{"lineNumber":150,"author":{"gitId":"tttyyzzz"},"content":"            numberOfBars \u003d (int)(((double) calories / maxCalories) * MAX_BAR_LENGTH);","lastModifiedDate":"2021-11-08"},{"lineNumber":151,"author":{"gitId":"tttyyzzz"},"content":"            assert numberOfBars \u003c\u003d MAX_BAR_LENGTH : \"30 is the max progress bar limit\";","lastModifiedDate":"2021-10-26"},{"lineNumber":152,"author":{"gitId":"tttyyzzz"},"content":"            for (int i \u003d NO_OFFSET; i \u003c numberOfBars; i++) {","lastModifiedDate":"2021-11-04"},{"lineNumber":153,"author":{"gitId":"tttyyzzz"},"content":"                progressBar \u003d progressBar + FULL_BLOCK;","lastModifiedDate":"2021-10-21"},{"lineNumber":154,"author":{"gitId":"tttyyzzz"},"content":"            }","lastModifiedDate":"2021-10-21"},{"lineNumber":155,"author":{"gitId":"tttyyzzz"},"content":"            logger.log(Level.FINE, String.valueOf(numberOfBars));","lastModifiedDate":"2021-11-08"},{"lineNumber":156,"author":{"gitId":"tttyyzzz"},"content":"            String formattedDate \u003d getFormatDate(dateOffset);","lastModifiedDate":"2021-10-21"},{"lineNumber":157,"author":{"gitId":"tttyyzzz"},"content":"            graph.append(String.format(GRAPH_BUILDER, formattedDate, progressBar, calories)).append(Ui.LS);","lastModifiedDate":"2021-10-21"},{"lineNumber":158,"author":{"gitId":"tttyyzzz"},"content":"            dateOffset--;","lastModifiedDate":"2021-10-21"},{"lineNumber":159,"author":{"gitId":"tttyyzzz"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":160,"author":{"gitId":"tttyyzzz"},"content":"        return graph.toString();","lastModifiedDate":"2021-10-26"},{"lineNumber":161,"author":{"gitId":"tttyyzzz"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":162,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":163,"author":{"gitId":"tttyyzzz"},"content":"    private String getFormatDate(int dateOffset) {","lastModifiedDate":"2021-10-21"},{"lineNumber":164,"author":{"gitId":"tttyyzzz"},"content":"        String formattedDate \u003d dateOffset(dateOffset).format(DateTimeFormatter.ofPattern(\"dd-MMM\"));","lastModifiedDate":"2021-10-21"},{"lineNumber":165,"author":{"gitId":"tttyyzzz"},"content":"        return formattedDate;","lastModifiedDate":"2021-10-21"},{"lineNumber":166,"author":{"gitId":"tttyyzzz"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":167,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":168,"author":{"gitId":"tttyyzzz"},"content":"    private ArrayList\u003cInteger\u003e getDailyExerciseCalories() {","lastModifiedDate":"2021-10-21"},{"lineNumber":169,"author":{"gitId":"tttyyzzz"},"content":"        ArrayList\u003cInteger\u003e dailyExerciseCalories \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-21"},{"lineNumber":170,"author":{"gitId":"tttyyzzz"},"content":"        for (int i \u003d MAX_DATE_OFFSET; i \u003e\u003d NO_OFFSET; i--) {","lastModifiedDate":"2021-11-04"},{"lineNumber":171,"author":{"gitId":"tttyyzzz"},"content":"            dailyExerciseCalories.add(exerciseItems.getTotalCaloriesWithDate(date.minusDays(i)));","lastModifiedDate":"2021-11-04"},{"lineNumber":172,"author":{"gitId":"tttyyzzz"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":173,"author":{"gitId":"tttyyzzz"},"content":"        return dailyExerciseCalories;","lastModifiedDate":"2021-10-21"},{"lineNumber":174,"author":{"gitId":"tttyyzzz"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":175,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":176,"author":{"gitId":"tttyyzzz"},"content":"    private int getTotalWeeklyCalories(ArrayList\u003cInteger\u003e getCalories) {","lastModifiedDate":"2021-10-21"},{"lineNumber":177,"author":{"gitId":"tttyyzzz"},"content":"        return getCalories.stream().mapToInt(i -\u003e i).sum();","lastModifiedDate":"2021-10-21"},{"lineNumber":178,"author":{"gitId":"tttyyzzz"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":179,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":180,"author":{"gitId":"tttyyzzz"},"content":"    private String getSupperCountMessage() {","lastModifiedDate":"2021-10-26"},{"lineNumber":181,"author":{"gitId":"tttyyzzz"},"content":"        int supperCount \u003d foodItems.getSupperCount();","lastModifiedDate":"2021-10-26"},{"lineNumber":182,"author":{"gitId":"tttyyzzz"},"content":"        return String.format(MESSAGE_SUPPER_COUNT_INTRO, supperCount);","lastModifiedDate":"2021-10-26"},{"lineNumber":183,"author":{"gitId":"tttyyzzz"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":184,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":185,"author":{"gitId":"tttyyzzz"},"content":"    private String getNetCaloriesMessage() {","lastModifiedDate":"2021-10-26"},{"lineNumber":186,"author":{"gitId":"tttyyzzz"},"content":"        ArrayList\u003cInteger\u003e dailyExerciseCalories \u003d getDailyExerciseCalories();","lastModifiedDate":"2021-10-26"},{"lineNumber":187,"author":{"gitId":"tttyyzzz"},"content":"        ArrayList\u003cInteger\u003e dailyFoodCalories \u003d getDailyFoodCalories();","lastModifiedDate":"2021-10-26"},{"lineNumber":188,"author":{"gitId":"tttyyzzz"},"content":"        StringBuilder netCaloriesMessage \u003d new StringBuilder(MESSAGE_NET_CALORIES_INTRO);","lastModifiedDate":"2021-10-26"},{"lineNumber":189,"author":{"gitId":"tttyyzzz"},"content":"        for (int i \u003d 0; i \u003c\u003d MAX_DATE_OFFSET; i++) {","lastModifiedDate":"2021-10-26"},{"lineNumber":190,"author":{"gitId":"tttyyzzz"},"content":"            int exerciseCalories \u003d dailyExerciseCalories.get(i) \u003d\u003d null ? EMPTY_CALORIES : dailyExerciseCalories.get(i);","lastModifiedDate":"2021-11-04"},{"lineNumber":191,"author":{"gitId":"tttyyzzz"},"content":"            int foodCalories \u003d dailyFoodCalories.get(i) \u003d\u003d null ? EMPTY_CALORIES : dailyFoodCalories.get(i);","lastModifiedDate":"2021-11-04"},{"lineNumber":192,"author":{"gitId":"tttyyzzz"},"content":"            int netCalories \u003d getNetCalories(foodCalories, exerciseCalories);","lastModifiedDate":"2021-10-26"},{"lineNumber":193,"author":{"gitId":"tttyyzzz"},"content":"            String formattedDate \u003d getFormatDate(MAX_DATE_OFFSET - i);","lastModifiedDate":"2021-10-26"},{"lineNumber":194,"author":{"gitId":"tttyyzzz"},"content":"            netCaloriesMessage.append(formattedDate + \" :   \" + netCalories).append(Ui.LS);","lastModifiedDate":"2021-10-26"},{"lineNumber":195,"author":{"gitId":"tttyyzzz"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":196,"author":{"gitId":"tttyyzzz"},"content":"        return netCaloriesMessage.toString();","lastModifiedDate":"2021-10-26"},{"lineNumber":197,"author":{"gitId":"tttyyzzz"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":198,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":199,"author":{"gitId":"tttyyzzz"},"content":"    private int getNetCalories(int foodCalories, int exerciseCalories) {","lastModifiedDate":"2021-10-26"},{"lineNumber":200,"author":{"gitId":"tttyyzzz"},"content":"        try {","lastModifiedDate":"2021-10-26"},{"lineNumber":201,"author":{"gitId":"weidak"},"content":"            return ProfileUtils.calculateNetCalories(foodCalories, exerciseCalories, profile);","lastModifiedDate":"2021-10-30"},{"lineNumber":202,"author":{"gitId":"tttyyzzz"},"content":"        } catch (InvalidCharacteristicException e) {","lastModifiedDate":"2021-10-26"},{"lineNumber":203,"author":{"gitId":"tttyyzzz"},"content":"            return EMPTY_CALORIES;","lastModifiedDate":"2021-10-26"},{"lineNumber":204,"author":{"gitId":"tttyyzzz"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":205,"author":{"gitId":"tttyyzzz"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":206,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":207,"author":{"gitId":"tttyyzzz"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":208,"author":{"gitId":"tttyyzzz"},"content":"     * An overview on user calorie intake and calorie burnt.","lastModifiedDate":"2021-10-21"},{"lineNumber":209,"author":{"gitId":"tttyyzzz"},"content":"     *","lastModifiedDate":"2021-10-21"},{"lineNumber":210,"author":{"gitId":"tttyyzzz"},"content":"     * @return String that contains summary of calories for the week.","lastModifiedDate":"2021-10-21"},{"lineNumber":211,"author":{"gitId":"tttyyzzz"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":212,"author":{"gitId":"tttyyzzz"},"content":"    public String overviewSummary() {","lastModifiedDate":"2021-10-21"},{"lineNumber":213,"author":{"gitId":"tttyyzzz"},"content":"        setLocalDate(); // need ensure that the date is on the time of query","lastModifiedDate":"2021-10-21"},{"lineNumber":214,"author":{"gitId":"tttyyzzz"},"content":"        logger.log(Level.FINE, String.valueOf(date));","lastModifiedDate":"2021-11-08"},{"lineNumber":215,"author":{"gitId":"tttyyzzz"},"content":"        StringBuilder overviewSummary \u003d new StringBuilder();","lastModifiedDate":"2021-10-21"},{"lineNumber":216,"author":{"gitId":"tttyyzzz"},"content":"        overviewSummary.append(String.format(OVERVIEW_HEADER, profile.getProfileName().getName())).append(Ui.LS)","lastModifiedDate":"2021-10-21"},{"lineNumber":217,"author":{"gitId":"tttyyzzz"},"content":"                .append(String.format(FOOD_HEADER, getTotalWeeklyCalories(getDailyFoodCalories()),","lastModifiedDate":"2021-10-21"},{"lineNumber":218,"author":{"gitId":"tttyyzzz"},"content":"                        getFormatDate(MAX_DATE_OFFSET), getFormatDate(NO_OFFSET))).append(Ui.LS)","lastModifiedDate":"2021-11-04"},{"lineNumber":219,"author":{"gitId":"tttyyzzz"},"content":"                .append(String.format(FOOD_GRAPH_HEADER, getGraph(getDailyFoodCalories()))).append(Ui.LS)","lastModifiedDate":"2021-10-28"},{"lineNumber":220,"author":{"gitId":"tttyyzzz"},"content":"                .append(String.format(EXERCISE_HEADER, getTotalWeeklyCalories(getDailyExerciseCalories()),","lastModifiedDate":"2021-10-28"},{"lineNumber":221,"author":{"gitId":"tttyyzzz"},"content":"                        getFormatDate(MAX_DATE_OFFSET), getFormatDate(NO_OFFSET))).append(Ui.LS)","lastModifiedDate":"2021-11-04"},{"lineNumber":222,"author":{"gitId":"tttyyzzz"},"content":"                .append(String.format(EXERCISE_GRAPH_HEADER, getGraph(getDailyExerciseCalories()))).append(Ui.LS)","lastModifiedDate":"2021-10-28"},{"lineNumber":223,"author":{"gitId":"tttyyzzz"},"content":"                .append(getNetCaloriesMessage()).append(Ui.LS)","lastModifiedDate":"2021-10-28"},{"lineNumber":224,"author":{"gitId":"tttyyzzz"},"content":"                .append(getSupperCountMessage()).append(Ui.LS)","lastModifiedDate":"2021-10-26"},{"lineNumber":225,"author":{"gitId":"tttyyzzz"},"content":"                .append(MESSAGE_CAUTION).append(Ui.LS)","lastModifiedDate":"2021-10-26"},{"lineNumber":226,"author":{"gitId":"tttyyzzz"},"content":"                .append(Ui.DIVIDER).append(Ui.LS)","lastModifiedDate":"2021-10-26"},{"lineNumber":227,"author":{"gitId":"tttyyzzz"},"content":"                .append(getCurrentDayOverview());","lastModifiedDate":"2021-10-26"},{"lineNumber":228,"author":{"gitId":"tttyyzzz"},"content":"        return overviewSummary.toString().trim();","lastModifiedDate":"2021-10-26"},{"lineNumber":229,"author":{"gitId":"tttyyzzz"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":230,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":231,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":232,"author":{"gitId":"tttyyzzz"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"weidak":2,"tttyyzzz":216,"tryyang2001":3,"tlyi":11}},{"path":"src/main/java/seedu/duke/logic/commands/AddExerciseBankCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.logic.commands;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"tryyang2001"},"content":"import seedu.duke.data.item.Item;","lastModifiedDate":"2021-11-04"},{"lineNumber":4,"author":{"gitId":"tlyi"},"content":"import seedu.duke.data.item.exceptions.DuplicateItemInBankException;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"tlyi"},"content":"import seedu.duke.data.item.exercise.Exercise;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"tlyi"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"tlyi"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"tlyi"},"content":"/**","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"tlyi"},"content":" * Represents the command that when executed, adds an Exercise item to the ExerciseBank.","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"tlyi"},"content":" */","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"tlyi"},"content":"public class AddExerciseBankCommand extends Command {","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"An exercise item has been added to the exercise bank:\"","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"tlyi"},"content":"            + CommandMessages.INDENTED_LS + \"%s\";","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"tlyi"},"content":"    public static final String[] EXPECTED_PREFIXES \u003d {","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"tlyi"},"content":"            COMMAND_PREFIX_EXERCISE_BANK,","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"tlyi"},"content":"            COMMAND_PREFIX_CALORIES","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"tlyi"},"content":"    };","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"tlyi"},"content":"    private static Logger logger \u003d Logger.getLogger(AddExerciseBankCommand.class.getName());","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"tlyi"},"content":"    private Exercise exercise;","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"tlyi"},"content":"    public AddExerciseBankCommand(String description, int calories) {","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"tlyi"},"content":"        this.exercise \u003d new Exercise(description, calories);","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"tlyi"},"content":"    @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"tlyi"},"content":"    public CommandResult execute() {","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"tryyang2001"},"content":"        if (!exercise.isValid()) {","lastModifiedDate":"2021-11-04"},{"lineNumber":32,"author":{"gitId":"tlyi"},"content":"            logger.log(Level.FINE, \"Exercise calorie is invalid\");","lastModifiedDate":"2021-11-08"},{"lineNumber":33,"author":{"gitId":"tryyang2001"},"content":"            return new CommandResult(CommandMessages.MESSAGE_INVALID_CALORIES);","lastModifiedDate":"2021-11-04"},{"lineNumber":34,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"tlyi"},"content":"        assert exercise.getCalories() \u003e 0 : \"Exercise calorie is valid\";","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"tlyi"},"content":"        try {","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"tlyi"},"content":"            super.exerciseBank.addItem(this.exercise);","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"tlyi"},"content":"            logger.log(Level.FINE, \"Exercise is successfully added to exercise bank\");","lastModifiedDate":"2021-11-08"},{"lineNumber":39,"author":{"gitId":"tlyi"},"content":"            return new CommandResult(String.format(MESSAGE_SUCCESS, this.exercise));","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"tlyi"},"content":"        } catch (DuplicateItemInBankException e) {","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"tlyi"},"content":"            return new CommandResult(String.format(","lastModifiedDate":"2021-10-28"},{"lineNumber":42,"author":{"gitId":"tlyi"},"content":"                    CommandMessages.MESSAGE_EXERCISE_ALREADY_EXISTS_IN_BANK, this.exercise.getName()));","lastModifiedDate":"2021-10-28"},{"lineNumber":43,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":44,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":45,"author":{"gitId":"tlyi"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"tryyang2001":3,"tlyi":42}},{"path":"src/main/java/seedu/duke/logic/commands/AddExerciseCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.logic.commands;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"tryyang2001"},"content":"import seedu.duke.data.item.Item;","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"tlyi"},"content":"import seedu.duke.data.item.exceptions.ItemNotFoundInBankException;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"tlyi"},"content":"import seedu.duke.data.item.exercise.Exercise;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"tlyi"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"xingjie99"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"xingjie99"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"tlyi"},"content":"/**","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"tlyi"},"content":" * Represents the command that when executed, adds an Exercise item to the ExerciseList.","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"tlyi"},"content":" */","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"tlyi"},"content":"public class AddExerciseCommand extends Command {","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"An exercise item has been added:\"","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"tlyi"},"content":"            + CommandMessages.INDENTED_LS + \"%s\";","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"tlyi"},"content":"    public static final String[] EXPECTED_PREFIXES \u003d {","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"tlyi"},"content":"            COMMAND_PREFIX_EXERCISE,","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"tlyi"},"content":"            COMMAND_PREFIX_CALORIES,","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"tlyi"},"content":"            COMMAND_PREFIX_DATE","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"tlyi"},"content":"    };","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"tttyyzzz"},"content":"    private static Logger logger \u003d Logger.getLogger(AddExerciseCommand.class.getName());","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"tlyi"},"content":"    private final String description;","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"tlyi"},"content":"    private Integer calories;","lastModifiedDate":"2021-10-30"},{"lineNumber":29,"author":{"gitId":"tlyi"},"content":"    private final LocalDate date;","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":31,"author":{"gitId":"tlyi"},"content":"    public AddExerciseCommand(String description, Integer calories, LocalDate date) {","lastModifiedDate":"2021-10-30"},{"lineNumber":32,"author":{"gitId":"tlyi"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"tlyi"},"content":"        this.calories \u003d calories;","lastModifiedDate":"2021-10-10"},{"lineNumber":34,"author":{"gitId":"tlyi"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":36,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":37,"author":{"gitId":"tlyi"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":38,"author":{"gitId":"tlyi"},"content":"    public CommandResult execute() {","lastModifiedDate":"2021-10-10"},{"lineNumber":39,"author":{"gitId":"tlyi"},"content":"        final Exercise exercise;","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":41,"author":{"gitId":"tlyi"},"content":"        if (calories \u003d\u003d null) {","lastModifiedDate":"2021-10-30"},{"lineNumber":42,"author":{"gitId":"tlyi"},"content":"            try {","lastModifiedDate":"2021-10-19"},{"lineNumber":43,"author":{"gitId":"tryyang2001"},"content":"                this.calories \u003d super.exerciseBank.findCalorie(this.description);","lastModifiedDate":"2021-10-28"},{"lineNumber":44,"author":{"gitId":"tlyi"},"content":"            } catch (ItemNotFoundInBankException e) {","lastModifiedDate":"2021-10-19"},{"lineNumber":45,"author":{"gitId":"tlyi"},"content":"                return new CommandResult(String.format(","lastModifiedDate":"2021-10-27"},{"lineNumber":46,"author":{"gitId":"tlyi"},"content":"                        CommandMessages.MESSAGE_INVALID_EXERCISE_NOT_IN_BANK, this.description));","lastModifiedDate":"2021-10-27"},{"lineNumber":47,"author":{"gitId":"tlyi"},"content":"            }","lastModifiedDate":"2021-10-19"},{"lineNumber":48,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":49,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":50,"author":{"gitId":"tlyi"},"content":"        exercise \u003d new Exercise(this.description, this.calories, this.date);","lastModifiedDate":"2021-10-27"},{"lineNumber":51,"author":{"gitId":"tryyang2001"},"content":"        if (!exercise.isValid()) {","lastModifiedDate":"2021-11-04"},{"lineNumber":52,"author":{"gitId":"tlyi"},"content":"            logger.log(Level.FINE, \"Detected impossible calorie burnt for the exercise.\");","lastModifiedDate":"2021-11-08"},{"lineNumber":53,"author":{"gitId":"tryyang2001"},"content":"            return new CommandResult(CommandMessages.MESSAGE_INVALID_CALORIES);","lastModifiedDate":"2021-11-04"},{"lineNumber":54,"author":{"gitId":"tryyang2001"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":55,"author":{"gitId":"xingjie99"},"content":"        assert exercise.getCalories() \u003e 0 : \"Exercise calorie is valid\";","lastModifiedDate":"2021-10-13"},{"lineNumber":56,"author":{"gitId":"tryyang2001"},"content":"        super.exerciseItems.addItem(exercise);","lastModifiedDate":"2021-10-20"},{"lineNumber":57,"author":{"gitId":"tlyi"},"content":"        logger.log(Level.FINE, \"Exercise is successfully added\");","lastModifiedDate":"2021-11-08"},{"lineNumber":58,"author":{"gitId":"tryyang2001"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, exercise.toStringWithDate()));","lastModifiedDate":"2021-10-27"},{"lineNumber":59,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":60,"author":{"gitId":"tlyi"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"tttyyzzz":2,"tryyang2001":7,"xingjie99":4,"tlyi":47}},{"path":"src/main/java/seedu/duke/logic/commands/AddFoodBankCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.logic.commands;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"tryyang2001"},"content":"import seedu.duke.data.item.Item;","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"tlyi"},"content":"import seedu.duke.data.item.exceptions.DuplicateItemInBankException;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"tlyi"},"content":"import seedu.duke.data.item.food.Food;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"tlyi"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"tlyi"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"tlyi"},"content":"/**","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"tlyi"},"content":" * Represents the command that when executed, adds a Food item to the FoodBank.","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"tlyi"},"content":" */","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"tlyi"},"content":"public class AddFoodBankCommand extends Command {","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"A food item has been added to the food bank:\"","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"tlyi"},"content":"            + CommandMessages.INDENTED_LS + \"%s\";","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"tlyi"},"content":"    public static final String[] EXPECTED_PREFIXES \u003d {","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"tlyi"},"content":"            COMMAND_PREFIX_FOOD_BANK,","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"tlyi"},"content":"            COMMAND_PREFIX_CALORIES","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"tlyi"},"content":"    };","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"tlyi"},"content":"    private static Logger logger \u003d Logger.getLogger(AddFoodBankCommand.class.getName());","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"tlyi"},"content":"    private Food food;","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"tlyi"},"content":"    public AddFoodBankCommand(String description, int calories) {","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"tlyi"},"content":"        this.food \u003d new Food(description, calories);","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"tlyi"},"content":"    @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"tlyi"},"content":"    public CommandResult execute() {","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"tryyang2001"},"content":"        if (!food.isValid()) {","lastModifiedDate":"2021-11-04"},{"lineNumber":33,"author":{"gitId":"tlyi"},"content":"            logger.log(Level.FINE, \"Food calorie is invalid\");","lastModifiedDate":"2021-11-08"},{"lineNumber":34,"author":{"gitId":"tryyang2001"},"content":"            return new CommandResult(CommandMessages.MESSAGE_INVALID_CALORIES);","lastModifiedDate":"2021-11-04"},{"lineNumber":35,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"tryyang2001"},"content":"        assert food.getCalories() \u003e 0 : \"Food calorie is valid\";","lastModifiedDate":"2021-11-04"},{"lineNumber":37,"author":{"gitId":"tlyi"},"content":"        try {","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"tlyi"},"content":"            super.foodBank.addItem(this.food);","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"tlyi"},"content":"            logger.log(Level.FINE, \"Food is successfully added to food bank\");","lastModifiedDate":"2021-11-08"},{"lineNumber":40,"author":{"gitId":"tryyang2001"},"content":"            return new CommandResult(String.format(MESSAGE_SUCCESS, this.food.toStringWithoutDateAndTime()));","lastModifiedDate":"2021-10-28"},{"lineNumber":41,"author":{"gitId":"tlyi"},"content":"        } catch (DuplicateItemInBankException e) {","lastModifiedDate":"2021-10-20"},{"lineNumber":42,"author":{"gitId":"tlyi"},"content":"            return new CommandResult(String.format(CommandMessages.MESSAGE_FOOD_ALREADY_EXISTS_IN_BANK,","lastModifiedDate":"2021-10-28"},{"lineNumber":43,"author":{"gitId":"tlyi"},"content":"                    this.food.getName()));","lastModifiedDate":"2021-10-28"},{"lineNumber":44,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":45,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":46,"author":{"gitId":"tlyi"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"tryyang2001":5,"tlyi":41}},{"path":"src/main/java/seedu/duke/logic/commands/AddFoodCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.logic.commands;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"tlyi"},"content":"import seedu.duke.data.item.exceptions.ItemNotFoundInBankException;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"tlyi"},"content":"import seedu.duke.data.item.food.Food;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"tlyi"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"tryyang2001"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-10-14"},{"lineNumber":8,"author":{"gitId":"tryyang2001"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-14"},{"lineNumber":9,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":10,"author":{"gitId":"tlyi"},"content":"/**","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"tlyi"},"content":" * Represents the command that when executed, adds a Food item to the FoodList.","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"tlyi"},"content":" */","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"tlyi"},"content":"public class AddFoodCommand extends Command {","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"A food item has been added:\"","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"tlyi"},"content":"            + CommandMessages.INDENTED_LS + \"%s\";","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"tlyi"},"content":"    public static final String[] EXPECTED_PREFIXES \u003d {","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"tlyi"},"content":"            COMMAND_PREFIX_FOOD,","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"tlyi"},"content":"            COMMAND_PREFIX_CALORIES,","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"tlyi"},"content":"            COMMAND_PREFIX_DATE,","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"tlyi"},"content":"            COMMAND_PREFIX_TIME","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"tlyi"},"content":"    };","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"tryyang2001"},"content":"    private Logger logger \u003d Logger.getLogger(AddFoodCommand.class.getName());","lastModifiedDate":"2021-10-14"},{"lineNumber":25,"author":{"gitId":"tlyi"},"content":"    private final String description;","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"tlyi"},"content":"    private Integer calories;","lastModifiedDate":"2021-10-30"},{"lineNumber":27,"author":{"gitId":"tlyi"},"content":"    private final LocalDateTime dateTime;","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":30,"author":{"gitId":"tlyi"},"content":"    public AddFoodCommand(String description, Integer calories, LocalDateTime dateTime) {","lastModifiedDate":"2021-10-30"},{"lineNumber":31,"author":{"gitId":"tlyi"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"tlyi"},"content":"        this.calories \u003d calories;","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"tlyi"},"content":"        this.dateTime \u003d dateTime;","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":35,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":36,"author":{"gitId":"tlyi"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":37,"author":{"gitId":"tlyi"},"content":"    public CommandResult execute() {","lastModifiedDate":"2021-10-10"},{"lineNumber":38,"author":{"gitId":"tlyi"},"content":"        final Food food;","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"tlyi"},"content":"        if (calories \u003d\u003d null) {","lastModifiedDate":"2021-10-30"},{"lineNumber":41,"author":{"gitId":"tlyi"},"content":"            try {","lastModifiedDate":"2021-10-19"},{"lineNumber":42,"author":{"gitId":"tryyang2001"},"content":"                this.calories \u003d super.foodBank.findCalorie(this.description);","lastModifiedDate":"2021-10-28"},{"lineNumber":43,"author":{"gitId":"tlyi"},"content":"            } catch (ItemNotFoundInBankException e) {","lastModifiedDate":"2021-10-19"},{"lineNumber":44,"author":{"gitId":"tlyi"},"content":"                return new CommandResult(String.format(","lastModifiedDate":"2021-10-27"},{"lineNumber":45,"author":{"gitId":"tlyi"},"content":"                        CommandMessages.MESSAGE_INVALID_FOOD_NOT_IN_BANK, this.description));","lastModifiedDate":"2021-10-27"},{"lineNumber":46,"author":{"gitId":"tlyi"},"content":"            }","lastModifiedDate":"2021-10-19"},{"lineNumber":47,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":48,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":49,"author":{"gitId":"tlyi"},"content":"        food \u003d new Food(this.description, this.calories, this.dateTime);","lastModifiedDate":"2021-10-27"},{"lineNumber":50,"author":{"gitId":"tryyang2001"},"content":"        if (!food.isValid()) {","lastModifiedDate":"2021-11-04"},{"lineNumber":51,"author":{"gitId":"tlyi"},"content":"            logger.log(Level.FINE, \"Detected impossible value for food calorie\");","lastModifiedDate":"2021-11-08"},{"lineNumber":52,"author":{"gitId":"tryyang2001"},"content":"            return new CommandResult(CommandMessages.MESSAGE_INVALID_CALORIES);","lastModifiedDate":"2021-11-04"},{"lineNumber":53,"author":{"gitId":"tryyang2001"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":54,"author":{"gitId":"tryyang2001"},"content":"        super.foodItems.addItem(food);","lastModifiedDate":"2021-10-20"},{"lineNumber":55,"author":{"gitId":"tryyang2001"},"content":"        assert foodItems.getSize() \u003e 0 : \"The size of the food list should at least larger than 0\";","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"tlyi"},"content":"        logger.log(Level.FINE, \"New food item has been added to the food list\");","lastModifiedDate":"2021-11-08"},{"lineNumber":57,"author":{"gitId":"tryyang2001"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, food.toStringWithDate()));","lastModifiedDate":"2021-10-28"},{"lineNumber":58,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":59,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":60,"author":{"gitId":"tlyi"},"content":"}","lastModifiedDate":"2021-10-10"},{"lineNumber":61,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"tryyang2001":11,"tlyi":50}},{"path":"src/main/java/seedu/duke/logic/commands/AddFutureExerciseCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.logic.commands;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"tlyi"},"content":"import seedu.duke.data.item.exceptions.ItemNotFoundInBankException;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"tlyi"},"content":"import seedu.duke.data.item.exercise.Exercise;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"xingjie99"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"xingjie99"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"xingjie99"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"xingjie99"},"content":"//@@author xingjie99","lastModifiedDate":"2021-10-28"},{"lineNumber":11,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":12,"author":{"gitId":"xingjie99"},"content":"/**","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"xingjie99"},"content":" * Represents the command that when executed, adds an Exercise item to the FutureExerciseList.","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"xingjie99"},"content":" */","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"xingjie99"},"content":"public class AddFutureExerciseCommand extends Command {","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"xingjie99"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"An exercise item for the future has been added:\"","lastModifiedDate":"2021-10-18"},{"lineNumber":17,"author":{"gitId":"xingjie99"},"content":"            + CommandMessages.INDENTED_LS + \"%s\";","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":19,"author":{"gitId":"xingjie99"},"content":"    private static Logger logger \u003d Logger.getLogger(AddFutureExerciseCommand.class.getName());","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"xingjie99"},"content":"    private final String description;","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"xingjie99"},"content":"    private Integer calories;","lastModifiedDate":"2021-10-30"},{"lineNumber":23,"author":{"gitId":"xingjie99"},"content":"    private final LocalDate date;","lastModifiedDate":"2021-10-18"},{"lineNumber":24,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"xingjie99"},"content":"    public AddFutureExerciseCommand(String description, Integer calories, LocalDate date) {","lastModifiedDate":"2021-10-30"},{"lineNumber":26,"author":{"gitId":"xingjie99"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-10-18"},{"lineNumber":27,"author":{"gitId":"xingjie99"},"content":"        this.calories \u003d calories;","lastModifiedDate":"2021-10-18"},{"lineNumber":28,"author":{"gitId":"xingjie99"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-10-18"},{"lineNumber":29,"author":{"gitId":"xingjie99"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":30,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":31,"author":{"gitId":"xingjie99"},"content":"    @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":32,"author":{"gitId":"xingjie99"},"content":"    public CommandResult execute() {","lastModifiedDate":"2021-10-18"},{"lineNumber":33,"author":{"gitId":"xingjie99"},"content":"        final Exercise exercise;","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"xingjie99"},"content":"        if (date.isAfter(LocalDate.now().plusYears(CommandMessages.ONE_YEAR))) {","lastModifiedDate":"2021-11-02"},{"lineNumber":35,"author":{"gitId":"xingjie99"},"content":"            return new CommandResult(CommandMessages.MESSAGE_EXERCISE_NOT_WITHIN_ONE_YEAR);","lastModifiedDate":"2021-11-02"},{"lineNumber":36,"author":{"gitId":"xingjie99"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":37,"author":{"gitId":"xingjie99"},"content":"        if (calories \u003d\u003d null) {","lastModifiedDate":"2021-10-30"},{"lineNumber":38,"author":{"gitId":"xingjie99"},"content":"            try {","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"xingjie99"},"content":"                this.calories \u003d super.exerciseBank.findCalorie(this.description);","lastModifiedDate":"2021-10-28"},{"lineNumber":40,"author":{"gitId":"xingjie99"},"content":"            } catch (ItemNotFoundInBankException e) {","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"xingjie99"},"content":"                return new CommandResult(String.format(","lastModifiedDate":"2021-10-27"},{"lineNumber":42,"author":{"gitId":"xingjie99"},"content":"                        CommandMessages.MESSAGE_INVALID_EXERCISE_NOT_IN_BANK, this.description));","lastModifiedDate":"2021-10-27"},{"lineNumber":43,"author":{"gitId":"xingjie99"},"content":"            }","lastModifiedDate":"2021-10-20"},{"lineNumber":44,"author":{"gitId":"xingjie99"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":45,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":46,"author":{"gitId":"xingjie99"},"content":"        exercise \u003d new Exercise(this.description, this.calories, this.date);","lastModifiedDate":"2021-10-27"},{"lineNumber":47,"author":{"gitId":"xingjie99"},"content":"        if (!exercise.isValid()) {","lastModifiedDate":"2021-11-04"},{"lineNumber":48,"author":{"gitId":"xingjie99"},"content":"            logger.log(Level.FINE, \"Detected impossible calorie burnt for the exercise.\");","lastModifiedDate":"2021-11-08"},{"lineNumber":49,"author":{"gitId":"xingjie99"},"content":"            return new CommandResult(CommandMessages.MESSAGE_INVALID_CALORIES);","lastModifiedDate":"2021-11-04"},{"lineNumber":50,"author":{"gitId":"xingjie99"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":51,"author":{"gitId":"xingjie99"},"content":"        assert exercise.getCalories() \u003e 0 : \"Exercise calorie is valid\";","lastModifiedDate":"2021-10-18"},{"lineNumber":52,"author":{"gitId":"xingjie99"},"content":"        super.futureExerciseItems.addItem(exercise);","lastModifiedDate":"2021-10-21"},{"lineNumber":53,"author":{"gitId":"xingjie99"},"content":"        logger.log(Level.FINE, \"Exercise is successfully added\");","lastModifiedDate":"2021-11-08"},{"lineNumber":54,"author":{"gitId":"xingjie99"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, exercise.toStringWithDate()));","lastModifiedDate":"2021-10-28"},{"lineNumber":55,"author":{"gitId":"xingjie99"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":56,"author":{"gitId":"xingjie99"},"content":"}","lastModifiedDate":"2021-10-18"},{"lineNumber":57,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"xingjie99":54,"tlyi":3}},{"path":"src/main/java/seedu/duke/logic/commands/AddRecurringExerciseCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.logic.commands;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"tryyang2001"},"content":"import seedu.duke.data.item.Item;","lastModifiedDate":"2021-11-04"},{"lineNumber":4,"author":{"gitId":"tlyi"},"content":"import seedu.duke.data.item.exceptions.ItemNotFoundInBankException;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"xingjie99"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"xingjie99"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"xingjie99"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"xingjie99"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"xingjie99"},"content":"//@@author xingjie99","lastModifiedDate":"2021-10-28"},{"lineNumber":12,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":13,"author":{"gitId":"xingjie99"},"content":"/**","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"xingjie99"},"content":" * Represent the command that when executed, adds all recurring Exercise items to the FutureExerciseList.","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"xingjie99"},"content":" */","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"xingjie99"},"content":"public class AddRecurringExerciseCommand extends Command {","lastModifiedDate":"2021-10-18"},{"lineNumber":17,"author":{"gitId":"xingjie99"},"content":"    public static final String MESSAGE_INVALID_DATES \u003d \"Your start date %s should not be later than your end date %s\";","lastModifiedDate":"2021-11-02"},{"lineNumber":18,"author":{"gitId":"xingjie99"},"content":"    public static final String MESSAGE_INVALID_FUTURE_DATES \u003d \"Make sure that your start date (%s) \"","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"xingjie99"},"content":"            + \"and end date (%s) are in the future\";","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"xingjie99"},"content":"    public static final String MESSAGE_NO_EXERCISE_ADDED \u003d \"Day(s) not present between %s and %s\";","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"xingjie99"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Recurring exercise item for the future has been added!\"","lastModifiedDate":"2021-11-04"},{"lineNumber":22,"author":{"gitId":"xingjie99"},"content":"            + CommandMessages.LS + \"You can view your upcoming exercises by typing \"","lastModifiedDate":"2021-11-04"},{"lineNumber":23,"author":{"gitId":"xingjie99"},"content":"            + CommandMessages.QUOTATION + Command.COMMAND_WORD_VIEW + \" \" + Command.COMMAND_PREFIX_UPCOMING_EXERCISE","lastModifiedDate":"2021-11-04"},{"lineNumber":24,"author":{"gitId":"xingjie99"},"content":"            + Command.COMMAND_PREFIX_DELIMITER  + CommandMessages.QUOTATION + \"!\";","lastModifiedDate":"2021-11-04"},{"lineNumber":25,"author":{"gitId":"xingjie99"},"content":"    public static final String[] EXPECTED_PREFIXES \u003d {","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"xingjie99"},"content":"            COMMAND_PREFIX_RECURRING,","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"xingjie99"},"content":"            COMMAND_PREFIX_CALORIES,","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"xingjie99"},"content":"            COMMAND_PREFIX_START_DATE,","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"xingjie99"},"content":"            COMMAND_PREFIX_END_DATE,","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"xingjie99"},"content":"            COMMAND_PREFIX_DAY_OF_THE_WEEK","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"xingjie99"},"content":"    };","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"xingjie99"},"content":"    private final String description;","lastModifiedDate":"2021-10-18"},{"lineNumber":34,"author":{"gitId":"xingjie99"},"content":"    private Integer calories;","lastModifiedDate":"2021-10-30"},{"lineNumber":35,"author":{"gitId":"xingjie99"},"content":"    private final LocalDate startDate;","lastModifiedDate":"2021-10-18"},{"lineNumber":36,"author":{"gitId":"xingjie99"},"content":"    private final LocalDate endDate;","lastModifiedDate":"2021-10-18"},{"lineNumber":37,"author":{"gitId":"xingjie99"},"content":"    private final ArrayList\u003cInteger\u003e dayOfTheWeek;","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":39,"author":{"gitId":"xingjie99"},"content":"    private static Logger logger \u003d Logger.getLogger(AddRecurringExerciseCommand.class.getName());","lastModifiedDate":"2021-10-18"},{"lineNumber":40,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":41,"author":{"gitId":"xingjie99"},"content":"    public AddRecurringExerciseCommand(String description, Integer calories, LocalDate startDate,","lastModifiedDate":"2021-10-30"},{"lineNumber":42,"author":{"gitId":"xingjie99"},"content":"                                       LocalDate endDate, ArrayList\u003cInteger\u003e dayOfTheWeek) {","lastModifiedDate":"2021-10-30"},{"lineNumber":43,"author":{"gitId":"xingjie99"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-10-18"},{"lineNumber":44,"author":{"gitId":"xingjie99"},"content":"        this.calories \u003d calories;","lastModifiedDate":"2021-10-18"},{"lineNumber":45,"author":{"gitId":"xingjie99"},"content":"        this.startDate \u003d startDate;","lastModifiedDate":"2021-10-18"},{"lineNumber":46,"author":{"gitId":"xingjie99"},"content":"        this.endDate \u003d endDate;","lastModifiedDate":"2021-10-18"},{"lineNumber":47,"author":{"gitId":"xingjie99"},"content":"        this.dayOfTheWeek \u003d dayOfTheWeek;","lastModifiedDate":"2021-10-20"},{"lineNumber":48,"author":{"gitId":"xingjie99"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":49,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":50,"author":{"gitId":"xingjie99"},"content":"    @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":51,"author":{"gitId":"xingjie99"},"content":"    public CommandResult execute() {","lastModifiedDate":"2021-10-18"},{"lineNumber":52,"author":{"gitId":"xingjie99"},"content":"        if (this.startDate.isAfter(this.endDate)) {","lastModifiedDate":"2021-10-18"},{"lineNumber":53,"author":{"gitId":"xingjie99"},"content":"            logger.log(Level.FINE, \"Start date is after end date\");","lastModifiedDate":"2021-11-08"},{"lineNumber":54,"author":{"gitId":"xingjie99"},"content":"            return new CommandResult(String.format(MESSAGE_INVALID_DATES,","lastModifiedDate":"2021-10-28"},{"lineNumber":55,"author":{"gitId":"xingjie99"},"content":"                    this.startDate.format(CommandMessages.DATE_FORMATTER),","lastModifiedDate":"2021-10-28"},{"lineNumber":56,"author":{"gitId":"xingjie99"},"content":"                    this.endDate.format(CommandMessages.DATE_FORMATTER)));","lastModifiedDate":"2021-10-28"},{"lineNumber":57,"author":{"gitId":"xingjie99"},"content":"        } else if (endDate.isAfter(LocalDate.now().plusYears(CommandMessages.ONE_YEAR))) {","lastModifiedDate":"2021-11-02"},{"lineNumber":58,"author":{"gitId":"xingjie99"},"content":"            return new CommandResult(CommandMessages.MESSAGE_RECURRING_EXERCISE_NOT_WITHIN_ONE_YEAR);","lastModifiedDate":"2021-11-02"},{"lineNumber":59,"author":{"gitId":"xingjie99"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":60,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":61,"author":{"gitId":"xingjie99"},"content":"        if (calories \u003d\u003d null) {","lastModifiedDate":"2021-10-30"},{"lineNumber":62,"author":{"gitId":"xingjie99"},"content":"            try {","lastModifiedDate":"2021-10-20"},{"lineNumber":63,"author":{"gitId":"xingjie99"},"content":"                this.calories \u003d super.exerciseBank.findCalorie(this.description);","lastModifiedDate":"2021-10-28"},{"lineNumber":64,"author":{"gitId":"xingjie99"},"content":"            } catch (ItemNotFoundInBankException e) {","lastModifiedDate":"2021-10-20"},{"lineNumber":65,"author":{"gitId":"xingjie99"},"content":"                return new CommandResult(String.format(","lastModifiedDate":"2021-10-27"},{"lineNumber":66,"author":{"gitId":"xingjie99"},"content":"                        CommandMessages.MESSAGE_INVALID_EXERCISE_NOT_IN_BANK, this.description));","lastModifiedDate":"2021-10-27"},{"lineNumber":67,"author":{"gitId":"xingjie99"},"content":"            }","lastModifiedDate":"2021-10-20"},{"lineNumber":68,"author":{"gitId":"xingjie99"},"content":"        } else if (calories \u003c Item.LOWEST_CALORIE || calories \u003e Item.HIGHEST_CALORIE) {","lastModifiedDate":"2021-11-04"},{"lineNumber":69,"author":{"gitId":"xingjie99"},"content":"            logger.log(Level.FINE, \"Detected impossible calorie value\");","lastModifiedDate":"2021-11-08"},{"lineNumber":70,"author":{"gitId":"xingjie99"},"content":"            return new CommandResult(CommandMessages.MESSAGE_INVALID_CALORIES);","lastModifiedDate":"2021-11-04"},{"lineNumber":71,"author":{"gitId":"xingjie99"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":72,"author":{"gitId":"xingjie99"},"content":"        assert this.endDate.isAfter(this.startDate) : \"End date is after start date\";","lastModifiedDate":"2021-10-20"},{"lineNumber":73,"author":{"gitId":"xingjie99"},"content":"        if (!this.startDate.isAfter(LocalDate.now())) {","lastModifiedDate":"2021-10-24"},{"lineNumber":74,"author":{"gitId":"xingjie99"},"content":"            logger.log(Level.FINE, \"Recurring exercises are for future only\");","lastModifiedDate":"2021-11-08"},{"lineNumber":75,"author":{"gitId":"xingjie99"},"content":"            return new CommandResult(String.format(MESSAGE_INVALID_FUTURE_DATES,","lastModifiedDate":"2021-10-28"},{"lineNumber":76,"author":{"gitId":"xingjie99"},"content":"                    this.startDate.format(CommandMessages.DATE_FORMATTER),","lastModifiedDate":"2021-10-28"},{"lineNumber":77,"author":{"gitId":"xingjie99"},"content":"                    this.endDate.format(CommandMessages.DATE_FORMATTER)));","lastModifiedDate":"2021-10-28"},{"lineNumber":78,"author":{"gitId":"xingjie99"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":79,"author":{"gitId":"xingjie99"},"content":"        assert this.startDate.isAfter(LocalDate.now()) : \"Start and end dates are in the future\";","lastModifiedDate":"2021-10-20"},{"lineNumber":80,"author":{"gitId":"xingjie99"},"content":"        int numberOfFutureExercises \u003d futureExerciseItems.getSize();","lastModifiedDate":"2021-10-18"},{"lineNumber":81,"author":{"gitId":"xingjie99"},"content":"        futureExerciseItems.addRecurringExercises(this.description, this.calories,","lastModifiedDate":"2021-10-20"},{"lineNumber":82,"author":{"gitId":"xingjie99"},"content":"                this.startDate, this.endDate, this.dayOfTheWeek);","lastModifiedDate":"2021-10-20"},{"lineNumber":83,"author":{"gitId":"xingjie99"},"content":"        if (futureExerciseItems.getSize() \u003d\u003d numberOfFutureExercises) {","lastModifiedDate":"2021-10-18"},{"lineNumber":84,"author":{"gitId":"xingjie99"},"content":"            return new CommandResult(String.format(MESSAGE_NO_EXERCISE_ADDED,","lastModifiedDate":"2021-10-28"},{"lineNumber":85,"author":{"gitId":"xingjie99"},"content":"                    this.startDate.format(CommandMessages.DATE_FORMATTER),","lastModifiedDate":"2021-10-28"},{"lineNumber":86,"author":{"gitId":"xingjie99"},"content":"                    this.endDate.format(CommandMessages.DATE_FORMATTER)));","lastModifiedDate":"2021-10-28"},{"lineNumber":87,"author":{"gitId":"xingjie99"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":88,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":89,"author":{"gitId":"xingjie99"},"content":"        logger.log(Level.FINE, \"Recurring exercise is successfully added\");","lastModifiedDate":"2021-11-08"},{"lineNumber":90,"author":{"gitId":"xingjie99"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2021-10-18"},{"lineNumber":91,"author":{"gitId":"xingjie99"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":92,"author":{"gitId":"xingjie99"},"content":"}","lastModifiedDate":"2021-10-18"},{"lineNumber":93,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":94,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":95,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"xingjie99":92,"tryyang2001":1,"tlyi":2}},{"path":"src/main/java/seedu/duke/logic/commands/ByeCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.logic.commands;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"tlyi"},"content":"/**","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"tlyi"},"content":" * Represents the command that when executed, signaCommandMessages.LS to the application to exit.","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"tlyi"},"content":" */","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"tlyi"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"tlyi"},"content":"    public static final String COMMAND_WORD \u003d \"bye\";","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"tlyi"},"content":"    private static final String MESSAGE_SUCCESS \u003d \"Exiting Fitbot....\" + CommandMessages.LS","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"tlyi"},"content":"            + \"Bye! Hope to see you again soon!!\";","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":12,"author":{"gitId":"tlyi"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"tlyi"},"content":"    public CommandResult execute() {","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"tlyi"},"content":"        CommandResult result \u003d new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"tlyi"},"content":"        result.setBye(true);","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"tlyi"},"content":"        return result;","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"tlyi"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"tlyi"},"content":"     * Determines if command is the Bye command so that the main program knows when to exit.","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"tlyi"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"tlyi"},"content":"    public static boolean isBye(Command command) {","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"tlyi"},"content":"        return command instanceof ByeCommand;","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"tlyi"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"tttyyzzz":1,"tlyi":24}},{"path":"src/main/java/seedu/duke/logic/commands/CalculateBmiCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.logic.commands;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"tlyi"},"content":"import seedu.duke.data.profile.attributes.Height;","lastModifiedDate":"2021-11-07"},{"lineNumber":4,"author":{"gitId":"tlyi"},"content":"import seedu.duke.data.profile.attributes.Weight;","lastModifiedDate":"2021-11-07"},{"lineNumber":5,"author":{"gitId":"tlyi"},"content":"import seedu.duke.data.profile.exceptions.InvalidCharacteristicException;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"tlyi"},"content":"import seedu.duke.data.profile.utilities.ProfileUtils;","lastModifiedDate":"2021-11-03"},{"lineNumber":7,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"tlyi"},"content":"/**","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"tlyi"},"content":" * Represents the command that when executed, calculates the BMI with the given height and weight data.","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"tlyi"},"content":" */","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"tlyi"},"content":"public class CalculateBmiCommand extends Command {","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_COMMAND_FORMAT \u003d CommandMessages.QUOTATION + COMMAND_WORD_BMI","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"tlyi"},"content":"            + \" \" + COMMAND_PREFIX_HEIGHT + COMMAND_PREFIX_DELIMITER + \"Y \"","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"tlyi"},"content":"            + COMMAND_PREFIX_WEIGHT + COMMAND_PREFIX_DELIMITER + \"Z\"","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"tlyi"},"content":"            + CommandMessages.QUOTATION + \" where X is the height in CM and Y is the weight in KG.\";","lastModifiedDate":"2021-10-28"},{"lineNumber":16,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid format! \"","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"tlyi"},"content":"            + \"Trying to calculate BMI for a certain height and weight? Use this format:\"","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"tlyi"},"content":"            + CommandMessages.INDENTED_LS + MESSAGE_COMMAND_FORMAT;","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"The calculated BMI value is %1$,.1f (%2$s)\";","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"tlyi"},"content":"    public static final String[] EXPECTED_PREFIXES \u003d {","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"tlyi"},"content":"            COMMAND_PREFIX_HEIGHT,","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"tlyi"},"content":"            COMMAND_PREFIX_WEIGHT","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"tlyi"},"content":"    };","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"tlyi"},"content":"    private final Height height;","lastModifiedDate":"2021-11-07"},{"lineNumber":26,"author":{"gitId":"tlyi"},"content":"    private final Weight weight;","lastModifiedDate":"2021-11-07"},{"lineNumber":27,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"tlyi"},"content":"    public CalculateBmiCommand(double height, double weight) {","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"tlyi"},"content":"        this.height \u003d new Height(height);","lastModifiedDate":"2021-11-07"},{"lineNumber":30,"author":{"gitId":"tlyi"},"content":"        this.weight \u003d new Weight(weight);","lastModifiedDate":"2021-11-07"},{"lineNumber":31,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":32,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":33,"author":{"gitId":"tlyi"},"content":"    private void checkIfCommandShouldExecute() throws InvalidCharacteristicException {","lastModifiedDate":"2021-11-07"},{"lineNumber":34,"author":{"gitId":"tlyi"},"content":"        if (!this.weight.isValid()) {","lastModifiedDate":"2021-11-07"},{"lineNumber":35,"author":{"gitId":"tlyi"},"content":"            throw new InvalidCharacteristicException(ProfileUtils.ERROR_WEIGHT);","lastModifiedDate":"2021-11-07"},{"lineNumber":36,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-11-07"},{"lineNumber":37,"author":{"gitId":"tlyi"},"content":"        if (!this.height.isValid()) {","lastModifiedDate":"2021-11-07"},{"lineNumber":38,"author":{"gitId":"tlyi"},"content":"            throw new InvalidCharacteristicException(ProfileUtils.ERROR_HEIGHT);","lastModifiedDate":"2021-11-07"},{"lineNumber":39,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-11-07"},{"lineNumber":40,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":41,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":42,"author":{"gitId":"tlyi"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":43,"author":{"gitId":"tlyi"},"content":"    public CommandResult execute() {","lastModifiedDate":"2021-10-10"},{"lineNumber":44,"author":{"gitId":"tlyi"},"content":"        try {","lastModifiedDate":"2021-10-11"},{"lineNumber":45,"author":{"gitId":"tlyi"},"content":"            checkIfCommandShouldExecute();","lastModifiedDate":"2021-11-07"},{"lineNumber":46,"author":{"gitId":"tlyi"},"content":"            final double bmi \u003d ProfileUtils.calculateBmi(this.height.getHeight(), this.weight.getWeight());","lastModifiedDate":"2021-11-07"},{"lineNumber":47,"author":{"gitId":"weidak"},"content":"            return new CommandResult(String.format(MESSAGE_SUCCESS, bmi, ProfileUtils.retrieveBmiStatus(bmi)));","lastModifiedDate":"2021-10-30"},{"lineNumber":48,"author":{"gitId":"tlyi"},"content":"        } catch (InvalidCharacteristicException e) {","lastModifiedDate":"2021-10-11"},{"lineNumber":49,"author":{"gitId":"tlyi"},"content":"            return new CommandResult(e.getMessage());","lastModifiedDate":"2021-10-11"},{"lineNumber":50,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":51,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":52,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":53,"author":{"gitId":"tlyi"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"weidak":1,"tlyi":52}},{"path":"src/main/java/seedu/duke/logic/commands/CalculateBmiWithProfileCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.logic.commands;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"tlyi"},"content":"import seedu.duke.data.profile.exceptions.InvalidCharacteristicException;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"tlyi"},"content":"import seedu.duke.data.profile.utilities.ProfileUtils;","lastModifiedDate":"2021-11-03"},{"lineNumber":5,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"tlyi"},"content":"/**","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"tlyi"},"content":" * Represents the command that when executed, calculates the BMI of the current Profile.","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"tlyi"},"content":" */","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"tlyi"},"content":"public class CalculateBmiWithProfileCommand extends Command {","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Your BMI value according to your current profile is:\"","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"tlyi"},"content":"            + CommandMessages.INDENTED_LS + \"%1$,.1f (%2$s)\";","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"weidak"},"content":"    public static final String MESSAGE_UNINITIALIZED_PROFILE \u003d \"Your profile has not been initialized yet.\";","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"tlyi"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"tlyi"},"content":"    public CommandResult execute() {","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"weidak"},"content":"        try {","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"weidak"},"content":"            final double height \u003d super.profile.getProfileHeight().getHeight();","lastModifiedDate":"2021-10-30"},{"lineNumber":19,"author":{"gitId":"weidak"},"content":"            final double weight \u003d super.profile.getProfileWeight().getWeight();","lastModifiedDate":"2021-10-30"},{"lineNumber":20,"author":{"gitId":"weidak"},"content":"            final double bmi \u003d ProfileUtils.calculateBmi(height, weight);","lastModifiedDate":"2021-10-30"},{"lineNumber":21,"author":{"gitId":"weidak"},"content":"            return new CommandResult(String.format(MESSAGE_SUCCESS, bmi, ProfileUtils.retrieveBmiStatus(bmi)));","lastModifiedDate":"2021-10-30"},{"lineNumber":22,"author":{"gitId":"weidak"},"content":"        } catch (InvalidCharacteristicException e) {","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"weidak"},"content":"            return new CommandResult(MESSAGE_UNINITIALIZED_PROFILE);","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"weidak"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"tlyi"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"weidak":10,"tlyi":16}},{"path":"src/main/java/seedu/duke/logic/commands/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.logic.commands;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"tlyi"},"content":"import seedu.duke.data.DataManager;","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"tlyi"},"content":"import seedu.duke.data.item.ItemBank;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"tlyi"},"content":"import seedu.duke.data.item.exercise.ExerciseList;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"tlyi"},"content":"import seedu.duke.data.item.exercise.FutureExerciseList;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"tlyi"},"content":"import seedu.duke.data.item.food.FoodList;","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"tlyi"},"content":"import seedu.duke.data.profile.Profile;","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"tlyi"},"content":"/**","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"tlyi"},"content":" * Abstract class used to represent executable Commands.","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"tlyi"},"content":" * All Commands can be executed to return a CommandResult.","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"tlyi"},"content":" */","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"tlyi"},"content":"public abstract class Command {","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"tlyi"},"content":"    public static final String COMMAND_PREFIX_DELIMITER \u003d \"/\";","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"tlyi"},"content":"    public static final String COMMAND_INDEX_DELIMITER \u003d \",\";","lastModifiedDate":"2021-11-03"},{"lineNumber":18,"author":{"gitId":"tlyi"},"content":"    public static final String COMMAND_PREFIX_EXERCISE \u003d \"e\";","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"xingjie99"},"content":"    public static final String COMMAND_PREFIX_UPCOMING_EXERCISE \u003d \"u\";","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"tlyi"},"content":"    public static final String COMMAND_PREFIX_RECURRING \u003d \"r\";","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"tlyi"},"content":"    public static final String COMMAND_PREFIX_FOOD \u003d \"f\";","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"tlyi"},"content":"    public static final String COMMAND_PREFIX_EXERCISE_BANK \u003d \"ebank\";","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"tlyi"},"content":"    public static final String COMMAND_PREFIX_FOOD_BANK \u003d \"fbank\";","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"tlyi"},"content":"    public static final String COMMAND_PREFIX_CALORIES \u003d \"c\";","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"tlyi"},"content":"    public static final String COMMAND_PREFIX_NAME \u003d \"n\";","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"tlyi"},"content":"    public static final String COMMAND_PREFIX_HEIGHT \u003d \"h\";","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"tlyi"},"content":"    public static final String COMMAND_PREFIX_WEIGHT \u003d \"w\";","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"tryyang2001"},"content":"    public static final String COMMAND_PREFIX_GOAL \u003d \"g\";","lastModifiedDate":"2021-10-14"},{"lineNumber":29,"author":{"gitId":"tlyi"},"content":"    public static final String COMMAND_PREFIX_DATE \u003d \"d\";","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"tlyi"},"content":"    public static final String COMMAND_PREFIX_TIME \u003d \"t\";","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"tlyi"},"content":"    public static final String COMMAND_PREFIX_GENDER \u003d \"s\";","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"tlyi"},"content":"    public static final String COMMAND_PREFIX_AGE \u003d \"a\";","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"tlyi"},"content":"    public static final String COMMAND_PREFIX_ACTIVITY_FACTOR \u003d \"x\";","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"xingjie99"},"content":"    public static final String COMMAND_PREFIX_START_DATE \u003d \":\";","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"xingjie99"},"content":"    public static final String COMMAND_PREFIX_END_DATE \u003d \"-\";","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"xingjie99"},"content":"    public static final String COMMAND_PREFIX_DAY_OF_THE_WEEK \u003d \"@\";","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"tlyi"},"content":"    public static final String COMMAND_WORD_ADD \u003d \"add\";","lastModifiedDate":"2021-10-10"},{"lineNumber":38,"author":{"gitId":"tlyi"},"content":"    public static final String COMMAND_WORD_DELETE \u003d \"delete\";","lastModifiedDate":"2021-10-10"},{"lineNumber":39,"author":{"gitId":"tlyi"},"content":"    public static final String COMMAND_WORD_VIEW \u003d \"view\";","lastModifiedDate":"2021-10-10"},{"lineNumber":40,"author":{"gitId":"xingjie99"},"content":"    public static final String COMMAND_WORD_EDIT \u003d \"edit\";","lastModifiedDate":"2021-10-24"},{"lineNumber":41,"author":{"gitId":"tlyi"},"content":"    public static final String COMMAND_WORD_BMI \u003d \"bmi\";","lastModifiedDate":"2021-10-10"},{"lineNumber":42,"author":{"gitId":"tlyi"},"content":"    public static final String COMMAND_WORD_PROFILE \u003d \"profile\";","lastModifiedDate":"2021-10-13"},{"lineNumber":43,"author":{"gitId":"tryyang2001"},"content":"    public static final String COMMAND_WORD_DELETE_ALL \u003d \"all\";","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"tryyang2001"},"content":"    public static final char NULL_CHAR \u003d \u0027|\u0027;","lastModifiedDate":"2021-10-28"},{"lineNumber":45,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":46,"author":{"gitId":"tlyi"},"content":"    protected Profile profile;","lastModifiedDate":"2021-10-10"},{"lineNumber":47,"author":{"gitId":"tlyi"},"content":"    protected ExerciseList exerciseItems;","lastModifiedDate":"2021-10-11"},{"lineNumber":48,"author":{"gitId":"tlyi"},"content":"    protected FoodList foodItems;","lastModifiedDate":"2021-10-11"},{"lineNumber":49,"author":{"gitId":"xingjie99"},"content":"    protected FutureExerciseList futureExerciseItems;","lastModifiedDate":"2021-10-18"},{"lineNumber":50,"author":{"gitId":"tlyi"},"content":"    protected ItemBank exerciseBank;","lastModifiedDate":"2021-10-19"},{"lineNumber":51,"author":{"gitId":"tlyi"},"content":"    protected ItemBank foodBank;","lastModifiedDate":"2021-10-19"},{"lineNumber":52,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":53,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":54,"author":{"gitId":"tlyi"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":55,"author":{"gitId":"tlyi"},"content":"     * Returns the appropriate CommandResult after execution of the command.","lastModifiedDate":"2021-10-10"},{"lineNumber":56,"author":{"gitId":"tlyi"},"content":"     * Each child class that inherits this class represents an executable command and will have its own implementation","lastModifiedDate":"2021-10-10"},{"lineNumber":57,"author":{"gitId":"tlyi"},"content":"     * of this method specific to its functionality.","lastModifiedDate":"2021-10-10"},{"lineNumber":58,"author":{"gitId":"tlyi"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":59,"author":{"gitId":"tlyi"},"content":"    public abstract CommandResult execute();","lastModifiedDate":"2021-10-10"},{"lineNumber":60,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":61,"author":{"gitId":"tlyi"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":62,"author":{"gitId":"tlyi"},"content":"     * Provides the necessary data structures for the command to operate on.","lastModifiedDate":"2021-10-12"},{"lineNumber":63,"author":{"gitId":"tlyi"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":64,"author":{"gitId":"tlyi"},"content":"    public void setData(DataManager dataManager) {","lastModifiedDate":"2021-10-27"},{"lineNumber":65,"author":{"gitId":"tlyi"},"content":"        this.profile \u003d dataManager.getProfile();","lastModifiedDate":"2021-10-27"},{"lineNumber":66,"author":{"gitId":"tryyang2001"},"content":"        this.exerciseItems \u003d dataManager.getFilteredExerciseItems();","lastModifiedDate":"2021-10-28"},{"lineNumber":67,"author":{"gitId":"tryyang2001"},"content":"        this.foodItems \u003d dataManager.getFilteredFoodItems();","lastModifiedDate":"2021-10-28"},{"lineNumber":68,"author":{"gitId":"tlyi"},"content":"        this.futureExerciseItems \u003d dataManager.getFutureExerciseItems();","lastModifiedDate":"2021-10-27"},{"lineNumber":69,"author":{"gitId":"tlyi"},"content":"        this.exerciseBank \u003d dataManager.getExerciseBank();","lastModifiedDate":"2021-10-27"},{"lineNumber":70,"author":{"gitId":"tlyi"},"content":"        this.foodBank \u003d dataManager.getFoodBank();","lastModifiedDate":"2021-10-27"},{"lineNumber":71,"author":{"gitId":"tlyi"},"content":"        assert profile !\u003d null : \"Profile supplied to command should not be null\";","lastModifiedDate":"2021-10-13"},{"lineNumber":72,"author":{"gitId":"tlyi"},"content":"        assert exerciseItems !\u003d null : \"Exercise items supplied to command should not be null\";","lastModifiedDate":"2021-10-13"},{"lineNumber":73,"author":{"gitId":"tlyi"},"content":"        assert foodItems !\u003d null : \"Food items supplied to command should not be null\";","lastModifiedDate":"2021-10-13"},{"lineNumber":74,"author":{"gitId":"xingjie99"},"content":"        assert futureExerciseItems !\u003d null : \"Future exercise items supplied to command should not be null\";","lastModifiedDate":"2021-10-18"},{"lineNumber":75,"author":{"gitId":"tlyi"},"content":"        assert exerciseBank !\u003d null : \"Exercise bank supplied to command should not be null\";","lastModifiedDate":"2021-10-27"},{"lineNumber":76,"author":{"gitId":"tlyi"},"content":"        assert foodBank !\u003d null : \"Food bank supplied to command should not be null\";","lastModifiedDate":"2021-10-27"},{"lineNumber":77,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":78,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":79,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":80,"author":{"gitId":"tlyi"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":81,"author":{"gitId":"tlyi"},"content":"     * Returns true if the command requires the profile storage file to be rewritten after execution.","lastModifiedDate":"2021-10-12"},{"lineNumber":82,"author":{"gitId":"tlyi"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":83,"author":{"gitId":"tlyi"},"content":"     * @param command Command that has just been executed","lastModifiedDate":"2021-10-12"},{"lineNumber":84,"author":{"gitId":"tlyi"},"content":"     * @return True if profile storage file is to be rewritten after execution of the command","lastModifiedDate":"2021-10-12"},{"lineNumber":85,"author":{"gitId":"tlyi"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":86,"author":{"gitId":"tlyi"},"content":"    public static boolean requiresProfileStorageRewrite(Command command) {","lastModifiedDate":"2021-10-12"},{"lineNumber":87,"author":{"gitId":"tlyi"},"content":"        return command instanceof ProfileUpdateCommand;","lastModifiedDate":"2021-10-21"},{"lineNumber":88,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":89,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":90,"author":{"gitId":"tlyi"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":91,"author":{"gitId":"tlyi"},"content":"     * Returns true if the command requires the exercise list storage file to be rewritten after execution.","lastModifiedDate":"2021-10-12"},{"lineNumber":92,"author":{"gitId":"tlyi"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":93,"author":{"gitId":"tlyi"},"content":"     * @param command Command that has just been executed","lastModifiedDate":"2021-10-12"},{"lineNumber":94,"author":{"gitId":"tlyi"},"content":"     * @return True if exercise list storage file is to be rewritten after execution of the command","lastModifiedDate":"2021-10-12"},{"lineNumber":95,"author":{"gitId":"tlyi"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":96,"author":{"gitId":"tlyi"},"content":"    public static boolean requiresExerciseListStorageRewrite(Command command) {","lastModifiedDate":"2021-10-12"},{"lineNumber":97,"author":{"gitId":"tlyi"},"content":"        return command instanceof AddExerciseCommand","lastModifiedDate":"2021-10-12"},{"lineNumber":98,"author":{"gitId":"tlyi"},"content":"                || command instanceof DeleteExerciseCommand;","lastModifiedDate":"2021-10-12"},{"lineNumber":99,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":100,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":101,"author":{"gitId":"tlyi"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":102,"author":{"gitId":"tlyi"},"content":"     * Returns true if the command requires the food list storage file to be rewritten after execution.","lastModifiedDate":"2021-10-12"},{"lineNumber":103,"author":{"gitId":"tlyi"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":104,"author":{"gitId":"tlyi"},"content":"     * @param command Command that has just been executed","lastModifiedDate":"2021-10-12"},{"lineNumber":105,"author":{"gitId":"tlyi"},"content":"     * @return True if food list storage file is to be rewritten after execution of the command","lastModifiedDate":"2021-10-12"},{"lineNumber":106,"author":{"gitId":"tlyi"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":107,"author":{"gitId":"tlyi"},"content":"    public static boolean requiresFoodListStorageRewrite(Command command) {","lastModifiedDate":"2021-10-12"},{"lineNumber":108,"author":{"gitId":"tlyi"},"content":"        return command instanceof AddFoodCommand","lastModifiedDate":"2021-10-12"},{"lineNumber":109,"author":{"gitId":"tlyi"},"content":"                || command instanceof DeleteFoodCommand;","lastModifiedDate":"2021-10-12"},{"lineNumber":110,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":111,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":112,"author":{"gitId":"tlyi"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":113,"author":{"gitId":"tlyi"},"content":"     * Returns true if the command requires the future exercise list storage file to be rewritten after execution.","lastModifiedDate":"2021-10-21"},{"lineNumber":114,"author":{"gitId":"tlyi"},"content":"     *","lastModifiedDate":"2021-10-21"},{"lineNumber":115,"author":{"gitId":"tlyi"},"content":"     * @param command Command that has just been executed","lastModifiedDate":"2021-10-21"},{"lineNumber":116,"author":{"gitId":"tlyi"},"content":"     * @return True if future exercise list storage file is to be rewritten after execution of the command","lastModifiedDate":"2021-10-21"},{"lineNumber":117,"author":{"gitId":"tlyi"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":118,"author":{"gitId":"xingjie99"},"content":"    public static boolean requiresFutureExerciseListStorageRewrite(Command command) {","lastModifiedDate":"2021-10-18"},{"lineNumber":119,"author":{"gitId":"xingjie99"},"content":"        return command instanceof AddFutureExerciseCommand","lastModifiedDate":"2021-10-18"},{"lineNumber":120,"author":{"gitId":"weidak"},"content":"                || command instanceof DeleteExerciseCommand","lastModifiedDate":"2021-11-08"},{"lineNumber":121,"author":{"gitId":"tlyi"},"content":"                || command instanceof DeleteFutureExerciseCommand","lastModifiedDate":"2021-10-21"},{"lineNumber":122,"author":{"gitId":"weidak"},"content":"                || command instanceof AddRecurringExerciseCommand","lastModifiedDate":"2021-10-28"},{"lineNumber":123,"author":{"gitId":"weidak"},"content":"                || command instanceof EditFutureExerciseCommand;","lastModifiedDate":"2021-10-28"},{"lineNumber":124,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":125,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":126,"author":{"gitId":"tlyi"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":127,"author":{"gitId":"tlyi"},"content":"     * Returns true if the command requires the food bank storage file to be rewritten after execution.","lastModifiedDate":"2021-10-21"},{"lineNumber":128,"author":{"gitId":"tlyi"},"content":"     *","lastModifiedDate":"2021-10-21"},{"lineNumber":129,"author":{"gitId":"tlyi"},"content":"     * @param command Command that has just been executed","lastModifiedDate":"2021-10-21"},{"lineNumber":130,"author":{"gitId":"tlyi"},"content":"     * @return True if food bank storage file is to be rewritten after execution of the command","lastModifiedDate":"2021-10-21"},{"lineNumber":131,"author":{"gitId":"tlyi"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":132,"author":{"gitId":"tlyi"},"content":"    public static boolean requiresFoodBankStorageRewrite(Command command) {","lastModifiedDate":"2021-10-21"},{"lineNumber":133,"author":{"gitId":"tlyi"},"content":"        return command instanceof AddFoodBankCommand","lastModifiedDate":"2021-10-21"},{"lineNumber":134,"author":{"gitId":"xingjie99"},"content":"                || command instanceof DeleteFoodBankCommand","lastModifiedDate":"2021-10-24"},{"lineNumber":135,"author":{"gitId":"xingjie99"},"content":"                || command instanceof EditFoodBankCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":136,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":137,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":138,"author":{"gitId":"tlyi"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":139,"author":{"gitId":"tlyi"},"content":"     * Returns true if the command requires the exercise bank storage file to be rewritten after execution.","lastModifiedDate":"2021-10-21"},{"lineNumber":140,"author":{"gitId":"tlyi"},"content":"     *","lastModifiedDate":"2021-10-21"},{"lineNumber":141,"author":{"gitId":"tlyi"},"content":"     * @param command Command that has just been executed","lastModifiedDate":"2021-10-21"},{"lineNumber":142,"author":{"gitId":"tlyi"},"content":"     * @return True if food bank storage file is to be rewritten after execution of the command","lastModifiedDate":"2021-10-21"},{"lineNumber":143,"author":{"gitId":"tlyi"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":144,"author":{"gitId":"tlyi"},"content":"    public static boolean requiresExerciseBankStorageRewrite(Command command) {","lastModifiedDate":"2021-10-21"},{"lineNumber":145,"author":{"gitId":"tlyi"},"content":"        return command instanceof AddExerciseBankCommand","lastModifiedDate":"2021-10-21"},{"lineNumber":146,"author":{"gitId":"xingjie99"},"content":"                || command instanceof DeleteExerciseBankCommand","lastModifiedDate":"2021-10-24"},{"lineNumber":147,"author":{"gitId":"xingjie99"},"content":"                || command instanceof EditExerciseBankCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":148,"author":{"gitId":"xingjie99"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":149,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":150,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":151,"author":{"gitId":"tlyi"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"weidak":3,"tttyyzzz":1,"xingjie99":16,"tryyang2001":5,"tlyi":126}},{"path":"src/main/java/seedu/duke/logic/commands/CommandMessages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.logic.commands;","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":3,"author":{"gitId":"tryyang2001"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-10-28"},{"lineNumber":4,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":5,"author":{"gitId":"tlyi"},"content":"/**","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"tlyi"},"content":" * Contains all the general error messages that can be returned from Command classes.","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"tlyi"},"content":" */","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"tlyi"},"content":"public class CommandMessages {","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"tlyi"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d styling \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-28"},{"lineNumber":10,"author":{"gitId":"tlyi"},"content":"    public static final String LS \u003d System.lineSeparator();","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"tlyi"},"content":"    public static final String TAB \u003d \"\\t\";","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"tlyi"},"content":"    public static final String INDENTED_LS \u003d CommandMessages.LS + TAB;","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"tlyi"},"content":"    public static final String QUOTATION \u003d \"\\\"\";","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"tlyi"},"content":"    public static final String LONG_SPACE \u003d \"              \";","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"tlyi"},"content":"    public static final String BANK_SPACE \u003d \"          \";","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"tryyang2001"},"content":"    public static final DateTimeFormatter DATE_FORMATTER \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy\");","lastModifiedDate":"2021-10-28"},{"lineNumber":17,"author":{"gitId":"tryyang2001"},"content":"    public static final DateTimeFormatter TIME_FORMATTER \u003d DateTimeFormatter.ofPattern(\"HH:mm\");","lastModifiedDate":"2021-10-28"},{"lineNumber":18,"author":{"gitId":"xingjie99"},"content":"    public static final int ONE_YEAR \u003d 1;","lastModifiedDate":"2021-11-02"},{"lineNumber":19,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":20,"author":{"gitId":"tlyi"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d item type prefixes \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-28"},{"lineNumber":21,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_EXERCISE_LIST_FORMAT \u003d","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"tlyi"},"content":"            Command.COMMAND_PREFIX_EXERCISE + Command.COMMAND_PREFIX_DELIMITER + LONG_SPACE + \"exercise list\";","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_FOOD_LIST_FORMAT \u003d","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"tlyi"},"content":"            Command.COMMAND_PREFIX_FOOD + Command.COMMAND_PREFIX_DELIMITER + LONG_SPACE + \"food list\";","lastModifiedDate":"2021-10-27"},{"lineNumber":25,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_EXERCISE_BANK_FORMAT \u003d","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"tlyi"},"content":"            Command.COMMAND_PREFIX_EXERCISE_BANK + Command.COMMAND_PREFIX_DELIMITER + BANK_SPACE + \"exercise bank\";","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_FOOD_BANK_FORMAT \u003d","lastModifiedDate":"2021-10-27"},{"lineNumber":28,"author":{"gitId":"tlyi"},"content":"            Command.COMMAND_PREFIX_FOOD_BANK + Command.COMMAND_PREFIX_DELIMITER + BANK_SPACE + \"food bank\";","lastModifiedDate":"2021-10-27"},{"lineNumber":29,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_RECURRING_EXERCISE_FORMAT \u003d","lastModifiedDate":"2021-10-28"},{"lineNumber":30,"author":{"gitId":"tlyi"},"content":"            Command.COMMAND_PREFIX_RECURRING + Command.COMMAND_PREFIX_DELIMITER + LONG_SPACE + \"recurring exercise\";","lastModifiedDate":"2021-10-28"},{"lineNumber":31,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":32,"author":{"gitId":"tlyi"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d attribute prefixes and description \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-28"},{"lineNumber":33,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_NAME_FORMAT \u003d","lastModifiedDate":"2021-10-28"},{"lineNumber":34,"author":{"gitId":"tlyi"},"content":"            Command.COMMAND_PREFIX_NAME + Command.COMMAND_PREFIX_DELIMITER + LONG_SPACE + \"name\";","lastModifiedDate":"2021-10-28"},{"lineNumber":35,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_HEIGHT_FORMAT \u003d","lastModifiedDate":"2021-10-28"},{"lineNumber":36,"author":{"gitId":"tlyi"},"content":"            Command.COMMAND_PREFIX_HEIGHT + Command.COMMAND_PREFIX_DELIMITER + LONG_SPACE + \"height (cm)\";","lastModifiedDate":"2021-10-28"},{"lineNumber":37,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_WEIGHT_FORMAT \u003d","lastModifiedDate":"2021-10-28"},{"lineNumber":38,"author":{"gitId":"tlyi"},"content":"            Command.COMMAND_PREFIX_WEIGHT + Command.COMMAND_PREFIX_DELIMITER + LONG_SPACE + \"weight (kg)\";","lastModifiedDate":"2021-10-28"},{"lineNumber":39,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_AGE_FORMAT \u003d","lastModifiedDate":"2021-10-28"},{"lineNumber":40,"author":{"gitId":"tlyi"},"content":"            Command.COMMAND_PREFIX_AGE + Command.COMMAND_PREFIX_DELIMITER + LONG_SPACE + \"age\";","lastModifiedDate":"2021-10-28"},{"lineNumber":41,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_GOAL_FORMAT \u003d","lastModifiedDate":"2021-10-28"},{"lineNumber":42,"author":{"gitId":"tlyi"},"content":"            Command.COMMAND_PREFIX_GOAL + Command.COMMAND_PREFIX_DELIMITER + LONG_SPACE + \"calorie goal\";","lastModifiedDate":"2021-10-28"},{"lineNumber":43,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_GENDER_FORMAT \u003d","lastModifiedDate":"2021-10-28"},{"lineNumber":44,"author":{"gitId":"tlyi"},"content":"            Command.COMMAND_PREFIX_GENDER + Command.COMMAND_PREFIX_DELIMITER + LONG_SPACE + \"gender (M/F)\";","lastModifiedDate":"2021-10-28"},{"lineNumber":45,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_ACTIVITY_FACTOR_FORMAT \u003d","lastModifiedDate":"2021-10-28"},{"lineNumber":46,"author":{"gitId":"tlyi"},"content":"            Command.COMMAND_PREFIX_ACTIVITY_FACTOR + Command.COMMAND_PREFIX_DELIMITER + LONG_SPACE","lastModifiedDate":"2021-10-28"},{"lineNumber":47,"author":{"gitId":"tlyi"},"content":"                    + \"activity factor (1: Sedentary - 5: Extra Active)\";","lastModifiedDate":"2021-10-28"},{"lineNumber":48,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_ITEM_CALORIES_FORMAT \u003d","lastModifiedDate":"2021-10-28"},{"lineNumber":49,"author":{"gitId":"tlyi"},"content":"            Command.COMMAND_PREFIX_CALORIES + Command.COMMAND_PREFIX_DELIMITER + LONG_SPACE + \"calories\";","lastModifiedDate":"2021-10-28"},{"lineNumber":50,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_UPCOMING_EXERCISE_LIST_FORMAT \u003d","lastModifiedDate":"2021-10-27"},{"lineNumber":51,"author":{"gitId":"tlyi"},"content":"            Command.COMMAND_PREFIX_UPCOMING_EXERCISE + Command.COMMAND_PREFIX_DELIMITER","lastModifiedDate":"2021-10-27"},{"lineNumber":52,"author":{"gitId":"tlyi"},"content":"                    + LONG_SPACE + \"upcoming exercise list\";","lastModifiedDate":"2021-10-27"},{"lineNumber":53,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_ITEM_DATE_FORMAT \u003d","lastModifiedDate":"2021-10-28"},{"lineNumber":54,"author":{"gitId":"tlyi"},"content":"            Command.COMMAND_PREFIX_DATE + Command.COMMAND_PREFIX_DELIMITER + LONG_SPACE + \"date (DD-MM-YYYY)\";","lastModifiedDate":"2021-10-28"},{"lineNumber":55,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":56,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":57,"author":{"gitId":"tlyi"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d invalid attribute messages \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-28"},{"lineNumber":58,"author":{"gitId":"tryyang2001"},"content":"    public static final String MESSAGE_INVALID_CALORIES \u003d","lastModifiedDate":"2021-11-04"},{"lineNumber":59,"author":{"gitId":"tlyi"},"content":"            \"Please input calories as a whole number from 1 to 10 000!\";","lastModifiedDate":"2021-11-04"},{"lineNumber":60,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_EMPTY_EXERCISE_LIST \u003d \"No exercise items yet in the past 7 days!\";","lastModifiedDate":"2021-10-28"},{"lineNumber":61,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_EMPTY_FUTURE_EXERCISE_LIST \u003d \"No future exercise items yet!\";","lastModifiedDate":"2021-10-28"},{"lineNumber":62,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_EMPTY_FOOD_LIST \u003d \"No food items yet in the past 7 days!\";","lastModifiedDate":"2021-10-28"},{"lineNumber":63,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_EMPTY_EXERCISE_BANK \u003d \"No exercise items yet in the exercise bank!\";","lastModifiedDate":"2021-10-28"},{"lineNumber":64,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_EMPTY_FOOD_BANK \u003d \"No food items yet in the food bank!\";","lastModifiedDate":"2021-10-28"},{"lineNumber":65,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_ONLY_ONE_IN_LIST \u003d \"You have only 1 item in the list!\";","lastModifiedDate":"2021-10-28"},{"lineNumber":66,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_LIST_OUT_OF_BOUNDS \u003d \"Please input a valid item number from 1 to %s!\";","lastModifiedDate":"2021-11-04"},{"lineNumber":67,"author":{"gitId":"tryyang2001"},"content":"    public static final String MESSAGE_FOOD_NOT_FOUND \u003d \"Food item with index %d, date %s and time %s \"","lastModifiedDate":"2021-10-28"},{"lineNumber":68,"author":{"gitId":"tryyang2001"},"content":"            + \"is not found in the food list!\";","lastModifiedDate":"2021-10-28"},{"lineNumber":69,"author":{"gitId":"tryyang2001"},"content":"    public static final String MESSAGE_EXERCISE_NOT_FOUND \u003d \"Exercise item with index %d and date %s \"","lastModifiedDate":"2021-10-28"},{"lineNumber":70,"author":{"gitId":"tryyang2001"},"content":"            + \"is not found in the exercise list!\";","lastModifiedDate":"2021-10-28"},{"lineNumber":71,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_INVALID_EXERCISE_NOT_IN_BANK \u003d \"%s was not found in the exercise bank! \"","lastModifiedDate":"2021-10-28"},{"lineNumber":72,"author":{"gitId":"tlyi"},"content":"            + \"Please specify the calories for this item using the prefix \"","lastModifiedDate":"2021-10-28"},{"lineNumber":73,"author":{"gitId":"tlyi"},"content":"            + QUOTATION + Command.COMMAND_PREFIX_CALORIES + Command.COMMAND_PREFIX_DELIMITER + QUOTATION + \"!\";","lastModifiedDate":"2021-10-28"},{"lineNumber":74,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_INVALID_FOOD_NOT_IN_BANK \u003d \"%s was not found in the food bank! \"","lastModifiedDate":"2021-10-28"},{"lineNumber":75,"author":{"gitId":"tlyi"},"content":"            + \"Please specify the calories for this item using the prefix \"","lastModifiedDate":"2021-10-28"},{"lineNumber":76,"author":{"gitId":"tlyi"},"content":"            + QUOTATION + Command.COMMAND_PREFIX_CALORIES + Command.COMMAND_PREFIX_DELIMITER + QUOTATION + \"!\";","lastModifiedDate":"2021-10-28"},{"lineNumber":77,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_FOOD_ALREADY_EXISTS_IN_BANK \u003d \"The food with name \"","lastModifiedDate":"2021-10-28"},{"lineNumber":78,"author":{"gitId":"tlyi"},"content":"            + QUOTATION + \"%s\" + QUOTATION","lastModifiedDate":"2021-10-28"},{"lineNumber":79,"author":{"gitId":"tlyi"},"content":"            + \" already exists in the food bank! (Names in the bank are case insensitive)\"","lastModifiedDate":"2021-11-04"},{"lineNumber":80,"author":{"gitId":"tlyi"},"content":"            + LS + \"Try using another name, or delete/edit the existing item first!\";","lastModifiedDate":"2021-10-28"},{"lineNumber":81,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_EXERCISE_ALREADY_EXISTS_IN_BANK \u003d \"The exercise with name \"","lastModifiedDate":"2021-10-28"},{"lineNumber":82,"author":{"gitId":"tlyi"},"content":"            + QUOTATION + \"%s\" + QUOTATION","lastModifiedDate":"2021-10-28"},{"lineNumber":83,"author":{"gitId":"tlyi"},"content":"            + \" already exists in the exercise bank! (Names are case insensitive)\"","lastModifiedDate":"2021-10-28"},{"lineNumber":84,"author":{"gitId":"tlyi"},"content":"            + LS + \"Try using another name, or delete/edit the existing item first!\";","lastModifiedDate":"2021-10-28"},{"lineNumber":85,"author":{"gitId":"xingjie99"},"content":"    public static final String MESSAGE_EXERCISE_NOT_WITHIN_ONE_YEAR \u003d \"Fitbot is only able to help you keep a record \"","lastModifiedDate":"2021-11-02"},{"lineNumber":86,"author":{"gitId":"xingjie99"},"content":"            + \"of one year\u0027s worth of upcoming exercises.\"","lastModifiedDate":"2021-11-02"},{"lineNumber":87,"author":{"gitId":"xingjie99"},"content":"            + LS + \"Please ensure that the input date is within a year from today.\";","lastModifiedDate":"2021-11-02"},{"lineNumber":88,"author":{"gitId":"xingjie99"},"content":"    public static final String MESSAGE_RECURRING_EXERCISE_NOT_WITHIN_ONE_YEAR \u003d \"Fitbot is only able to help you keep \"","lastModifiedDate":"2021-11-02"},{"lineNumber":89,"author":{"gitId":"xingjie99"},"content":"            + \"a record of one year\u0027s worth of upcoming exercises.\"","lastModifiedDate":"2021-11-02"},{"lineNumber":90,"author":{"gitId":"xingjie99"},"content":"            + LS + \"Please ensure that both your input start date and end date is within a year from today.\";","lastModifiedDate":"2021-11-02"},{"lineNumber":91,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":92,"author":{"gitId":"tlyi"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d command format suggestions \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-28"},{"lineNumber":93,"author":{"gitId":"tlyi"},"content":"    //add command","lastModifiedDate":"2021-10-28"},{"lineNumber":94,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_ADD_COMMAND_INVALID_FORMAT \u003d","lastModifiedDate":"2021-10-27"},{"lineNumber":95,"author":{"gitId":"tlyi"},"content":"            \"Oops! Invalid format! Trying to add to your lists?\" + LS","lastModifiedDate":"2021-10-27"},{"lineNumber":96,"author":{"gitId":"tlyi"},"content":"                    + \"Type \" + QUOTATION + Command.COMMAND_WORD_ADD + QUOTATION","lastModifiedDate":"2021-10-27"},{"lineNumber":97,"author":{"gitId":"tlyi"},"content":"                    + \" followed by one of the following prefixes:\" + LS + INDENTED_LS","lastModifiedDate":"2021-10-27"},{"lineNumber":98,"author":{"gitId":"tlyi"},"content":"                    + MESSAGE_EXERCISE_LIST_FORMAT + INDENTED_LS","lastModifiedDate":"2021-10-27"},{"lineNumber":99,"author":{"gitId":"tlyi"},"content":"                    + MESSAGE_FOOD_LIST_FORMAT + INDENTED_LS","lastModifiedDate":"2021-10-27"},{"lineNumber":100,"author":{"gitId":"tlyi"},"content":"                    + MESSAGE_EXERCISE_BANK_FORMAT + INDENTED_LS","lastModifiedDate":"2021-10-27"},{"lineNumber":101,"author":{"gitId":"tlyi"},"content":"                    + MESSAGE_FOOD_BANK_FORMAT + INDENTED_LS","lastModifiedDate":"2021-10-27"},{"lineNumber":102,"author":{"gitId":"tlyi"},"content":"                    + MESSAGE_RECURRING_EXERCISE_FORMAT + LS + LS","lastModifiedDate":"2021-10-27"},{"lineNumber":103,"author":{"gitId":"tlyi"},"content":"                    + \"Type \" + QUOTATION + HelpCommand.COMMAND_WORD + QUOTATION","lastModifiedDate":"2021-10-27"},{"lineNumber":104,"author":{"gitId":"tlyi"},"content":"                    + \" if you need more details on how to add to each list!\";","lastModifiedDate":"2021-10-27"},{"lineNumber":105,"author":{"gitId":"tlyi"},"content":"    //delete command","lastModifiedDate":"2021-10-28"},{"lineNumber":106,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_DELETE_COMMAND_INVALID_FORMAT \u003d","lastModifiedDate":"2021-10-27"},{"lineNumber":107,"author":{"gitId":"tlyi"},"content":"            \"Oops! Invalid format! Trying to delete from your lists?\" + LS","lastModifiedDate":"2021-10-27"},{"lineNumber":108,"author":{"gitId":"tlyi"},"content":"                    + \"Type \" + QUOTATION + Command.COMMAND_WORD_DELETE + QUOTATION","lastModifiedDate":"2021-10-27"},{"lineNumber":109,"author":{"gitId":"tlyi"},"content":"                    + \" followed by one of the following prefixes:\" + LS + INDENTED_LS","lastModifiedDate":"2021-10-27"},{"lineNumber":110,"author":{"gitId":"tlyi"},"content":"                    + MESSAGE_EXERCISE_LIST_FORMAT + INDENTED_LS","lastModifiedDate":"2021-10-27"},{"lineNumber":111,"author":{"gitId":"tlyi"},"content":"                    + MESSAGE_FOOD_LIST_FORMAT + INDENTED_LS","lastModifiedDate":"2021-10-27"},{"lineNumber":112,"author":{"gitId":"tlyi"},"content":"                    + MESSAGE_EXERCISE_BANK_FORMAT + INDENTED_LS","lastModifiedDate":"2021-10-27"},{"lineNumber":113,"author":{"gitId":"tlyi"},"content":"                    + MESSAGE_FOOD_BANK_FORMAT + INDENTED_LS","lastModifiedDate":"2021-10-27"},{"lineNumber":114,"author":{"gitId":"tlyi"},"content":"                    + MESSAGE_UPCOMING_EXERCISE_LIST_FORMAT + LS + LS","lastModifiedDate":"2021-10-27"},{"lineNumber":115,"author":{"gitId":"tlyi"},"content":"                    + \"Type \" + QUOTATION + HelpCommand.COMMAND_WORD + QUOTATION","lastModifiedDate":"2021-10-27"},{"lineNumber":116,"author":{"gitId":"tlyi"},"content":"                    + \" if you need more details on how to delete from each list!\";","lastModifiedDate":"2021-10-27"},{"lineNumber":117,"author":{"gitId":"tlyi"},"content":"    //view command","lastModifiedDate":"2021-10-28"},{"lineNumber":118,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_VIEW_COMMAND_INVALID_FORMAT \u003d","lastModifiedDate":"2021-10-27"},{"lineNumber":119,"author":{"gitId":"tlyi"},"content":"            \"Oops! Invalid format! Trying to view your lists?\" + LS","lastModifiedDate":"2021-10-27"},{"lineNumber":120,"author":{"gitId":"tlyi"},"content":"                    + \"Type \" + QUOTATION + Command.COMMAND_WORD_VIEW + QUOTATION","lastModifiedDate":"2021-10-27"},{"lineNumber":121,"author":{"gitId":"tlyi"},"content":"                    + \" followed by one of the following prefixes:\" + LS + INDENTED_LS","lastModifiedDate":"2021-10-27"},{"lineNumber":122,"author":{"gitId":"tlyi"},"content":"                    + MESSAGE_EXERCISE_LIST_FORMAT + INDENTED_LS","lastModifiedDate":"2021-10-27"},{"lineNumber":123,"author":{"gitId":"tlyi"},"content":"                    + MESSAGE_FOOD_LIST_FORMAT + INDENTED_LS","lastModifiedDate":"2021-10-27"},{"lineNumber":124,"author":{"gitId":"tlyi"},"content":"                    + MESSAGE_EXERCISE_BANK_FORMAT + INDENTED_LS","lastModifiedDate":"2021-10-27"},{"lineNumber":125,"author":{"gitId":"tlyi"},"content":"                    + MESSAGE_FOOD_BANK_FORMAT + INDENTED_LS","lastModifiedDate":"2021-10-27"},{"lineNumber":126,"author":{"gitId":"tlyi"},"content":"                    + MESSAGE_UPCOMING_EXERCISE_LIST_FORMAT + LS + LS","lastModifiedDate":"2021-10-27"},{"lineNumber":127,"author":{"gitId":"tlyi"},"content":"                    + \"E.G: view e/\";","lastModifiedDate":"2021-10-27"},{"lineNumber":128,"author":{"gitId":"tlyi"},"content":"    //edit command","lastModifiedDate":"2021-10-28"},{"lineNumber":129,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_EDIT_COMMAND_INVALID_FORMAT \u003d","lastModifiedDate":"2021-10-27"},{"lineNumber":130,"author":{"gitId":"tlyi"},"content":"            \"Oops! Invalid format! Trying to edit your lists?\" + LS","lastModifiedDate":"2021-10-27"},{"lineNumber":131,"author":{"gitId":"tlyi"},"content":"                    + \"Type \" + QUOTATION + Command.COMMAND_WORD_EDIT + QUOTATION","lastModifiedDate":"2021-10-27"},{"lineNumber":132,"author":{"gitId":"tlyi"},"content":"                    + \" followed by one of the following prefixes:\" + LS + INDENTED_LS","lastModifiedDate":"2021-10-27"},{"lineNumber":133,"author":{"gitId":"tlyi"},"content":"                    + MESSAGE_EXERCISE_BANK_FORMAT + INDENTED_LS","lastModifiedDate":"2021-10-27"},{"lineNumber":134,"author":{"gitId":"tlyi"},"content":"                    + MESSAGE_FOOD_BANK_FORMAT + INDENTED_LS","lastModifiedDate":"2021-10-27"},{"lineNumber":135,"author":{"gitId":"tlyi"},"content":"                    + MESSAGE_UPCOMING_EXERCISE_LIST_FORMAT + LS + LS","lastModifiedDate":"2021-10-27"},{"lineNumber":136,"author":{"gitId":"tlyi"},"content":"                    + \"Type \" + QUOTATION + HelpCommand.COMMAND_WORD + QUOTATION","lastModifiedDate":"2021-10-27"},{"lineNumber":137,"author":{"gitId":"tlyi"},"content":"                    + \" if you need more details on how to edit each list!\";","lastModifiedDate":"2021-10-27"},{"lineNumber":138,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_EDIT_BANK_NEED_DETAILS \u003d","lastModifiedDate":"2021-10-27"},{"lineNumber":139,"author":{"gitId":"tlyi"},"content":"            \"Please specify what you wish to change about this item using the following prefixes:\" + INDENTED_LS","lastModifiedDate":"2021-10-27"},{"lineNumber":140,"author":{"gitId":"tlyi"},"content":"                    + MESSAGE_NAME_FORMAT + INDENTED_LS","lastModifiedDate":"2021-10-28"},{"lineNumber":141,"author":{"gitId":"tlyi"},"content":"                    + MESSAGE_ITEM_CALORIES_FORMAT;","lastModifiedDate":"2021-10-27"},{"lineNumber":142,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_EDIT_UPCOMING_EXERCISE_LIST_NEED_DETAILS \u003d","lastModifiedDate":"2021-10-27"},{"lineNumber":143,"author":{"gitId":"tlyi"},"content":"            \"Please specify what you wish to change about this item using the following prefixes:\" + INDENTED_LS","lastModifiedDate":"2021-10-27"},{"lineNumber":144,"author":{"gitId":"tlyi"},"content":"                    + MESSAGE_NAME_FORMAT + INDENTED_LS","lastModifiedDate":"2021-10-28"},{"lineNumber":145,"author":{"gitId":"tlyi"},"content":"                    + MESSAGE_ITEM_CALORIES_FORMAT + INDENTED_LS","lastModifiedDate":"2021-10-27"},{"lineNumber":146,"author":{"gitId":"tlyi"},"content":"                    + MESSAGE_ITEM_DATE_FORMAT;","lastModifiedDate":"2021-10-27"},{"lineNumber":147,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":148,"author":{"gitId":"tlyi"},"content":"    //profile command","lastModifiedDate":"2021-10-28"},{"lineNumber":149,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_PROFILE_COMMAND_INVALID_FORMAT \u003d","lastModifiedDate":"2021-10-28"},{"lineNumber":150,"author":{"gitId":"tlyi"},"content":"            \"Oops! Invalid format! Trying to update your profile?\" + LS","lastModifiedDate":"2021-10-28"},{"lineNumber":151,"author":{"gitId":"tlyi"},"content":"                    + \"Type \" + QUOTATION + Command.COMMAND_WORD_PROFILE + QUOTATION","lastModifiedDate":"2021-10-28"},{"lineNumber":152,"author":{"gitId":"tlyi"},"content":"                    + \" followed by any of the following prefixes to specify what you are changing!:\" + LS + INDENTED_LS","lastModifiedDate":"2021-10-28"},{"lineNumber":153,"author":{"gitId":"tlyi"},"content":"                    + MESSAGE_NAME_FORMAT + INDENTED_LS","lastModifiedDate":"2021-10-28"},{"lineNumber":154,"author":{"gitId":"tlyi"},"content":"                    + MESSAGE_HEIGHT_FORMAT + INDENTED_LS","lastModifiedDate":"2021-10-28"},{"lineNumber":155,"author":{"gitId":"tlyi"},"content":"                    + MESSAGE_WEIGHT_FORMAT + INDENTED_LS","lastModifiedDate":"2021-11-04"},{"lineNumber":156,"author":{"gitId":"tlyi"},"content":"                    + MESSAGE_AGE_FORMAT + INDENTED_LS","lastModifiedDate":"2021-10-28"},{"lineNumber":157,"author":{"gitId":"tlyi"},"content":"                    + MESSAGE_GOAL_FORMAT + INDENTED_LS","lastModifiedDate":"2021-10-28"},{"lineNumber":158,"author":{"gitId":"tlyi"},"content":"                    + MESSAGE_GENDER_FORMAT + INDENTED_LS","lastModifiedDate":"2021-10-28"},{"lineNumber":159,"author":{"gitId":"tlyi"},"content":"                    + MESSAGE_ACTIVITY_FACTOR_FORMAT + LS + LS","lastModifiedDate":"2021-10-28"},{"lineNumber":160,"author":{"gitId":"tlyi"},"content":"                    + \"You can use any number of prefixes depending on your needs but please include at least one!\" + LS","lastModifiedDate":"2021-10-28"},{"lineNumber":161,"author":{"gitId":"tlyi"},"content":"                    + \"E.G: profile n/John\";","lastModifiedDate":"2021-10-28"},{"lineNumber":162,"author":{"gitId":"tlyi"},"content":"}","lastModifiedDate":"2021-10-27"},{"lineNumber":163,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":164,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"tryyang2001":9,"xingjie99":7,"tlyi":148}},{"path":"src/main/java/seedu/duke/logic/commands/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.logic.commands;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"tlyi"},"content":"/**","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"tlyi"},"content":" * Represents the result of the execution of the commands to be displayed to the user.","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"tlyi"},"content":" */","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"tlyi"},"content":"public class CommandResult {","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"tlyi"},"content":"    public final String messageToBeShown;","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"tlyi"},"content":"    private boolean isBye \u003d false;","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"tlyi"},"content":"    public CommandResult(String messageToBeShown) {","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"tlyi"},"content":"        this.messageToBeShown \u003d messageToBeShown;","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"tlyi"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"tlyi"},"content":"    public String toString() {","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"tlyi"},"content":"        return this.messageToBeShown;","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"tlyi"},"content":"    public boolean isBye() {","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"tlyi"},"content":"        return isBye;","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"tlyi"},"content":"    public void setBye(boolean bye) {","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"tlyi"},"content":"        isBye \u003d bye;","lastModifiedDate":"2021-10-27"},{"lineNumber":25,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"tlyi"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"tlyi":26}},{"path":"src/main/java/seedu/duke/logic/commands/DeleteExerciseBankCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.logic.commands;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"tlyi"},"content":"import seedu.duke.data.item.Item;","lastModifiedDate":"2021-11-04"},{"lineNumber":4,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"xingjie99"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-11-02"},{"lineNumber":6,"author":{"gitId":"tlyi"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"tlyi"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"tlyi"},"content":"/**","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"tlyi"},"content":" * Represents the command that when executed, deletes an Exercise item from the ExerciseBank.","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"tlyi"},"content":" */","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"tlyi"},"content":"public class DeleteExerciseBankCommand extends Command {","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_COMMAND_FORMAT \u003d CommandMessages.QUOTATION + COMMAND_WORD_DELETE","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"tlyi"},"content":"            + \" \" + COMMAND_PREFIX_EXERCISE_BANK + COMMAND_PREFIX_DELIMITER + \"X\" + CommandMessages.QUOTATION","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"tlyi"},"content":"            + \", where X is the item number in the exercise bank list\";","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"An exercise item has been deleted from the exercise bank:\"","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"tlyi"},"content":"            + CommandMessages.INDENTED_LS + \"%s\";","lastModifiedDate":"2021-11-04"},{"lineNumber":18,"author":{"gitId":"tlyi"},"content":"    public static  final String MESSAGE_ITEMS_LEFT \u003d","lastModifiedDate":"2021-11-04"},{"lineNumber":19,"author":{"gitId":"tlyi"},"content":"            CommandMessages.LS + \"Number of exercise item(s) left in the exercise bank: %d\";","lastModifiedDate":"2021-11-04"},{"lineNumber":20,"author":{"gitId":"tlyi"},"content":"    private static final String MESSAGE_EXERCISE_CLEAR \u003d \"All exercise items in the exercise bank have been removed.\";","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"tlyi"},"content":"    public static final String[] EXPECTED_PREFIXES \u003d {COMMAND_PREFIX_EXERCISE_BANK};","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"xingjie99"},"content":"    private static final String MESSAGE_REMOVED_MULTIPLE_EXERCISE_BANK_ITEM \u003d \"All of the following exercise bank \"","lastModifiedDate":"2021-11-04"},{"lineNumber":23,"author":{"gitId":"xingjie99"},"content":"            + \"items have been deleted:\";","lastModifiedDate":"2021-11-04"},{"lineNumber":24,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"tlyi"},"content":"    private static Logger logger \u003d Logger.getLogger(DeleteExerciseBankCommand.class.getName());","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"tlyi"},"content":"    private boolean isClear \u003d false;","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"xingjie99"},"content":"    private ArrayList\u003cInteger\u003e itemIndexArray;","lastModifiedDate":"2021-11-02"},{"lineNumber":30,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"tlyi"},"content":"    public DeleteExerciseBankCommand(boolean isClear) {","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"tlyi"},"content":"        this.isClear \u003d isClear;","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"xingjie99"},"content":"    public DeleteExerciseBankCommand(ArrayList\u003cInteger\u003e itemIndexArray) {","lastModifiedDate":"2021-11-02"},{"lineNumber":36,"author":{"gitId":"xingjie99"},"content":"        this.itemIndexArray \u003d itemIndexArray;","lastModifiedDate":"2021-11-02"},{"lineNumber":37,"author":{"gitId":"xingjie99"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":38,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":39,"author":{"gitId":"tlyi"},"content":"    @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"tlyi"},"content":"    public CommandResult execute() {","lastModifiedDate":"2021-10-19"},{"lineNumber":41,"author":{"gitId":"xingjie99"},"content":"        if (super.exerciseBank.getSize() \u003d\u003d 0) {","lastModifiedDate":"2021-11-02"},{"lineNumber":42,"author":{"gitId":"tlyi"},"content":"            logger.log(Level.FINE, \"Exercise bank is empty.\");","lastModifiedDate":"2021-11-08"},{"lineNumber":43,"author":{"gitId":"xingjie99"},"content":"            return new CommandResult(CommandMessages.MESSAGE_EMPTY_EXERCISE_BANK);","lastModifiedDate":"2021-11-02"},{"lineNumber":44,"author":{"gitId":"xingjie99"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":45,"author":{"gitId":"tlyi"},"content":"        if (this.isClear) {","lastModifiedDate":"2021-10-19"},{"lineNumber":46,"author":{"gitId":"tlyi"},"content":"            logger.log(Level.FINE, \"Clearing exercise bank\");","lastModifiedDate":"2021-11-08"},{"lineNumber":47,"author":{"gitId":"tlyi"},"content":"            super.exerciseBank.clearList();","lastModifiedDate":"2021-10-19"},{"lineNumber":48,"author":{"gitId":"tlyi"},"content":"            return new CommandResult(MESSAGE_EXERCISE_CLEAR);","lastModifiedDate":"2021-10-19"},{"lineNumber":49,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":50,"author":{"gitId":"tlyi"},"content":"        logger.log(Level.FINE, \"Trying to delete item now\");","lastModifiedDate":"2021-11-08"},{"lineNumber":51,"author":{"gitId":"tlyi"},"content":"        try {","lastModifiedDate":"2021-10-19"},{"lineNumber":52,"author":{"gitId":"tlyi"},"content":"            if ((itemIndexArray.size() \u003d\u003d 1)) {","lastModifiedDate":"2021-11-04"},{"lineNumber":53,"author":{"gitId":"tlyi"},"content":"                Item item \u003d super.exerciseBank.deleteItem(itemIndexArray.get(0));","lastModifiedDate":"2021-11-04"},{"lineNumber":54,"author":{"gitId":"tlyi"},"content":"                return new CommandResult(","lastModifiedDate":"2021-11-04"},{"lineNumber":55,"author":{"gitId":"tlyi"},"content":"                        String.format(MESSAGE_SUCCESS, item.toStringWithoutDateAndTime())","lastModifiedDate":"2021-11-04"},{"lineNumber":56,"author":{"gitId":"tlyi"},"content":"                                + String.format(MESSAGE_ITEMS_LEFT, super.exerciseBank.getSize()));","lastModifiedDate":"2021-11-04"},{"lineNumber":57,"author":{"gitId":"tlyi"},"content":"            }","lastModifiedDate":"2021-11-04"},{"lineNumber":58,"author":{"gitId":"xingjie99"},"content":"            if ((itemIndexArray.stream()","lastModifiedDate":"2021-11-04"},{"lineNumber":59,"author":{"gitId":"tlyi"},"content":"                    .filter(number -\u003e number \u003e super.exerciseBank.getSize() - 1).count()) \u003e 0) {","lastModifiedDate":"2021-11-04"},{"lineNumber":60,"author":{"gitId":"tlyi"},"content":"                if (super.exerciseBank.getSize() \u003d\u003d 1) {","lastModifiedDate":"2021-11-07"},{"lineNumber":61,"author":{"gitId":"tlyi"},"content":"                    return new CommandResult(CommandMessages.MESSAGE_ONLY_ONE_IN_LIST);","lastModifiedDate":"2021-11-07"},{"lineNumber":62,"author":{"gitId":"tlyi"},"content":"                }","lastModifiedDate":"2021-11-07"},{"lineNumber":63,"author":{"gitId":"xingjie99"},"content":"                return new CommandResult(String.format(","lastModifiedDate":"2021-11-04"},{"lineNumber":64,"author":{"gitId":"xingjie99"},"content":"                        CommandMessages.MESSAGE_LIST_OUT_OF_BOUNDS, super.exerciseBank.getSize()));","lastModifiedDate":"2021-11-04"},{"lineNumber":65,"author":{"gitId":"xingjie99"},"content":"            } else {","lastModifiedDate":"2021-11-04"},{"lineNumber":66,"author":{"gitId":"xingjie99"},"content":"                String listOfDeletedExerciseBank \u003d super.exerciseBank.deleteMultipleItems(this.itemIndexArray);","lastModifiedDate":"2021-11-04"},{"lineNumber":67,"author":{"gitId":"xingjie99"},"content":"                return new CommandResult(MESSAGE_REMOVED_MULTIPLE_EXERCISE_BANK_ITEM","lastModifiedDate":"2021-11-04"},{"lineNumber":68,"author":{"gitId":"tlyi"},"content":"                        + listOfDeletedExerciseBank","lastModifiedDate":"2021-11-04"},{"lineNumber":69,"author":{"gitId":"tlyi"},"content":"                        + String.format(MESSAGE_ITEMS_LEFT, super.exerciseBank.getSize()));","lastModifiedDate":"2021-11-04"},{"lineNumber":70,"author":{"gitId":"xingjie99"},"content":"            }","lastModifiedDate":"2021-11-04"},{"lineNumber":71,"author":{"gitId":"tlyi"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-10-19"},{"lineNumber":72,"author":{"gitId":"tlyi"},"content":"            logger.log(Level.FINE, \"Detected invalid exercise item index.\");","lastModifiedDate":"2021-11-08"},{"lineNumber":73,"author":{"gitId":"tlyi"},"content":"            if (super.exerciseBank.getSize() \u003d\u003d 1) {","lastModifiedDate":"2021-10-19"},{"lineNumber":74,"author":{"gitId":"tlyi"},"content":"                return new CommandResult(CommandMessages.MESSAGE_ONLY_ONE_IN_LIST);","lastModifiedDate":"2021-10-27"},{"lineNumber":75,"author":{"gitId":"tlyi"},"content":"            }","lastModifiedDate":"2021-10-19"},{"lineNumber":76,"author":{"gitId":"tlyi"},"content":"            return new CommandResult(String.format(","lastModifiedDate":"2021-10-27"},{"lineNumber":77,"author":{"gitId":"tlyi"},"content":"                    CommandMessages.MESSAGE_LIST_OUT_OF_BOUNDS, super.exerciseBank.getSize()));","lastModifiedDate":"2021-10-27"},{"lineNumber":78,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":79,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":80,"author":{"gitId":"tlyi"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"xingjie99":18,"tlyi":62}},{"path":"src/main/java/seedu/duke/logic/commands/DeleteExerciseCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.logic.commands;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"tlyi"},"content":"import seedu.duke.data.item.exercise.Exercise;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"tlyi"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"xingjie99"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"xingjie99"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"tlyi"},"content":"/**","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"tlyi"},"content":" * Represents the command that when executed, deletes an Exercise item from the ExerciseList.","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"tlyi"},"content":" */","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"tlyi"},"content":"public class DeleteExerciseCommand extends Command {","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"An exercise item has been deleted:\"","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"tryyang2001"},"content":"            + CommandMessages.INDENTED_LS + \"%s\";","lastModifiedDate":"2021-10-28"},{"lineNumber":15,"author":{"gitId":"xingjie99"},"content":"    private static final String MESSAGE_EXERCISE_CLEAR \u003d \"All exercise items have been removed.\";","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"tryyang2001"},"content":"    private static Logger logger \u003d Logger.getLogger(DeleteExerciseCommand.class.getName());","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"tlyi"},"content":"    public static final String[] EXPECTED_PREFIXES \u003d {","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"tlyi"},"content":"            COMMAND_PREFIX_EXERCISE,","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"tlyi"},"content":"            COMMAND_PREFIX_DATE","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"tlyi"},"content":"    };","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"tlyi"},"content":"    private int itemIndex;","lastModifiedDate":"2021-10-30"},{"lineNumber":25,"author":{"gitId":"tlyi"},"content":"    private LocalDate date;","lastModifiedDate":"2021-10-30"},{"lineNumber":26,"author":{"gitId":"tryyang2001"},"content":"    private boolean isClear \u003d false;","lastModifiedDate":"2021-10-14"},{"lineNumber":27,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"tlyi"},"content":"    public DeleteExerciseCommand(int itemIndex, LocalDate date) {","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"tlyi"},"content":"        this.itemIndex \u003d itemIndex;","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"tlyi"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":32,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":33,"author":{"gitId":"tryyang2001"},"content":"    public DeleteExerciseCommand(boolean isClear) {","lastModifiedDate":"2021-10-14"},{"lineNumber":34,"author":{"gitId":"tlyi"},"content":"        this.isClear \u003d isClear;","lastModifiedDate":"2021-11-07"},{"lineNumber":35,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":36,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":37,"author":{"gitId":"tlyi"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":38,"author":{"gitId":"tlyi"},"content":"    public CommandResult execute() {","lastModifiedDate":"2021-10-10"},{"lineNumber":39,"author":{"gitId":"tryyang2001"},"content":"        if (this.isClear) {","lastModifiedDate":"2021-10-14"},{"lineNumber":40,"author":{"gitId":"tlyi"},"content":"            logger.log(Level.FINE, \"Clearing exercise list\");","lastModifiedDate":"2021-11-08"},{"lineNumber":41,"author":{"gitId":"tryyang2001"},"content":"            super.exerciseItems.clearList();","lastModifiedDate":"2021-10-19"},{"lineNumber":42,"author":{"gitId":"xingjie99"},"content":"            return new CommandResult(MESSAGE_EXERCISE_CLEAR);","lastModifiedDate":"2021-10-11"},{"lineNumber":43,"author":{"gitId":"xingjie99"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":44,"author":{"gitId":"tlyi"},"content":"        if (super.exerciseItems.getSize() \u003d\u003d 0) {","lastModifiedDate":"2021-10-11"},{"lineNumber":45,"author":{"gitId":"tlyi"},"content":"            logger.log(Level.FINE, \"Exercise list is empty.\");","lastModifiedDate":"2021-11-08"},{"lineNumber":46,"author":{"gitId":"tlyi"},"content":"            return new CommandResult(CommandMessages.MESSAGE_EMPTY_EXERCISE_LIST);","lastModifiedDate":"2021-10-27"},{"lineNumber":47,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":48,"author":{"gitId":"tlyi"},"content":"        logger.log(Level.FINE, \"Trying to delete item now\");","lastModifiedDate":"2021-11-08"},{"lineNumber":49,"author":{"gitId":"tlyi"},"content":"        try {","lastModifiedDate":"2021-10-11"},{"lineNumber":50,"author":{"gitId":"tlyi"},"content":"            Exercise deletedExercise;","lastModifiedDate":"2021-10-11"},{"lineNumber":51,"author":{"gitId":"tryyang2001"},"content":"            deletedExercise \u003d super.exerciseItems.deleteItem(this.itemIndex, this.date);","lastModifiedDate":"2021-10-28"},{"lineNumber":52,"author":{"gitId":"tryyang2001"},"content":"            return new CommandResult(String.format(MESSAGE_SUCCESS,","lastModifiedDate":"2021-10-28"},{"lineNumber":53,"author":{"gitId":"tryyang2001"},"content":"                    deletedExercise.toStringWithDate()));","lastModifiedDate":"2021-10-28"},{"lineNumber":54,"author":{"gitId":"tlyi"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-10-11"},{"lineNumber":55,"author":{"gitId":"tryyang2001"},"content":"            return new CommandResult(String.format(CommandMessages.MESSAGE_EXERCISE_NOT_FOUND,","lastModifiedDate":"2021-10-28"},{"lineNumber":56,"author":{"gitId":"tryyang2001"},"content":"                    this.itemIndex + 1,","lastModifiedDate":"2021-10-28"},{"lineNumber":57,"author":{"gitId":"tryyang2001"},"content":"                    this.date.format(CommandMessages.DATE_FORMATTER)));","lastModifiedDate":"2021-10-28"},{"lineNumber":58,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":59,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":60,"author":{"gitId":"tlyi"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"tryyang2001":15,"xingjie99":6,"tlyi":39}},{"path":"src/main/java/seedu/duke/logic/commands/DeleteFoodBankCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.logic.commands;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"tlyi"},"content":"import seedu.duke.data.item.Item;","lastModifiedDate":"2021-11-04"},{"lineNumber":4,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"xingjie99"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-11-02"},{"lineNumber":6,"author":{"gitId":"tlyi"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"tlyi"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"tlyi"},"content":"/**","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"tlyi"},"content":" * Represents the command that when executed, deletes a Food item from the FoodBank.","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"tlyi"},"content":" */","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"tlyi"},"content":"public class DeleteFoodBankCommand extends Command {","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_COMMAND_FORMAT \u003d CommandMessages.QUOTATION + COMMAND_WORD_DELETE","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"tlyi"},"content":"            + \" \" + COMMAND_PREFIX_FOOD_BANK + COMMAND_PREFIX_DELIMITER + \"X\" + CommandMessages.QUOTATION","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"tlyi"},"content":"            + \", where X is the item number in the food bank list\";","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"weidak"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"A food item has been deleted from the food bank:\"","lastModifiedDate":"2021-10-30"},{"lineNumber":17,"author":{"gitId":"tlyi"},"content":"            + CommandMessages.INDENTED_LS + \"%s\";","lastModifiedDate":"2021-11-04"},{"lineNumber":18,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_ITEMS_LEFT \u003d","lastModifiedDate":"2021-11-04"},{"lineNumber":19,"author":{"gitId":"tlyi"},"content":"            CommandMessages.LS + \"Number of food item(s) left in the food bank: %d\";","lastModifiedDate":"2021-11-04"},{"lineNumber":20,"author":{"gitId":"tlyi"},"content":"    private static final String MESSAGE_FOOD_CLEAR \u003d \"All food items in the food bank have been removed.\";","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"tlyi"},"content":"    public static final String[] EXPECTED_PREFIXES \u003d {COMMAND_PREFIX_FOOD_BANK};","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"tlyi"},"content":"    private static final String MESSAGE_REMOVED_MULTIPLE_FOOD_BANK_ITEM \u003d","lastModifiedDate":"2021-11-03"},{"lineNumber":23,"author":{"gitId":"xingjie99"},"content":"            \"All of the following food bank items have been deleted:\";","lastModifiedDate":"2021-11-04"},{"lineNumber":24,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"tlyi"},"content":"    private static Logger logger \u003d Logger.getLogger(DeleteFoodBankCommand.class.getName());","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":29,"author":{"gitId":"tlyi"},"content":"    private boolean isClear \u003d false;","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"xingjie99"},"content":"    private ArrayList\u003cInteger\u003e itemIndexArray;","lastModifiedDate":"2021-11-02"},{"lineNumber":31,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"tlyi"},"content":"    public DeleteFoodBankCommand(boolean isClear) {","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"tlyi"},"content":"        this.isClear \u003d isClear;","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":37,"author":{"gitId":"xingjie99"},"content":"    public DeleteFoodBankCommand(ArrayList\u003cInteger\u003e itemIndexArray) {","lastModifiedDate":"2021-11-02"},{"lineNumber":38,"author":{"gitId":"xingjie99"},"content":"        this.itemIndexArray \u003d itemIndexArray;","lastModifiedDate":"2021-11-02"},{"lineNumber":39,"author":{"gitId":"xingjie99"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":40,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":41,"author":{"gitId":"tlyi"},"content":"    @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":42,"author":{"gitId":"tlyi"},"content":"    public CommandResult execute() {","lastModifiedDate":"2021-10-19"},{"lineNumber":43,"author":{"gitId":"xingjie99"},"content":"        if (super.foodBank.getSize() \u003d\u003d 0) {","lastModifiedDate":"2021-11-02"},{"lineNumber":44,"author":{"gitId":"tlyi"},"content":"            logger.log(Level.FINE, \"food bank is empty.\");","lastModifiedDate":"2021-11-08"},{"lineNumber":45,"author":{"gitId":"xingjie99"},"content":"            return new CommandResult(CommandMessages.MESSAGE_EMPTY_FOOD_BANK);","lastModifiedDate":"2021-11-02"},{"lineNumber":46,"author":{"gitId":"xingjie99"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":47,"author":{"gitId":"tlyi"},"content":"        if (this.isClear) {","lastModifiedDate":"2021-10-19"},{"lineNumber":48,"author":{"gitId":"tlyi"},"content":"            logger.log(Level.FINE, \"Clearing food bank\");","lastModifiedDate":"2021-11-08"},{"lineNumber":49,"author":{"gitId":"tlyi"},"content":"            super.foodBank.clearList();","lastModifiedDate":"2021-10-19"},{"lineNumber":50,"author":{"gitId":"tlyi"},"content":"            return new CommandResult(MESSAGE_FOOD_CLEAR);","lastModifiedDate":"2021-10-19"},{"lineNumber":51,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":52,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":53,"author":{"gitId":"tlyi"},"content":"        logger.log(Level.FINE, \"Trying to delete item now\");","lastModifiedDate":"2021-11-08"},{"lineNumber":54,"author":{"gitId":"tlyi"},"content":"        try {","lastModifiedDate":"2021-10-19"},{"lineNumber":55,"author":{"gitId":"tlyi"},"content":"            if ((itemIndexArray.size() \u003d\u003d 1)) {","lastModifiedDate":"2021-11-04"},{"lineNumber":56,"author":{"gitId":"tlyi"},"content":"                Item item \u003d super.foodBank.deleteItem(itemIndexArray.get(0));","lastModifiedDate":"2021-11-04"},{"lineNumber":57,"author":{"gitId":"tlyi"},"content":"                return new CommandResult(","lastModifiedDate":"2021-11-04"},{"lineNumber":58,"author":{"gitId":"tlyi"},"content":"                        String.format(MESSAGE_SUCCESS, item.toStringWithoutDateAndTime())","lastModifiedDate":"2021-11-04"},{"lineNumber":59,"author":{"gitId":"tlyi"},"content":"                                + String.format(MESSAGE_ITEMS_LEFT, super.foodBank.getSize()));","lastModifiedDate":"2021-11-04"},{"lineNumber":60,"author":{"gitId":"tlyi"},"content":"            }","lastModifiedDate":"2021-11-04"},{"lineNumber":61,"author":{"gitId":"xingjie99"},"content":"            if ((itemIndexArray.stream()","lastModifiedDate":"2021-11-04"},{"lineNumber":62,"author":{"gitId":"tlyi"},"content":"                    .filter(number -\u003e number \u003e super.foodBank.getSize() - 1).count()) \u003e 0) {","lastModifiedDate":"2021-11-04"},{"lineNumber":63,"author":{"gitId":"tlyi"},"content":"                if (super.foodBank.getSize() \u003d\u003d 1) {","lastModifiedDate":"2021-11-07"},{"lineNumber":64,"author":{"gitId":"tlyi"},"content":"                    return new CommandResult(CommandMessages.MESSAGE_ONLY_ONE_IN_LIST);","lastModifiedDate":"2021-11-07"},{"lineNumber":65,"author":{"gitId":"tlyi"},"content":"                }","lastModifiedDate":"2021-11-07"},{"lineNumber":66,"author":{"gitId":"xingjie99"},"content":"                return new CommandResult(String.format(","lastModifiedDate":"2021-11-04"},{"lineNumber":67,"author":{"gitId":"xingjie99"},"content":"                        CommandMessages.MESSAGE_LIST_OUT_OF_BOUNDS, super.foodBank.getSize()));","lastModifiedDate":"2021-11-04"},{"lineNumber":68,"author":{"gitId":"xingjie99"},"content":"            } else {","lastModifiedDate":"2021-11-04"},{"lineNumber":69,"author":{"gitId":"xingjie99"},"content":"                String listOfDeletedFoodBank \u003d super.foodBank.deleteMultipleItems(this.itemIndexArray);","lastModifiedDate":"2021-11-04"},{"lineNumber":70,"author":{"gitId":"tlyi"},"content":"                return new CommandResult(MESSAGE_REMOVED_MULTIPLE_FOOD_BANK_ITEM","lastModifiedDate":"2021-11-04"},{"lineNumber":71,"author":{"gitId":"tlyi"},"content":"                        + listOfDeletedFoodBank","lastModifiedDate":"2021-11-04"},{"lineNumber":72,"author":{"gitId":"tlyi"},"content":"                        + String.format(MESSAGE_ITEMS_LEFT, super.foodBank.getSize()));","lastModifiedDate":"2021-11-04"},{"lineNumber":73,"author":{"gitId":"xingjie99"},"content":"            }","lastModifiedDate":"2021-11-04"},{"lineNumber":74,"author":{"gitId":"tlyi"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-10-19"},{"lineNumber":75,"author":{"gitId":"tlyi"},"content":"            logger.log(Level.FINE, \"Detected invalid food item index.\");","lastModifiedDate":"2021-11-08"},{"lineNumber":76,"author":{"gitId":"tlyi"},"content":"            if (super.foodBank.getSize() \u003d\u003d 1) {","lastModifiedDate":"2021-10-19"},{"lineNumber":77,"author":{"gitId":"tlyi"},"content":"                return new CommandResult(CommandMessages.MESSAGE_ONLY_ONE_IN_LIST);","lastModifiedDate":"2021-10-27"},{"lineNumber":78,"author":{"gitId":"tlyi"},"content":"            }","lastModifiedDate":"2021-10-19"},{"lineNumber":79,"author":{"gitId":"tlyi"},"content":"            return new CommandResult(String.format(","lastModifiedDate":"2021-10-27"},{"lineNumber":80,"author":{"gitId":"tlyi"},"content":"                    CommandMessages.MESSAGE_LIST_OUT_OF_BOUNDS, super.foodBank.getSize()));","lastModifiedDate":"2021-10-27"},{"lineNumber":81,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":82,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":83,"author":{"gitId":"tlyi"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"weidak":1,"xingjie99":16,"tlyi":66}},{"path":"src/main/java/seedu/duke/logic/commands/DeleteFoodCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.logic.commands;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"tlyi"},"content":"import seedu.duke.data.item.food.Food;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"tlyi"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"tlyi"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"tryyang2001"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"tryyang2001"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"tlyi"},"content":"/**","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"tlyi"},"content":" * Represents the command that when executed, deletes a Food item from the FoodList.","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"tlyi"},"content":" */","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"tlyi"},"content":"public class DeleteFoodCommand extends Command {","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"A food item has been deleted:\"","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"tryyang2001"},"content":"            + CommandMessages.INDENTED_LS + \"%1$s\";","lastModifiedDate":"2021-10-28"},{"lineNumber":16,"author":{"gitId":"tryyang2001"},"content":"    public static final String MESSAGE_FOOD_CLEAR \u003d \"All food items have been removed.\";","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"tlyi"},"content":"    public static final String[] EXPECTED_PREFIXES \u003d {","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"tlyi"},"content":"            COMMAND_PREFIX_FOOD,","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"tlyi"},"content":"            COMMAND_PREFIX_DATE,","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"tlyi"},"content":"            COMMAND_PREFIX_TIME,","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"tlyi"},"content":"    };","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"tlyi"},"content":"    private int itemIndex;","lastModifiedDate":"2021-10-30"},{"lineNumber":25,"author":{"gitId":"tlyi"},"content":"    private LocalDate date;","lastModifiedDate":"2021-10-30"},{"lineNumber":26,"author":{"gitId":"tlyi"},"content":"    private LocalTime time;","lastModifiedDate":"2021-10-30"},{"lineNumber":27,"author":{"gitId":"tryyang2001"},"content":"    private boolean isClear \u003d false;","lastModifiedDate":"2021-10-14"},{"lineNumber":28,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"tryyang2001"},"content":"    private static final Logger logger \u003d Logger.getLogger(DeleteFoodCommand.class.getName());","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"tlyi"},"content":"    public DeleteFoodCommand(int itemIndex, LocalDate date, LocalTime time) {","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"tlyi"},"content":"        this.itemIndex \u003d itemIndex;","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"tlyi"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"tlyi"},"content":"        this.time \u003d time;","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":36,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":37,"author":{"gitId":"tryyang2001"},"content":"    public DeleteFoodCommand(boolean isClear) {","lastModifiedDate":"2021-10-14"},{"lineNumber":38,"author":{"gitId":"tryyang2001"},"content":"        this.isClear \u003d isClear;","lastModifiedDate":"2021-10-14"},{"lineNumber":39,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":40,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":41,"author":{"gitId":"tlyi"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":42,"author":{"gitId":"tlyi"},"content":"    public CommandResult execute() {","lastModifiedDate":"2021-10-10"},{"lineNumber":43,"author":{"gitId":"tryyang2001"},"content":"        if (this.isClear) {","lastModifiedDate":"2021-10-14"},{"lineNumber":44,"author":{"gitId":"tlyi"},"content":"            logger.log(Level.FINE, \"Clearing food list\");","lastModifiedDate":"2021-11-08"},{"lineNumber":45,"author":{"gitId":"tryyang2001"},"content":"            super.foodItems.clearList();","lastModifiedDate":"2021-10-19"},{"lineNumber":46,"author":{"gitId":"tryyang2001"},"content":"            assert foodItems.getSize() \u003d\u003d 0 : \"The size of the food list should be 0 after clear\";","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"tryyang2001"},"content":"            return new CommandResult(MESSAGE_FOOD_CLEAR);","lastModifiedDate":"2021-10-11"},{"lineNumber":48,"author":{"gitId":"tryyang2001"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":49,"author":{"gitId":"tryyang2001"},"content":"        if (super.foodItems.getSize() \u003d\u003d 0) {","lastModifiedDate":"2021-10-13"},{"lineNumber":50,"author":{"gitId":"tlyi"},"content":"            logger.log(Level.FINE, \"Food list is empty.\");","lastModifiedDate":"2021-11-08"},{"lineNumber":51,"author":{"gitId":"tlyi"},"content":"            return new CommandResult(CommandMessages.MESSAGE_EMPTY_FOOD_LIST);","lastModifiedDate":"2021-10-27"},{"lineNumber":52,"author":{"gitId":"tryyang2001"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":53,"author":{"gitId":"tlyi"},"content":"        logger.log(Level.FINE, \"Trying to delete item now\");","lastModifiedDate":"2021-11-08"},{"lineNumber":54,"author":{"gitId":"tlyi"},"content":"        try {","lastModifiedDate":"2021-10-11"},{"lineNumber":55,"author":{"gitId":"tlyi"},"content":"            Food deletedFood;","lastModifiedDate":"2021-10-11"},{"lineNumber":56,"author":{"gitId":"tryyang2001"},"content":"            deletedFood \u003d super.foodItems.deleteItem(this.itemIndex, this.date, this.time);","lastModifiedDate":"2021-10-24"},{"lineNumber":57,"author":{"gitId":"tryyang2001"},"content":"            return new CommandResult(String.format(MESSAGE_SUCCESS,","lastModifiedDate":"2021-10-28"},{"lineNumber":58,"author":{"gitId":"tryyang2001"},"content":"                    deletedFood.toStringWithDate()));","lastModifiedDate":"2021-10-28"},{"lineNumber":59,"author":{"gitId":"tlyi"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-10-11"},{"lineNumber":60,"author":{"gitId":"tlyi"},"content":"            logger.log(Level.FINE, \"Detected invalid food item index.\");","lastModifiedDate":"2021-11-08"},{"lineNumber":61,"author":{"gitId":"tryyang2001"},"content":"            return new CommandResult(String.format(CommandMessages.MESSAGE_FOOD_NOT_FOUND,","lastModifiedDate":"2021-10-28"},{"lineNumber":62,"author":{"gitId":"tryyang2001"},"content":"                    this.itemIndex + 1,","lastModifiedDate":"2021-10-28"},{"lineNumber":63,"author":{"gitId":"tryyang2001"},"content":"                    this.date.format(CommandMessages.DATE_FORMATTER),","lastModifiedDate":"2021-10-28"},{"lineNumber":64,"author":{"gitId":"tryyang2001"},"content":"                    this.time.format(CommandMessages.TIME_FORMATTER)));","lastModifiedDate":"2021-10-28"},{"lineNumber":65,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":66,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":67,"author":{"gitId":"tlyi"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"tryyang2001":26,"tlyi":41}},{"path":"src/main/java/seedu/duke/logic/commands/DeleteFutureExerciseCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.logic.commands;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"tlyi"},"content":"import seedu.duke.data.item.Item;","lastModifiedDate":"2021-11-04"},{"lineNumber":4,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"xingjie99"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-11-02"},{"lineNumber":6,"author":{"gitId":"xingjie99"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"xingjie99"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"xingjie99"},"content":"/**","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"xingjie99"},"content":" * Represents the command that when executed, deletes an Exercise item from the Future ExerciseList.","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"xingjie99"},"content":" */","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"xingjie99"},"content":"public class DeleteFutureExerciseCommand extends Command {","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_COMMAND_FORMAT \u003d CommandMessages.QUOTATION + COMMAND_WORD_DELETE","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"tlyi"},"content":"            + \" \" + COMMAND_PREFIX_UPCOMING_EXERCISE + COMMAND_PREFIX_DELIMITER + \"X\" + CommandMessages.QUOTATION","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"xingjie99"},"content":"            + \", where X is the item number in the future exercise list\";","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"xingjie99"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"An exercise item for the future has been deleted:\"","lastModifiedDate":"2021-10-18"},{"lineNumber":17,"author":{"gitId":"tlyi"},"content":"            + CommandMessages.INDENTED_LS + \"%s\";","lastModifiedDate":"2021-11-04"},{"lineNumber":18,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_ITEMS_LEFT \u003d","lastModifiedDate":"2021-11-04"},{"lineNumber":19,"author":{"gitId":"tlyi"},"content":"            CommandMessages.LS + \"Number of upcoming exercise(s) left: %d\";","lastModifiedDate":"2021-11-04"},{"lineNumber":20,"author":{"gitId":"xingjie99"},"content":"    private static final String MESSAGE_FUTURE_EXERCISE_CLEAR \u003d \"All upcoming exercise items have been removed.\";","lastModifiedDate":"2021-11-08"},{"lineNumber":21,"author":{"gitId":"tlyi"},"content":"    public static final String[] EXPECTED_PREFIXES \u003d {COMMAND_PREFIX_UPCOMING_EXERCISE};","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"xingjie99"},"content":"    public static final String MESSAGE_REMOVED_MULTIPLE_UPCOMING_EXERCISES \u003d \"All of the following upcoming exercises \"","lastModifiedDate":"2021-11-04"},{"lineNumber":23,"author":{"gitId":"xingjie99"},"content":"            + \"have been deleted:\";","lastModifiedDate":"2021-11-04"},{"lineNumber":24,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":26,"author":{"gitId":"xingjie99"},"content":"    private static Logger logger \u003d Logger.getLogger(DeleteFutureExerciseCommand.class.getName());","lastModifiedDate":"2021-10-18"},{"lineNumber":27,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":28,"author":{"gitId":"xingjie99"},"content":"    private boolean isClear \u003d false;","lastModifiedDate":"2021-10-18"},{"lineNumber":29,"author":{"gitId":"xingjie99"},"content":"    private ArrayList\u003cInteger\u003e itemIndexArray;","lastModifiedDate":"2021-11-02"},{"lineNumber":30,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":31,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":32,"author":{"gitId":"xingjie99"},"content":"    public DeleteFutureExerciseCommand(boolean isClear) {","lastModifiedDate":"2021-10-18"},{"lineNumber":33,"author":{"gitId":"xingjie99"},"content":"        this.isClear \u003d isClear;","lastModifiedDate":"2021-10-18"},{"lineNumber":34,"author":{"gitId":"xingjie99"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":35,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":36,"author":{"gitId":"xingjie99"},"content":"    public DeleteFutureExerciseCommand(ArrayList\u003cInteger\u003e itemIndexArray) {","lastModifiedDate":"2021-11-02"},{"lineNumber":37,"author":{"gitId":"xingjie99"},"content":"        this.itemIndexArray \u003d itemIndexArray;","lastModifiedDate":"2021-11-02"},{"lineNumber":38,"author":{"gitId":"xingjie99"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":39,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":40,"author":{"gitId":"xingjie99"},"content":"    @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":41,"author":{"gitId":"xingjie99"},"content":"    public CommandResult execute() {","lastModifiedDate":"2021-10-18"},{"lineNumber":42,"author":{"gitId":"xingjie99"},"content":"        if (super.futureExerciseItems.getSize() \u003d\u003d 0) {","lastModifiedDate":"2021-11-02"},{"lineNumber":43,"author":{"gitId":"tlyi"},"content":"            logger.log(Level.FINE, \"Future exercise list is empty.\");","lastModifiedDate":"2021-11-08"},{"lineNumber":44,"author":{"gitId":"xingjie99"},"content":"            return new CommandResult(CommandMessages.MESSAGE_EMPTY_FUTURE_EXERCISE_LIST);","lastModifiedDate":"2021-11-02"},{"lineNumber":45,"author":{"gitId":"xingjie99"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":46,"author":{"gitId":"xingjie99"},"content":"        if (this.isClear) {","lastModifiedDate":"2021-10-18"},{"lineNumber":47,"author":{"gitId":"tlyi"},"content":"            logger.log(Level.FINE, \"Clearing future exercise list\");","lastModifiedDate":"2021-11-08"},{"lineNumber":48,"author":{"gitId":"tryyang2001"},"content":"            super.futureExerciseItems.clearList();","lastModifiedDate":"2021-10-20"},{"lineNumber":49,"author":{"gitId":"xingjie99"},"content":"            return new CommandResult(MESSAGE_FUTURE_EXERCISE_CLEAR);","lastModifiedDate":"2021-10-18"},{"lineNumber":50,"author":{"gitId":"xingjie99"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":51,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":52,"author":{"gitId":"tlyi"},"content":"        logger.log(Level.FINE, \"Trying to delete item now\");","lastModifiedDate":"2021-11-08"},{"lineNumber":53,"author":{"gitId":"xingjie99"},"content":"        try {","lastModifiedDate":"2021-10-18"},{"lineNumber":54,"author":{"gitId":"tlyi"},"content":"            if ((itemIndexArray.size() \u003d\u003d 1)) {","lastModifiedDate":"2021-11-04"},{"lineNumber":55,"author":{"gitId":"tlyi"},"content":"                Item item \u003d super.futureExerciseItems.deleteItem(itemIndexArray.get(0));","lastModifiedDate":"2021-11-04"},{"lineNumber":56,"author":{"gitId":"tlyi"},"content":"                return new CommandResult(","lastModifiedDate":"2021-11-04"},{"lineNumber":57,"author":{"gitId":"tlyi"},"content":"                        String.format(MESSAGE_SUCCESS, item.toStringWithDate())","lastModifiedDate":"2021-11-04"},{"lineNumber":58,"author":{"gitId":"tlyi"},"content":"                                + String.format(MESSAGE_ITEMS_LEFT, super.futureExerciseItems.getSize()));","lastModifiedDate":"2021-11-04"},{"lineNumber":59,"author":{"gitId":"tlyi"},"content":"            }","lastModifiedDate":"2021-11-04"},{"lineNumber":60,"author":{"gitId":"xingjie99"},"content":"            if ((itemIndexArray.stream()","lastModifiedDate":"2021-11-04"},{"lineNumber":61,"author":{"gitId":"xingjie99"},"content":"                    .filter(number -\u003e number \u003e super.futureExerciseItems.getSize() - 1).count()) \u003e 0) {","lastModifiedDate":"2021-11-04"},{"lineNumber":62,"author":{"gitId":"tlyi"},"content":"                if (super.futureExerciseItems.getSize() \u003d\u003d 1) {","lastModifiedDate":"2021-11-07"},{"lineNumber":63,"author":{"gitId":"tlyi"},"content":"                    return new CommandResult(CommandMessages.MESSAGE_ONLY_ONE_IN_LIST);","lastModifiedDate":"2021-11-07"},{"lineNumber":64,"author":{"gitId":"tlyi"},"content":"                }","lastModifiedDate":"2021-11-07"},{"lineNumber":65,"author":{"gitId":"xingjie99"},"content":"                return new CommandResult(String.format(CommandMessages.MESSAGE_LIST_OUT_OF_BOUNDS,","lastModifiedDate":"2021-11-04"},{"lineNumber":66,"author":{"gitId":"xingjie99"},"content":"                        super.futureExerciseItems.getSize()));","lastModifiedDate":"2021-11-04"},{"lineNumber":67,"author":{"gitId":"xingjie99"},"content":"            } else {","lastModifiedDate":"2021-11-04"},{"lineNumber":68,"author":{"gitId":"xingjie99"},"content":"                String listOfDeletedFutureExercises \u003d super.futureExerciseItems","lastModifiedDate":"2021-11-04"},{"lineNumber":69,"author":{"gitId":"xingjie99"},"content":"                        .deleteMultipleItems(this.itemIndexArray);","lastModifiedDate":"2021-11-04"},{"lineNumber":70,"author":{"gitId":"xingjie99"},"content":"                return new CommandResult(MESSAGE_REMOVED_MULTIPLE_UPCOMING_EXERCISES","lastModifiedDate":"2021-11-04"},{"lineNumber":71,"author":{"gitId":"tlyi"},"content":"                        + listOfDeletedFutureExercises","lastModifiedDate":"2021-11-04"},{"lineNumber":72,"author":{"gitId":"tlyi"},"content":"                        + String.format(MESSAGE_ITEMS_LEFT, super.futureExerciseItems.getSize()));","lastModifiedDate":"2021-11-04"},{"lineNumber":73,"author":{"gitId":"xingjie99"},"content":"            }","lastModifiedDate":"2021-11-04"},{"lineNumber":74,"author":{"gitId":"xingjie99"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-10-18"},{"lineNumber":75,"author":{"gitId":"tlyi"},"content":"            logger.log(Level.FINE, \"Detected invalid exercise item index.\");","lastModifiedDate":"2021-11-08"},{"lineNumber":76,"author":{"gitId":"xingjie99"},"content":"            if (super.futureExerciseItems.getSize() \u003d\u003d 1) {","lastModifiedDate":"2021-10-18"},{"lineNumber":77,"author":{"gitId":"tlyi"},"content":"                return new CommandResult(CommandMessages.MESSAGE_ONLY_ONE_IN_LIST);","lastModifiedDate":"2021-10-27"},{"lineNumber":78,"author":{"gitId":"xingjie99"},"content":"            }","lastModifiedDate":"2021-10-18"},{"lineNumber":79,"author":{"gitId":"tlyi"},"content":"            return new CommandResult(String.format(CommandMessages.MESSAGE_LIST_OUT_OF_BOUNDS,","lastModifiedDate":"2021-10-27"},{"lineNumber":80,"author":{"gitId":"tlyi"},"content":"                    super.futureExerciseItems.getSize()));","lastModifiedDate":"2021-10-27"},{"lineNumber":81,"author":{"gitId":"xingjie99"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":82,"author":{"gitId":"xingjie99"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":83,"author":{"gitId":"xingjie99"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"xingjie99":53,"tryyang2001":1,"tlyi":29}},{"path":"src/main/java/seedu/duke/logic/commands/EditExerciseBankCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.logic.commands;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"tlyi"},"content":"import seedu.duke.data.item.Item;","lastModifiedDate":"2021-10-28"},{"lineNumber":5,"author":{"gitId":"tlyi"},"content":"import seedu.duke.data.item.exceptions.DuplicateItemInBankException;","lastModifiedDate":"2021-10-28"},{"lineNumber":6,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":7,"author":{"gitId":"xingjie99"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"xingjie99"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"xingjie99"},"content":"//@@author xingjie99","lastModifiedDate":"2021-10-28"},{"lineNumber":11,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":12,"author":{"gitId":"xingjie99"},"content":"/**","lastModifiedDate":"2021-10-28"},{"lineNumber":13,"author":{"gitId":"xingjie99"},"content":" * Represents the command that when executed, edits an item in the Exercise Bank.","lastModifiedDate":"2021-10-28"},{"lineNumber":14,"author":{"gitId":"xingjie99"},"content":" */","lastModifiedDate":"2021-10-28"},{"lineNumber":15,"author":{"gitId":"xingjie99"},"content":"public class EditExerciseBankCommand extends Command {","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"xingjie99"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Item number %d in the exercise bank has been changed to:\"","lastModifiedDate":"2021-10-28"},{"lineNumber":17,"author":{"gitId":"xingjie99"},"content":"            + CommandMessages.INDENTED_LS + \"%s\";","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"xingjie99"},"content":"    public static final String[] EXPECTED_PREFIXES \u003d {","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"xingjie99"},"content":"            COMMAND_PREFIX_EXERCISE_BANK,","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"xingjie99"},"content":"            COMMAND_PREFIX_NAME,","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"xingjie99"},"content":"            COMMAND_PREFIX_CALORIES","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"xingjie99"},"content":"    };","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"xingjie99"},"content":"    private static Logger logger \u003d Logger.getLogger(EditExerciseBankCommand.class.getName());","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"xingjie99"},"content":"    private final int itemIndex;","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"xingjie99"},"content":"    private final String newName;","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"xingjie99"},"content":"    private final Integer newCalories;","lastModifiedDate":"2021-10-30"},{"lineNumber":30,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"xingjie99"},"content":"    public EditExerciseBankCommand(int itemIndex, String newName, Integer newCalories) {","lastModifiedDate":"2021-10-30"},{"lineNumber":32,"author":{"gitId":"xingjie99"},"content":"        this.itemIndex \u003d itemIndex;","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"xingjie99"},"content":"        this.newName \u003d newName;","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"xingjie99"},"content":"        this.newCalories \u003d newCalories;","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"xingjie99"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"xingjie99"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":38,"author":{"gitId":"xingjie99"},"content":"    public CommandResult execute() {","lastModifiedDate":"2021-10-24"},{"lineNumber":39,"author":{"gitId":"xingjie99"},"content":"        if (super.exerciseBank.getSize() \u003d\u003d 0) {","lastModifiedDate":"2021-10-24"},{"lineNumber":40,"author":{"gitId":"xingjie99"},"content":"            logger.log(Level.FINE, \"Exercise bank list is empty.\");","lastModifiedDate":"2021-11-08"},{"lineNumber":41,"author":{"gitId":"xingjie99"},"content":"            return new CommandResult(CommandMessages.MESSAGE_EMPTY_EXERCISE_BANK);","lastModifiedDate":"2021-10-27"},{"lineNumber":42,"author":{"gitId":"xingjie99"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":43,"author":{"gitId":"xingjie99"},"content":"        try {","lastModifiedDate":"2021-10-24"},{"lineNumber":44,"author":{"gitId":"xingjie99"},"content":"            Item item \u003d super.exerciseBank.getItem(this.itemIndex);","lastModifiedDate":"2021-10-28"},{"lineNumber":45,"author":{"gitId":"xingjie99"},"content":"            if (this.newName !\u003d null) {","lastModifiedDate":"2021-10-30"},{"lineNumber":46,"author":{"gitId":"xingjie99"},"content":"                super.exerciseBank.checkNoDuplicateItemName(this.newName);","lastModifiedDate":"2021-10-28"},{"lineNumber":47,"author":{"gitId":"xingjie99"},"content":"                item.setName(this.newName);","lastModifiedDate":"2021-10-28"},{"lineNumber":48,"author":{"gitId":"xingjie99"},"content":"            }","lastModifiedDate":"2021-10-24"},{"lineNumber":49,"author":{"gitId":"xingjie99"},"content":"            if (this.newCalories !\u003d null) {","lastModifiedDate":"2021-10-30"},{"lineNumber":50,"author":{"gitId":"xingjie99"},"content":"                if (this.newCalories \u003c Item.LOWEST_CALORIE || this.newCalories \u003e Item.HIGHEST_CALORIE) {","lastModifiedDate":"2021-11-04"},{"lineNumber":51,"author":{"gitId":"xingjie99"},"content":"                    logger.log(Level.FINE, \"Detected impossible exercise calorie burnt.\");","lastModifiedDate":"2021-11-08"},{"lineNumber":52,"author":{"gitId":"xingjie99"},"content":"                    return new CommandResult(CommandMessages.MESSAGE_INVALID_CALORIES);","lastModifiedDate":"2021-11-04"},{"lineNumber":53,"author":{"gitId":"xingjie99"},"content":"                }","lastModifiedDate":"2021-10-28"},{"lineNumber":54,"author":{"gitId":"xingjie99"},"content":"                item.setCalories(this.newCalories);","lastModifiedDate":"2021-10-28"},{"lineNumber":55,"author":{"gitId":"xingjie99"},"content":"            }","lastModifiedDate":"2021-10-24"},{"lineNumber":56,"author":{"gitId":"xingjie99"},"content":"            return new CommandResult(String.format(MESSAGE_SUCCESS, this.itemIndex + 1,","lastModifiedDate":"2021-10-24"},{"lineNumber":57,"author":{"gitId":"xingjie99"},"content":"                    super.exerciseBank.getItem(this.itemIndex).toStringWithoutDateAndTime()));","lastModifiedDate":"2021-10-28"},{"lineNumber":58,"author":{"gitId":"xingjie99"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-10-24"},{"lineNumber":59,"author":{"gitId":"xingjie99"},"content":"            logger.log(Level.FINE, \"Detected invalid exercise bank item index.\");","lastModifiedDate":"2021-11-08"},{"lineNumber":60,"author":{"gitId":"xingjie99"},"content":"            if (super.exerciseBank.getSize() \u003d\u003d 1) {","lastModifiedDate":"2021-10-24"},{"lineNumber":61,"author":{"gitId":"xingjie99"},"content":"                return new CommandResult(CommandMessages.MESSAGE_ONLY_ONE_IN_LIST);","lastModifiedDate":"2021-10-27"},{"lineNumber":62,"author":{"gitId":"xingjie99"},"content":"            }","lastModifiedDate":"2021-10-24"},{"lineNumber":63,"author":{"gitId":"xingjie99"},"content":"            return new CommandResult(String.format(","lastModifiedDate":"2021-10-27"},{"lineNumber":64,"author":{"gitId":"xingjie99"},"content":"                    CommandMessages.MESSAGE_LIST_OUT_OF_BOUNDS, super.exerciseBank.getSize()));","lastModifiedDate":"2021-10-27"},{"lineNumber":65,"author":{"gitId":"xingjie99"},"content":"        } catch (DuplicateItemInBankException e) {","lastModifiedDate":"2021-10-28"},{"lineNumber":66,"author":{"gitId":"xingjie99"},"content":"            return new CommandResult(String.format(","lastModifiedDate":"2021-10-28"},{"lineNumber":67,"author":{"gitId":"xingjie99"},"content":"                    CommandMessages.MESSAGE_EXERCISE_ALREADY_EXISTS_IN_BANK, this.newName));","lastModifiedDate":"2021-10-28"},{"lineNumber":68,"author":{"gitId":"xingjie99"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":69,"author":{"gitId":"xingjie99"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":70,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":71,"author":{"gitId":"xingjie99"},"content":"}","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"xingjie99":67,"tlyi":4}},{"path":"src/main/java/seedu/duke/logic/commands/EditFoodBankCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.logic.commands;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"tlyi"},"content":"import seedu.duke.data.item.Item;","lastModifiedDate":"2021-10-28"},{"lineNumber":4,"author":{"gitId":"tlyi"},"content":"import seedu.duke.data.item.exceptions.DuplicateItemInBankException;","lastModifiedDate":"2021-10-28"},{"lineNumber":5,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":6,"author":{"gitId":"xingjie99"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"xingjie99"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"xingjie99"},"content":"//@@author xingjie99","lastModifiedDate":"2021-10-28"},{"lineNumber":10,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":11,"author":{"gitId":"xingjie99"},"content":"/**","lastModifiedDate":"2021-10-28"},{"lineNumber":12,"author":{"gitId":"xingjie99"},"content":" * Represents the command that when executed, edits an item in the Food Bank.","lastModifiedDate":"2021-10-28"},{"lineNumber":13,"author":{"gitId":"xingjie99"},"content":" */","lastModifiedDate":"2021-10-28"},{"lineNumber":14,"author":{"gitId":"xingjie99"},"content":"public class EditFoodBankCommand extends Command {","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"xingjie99"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Item number %d in the food bank has been changed to:\"","lastModifiedDate":"2021-10-28"},{"lineNumber":16,"author":{"gitId":"xingjie99"},"content":"            + CommandMessages.INDENTED_LS + \"%s\";","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"xingjie99"},"content":"    public static final String[] EXPECTED_PREFIXES \u003d {","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"xingjie99"},"content":"            COMMAND_PREFIX_FOOD_BANK,","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"xingjie99"},"content":"            COMMAND_PREFIX_NAME,","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"xingjie99"},"content":"            COMMAND_PREFIX_CALORIES","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"xingjie99"},"content":"    };","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"xingjie99"},"content":"    private static Logger logger \u003d Logger.getLogger(EditFoodBankCommand.class.getName());","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"xingjie99"},"content":"    private final int itemIndex;","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"xingjie99"},"content":"    private final String newName;","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"xingjie99"},"content":"    private final Integer newCalories;","lastModifiedDate":"2021-10-30"},{"lineNumber":28,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"xingjie99"},"content":"    public EditFoodBankCommand(int itemIndex, String newName, Integer newCalories) {","lastModifiedDate":"2021-10-30"},{"lineNumber":30,"author":{"gitId":"xingjie99"},"content":"        this.itemIndex \u003d itemIndex;","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"xingjie99"},"content":"        this.newName \u003d newName;","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"xingjie99"},"content":"        this.newCalories \u003d newCalories;","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"xingjie99"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"xingjie99"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"xingjie99"},"content":"    public CommandResult execute() {","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"xingjie99"},"content":"        if (super.foodBank.getSize() \u003d\u003d 0) {","lastModifiedDate":"2021-10-24"},{"lineNumber":38,"author":{"gitId":"xingjie99"},"content":"            logger.log(Level.FINE, \"Food bank list is empty.\");","lastModifiedDate":"2021-11-08"},{"lineNumber":39,"author":{"gitId":"xingjie99"},"content":"            return new CommandResult(CommandMessages.MESSAGE_EMPTY_FOOD_BANK);","lastModifiedDate":"2021-10-27"},{"lineNumber":40,"author":{"gitId":"xingjie99"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":41,"author":{"gitId":"xingjie99"},"content":"        try {","lastModifiedDate":"2021-10-24"},{"lineNumber":42,"author":{"gitId":"xingjie99"},"content":"            Item item \u003d super.foodBank.getItem(this.itemIndex);","lastModifiedDate":"2021-10-28"},{"lineNumber":43,"author":{"gitId":"xingjie99"},"content":"            if (this.newName !\u003d null) {","lastModifiedDate":"2021-10-30"},{"lineNumber":44,"author":{"gitId":"xingjie99"},"content":"                super.foodBank.checkNoDuplicateItemName(this.newName);","lastModifiedDate":"2021-10-28"},{"lineNumber":45,"author":{"gitId":"xingjie99"},"content":"                item.setName(this.newName);","lastModifiedDate":"2021-10-28"},{"lineNumber":46,"author":{"gitId":"xingjie99"},"content":"            }","lastModifiedDate":"2021-10-24"},{"lineNumber":47,"author":{"gitId":"xingjie99"},"content":"            if (this.newCalories !\u003d null) {","lastModifiedDate":"2021-10-30"},{"lineNumber":48,"author":{"gitId":"xingjie99"},"content":"                if (this.newCalories \u003c Item.LOWEST_CALORIE || this.newCalories \u003e Item.HIGHEST_CALORIE) {","lastModifiedDate":"2021-11-04"},{"lineNumber":49,"author":{"gitId":"xingjie99"},"content":"                    logger.log(Level.FINE, \"Detected impossible exercise calorie burnt.\");","lastModifiedDate":"2021-11-08"},{"lineNumber":50,"author":{"gitId":"xingjie99"},"content":"                    return new CommandResult(CommandMessages.MESSAGE_INVALID_CALORIES);","lastModifiedDate":"2021-11-04"},{"lineNumber":51,"author":{"gitId":"xingjie99"},"content":"                }","lastModifiedDate":"2021-10-28"},{"lineNumber":52,"author":{"gitId":"xingjie99"},"content":"                item.setCalories(this.newCalories);","lastModifiedDate":"2021-10-28"},{"lineNumber":53,"author":{"gitId":"xingjie99"},"content":"            }","lastModifiedDate":"2021-10-24"},{"lineNumber":54,"author":{"gitId":"xingjie99"},"content":"            return new CommandResult(String.format(MESSAGE_SUCCESS, this.itemIndex + 1,","lastModifiedDate":"2021-10-24"},{"lineNumber":55,"author":{"gitId":"xingjie99"},"content":"                    item.toStringWithoutDateAndTime()));","lastModifiedDate":"2021-10-29"},{"lineNumber":56,"author":{"gitId":"xingjie99"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-10-24"},{"lineNumber":57,"author":{"gitId":"xingjie99"},"content":"            logger.log(Level.FINE, \"Detected invalid food bank item index.\");","lastModifiedDate":"2021-11-08"},{"lineNumber":58,"author":{"gitId":"xingjie99"},"content":"            if (super.foodBank.getSize() \u003d\u003d 1) {","lastModifiedDate":"2021-10-24"},{"lineNumber":59,"author":{"gitId":"xingjie99"},"content":"                return new CommandResult(CommandMessages.MESSAGE_ONLY_ONE_IN_LIST);","lastModifiedDate":"2021-10-27"},{"lineNumber":60,"author":{"gitId":"xingjie99"},"content":"            }","lastModifiedDate":"2021-10-24"},{"lineNumber":61,"author":{"gitId":"xingjie99"},"content":"            return new CommandResult(String.format(","lastModifiedDate":"2021-10-27"},{"lineNumber":62,"author":{"gitId":"xingjie99"},"content":"                    CommandMessages.MESSAGE_LIST_OUT_OF_BOUNDS, super.foodBank.getSize()));","lastModifiedDate":"2021-10-27"},{"lineNumber":63,"author":{"gitId":"xingjie99"},"content":"        } catch (DuplicateItemInBankException e) {","lastModifiedDate":"2021-10-28"},{"lineNumber":64,"author":{"gitId":"xingjie99"},"content":"            return new CommandResult(String.format(","lastModifiedDate":"2021-10-28"},{"lineNumber":65,"author":{"gitId":"xingjie99"},"content":"                    CommandMessages.MESSAGE_FOOD_ALREADY_EXISTS_IN_BANK, this.newName));","lastModifiedDate":"2021-10-28"},{"lineNumber":66,"author":{"gitId":"xingjie99"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":67,"author":{"gitId":"xingjie99"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":68,"author":{"gitId":"xingjie99"},"content":"}","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"xingjie99":64,"tlyi":4}},{"path":"src/main/java/seedu/duke/logic/commands/EditFutureExerciseCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.logic.commands;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"tlyi"},"content":"import seedu.duke.data.item.Item;","lastModifiedDate":"2021-10-28"},{"lineNumber":5,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":6,"author":{"gitId":"tlyi"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"xingjie99"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"xingjie99"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"xingjie99"},"content":"//@@author xingjie99","lastModifiedDate":"2021-10-28"},{"lineNumber":11,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":12,"author":{"gitId":"xingjie99"},"content":"/**","lastModifiedDate":"2021-10-28"},{"lineNumber":13,"author":{"gitId":"xingjie99"},"content":" * Represents the command that when executed, edits an item in the Future Exercise List.","lastModifiedDate":"2021-10-28"},{"lineNumber":14,"author":{"gitId":"xingjie99"},"content":" */","lastModifiedDate":"2021-10-28"},{"lineNumber":15,"author":{"gitId":"xingjie99"},"content":"public class EditFutureExerciseCommand extends Command {","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"xingjie99"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Item number %d in upcoming exercises has been changed to:\"","lastModifiedDate":"2021-10-28"},{"lineNumber":17,"author":{"gitId":"xingjie99"},"content":"            + CommandMessages.INDENTED_LS + \"%s\";","lastModifiedDate":"2021-10-28"},{"lineNumber":18,"author":{"gitId":"xingjie99"},"content":"    public static final String MESSAGE_INVALID_DATE \u003d \"The new date must be after today\u0027s date!\";","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"xingjie99"},"content":"    public static final String[] EXPECTED_PREFIXES \u003d {","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"xingjie99"},"content":"            COMMAND_PREFIX_UPCOMING_EXERCISE,","lastModifiedDate":"2021-10-28"},{"lineNumber":21,"author":{"gitId":"xingjie99"},"content":"            COMMAND_PREFIX_NAME,","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"xingjie99"},"content":"            COMMAND_PREFIX_CALORIES,","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"xingjie99"},"content":"            COMMAND_PREFIX_DATE,","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"xingjie99"},"content":"    };","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"xingjie99"},"content":"    private static Logger logger \u003d Logger.getLogger(EditFutureExerciseCommand.class.getName());","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"xingjie99"},"content":"    private final int itemIndex;","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"xingjie99"},"content":"    private final String newName;","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"xingjie99"},"content":"    private final Integer newCalories;","lastModifiedDate":"2021-10-30"},{"lineNumber":31,"author":{"gitId":"xingjie99"},"content":"    private final LocalDate newDate;","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"xingjie99"},"content":"    public EditFutureExerciseCommand(int itemIndex, String newName, Integer newCalories, LocalDate newDate) {","lastModifiedDate":"2021-10-30"},{"lineNumber":34,"author":{"gitId":"xingjie99"},"content":"        this.itemIndex \u003d itemIndex;","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"xingjie99"},"content":"        this.newName \u003d newName;","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"xingjie99"},"content":"        this.newCalories \u003d newCalories;","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"xingjie99"},"content":"        this.newDate \u003d newDate;","lastModifiedDate":"2021-10-24"},{"lineNumber":38,"author":{"gitId":"xingjie99"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":39,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":40,"author":{"gitId":"xingjie99"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":41,"author":{"gitId":"xingjie99"},"content":"    public CommandResult execute() {","lastModifiedDate":"2021-10-24"},{"lineNumber":42,"author":{"gitId":"xingjie99"},"content":"        if (super.futureExerciseItems.getSize() \u003d\u003d 0) {","lastModifiedDate":"2021-10-24"},{"lineNumber":43,"author":{"gitId":"xingjie99"},"content":"            logger.log(Level.FINE, \"Future exercise list is empty.\");","lastModifiedDate":"2021-11-08"},{"lineNumber":44,"author":{"gitId":"xingjie99"},"content":"            return new CommandResult(CommandMessages.MESSAGE_EMPTY_FUTURE_EXERCISE_LIST);","lastModifiedDate":"2021-10-27"},{"lineNumber":45,"author":{"gitId":"xingjie99"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":46,"author":{"gitId":"xingjie99"},"content":"        try {","lastModifiedDate":"2021-10-24"},{"lineNumber":47,"author":{"gitId":"xingjie99"},"content":"            Item item \u003d super.futureExerciseItems.getItem(this.itemIndex);","lastModifiedDate":"2021-10-28"},{"lineNumber":48,"author":{"gitId":"xingjie99"},"content":"            if (this.newName !\u003d null) {","lastModifiedDate":"2021-10-30"},{"lineNumber":49,"author":{"gitId":"xingjie99"},"content":"                item.setName(this.newName);","lastModifiedDate":"2021-10-28"},{"lineNumber":50,"author":{"gitId":"xingjie99"},"content":"            }","lastModifiedDate":"2021-10-24"},{"lineNumber":51,"author":{"gitId":"xingjie99"},"content":"            if (this.newCalories !\u003d null) {","lastModifiedDate":"2021-10-30"},{"lineNumber":52,"author":{"gitId":"xingjie99"},"content":"                if (this.newCalories \u003c Item.LOWEST_CALORIE || this.newCalories \u003e Item.HIGHEST_CALORIE) {","lastModifiedDate":"2021-11-04"},{"lineNumber":53,"author":{"gitId":"xingjie99"},"content":"                    logger.log(Level.FINE, \"Detected impossible exercise calorie burnt.\");","lastModifiedDate":"2021-11-08"},{"lineNumber":54,"author":{"gitId":"xingjie99"},"content":"                    return new CommandResult(CommandMessages.MESSAGE_INVALID_CALORIES);","lastModifiedDate":"2021-11-04"},{"lineNumber":55,"author":{"gitId":"xingjie99"},"content":"                }","lastModifiedDate":"2021-10-28"},{"lineNumber":56,"author":{"gitId":"xingjie99"},"content":"                item.setCalories(this.newCalories);","lastModifiedDate":"2021-10-28"},{"lineNumber":57,"author":{"gitId":"xingjie99"},"content":"            }","lastModifiedDate":"2021-10-28"},{"lineNumber":58,"author":{"gitId":"xingjie99"},"content":"            if (this.newDate !\u003d null) {","lastModifiedDate":"2021-11-04"},{"lineNumber":59,"author":{"gitId":"xingjie99"},"content":"                if (!this.newDate.isAfter(LocalDate.now())) {","lastModifiedDate":"2021-10-28"},{"lineNumber":60,"author":{"gitId":"xingjie99"},"content":"                    return new CommandResult(MESSAGE_INVALID_DATE);","lastModifiedDate":"2021-10-28"},{"lineNumber":61,"author":{"gitId":"xingjie99"},"content":"                }","lastModifiedDate":"2021-10-24"},{"lineNumber":62,"author":{"gitId":"xingjie99"},"content":"                item.setDate(this.newDate);","lastModifiedDate":"2021-10-28"},{"lineNumber":63,"author":{"gitId":"xingjie99"},"content":"            }","lastModifiedDate":"2021-10-24"},{"lineNumber":64,"author":{"gitId":"xingjie99"},"content":"            super.futureExerciseItems.sortList();","lastModifiedDate":"2021-10-28"},{"lineNumber":65,"author":{"gitId":"xingjie99"},"content":"            return new CommandResult(String.format(MESSAGE_SUCCESS, this.itemIndex + 1,","lastModifiedDate":"2021-10-24"},{"lineNumber":66,"author":{"gitId":"xingjie99"},"content":"                    item.toStringWithDate()));","lastModifiedDate":"2021-10-28"},{"lineNumber":67,"author":{"gitId":"xingjie99"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-10-24"},{"lineNumber":68,"author":{"gitId":"xingjie99"},"content":"            logger.log(Level.FINE, \"Detected invalid exercise item index.\");","lastModifiedDate":"2021-11-08"},{"lineNumber":69,"author":{"gitId":"xingjie99"},"content":"            if (super.futureExerciseItems.getSize() \u003d\u003d 1) {","lastModifiedDate":"2021-10-24"},{"lineNumber":70,"author":{"gitId":"xingjie99"},"content":"                return new CommandResult(CommandMessages.MESSAGE_ONLY_ONE_IN_LIST);","lastModifiedDate":"2021-10-27"},{"lineNumber":71,"author":{"gitId":"xingjie99"},"content":"            }","lastModifiedDate":"2021-10-24"},{"lineNumber":72,"author":{"gitId":"xingjie99"},"content":"            return new CommandResult(String.format(","lastModifiedDate":"2021-10-27"},{"lineNumber":73,"author":{"gitId":"xingjie99"},"content":"                    CommandMessages.MESSAGE_LIST_OUT_OF_BOUNDS, super.futureExerciseItems.getSize()));","lastModifiedDate":"2021-10-27"},{"lineNumber":74,"author":{"gitId":"xingjie99"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":75,"author":{"gitId":"xingjie99"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":76,"author":{"gitId":"xingjie99"},"content":"}","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"xingjie99":72,"tlyi":4}},{"path":"src/main/java/seedu/duke/logic/commands/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.logic.commands;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"tttyyzzz"},"content":"import static seedu.duke.logic.commands.CommandMessages.LS;","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"tlyi"},"content":"/**","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"tlyi"},"content":" * Represents the command that when executed, displays the list of available commands to the user.","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"tlyi"},"content":" */","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"tlyi"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"tlyi"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"tttyyzzz"},"content":"    public static final String MESSAGE_ADD_HELP \u003d \"add -- Add food or exercise record to the current list.\";","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"tttyyzzz"},"content":"    private static final String MESSAGE_HELP_INTRO \u003d \"Welcome to the help page.\" + LS","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"tttyyzzz"},"content":"            + \"Below are the commands to get you started.\" + LS","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"tttyyzzz"},"content":"            + \"More details could be found on: \" + LS","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"tlyi"},"content":"            + \"https://tinyurl.com/fitbot-user-guide\";","lastModifiedDate":"2021-10-28"},{"lineNumber":16,"author":{"gitId":"tryyang2001"},"content":"    private static final String MESSAGE_COMMON_NOTATIONS \u003d \"In the formats of the command, prefixes wrapped in \"","lastModifiedDate":"2021-10-28"},{"lineNumber":17,"author":{"gitId":"tttyyzzz"},"content":"            + \"curly brackets {} means that they are optional.\";","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"tttyyzzz"},"content":"    private static final String EMPTY \u003d \"\";","lastModifiedDate":"2021-10-14"},{"lineNumber":19,"author":{"gitId":"tttyyzzz"},"content":"    public static final String MESSAGE_COMMAND_FORMAT \u003d","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"tttyyzzz"},"content":"            CommandMessages.QUOTATION + COMMAND_WORD + CommandMessages.QUOTATION;","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"tttyyzzz"},"content":"    public static final String MESSAGE_DELETE_HELP \u003d \"delete -- Delete entry of food or exercise added from a list.\";","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"tttyyzzz"},"content":"    public static final String MESSAGE_EDIT_HELP \u003d \"edit -- Edit entry of food or exercise added from a list.\";","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"tttyyzzz"},"content":"    public static final String MESSAGE_VIEW_HELP \u003d \"view -- View all the food and/or exercises added.\";","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"tttyyzzz"},"content":"    private static String bmi \u003d \"bmi -- Calculate the Body-Mass-Index of user\" + LS","lastModifiedDate":"2021-10-31"},{"lineNumber":26,"author":{"gitId":"tttyyzzz"},"content":"            + \"      Format: bmi {h/HEIGHT_IN_CM w/WEIGHT_IN_KG}\" + LS","lastModifiedDate":"2021-10-31"},{"lineNumber":27,"author":{"gitId":"tttyyzzz"},"content":"            + \"        Prefix               Input \" + LS","lastModifiedDate":"2021-10-31"},{"lineNumber":28,"author":{"gitId":"tttyyzzz"},"content":"            + \"          h/             Height of user in cm\" + LS","lastModifiedDate":"2021-10-31"},{"lineNumber":29,"author":{"gitId":"tttyyzzz"},"content":"            + \"          w/             Weight of user in kg\" + LS","lastModifiedDate":"2021-10-31"},{"lineNumber":30,"author":{"gitId":"tlyi"},"content":"            + \"      If no prefixes are given, bmi will be calculated using the height and weight in the profile.\";","lastModifiedDate":"2021-11-07"},{"lineNumber":31,"author":{"gitId":"tttyyzzz"},"content":"    private static String help \u003d LS","lastModifiedDate":"2021-10-31"},{"lineNumber":32,"author":{"gitId":"tttyyzzz"},"content":"            + \"help -- View help for commands\" + LS","lastModifiedDate":"2021-10-31"},{"lineNumber":33,"author":{"gitId":"tttyyzzz"},"content":"            + \"      Format: help\";","lastModifiedDate":"2021-10-27"},{"lineNumber":34,"author":{"gitId":"tttyyzzz"},"content":"    private static String profile \u003d LS","lastModifiedDate":"2021-10-31"},{"lineNumber":35,"author":{"gitId":"tttyyzzz"},"content":"            + \"profile -- View or modify profile details\" + LS","lastModifiedDate":"2021-10-31"},{"lineNumber":36,"author":{"gitId":"tlyi"},"content":"            + \"      Format: profile {n/NAME} {h/HEIGHT(CM)} {w/WEIGHT(KG)} {a/AGE} {g/CALORIEGOAL} {s/GENDER(M/F)}\"","lastModifiedDate":"2021-11-04"},{"lineNumber":37,"author":{"gitId":"tlyi"},"content":"            + \" {x/ACTIVITYFACTOR(1-5)}\" + LS","lastModifiedDate":"2021-11-04"},{"lineNumber":38,"author":{"gitId":"tttyyzzz"},"content":"            + \"        Prefix               Input \" + LS","lastModifiedDate":"2021-10-31"},{"lineNumber":39,"author":{"gitId":"tttyyzzz"},"content":"            + \"          n/             Name of user\" + LS","lastModifiedDate":"2021-10-31"},{"lineNumber":40,"author":{"gitId":"tttyyzzz"},"content":"            + \"          h/             Height of user in cm\" + LS","lastModifiedDate":"2021-10-31"},{"lineNumber":41,"author":{"gitId":"tttyyzzz"},"content":"            + \"          w/             Weight of user in kg\" + LS","lastModifiedDate":"2021-10-31"},{"lineNumber":42,"author":{"gitId":"tttyyzzz"},"content":"            + \"          s/             Gender of user, m for male, f for female\" + LS","lastModifiedDate":"2021-10-31"},{"lineNumber":43,"author":{"gitId":"tttyyzzz"},"content":"            + \"          a/             Age of user\" + LS","lastModifiedDate":"2021-10-31"},{"lineNumber":44,"author":{"gitId":"tlyi"},"content":"            + \"          g/             Net calorie goal of user.\" + LS","lastModifiedDate":"2021-11-04"},{"lineNumber":45,"author":{"gitId":"tlyi"},"content":"            + \"                         Net calorie is based on calorie of food consumed - \"","lastModifiedDate":"2021-11-04"},{"lineNumber":46,"author":{"gitId":"tlyi"},"content":"            + \"calories burnt from exercise and bmr\" + LS","lastModifiedDate":"2021-11-04"},{"lineNumber":47,"author":{"gitId":"tttyyzzz"},"content":"            + \"          x/             Activity factor of user, range 1 to 5\" + LS","lastModifiedDate":"2021-10-31"},{"lineNumber":48,"author":{"gitId":"tlyi"},"content":"            + \"      If no prefixes are given, user will be shown the current profile particulars.\";","lastModifiedDate":"2021-11-04"},{"lineNumber":49,"author":{"gitId":"tttyyzzz"},"content":"    private static String overview \u003d LS","lastModifiedDate":"2021-10-31"},{"lineNumber":50,"author":{"gitId":"tttyyzzz"},"content":"            + \"overview -- View weekly and daily summary of calories\" + LS","lastModifiedDate":"2021-10-31"},{"lineNumber":51,"author":{"gitId":"tttyyzzz"},"content":"            + \"      Format: overview\";","lastModifiedDate":"2021-10-27"},{"lineNumber":52,"author":{"gitId":"tttyyzzz"},"content":"    private static String bye \u003d LS","lastModifiedDate":"2021-10-31"},{"lineNumber":53,"author":{"gitId":"tttyyzzz"},"content":"            + \"bye -- Exit the program.\" + LS","lastModifiedDate":"2021-10-31"},{"lineNumber":54,"author":{"gitId":"tttyyzzz"},"content":"            + \"      Format: bye\";","lastModifiedDate":"2021-10-27"},{"lineNumber":55,"author":{"gitId":"tttyyzzz"},"content":"    private static String add \u003d \"      Add Food Item\" + LS","lastModifiedDate":"2021-10-31"},{"lineNumber":56,"author":{"gitId":"tttyyzzz"},"content":"            + \"      Format: add f/ITEM {c/CALORIES} {d/DD-MM-YYYY} {t/HHMM}\" + LS","lastModifiedDate":"2021-10-31"},{"lineNumber":57,"author":{"gitId":"tttyyzzz"},"content":"            + \"        Prefix               Input\" + LS","lastModifiedDate":"2021-10-31"},{"lineNumber":58,"author":{"gitId":"tlyi"},"content":"            + \"          f/             Description of the food\" + LS","lastModifiedDate":"2021-11-07"},{"lineNumber":59,"author":{"gitId":"tttyyzzz"},"content":"            + \"          c/             Calories of the food\" + LS","lastModifiedDate":"2021-10-31"},{"lineNumber":60,"author":{"gitId":"tttyyzzz"},"content":"            + \"          d/             Date of food in DD-MM-YYYY\" + LS","lastModifiedDate":"2021-10-31"},{"lineNumber":61,"author":{"gitId":"tttyyzzz"},"content":"            + \"          t/             Time of food in HHMM\" + LS","lastModifiedDate":"2021-10-31"},{"lineNumber":62,"author":{"gitId":"tttyyzzz"},"content":"            + LS","lastModifiedDate":"2021-10-31"},{"lineNumber":63,"author":{"gitId":"tttyyzzz"},"content":"            + \"      Add Exercise Item\" + LS","lastModifiedDate":"2021-10-31"},{"lineNumber":64,"author":{"gitId":"tttyyzzz"},"content":"            + \"      Format: add f/ITEM {c/CALORIES} {d/DD-MM-YYYY} {t/HHMM}\" + LS","lastModifiedDate":"2021-10-31"},{"lineNumber":65,"author":{"gitId":"tttyyzzz"},"content":"            + \"        Prefix               Input\" + LS","lastModifiedDate":"2021-10-31"},{"lineNumber":66,"author":{"gitId":"tttyyzzz"},"content":"            + \"          e/             Description of exercise\" + LS","lastModifiedDate":"2021-10-31"},{"lineNumber":67,"author":{"gitId":"tttyyzzz"},"content":"            + \"          c/             Calories burnt from exercise\" + LS","lastModifiedDate":"2021-10-31"},{"lineNumber":68,"author":{"gitId":"tttyyzzz"},"content":"            + \"          d/             Date of exercise in DD-MM-YYYY\" + LS","lastModifiedDate":"2021-10-31"},{"lineNumber":69,"author":{"gitId":"tttyyzzz"},"content":"            + LS","lastModifiedDate":"2021-10-31"},{"lineNumber":70,"author":{"gitId":"tttyyzzz"},"content":"            + \"      Add Recurring Exercise to Upcoming Exercise List\" + LS","lastModifiedDate":"2021-10-31"},{"lineNumber":71,"author":{"gitId":"tlyi"},"content":"            + \"      Format: add r/ITEM c/CALORIES :/START_DATE -/END_DATE @/DAY_OF_THE_WEEK {,DAY_OF_THE_WEEK,...}\"","lastModifiedDate":"2021-11-07"},{"lineNumber":72,"author":{"gitId":"tlyi"},"content":"            + LS","lastModifiedDate":"2021-11-07"},{"lineNumber":73,"author":{"gitId":"tlyi"},"content":"            + \"      Format: delete e/LIST_NO d/DD-MM-YYYY\" + LS","lastModifiedDate":"2021-11-07"},{"lineNumber":74,"author":{"gitId":"tttyyzzz"},"content":"            + \"        Prefix               Input\" + LS","lastModifiedDate":"2021-10-31"},{"lineNumber":75,"author":{"gitId":"tttyyzzz"},"content":"            + \"          r/             Description of upcoming exercise\" + LS","lastModifiedDate":"2021-10-31"},{"lineNumber":76,"author":{"gitId":"tttyyzzz"},"content":"            + \"          c/             Calories burnt from exercise\" + LS","lastModifiedDate":"2021-10-31"},{"lineNumber":77,"author":{"gitId":"tttyyzzz"},"content":"            + \"          :/             Start date of exercise in DD-MM-YYYY\" + LS","lastModifiedDate":"2021-10-31"},{"lineNumber":78,"author":{"gitId":"tttyyzzz"},"content":"            + \"          -/             End date of exercise in DD-MM-YYYY\" + LS","lastModifiedDate":"2021-10-31"},{"lineNumber":79,"author":{"gitId":"tttyyzzz"},"content":"            + \"          @/             Workout days of the week\" + LS","lastModifiedDate":"2021-10-31"},{"lineNumber":80,"author":{"gitId":"tttyyzzz"},"content":"            + LS","lastModifiedDate":"2021-10-31"},{"lineNumber":81,"author":{"gitId":"tttyyzzz"},"content":"            + \"      Add Food Item in Food Bank\" + LS","lastModifiedDate":"2021-10-31"},{"lineNumber":82,"author":{"gitId":"tttyyzzz"},"content":"            + \"      Format: add fbank/ITEM c/CALORIES\" + LS","lastModifiedDate":"2021-10-31"},{"lineNumber":83,"author":{"gitId":"tttyyzzz"},"content":"            + \"        Prefix               Input\" + LS","lastModifiedDate":"2021-10-31"},{"lineNumber":84,"author":{"gitId":"tttyyzzz"},"content":"            + \"          fbank/         Description of food\" + LS","lastModifiedDate":"2021-10-31"},{"lineNumber":85,"author":{"gitId":"tlyi"},"content":"            + \"          c/             Calories of the food\" + LS","lastModifiedDate":"2021-11-04"},{"lineNumber":86,"author":{"gitId":"tttyyzzz"},"content":"            + LS","lastModifiedDate":"2021-10-31"},{"lineNumber":87,"author":{"gitId":"tttyyzzz"},"content":"            + \"      Add Exercise Item in ExerciseBank\" + LS","lastModifiedDate":"2021-10-31"},{"lineNumber":88,"author":{"gitId":"tttyyzzz"},"content":"            + \"      Format: add fbank/ITEM c/CALORIES\" + LS","lastModifiedDate":"2021-10-31"},{"lineNumber":89,"author":{"gitId":"tttyyzzz"},"content":"            + \"        Prefix               Input\" + LS","lastModifiedDate":"2021-10-31"},{"lineNumber":90,"author":{"gitId":"tlyi"},"content":"            + \"          fbank/         Description of exercise\" + LS","lastModifiedDate":"2021-11-04"},{"lineNumber":91,"author":{"gitId":"tttyyzzz"},"content":"            + \"          c/             Calories burnt from exercise\";","lastModifiedDate":"2021-10-27"},{"lineNumber":92,"author":{"gitId":"tttyyzzz"},"content":"    private static String view \u003d LS","lastModifiedDate":"2021-10-31"},{"lineNumber":93,"author":{"gitId":"tttyyzzz"},"content":"            + \"      Viewing Food List\" + LS","lastModifiedDate":"2021-10-31"},{"lineNumber":94,"author":{"gitId":"tttyyzzz"},"content":"            + \"      Format: view f/\" + LS","lastModifiedDate":"2021-10-31"},{"lineNumber":95,"author":{"gitId":"tttyyzzz"},"content":"            + LS","lastModifiedDate":"2021-10-31"},{"lineNumber":96,"author":{"gitId":"tttyyzzz"},"content":"            + \"      View Exercise List\" + LS","lastModifiedDate":"2021-10-31"},{"lineNumber":97,"author":{"gitId":"tttyyzzz"},"content":"            + \"      Format: view e/\" + LS","lastModifiedDate":"2021-10-31"},{"lineNumber":98,"author":{"gitId":"tttyyzzz"},"content":"            + LS","lastModifiedDate":"2021-10-31"},{"lineNumber":99,"author":{"gitId":"tttyyzzz"},"content":"            + \"      View Upcoming Exercise List\" + LS","lastModifiedDate":"2021-10-31"},{"lineNumber":100,"author":{"gitId":"tttyyzzz"},"content":"            + \"      Format: view u/\" + LS","lastModifiedDate":"2021-10-31"},{"lineNumber":101,"author":{"gitId":"tttyyzzz"},"content":"            + LS","lastModifiedDate":"2021-10-31"},{"lineNumber":102,"author":{"gitId":"tttyyzzz"},"content":"            + \"      View Exercise Bank\" + LS","lastModifiedDate":"2021-10-31"},{"lineNumber":103,"author":{"gitId":"tttyyzzz"},"content":"            + \"      Format: view ebank/\" + LS","lastModifiedDate":"2021-10-31"},{"lineNumber":104,"author":{"gitId":"tttyyzzz"},"content":"            + LS","lastModifiedDate":"2021-10-31"},{"lineNumber":105,"author":{"gitId":"tttyyzzz"},"content":"            + \"      View Food Bank\" + LS","lastModifiedDate":"2021-10-31"},{"lineNumber":106,"author":{"gitId":"tttyyzzz"},"content":"            + \"      Format: view fbank/\";","lastModifiedDate":"2021-10-31"},{"lineNumber":107,"author":{"gitId":"tttyyzzz"},"content":"    private static String delete \u003d \"      Deleting Food Item\" + LS","lastModifiedDate":"2021-10-31"},{"lineNumber":108,"author":{"gitId":"tlyi"},"content":"            + \"      Format: delete f/LIST_NO d/DD-MM-YYYY t/HHMM\" + LS","lastModifiedDate":"2021-11-07"},{"lineNumber":109,"author":{"gitId":"tttyyzzz"},"content":"            + \"        Prefix               Input\" + LS","lastModifiedDate":"2021-10-31"},{"lineNumber":110,"author":{"gitId":"tttyyzzz"},"content":"            + \"          f/             Index of food in Food List within the given date\" + LS","lastModifiedDate":"2021-10-31"},{"lineNumber":111,"author":{"gitId":"tttyyzzz"},"content":"            + \"          d/             Date of food in DD-MM-YYYY\" + LS","lastModifiedDate":"2021-10-31"},{"lineNumber":112,"author":{"gitId":"tttyyzzz"},"content":"            + \"          t/             Time of food in HHMM\" + LS","lastModifiedDate":"2021-10-31"},{"lineNumber":113,"author":{"gitId":"tttyyzzz"},"content":"            + LS","lastModifiedDate":"2021-10-31"},{"lineNumber":114,"author":{"gitId":"tttyyzzz"},"content":"            + \"      Delete Exercise Item\" + LS","lastModifiedDate":"2021-10-31"},{"lineNumber":115,"author":{"gitId":"tlyi"},"content":"            + \"      Format: delete e/LIST_NO d/DD-MM-YYYY\" + LS","lastModifiedDate":"2021-11-07"},{"lineNumber":116,"author":{"gitId":"tttyyzzz"},"content":"            + \"        Prefix               Input\" + LS","lastModifiedDate":"2021-10-31"},{"lineNumber":117,"author":{"gitId":"tlyi"},"content":"            + \"          e/             Index of exercise in Exercise List within the given date\" + LS","lastModifiedDate":"2021-11-04"},{"lineNumber":118,"author":{"gitId":"tttyyzzz"},"content":"            + \"          d/             Date of exercise in DD-MM-YYYY\" + LS","lastModifiedDate":"2021-10-31"},{"lineNumber":119,"author":{"gitId":"tttyyzzz"},"content":"            + \"  \" + LS","lastModifiedDate":"2021-10-31"},{"lineNumber":120,"author":{"gitId":"tttyyzzz"},"content":"            + \"      Delete Upcoming Exercise Items from Upcoming Exercise List\" + LS","lastModifiedDate":"2021-10-31"},{"lineNumber":121,"author":{"gitId":"tlyi"},"content":"            + \"      Format: delete u/LIST_NO {,LIST_NO,...}\" + LS","lastModifiedDate":"2021-11-07"},{"lineNumber":122,"author":{"gitId":"tttyyzzz"},"content":"            + \"        Prefix               Input\" + LS","lastModifiedDate":"2021-10-31"},{"lineNumber":123,"author":{"gitId":"tlyi"},"content":"            + \"          u/             The index of the item within the Upcoming Exercise List\" + LS","lastModifiedDate":"2021-11-07"},{"lineNumber":124,"author":{"gitId":"tttyyzzz"},"content":"            + LS","lastModifiedDate":"2021-10-31"},{"lineNumber":125,"author":{"gitId":"tttyyzzz"},"content":"            + \"      Delete Food Item from Food Bank\" + LS","lastModifiedDate":"2021-10-31"},{"lineNumber":126,"author":{"gitId":"tlyi"},"content":"            + \"      Format: delete fbank/LIST_NO {,LIST_NO,...}\" + LS","lastModifiedDate":"2021-11-07"},{"lineNumber":127,"author":{"gitId":"tttyyzzz"},"content":"            + \"        Prefix               Input\" + LS","lastModifiedDate":"2021-10-31"},{"lineNumber":128,"author":{"gitId":"tlyi"},"content":"            + \"          fbank/         The index of the item within the Food Bank\" + LS","lastModifiedDate":"2021-11-07"},{"lineNumber":129,"author":{"gitId":"tttyyzzz"},"content":"            + LS","lastModifiedDate":"2021-10-31"},{"lineNumber":130,"author":{"gitId":"tttyyzzz"},"content":"            + \"      Delete Exercise Item from Exercise Bank\" + LS","lastModifiedDate":"2021-10-31"},{"lineNumber":131,"author":{"gitId":"tlyi"},"content":"            + \"      Format: delete ebank/LIST_NO {,LIST_NO,...}\" + LS","lastModifiedDate":"2021-11-07"},{"lineNumber":132,"author":{"gitId":"tttyyzzz"},"content":"            + \"        Prefix               Input\" + LS","lastModifiedDate":"2021-10-31"},{"lineNumber":133,"author":{"gitId":"tlyi"},"content":"            + \"          ebank/         The index of the item within the Exercise Bank\";","lastModifiedDate":"2021-11-07"},{"lineNumber":134,"author":{"gitId":"tttyyzzz"},"content":"    private static String edit \u003d \"      Edit Food Bank\" + LS","lastModifiedDate":"2021-10-31"},{"lineNumber":135,"author":{"gitId":"tlyi"},"content":"            + \"      Format: edit fbank/LIST_NO {n/NEW_NAME} {c/NEW_CALORIES}\" + LS","lastModifiedDate":"2021-11-07"},{"lineNumber":136,"author":{"gitId":"tttyyzzz"},"content":"            + \"        Prefix               Input\" + LS","lastModifiedDate":"2021-10-31"},{"lineNumber":137,"author":{"gitId":"tlyi"},"content":"            + \"          fbank/         The index of the item within the Food Bank\" + LS","lastModifiedDate":"2021-11-07"},{"lineNumber":138,"author":{"gitId":"tttyyzzz"},"content":"            + \"          n/             New description of food name\" + LS","lastModifiedDate":"2021-10-31"},{"lineNumber":139,"author":{"gitId":"tttyyzzz"},"content":"            + \"          c/             Calories of food\" + LS","lastModifiedDate":"2021-10-31"},{"lineNumber":140,"author":{"gitId":"tttyyzzz"},"content":"            + \"   \" + LS","lastModifiedDate":"2021-10-31"},{"lineNumber":141,"author":{"gitId":"tttyyzzz"},"content":"            + \"      Edit Exercise Bank\" + LS","lastModifiedDate":"2021-10-31"},{"lineNumber":142,"author":{"gitId":"tlyi"},"content":"            + \"      Format: edit ebank/LIST_NO {n/NEW_NAME} {c/NEW_CALORIES}\" + LS","lastModifiedDate":"2021-11-07"},{"lineNumber":143,"author":{"gitId":"tttyyzzz"},"content":"            + \"        Prefix               Input\" + LS","lastModifiedDate":"2021-10-31"},{"lineNumber":144,"author":{"gitId":"tlyi"},"content":"            + \"          ebank/         The index of the item within the Exercise Bank\" + LS","lastModifiedDate":"2021-11-07"},{"lineNumber":145,"author":{"gitId":"tttyyzzz"},"content":"            + \"          n/             New description of exercise name\" + LS","lastModifiedDate":"2021-10-31"},{"lineNumber":146,"author":{"gitId":"tttyyzzz"},"content":"            + \"          c/             Calories burnt from exercise\" + LS","lastModifiedDate":"2021-10-31"},{"lineNumber":147,"author":{"gitId":"tttyyzzz"},"content":"            + LS","lastModifiedDate":"2021-10-31"},{"lineNumber":148,"author":{"gitId":"tttyyzzz"},"content":"            + \"     Edit Upcoming Exercise List\" + LS","lastModifiedDate":"2021-10-31"},{"lineNumber":149,"author":{"gitId":"tlyi"},"content":"            + \"     Format: edit u/LIST_NO {n/NEW_NAME} {c/NEW_CALORIES}\" + LS","lastModifiedDate":"2021-11-07"},{"lineNumber":150,"author":{"gitId":"tttyyzzz"},"content":"            + \"        Prefix               Input\" + LS","lastModifiedDate":"2021-10-31"},{"lineNumber":151,"author":{"gitId":"tlyi"},"content":"            + \"          u/             The index of the item within the Upcoming Exercise List\" + LS","lastModifiedDate":"2021-11-07"},{"lineNumber":152,"author":{"gitId":"tttyyzzz"},"content":"            + \"          n/             New description of exercise name\" + LS","lastModifiedDate":"2021-10-31"},{"lineNumber":153,"author":{"gitId":"tttyyzzz"},"content":"            + \"          c/             Calories burnt from exercise\";","lastModifiedDate":"2021-10-27"},{"lineNumber":154,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":155,"author":{"gitId":"tttyyzzz"},"content":"    private String buildHelpString2() {","lastModifiedDate":"2021-10-27"},{"lineNumber":156,"author":{"gitId":"tlyi"},"content":"        StringBuilder helpMessage \u003d new StringBuilder(EMPTY);","lastModifiedDate":"2021-10-28"},{"lineNumber":157,"author":{"gitId":"tttyyzzz"},"content":"        helpMessage.append(MESSAGE_HELP_INTRO).append(LS).append(LS)","lastModifiedDate":"2021-10-27"},{"lineNumber":158,"author":{"gitId":"tttyyzzz"},"content":"                .append(MESSAGE_COMMON_NOTATIONS).append(LS).append(LS)","lastModifiedDate":"2021-10-27"},{"lineNumber":159,"author":{"gitId":"tttyyzzz"},"content":"                .append(MESSAGE_ADD_HELP).append(LS)","lastModifiedDate":"2021-10-27"},{"lineNumber":160,"author":{"gitId":"tttyyzzz"},"content":"                .append(add).append(LS).append(LS)","lastModifiedDate":"2021-10-27"},{"lineNumber":161,"author":{"gitId":"tttyyzzz"},"content":"                .append(bmi).append(LS)","lastModifiedDate":"2021-10-27"},{"lineNumber":162,"author":{"gitId":"tttyyzzz"},"content":"                .append(bye).append(LS).append(LS)","lastModifiedDate":"2021-10-27"},{"lineNumber":163,"author":{"gitId":"tttyyzzz"},"content":"                .append(MESSAGE_DELETE_HELP).append(LS)","lastModifiedDate":"2021-10-27"},{"lineNumber":164,"author":{"gitId":"tttyyzzz"},"content":"                .append(delete).append(LS).append(LS)","lastModifiedDate":"2021-10-27"},{"lineNumber":165,"author":{"gitId":"tttyyzzz"},"content":"                .append(MESSAGE_EDIT_HELP).append(LS)","lastModifiedDate":"2021-10-27"},{"lineNumber":166,"author":{"gitId":"tttyyzzz"},"content":"                .append(edit).append(LS)","lastModifiedDate":"2021-10-27"},{"lineNumber":167,"author":{"gitId":"tttyyzzz"},"content":"                .append(help).append(LS)","lastModifiedDate":"2021-10-27"},{"lineNumber":168,"author":{"gitId":"tttyyzzz"},"content":"                .append(profile).append(LS)","lastModifiedDate":"2021-10-27"},{"lineNumber":169,"author":{"gitId":"tttyyzzz"},"content":"                .append(overview).append(LS).append(LS)","lastModifiedDate":"2021-10-27"},{"lineNumber":170,"author":{"gitId":"tttyyzzz"},"content":"                .append(MESSAGE_VIEW_HELP).append(LS)","lastModifiedDate":"2021-10-27"},{"lineNumber":171,"author":{"gitId":"tttyyzzz"},"content":"                .append(view).append(LS);","lastModifiedDate":"2021-10-27"},{"lineNumber":172,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":173,"author":{"gitId":"tttyyzzz"},"content":"        return helpMessage.toString().trim();","lastModifiedDate":"2021-10-27"},{"lineNumber":174,"author":{"gitId":"tttyyzzz"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":175,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":176,"author":{"gitId":"tlyi"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":177,"author":{"gitId":"tlyi"},"content":"    public CommandResult execute() {","lastModifiedDate":"2021-10-10"},{"lineNumber":178,"author":{"gitId":"tttyyzzz"},"content":"        return new CommandResult(buildHelpString2());","lastModifiedDate":"2021-10-27"},{"lineNumber":179,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":180,"author":{"gitId":"tlyi"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"tttyyzzz":138,"tryyang2001":1,"tlyi":41}},{"path":"src/main/java/seedu/duke/logic/commands/InvalidCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.logic.commands;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"tlyi"},"content":"/**","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"tlyi"},"content":" * Represents any command that cannot be executed due to invalid format.","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"tlyi"},"content":" * Contains a String of message that describes the error.","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"tlyi"},"content":" */","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"tlyi"},"content":"public class InvalidCommand extends Command {","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"tlyi"},"content":"    public final String errorMessage;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"tlyi"},"content":"    public InvalidCommand(String errorMessage) {","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"tlyi"},"content":"        this.errorMessage \u003d errorMessage;","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"tlyi"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"tlyi"},"content":"    public CommandResult execute() {","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"tlyi"},"content":"        return new CommandResult(this.errorMessage);","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"tlyi"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"tlyi":18}},{"path":"src/main/java/seedu/duke/logic/commands/OverviewCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.logic.commands;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"tlyi"},"content":"import seedu.duke.logic.Statistics;","lastModifiedDate":"2021-11-07"},{"lineNumber":4,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"tlyi"},"content":"/**","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"tlyi"},"content":" * Represents the command that when executed, displays the overview of calorie statistics.","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"tlyi"},"content":" */","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"tlyi"},"content":"public class OverviewCommand extends Command {","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"tlyi"},"content":"    public static final String COMMAND_WORD \u003d \"overview\";","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"tttyyzzz"},"content":"    protected Statistics statistics;","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"tlyi"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"tlyi"},"content":"    public CommandResult execute() {","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"tttyyzzz"},"content":"        statistics \u003d new Statistics(super.foodItems, super.exerciseItems, super.profile);","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"tttyyzzz"},"content":"        return new CommandResult(this.statistics.overviewSummary());","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"tlyi"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"tttyyzzz":4,"tlyi":14}},{"path":"src/main/java/seedu/duke/logic/commands/ProfileCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.logic.commands;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"tlyi"},"content":"/**","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"tlyi"},"content":" * Represents the command that when executed, shows the value of name, height and weight in the Profile.","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"tlyi"},"content":" */","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"tlyi"},"content":"public class ProfileCommand extends Command {","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"tlyi"},"content":"    public ProfileCommand() {","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"tlyi"},"content":"    @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"tlyi"},"content":"    public CommandResult execute() {","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"tlyi"},"content":"        return new CommandResult(super.profile.convertToString());","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"tlyi"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"tlyi":15}},{"path":"src/main/java/seedu/duke/logic/commands/ProfileUpdateCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.logic.commands;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"tlyi"},"content":"import seedu.duke.data.profile.attributes.ActivityFactor;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"tlyi"},"content":"import seedu.duke.data.profile.attributes.Age;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"tlyi"},"content":"import seedu.duke.data.profile.attributes.CalorieGoal;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"tlyi"},"content":"import seedu.duke.data.profile.attributes.Gender;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"tlyi"},"content":"import seedu.duke.data.profile.attributes.Height;","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"tlyi"},"content":"import seedu.duke.data.profile.attributes.Name;","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"tlyi"},"content":"import seedu.duke.data.profile.attributes.Weight;","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"tlyi"},"content":"import seedu.duke.data.profile.exceptions.InvalidCharacteristicException;","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"tlyi"},"content":"import seedu.duke.data.profile.utilities.ProfileUtils;","lastModifiedDate":"2021-11-03"},{"lineNumber":12,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"weidak"},"content":"/**","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"tlyi"},"content":" * Represents the command that when executed, changes the value of attributes in the Profile.","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"weidak"},"content":" */","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"weidak"},"content":"public class ProfileUpdateCommand extends Command {","lastModifiedDate":"2021-10-18"},{"lineNumber":17,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":18,"author":{"gitId":"tlyi"},"content":"    public static final String[] EXPECTED_PREFIXES \u003d {","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"tlyi"},"content":"            COMMAND_PREFIX_NAME,","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"tlyi"},"content":"            COMMAND_PREFIX_HEIGHT,","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"tlyi"},"content":"            COMMAND_PREFIX_WEIGHT,","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"tlyi"},"content":"            COMMAND_PREFIX_GOAL,","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"tlyi"},"content":"            COMMAND_PREFIX_AGE,","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"tlyi"},"content":"            COMMAND_PREFIX_ACTIVITY_FACTOR,","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"tlyi"},"content":"            COMMAND_PREFIX_GENDER","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"tlyi"},"content":"    };","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Your profile has been updated!\" + CommandMessages.LS + \"%s\";","lastModifiedDate":"2021-10-27"},{"lineNumber":29,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":30,"author":{"gitId":"weidak"},"content":"    private Name name;","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"weidak"},"content":"    private Weight weight;","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"weidak"},"content":"    private Height height;","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"weidak"},"content":"    private CalorieGoal calorieGoal;","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"weidak"},"content":"    private Age age;","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"weidak"},"content":"    private ActivityFactor activityFactor;","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"weidak"},"content":"    private Gender gender;","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":38,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":39,"author":{"gitId":"tlyi"},"content":"    public ProfileUpdateCommand(String name, Double height, Double weight, Integer calorieGoal, Integer age,","lastModifiedDate":"2021-10-30"},{"lineNumber":40,"author":{"gitId":"tlyi"},"content":"                                Integer activityFactor, Character gender) {","lastModifiedDate":"2021-10-30"},{"lineNumber":41,"author":{"gitId":"tlyi"},"content":"        this.name \u003d name \u003d\u003d null ? null : new Name(name);","lastModifiedDate":"2021-10-30"},{"lineNumber":42,"author":{"gitId":"tlyi"},"content":"        this.height \u003d height \u003d\u003d null ? null : new Height(height);","lastModifiedDate":"2021-10-30"},{"lineNumber":43,"author":{"gitId":"tlyi"},"content":"        this.weight \u003d weight \u003d\u003d null ? null : new Weight(weight);","lastModifiedDate":"2021-10-30"},{"lineNumber":44,"author":{"gitId":"tlyi"},"content":"        this.calorieGoal \u003d calorieGoal \u003d\u003d null ? null : new CalorieGoal(calorieGoal);","lastModifiedDate":"2021-10-30"},{"lineNumber":45,"author":{"gitId":"tlyi"},"content":"        this.gender \u003d gender \u003d\u003d NULL_CHAR ? null : new Gender(gender);","lastModifiedDate":"2021-10-30"},{"lineNumber":46,"author":{"gitId":"tlyi"},"content":"        this.age \u003d age \u003d\u003d null ? null : new Age(age);","lastModifiedDate":"2021-10-30"},{"lineNumber":47,"author":{"gitId":"tlyi"},"content":"        this.activityFactor \u003d activityFactor \u003d\u003d null ? null : new ActivityFactor(activityFactor);","lastModifiedDate":"2021-10-30"},{"lineNumber":48,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":49,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":50,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":51,"author":{"gitId":"weidak"},"content":"    private void checkIfCommandShouldExecute() throws InvalidCharacteristicException {","lastModifiedDate":"2021-10-20"},{"lineNumber":52,"author":{"gitId":"weidak"},"content":"        if (!height.isValid()) {","lastModifiedDate":"2021-10-20"},{"lineNumber":53,"author":{"gitId":"weidak"},"content":"            throw new InvalidCharacteristicException(ProfileUtils.ERROR_HEIGHT);","lastModifiedDate":"2021-10-30"},{"lineNumber":54,"author":{"gitId":"weidak"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":55,"author":{"gitId":"weidak"},"content":"        if (!weight.isValid()) {","lastModifiedDate":"2021-10-20"},{"lineNumber":56,"author":{"gitId":"weidak"},"content":"            throw new InvalidCharacteristicException(ProfileUtils.ERROR_WEIGHT);","lastModifiedDate":"2021-10-30"},{"lineNumber":57,"author":{"gitId":"weidak"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":58,"author":{"gitId":"weidak"},"content":"        if (!gender.isValid()) {","lastModifiedDate":"2021-10-20"},{"lineNumber":59,"author":{"gitId":"weidak"},"content":"            throw new InvalidCharacteristicException(ProfileUtils.ERROR_GENDER);","lastModifiedDate":"2021-10-30"},{"lineNumber":60,"author":{"gitId":"weidak"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":61,"author":{"gitId":"weidak"},"content":"        if (!age.isValid()) {","lastModifiedDate":"2021-10-20"},{"lineNumber":62,"author":{"gitId":"weidak"},"content":"            throw new InvalidCharacteristicException(ProfileUtils.ERROR_AGE);","lastModifiedDate":"2021-10-30"},{"lineNumber":63,"author":{"gitId":"weidak"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":64,"author":{"gitId":"weidak"},"content":"        if (!calorieGoal.isValid()) {","lastModifiedDate":"2021-10-20"},{"lineNumber":65,"author":{"gitId":"weidak"},"content":"            throw new InvalidCharacteristicException(ProfileUtils.ERROR_CALORIE_GOAL);","lastModifiedDate":"2021-10-30"},{"lineNumber":66,"author":{"gitId":"weidak"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":67,"author":{"gitId":"weidak"},"content":"        if (!activityFactor.isValid()) {","lastModifiedDate":"2021-10-20"},{"lineNumber":68,"author":{"gitId":"weidak"},"content":"            throw new InvalidCharacteristicException(ProfileUtils.ERROR_ACTIVITY_FACTOR);","lastModifiedDate":"2021-10-30"},{"lineNumber":69,"author":{"gitId":"weidak"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":70,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":71,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":72,"author":{"gitId":"weidak"},"content":"    @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":73,"author":{"gitId":"weidak"},"content":"    public CommandResult execute() {","lastModifiedDate":"2021-10-18"},{"lineNumber":74,"author":{"gitId":"weidak"},"content":"        try {","lastModifiedDate":"2021-10-18"},{"lineNumber":75,"author":{"gitId":"tlyi"},"content":"            this.name \u003d name \u003d\u003d null ? super.profile.getProfileName() : name;","lastModifiedDate":"2021-10-30"},{"lineNumber":76,"author":{"gitId":"tlyi"},"content":"            this.height \u003d height \u003d\u003d null ? super.profile.getProfileHeight() : height;","lastModifiedDate":"2021-10-30"},{"lineNumber":77,"author":{"gitId":"tlyi"},"content":"            this.weight \u003d weight \u003d\u003d null ? super.profile.getProfileWeight() : weight;","lastModifiedDate":"2021-10-30"},{"lineNumber":78,"author":{"gitId":"tlyi"},"content":"            this.gender \u003d gender \u003d\u003d null ? super.profile.getProfileGender() : gender;","lastModifiedDate":"2021-10-30"},{"lineNumber":79,"author":{"gitId":"tlyi"},"content":"            this.age \u003d age \u003d\u003d null ? super.profile.getProfileAge() : age;","lastModifiedDate":"2021-10-30"},{"lineNumber":80,"author":{"gitId":"tlyi"},"content":"            this.calorieGoal \u003d calorieGoal \u003d\u003d null","lastModifiedDate":"2021-10-30"},{"lineNumber":81,"author":{"gitId":"weidak"},"content":"                    ? super.profile.getProfileCalorieGoal()","lastModifiedDate":"2021-10-20"},{"lineNumber":82,"author":{"gitId":"weidak"},"content":"                    : calorieGoal;","lastModifiedDate":"2021-10-20"},{"lineNumber":83,"author":{"gitId":"tlyi"},"content":"            this.activityFactor \u003d activityFactor \u003d\u003d null","lastModifiedDate":"2021-10-30"},{"lineNumber":84,"author":{"gitId":"weidak"},"content":"                    ? super.profile.getProfileActivityFactor()","lastModifiedDate":"2021-10-20"},{"lineNumber":85,"author":{"gitId":"weidak"},"content":"                    : activityFactor;","lastModifiedDate":"2021-10-20"},{"lineNumber":86,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":87,"author":{"gitId":"weidak"},"content":"            checkIfCommandShouldExecute();","lastModifiedDate":"2021-10-20"},{"lineNumber":88,"author":{"gitId":"weidak"},"content":"            super.profile.setProfile(this.name, this.height, this.weight,","lastModifiedDate":"2021-10-21"},{"lineNumber":89,"author":{"gitId":"weidak"},"content":"                    this.gender, this.age, this.calorieGoal, this.activityFactor);","lastModifiedDate":"2021-10-20"},{"lineNumber":90,"author":{"gitId":"weidak"},"content":"            return new CommandResult(String.format(","lastModifiedDate":"2021-10-18"},{"lineNumber":91,"author":{"gitId":"tlyi"},"content":"                    MESSAGE_SUCCESS, super.profile.convertToString()));","lastModifiedDate":"2021-10-21"},{"lineNumber":92,"author":{"gitId":"weidak"},"content":"        } catch (InvalidCharacteristicException e) {","lastModifiedDate":"2021-10-18"},{"lineNumber":93,"author":{"gitId":"weidak"},"content":"            return new CommandResult(e.getMessage());","lastModifiedDate":"2021-10-18"},{"lineNumber":94,"author":{"gitId":"weidak"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":95,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":96,"author":{"gitId":"weidak"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"weidak":55,"tlyi":41}},{"path":"src/main/java/seedu/duke/logic/commands/ViewExerciseBankCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.logic.commands;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"tlyi"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"tlyi"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"tlyi"},"content":"/**","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"tlyi"},"content":" * Represents the command that when executed, lists all the items in the ExerciseBank.","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"tlyi"},"content":" */","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"tlyi"},"content":"public class ViewExerciseBankCommand extends Command {","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"You have %1$d exercise(s) in your exercise bank:\"","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"tlyi"},"content":"            + CommandMessages.LS + \"%2$s\";","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"tlyi"},"content":"    private static Logger logger \u003d Logger.getLogger(\"ViewExerciseBankCommand\");","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"tlyi"},"content":"    @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"tlyi"},"content":"    public CommandResult execute() {","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"tlyi"},"content":"        if (super.exerciseBank.getSize() \u003d\u003d 0) {","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"tlyi"},"content":"            logger.log(Level.FINE, \"Exercise bank is empty\");","lastModifiedDate":"2021-11-08"},{"lineNumber":19,"author":{"gitId":"tlyi"},"content":"            return new CommandResult(CommandMessages.MESSAGE_EMPTY_EXERCISE_BANK);","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"tlyi"},"content":"        assert exerciseBank.getSize() \u003e 0 : \"Exercise bank is not empty\";","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"tlyi"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, super.exerciseBank.getSize(),","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"tlyi"},"content":"                super.exerciseBank.convertToString()));","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"tlyi"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"tlyi":25}},{"path":"src/main/java/seedu/duke/logic/commands/ViewExerciseListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.logic.commands;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"xingjie99"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"xingjie99"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"tlyi"},"content":"/**","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"tlyi"},"content":" * Represents the command that when executed, lists all the items in the ExerciseList.","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"tlyi"},"content":" */","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"tlyi"},"content":"public class ViewExerciseListCommand extends Command {","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"tryyang2001"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Here is a summary of all the exercises you have done \"","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"tlyi"},"content":"            + \"in the past week:\" + CommandMessages.LS + \"%1$s\";","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"xingjie99"},"content":"    private static Logger logger \u003d Logger.getLogger(\"ViewExerciseCommand\");","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"tlyi"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"tlyi"},"content":"    public CommandResult execute() {","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"xingjie99"},"content":"        if (super.exerciseItems.getSize() \u003d\u003d 0) {","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"tlyi"},"content":"            logger.log(Level.FINE, \"Exercise list is empty\");","lastModifiedDate":"2021-11-08"},{"lineNumber":20,"author":{"gitId":"tlyi"},"content":"            return new CommandResult(CommandMessages.MESSAGE_EMPTY_EXERCISE_LIST);","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"xingjie99"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"xingjie99"},"content":"        assert exerciseItems.getSize() \u003e 0 : \"Exercise list is not empty\";","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"tryyang2001"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, super.exerciseItems.convertToString()));","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"tlyi"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"xingjie99":7,"tryyang2001":2,"tlyi":16}},{"path":"src/main/java/seedu/duke/logic/commands/ViewFoodBankCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.logic.commands;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"tlyi"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"tlyi"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"tlyi"},"content":"/**","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"tlyi"},"content":" * Represents the command that when executed, lists all the items in the FoodBank.","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"tlyi"},"content":" */","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"tlyi"},"content":"public class ViewFoodBankCommand extends Command {","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"You have %1$d food(s) in your food bank:\"","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"tlyi"},"content":"            + CommandMessages.LS + \"%2$s\";","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"tlyi"},"content":"    private static Logger logger \u003d Logger.getLogger(\"ViewFoodBankCommand\");","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"tlyi"},"content":"    @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"tlyi"},"content":"    public CommandResult execute() {","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"tlyi"},"content":"        if (super.foodBank.getSize() \u003d\u003d 0) {","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"tlyi"},"content":"            logger.log(Level.FINE, \"Food bank is empty\");","lastModifiedDate":"2021-11-08"},{"lineNumber":19,"author":{"gitId":"tlyi"},"content":"            return new CommandResult(CommandMessages.MESSAGE_EMPTY_FOOD_BANK);","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"tlyi"},"content":"        assert foodBank.getSize() \u003e 0 : \"Food bank is not empty\";","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"tlyi"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, super.foodBank.getSize(),","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"tlyi"},"content":"                super.foodBank.convertToString()));","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"tlyi"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"tlyi":25}},{"path":"src/main/java/seedu/duke/logic/commands/ViewFoodListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.logic.commands;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"tlyi"},"content":"/**","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"tlyi"},"content":" * Represents the command that when executed, lists all the items in the FoodList.","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"tlyi"},"content":" */","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"tlyi"},"content":"public class ViewFoodListCommand extends Command {","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"tryyang2001"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Here is a summary of all the food items you have consumed \"","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"tlyi"},"content":"            + \"in the past week:\" + CommandMessages.LS + \"%1$s\";","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"tlyi"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"tlyi"},"content":"    public CommandResult execute() {","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"tlyi"},"content":"        if (super.foodItems.getSize() \u003d\u003d 0) {","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"tlyi"},"content":"            return new CommandResult(CommandMessages.MESSAGE_EMPTY_FOOD_LIST);","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"tryyang2001"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, super.foodItems.convertToString()));","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"tlyi"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"tryyang2001":2,"tlyi":16}},{"path":"src/main/java/seedu/duke/logic/commands/ViewFutureExerciseListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.logic.commands;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"xingjie99"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"xingjie99"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"xingjie99"},"content":"/**","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"xingjie99"},"content":" * Represents the command that when executed, lists all the items in the FutureExerciseList.","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"xingjie99"},"content":" */","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"tlyi"},"content":"public class ViewFutureExerciseListCommand extends Command {","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"xingjie99"},"content":"    public static final String MESSAGE_FUTURE_EXERCISE \u003d \"You have %d upcoming exercise(s):\"","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"tlyi"},"content":"            + CommandMessages.LS + \"%2$s\";","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"tlyi"},"content":"    private static Logger logger \u003d Logger.getLogger(\"ViewFutureExerciseCommand\");","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"xingjie99"},"content":"    @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"xingjie99"},"content":"    public CommandResult execute() {","lastModifiedDate":"2021-10-18"},{"lineNumber":17,"author":{"gitId":"xingjie99"},"content":"        if (super.futureExerciseItems.getSize() \u003d\u003d 0) {","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"tlyi"},"content":"            logger.log(Level.FINE, \"Future exercise list is empty\");","lastModifiedDate":"2021-11-08"},{"lineNumber":19,"author":{"gitId":"tlyi"},"content":"            return new CommandResult(CommandMessages.MESSAGE_EMPTY_FUTURE_EXERCISE_LIST);","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"xingjie99"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"xingjie99"},"content":"        assert futureExerciseItems.getSize() \u003e 0 : \"Future exercise list is not empty\";","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"xingjie99"},"content":"        return new CommandResult(String.format(MESSAGE_FUTURE_EXERCISE, super.futureExerciseItems.getSize(),","lastModifiedDate":"2021-10-18"},{"lineNumber":23,"author":{"gitId":"xingjie99"},"content":"                super.futureExerciseItems.convertToString()));","lastModifiedDate":"2021-10-18"},{"lineNumber":24,"author":{"gitId":"xingjie99"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":25,"author":{"gitId":"xingjie99"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"xingjie99":19,"tlyi":6}},{"path":"src/main/java/seedu/duke/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.logic.parser;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"tlyi"},"content":"import seedu.duke.logic.commands.AddExerciseBankCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"tlyi"},"content":"import seedu.duke.logic.commands.AddExerciseCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"tlyi"},"content":"import seedu.duke.logic.commands.AddFoodBankCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"tlyi"},"content":"import seedu.duke.logic.commands.AddFoodCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"tlyi"},"content":"import seedu.duke.logic.commands.AddFutureExerciseCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"tlyi"},"content":"import seedu.duke.logic.commands.AddRecurringExerciseCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"tlyi"},"content":"import seedu.duke.logic.commands.Command;","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"tlyi"},"content":"import seedu.duke.logic.commands.CommandMessages;","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"tlyi"},"content":"import seedu.duke.logic.commands.InvalidCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"tlyi"},"content":"import seedu.duke.logic.parser.exceptions.ItemNotSpecifiedException;","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"tlyi"},"content":"import seedu.duke.logic.parser.exceptions.MissingParamException;","lastModifiedDate":"2021-11-03"},{"lineNumber":14,"author":{"gitId":"tlyi"},"content":"import seedu.duke.logic.parser.exceptions.ParserException;","lastModifiedDate":"2021-11-03"},{"lineNumber":15,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"tlyi"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"tlyi"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"tryyang2001"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"tlyi"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"tlyi"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"tlyi"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"tlyi"},"content":"/**","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"tlyi"},"content":" * Parses input arguments for Add commands.","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"tlyi"},"content":" */","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"tlyi"},"content":"public class AddCommandParser implements Parser {","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"tryyang2001"},"content":"    public static final DateTimeFormatter DATE_FORMAT \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy\");","lastModifiedDate":"2021-10-27"},{"lineNumber":29,"author":{"gitId":"tlyi"},"content":"    protected static final Logger logger \u003d Logger.getLogger(AddCommandParser.class.getName());","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"tlyi"},"content":"    @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"tlyi"},"content":"    public Command parse(String params) {","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"tlyi"},"content":"        try {","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"tlyi"},"content":"            final String itemTypePrefix \u003d ParserUtils.extractItemTypePrefix(params);","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"tlyi"},"content":"            switch (itemTypePrefix) {","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"tlyi"},"content":"            case Command.COMMAND_PREFIX_EXERCISE:","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"tlyi"},"content":"                return parseAddToExercise(params, itemTypePrefix);","lastModifiedDate":"2021-11-03"},{"lineNumber":38,"author":{"gitId":"tlyi"},"content":"            case Command.COMMAND_PREFIX_FOOD:","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"tlyi"},"content":"                return parseAddToFood(params, itemTypePrefix);","lastModifiedDate":"2021-11-03"},{"lineNumber":40,"author":{"gitId":"tlyi"},"content":"            case Command.COMMAND_PREFIX_RECURRING:","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"tlyi"},"content":"                return parseAddRecurring(params, itemTypePrefix);","lastModifiedDate":"2021-11-03"},{"lineNumber":42,"author":{"gitId":"tlyi"},"content":"            case Command.COMMAND_PREFIX_EXERCISE_BANK:","lastModifiedDate":"2021-10-21"},{"lineNumber":43,"author":{"gitId":"tlyi"},"content":"                return parseAddToExerciseBank(params, itemTypePrefix);","lastModifiedDate":"2021-11-07"},{"lineNumber":44,"author":{"gitId":"tlyi"},"content":"            case Command.COMMAND_PREFIX_FOOD_BANK:","lastModifiedDate":"2021-10-21"},{"lineNumber":45,"author":{"gitId":"tlyi"},"content":"                return parseAddToFoodBank(params, itemTypePrefix);","lastModifiedDate":"2021-11-07"},{"lineNumber":46,"author":{"gitId":"tlyi"},"content":"            default:","lastModifiedDate":"2021-10-21"},{"lineNumber":47,"author":{"gitId":"tlyi"},"content":"                throw new ItemNotSpecifiedException();","lastModifiedDate":"2021-10-21"},{"lineNumber":48,"author":{"gitId":"tlyi"},"content":"            }","lastModifiedDate":"2021-10-21"},{"lineNumber":49,"author":{"gitId":"tlyi"},"content":"        } catch (ItemNotSpecifiedException e) {","lastModifiedDate":"2021-10-21"},{"lineNumber":50,"author":{"gitId":"tlyi"},"content":"            return new InvalidCommand(CommandMessages.MESSAGE_ADD_COMMAND_INVALID_FORMAT);","lastModifiedDate":"2021-10-27"},{"lineNumber":51,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":52,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":53,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":54,"author":{"gitId":"tlyi"},"content":"    protected Command parseAddToExercise(String params, String itemTypePrefix) {","lastModifiedDate":"2021-11-03"},{"lineNumber":55,"author":{"gitId":"tlyi"},"content":"        try {","lastModifiedDate":"2021-10-21"},{"lineNumber":56,"author":{"gitId":"tlyi"},"content":"            if (ParserUtils.hasExtraDelimiters(params, AddExerciseCommand.EXPECTED_PREFIXES)) {","lastModifiedDate":"2021-11-04"},{"lineNumber":57,"author":{"gitId":"tlyi"},"content":"                return new InvalidCommand(ParserMessages.MESSAGE_ERROR_TOO_MANY_DELIMITERS);","lastModifiedDate":"2021-11-04"},{"lineNumber":58,"author":{"gitId":"tlyi"},"content":"            }","lastModifiedDate":"2021-11-04"},{"lineNumber":59,"author":{"gitId":"tlyi"},"content":"            final String description \u003d ParserUtils.extractItemDescription(params, itemTypePrefix);","lastModifiedDate":"2021-10-21"},{"lineNumber":60,"author":{"gitId":"tlyi"},"content":"            final Integer calories \u003d ParserUtils.extractItemCalories(params);","lastModifiedDate":"2021-11-03"},{"lineNumber":61,"author":{"gitId":"tlyi"},"content":"            final LocalDate date \u003d ParserUtils.extractDate(params, false);","lastModifiedDate":"2021-10-21"},{"lineNumber":62,"author":{"gitId":"tlyi"},"content":"            logger.log(Level.FINE, String.format(\"date detected is: %s\", date));","lastModifiedDate":"2021-11-08"},{"lineNumber":63,"author":{"gitId":"tryyang2001"},"content":"            if (ParserUtils.isSevenDaysBeforeToday(date)) {","lastModifiedDate":"2021-11-02"},{"lineNumber":64,"author":{"gitId":"tryyang2001"},"content":"                return new InvalidCommand(String.format(ParserMessages.MESSAGE_ERROR_ITEM_DATE_TOO_OLD,","lastModifiedDate":"2021-10-27"},{"lineNumber":65,"author":{"gitId":"tryyang2001"},"content":"                        LocalDate.now().minusDays(6).format(DATE_FORMAT),","lastModifiedDate":"2021-11-07"},{"lineNumber":66,"author":{"gitId":"tryyang2001"},"content":"                        LocalDate.now().format(DATE_FORMAT)));","lastModifiedDate":"2021-10-27"},{"lineNumber":67,"author":{"gitId":"tlyi"},"content":"            }","lastModifiedDate":"2021-10-21"},{"lineNumber":68,"author":{"gitId":"tlyi"},"content":"            if (ParserUtils.isFutureDate(date)) {","lastModifiedDate":"2021-10-21"},{"lineNumber":69,"author":{"gitId":"tlyi"},"content":"                logger.log(Level.FINE, String.format(\"adding to future list\"));","lastModifiedDate":"2021-11-08"},{"lineNumber":70,"author":{"gitId":"tlyi"},"content":"                return new AddFutureExerciseCommand(description, calories, date);","lastModifiedDate":"2021-10-30"},{"lineNumber":71,"author":{"gitId":"tlyi"},"content":"            }","lastModifiedDate":"2021-10-21"},{"lineNumber":72,"author":{"gitId":"tlyi"},"content":"            return new AddExerciseCommand(description, calories, date);","lastModifiedDate":"2021-10-30"},{"lineNumber":73,"author":{"gitId":"tlyi"},"content":"        } catch (ParserException e) {","lastModifiedDate":"2021-11-03"},{"lineNumber":74,"author":{"gitId":"tlyi"},"content":"            return new InvalidCommand(e.getMessage());","lastModifiedDate":"2021-11-03"},{"lineNumber":75,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-11-03"},{"lineNumber":76,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":77,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":78,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":79,"author":{"gitId":"tlyi"},"content":"    protected Command parseAddToFood(String params, String itemTypePrefix) {","lastModifiedDate":"2021-11-03"},{"lineNumber":80,"author":{"gitId":"tlyi"},"content":"        try {","lastModifiedDate":"2021-11-03"},{"lineNumber":81,"author":{"gitId":"tlyi"},"content":"            if (ParserUtils.hasExtraDelimiters(params, AddFoodCommand.EXPECTED_PREFIXES)) {","lastModifiedDate":"2021-11-04"},{"lineNumber":82,"author":{"gitId":"tlyi"},"content":"                return new InvalidCommand(ParserMessages.MESSAGE_ERROR_TOO_MANY_DELIMITERS);","lastModifiedDate":"2021-11-04"},{"lineNumber":83,"author":{"gitId":"tlyi"},"content":"            }","lastModifiedDate":"2021-11-04"},{"lineNumber":84,"author":{"gitId":"tlyi"},"content":"            final String description \u003d ParserUtils.extractItemDescription(params, itemTypePrefix);","lastModifiedDate":"2021-11-03"},{"lineNumber":85,"author":{"gitId":"tlyi"},"content":"            final Integer calories \u003d ParserUtils.extractItemCalories(params);","lastModifiedDate":"2021-11-03"},{"lineNumber":86,"author":{"gitId":"tlyi"},"content":"            final LocalDateTime dateTime \u003d ParserUtils.extractDateTime(params);","lastModifiedDate":"2021-10-21"},{"lineNumber":87,"author":{"gitId":"tlyi"},"content":"            logger.log(Level.FINE, String.format(\"dateTime detected is: %s\", dateTime));","lastModifiedDate":"2021-11-08"},{"lineNumber":88,"author":{"gitId":"tryyang2001"},"content":"            if (!ParserUtils.isWithinSevenDaysFromToday(dateTime.toLocalDate())) {","lastModifiedDate":"2021-11-04"},{"lineNumber":89,"author":{"gitId":"tryyang2001"},"content":"                return new InvalidCommand(String.format(ParserMessages.MESSAGE_ERROR_ITEM_DATE_TOO_OLD,","lastModifiedDate":"2021-10-27"},{"lineNumber":90,"author":{"gitId":"tryyang2001"},"content":"                        LocalDate.now().minusDays(6).format(DATE_FORMAT),","lastModifiedDate":"2021-11-07"},{"lineNumber":91,"author":{"gitId":"tryyang2001"},"content":"                        LocalDate.now().format(DATE_FORMAT)));","lastModifiedDate":"2021-10-27"},{"lineNumber":92,"author":{"gitId":"tlyi"},"content":"            }","lastModifiedDate":"2021-10-21"},{"lineNumber":93,"author":{"gitId":"tlyi"},"content":"            return new AddFoodCommand(description, calories, dateTime);","lastModifiedDate":"2021-10-30"},{"lineNumber":94,"author":{"gitId":"tlyi"},"content":"        } catch (ParserException e) {","lastModifiedDate":"2021-11-03"},{"lineNumber":95,"author":{"gitId":"tlyi"},"content":"            return new InvalidCommand(e.getMessage());","lastModifiedDate":"2021-11-03"},{"lineNumber":96,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-11-03"},{"lineNumber":97,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":98,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":99,"author":{"gitId":"tlyi"},"content":"    protected Command parseAddRecurring(String params, String itemTypePrefix) {","lastModifiedDate":"2021-11-03"},{"lineNumber":100,"author":{"gitId":"tlyi"},"content":"        try {","lastModifiedDate":"2021-11-03"},{"lineNumber":101,"author":{"gitId":"tlyi"},"content":"            if (ParserUtils.hasExtraDelimiters(params, AddRecurringExerciseCommand.EXPECTED_PREFIXES)) {","lastModifiedDate":"2021-11-07"},{"lineNumber":102,"author":{"gitId":"tlyi"},"content":"                return new InvalidCommand(ParserMessages.MESSAGE_ERROR_TOO_MANY_DELIMITERS);","lastModifiedDate":"2021-11-07"},{"lineNumber":103,"author":{"gitId":"tlyi"},"content":"            }","lastModifiedDate":"2021-11-07"},{"lineNumber":104,"author":{"gitId":"tlyi"},"content":"            final String description \u003d ParserUtils.extractItemDescription(params, itemTypePrefix);","lastModifiedDate":"2021-11-03"},{"lineNumber":105,"author":{"gitId":"tlyi"},"content":"            final Integer calories \u003d ParserUtils.extractItemCalories(params);","lastModifiedDate":"2021-11-03"},{"lineNumber":106,"author":{"gitId":"tlyi"},"content":"            final LocalDate startDate \u003d extractStartDate(params);","lastModifiedDate":"2021-11-03"},{"lineNumber":107,"author":{"gitId":"tlyi"},"content":"            final LocalDate endDate \u003d extractEndDate(params);","lastModifiedDate":"2021-11-03"},{"lineNumber":108,"author":{"gitId":"tlyi"},"content":"            final ArrayList\u003cInteger\u003e dayOfTheWeek \u003d extractDayOfTheWeek(params);","lastModifiedDate":"2021-11-03"},{"lineNumber":109,"author":{"gitId":"tlyi"},"content":"            return new AddRecurringExerciseCommand(description, calories,","lastModifiedDate":"2021-10-21"},{"lineNumber":110,"author":{"gitId":"tlyi"},"content":"                    startDate, endDate, dayOfTheWeek);","lastModifiedDate":"2021-10-30"},{"lineNumber":111,"author":{"gitId":"tlyi"},"content":"        } catch (ParserException e) {","lastModifiedDate":"2021-11-03"},{"lineNumber":112,"author":{"gitId":"tlyi"},"content":"            return new InvalidCommand(e.getMessage());","lastModifiedDate":"2021-10-21"},{"lineNumber":113,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":114,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":115,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":116,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":117,"author":{"gitId":"tlyi"},"content":"    protected Command parseAddToExerciseBank(String params, String itemTypePrefix) {","lastModifiedDate":"2021-11-07"},{"lineNumber":118,"author":{"gitId":"tlyi"},"content":"        try {","lastModifiedDate":"2021-10-21"},{"lineNumber":119,"author":{"gitId":"tlyi"},"content":"            if (ParserUtils.hasExtraDelimiters(params, AddExerciseBankCommand.EXPECTED_PREFIXES)) {","lastModifiedDate":"2021-11-07"},{"lineNumber":120,"author":{"gitId":"tlyi"},"content":"                return new InvalidCommand(ParserMessages.MESSAGE_ERROR_TOO_MANY_DELIMITERS);","lastModifiedDate":"2021-11-07"},{"lineNumber":121,"author":{"gitId":"tlyi"},"content":"            }","lastModifiedDate":"2021-11-07"},{"lineNumber":122,"author":{"gitId":"tlyi"},"content":"            final String description \u003d ParserUtils.extractItemDescription(params, itemTypePrefix);","lastModifiedDate":"2021-10-21"},{"lineNumber":123,"author":{"gitId":"tlyi"},"content":"            final Integer calories \u003d ParserUtils.extractItemCalories(params);","lastModifiedDate":"2021-11-03"},{"lineNumber":124,"author":{"gitId":"tlyi"},"content":"            if (calories \u003d\u003d null) {","lastModifiedDate":"2021-11-03"},{"lineNumber":125,"author":{"gitId":"tlyi"},"content":"                return new InvalidCommand(ParserMessages.MESSAGE_ERROR_NO_CALORIES_INFO);","lastModifiedDate":"2021-11-03"},{"lineNumber":126,"author":{"gitId":"tlyi"},"content":"            }","lastModifiedDate":"2021-11-03"},{"lineNumber":127,"author":{"gitId":"tlyi"},"content":"            return new AddExerciseBankCommand(description, calories);","lastModifiedDate":"2021-10-21"},{"lineNumber":128,"author":{"gitId":"tlyi"},"content":"        } catch (ParserException e) {","lastModifiedDate":"2021-11-07"},{"lineNumber":129,"author":{"gitId":"tlyi"},"content":"            return new InvalidCommand(e.getMessage());","lastModifiedDate":"2021-11-07"},{"lineNumber":130,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-11-07"},{"lineNumber":131,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":132,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":133,"author":{"gitId":"tlyi"},"content":"    protected Command parseAddToFoodBank(String params, String itemTypePrefix) {","lastModifiedDate":"2021-11-07"},{"lineNumber":134,"author":{"gitId":"tlyi"},"content":"        try {","lastModifiedDate":"2021-11-07"},{"lineNumber":135,"author":{"gitId":"tlyi"},"content":"            if (ParserUtils.hasExtraDelimiters(params, AddFoodBankCommand.EXPECTED_PREFIXES)) {","lastModifiedDate":"2021-10-21"},{"lineNumber":136,"author":{"gitId":"tlyi"},"content":"                return new InvalidCommand(ParserMessages.MESSAGE_ERROR_TOO_MANY_DELIMITERS);","lastModifiedDate":"2021-10-21"},{"lineNumber":137,"author":{"gitId":"tlyi"},"content":"            }","lastModifiedDate":"2021-10-21"},{"lineNumber":138,"author":{"gitId":"tlyi"},"content":"            final String description \u003d ParserUtils.extractItemDescription(params, itemTypePrefix);","lastModifiedDate":"2021-11-07"},{"lineNumber":139,"author":{"gitId":"tlyi"},"content":"            final Integer calories \u003d ParserUtils.extractItemCalories(params);","lastModifiedDate":"2021-11-07"},{"lineNumber":140,"author":{"gitId":"tlyi"},"content":"            if (calories \u003d\u003d null) {","lastModifiedDate":"2021-11-07"},{"lineNumber":141,"author":{"gitId":"tlyi"},"content":"                return new InvalidCommand(ParserMessages.MESSAGE_ERROR_NO_CALORIES_INFO);","lastModifiedDate":"2021-11-07"},{"lineNumber":142,"author":{"gitId":"tlyi"},"content":"            }","lastModifiedDate":"2021-10-21"},{"lineNumber":143,"author":{"gitId":"tlyi"},"content":"            return new AddFoodBankCommand(description, calories);","lastModifiedDate":"2021-11-07"},{"lineNumber":144,"author":{"gitId":"tlyi"},"content":"        } catch (ParserException e) {","lastModifiedDate":"2021-11-03"},{"lineNumber":145,"author":{"gitId":"tlyi"},"content":"            return new InvalidCommand(e.getMessage());","lastModifiedDate":"2021-10-21"},{"lineNumber":146,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":147,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":148,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":149,"author":{"gitId":"xingjie99"},"content":"    //@@author xingjie99","lastModifiedDate":"2021-11-03"},{"lineNumber":150,"author":{"gitId":"xingjie99"},"content":"    protected static LocalDate extractStartDate(String params)","lastModifiedDate":"2021-11-03"},{"lineNumber":151,"author":{"gitId":"xingjie99"},"content":"            throws ParserException {","lastModifiedDate":"2021-11-03"},{"lineNumber":152,"author":{"gitId":"xingjie99"},"content":"        LocalDate startDate \u003d ParserUtils.extractGeneralDate(params, Command.COMMAND_PREFIX_START_DATE);","lastModifiedDate":"2021-11-03"},{"lineNumber":153,"author":{"gitId":"xingjie99"},"content":"        if (startDate \u003d\u003d null) {","lastModifiedDate":"2021-11-03"},{"lineNumber":154,"author":{"gitId":"xingjie99"},"content":"            logger.log(Level.FINE, \"Detected empty start date input after prefix but date is required!\");","lastModifiedDate":"2021-11-08"},{"lineNumber":155,"author":{"gitId":"xingjie99"},"content":"            throw new ParserException(ParserMessages.MESSAGE_ERROR_NO_START_DATE);","lastModifiedDate":"2021-11-03"},{"lineNumber":156,"author":{"gitId":"xingjie99"},"content":"        }","lastModifiedDate":"2021-11-03"},{"lineNumber":157,"author":{"gitId":"xingjie99"},"content":"        return startDate;","lastModifiedDate":"2021-11-03"},{"lineNumber":158,"author":{"gitId":"xingjie99"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":159,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":160,"author":{"gitId":"xingjie99"},"content":"    protected static LocalDate extractEndDate(String params)","lastModifiedDate":"2021-11-03"},{"lineNumber":161,"author":{"gitId":"xingjie99"},"content":"            throws ParserException {","lastModifiedDate":"2021-11-03"},{"lineNumber":162,"author":{"gitId":"xingjie99"},"content":"        LocalDate endDate \u003d ParserUtils.extractGeneralDate(params, Command.COMMAND_PREFIX_END_DATE);","lastModifiedDate":"2021-11-03"},{"lineNumber":163,"author":{"gitId":"xingjie99"},"content":"        if (endDate \u003d\u003d null) {","lastModifiedDate":"2021-11-03"},{"lineNumber":164,"author":{"gitId":"xingjie99"},"content":"            logger.log(Level.FINE, \"Detected empty end date input after prefix but date is required!\");","lastModifiedDate":"2021-11-08"},{"lineNumber":165,"author":{"gitId":"xingjie99"},"content":"            throw new ParserException(ParserMessages.MESSAGE_ERROR_NO_END_DATE);","lastModifiedDate":"2021-11-03"},{"lineNumber":166,"author":{"gitId":"xingjie99"},"content":"        }","lastModifiedDate":"2021-11-03"},{"lineNumber":167,"author":{"gitId":"xingjie99"},"content":"        return endDate;","lastModifiedDate":"2021-11-03"},{"lineNumber":168,"author":{"gitId":"xingjie99"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":169,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":170,"author":{"gitId":"xingjie99"},"content":"    protected static ArrayList\u003cInteger\u003e extractDayOfTheWeek(String params)","lastModifiedDate":"2021-11-03"},{"lineNumber":171,"author":{"gitId":"xingjie99"},"content":"            throws ParserException {","lastModifiedDate":"2021-11-03"},{"lineNumber":172,"author":{"gitId":"xingjie99"},"content":"        try {","lastModifiedDate":"2021-11-03"},{"lineNumber":173,"author":{"gitId":"xingjie99"},"content":"            String numberString \u003d ParserUtils.extractRelevantParameter(params, Command.COMMAND_PREFIX_DAY_OF_THE_WEEK);","lastModifiedDate":"2021-11-03"},{"lineNumber":174,"author":{"gitId":"xingjie99"},"content":"            String[] numberStringArray \u003d numberString.split(Command.COMMAND_INDEX_DELIMITER);","lastModifiedDate":"2021-11-03"},{"lineNumber":175,"author":{"gitId":"xingjie99"},"content":"            ArrayList\u003cInteger\u003e daysOfTheWeek \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-11-03"},{"lineNumber":176,"author":{"gitId":"xingjie99"},"content":"            for (int i \u003d 0; i \u003c numberStringArray.length; i++) {","lastModifiedDate":"2021-11-03"},{"lineNumber":177,"author":{"gitId":"xingjie99"},"content":"                String dayString \u003d numberStringArray[i].trim();","lastModifiedDate":"2021-11-03"},{"lineNumber":178,"author":{"gitId":"xingjie99"},"content":"                if (dayString.split(\" \").length \u003e 1) {","lastModifiedDate":"2021-11-03"},{"lineNumber":179,"author":{"gitId":"xingjie99"},"content":"                    throw new ParserException(ParserMessages.MESSAGE_ERROR_EXTRA_PARAMETERS);","lastModifiedDate":"2021-11-04"},{"lineNumber":180,"author":{"gitId":"xingjie99"},"content":"                }","lastModifiedDate":"2021-11-03"},{"lineNumber":181,"author":{"gitId":"xingjie99"},"content":"                Integer day \u003d Integer.parseInt(numberStringArray[i].trim());","lastModifiedDate":"2021-11-03"},{"lineNumber":182,"author":{"gitId":"xingjie99"},"content":"                if (day \u003c ParserMessages.MONDAY || day \u003e ParserMessages.SUNDAY) {","lastModifiedDate":"2021-11-03"},{"lineNumber":183,"author":{"gitId":"xingjie99"},"content":"                    throw new ParserException(ParserMessages.MESSAGE_ERROR_INVALID_DAY_OF_THE_WEEK);","lastModifiedDate":"2021-11-03"},{"lineNumber":184,"author":{"gitId":"xingjie99"},"content":"                }","lastModifiedDate":"2021-11-03"},{"lineNumber":185,"author":{"gitId":"xingjie99"},"content":"                if (daysOfTheWeek.contains(day)) {","lastModifiedDate":"2021-11-03"},{"lineNumber":186,"author":{"gitId":"xingjie99"},"content":"                    throw new ParserException(ParserMessages.MESSAGE_ERROR_REPEATED_DAY_OF_THE_WEEK);","lastModifiedDate":"2021-11-03"},{"lineNumber":187,"author":{"gitId":"xingjie99"},"content":"                }","lastModifiedDate":"2021-11-03"},{"lineNumber":188,"author":{"gitId":"xingjie99"},"content":"                daysOfTheWeek.add(day);","lastModifiedDate":"2021-11-03"},{"lineNumber":189,"author":{"gitId":"xingjie99"},"content":"            }","lastModifiedDate":"2021-11-03"},{"lineNumber":190,"author":{"gitId":"xingjie99"},"content":"            logger.log(Level.FINE, String.format(\"Days of the week %s\", daysOfTheWeek.toString()));","lastModifiedDate":"2021-11-08"},{"lineNumber":191,"author":{"gitId":"xingjie99"},"content":"            return daysOfTheWeek;","lastModifiedDate":"2021-11-03"},{"lineNumber":192,"author":{"gitId":"xingjie99"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-11-03"},{"lineNumber":193,"author":{"gitId":"xingjie99"},"content":"            throw new ParserException(ParserMessages.MESSAGE_ERROR_INVALID_DAY_OF_THE_WEEK);","lastModifiedDate":"2021-11-03"},{"lineNumber":194,"author":{"gitId":"xingjie99"},"content":"        } catch (MissingParamException e) {","lastModifiedDate":"2021-11-03"},{"lineNumber":195,"author":{"gitId":"xingjie99"},"content":"            logger.log(Level.FINE, \"Detected empty day input after prefix but day is required!\");","lastModifiedDate":"2021-11-08"},{"lineNumber":196,"author":{"gitId":"xingjie99"},"content":"            throw new ParserException(ParserMessages.MESSAGE_ERROR_NO_DAY_OF_THE_WEEK);","lastModifiedDate":"2021-11-03"},{"lineNumber":197,"author":{"gitId":"xingjie99"},"content":"        }","lastModifiedDate":"2021-11-03"},{"lineNumber":198,"author":{"gitId":"xingjie99"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":199,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":200,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":201,"author":{"gitId":"xingjie99"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"tryyang2001":10,"xingjie99":53,"tlyi":138}},{"path":"src/main/java/seedu/duke/logic/parser/BmiParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.logic.parser;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"tlyi"},"content":"import seedu.duke.logic.commands.CalculateBmiCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"tlyi"},"content":"import seedu.duke.logic.commands.CalculateBmiWithProfileCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"tlyi"},"content":"import seedu.duke.logic.commands.Command;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"tlyi"},"content":"import seedu.duke.logic.commands.InvalidCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"tlyi"},"content":"import seedu.duke.logic.parser.exceptions.ParserException;","lastModifiedDate":"2021-11-03"},{"lineNumber":8,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"tlyi"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"tlyi"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"tlyi"},"content":"/**","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"tlyi"},"content":" * Parses input arguments for Bmi commands.","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"tlyi"},"content":" */","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"tlyi"},"content":"public class BmiParser implements Parser {","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"tlyi"},"content":"    protected static final Logger logger \u003d Logger.getLogger(BmiParser.class.getName());","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"tlyi"},"content":"    @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"tlyi"},"content":"    public Command parse(String params) {","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"tlyi"},"content":"        if (params.trim().equals(ParserMessages.EMPTY)) {","lastModifiedDate":"2021-11-03"},{"lineNumber":22,"author":{"gitId":"tlyi"},"content":"            //no additional parameters, assumed to be bmi from current profile","lastModifiedDate":"2021-11-03"},{"lineNumber":23,"author":{"gitId":"tlyi"},"content":"            return new CalculateBmiWithProfileCommand();","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"tlyi"},"content":"        if (ParserUtils.hasRequiredParams(params, CalculateBmiCommand.EXPECTED_PREFIXES)) {","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"tlyi"},"content":"            if (ParserUtils.hasExtraDelimiters(params, CalculateBmiCommand.EXPECTED_PREFIXES)) {","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"tlyi"},"content":"                return new InvalidCommand(ParserMessages.MESSAGE_ERROR_TOO_MANY_DELIMITERS);","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"tlyi"},"content":"            }","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"tlyi"},"content":"            try {","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"tlyi"},"content":"                final double height \u003d ParserUtils.extractHeight(params);","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"tlyi"},"content":"                final double weight \u003d ParserUtils.extractWeight(params);","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"tlyi"},"content":"                return new CalculateBmiCommand(height, weight);","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"tlyi"},"content":"            } catch (ParserException e) {","lastModifiedDate":"2021-11-03"},{"lineNumber":34,"author":{"gitId":"tlyi"},"content":"                return new InvalidCommand(e.getMessage());","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"tlyi"},"content":"            }","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"tlyi"},"content":"        } else {","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"tlyi"},"content":"            logger.log(Level.FINE, \"Detected invalid input parameters for BMI calculation.\");","lastModifiedDate":"2021-11-08"},{"lineNumber":38,"author":{"gitId":"tlyi"},"content":"            return new InvalidCommand(CalculateBmiCommand.MESSAGE_INVALID_COMMAND_FORMAT);","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"tlyi"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"tlyi":41}},{"path":"src/main/java/seedu/duke/logic/parser/DeleteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.logic.parser;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"tlyi"},"content":"import seedu.duke.logic.commands.Command;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"tlyi"},"content":"import seedu.duke.logic.commands.CommandMessages;","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"tlyi"},"content":"import seedu.duke.logic.commands.DeleteExerciseBankCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"tlyi"},"content":"import seedu.duke.logic.commands.DeleteExerciseCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"tlyi"},"content":"import seedu.duke.logic.commands.DeleteFoodBankCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"tlyi"},"content":"import seedu.duke.logic.commands.DeleteFoodCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"tlyi"},"content":"import seedu.duke.logic.commands.DeleteFutureExerciseCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"tlyi"},"content":"import seedu.duke.logic.commands.InvalidCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"tlyi"},"content":"import seedu.duke.logic.parser.exceptions.ExtraParamException;","lastModifiedDate":"2021-11-08"},{"lineNumber":12,"author":{"gitId":"tlyi"},"content":"import seedu.duke.logic.parser.exceptions.ItemNotSpecifiedException;","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"tlyi"},"content":"import seedu.duke.logic.parser.exceptions.MissingParamException;","lastModifiedDate":"2021-11-03"},{"lineNumber":14,"author":{"gitId":"tlyi"},"content":"import seedu.duke.logic.parser.exceptions.ParserException;","lastModifiedDate":"2021-11-03"},{"lineNumber":15,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"tlyi"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"tlyi"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"tlyi"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-11-03"},{"lineNumber":19,"author":{"gitId":"tlyi"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"tlyi"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"tlyi"},"content":"/**","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"tlyi"},"content":" * Parses input arguments for Delete commands.","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"tlyi"},"content":" */","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"tlyi"},"content":"public class DeleteCommandParser implements Parser {","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"tlyi"},"content":"    protected static final Logger logger \u003d Logger.getLogger(DeleteCommandParser.class.getName());","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"tlyi"},"content":"    @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"tlyi"},"content":"    public Command parse(String params) {","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"tlyi"},"content":"        try {","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"tlyi"},"content":"            final String itemTypePrefix \u003d ParserUtils.extractItemTypePrefix(params);","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"tlyi"},"content":"            switch (itemTypePrefix) {","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"tlyi"},"content":"            case Command.COMMAND_PREFIX_EXERCISE:","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"tlyi"},"content":"                return parseDeleteFromExercise(params, itemTypePrefix);","lastModifiedDate":"2021-11-07"},{"lineNumber":36,"author":{"gitId":"tlyi"},"content":"            case Command.COMMAND_PREFIX_FOOD:","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"tlyi"},"content":"                return parseDeleteFromFood(params, itemTypePrefix);","lastModifiedDate":"2021-11-07"},{"lineNumber":38,"author":{"gitId":"tlyi"},"content":"            case Command.COMMAND_PREFIX_UPCOMING_EXERCISE:","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"tlyi"},"content":"                return parseDeleteFromFuture(params, itemTypePrefix);","lastModifiedDate":"2021-11-07"},{"lineNumber":40,"author":{"gitId":"tlyi"},"content":"            case Command.COMMAND_PREFIX_EXERCISE_BANK:","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"tlyi"},"content":"                return parseDeleteFromExerciseBank(params, itemTypePrefix);","lastModifiedDate":"2021-11-07"},{"lineNumber":42,"author":{"gitId":"tlyi"},"content":"            case Command.COMMAND_PREFIX_FOOD_BANK:","lastModifiedDate":"2021-10-21"},{"lineNumber":43,"author":{"gitId":"tlyi"},"content":"                return parseDeleteFromFoodBank(params, itemTypePrefix);","lastModifiedDate":"2021-11-07"},{"lineNumber":44,"author":{"gitId":"tlyi"},"content":"            default:","lastModifiedDate":"2021-10-21"},{"lineNumber":45,"author":{"gitId":"tlyi"},"content":"                throw new ItemNotSpecifiedException();","lastModifiedDate":"2021-10-21"},{"lineNumber":46,"author":{"gitId":"tlyi"},"content":"            }","lastModifiedDate":"2021-10-21"},{"lineNumber":47,"author":{"gitId":"tlyi"},"content":"        } catch (ItemNotSpecifiedException e) {","lastModifiedDate":"2021-10-21"},{"lineNumber":48,"author":{"gitId":"tlyi"},"content":"            return new InvalidCommand(CommandMessages.MESSAGE_DELETE_COMMAND_INVALID_FORMAT);","lastModifiedDate":"2021-10-27"},{"lineNumber":49,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":50,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":51,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":52,"author":{"gitId":"tlyi"},"content":"    protected Command parseDeleteFromExercise(String params, String itemTypePrefix) {","lastModifiedDate":"2021-11-07"},{"lineNumber":53,"author":{"gitId":"tlyi"},"content":"        try {","lastModifiedDate":"2021-10-21"},{"lineNumber":54,"author":{"gitId":"tlyi"},"content":"            if (ParserUtils.hasExtraDelimiters(params, DeleteExerciseCommand.EXPECTED_PREFIXES)) {","lastModifiedDate":"2021-11-07"},{"lineNumber":55,"author":{"gitId":"tlyi"},"content":"                return new InvalidCommand(ParserMessages.MESSAGE_ERROR_TOO_MANY_DELIMITERS);","lastModifiedDate":"2021-11-07"},{"lineNumber":56,"author":{"gitId":"tlyi"},"content":"            }","lastModifiedDate":"2021-11-07"},{"lineNumber":57,"author":{"gitId":"tlyi"},"content":"            boolean isClear \u003d extractIsClear(params, itemTypePrefix);","lastModifiedDate":"2021-11-08"},{"lineNumber":58,"author":{"gitId":"tlyi"},"content":"            if (isClear) {","lastModifiedDate":"2021-11-07"},{"lineNumber":59,"author":{"gitId":"tlyi"},"content":"                return new DeleteExerciseCommand(true);","lastModifiedDate":"2021-11-07"},{"lineNumber":60,"author":{"gitId":"tlyi"},"content":"            }","lastModifiedDate":"2021-11-07"},{"lineNumber":61,"author":{"gitId":"tlyi"},"content":"            final int itemIndex \u003d ParserUtils.extractItemIndex(params, itemTypePrefix);","lastModifiedDate":"2021-10-21"},{"lineNumber":62,"author":{"gitId":"tlyi"},"content":"            final LocalDate date \u003d ParserUtils.extractDate(params, true);","lastModifiedDate":"2021-10-21"},{"lineNumber":63,"author":{"gitId":"tlyi"},"content":"            logger.log(Level.FINE, String.format(\"date detected is: %s\", date));","lastModifiedDate":"2021-11-08"},{"lineNumber":64,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":65,"author":{"gitId":"tlyi"},"content":"            logger.log(Level.FINE, String.format(\"deleting exercise item %s from %s\", itemIndex, date));","lastModifiedDate":"2021-11-08"},{"lineNumber":66,"author":{"gitId":"tlyi"},"content":"            return new DeleteExerciseCommand(itemIndex, date);","lastModifiedDate":"2021-10-21"},{"lineNumber":67,"author":{"gitId":"tlyi"},"content":"        } catch (ParserException e) {","lastModifiedDate":"2021-11-07"},{"lineNumber":68,"author":{"gitId":"tlyi"},"content":"            return new InvalidCommand(e.getMessage());","lastModifiedDate":"2021-11-07"},{"lineNumber":69,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-11-07"},{"lineNumber":70,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":71,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":72,"author":{"gitId":"tlyi"},"content":"    protected Command parseDeleteFromFood(String params, String itemTypePrefix) {","lastModifiedDate":"2021-11-07"},{"lineNumber":73,"author":{"gitId":"tlyi"},"content":"        try {","lastModifiedDate":"2021-11-07"},{"lineNumber":74,"author":{"gitId":"tlyi"},"content":"            if (ParserUtils.hasExtraDelimiters(params, DeleteFoodCommand.EXPECTED_PREFIXES)) {","lastModifiedDate":"2021-10-21"},{"lineNumber":75,"author":{"gitId":"tlyi"},"content":"                return new InvalidCommand(ParserMessages.MESSAGE_ERROR_TOO_MANY_DELIMITERS);","lastModifiedDate":"2021-10-21"},{"lineNumber":76,"author":{"gitId":"tlyi"},"content":"            }","lastModifiedDate":"2021-10-21"},{"lineNumber":77,"author":{"gitId":"tlyi"},"content":"            boolean isClear \u003d extractIsClear(params, itemTypePrefix);","lastModifiedDate":"2021-11-08"},{"lineNumber":78,"author":{"gitId":"tlyi"},"content":"            if (isClear) {","lastModifiedDate":"2021-11-07"},{"lineNumber":79,"author":{"gitId":"tlyi"},"content":"                return new DeleteFoodCommand(true);","lastModifiedDate":"2021-11-07"},{"lineNumber":80,"author":{"gitId":"tlyi"},"content":"            }","lastModifiedDate":"2021-11-07"},{"lineNumber":81,"author":{"gitId":"tlyi"},"content":"            final int itemIndex \u003d ParserUtils.extractItemIndex(params, itemTypePrefix);","lastModifiedDate":"2021-11-07"},{"lineNumber":82,"author":{"gitId":"tlyi"},"content":"            final LocalDate date \u003d ParserUtils.extractDate(params, true);","lastModifiedDate":"2021-11-07"},{"lineNumber":83,"author":{"gitId":"tlyi"},"content":"            logger.log(Level.FINE, String.format(\"date detected is: %s\", date));","lastModifiedDate":"2021-11-08"},{"lineNumber":84,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":85,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":86,"author":{"gitId":"tlyi"},"content":"            final LocalTime time \u003d ParserUtils.extractTime(params, true);","lastModifiedDate":"2021-10-21"},{"lineNumber":87,"author":{"gitId":"tlyi"},"content":"            logger.log(Level.FINE, String.format(\"deleting food item %s from %s %s\", itemIndex, date, time));","lastModifiedDate":"2021-11-08"},{"lineNumber":88,"author":{"gitId":"tlyi"},"content":"            return new DeleteFoodCommand(itemIndex, date, time);","lastModifiedDate":"2021-10-21"},{"lineNumber":89,"author":{"gitId":"tlyi"},"content":"        } catch (ParserException e) {","lastModifiedDate":"2021-11-03"},{"lineNumber":90,"author":{"gitId":"tlyi"},"content":"            return new InvalidCommand(e.getMessage());","lastModifiedDate":"2021-10-21"},{"lineNumber":91,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":92,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":93,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":94,"author":{"gitId":"tlyi"},"content":"    protected Command parseDeleteFromExerciseBank(String params, String itemTypePrefix) {","lastModifiedDate":"2021-11-07"},{"lineNumber":95,"author":{"gitId":"tlyi"},"content":"        try {","lastModifiedDate":"2021-10-21"},{"lineNumber":96,"author":{"gitId":"tlyi"},"content":"            if (ParserUtils.hasExtraDelimiters(params, DeleteExerciseBankCommand.EXPECTED_PREFIXES)) {","lastModifiedDate":"2021-10-21"},{"lineNumber":97,"author":{"gitId":"tlyi"},"content":"                return new InvalidCommand(ParserMessages.MESSAGE_ERROR_TOO_MANY_DELIMITERS);","lastModifiedDate":"2021-10-21"},{"lineNumber":98,"author":{"gitId":"tlyi"},"content":"            }","lastModifiedDate":"2021-10-21"},{"lineNumber":99,"author":{"gitId":"tlyi"},"content":"            boolean isClear \u003d extractIsClear(params, itemTypePrefix);","lastModifiedDate":"2021-11-08"},{"lineNumber":100,"author":{"gitId":"tlyi"},"content":"            if (isClear) {","lastModifiedDate":"2021-11-07"},{"lineNumber":101,"author":{"gitId":"tlyi"},"content":"                return new DeleteExerciseBankCommand(true);","lastModifiedDate":"2021-11-07"},{"lineNumber":102,"author":{"gitId":"tlyi"},"content":"            }","lastModifiedDate":"2021-11-07"},{"lineNumber":103,"author":{"gitId":"tlyi"},"content":"            final ArrayList\u003cInteger\u003e itemIndexes \u003d extractItemIndexes(params, itemTypePrefix);","lastModifiedDate":"2021-11-07"},{"lineNumber":104,"author":{"gitId":"tlyi"},"content":"            return new DeleteExerciseBankCommand(itemIndexes);","lastModifiedDate":"2021-11-03"},{"lineNumber":105,"author":{"gitId":"tlyi"},"content":"        } catch (ParserException e) {","lastModifiedDate":"2021-11-07"},{"lineNumber":106,"author":{"gitId":"tlyi"},"content":"            return new InvalidCommand(e.getMessage());","lastModifiedDate":"2021-11-07"},{"lineNumber":107,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-11-07"},{"lineNumber":108,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":109,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":110,"author":{"gitId":"tlyi"},"content":"    protected Command parseDeleteFromFoodBank(String params, String itemTypePrefix) {","lastModifiedDate":"2021-11-07"},{"lineNumber":111,"author":{"gitId":"tlyi"},"content":"        try {","lastModifiedDate":"2021-11-07"},{"lineNumber":112,"author":{"gitId":"tlyi"},"content":"            if (ParserUtils.hasExtraDelimiters(params, DeleteFoodBankCommand.EXPECTED_PREFIXES)) {","lastModifiedDate":"2021-10-21"},{"lineNumber":113,"author":{"gitId":"tlyi"},"content":"                return new InvalidCommand(ParserMessages.MESSAGE_ERROR_TOO_MANY_DELIMITERS);","lastModifiedDate":"2021-10-21"},{"lineNumber":114,"author":{"gitId":"tlyi"},"content":"            }","lastModifiedDate":"2021-10-21"},{"lineNumber":115,"author":{"gitId":"tlyi"},"content":"            boolean isClear \u003d extractIsClear(params, itemTypePrefix);","lastModifiedDate":"2021-11-08"},{"lineNumber":116,"author":{"gitId":"tlyi"},"content":"            if (isClear) {","lastModifiedDate":"2021-11-07"},{"lineNumber":117,"author":{"gitId":"tlyi"},"content":"                return new DeleteFoodBankCommand(true);","lastModifiedDate":"2021-11-07"},{"lineNumber":118,"author":{"gitId":"tlyi"},"content":"            }","lastModifiedDate":"2021-11-07"},{"lineNumber":119,"author":{"gitId":"tlyi"},"content":"            final ArrayList\u003cInteger\u003e itemIndexes \u003d extractItemIndexes(params, itemTypePrefix);","lastModifiedDate":"2021-11-07"},{"lineNumber":120,"author":{"gitId":"tlyi"},"content":"            return new DeleteFoodBankCommand(itemIndexes);","lastModifiedDate":"2021-11-03"},{"lineNumber":121,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":122,"author":{"gitId":"tlyi"},"content":"        } catch (ParserException e) {","lastModifiedDate":"2021-11-07"},{"lineNumber":123,"author":{"gitId":"tlyi"},"content":"            return new InvalidCommand(e.getMessage());","lastModifiedDate":"2021-11-07"},{"lineNumber":124,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-11-07"},{"lineNumber":125,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":126,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":127,"author":{"gitId":"tlyi"},"content":"    protected Command parseDeleteFromFuture(String params, String itemTypePrefix) {","lastModifiedDate":"2021-11-07"},{"lineNumber":128,"author":{"gitId":"tlyi"},"content":"        try {","lastModifiedDate":"2021-11-07"},{"lineNumber":129,"author":{"gitId":"tlyi"},"content":"            if (ParserUtils.hasExtraDelimiters(params, DeleteFutureExerciseCommand.EXPECTED_PREFIXES)) {","lastModifiedDate":"2021-10-21"},{"lineNumber":130,"author":{"gitId":"tlyi"},"content":"                return new InvalidCommand(ParserMessages.MESSAGE_ERROR_TOO_MANY_DELIMITERS);","lastModifiedDate":"2021-10-21"},{"lineNumber":131,"author":{"gitId":"tlyi"},"content":"            }","lastModifiedDate":"2021-10-21"},{"lineNumber":132,"author":{"gitId":"tlyi"},"content":"            boolean isClear \u003d extractIsClear(params, itemTypePrefix);","lastModifiedDate":"2021-11-08"},{"lineNumber":133,"author":{"gitId":"tlyi"},"content":"            if (isClear) {","lastModifiedDate":"2021-11-07"},{"lineNumber":134,"author":{"gitId":"tlyi"},"content":"                return new DeleteFutureExerciseCommand(true);","lastModifiedDate":"2021-11-07"},{"lineNumber":135,"author":{"gitId":"tlyi"},"content":"            }","lastModifiedDate":"2021-10-21"},{"lineNumber":136,"author":{"gitId":"tlyi"},"content":"            final ArrayList\u003cInteger\u003e itemIndexes \u003d extractItemIndexes(params, itemTypePrefix);","lastModifiedDate":"2021-11-07"},{"lineNumber":137,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":138,"author":{"gitId":"tlyi"},"content":"            return new DeleteFutureExerciseCommand(itemIndexes);","lastModifiedDate":"2021-11-03"},{"lineNumber":139,"author":{"gitId":"tlyi"},"content":"        } catch (ParserException e) {","lastModifiedDate":"2021-11-03"},{"lineNumber":140,"author":{"gitId":"tlyi"},"content":"            return new InvalidCommand(e.getMessage());","lastModifiedDate":"2021-10-21"},{"lineNumber":141,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":142,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":143,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":144,"author":{"gitId":"tlyi"},"content":"    protected static ArrayList\u003cInteger\u003e extractItemIndexes(String params, String prefix)","lastModifiedDate":"2021-11-03"},{"lineNumber":145,"author":{"gitId":"tlyi"},"content":"            throws ParserException {","lastModifiedDate":"2021-11-03"},{"lineNumber":146,"author":{"gitId":"tlyi"},"content":"        try {","lastModifiedDate":"2021-11-03"},{"lineNumber":147,"author":{"gitId":"tlyi"},"content":"            String numberString \u003d ParserUtils.extractRelevantParameter(params, prefix);","lastModifiedDate":"2021-11-03"},{"lineNumber":148,"author":{"gitId":"tlyi"},"content":"            String[] numberStringArray \u003d numberString.split(Command.COMMAND_INDEX_DELIMITER);","lastModifiedDate":"2021-11-03"},{"lineNumber":149,"author":{"gitId":"tlyi"},"content":"            ArrayList\u003cInteger\u003e indices \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-11-04"},{"lineNumber":150,"author":{"gitId":"tlyi"},"content":"            for (int i \u003d 0; i \u003c numberStringArray.length; i++) {","lastModifiedDate":"2021-11-03"},{"lineNumber":151,"author":{"gitId":"tlyi"},"content":"                String indexString \u003d numberStringArray[i].trim();","lastModifiedDate":"2021-11-03"},{"lineNumber":152,"author":{"gitId":"tlyi"},"content":"                if (indexString.split(\" \").length \u003e 1) {","lastModifiedDate":"2021-11-03"},{"lineNumber":153,"author":{"gitId":"tlyi"},"content":"                    throw new ParserException(ParserMessages.MESSAGE_ERROR_EXTRA_PARAMETERS);","lastModifiedDate":"2021-11-04"},{"lineNumber":154,"author":{"gitId":"tlyi"},"content":"                }","lastModifiedDate":"2021-11-03"},{"lineNumber":155,"author":{"gitId":"tlyi"},"content":"                Integer index \u003d (Double.parseDouble(indexString) \u003e Integer.MAX_VALUE)","lastModifiedDate":"2021-11-04"},{"lineNumber":156,"author":{"gitId":"tlyi"},"content":"                        ? Integer.MAX_VALUE","lastModifiedDate":"2021-11-04"},{"lineNumber":157,"author":{"gitId":"tlyi"},"content":"                        : ParserUtils.convertItemNumToItemIndex(Integer.parseInt(indexString));","lastModifiedDate":"2021-11-04"},{"lineNumber":158,"author":{"gitId":"tlyi"},"content":"                if (indices.contains(index)) {","lastModifiedDate":"2021-11-04"},{"lineNumber":159,"author":{"gitId":"tlyi"},"content":"                    throw new ParserException(ParserMessages.MESSAGE_ERROR_DUPLICATE_NUMBERS);","lastModifiedDate":"2021-11-03"},{"lineNumber":160,"author":{"gitId":"tlyi"},"content":"                }","lastModifiedDate":"2021-11-03"},{"lineNumber":161,"author":{"gitId":"tlyi"},"content":"                if (index \u003c 0) {","lastModifiedDate":"2021-11-03"},{"lineNumber":162,"author":{"gitId":"tlyi"},"content":"                    throw new ParserException(ParserMessages.MESSAGE_ERROR_INVALID_ITEM_NUM);","lastModifiedDate":"2021-11-03"},{"lineNumber":163,"author":{"gitId":"tlyi"},"content":"                }","lastModifiedDate":"2021-11-03"},{"lineNumber":164,"author":{"gitId":"tlyi"},"content":"                indices.add(index);","lastModifiedDate":"2021-11-04"},{"lineNumber":165,"author":{"gitId":"tlyi"},"content":"            }","lastModifiedDate":"2021-11-03"},{"lineNumber":166,"author":{"gitId":"tlyi"},"content":"            logger.log(Level.FINE, String.format(\"Indexes are %s\", indices.toString()));","lastModifiedDate":"2021-11-08"},{"lineNumber":167,"author":{"gitId":"tlyi"},"content":"            return indices;","lastModifiedDate":"2021-11-04"},{"lineNumber":168,"author":{"gitId":"tlyi"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-11-03"},{"lineNumber":169,"author":{"gitId":"tlyi"},"content":"            throw new ParserException(ParserMessages.MESSAGE_ERROR_INVALID_ITEM_NUM);","lastModifiedDate":"2021-11-03"},{"lineNumber":170,"author":{"gitId":"tlyi"},"content":"        } catch (MissingParamException e) {","lastModifiedDate":"2021-11-03"},{"lineNumber":171,"author":{"gitId":"tlyi"},"content":"            logger.log(Level.FINE, \"Detected empty item num input after prefix but item num is required!\");","lastModifiedDate":"2021-11-08"},{"lineNumber":172,"author":{"gitId":"tlyi"},"content":"            throw new ParserException(ParserMessages.MESSAGE_ERROR_NO_ITEM_NUM);","lastModifiedDate":"2021-11-03"},{"lineNumber":173,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-11-03"},{"lineNumber":174,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":175,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":176,"author":{"gitId":"tlyi"},"content":"    protected static boolean extractIsClear(String params, String prefix) {","lastModifiedDate":"2021-11-08"},{"lineNumber":177,"author":{"gitId":"tlyi"},"content":"        try {","lastModifiedDate":"2021-11-08"},{"lineNumber":178,"author":{"gitId":"tlyi"},"content":"            String description \u003d ParserUtils.extractRelevantParameterWithoutWhitespace(params, prefix);","lastModifiedDate":"2021-11-08"},{"lineNumber":179,"author":{"gitId":"tlyi"},"content":"            return description.equalsIgnoreCase(Command.COMMAND_WORD_DELETE_ALL);","lastModifiedDate":"2021-11-08"},{"lineNumber":180,"author":{"gitId":"tlyi"},"content":"        } catch (ExtraParamException | MissingParamException e) {","lastModifiedDate":"2021-11-08"},{"lineNumber":181,"author":{"gitId":"tlyi"},"content":"            return false;","lastModifiedDate":"2021-11-08"},{"lineNumber":182,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-11-08"},{"lineNumber":183,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":184,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":185,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":186,"author":{"gitId":"tlyi"},"content":"}","lastModifiedDate":"2021-10-21"},{"lineNumber":187,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"tlyi":187}},{"path":"src/main/java/seedu/duke/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.logic.parser;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"tlyi"},"content":"import seedu.duke.logic.commands.Command;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"tlyi"},"content":"import seedu.duke.logic.commands.CommandMessages;","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"tlyi"},"content":"import seedu.duke.logic.commands.EditExerciseBankCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"tlyi"},"content":"import seedu.duke.logic.commands.EditFoodBankCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"tlyi"},"content":"import seedu.duke.logic.commands.EditFutureExerciseCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"tlyi"},"content":"import seedu.duke.logic.commands.InvalidCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"tlyi"},"content":"import seedu.duke.logic.parser.exceptions.ItemNotSpecifiedException;","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"tlyi"},"content":"import seedu.duke.logic.parser.exceptions.ParserException;","lastModifiedDate":"2021-11-03"},{"lineNumber":11,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"xingjie99"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"xingjie99"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"xingjie99"},"content":"//@@author xingjie99","lastModifiedDate":"2021-10-28"},{"lineNumber":16,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":17,"author":{"gitId":"xingjie99"},"content":"/**","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"xingjie99"},"content":" * Parses input arguments for Edit commands.","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"xingjie99"},"content":" */","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"xingjie99"},"content":"public class EditCommandParser implements Parser {","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"xingjie99"},"content":"    protected static final Logger logger \u003d Logger.getLogger(EditCommandParser.class.getName());","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"xingjie99"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"xingjie99"},"content":"    public Command parse(String params) {","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"xingjie99"},"content":"        try {","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"xingjie99"},"content":"            final String itemTypePrefix \u003d ParserUtils.extractItemTypePrefix(params);","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"xingjie99"},"content":"            switch (itemTypePrefix) {","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"xingjie99"},"content":"            case Command.COMMAND_PREFIX_EXERCISE_BANK:","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"xingjie99"},"content":"                return parseEditExerciseBank(params, itemTypePrefix);","lastModifiedDate":"2021-11-07"},{"lineNumber":31,"author":{"gitId":"xingjie99"},"content":"            case Command.COMMAND_PREFIX_FOOD_BANK:","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"xingjie99"},"content":"                return parseEditFoodBank(params, itemTypePrefix);","lastModifiedDate":"2021-11-07"},{"lineNumber":33,"author":{"gitId":"xingjie99"},"content":"            case Command.COMMAND_PREFIX_UPCOMING_EXERCISE:","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"xingjie99"},"content":"                return parseEditUpcomingExercise(params, itemTypePrefix);","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"xingjie99"},"content":"            default:","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"xingjie99"},"content":"                throw new ItemNotSpecifiedException();","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"xingjie99"},"content":"            }","lastModifiedDate":"2021-10-24"},{"lineNumber":38,"author":{"gitId":"xingjie99"},"content":"        } catch (ItemNotSpecifiedException e) {","lastModifiedDate":"2021-10-24"},{"lineNumber":39,"author":{"gitId":"xingjie99"},"content":"            return new InvalidCommand(","lastModifiedDate":"2021-10-24"},{"lineNumber":40,"author":{"gitId":"xingjie99"},"content":"                    CommandMessages.MESSAGE_EDIT_COMMAND_INVALID_FORMAT);","lastModifiedDate":"2021-10-27"},{"lineNumber":41,"author":{"gitId":"xingjie99"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":42,"author":{"gitId":"xingjie99"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":43,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":44,"author":{"gitId":"xingjie99"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":45,"author":{"gitId":"xingjie99"},"content":"     * Parses input arguments for Edit command for exercise bank.","lastModifiedDate":"2021-11-07"},{"lineNumber":46,"author":{"gitId":"xingjie99"},"content":"     *","lastModifiedDate":"2021-11-05"},{"lineNumber":47,"author":{"gitId":"xingjie99"},"content":"     * @param params         User input arguments","lastModifiedDate":"2021-11-05"},{"lineNumber":48,"author":{"gitId":"xingjie99"},"content":"     * @param itemTypePrefix Prefix of the exercise banks","lastModifiedDate":"2021-11-07"},{"lineNumber":49,"author":{"gitId":"xingjie99"},"content":"     * @return Command to execute","lastModifiedDate":"2021-11-05"},{"lineNumber":50,"author":{"gitId":"xingjie99"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":51,"author":{"gitId":"xingjie99"},"content":"    protected Command parseEditExerciseBank(String params, String itemTypePrefix) {","lastModifiedDate":"2021-11-07"},{"lineNumber":52,"author":{"gitId":"xingjie99"},"content":"        try {","lastModifiedDate":"2021-10-24"},{"lineNumber":53,"author":{"gitId":"xingjie99"},"content":"            if (ParserUtils.hasExtraDelimiters(params, EditExerciseBankCommand.EXPECTED_PREFIXES)) {","lastModifiedDate":"2021-11-07"},{"lineNumber":54,"author":{"gitId":"xingjie99"},"content":"                return new InvalidCommand(ParserMessages.MESSAGE_ERROR_TOO_MANY_DELIMITERS);","lastModifiedDate":"2021-11-07"},{"lineNumber":55,"author":{"gitId":"xingjie99"},"content":"            }","lastModifiedDate":"2021-11-07"},{"lineNumber":56,"author":{"gitId":"xingjie99"},"content":"            final int itemIndex \u003d ParserUtils.extractItemIndex(params, itemTypePrefix);","lastModifiedDate":"2021-10-24"},{"lineNumber":57,"author":{"gitId":"xingjie99"},"content":"            if (ParserUtils.getNumberOfCorrectParamsDetected(params,","lastModifiedDate":"2021-10-24"},{"lineNumber":58,"author":{"gitId":"xingjie99"},"content":"                    Command.COMMAND_PREFIX_NAME, Command.COMMAND_PREFIX_CALORIES) \u003d\u003d 0) {","lastModifiedDate":"2021-10-24"},{"lineNumber":59,"author":{"gitId":"xingjie99"},"content":"                return new InvalidCommand(CommandMessages.MESSAGE_EDIT_BANK_NEED_DETAILS);","lastModifiedDate":"2021-10-27"},{"lineNumber":60,"author":{"gitId":"xingjie99"},"content":"            }","lastModifiedDate":"2021-10-24"},{"lineNumber":61,"author":{"gitId":"xingjie99"},"content":"            final String description \u003d ParserUtils.extractName(params);","lastModifiedDate":"2021-10-24"},{"lineNumber":62,"author":{"gitId":"xingjie99"},"content":"            final Integer calories \u003d ParserUtils.extractItemCalories(params);","lastModifiedDate":"2021-11-03"},{"lineNumber":63,"author":{"gitId":"xingjie99"},"content":"            return new EditExerciseBankCommand(itemIndex, description, calories);","lastModifiedDate":"2021-10-24"},{"lineNumber":64,"author":{"gitId":"xingjie99"},"content":"        } catch (ParserException e) {","lastModifiedDate":"2021-11-07"},{"lineNumber":65,"author":{"gitId":"xingjie99"},"content":"            return new InvalidCommand(e.getMessage());","lastModifiedDate":"2021-11-07"},{"lineNumber":66,"author":{"gitId":"xingjie99"},"content":"        }","lastModifiedDate":"2021-11-07"},{"lineNumber":67,"author":{"gitId":"xingjie99"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":68,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":69,"author":{"gitId":"xingjie99"},"content":"    /**","lastModifiedDate":"2021-11-07"},{"lineNumber":70,"author":{"gitId":"xingjie99"},"content":"     * Parses input arguments for Edit command for food bank.","lastModifiedDate":"2021-11-07"},{"lineNumber":71,"author":{"gitId":"xingjie99"},"content":"     *","lastModifiedDate":"2021-11-07"},{"lineNumber":72,"author":{"gitId":"xingjie99"},"content":"     * @param params         User input arguments","lastModifiedDate":"2021-11-07"},{"lineNumber":73,"author":{"gitId":"xingjie99"},"content":"     * @param itemTypePrefix Prefix of food bank","lastModifiedDate":"2021-11-07"},{"lineNumber":74,"author":{"gitId":"xingjie99"},"content":"     * @return Command to execute","lastModifiedDate":"2021-11-07"},{"lineNumber":75,"author":{"gitId":"xingjie99"},"content":"     */","lastModifiedDate":"2021-11-07"},{"lineNumber":76,"author":{"gitId":"xingjie99"},"content":"    protected Command parseEditFoodBank(String params, String itemTypePrefix) {","lastModifiedDate":"2021-11-07"},{"lineNumber":77,"author":{"gitId":"xingjie99"},"content":"        try {","lastModifiedDate":"2021-11-07"},{"lineNumber":78,"author":{"gitId":"xingjie99"},"content":"            if (ParserUtils.hasExtraDelimiters(params, EditFoodBankCommand.EXPECTED_PREFIXES)) {","lastModifiedDate":"2021-10-24"},{"lineNumber":79,"author":{"gitId":"xingjie99"},"content":"                return new InvalidCommand(ParserMessages.MESSAGE_ERROR_TOO_MANY_DELIMITERS);","lastModifiedDate":"2021-10-24"},{"lineNumber":80,"author":{"gitId":"xingjie99"},"content":"            }","lastModifiedDate":"2021-10-24"},{"lineNumber":81,"author":{"gitId":"xingjie99"},"content":"            final int itemIndex \u003d ParserUtils.extractItemIndex(params, itemTypePrefix);","lastModifiedDate":"2021-11-07"},{"lineNumber":82,"author":{"gitId":"xingjie99"},"content":"            if (ParserUtils.getNumberOfCorrectParamsDetected(params,","lastModifiedDate":"2021-11-07"},{"lineNumber":83,"author":{"gitId":"xingjie99"},"content":"                    Command.COMMAND_PREFIX_NAME, Command.COMMAND_PREFIX_CALORIES) \u003d\u003d 0) {","lastModifiedDate":"2021-11-07"},{"lineNumber":84,"author":{"gitId":"xingjie99"},"content":"                return new InvalidCommand(CommandMessages.MESSAGE_EDIT_BANK_NEED_DETAILS);","lastModifiedDate":"2021-11-07"},{"lineNumber":85,"author":{"gitId":"xingjie99"},"content":"            }","lastModifiedDate":"2021-10-24"},{"lineNumber":86,"author":{"gitId":"xingjie99"},"content":"            final String description \u003d ParserUtils.extractName(params);","lastModifiedDate":"2021-11-07"},{"lineNumber":87,"author":{"gitId":"xingjie99"},"content":"            final Integer calories \u003d ParserUtils.extractItemCalories(params);","lastModifiedDate":"2021-11-07"},{"lineNumber":88,"author":{"gitId":"xingjie99"},"content":"            return new EditFoodBankCommand(itemIndex, description, calories);","lastModifiedDate":"2021-11-07"},{"lineNumber":89,"author":{"gitId":"xingjie99"},"content":"        } catch (ParserException e) {","lastModifiedDate":"2021-11-03"},{"lineNumber":90,"author":{"gitId":"xingjie99"},"content":"            return new InvalidCommand(e.getMessage());","lastModifiedDate":"2021-10-24"},{"lineNumber":91,"author":{"gitId":"xingjie99"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":92,"author":{"gitId":"xingjie99"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":93,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":94,"author":{"gitId":"xingjie99"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":95,"author":{"gitId":"xingjie99"},"content":"     * Parses input arguments for Edit commands for upcoming exercise.","lastModifiedDate":"2021-11-05"},{"lineNumber":96,"author":{"gitId":"xingjie99"},"content":"     *","lastModifiedDate":"2021-11-05"},{"lineNumber":97,"author":{"gitId":"xingjie99"},"content":"     * @param params         User input arguments","lastModifiedDate":"2021-11-05"},{"lineNumber":98,"author":{"gitId":"xingjie99"},"content":"     * @param itemTypePrefix Prefix of upcoming exercise","lastModifiedDate":"2021-11-05"},{"lineNumber":99,"author":{"gitId":"xingjie99"},"content":"     * @return Command to execute","lastModifiedDate":"2021-11-05"},{"lineNumber":100,"author":{"gitId":"xingjie99"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":101,"author":{"gitId":"xingjie99"},"content":"    protected Command parseEditUpcomingExercise(String params, String itemTypePrefix)","lastModifiedDate":"2021-10-24"},{"lineNumber":102,"author":{"gitId":"xingjie99"},"content":"            throws ItemNotSpecifiedException {","lastModifiedDate":"2021-10-24"},{"lineNumber":103,"author":{"gitId":"xingjie99"},"content":"        try {","lastModifiedDate":"2021-10-24"},{"lineNumber":104,"author":{"gitId":"xingjie99"},"content":"            if (ParserUtils.hasExtraDelimiters(params, EditFutureExerciseCommand.EXPECTED_PREFIXES)) {","lastModifiedDate":"2021-11-07"},{"lineNumber":105,"author":{"gitId":"xingjie99"},"content":"                return new InvalidCommand(ParserMessages.MESSAGE_ERROR_TOO_MANY_DELIMITERS);","lastModifiedDate":"2021-11-07"},{"lineNumber":106,"author":{"gitId":"xingjie99"},"content":"            }","lastModifiedDate":"2021-11-07"},{"lineNumber":107,"author":{"gitId":"xingjie99"},"content":"            final int itemIndex \u003d ParserUtils.extractItemIndex(params, itemTypePrefix);","lastModifiedDate":"2021-10-24"},{"lineNumber":108,"author":{"gitId":"xingjie99"},"content":"            if (ParserUtils.getNumberOfCorrectParamsDetected(params,","lastModifiedDate":"2021-10-24"},{"lineNumber":109,"author":{"gitId":"xingjie99"},"content":"                    Command.COMMAND_PREFIX_NAME, Command.COMMAND_PREFIX_CALORIES, Command.COMMAND_PREFIX_DATE) \u003d\u003d 0) {","lastModifiedDate":"2021-10-24"},{"lineNumber":110,"author":{"gitId":"xingjie99"},"content":"                return new InvalidCommand(CommandMessages.MESSAGE_EDIT_UPCOMING_EXERCISE_LIST_NEED_DETAILS);","lastModifiedDate":"2021-10-27"},{"lineNumber":111,"author":{"gitId":"xingjie99"},"content":"            }","lastModifiedDate":"2021-10-24"},{"lineNumber":112,"author":{"gitId":"xingjie99"},"content":"            final String description \u003d ParserUtils.extractName(params);","lastModifiedDate":"2021-10-28"},{"lineNumber":113,"author":{"gitId":"xingjie99"},"content":"            final Integer calories \u003d ParserUtils.extractItemCalories(params);","lastModifiedDate":"2021-11-03"},{"lineNumber":114,"author":{"gitId":"xingjie99"},"content":"            final LocalDate date \u003d ParserUtils.hasRequiredParams(params, Command.COMMAND_PREFIX_DATE)","lastModifiedDate":"2021-10-24"},{"lineNumber":115,"author":{"gitId":"xingjie99"},"content":"                    ? ParserUtils.extractDate(params, false)","lastModifiedDate":"2021-10-24"},{"lineNumber":116,"author":{"gitId":"xingjie99"},"content":"                    : null;","lastModifiedDate":"2021-10-30"},{"lineNumber":117,"author":{"gitId":"xingjie99"},"content":"            return new EditFutureExerciseCommand(itemIndex, description, calories, date);","lastModifiedDate":"2021-10-24"},{"lineNumber":118,"author":{"gitId":"xingjie99"},"content":"        } catch (ParserException e) {","lastModifiedDate":"2021-11-03"},{"lineNumber":119,"author":{"gitId":"xingjie99"},"content":"            return new InvalidCommand(e.getMessage());","lastModifiedDate":"2021-10-24"},{"lineNumber":120,"author":{"gitId":"xingjie99"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":121,"author":{"gitId":"xingjie99"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":122,"author":{"gitId":"xingjie99"},"content":"}","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"xingjie99":113,"tlyi":9}},{"path":"src/main/java/seedu/duke/logic/parser/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.logic.parser;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"tlyi"},"content":"import seedu.duke.logic.commands.Command;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"tlyi"},"content":"/**","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"tlyi"},"content":" * Represents a Parser that parses input arguments into their respective Command classes.","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"tlyi"},"content":" */","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"tlyi"},"content":"public interface Parser {","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"tlyi"},"content":"    Command parse(String params);","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"tlyi"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"tlyi":10}},{"path":"src/main/java/seedu/duke/logic/parser/ParserManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.logic.parser;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"tlyi"},"content":"import seedu.duke.logic.commands.ByeCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"tlyi"},"content":"import seedu.duke.logic.commands.Command;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"tlyi"},"content":"import seedu.duke.logic.commands.HelpCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"tlyi"},"content":"import seedu.duke.logic.commands.InvalidCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"tlyi"},"content":"import seedu.duke.logic.commands.OverviewCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"tlyi"},"content":"import seedu.duke.logic.parser.exceptions.ExtraParamException;","lastModifiedDate":"2021-11-08"},{"lineNumber":9,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"tlyi"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"tlyi"},"content":"/**","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"tlyi"},"content":" * Parses user input for the command word","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"tlyi"},"content":" * and calls the appropriate Parser class to determine which command to execute.","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"tlyi"},"content":" */","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"tlyi"},"content":"public class ParserManager {","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"tlyi"},"content":"    protected static final Logger logger \u003d Logger.getLogger(ParserManager.class.getName());","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"tlyi"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"tlyi"},"content":"     * Returns the correct command to be executed depending on user input.","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"tlyi"},"content":"     * Command words are case-insensitive.","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"tlyi"},"content":"     *","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"tlyi"},"content":"     * @param input Raw user input string","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"tlyi"},"content":"     * @return Command class representing the correct command to be executed","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"tlyi"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"tlyi"},"content":"    public Command parseCommand(String input) {","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"tlyi"},"content":"        if (hasTextFileDelimiter(input)) {","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"tlyi"},"content":"            return new InvalidCommand(ParserMessages.MESSAGE_ERROR_ILLEGAL_CHARACTER);","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"tlyi"},"content":"        final String[] commandAndParams \u003d splitInputIntoCommandAndParams(input);","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"tlyi"},"content":"        final String commandWord \u003d commandAndParams[0].toLowerCase(); //case-insensitive (all lower case)","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"tlyi"},"content":"        final String params \u003d \" \" + commandAndParams[1];","lastModifiedDate":"2021-11-03"},{"lineNumber":36,"author":{"gitId":"tlyi"},"content":"        try {","lastModifiedDate":"2021-11-08"},{"lineNumber":37,"author":{"gitId":"tlyi"},"content":"            switch (commandWord) {","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"tlyi"},"content":"            case Command.COMMAND_WORD_ADD:","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"tlyi"},"content":"                return new AddCommandParser().parse(params);","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"tlyi"},"content":"            case Command.COMMAND_WORD_DELETE:","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"tlyi"},"content":"                return new DeleteCommandParser().parse(params);","lastModifiedDate":"2021-10-21"},{"lineNumber":42,"author":{"gitId":"tlyi"},"content":"            case Command.COMMAND_WORD_VIEW:","lastModifiedDate":"2021-10-21"},{"lineNumber":43,"author":{"gitId":"tlyi"},"content":"                return new ViewCommandParser().parse(params);","lastModifiedDate":"2021-10-21"},{"lineNumber":44,"author":{"gitId":"xingjie99"},"content":"            case Command.COMMAND_WORD_EDIT:","lastModifiedDate":"2021-10-24"},{"lineNumber":45,"author":{"gitId":"xingjie99"},"content":"                return new EditCommandParser().parse(params);","lastModifiedDate":"2021-10-24"},{"lineNumber":46,"author":{"gitId":"tlyi"},"content":"            case Command.COMMAND_WORD_BMI:","lastModifiedDate":"2021-10-21"},{"lineNumber":47,"author":{"gitId":"tlyi"},"content":"                return new BmiParser().parse(params);","lastModifiedDate":"2021-10-21"},{"lineNumber":48,"author":{"gitId":"tlyi"},"content":"            case Command.COMMAND_WORD_PROFILE:","lastModifiedDate":"2021-10-21"},{"lineNumber":49,"author":{"gitId":"tlyi"},"content":"                return new UpdateProfileParser().parse(params);","lastModifiedDate":"2021-10-21"},{"lineNumber":50,"author":{"gitId":"tlyi"},"content":"            case OverviewCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-21"},{"lineNumber":51,"author":{"gitId":"tlyi"},"content":"                if (!params.trim().isEmpty()) {","lastModifiedDate":"2021-11-08"},{"lineNumber":52,"author":{"gitId":"tlyi"},"content":"                    throw new ExtraParamException();","lastModifiedDate":"2021-11-08"},{"lineNumber":53,"author":{"gitId":"tlyi"},"content":"                }","lastModifiedDate":"2021-11-08"},{"lineNumber":54,"author":{"gitId":"tlyi"},"content":"                return new OverviewCommand();","lastModifiedDate":"2021-10-21"},{"lineNumber":55,"author":{"gitId":"tlyi"},"content":"            case ByeCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-21"},{"lineNumber":56,"author":{"gitId":"tlyi"},"content":"                if (!params.trim().isEmpty()) {","lastModifiedDate":"2021-11-08"},{"lineNumber":57,"author":{"gitId":"tlyi"},"content":"                    throw new ExtraParamException();","lastModifiedDate":"2021-11-08"},{"lineNumber":58,"author":{"gitId":"tlyi"},"content":"                }","lastModifiedDate":"2021-11-08"},{"lineNumber":59,"author":{"gitId":"tlyi"},"content":"                return new ByeCommand();","lastModifiedDate":"2021-10-21"},{"lineNumber":60,"author":{"gitId":"tlyi"},"content":"            case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-21"},{"lineNumber":61,"author":{"gitId":"tlyi"},"content":"                if (!params.trim().isEmpty()) {","lastModifiedDate":"2021-11-08"},{"lineNumber":62,"author":{"gitId":"tlyi"},"content":"                    throw new ExtraParamException();","lastModifiedDate":"2021-11-08"},{"lineNumber":63,"author":{"gitId":"tlyi"},"content":"                }","lastModifiedDate":"2021-11-08"},{"lineNumber":64,"author":{"gitId":"tlyi"},"content":"                return new HelpCommand();","lastModifiedDate":"2021-10-21"},{"lineNumber":65,"author":{"gitId":"tlyi"},"content":"            default:","lastModifiedDate":"2021-10-21"},{"lineNumber":66,"author":{"gitId":"tlyi"},"content":"                return new InvalidCommand(ParserMessages.MESSAGE_ERROR_COMMAND_DOES_NOT_EXIST);","lastModifiedDate":"2021-10-21"},{"lineNumber":67,"author":{"gitId":"tlyi"},"content":"            }","lastModifiedDate":"2021-10-21"},{"lineNumber":68,"author":{"gitId":"tlyi"},"content":"        } catch (ExtraParamException e) {","lastModifiedDate":"2021-11-08"},{"lineNumber":69,"author":{"gitId":"tlyi"},"content":"            return new InvalidCommand(e.getMessage());","lastModifiedDate":"2021-11-08"},{"lineNumber":70,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-11-08"},{"lineNumber":71,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":72,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":73,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":74,"author":{"gitId":"tlyi"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":75,"author":{"gitId":"tlyi"},"content":"     * Returns a String array where 0th index is command string and 1st index is the remaining parameters.","lastModifiedDate":"2021-10-21"},{"lineNumber":76,"author":{"gitId":"tlyi"},"content":"     * Command string and parameter string is assumed to be separated by the first \" \" in input.","lastModifiedDate":"2021-10-21"},{"lineNumber":77,"author":{"gitId":"tlyi"},"content":"     * If no parameters are provided in the input, 1st index will be set to EMPTY.","lastModifiedDate":"2021-10-21"},{"lineNumber":78,"author":{"gitId":"tlyi"},"content":"     *","lastModifiedDate":"2021-10-21"},{"lineNumber":79,"author":{"gitId":"tlyi"},"content":"     * @param input Raw user input string","lastModifiedDate":"2021-10-21"},{"lineNumber":80,"author":{"gitId":"tlyi"},"content":"     * @return String array [command, parameters]","lastModifiedDate":"2021-10-21"},{"lineNumber":81,"author":{"gitId":"tlyi"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":82,"author":{"gitId":"tlyi"},"content":"    protected static String[] splitInputIntoCommandAndParams(String input) {","lastModifiedDate":"2021-10-21"},{"lineNumber":83,"author":{"gitId":"tlyi"},"content":"        String[] commandAndParams \u003d new String[2];","lastModifiedDate":"2021-10-21"},{"lineNumber":84,"author":{"gitId":"tlyi"},"content":"        final String[] inputSplit \u003d input.trim().split(\" \", 2);","lastModifiedDate":"2021-10-21"},{"lineNumber":85,"author":{"gitId":"tlyi"},"content":"        //command string","lastModifiedDate":"2021-10-21"},{"lineNumber":86,"author":{"gitId":"tlyi"},"content":"        commandAndParams[0] \u003d inputSplit[0];","lastModifiedDate":"2021-10-21"},{"lineNumber":87,"author":{"gitId":"tlyi"},"content":"        //param string; if not given, set to EMPTY for error handling","lastModifiedDate":"2021-10-21"},{"lineNumber":88,"author":{"gitId":"tlyi"},"content":"        commandAndParams[1] \u003d (inputSplit.length \u003d\u003d 2) ? inputSplit[1].trim() : ParserMessages.EMPTY;","lastModifiedDate":"2021-10-21"},{"lineNumber":89,"author":{"gitId":"tlyi"},"content":"        return commandAndParams;","lastModifiedDate":"2021-10-21"},{"lineNumber":90,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":91,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":92,"author":{"gitId":"tlyi"},"content":"    protected static boolean hasTextFileDelimiter(String input) {","lastModifiedDate":"2021-10-21"},{"lineNumber":93,"author":{"gitId":"tlyi"},"content":"        return input.contains(ParserMessages.FILE_TEXT_DELIMITER);","lastModifiedDate":"2021-10-21"},{"lineNumber":94,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":95,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":96,"author":{"gitId":"tlyi"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"xingjie99":2,"tlyi":94}},{"path":"src/main/java/seedu/duke/logic/parser/ParserMessages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.logic.parser;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"tlyi"},"content":"import seedu.duke.logic.commands.Command;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"tlyi"},"content":"import seedu.duke.logic.commands.HelpCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"tlyi"},"content":"/**","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"tlyi"},"content":" * Contains all message constants that Parser classes uses.","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"tlyi"},"content":" */","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"tlyi"},"content":"public class ParserMessages {","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"tlyi"},"content":"    protected static final String EMPTY \u003d \"\";","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"tlyi"},"content":"    protected static final String LS \u003d System.lineSeparator();","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"tlyi"},"content":"    protected static final String QUOTATION \u003d \"\\\"\";","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"tlyi"},"content":"    protected static final String MESSAGE_ERROR_COMMAND_DOES_NOT_EXIST \u003d \"Fitbot is unable to understand this command! \"","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"tlyi"},"content":"            + LS + \"Lost? Try typing \" + HelpCommand.MESSAGE_COMMAND_FORMAT + \" to see the list of commands!\";","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"tlyi"},"content":"    protected static final String MESSAGE_ERROR_NO_DESCRIPTION \u003d \"Please input a description for this item!\";","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"tlyi"},"content":"    protected static final String MESSAGE_ERROR_NAME_EMPTY_STRING \u003d \"Please do not use an empty string as your name!\";","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"tlyi"},"content":"    protected static final String MESSAGE_ERROR_NO_CALORIES_INFO \u003d \"Please input the number of calories using \"","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"tlyi"},"content":"            + \"the prefix \"","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"tlyi"},"content":"            + QUOTATION + Command.COMMAND_PREFIX_CALORIES + Command.COMMAND_PREFIX_DELIMITER + QUOTATION + \"!\";","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"tlyi"},"content":"    protected static final String MESSAGE_ERROR_NO_ITEM_NUM \u003d \"Please input the item number!\";","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"tlyi"},"content":"    protected static final String MESSAGE_ERROR_INVALID_ITEM_NUM \u003d \"Please input the item number as a whole number \"","lastModifiedDate":"2021-11-03"},{"lineNumber":22,"author":{"gitId":"tlyi"},"content":"            + \"greater than 0!\";","lastModifiedDate":"2021-11-04"},{"lineNumber":23,"author":{"gitId":"tlyi"},"content":"    protected static final String MESSAGE_ERROR_TOO_MANY_DELIMITERS \u003d \"Please do not use the character \"","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"tlyi"},"content":"            + QUOTATION + Command.COMMAND_PREFIX_DELIMITER + QUOTATION","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"tlyi"},"content":"            + \" other than to specify parameters relevant to this command!\";","lastModifiedDate":"2021-11-04"},{"lineNumber":26,"author":{"gitId":"tlyi"},"content":"    protected static final String FILE_TEXT_DELIMITER \u003d \"|\";","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"tlyi"},"content":"    protected static final String MESSAGE_ERROR_ILLEGAL_CHARACTER \u003d \"Please do not use the character \"","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"tlyi"},"content":"            + QUOTATION + FILE_TEXT_DELIMITER + QUOTATION","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"tlyi"},"content":"            + \" in your input!\";","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"tryyang2001"},"content":"    protected static final String DATE_FORMAT \u003d \"dd-MM-yyyy\";","lastModifiedDate":"2021-10-29"},{"lineNumber":31,"author":{"gitId":"tryyang2001"},"content":"    protected static final String TIME_FORMAT \u003d \"HHmm\";","lastModifiedDate":"2021-10-29"},{"lineNumber":32,"author":{"gitId":"tryyang2001"},"content":"    protected static final String MESSAGE_ERROR_INVALID_DATE_FORMAT \u003d \"Invalid date! Please input a valid date as \"","lastModifiedDate":"2021-11-02"},{"lineNumber":33,"author":{"gitId":"tryyang2001"},"content":"            + \"DD-MM-YYYY\";","lastModifiedDate":"2021-10-29"},{"lineNumber":34,"author":{"gitId":"tryyang2001"},"content":"    protected static final String MESSAGE_ERROR_INVALID_TIME_FORMAT \u003d \"Invalid time! Please input a valid time as \"","lastModifiedDate":"2021-11-02"},{"lineNumber":35,"author":{"gitId":"tryyang2001"},"content":"            + \"HHMM\";","lastModifiedDate":"2021-10-29"},{"lineNumber":36,"author":{"gitId":"tlyi"},"content":"    protected static final String MESSAGE_ERROR_INVALID_DAY_OF_THE_WEEK \u003d \"Invalid day format! Please input day(s) \"","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"xingjie99"},"content":"            + \"between 1 and 7 with a comma in between the days.\" + LS","lastModifiedDate":"2021-11-04"},{"lineNumber":38,"author":{"gitId":"tlyi"},"content":"            + LS + \"1 : Monday\"","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"tlyi"},"content":"            + LS + \"2 : Tuesday\"","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"tlyi"},"content":"            + LS + \"3 : Wednesday\"","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"tlyi"},"content":"            + LS + \"4 : Thursday\"","lastModifiedDate":"2021-10-21"},{"lineNumber":42,"author":{"gitId":"tlyi"},"content":"            + LS + \"5 : Friday\"","lastModifiedDate":"2021-10-21"},{"lineNumber":43,"author":{"gitId":"tlyi"},"content":"            + LS + \"6 : Saturday\"","lastModifiedDate":"2021-10-21"},{"lineNumber":44,"author":{"gitId":"xingjie99"},"content":"            + LS + \"7 : Sunday\"","lastModifiedDate":"2021-11-04"},{"lineNumber":45,"author":{"gitId":"xingjie99"},"content":"            + LS + LS + \"E.G: @/1,3,5,6\";","lastModifiedDate":"2021-11-04"},{"lineNumber":46,"author":{"gitId":"tlyi"},"content":"    protected static final String MESSAGE_ERROR_NO_DATE \u003d \"Please input the date for this item using the prefix \"","lastModifiedDate":"2021-10-27"},{"lineNumber":47,"author":{"gitId":"tlyi"},"content":"            + QUOTATION + Command.COMMAND_PREFIX_DATE + Command.COMMAND_PREFIX_DELIMITER + QUOTATION + \"!\";","lastModifiedDate":"2021-10-27"},{"lineNumber":48,"author":{"gitId":"tlyi"},"content":"    protected static final String MESSAGE_ERROR_NO_START_DATE \u003d \"Please input the start date for this item \"","lastModifiedDate":"2021-10-27"},{"lineNumber":49,"author":{"gitId":"tlyi"},"content":"            + \"using the prefix \" + QUOTATION + Command.COMMAND_PREFIX_START_DATE + Command.COMMAND_PREFIX_DELIMITER","lastModifiedDate":"2021-10-27"},{"lineNumber":50,"author":{"gitId":"tlyi"},"content":"            + QUOTATION + \"!\";","lastModifiedDate":"2021-10-27"},{"lineNumber":51,"author":{"gitId":"tlyi"},"content":"    protected static final String MESSAGE_ERROR_NO_END_DATE \u003d \"Please input the end date for this item \"","lastModifiedDate":"2021-10-27"},{"lineNumber":52,"author":{"gitId":"tlyi"},"content":"            + \"using the prefix \" + QUOTATION + Command.COMMAND_PREFIX_END_DATE + Command.COMMAND_PREFIX_DELIMITER","lastModifiedDate":"2021-10-27"},{"lineNumber":53,"author":{"gitId":"tlyi"},"content":"            + QUOTATION + \"!\";","lastModifiedDate":"2021-10-27"},{"lineNumber":54,"author":{"gitId":"tlyi"},"content":"    protected static final String MESSAGE_ERROR_NO_TIME \u003d \"Please input the time for this item using the prefix \"","lastModifiedDate":"2021-10-27"},{"lineNumber":55,"author":{"gitId":"tlyi"},"content":"            + QUOTATION + Command.COMMAND_PREFIX_TIME + Command.COMMAND_PREFIX_DELIMITER + QUOTATION + \"!\";","lastModifiedDate":"2021-10-27"},{"lineNumber":56,"author":{"gitId":"tlyi"},"content":"    protected static final String MESSAGE_ERROR_NO_DAY_OF_THE_WEEK \u003d \"Please input the day(s) of reoccurrence \"","lastModifiedDate":"2021-10-27"},{"lineNumber":57,"author":{"gitId":"tlyi"},"content":"            + \"for this item using the prefix \"","lastModifiedDate":"2021-10-27"},{"lineNumber":58,"author":{"gitId":"tlyi"},"content":"            + QUOTATION + Command.COMMAND_PREFIX_DAY_OF_THE_WEEK + Command.COMMAND_PREFIX_DELIMITER + QUOTATION + \"!\";","lastModifiedDate":"2021-10-27"},{"lineNumber":59,"author":{"gitId":"tlyi"},"content":"    protected static final String MESSAGE_ERROR_REPEATED_DAY_OF_THE_WEEK \u003d \"Please check your input of the day(s) \"","lastModifiedDate":"2021-10-27"},{"lineNumber":60,"author":{"gitId":"tlyi"},"content":"            + \"of reoccurrence and make sure that there is no repeated day!\";","lastModifiedDate":"2021-10-27"},{"lineNumber":61,"author":{"gitId":"tlyi"},"content":"    protected static final int MONDAY \u003d 1;","lastModifiedDate":"2021-10-21"},{"lineNumber":62,"author":{"gitId":"tlyi"},"content":"    protected static final int SUNDAY \u003d 7;","lastModifiedDate":"2021-10-21"},{"lineNumber":63,"author":{"gitId":"tryyang2001"},"content":"    protected static final String MESSAGE_ERROR_ITEM_DATE_TOO_OLD \u003d \"Please input a date that is within %s to %s!\";","lastModifiedDate":"2021-10-27"},{"lineNumber":64,"author":{"gitId":"tlyi"},"content":"    protected static final String MESSAGE_ERROR_EXTRA_PARAMETERS \u003d","lastModifiedDate":"2021-11-03"},{"lineNumber":65,"author":{"gitId":"tlyi"},"content":"            \"Error! There were unnecessary parameters detected. \"","lastModifiedDate":"2021-11-04"},{"lineNumber":66,"author":{"gitId":"tlyi"},"content":"                    + \"Please follow the command format and try again!\";","lastModifiedDate":"2021-11-03"},{"lineNumber":67,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_ERROR_DUPLICATE_NUMBERS \u003d","lastModifiedDate":"2021-11-03"},{"lineNumber":68,"author":{"gitId":"tlyi"},"content":"            \"Duplicate numbers found! Please input a list of unique numbers.\";","lastModifiedDate":"2021-11-03"},{"lineNumber":69,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":70,"author":{"gitId":"tlyi"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"tryyang2001":7,"xingjie99":3,"tlyi":60}},{"path":"src/main/java/seedu/duke/logic/parser/ParserUtils.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.logic.parser;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"tlyi"},"content":"import seedu.duke.data.profile.utilities.ProfileUtils;","lastModifiedDate":"2021-11-04"},{"lineNumber":4,"author":{"gitId":"tlyi"},"content":"import seedu.duke.logic.commands.Command;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"tlyi"},"content":"import seedu.duke.logic.commands.CommandMessages;","lastModifiedDate":"2021-11-04"},{"lineNumber":6,"author":{"gitId":"tlyi"},"content":"import seedu.duke.logic.parser.exceptions.ExtraParamException;","lastModifiedDate":"2021-11-03"},{"lineNumber":7,"author":{"gitId":"tlyi"},"content":"import seedu.duke.logic.parser.exceptions.InvalidParamException;","lastModifiedDate":"2021-11-03"},{"lineNumber":8,"author":{"gitId":"tlyi"},"content":"import seedu.duke.logic.parser.exceptions.MissingParamException;","lastModifiedDate":"2021-11-03"},{"lineNumber":9,"author":{"gitId":"tlyi"},"content":"import seedu.duke.logic.parser.exceptions.ParserException;","lastModifiedDate":"2021-11-03"},{"lineNumber":10,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"tlyi"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"tlyi"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"tlyi"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"tryyang2001"},"content":"import java.time.YearMonth;","lastModifiedDate":"2021-11-02"},{"lineNumber":15,"author":{"gitId":"tlyi"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"tlyi"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"tlyi"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"tlyi"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"tlyi"},"content":"/**","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"tlyi"},"content":" * Contains utility methods used by Parser classes to extract relevant parameters.","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"tlyi"},"content":" */","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"tlyi"},"content":"public class ParserUtils {","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"tlyi"},"content":"    protected static final Logger logger \u003d Logger.getLogger(ParserUtils.class.getName());","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"tlyi"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"tlyi"},"content":"     * Extracts the item type prefix for command words that are common across item types (add, delete, view).","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"tlyi"},"content":"     * Item type must be the first word after the command word. E.g \"add f/pot\" is valid, \"add c/20 f/pot\" is not","lastModifiedDate":"2021-11-03"},{"lineNumber":30,"author":{"gitId":"tlyi"},"content":"     *","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"tlyi"},"content":"     * @param params String containing all parameters","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"tlyi"},"content":"     * @return String that is supposed to be the item prefix","lastModifiedDate":"2021-11-03"},{"lineNumber":33,"author":{"gitId":"tlyi"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"tlyi"},"content":"    protected static String extractItemTypePrefix(String params) {","lastModifiedDate":"2021-11-03"},{"lineNumber":35,"author":{"gitId":"tlyi"},"content":"        return params.trim().split(\"/\", 2)[0];","lastModifiedDate":"2021-11-03"},{"lineNumber":36,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":39,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":40,"author":{"gitId":"tlyi"},"content":"    /*\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d General methods to extract different data types \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d*/","lastModifiedDate":"2021-11-03"},{"lineNumber":41,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":42,"author":{"gitId":"tlyi"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":43,"author":{"gitId":"tlyi"},"content":"     * Extracts only the parameter that is specified by the prefix so that any additional parameter","lastModifiedDate":"2021-11-03"},{"lineNumber":44,"author":{"gitId":"tlyi"},"content":"     * specified behind this string (if any) is removed.","lastModifiedDate":"2021-10-21"},{"lineNumber":45,"author":{"gitId":"tlyi"},"content":"     * E.g. \"John Doe w/20\" is returned as \"John Doe\".","lastModifiedDate":"2021-10-21"},{"lineNumber":46,"author":{"gitId":"tlyi"},"content":"     * NOTE: This is why users are not allowed to include the character \"/\" in their inputs","lastModifiedDate":"2021-10-21"},{"lineNumber":47,"author":{"gitId":"tlyi"},"content":"     * other than to specify a parameter.","lastModifiedDate":"2021-10-21"},{"lineNumber":48,"author":{"gitId":"tlyi"},"content":"     *","lastModifiedDate":"2021-11-03"},{"lineNumber":49,"author":{"gitId":"tlyi"},"content":"     * @throws MissingParamException When expected parameter is missing","lastModifiedDate":"2021-11-03"},{"lineNumber":50,"author":{"gitId":"tlyi"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":51,"author":{"gitId":"tlyi"},"content":"    protected static String extractRelevantParameter(String params, String prefix)","lastModifiedDate":"2021-11-03"},{"lineNumber":52,"author":{"gitId":"tlyi"},"content":"            throws MissingParamException {","lastModifiedDate":"2021-11-03"},{"lineNumber":53,"author":{"gitId":"tlyi"},"content":"        try {","lastModifiedDate":"2021-11-03"},{"lineNumber":54,"author":{"gitId":"tlyi"},"content":"            String stringAfterPrefix \u003d params.split(\" \" + prefix + Command.COMMAND_PREFIX_DELIMITER, 2)[1];","lastModifiedDate":"2021-11-03"},{"lineNumber":55,"author":{"gitId":"tlyi"},"content":"            if (stringAfterPrefix.contains(Command.COMMAND_PREFIX_DELIMITER)) {","lastModifiedDate":"2021-11-03"},{"lineNumber":56,"author":{"gitId":"tlyi"},"content":"                return stringAfterPrefix.substring(0,","lastModifiedDate":"2021-11-03"},{"lineNumber":57,"author":{"gitId":"tlyi"},"content":"                        stringAfterPrefix.indexOf(Command.COMMAND_PREFIX_DELIMITER) - 1).trim();","lastModifiedDate":"2021-11-03"},{"lineNumber":58,"author":{"gitId":"tlyi"},"content":"            }","lastModifiedDate":"2021-11-03"},{"lineNumber":59,"author":{"gitId":"tlyi"},"content":"            return stringAfterPrefix.trim();","lastModifiedDate":"2021-11-03"},{"lineNumber":60,"author":{"gitId":"tlyi"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-11-03"},{"lineNumber":61,"author":{"gitId":"tlyi"},"content":"            throw new MissingParamException();","lastModifiedDate":"2021-11-03"},{"lineNumber":62,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-11-03"},{"lineNumber":63,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":64,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":65,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":66,"author":{"gitId":"tlyi"},"content":"    /**","lastModifiedDate":"2021-11-03"},{"lineNumber":67,"author":{"gitId":"tlyi"},"content":"     * Extracts only the parameter required so that any additional parameter","lastModifiedDate":"2021-11-03"},{"lineNumber":68,"author":{"gitId":"tlyi"},"content":"     * specified behind this string (if any) is removed.","lastModifiedDate":"2021-11-03"},{"lineNumber":69,"author":{"gitId":"tlyi"},"content":"     * Specific to parameters where only one word is expected, and any word separated by a whitespace in this","lastModifiedDate":"2021-11-03"},{"lineNumber":70,"author":{"gitId":"tlyi"},"content":"     * string is considered to be extra (and unnecessary).","lastModifiedDate":"2021-11-03"},{"lineNumber":71,"author":{"gitId":"tlyi"},"content":"     * E.g. \"f/1\" returns \"1\", and \"f/1 hello\" throws ExtraParamException","lastModifiedDate":"2021-11-03"},{"lineNumber":72,"author":{"gitId":"tlyi"},"content":"     *","lastModifiedDate":"2021-11-03"},{"lineNumber":73,"author":{"gitId":"tlyi"},"content":"     * @throws MissingParamException When expected parameter is missing","lastModifiedDate":"2021-11-03"},{"lineNumber":74,"author":{"gitId":"tlyi"},"content":"     * @throws ExtraParamException   When extra words are detected for the parameter","lastModifiedDate":"2021-11-03"},{"lineNumber":75,"author":{"gitId":"tlyi"},"content":"     */","lastModifiedDate":"2021-11-03"},{"lineNumber":76,"author":{"gitId":"tlyi"},"content":"    protected static String extractRelevantParameterWithoutWhitespace(String params, String prefix)","lastModifiedDate":"2021-11-03"},{"lineNumber":77,"author":{"gitId":"tlyi"},"content":"            throws MissingParamException, ExtraParamException {","lastModifiedDate":"2021-11-03"},{"lineNumber":78,"author":{"gitId":"tlyi"},"content":"        String[] paramsSplitByWhitespace \u003d extractRelevantParameter(params, prefix).split(\" \", 2);","lastModifiedDate":"2021-11-03"},{"lineNumber":79,"author":{"gitId":"tlyi"},"content":"        if (paramsSplitByWhitespace.length \u003d\u003d 2) {","lastModifiedDate":"2021-11-03"},{"lineNumber":80,"author":{"gitId":"tlyi"},"content":"            throw new ExtraParamException();","lastModifiedDate":"2021-11-08"},{"lineNumber":81,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":82,"author":{"gitId":"tlyi"},"content":"        return paramsSplitByWhitespace[0];","lastModifiedDate":"2021-11-03"},{"lineNumber":83,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":84,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":85,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":86,"author":{"gitId":"tlyi"},"content":"    protected static LocalDate extractGeneralDate(String params, String prefix)","lastModifiedDate":"2021-11-03"},{"lineNumber":87,"author":{"gitId":"tlyi"},"content":"            throws ParserException {","lastModifiedDate":"2021-11-03"},{"lineNumber":88,"author":{"gitId":"tlyi"},"content":"        try {","lastModifiedDate":"2021-11-03"},{"lineNumber":89,"author":{"gitId":"tlyi"},"content":"            String dateString \u003d extractRelevantParameterWithoutWhitespace(params, prefix);","lastModifiedDate":"2021-11-03"},{"lineNumber":90,"author":{"gitId":"tlyi"},"content":"            logger.log(Level.FINE, String.format(\"date string detected is: %s\", dateString));","lastModifiedDate":"2021-11-08"},{"lineNumber":91,"author":{"gitId":"tlyi"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(ParserMessages.DATE_FORMAT);","lastModifiedDate":"2021-11-03"},{"lineNumber":92,"author":{"gitId":"tlyi"},"content":"            LocalDate date \u003d LocalDate.parse(dateString, formatter);","lastModifiedDate":"2021-11-03"},{"lineNumber":93,"author":{"gitId":"tlyi"},"content":"            YearMonth currentMonth \u003d YearMonth.of(date.getYear(), date.getMonth());","lastModifiedDate":"2021-11-03"},{"lineNumber":94,"author":{"gitId":"tlyi"},"content":"            if (Integer.parseInt(dateString.substring(0, dateString.indexOf(\"-\")))","lastModifiedDate":"2021-11-03"},{"lineNumber":95,"author":{"gitId":"tlyi"},"content":"                    \u003e currentMonth.atEndOfMonth().getDayOfMonth()) {","lastModifiedDate":"2021-11-03"},{"lineNumber":96,"author":{"gitId":"tlyi"},"content":"                throw new ParserException(ParserMessages.MESSAGE_ERROR_INVALID_DATE_FORMAT);","lastModifiedDate":"2021-11-03"},{"lineNumber":97,"author":{"gitId":"tlyi"},"content":"            }","lastModifiedDate":"2021-10-21"},{"lineNumber":98,"author":{"gitId":"tlyi"},"content":"            return date;","lastModifiedDate":"2021-11-03"},{"lineNumber":99,"author":{"gitId":"tlyi"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-11-03"},{"lineNumber":100,"author":{"gitId":"tlyi"},"content":"            throw new ParserException(ParserMessages.MESSAGE_ERROR_INVALID_DATE_FORMAT);","lastModifiedDate":"2021-11-03"},{"lineNumber":101,"author":{"gitId":"tlyi"},"content":"        } catch (MissingParamException e) {","lastModifiedDate":"2021-11-03"},{"lineNumber":102,"author":{"gitId":"tlyi"},"content":"            return null;","lastModifiedDate":"2021-11-03"},{"lineNumber":103,"author":{"gitId":"tlyi"},"content":"        } catch (ExtraParamException e) {","lastModifiedDate":"2021-11-03"},{"lineNumber":104,"author":{"gitId":"tlyi"},"content":"            throw new ParserException(e.getMessage());","lastModifiedDate":"2021-11-03"},{"lineNumber":105,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-11-03"},{"lineNumber":106,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":107,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":108,"author":{"gitId":"tlyi"},"content":"    protected static LocalTime extractGeneralTime(String params, String prefix)","lastModifiedDate":"2021-11-03"},{"lineNumber":109,"author":{"gitId":"tlyi"},"content":"            throws ParserException {","lastModifiedDate":"2021-11-03"},{"lineNumber":110,"author":{"gitId":"tlyi"},"content":"        try {","lastModifiedDate":"2021-11-03"},{"lineNumber":111,"author":{"gitId":"tlyi"},"content":"            String timeString \u003d extractRelevantParameterWithoutWhitespace(params, Command.COMMAND_PREFIX_TIME);","lastModifiedDate":"2021-11-03"},{"lineNumber":112,"author":{"gitId":"tlyi"},"content":"            logger.log(Level.FINE, String.format(\"time string detected is: %s\", timeString));","lastModifiedDate":"2021-11-08"},{"lineNumber":113,"author":{"gitId":"tlyi"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(ParserMessages.TIME_FORMAT);","lastModifiedDate":"2021-11-03"},{"lineNumber":114,"author":{"gitId":"tlyi"},"content":"            return LocalTime.parse(timeString, formatter);","lastModifiedDate":"2021-11-03"},{"lineNumber":115,"author":{"gitId":"tlyi"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-11-03"},{"lineNumber":116,"author":{"gitId":"tlyi"},"content":"            throw new ParserException(ParserMessages.MESSAGE_ERROR_INVALID_TIME_FORMAT);","lastModifiedDate":"2021-11-03"},{"lineNumber":117,"author":{"gitId":"tlyi"},"content":"        } catch (MissingParamException e) {","lastModifiedDate":"2021-11-03"},{"lineNumber":118,"author":{"gitId":"tlyi"},"content":"            return null;","lastModifiedDate":"2021-11-03"},{"lineNumber":119,"author":{"gitId":"tlyi"},"content":"        } catch (ExtraParamException e) {","lastModifiedDate":"2021-11-03"},{"lineNumber":120,"author":{"gitId":"tlyi"},"content":"            throw new ParserException(e.getMessage());","lastModifiedDate":"2021-11-03"},{"lineNumber":121,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-11-03"},{"lineNumber":122,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":123,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":124,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":125,"author":{"gitId":"tlyi"},"content":"    protected static Integer extractGeneralInteger(String params, String prefix)","lastModifiedDate":"2021-11-03"},{"lineNumber":126,"author":{"gitId":"tlyi"},"content":"            throws InvalidParamException, ParserException {","lastModifiedDate":"2021-11-03"},{"lineNumber":127,"author":{"gitId":"tlyi"},"content":"        try {","lastModifiedDate":"2021-11-03"},{"lineNumber":128,"author":{"gitId":"tlyi"},"content":"            String intString \u003d extractRelevantParameterWithoutWhitespace(params, prefix);","lastModifiedDate":"2021-11-03"},{"lineNumber":129,"author":{"gitId":"tlyi"},"content":"            if (Double.parseDouble(intString) \u003e Integer.MAX_VALUE) {","lastModifiedDate":"2021-11-04"},{"lineNumber":130,"author":{"gitId":"tlyi"},"content":"                return Integer.MAX_VALUE;","lastModifiedDate":"2021-11-04"},{"lineNumber":131,"author":{"gitId":"tlyi"},"content":"            }","lastModifiedDate":"2021-11-04"},{"lineNumber":132,"author":{"gitId":"tlyi"},"content":"            return Integer.parseInt(intString);","lastModifiedDate":"2021-11-03"},{"lineNumber":133,"author":{"gitId":"tlyi"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-11-03"},{"lineNumber":134,"author":{"gitId":"tlyi"},"content":"            throw new InvalidParamException();","lastModifiedDate":"2021-11-03"},{"lineNumber":135,"author":{"gitId":"tlyi"},"content":"        } catch (MissingParamException e) {","lastModifiedDate":"2021-11-03"},{"lineNumber":136,"author":{"gitId":"tlyi"},"content":"            logger.log(Level.FINE, \"No integer given, return null\");","lastModifiedDate":"2021-11-08"},{"lineNumber":137,"author":{"gitId":"tlyi"},"content":"            return null;","lastModifiedDate":"2021-11-03"},{"lineNumber":138,"author":{"gitId":"tlyi"},"content":"        } catch (ExtraParamException e) {","lastModifiedDate":"2021-11-03"},{"lineNumber":139,"author":{"gitId":"tlyi"},"content":"            throw new ParserException(e.getMessage());","lastModifiedDate":"2021-11-03"},{"lineNumber":140,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-11-03"},{"lineNumber":141,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":142,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":143,"author":{"gitId":"tlyi"},"content":"    protected static Double extractGeneralDouble(String params, String prefix)","lastModifiedDate":"2021-11-03"},{"lineNumber":144,"author":{"gitId":"tlyi"},"content":"            throws InvalidParamException, ParserException {","lastModifiedDate":"2021-11-03"},{"lineNumber":145,"author":{"gitId":"tlyi"},"content":"        try {","lastModifiedDate":"2021-11-03"},{"lineNumber":146,"author":{"gitId":"tlyi"},"content":"            String doubleString \u003d extractRelevantParameterWithoutWhitespace(params, prefix);","lastModifiedDate":"2021-11-03"},{"lineNumber":147,"author":{"gitId":"tlyi"},"content":"            return Double.parseDouble(doubleString);","lastModifiedDate":"2021-11-03"},{"lineNumber":148,"author":{"gitId":"tlyi"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-11-03"},{"lineNumber":149,"author":{"gitId":"tlyi"},"content":"            throw new InvalidParamException();","lastModifiedDate":"2021-11-03"},{"lineNumber":150,"author":{"gitId":"tlyi"},"content":"        } catch (MissingParamException e) {","lastModifiedDate":"2021-11-03"},{"lineNumber":151,"author":{"gitId":"tlyi"},"content":"            logger.log(Level.FINE, \"No double given but not required, return null\");","lastModifiedDate":"2021-11-08"},{"lineNumber":152,"author":{"gitId":"tlyi"},"content":"            return null;","lastModifiedDate":"2021-11-03"},{"lineNumber":153,"author":{"gitId":"tlyi"},"content":"        } catch (ExtraParamException e) {","lastModifiedDate":"2021-11-03"},{"lineNumber":154,"author":{"gitId":"tlyi"},"content":"            throw new ParserException(e.getMessage());","lastModifiedDate":"2021-11-03"},{"lineNumber":155,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-11-03"},{"lineNumber":156,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":157,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":158,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":159,"author":{"gitId":"tlyi"},"content":"    /*\u003d\u003d\u003d\u003d\u003d Methods to extract specific parameters that is needed across all Parser classes \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d*/","lastModifiedDate":"2021-11-03"},{"lineNumber":160,"author":{"gitId":"tlyi"},"content":"    /*\u003d\u003d\u003d\u003d\u003d All methods here should throw general ParserException, with specific error messages \u003d\u003d\u003d\u003d*/","lastModifiedDate":"2021-11-03"},{"lineNumber":161,"author":{"gitId":"tlyi"},"content":"    /*Methods which are specific to the type of Command are found in their respective Parser classes*/","lastModifiedDate":"2021-11-03"},{"lineNumber":162,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":163,"author":{"gitId":"tlyi"},"content":"    protected static String extractItemDescription(String params, String prefix)","lastModifiedDate":"2021-10-21"},{"lineNumber":164,"author":{"gitId":"tlyi"},"content":"            throws ParserException {","lastModifiedDate":"2021-11-03"},{"lineNumber":165,"author":{"gitId":"tlyi"},"content":"        try {","lastModifiedDate":"2021-10-21"},{"lineNumber":166,"author":{"gitId":"tlyi"},"content":"            String description \u003d extractRelevantParameter(params, prefix);","lastModifiedDate":"2021-11-03"},{"lineNumber":167,"author":{"gitId":"tlyi"},"content":"            logger.log(Level.FINE, String.format(\"Item name:%s\", description));","lastModifiedDate":"2021-11-08"},{"lineNumber":168,"author":{"gitId":"tlyi"},"content":"            if (description.equals(ParserMessages.EMPTY)) {","lastModifiedDate":"2021-10-21"},{"lineNumber":169,"author":{"gitId":"tlyi"},"content":"                logger.log(Level.FINE, \"Detected empty description\");","lastModifiedDate":"2021-11-08"},{"lineNumber":170,"author":{"gitId":"tlyi"},"content":"                throw new ParserException(ParserMessages.MESSAGE_ERROR_NO_DESCRIPTION);","lastModifiedDate":"2021-11-03"},{"lineNumber":171,"author":{"gitId":"tlyi"},"content":"            }","lastModifiedDate":"2021-10-21"},{"lineNumber":172,"author":{"gitId":"tlyi"},"content":"            return description;","lastModifiedDate":"2021-10-21"},{"lineNumber":173,"author":{"gitId":"tlyi"},"content":"        } catch (MissingParamException e) {","lastModifiedDate":"2021-11-03"},{"lineNumber":174,"author":{"gitId":"tlyi"},"content":"            logger.log(Level.FINE, String.format(\"Detected missing command prefix (%s)\", prefix));","lastModifiedDate":"2021-11-08"},{"lineNumber":175,"author":{"gitId":"tlyi"},"content":"            throw new ParserException(ParserMessages.MESSAGE_ERROR_NO_DESCRIPTION);","lastModifiedDate":"2021-11-03"},{"lineNumber":176,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":177,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":178,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":179,"author":{"gitId":"tlyi"},"content":"    protected static Integer extractItemCalories(String params)","lastModifiedDate":"2021-11-03"},{"lineNumber":180,"author":{"gitId":"tlyi"},"content":"            throws ParserException {","lastModifiedDate":"2021-11-03"},{"lineNumber":181,"author":{"gitId":"tlyi"},"content":"        try {","lastModifiedDate":"2021-10-21"},{"lineNumber":182,"author":{"gitId":"tlyi"},"content":"            Integer calories \u003d extractGeneralInteger(params, Command.COMMAND_PREFIX_CALORIES);","lastModifiedDate":"2021-11-03"},{"lineNumber":183,"author":{"gitId":"tlyi"},"content":"            return calories;","lastModifiedDate":"2021-11-03"},{"lineNumber":184,"author":{"gitId":"tlyi"},"content":"        } catch (InvalidParamException e) {","lastModifiedDate":"2021-11-03"},{"lineNumber":185,"author":{"gitId":"tlyi"},"content":"            logger.log(Level.FINE, \"Detected non-digit calories input\");","lastModifiedDate":"2021-11-08"},{"lineNumber":186,"author":{"gitId":"tlyi"},"content":"            throw new ParserException(CommandMessages.MESSAGE_INVALID_CALORIES);","lastModifiedDate":"2021-11-04"},{"lineNumber":187,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":188,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":189,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":190,"author":{"gitId":"tlyi"},"content":"    protected static String extractName(String params) throws ParserException {","lastModifiedDate":"2021-11-03"},{"lineNumber":191,"author":{"gitId":"tlyi"},"content":"        try {","lastModifiedDate":"2021-10-21"},{"lineNumber":192,"author":{"gitId":"tlyi"},"content":"            String name \u003d extractRelevantParameter(params, Command.COMMAND_PREFIX_NAME);","lastModifiedDate":"2021-11-03"},{"lineNumber":193,"author":{"gitId":"tlyi"},"content":"            if (name.equals(ParserMessages.EMPTY)) {","lastModifiedDate":"2021-10-21"},{"lineNumber":194,"author":{"gitId":"tlyi"},"content":"                logger.log(Level.FINE, \"Detected empty name input.\");","lastModifiedDate":"2021-11-08"},{"lineNumber":195,"author":{"gitId":"tlyi"},"content":"                throw new ParserException(ParserMessages.MESSAGE_ERROR_NAME_EMPTY_STRING);","lastModifiedDate":"2021-11-03"},{"lineNumber":196,"author":{"gitId":"tlyi"},"content":"            }","lastModifiedDate":"2021-10-21"},{"lineNumber":197,"author":{"gitId":"tlyi"},"content":"            return name;","lastModifiedDate":"2021-10-21"},{"lineNumber":198,"author":{"gitId":"tlyi"},"content":"        } catch (MissingParamException e) {","lastModifiedDate":"2021-11-03"},{"lineNumber":199,"author":{"gitId":"tlyi"},"content":"            logger.log(Level.FINE, \"Detected missing name prefix, returning null string.\");","lastModifiedDate":"2021-11-08"},{"lineNumber":200,"author":{"gitId":"tlyi"},"content":"            return null;","lastModifiedDate":"2021-10-30"},{"lineNumber":201,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":202,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":203,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":204,"author":{"gitId":"tlyi"},"content":"    protected static Double extractHeight(String params) throws ParserException {","lastModifiedDate":"2021-11-03"},{"lineNumber":205,"author":{"gitId":"tlyi"},"content":"        try {","lastModifiedDate":"2021-10-21"},{"lineNumber":206,"author":{"gitId":"tlyi"},"content":"            return extractGeneralDouble(params, Command.COMMAND_PREFIX_HEIGHT);","lastModifiedDate":"2021-11-03"},{"lineNumber":207,"author":{"gitId":"tlyi"},"content":"        } catch (InvalidParamException e) {","lastModifiedDate":"2021-11-03"},{"lineNumber":208,"author":{"gitId":"tlyi"},"content":"            logger.log(Level.FINE, \"Detected non-digit height input.\");","lastModifiedDate":"2021-11-08"},{"lineNumber":209,"author":{"gitId":"tlyi"},"content":"            throw new ParserException(ProfileUtils.ERROR_HEIGHT);","lastModifiedDate":"2021-11-04"},{"lineNumber":210,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":211,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":212,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":213,"author":{"gitId":"tlyi"},"content":"    protected static Double extractWeight(String params) throws ParserException {","lastModifiedDate":"2021-11-03"},{"lineNumber":214,"author":{"gitId":"tlyi"},"content":"        try {","lastModifiedDate":"2021-10-21"},{"lineNumber":215,"author":{"gitId":"tlyi"},"content":"            return extractGeneralDouble(params, Command.COMMAND_PREFIX_WEIGHT);","lastModifiedDate":"2021-11-03"},{"lineNumber":216,"author":{"gitId":"tlyi"},"content":"        } catch (InvalidParamException e) {","lastModifiedDate":"2021-11-03"},{"lineNumber":217,"author":{"gitId":"tlyi"},"content":"            logger.log(Level.FINE, \"Detected non-digit weight input.\");","lastModifiedDate":"2021-11-08"},{"lineNumber":218,"author":{"gitId":"tlyi"},"content":"            throw new ParserException(ProfileUtils.ERROR_WEIGHT);","lastModifiedDate":"2021-11-04"},{"lineNumber":219,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":220,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":221,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":222,"author":{"gitId":"tlyi"},"content":"    protected static LocalDate extractDate(String params, boolean isRequired)","lastModifiedDate":"2021-10-21"},{"lineNumber":223,"author":{"gitId":"tlyi"},"content":"            throws ParserException {","lastModifiedDate":"2021-11-03"},{"lineNumber":224,"author":{"gitId":"tlyi"},"content":"        LocalDate localDate \u003d extractGeneralDate(params, Command.COMMAND_PREFIX_DATE);","lastModifiedDate":"2021-11-03"},{"lineNumber":225,"author":{"gitId":"tlyi"},"content":"        if (localDate \u003d\u003d null \u0026\u0026 isRequired) {","lastModifiedDate":"2021-11-03"},{"lineNumber":226,"author":{"gitId":"tlyi"},"content":"            logger.log(Level.FINE, \"Detected empty date input after prefix but date is required!\");","lastModifiedDate":"2021-11-08"},{"lineNumber":227,"author":{"gitId":"tlyi"},"content":"            throw new ParserException(ParserMessages.MESSAGE_ERROR_NO_DATE);","lastModifiedDate":"2021-11-03"},{"lineNumber":228,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-11-03"},{"lineNumber":229,"author":{"gitId":"tlyi"},"content":"        if (localDate \u003d\u003d null \u0026\u0026 !isRequired) {","lastModifiedDate":"2021-11-03"},{"lineNumber":230,"author":{"gitId":"tlyi"},"content":"            logger.log(Level.FINE, \"Detected empty date input after prefix, assuming date to be now\");","lastModifiedDate":"2021-11-08"},{"lineNumber":231,"author":{"gitId":"tlyi"},"content":"            return LocalDate.now();","lastModifiedDate":"2021-10-21"},{"lineNumber":232,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":233,"author":{"gitId":"tlyi"},"content":"        return localDate;","lastModifiedDate":"2021-11-03"},{"lineNumber":234,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":235,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":236,"author":{"gitId":"tlyi"},"content":"    protected static LocalTime extractTime(String params, boolean isRequired)","lastModifiedDate":"2021-10-21"},{"lineNumber":237,"author":{"gitId":"tlyi"},"content":"            throws ParserException {","lastModifiedDate":"2021-11-03"},{"lineNumber":238,"author":{"gitId":"tlyi"},"content":"        LocalTime localTime \u003d extractGeneralTime(params, Command.COMMAND_PREFIX_TIME);","lastModifiedDate":"2021-11-03"},{"lineNumber":239,"author":{"gitId":"tlyi"},"content":"        if (localTime \u003d\u003d null \u0026\u0026 isRequired) {","lastModifiedDate":"2021-11-03"},{"lineNumber":240,"author":{"gitId":"tlyi"},"content":"            logger.log(Level.FINE, \"Detected empty time input after prefix but time is required!\");","lastModifiedDate":"2021-11-08"},{"lineNumber":241,"author":{"gitId":"tlyi"},"content":"            throw new ParserException(ParserMessages.MESSAGE_ERROR_NO_TIME);","lastModifiedDate":"2021-11-03"},{"lineNumber":242,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-11-03"},{"lineNumber":243,"author":{"gitId":"tlyi"},"content":"        if (localTime \u003d\u003d null \u0026\u0026 !isRequired) {","lastModifiedDate":"2021-11-03"},{"lineNumber":244,"author":{"gitId":"tlyi"},"content":"            logger.log(Level.FINE, \"Detected empty time input after prefix, assuming time to be now\");","lastModifiedDate":"2021-11-08"},{"lineNumber":245,"author":{"gitId":"tlyi"},"content":"            return LocalTime.now();","lastModifiedDate":"2021-10-21"},{"lineNumber":246,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":247,"author":{"gitId":"tlyi"},"content":"        return localTime;","lastModifiedDate":"2021-11-03"},{"lineNumber":248,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":249,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":250,"author":{"gitId":"tlyi"},"content":"    protected static LocalDateTime extractDateTime(String params) throws ParserException {","lastModifiedDate":"2021-11-03"},{"lineNumber":251,"author":{"gitId":"tlyi"},"content":"        final LocalTime time \u003d extractTime(params, false);","lastModifiedDate":"2021-10-21"},{"lineNumber":252,"author":{"gitId":"tlyi"},"content":"        final LocalDate date \u003d extractDate(params, false);","lastModifiedDate":"2021-10-21"},{"lineNumber":253,"author":{"gitId":"tlyi"},"content":"        return date.atTime(time);","lastModifiedDate":"2021-10-21"},{"lineNumber":254,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":255,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":256,"author":{"gitId":"tlyi"},"content":"    protected static int extractItemIndex(String params, String prefix)","lastModifiedDate":"2021-10-21"},{"lineNumber":257,"author":{"gitId":"tlyi"},"content":"            throws ParserException {","lastModifiedDate":"2021-11-03"},{"lineNumber":258,"author":{"gitId":"tlyi"},"content":"        try {","lastModifiedDate":"2021-10-21"},{"lineNumber":259,"author":{"gitId":"tlyi"},"content":"            final Integer itemNum \u003d extractGeneralInteger(params, prefix);","lastModifiedDate":"2021-11-03"},{"lineNumber":260,"author":{"gitId":"tlyi"},"content":"            if (itemNum \u003d\u003d null) {","lastModifiedDate":"2021-11-03"},{"lineNumber":261,"author":{"gitId":"tlyi"},"content":"                throw new ParserException(ParserMessages.MESSAGE_ERROR_NO_ITEM_NUM);","lastModifiedDate":"2021-11-03"},{"lineNumber":262,"author":{"gitId":"tlyi"},"content":"            }","lastModifiedDate":"2021-11-03"},{"lineNumber":263,"author":{"gitId":"tlyi"},"content":"            final int itemIndex \u003d convertItemNumToItemIndex(itemNum);","lastModifiedDate":"2021-11-03"},{"lineNumber":264,"author":{"gitId":"tlyi"},"content":"            if (itemIndex \u003c 0) {","lastModifiedDate":"2021-10-24"},{"lineNumber":265,"author":{"gitId":"tlyi"},"content":"                throw new InvalidParamException();","lastModifiedDate":"2021-11-03"},{"lineNumber":266,"author":{"gitId":"tlyi"},"content":"            }","lastModifiedDate":"2021-10-24"},{"lineNumber":267,"author":{"gitId":"tlyi"},"content":"            return itemIndex;","lastModifiedDate":"2021-10-24"},{"lineNumber":268,"author":{"gitId":"tlyi"},"content":"        } catch (InvalidParamException e) {","lastModifiedDate":"2021-11-03"},{"lineNumber":269,"author":{"gitId":"tlyi"},"content":"            throw new ParserException(ParserMessages.MESSAGE_ERROR_INVALID_ITEM_NUM);","lastModifiedDate":"2021-11-03"},{"lineNumber":270,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":271,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":272,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":273,"author":{"gitId":"tlyi"},"content":"    protected static int convertItemNumToItemIndex(int itemNum) {","lastModifiedDate":"2021-10-21"},{"lineNumber":274,"author":{"gitId":"tlyi"},"content":"        return itemNum - 1;","lastModifiedDate":"2021-10-21"},{"lineNumber":275,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":276,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":277,"author":{"gitId":"tlyi"},"content":"    /*\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Methods to check data validity \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d*/","lastModifiedDate":"2021-11-03"},{"lineNumber":278,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":279,"author":{"gitId":"tlyi"},"content":"    protected static boolean isSevenDaysBeforeToday(LocalDate date) {","lastModifiedDate":"2021-11-03"},{"lineNumber":280,"author":{"gitId":"tryyang2001"},"content":"        return date.isBefore(LocalDate.now().minusDays(6));","lastModifiedDate":"2021-11-07"},{"lineNumber":281,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":282,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":283,"author":{"gitId":"tlyi"},"content":"    protected static boolean isWithinSevenDaysFromToday(LocalDate date) {","lastModifiedDate":"2021-11-03"},{"lineNumber":284,"author":{"gitId":"tryyang2001"},"content":"        return !isSevenDaysBeforeToday(date) \u0026\u0026 !date.isAfter(LocalDate.now());","lastModifiedDate":"2021-11-04"},{"lineNumber":285,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":286,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":287,"author":{"gitId":"tlyi"},"content":"    protected static boolean isFutureDate(LocalDate date) {","lastModifiedDate":"2021-11-03"},{"lineNumber":288,"author":{"gitId":"tlyi"},"content":"        return date.isAfter(LocalDate.now());","lastModifiedDate":"2021-11-03"},{"lineNumber":289,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":290,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":291,"author":{"gitId":"tlyi"},"content":"    protected static boolean hasRequiredParams(String params, String... prefixes) {","lastModifiedDate":"2021-11-03"},{"lineNumber":292,"author":{"gitId":"tlyi"},"content":"        for (String prefix : prefixes) {","lastModifiedDate":"2021-11-03"},{"lineNumber":293,"author":{"gitId":"tlyi"},"content":"            if (!params.toLowerCase().contains(\" \" + prefix + Command.COMMAND_PREFIX_DELIMITER)) {","lastModifiedDate":"2021-11-03"},{"lineNumber":294,"author":{"gitId":"tlyi"},"content":"                return false;","lastModifiedDate":"2021-11-03"},{"lineNumber":295,"author":{"gitId":"tlyi"},"content":"            }","lastModifiedDate":"2021-11-03"},{"lineNumber":296,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-11-03"},{"lineNumber":297,"author":{"gitId":"tlyi"},"content":"        return true;","lastModifiedDate":"2021-11-03"},{"lineNumber":298,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":299,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":300,"author":{"gitId":"tlyi"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":301,"author":{"gitId":"tlyi"},"content":"     * Returns the number of parameters detected that is valid for the specific command.","lastModifiedDate":"2021-10-21"},{"lineNumber":302,"author":{"gitId":"tlyi"},"content":"     * This is required as some parameters are optional, therefore an absolute number cannot be expected.","lastModifiedDate":"2021-10-21"},{"lineNumber":303,"author":{"gitId":"tlyi"},"content":"     *","lastModifiedDate":"2021-10-21"},{"lineNumber":304,"author":{"gitId":"tlyi"},"content":"     * @param params   User input string containing all parameters","lastModifiedDate":"2021-10-21"},{"lineNumber":305,"author":{"gitId":"tlyi"},"content":"     * @param prefixes Variable number of prefixes that is valid for the specific command","lastModifiedDate":"2021-10-21"},{"lineNumber":306,"author":{"gitId":"tlyi"},"content":"     * @return Number of parameters detected that is valid for the specific command","lastModifiedDate":"2021-10-21"},{"lineNumber":307,"author":{"gitId":"tlyi"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":308,"author":{"gitId":"tlyi"},"content":"    protected static int getNumberOfCorrectParamsDetected(String params, String... prefixes) {","lastModifiedDate":"2021-10-21"},{"lineNumber":309,"author":{"gitId":"tlyi"},"content":"        int count \u003d 0;","lastModifiedDate":"2021-10-21"},{"lineNumber":310,"author":{"gitId":"tlyi"},"content":"        for (String prefix : prefixes) {","lastModifiedDate":"2021-10-21"},{"lineNumber":311,"author":{"gitId":"tlyi"},"content":"            if (params.toLowerCase().contains(\" \" + prefix + Command.COMMAND_PREFIX_DELIMITER)) {","lastModifiedDate":"2021-11-03"},{"lineNumber":312,"author":{"gitId":"tlyi"},"content":"                count++;","lastModifiedDate":"2021-10-21"},{"lineNumber":313,"author":{"gitId":"tlyi"},"content":"            }","lastModifiedDate":"2021-10-21"},{"lineNumber":314,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":315,"author":{"gitId":"tlyi"},"content":"        logger.log(Level.FINE, String.format(\"no. of corrected params detected: %s\", count));","lastModifiedDate":"2021-11-08"},{"lineNumber":316,"author":{"gitId":"tlyi"},"content":"        return count;","lastModifiedDate":"2021-10-21"},{"lineNumber":317,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":318,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":319,"author":{"gitId":"tlyi"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":320,"author":{"gitId":"tlyi"},"content":"     * Returns true if there are too many \u0027/\u0027 characters in the parameter string.","lastModifiedDate":"2021-10-21"},{"lineNumber":321,"author":{"gitId":"tlyi"},"content":"     *","lastModifiedDate":"2021-10-21"},{"lineNumber":322,"author":{"gitId":"tlyi"},"content":"     * @param params   User input string containing all parameters","lastModifiedDate":"2021-10-21"},{"lineNumber":323,"author":{"gitId":"tlyi"},"content":"     * @param prefixes Variable number of prefixes that is valid for the specific command","lastModifiedDate":"2021-10-21"},{"lineNumber":324,"author":{"gitId":"tlyi"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":325,"author":{"gitId":"tlyi"},"content":"    protected static boolean hasExtraDelimiters(String params, String... prefixes) {","lastModifiedDate":"2021-10-21"},{"lineNumber":326,"author":{"gitId":"tlyi"},"content":"        final int expectedNum \u003d getNumberOfCorrectParamsDetected(params, prefixes);","lastModifiedDate":"2021-10-21"},{"lineNumber":327,"author":{"gitId":"tlyi"},"content":"        int numOfDelimiters \u003d 0;","lastModifiedDate":"2021-10-21"},{"lineNumber":328,"author":{"gitId":"tlyi"},"content":"        for (int i \u003d 0; i \u003c params.length(); i++) {","lastModifiedDate":"2021-10-21"},{"lineNumber":329,"author":{"gitId":"tlyi"},"content":"            if (params.charAt(i) \u003d\u003d Command.COMMAND_PREFIX_DELIMITER.charAt(0)) {","lastModifiedDate":"2021-10-21"},{"lineNumber":330,"author":{"gitId":"tlyi"},"content":"                numOfDelimiters++;","lastModifiedDate":"2021-10-21"},{"lineNumber":331,"author":{"gitId":"tlyi"},"content":"            }","lastModifiedDate":"2021-10-21"},{"lineNumber":332,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":333,"author":{"gitId":"tlyi"},"content":"        logger.log(Level.FINE, String.format(\"no. of delimiters detected: %s\", numOfDelimiters));","lastModifiedDate":"2021-11-08"},{"lineNumber":334,"author":{"gitId":"tlyi"},"content":"        return numOfDelimiters \u003e expectedNum;","lastModifiedDate":"2021-10-21"},{"lineNumber":335,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":336,"author":{"gitId":"tlyi"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"tryyang2001":3,"tlyi":333}},{"path":"src/main/java/seedu/duke/logic/parser/UpdateProfileParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.logic.parser;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"tlyi"},"content":"import seedu.duke.data.profile.utilities.ProfileUtils;","lastModifiedDate":"2021-11-04"},{"lineNumber":4,"author":{"gitId":"tlyi"},"content":"import seedu.duke.logic.commands.Command;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"tlyi"},"content":"import seedu.duke.logic.commands.CommandMessages;","lastModifiedDate":"2021-10-28"},{"lineNumber":6,"author":{"gitId":"tlyi"},"content":"import seedu.duke.logic.commands.InvalidCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"tlyi"},"content":"import seedu.duke.logic.commands.ProfileCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"tlyi"},"content":"import seedu.duke.logic.commands.ProfileUpdateCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"tlyi"},"content":"import seedu.duke.logic.parser.exceptions.ExtraParamException;","lastModifiedDate":"2021-11-03"},{"lineNumber":10,"author":{"gitId":"tlyi"},"content":"import seedu.duke.logic.parser.exceptions.InvalidParamException;","lastModifiedDate":"2021-11-03"},{"lineNumber":11,"author":{"gitId":"tlyi"},"content":"import seedu.duke.logic.parser.exceptions.MissingParamException;","lastModifiedDate":"2021-11-03"},{"lineNumber":12,"author":{"gitId":"tlyi"},"content":"import seedu.duke.logic.parser.exceptions.ParserException;","lastModifiedDate":"2021-11-03"},{"lineNumber":13,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"tlyi"},"content":"/**","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"tlyi"},"content":" * Parses input arguments for Update Profile command.","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"tlyi"},"content":" */","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"tlyi"},"content":"public class UpdateProfileParser implements Parser {","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"tlyi"},"content":"    @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"tlyi"},"content":"    public Command parse(String params) {","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"tlyi"},"content":"        if (params.trim().isEmpty()) { //no additional parameters, assumed to be view profile command","lastModifiedDate":"2021-11-04"},{"lineNumber":21,"author":{"gitId":"tlyi"},"content":"            return new ProfileCommand();","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"tlyi"},"content":"        if (ParserUtils.hasExtraDelimiters(","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"tlyi"},"content":"                params, ProfileUpdateCommand.EXPECTED_PREFIXES)) {","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"tlyi"},"content":"            return new InvalidCommand(ParserMessages.MESSAGE_ERROR_TOO_MANY_DELIMITERS);","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"tlyi"},"content":"        if (ParserUtils.getNumberOfCorrectParamsDetected(params, ProfileUpdateCommand.EXPECTED_PREFIXES) \u003d\u003d 0) {","lastModifiedDate":"2021-11-07"},{"lineNumber":28,"author":{"gitId":"tlyi"},"content":"            return new InvalidCommand(CommandMessages.MESSAGE_PROFILE_COMMAND_INVALID_FORMAT);","lastModifiedDate":"2021-11-07"},{"lineNumber":29,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-11-07"},{"lineNumber":30,"author":{"gitId":"tlyi"},"content":"        try {","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"tlyi"},"content":"            final String name \u003d ParserUtils.extractName(params);","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"tlyi"},"content":"            final Double height \u003d ParserUtils.extractHeight(params);","lastModifiedDate":"2021-10-30"},{"lineNumber":33,"author":{"gitId":"tlyi"},"content":"            final Double weight \u003d ParserUtils.extractWeight(params);","lastModifiedDate":"2021-10-30"},{"lineNumber":34,"author":{"gitId":"tlyi"},"content":"            final Integer calorieGoal \u003d extractCalorieGoal(params);","lastModifiedDate":"2021-11-03"},{"lineNumber":35,"author":{"gitId":"tlyi"},"content":"            final Integer age \u003d extractAge(params);","lastModifiedDate":"2021-11-03"},{"lineNumber":36,"author":{"gitId":"tlyi"},"content":"            final Integer activityFactor \u003d extractActivityFactor(params);","lastModifiedDate":"2021-11-03"},{"lineNumber":37,"author":{"gitId":"tlyi"},"content":"            final Character gender \u003d extractGender(params);","lastModifiedDate":"2021-11-03"},{"lineNumber":38,"author":{"gitId":"tlyi"},"content":"            return new ProfileUpdateCommand(name, height, weight, calorieGoal, age, activityFactor, gender);","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"tlyi"},"content":"        } catch (ParserException e) {","lastModifiedDate":"2021-11-03"},{"lineNumber":40,"author":{"gitId":"tlyi"},"content":"            return new InvalidCommand(e.getMessage());","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":42,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":43,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":44,"author":{"gitId":"tlyi"},"content":"    protected static Integer extractCalorieGoal(String params) throws ParserException {","lastModifiedDate":"2021-11-03"},{"lineNumber":45,"author":{"gitId":"tlyi"},"content":"        try {","lastModifiedDate":"2021-11-03"},{"lineNumber":46,"author":{"gitId":"tlyi"},"content":"            return ParserUtils.extractGeneralInteger(params, Command.COMMAND_PREFIX_GOAL);","lastModifiedDate":"2021-11-03"},{"lineNumber":47,"author":{"gitId":"tlyi"},"content":"        } catch (InvalidParamException e) {","lastModifiedDate":"2021-11-03"},{"lineNumber":48,"author":{"gitId":"tlyi"},"content":"            throw new ParserException(ProfileUtils.ERROR_CALORIE_GOAL);","lastModifiedDate":"2021-11-04"},{"lineNumber":49,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-11-03"},{"lineNumber":50,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":51,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":52,"author":{"gitId":"tlyi"},"content":"    protected static Integer extractAge(String params) throws ParserException {","lastModifiedDate":"2021-11-03"},{"lineNumber":53,"author":{"gitId":"tlyi"},"content":"        try {","lastModifiedDate":"2021-11-03"},{"lineNumber":54,"author":{"gitId":"tlyi"},"content":"            return ParserUtils.extractGeneralInteger(params, Command.COMMAND_PREFIX_AGE);","lastModifiedDate":"2021-11-03"},{"lineNumber":55,"author":{"gitId":"tlyi"},"content":"        } catch (InvalidParamException e) {","lastModifiedDate":"2021-11-03"},{"lineNumber":56,"author":{"gitId":"tlyi"},"content":"            throw new ParserException(ProfileUtils.ERROR_AGE);","lastModifiedDate":"2021-11-04"},{"lineNumber":57,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-11-03"},{"lineNumber":58,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":59,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":60,"author":{"gitId":"tlyi"},"content":"    protected static Integer extractActivityFactor(String params) throws ParserException {","lastModifiedDate":"2021-11-03"},{"lineNumber":61,"author":{"gitId":"tlyi"},"content":"        try {","lastModifiedDate":"2021-11-03"},{"lineNumber":62,"author":{"gitId":"tlyi"},"content":"            return ParserUtils.extractGeneralInteger(params, Command.COMMAND_PREFIX_ACTIVITY_FACTOR);","lastModifiedDate":"2021-11-03"},{"lineNumber":63,"author":{"gitId":"tlyi"},"content":"        } catch (InvalidParamException e) {","lastModifiedDate":"2021-11-03"},{"lineNumber":64,"author":{"gitId":"tlyi"},"content":"            throw new ParserException(ProfileUtils.ERROR_ACTIVITY_FACTOR);","lastModifiedDate":"2021-11-04"},{"lineNumber":65,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-11-03"},{"lineNumber":66,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":67,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":68,"author":{"gitId":"tlyi"},"content":"    protected static Character extractGender(String params) throws ParserException {","lastModifiedDate":"2021-11-03"},{"lineNumber":69,"author":{"gitId":"tlyi"},"content":"        try {","lastModifiedDate":"2021-11-03"},{"lineNumber":70,"author":{"gitId":"tlyi"},"content":"            String stringAfterPrefix \u003d ParserUtils.extractRelevantParameterWithoutWhitespace(","lastModifiedDate":"2021-11-03"},{"lineNumber":71,"author":{"gitId":"tlyi"},"content":"                    params, Command.COMMAND_PREFIX_GENDER);","lastModifiedDate":"2021-11-03"},{"lineNumber":72,"author":{"gitId":"tlyi"},"content":"            if (stringAfterPrefix.length() \u003e 1) {","lastModifiedDate":"2021-11-03"},{"lineNumber":73,"author":{"gitId":"tlyi"},"content":"                throw new ParserException(ProfileUtils.ERROR_GENDER);","lastModifiedDate":"2021-11-04"},{"lineNumber":74,"author":{"gitId":"tlyi"},"content":"            }","lastModifiedDate":"2021-11-03"},{"lineNumber":75,"author":{"gitId":"tlyi"},"content":"            return stringAfterPrefix.charAt(0);","lastModifiedDate":"2021-11-03"},{"lineNumber":76,"author":{"gitId":"tlyi"},"content":"        } catch (MissingParamException e) {","lastModifiedDate":"2021-11-03"},{"lineNumber":77,"author":{"gitId":"tlyi"},"content":"            return Command.NULL_CHAR;","lastModifiedDate":"2021-11-03"},{"lineNumber":78,"author":{"gitId":"tlyi"},"content":"        } catch (ExtraParamException e) {","lastModifiedDate":"2021-11-03"},{"lineNumber":79,"author":{"gitId":"tlyi"},"content":"            throw new ParserException(e.getMessage());","lastModifiedDate":"2021-11-03"},{"lineNumber":80,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-11-03"},{"lineNumber":81,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":82,"author":{"gitId":"tlyi"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"tlyi":82}},{"path":"src/main/java/seedu/duke/logic/parser/ViewCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.logic.parser;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"tlyi"},"content":"import seedu.duke.logic.commands.Command;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"tlyi"},"content":"import seedu.duke.logic.commands.CommandMessages;","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"tlyi"},"content":"import seedu.duke.logic.commands.InvalidCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"tlyi"},"content":"import seedu.duke.logic.commands.ViewExerciseBankCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"tlyi"},"content":"import seedu.duke.logic.commands.ViewExerciseListCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"tlyi"},"content":"import seedu.duke.logic.commands.ViewFoodBankCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"tlyi"},"content":"import seedu.duke.logic.commands.ViewFoodListCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"tlyi"},"content":"import seedu.duke.logic.commands.ViewFutureExerciseListCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"tlyi"},"content":"import seedu.duke.logic.parser.exceptions.ItemNotSpecifiedException;","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"tlyi"},"content":"/**","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"tlyi"},"content":" * Parses input arguments for View commands.","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"tlyi"},"content":" */","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"tlyi"},"content":"public class ViewCommandParser implements Parser {","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"tlyi"},"content":"    @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"tlyi"},"content":"    public Command parse(String params) {","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"tlyi"},"content":"        try {","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"tlyi"},"content":"            switch (params.trim()) {","lastModifiedDate":"2021-11-03"},{"lineNumber":22,"author":{"gitId":"tlyi"},"content":"            case Command.COMMAND_PREFIX_EXERCISE + Command.COMMAND_PREFIX_DELIMITER:","lastModifiedDate":"2021-10-30"},{"lineNumber":23,"author":{"gitId":"tlyi"},"content":"                return new ViewExerciseListCommand();","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"tlyi"},"content":"            case Command.COMMAND_PREFIX_FOOD + Command.COMMAND_PREFIX_DELIMITER:","lastModifiedDate":"2021-10-30"},{"lineNumber":25,"author":{"gitId":"tlyi"},"content":"                return new ViewFoodListCommand();","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"tlyi"},"content":"            case Command.COMMAND_PREFIX_UPCOMING_EXERCISE + Command.COMMAND_PREFIX_DELIMITER:","lastModifiedDate":"2021-10-30"},{"lineNumber":27,"author":{"gitId":"tlyi"},"content":"                return new ViewFutureExerciseListCommand();","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"tlyi"},"content":"            case Command.COMMAND_PREFIX_EXERCISE_BANK + Command.COMMAND_PREFIX_DELIMITER:","lastModifiedDate":"2021-10-30"},{"lineNumber":29,"author":{"gitId":"tlyi"},"content":"                return new ViewExerciseBankCommand();","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"tlyi"},"content":"            case Command.COMMAND_PREFIX_FOOD_BANK + Command.COMMAND_PREFIX_DELIMITER:","lastModifiedDate":"2021-10-30"},{"lineNumber":31,"author":{"gitId":"tlyi"},"content":"                return new ViewFoodBankCommand();","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"tlyi"},"content":"            default:","lastModifiedDate":"2021-10-27"},{"lineNumber":33,"author":{"gitId":"tlyi"},"content":"                throw new ItemNotSpecifiedException();","lastModifiedDate":"2021-10-27"},{"lineNumber":34,"author":{"gitId":"tlyi"},"content":"            }","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"tlyi"},"content":"        } catch (ItemNotSpecifiedException e) {","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"tlyi"},"content":"            return new InvalidCommand(CommandMessages.MESSAGE_VIEW_COMMAND_INVALID_FORMAT);","lastModifiedDate":"2021-10-27"},{"lineNumber":37,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"tlyi"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"tlyi":39}},{"path":"src/main/java/seedu/duke/logic/parser/exceptions/ExtraParamException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.logic.parser.exceptions;","lastModifiedDate":"2021-11-03"},{"lineNumber":2,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":3,"author":{"gitId":"tlyi"},"content":"/**","lastModifiedDate":"2021-11-03"},{"lineNumber":4,"author":{"gitId":"tlyi"},"content":" * Represents an error where there are extra parameters specified for the command.","lastModifiedDate":"2021-11-03"},{"lineNumber":5,"author":{"gitId":"tlyi"},"content":" */","lastModifiedDate":"2021-11-03"},{"lineNumber":6,"author":{"gitId":"tlyi"},"content":"public class ExtraParamException extends Exception {","lastModifiedDate":"2021-11-03"},{"lineNumber":7,"author":{"gitId":"tlyi"},"content":"    private static final String ERROR_MESSAGE \u003d  \"Error! There were unnecessary parameters detected. \"","lastModifiedDate":"2021-11-08"},{"lineNumber":8,"author":{"gitId":"tlyi"},"content":"            + \"Please follow the command format and try again!\";","lastModifiedDate":"2021-11-08"},{"lineNumber":9,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":10,"author":{"gitId":"tlyi"},"content":"    /**","lastModifiedDate":"2021-11-03"},{"lineNumber":11,"author":{"gitId":"tlyi"},"content":"     * General constructor that constructs an exception with a standard error message for extra parameters.","lastModifiedDate":"2021-11-08"},{"lineNumber":12,"author":{"gitId":"tlyi"},"content":"     */","lastModifiedDate":"2021-11-03"},{"lineNumber":13,"author":{"gitId":"tlyi"},"content":"    public ExtraParamException() {","lastModifiedDate":"2021-11-03"},{"lineNumber":14,"author":{"gitId":"tlyi"},"content":"        super(ERROR_MESSAGE);","lastModifiedDate":"2021-11-08"},{"lineNumber":15,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":16,"author":{"gitId":"tlyi"},"content":"}","lastModifiedDate":"2021-11-03"}],"authorContributionMap":{"tlyi":16}},{"path":"src/main/java/seedu/duke/logic/parser/exceptions/InvalidParamException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.logic.parser.exceptions;","lastModifiedDate":"2021-11-03"},{"lineNumber":2,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":3,"author":{"gitId":"tlyi"},"content":"/**","lastModifiedDate":"2021-11-03"},{"lineNumber":4,"author":{"gitId":"tlyi"},"content":" * Represents an error where the parameter specified is invalid for the command.","lastModifiedDate":"2021-11-03"},{"lineNumber":5,"author":{"gitId":"tlyi"},"content":" */","lastModifiedDate":"2021-11-03"},{"lineNumber":6,"author":{"gitId":"tlyi"},"content":"public class InvalidParamException extends Exception {","lastModifiedDate":"2021-11-03"},{"lineNumber":7,"author":{"gitId":"tlyi"},"content":"    private static String errorMessage;","lastModifiedDate":"2021-11-03"},{"lineNumber":8,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":9,"author":{"gitId":"tlyi"},"content":"    /**","lastModifiedDate":"2021-11-03"},{"lineNumber":10,"author":{"gitId":"tlyi"},"content":"     * General constructor without error message.","lastModifiedDate":"2021-11-03"},{"lineNumber":11,"author":{"gitId":"tlyi"},"content":"     */","lastModifiedDate":"2021-11-03"},{"lineNumber":12,"author":{"gitId":"tlyi"},"content":"    public InvalidParamException() {","lastModifiedDate":"2021-11-03"},{"lineNumber":13,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":14,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":15,"author":{"gitId":"tlyi"},"content":"    public InvalidParamException(String errorMessage) {","lastModifiedDate":"2021-11-03"},{"lineNumber":16,"author":{"gitId":"tlyi"},"content":"        super(errorMessage);","lastModifiedDate":"2021-11-03"},{"lineNumber":17,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":18,"author":{"gitId":"tlyi"},"content":"}","lastModifiedDate":"2021-11-03"}],"authorContributionMap":{"tlyi":18}},{"path":"src/main/java/seedu/duke/logic/parser/exceptions/ItemNotSpecifiedException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.logic.parser.exceptions;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"tlyi"},"content":"/**","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"tlyi"},"content":" * Represents an error where the user did not specify which list to execute the command on. (food/exercise)","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"tlyi"},"content":" */","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"tlyi"},"content":"public class ItemNotSpecifiedException extends Exception {","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"tlyi"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"tlyi":7}},{"path":"src/main/java/seedu/duke/logic/parser/exceptions/MissingParamException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.logic.parser.exceptions;","lastModifiedDate":"2021-11-03"},{"lineNumber":2,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":3,"author":{"gitId":"tlyi"},"content":"/**","lastModifiedDate":"2021-11-03"},{"lineNumber":4,"author":{"gitId":"tlyi"},"content":" * Represents an error where a parameter required for the command is not specified.","lastModifiedDate":"2021-11-03"},{"lineNumber":5,"author":{"gitId":"tlyi"},"content":" */","lastModifiedDate":"2021-11-03"},{"lineNumber":6,"author":{"gitId":"tlyi"},"content":"public class MissingParamException extends Exception {","lastModifiedDate":"2021-11-03"},{"lineNumber":7,"author":{"gitId":"tlyi"},"content":"    private static String errorMessage;","lastModifiedDate":"2021-11-03"},{"lineNumber":8,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":9,"author":{"gitId":"tlyi"},"content":"    /**","lastModifiedDate":"2021-11-03"},{"lineNumber":10,"author":{"gitId":"tlyi"},"content":"     * General constructor without error message.","lastModifiedDate":"2021-11-03"},{"lineNumber":11,"author":{"gitId":"tlyi"},"content":"     */","lastModifiedDate":"2021-11-03"},{"lineNumber":12,"author":{"gitId":"tlyi"},"content":"    public MissingParamException() {","lastModifiedDate":"2021-11-03"},{"lineNumber":13,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":14,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":15,"author":{"gitId":"tlyi"},"content":"    /**","lastModifiedDate":"2021-11-03"},{"lineNumber":16,"author":{"gitId":"tlyi"},"content":"     * Constructor with specific error message.","lastModifiedDate":"2021-11-03"},{"lineNumber":17,"author":{"gitId":"tlyi"},"content":"     *","lastModifiedDate":"2021-11-07"},{"lineNumber":18,"author":{"gitId":"tlyi"},"content":"     * @param errorMessage Error message to be shown when exception is caught and printed","lastModifiedDate":"2021-11-03"},{"lineNumber":19,"author":{"gitId":"tlyi"},"content":"     */","lastModifiedDate":"2021-11-03"},{"lineNumber":20,"author":{"gitId":"tlyi"},"content":"    public MissingParamException(String errorMessage) {","lastModifiedDate":"2021-11-03"},{"lineNumber":21,"author":{"gitId":"tlyi"},"content":"        super(errorMessage);","lastModifiedDate":"2021-11-03"},{"lineNumber":22,"author":{"gitId":"tlyi"},"content":"        MissingParamException.errorMessage \u003d errorMessage;","lastModifiedDate":"2021-11-03"},{"lineNumber":23,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":24,"author":{"gitId":"tlyi"},"content":"}","lastModifiedDate":"2021-11-03"}],"authorContributionMap":{"tlyi":24}},{"path":"src/main/java/seedu/duke/logic/parser/exceptions/ParserException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.logic.parser.exceptions;","lastModifiedDate":"2021-11-03"},{"lineNumber":2,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":3,"author":{"gitId":"tlyi"},"content":"/**","lastModifiedDate":"2021-11-03"},{"lineNumber":4,"author":{"gitId":"tlyi"},"content":" * Represents a general parsing exception, to be thrown from ParserUtils to the Parser classes.","lastModifiedDate":"2021-11-03"},{"lineNumber":5,"author":{"gitId":"tlyi"},"content":" */","lastModifiedDate":"2021-11-03"},{"lineNumber":6,"author":{"gitId":"tlyi"},"content":"public class ParserException extends Exception {","lastModifiedDate":"2021-11-03"},{"lineNumber":7,"author":{"gitId":"tlyi"},"content":"    private static String errorMessage;","lastModifiedDate":"2021-11-03"},{"lineNumber":8,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":9,"author":{"gitId":"tlyi"},"content":"    /**","lastModifiedDate":"2021-11-03"},{"lineNumber":10,"author":{"gitId":"tlyi"},"content":"     * General constructor without error message.","lastModifiedDate":"2021-11-03"},{"lineNumber":11,"author":{"gitId":"tlyi"},"content":"     */","lastModifiedDate":"2021-11-03"},{"lineNumber":12,"author":{"gitId":"tlyi"},"content":"    public ParserException() {","lastModifiedDate":"2021-11-03"},{"lineNumber":13,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":14,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":15,"author":{"gitId":"tlyi"},"content":"    public ParserException(String errorMessage) {","lastModifiedDate":"2021-11-03"},{"lineNumber":16,"author":{"gitId":"tlyi"},"content":"        super(errorMessage);","lastModifiedDate":"2021-11-03"},{"lineNumber":17,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":18,"author":{"gitId":"tlyi"},"content":"}","lastModifiedDate":"2021-11-03"}],"authorContributionMap":{"tlyi":18}},{"path":"src/main/java/seedu/duke/state/ActivityFactorCreator.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.state;","lastModifiedDate":"2021-11-07"},{"lineNumber":2,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":3,"author":{"gitId":"tttyyzzz"},"content":"import seedu.duke.data.profile.attributes.ActivityFactor;","lastModifiedDate":"2021-10-31"},{"lineNumber":4,"author":{"gitId":"tttyyzzz"},"content":"import seedu.duke.data.profile.utilities.ProfileUtils;","lastModifiedDate":"2021-10-31"},{"lineNumber":5,"author":{"gitId":"tlyi"},"content":"import seedu.duke.logic.parser.exceptions.MissingParamException;","lastModifiedDate":"2021-11-03"},{"lineNumber":6,"author":{"gitId":"tttyyzzz"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2021-10-31"},{"lineNumber":7,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":8,"author":{"gitId":"tttyyzzz"},"content":"/**","lastModifiedDate":"2021-11-01"},{"lineNumber":9,"author":{"gitId":"tttyyzzz"},"content":" * Creates a ActivityFactor Class and prompts user for valid activity factor input.","lastModifiedDate":"2021-11-01"},{"lineNumber":10,"author":{"gitId":"tttyyzzz"},"content":" */","lastModifiedDate":"2021-11-01"},{"lineNumber":11,"author":{"gitId":"tttyyzzz"},"content":"public class ActivityFactorCreator extends AttributeCreator {","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":13,"author":{"gitId":"tttyyzzz"},"content":"    private ActivityFactor activityFactor \u003d new ActivityFactor();","lastModifiedDate":"2021-10-31"},{"lineNumber":14,"author":{"gitId":"tttyyzzz"},"content":"    private static final String LS \u003d System.lineSeparator();","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"tttyyzzz"},"content":"    private static final String MESSAGE_ACTIVITY_FACTOR \u003d \"Your activity factor is %s.\";","lastModifiedDate":"2021-10-31"},{"lineNumber":16,"author":{"gitId":"tttyyzzz"},"content":"    public static final String MESSAGE_INVALID_POSITIVE_INT_INPUT \u003d \"Invalid input, \"","lastModifiedDate":"2021-10-31"},{"lineNumber":17,"author":{"gitId":"tttyyzzz"},"content":"            + \"please input a valid positive whole number\";","lastModifiedDate":"2021-10-31"},{"lineNumber":18,"author":{"gitId":"tttyyzzz"},"content":"    private static final String MESSAGE_INTRO_ACTIVITY_FACTOR \u003d \"In terms of activity level, how active are you?\" + LS","lastModifiedDate":"2021-11-04"},{"lineNumber":19,"author":{"gitId":"tlyi"},"content":"            + \"Based on the rubrics below, please key in 1 to 5 based on how active you are.\" + LS","lastModifiedDate":"2021-11-07"},{"lineNumber":20,"author":{"gitId":"tttyyzzz"},"content":"            + \"1 -\u003e Sedentary - Little or no exercise\" + LS","lastModifiedDate":"2021-11-04"},{"lineNumber":21,"author":{"gitId":"tttyyzzz"},"content":"            + \"2 -\u003e Lightly Active - Light exercise or sports, around 1-3 days a week\" + LS","lastModifiedDate":"2021-11-04"},{"lineNumber":22,"author":{"gitId":"tttyyzzz"},"content":"            + \"3 -\u003e Moderately Active - Regular exercise or sports, around 3-5 days a week\" + LS","lastModifiedDate":"2021-11-04"},{"lineNumber":23,"author":{"gitId":"tttyyzzz"},"content":"            + \"4 -\u003e Very Active - Frequent exercise or sports, around 6-7 days a week\" + LS","lastModifiedDate":"2021-11-04"},{"lineNumber":24,"author":{"gitId":"tttyyzzz"},"content":"            + \"5 -\u003e If you are extra active - Sports or exercising is your passion and a physical jobscope.\";","lastModifiedDate":"2021-10-31"},{"lineNumber":25,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":26,"author":{"gitId":"tttyyzzz"},"content":"    public ActivityFactorCreator(Ui ui) {","lastModifiedDate":"2021-11-04"},{"lineNumber":27,"author":{"gitId":"tttyyzzz"},"content":"        super(ui);","lastModifiedDate":"2021-11-03"},{"lineNumber":28,"author":{"gitId":"tttyyzzz"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":29,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":30,"author":{"gitId":"tttyyzzz"},"content":"    /**","lastModifiedDate":"2021-10-31"},{"lineNumber":31,"author":{"gitId":"tttyyzzz"},"content":"     * Creates a valid profile activity factor for the profile instance.","lastModifiedDate":"2021-10-31"},{"lineNumber":32,"author":{"gitId":"tttyyzzz"},"content":"     *","lastModifiedDate":"2021-10-31"},{"lineNumber":33,"author":{"gitId":"tlyi"},"content":"     * @throws MissingParamException if user input a string of 0 characters.","lastModifiedDate":"2021-11-03"},{"lineNumber":34,"author":{"gitId":"tttyyzzz"},"content":"     */","lastModifiedDate":"2021-10-31"},{"lineNumber":35,"author":{"gitId":"tlyi"},"content":"    public ActivityFactor createActivityFactor() throws MissingParamException {","lastModifiedDate":"2021-11-03"},{"lineNumber":36,"author":{"gitId":"tttyyzzz"},"content":"        while (!activityFactor.isValid()) {","lastModifiedDate":"2021-10-31"},{"lineNumber":37,"author":{"gitId":"tttyyzzz"},"content":"            ui.formatMessageWithBottomDivider(MESSAGE_INTRO_ACTIVITY_FACTOR);","lastModifiedDate":"2021-10-31"},{"lineNumber":38,"author":{"gitId":"tttyyzzz"},"content":"            try {","lastModifiedDate":"2021-10-31"},{"lineNumber":39,"author":{"gitId":"tttyyzzz"},"content":"                String userInput \u003d ui.getUserInput().trim();","lastModifiedDate":"2021-11-03"},{"lineNumber":40,"author":{"gitId":"tttyyzzz"},"content":"                setActivityFactor(userInput);","lastModifiedDate":"2021-11-07"},{"lineNumber":41,"author":{"gitId":"tttyyzzz"},"content":"                checkActivityFactor();","lastModifiedDate":"2021-11-07"},{"lineNumber":42,"author":{"gitId":"tttyyzzz"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2021-11-07"},{"lineNumber":43,"author":{"gitId":"tttyyzzz"},"content":"                ui.formatMessageWithTopDivider(MESSAGE_INVALID_POSITIVE_INT_INPUT);","lastModifiedDate":"2021-11-07"},{"lineNumber":44,"author":{"gitId":"tttyyzzz"},"content":"            }","lastModifiedDate":"2021-11-07"},{"lineNumber":45,"author":{"gitId":"tttyyzzz"},"content":"        }","lastModifiedDate":"2021-11-07"},{"lineNumber":46,"author":{"gitId":"tttyyzzz"},"content":"        return activityFactor;","lastModifiedDate":"2021-11-07"},{"lineNumber":47,"author":{"gitId":"tttyyzzz"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":48,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":49,"author":{"gitId":"tttyyzzz"},"content":"    private void checkActivityFactor() {","lastModifiedDate":"2021-11-07"},{"lineNumber":50,"author":{"gitId":"tttyyzzz"},"content":"        if (activityFactor.isValid()) {","lastModifiedDate":"2021-10-31"},{"lineNumber":51,"author":{"gitId":"tttyyzzz"},"content":"            ui.formatMessageWithTopDivider(","lastModifiedDate":"2021-10-31"},{"lineNumber":52,"author":{"gitId":"tttyyzzz"},"content":"                    String.format(MESSAGE_ACTIVITY_FACTOR,","lastModifiedDate":"2021-10-31"},{"lineNumber":53,"author":{"gitId":"tttyyzzz"},"content":"                            activityFactor.getUserInput()));","lastModifiedDate":"2021-10-31"},{"lineNumber":54,"author":{"gitId":"tttyyzzz"},"content":"        } else {","lastModifiedDate":"2021-10-31"},{"lineNumber":55,"author":{"gitId":"tttyyzzz"},"content":"            ui.formatMessageFramedWithDivider(ProfileUtils.ERROR_ACTIVITY_FACTOR);","lastModifiedDate":"2021-10-31"},{"lineNumber":56,"author":{"gitId":"tttyyzzz"},"content":"        }","lastModifiedDate":"2021-10-31"},{"lineNumber":57,"author":{"gitId":"tttyyzzz"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":58,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":59,"author":{"gitId":"tttyyzzz"},"content":"    private void setActivityFactor(String userInput) throws MissingParamException {","lastModifiedDate":"2021-11-07"},{"lineNumber":60,"author":{"gitId":"tttyyzzz"},"content":"        ui.checkEmptyUserInput(userInput);","lastModifiedDate":"2021-11-07"},{"lineNumber":61,"author":{"gitId":"tttyyzzz"},"content":"        confirmInputBye(userInput);","lastModifiedDate":"2021-11-07"},{"lineNumber":62,"author":{"gitId":"tttyyzzz"},"content":"        int activityFactorInput \u003d Integer.parseInt(userInput);","lastModifiedDate":"2021-11-07"},{"lineNumber":63,"author":{"gitId":"tttyyzzz"},"content":"        activityFactor.setUserInput(activityFactorInput);","lastModifiedDate":"2021-11-07"},{"lineNumber":64,"author":{"gitId":"tttyyzzz"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":65,"author":{"gitId":"tttyyzzz"},"content":"}","lastModifiedDate":"2021-10-31"}],"authorContributionMap":{"tttyyzzz":60,"tlyi":5}},{"path":"src/main/java/seedu/duke/state/AgeCreator.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.state;","lastModifiedDate":"2021-11-07"},{"lineNumber":2,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":3,"author":{"gitId":"tttyyzzz"},"content":"import seedu.duke.data.profile.attributes.Age;","lastModifiedDate":"2021-10-31"},{"lineNumber":4,"author":{"gitId":"tttyyzzz"},"content":"import seedu.duke.data.profile.utilities.ProfileUtils;","lastModifiedDate":"2021-10-31"},{"lineNumber":5,"author":{"gitId":"tlyi"},"content":"import seedu.duke.logic.parser.exceptions.MissingParamException;","lastModifiedDate":"2021-11-03"},{"lineNumber":6,"author":{"gitId":"tttyyzzz"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2021-10-31"},{"lineNumber":7,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":8,"author":{"gitId":"tttyyzzz"},"content":"/**","lastModifiedDate":"2021-11-01"},{"lineNumber":9,"author":{"gitId":"tttyyzzz"},"content":" * Creates an Age Class and prompts user for valid age input.","lastModifiedDate":"2021-11-01"},{"lineNumber":10,"author":{"gitId":"tttyyzzz"},"content":" */","lastModifiedDate":"2021-11-01"},{"lineNumber":11,"author":{"gitId":"tttyyzzz"},"content":"public class AgeCreator extends AttributeCreator {","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":13,"author":{"gitId":"tttyyzzz"},"content":"    private Age age \u003d new Age();","lastModifiedDate":"2021-10-31"},{"lineNumber":14,"author":{"gitId":"tttyyzzz"},"content":"    private static final String MESSAGE_INTRO_AGE \u003d \"How old are you?\";","lastModifiedDate":"2021-10-31"},{"lineNumber":15,"author":{"gitId":"tttyyzzz"},"content":"    private static final String MESSAGE_AGE \u003d \"You are %s years old.\";","lastModifiedDate":"2021-10-31"},{"lineNumber":16,"author":{"gitId":"tttyyzzz"},"content":"    private static final String MESSAGE_INVALID_POSITIVE_INT_INPUT \u003d \"Invalid input, \"","lastModifiedDate":"2021-10-31"},{"lineNumber":17,"author":{"gitId":"tttyyzzz"},"content":"            + \"please input a valid positive whole number\";","lastModifiedDate":"2021-10-31"},{"lineNumber":18,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":19,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":20,"author":{"gitId":"tttyyzzz"},"content":"    public AgeCreator(Ui ui) {","lastModifiedDate":"2021-11-04"},{"lineNumber":21,"author":{"gitId":"tttyyzzz"},"content":"        super(ui);","lastModifiedDate":"2021-11-03"},{"lineNumber":22,"author":{"gitId":"tttyyzzz"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":23,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":24,"author":{"gitId":"tttyyzzz"},"content":"    /**","lastModifiedDate":"2021-10-31"},{"lineNumber":25,"author":{"gitId":"tttyyzzz"},"content":"     * Creates a valid profile age for the profile instance.","lastModifiedDate":"2021-10-31"},{"lineNumber":26,"author":{"gitId":"tttyyzzz"},"content":"     *","lastModifiedDate":"2021-10-31"},{"lineNumber":27,"author":{"gitId":"tlyi"},"content":"     * @throws MissingParamException if user input a string of 0 characters.","lastModifiedDate":"2021-11-03"},{"lineNumber":28,"author":{"gitId":"tttyyzzz"},"content":"     */","lastModifiedDate":"2021-10-31"},{"lineNumber":29,"author":{"gitId":"tlyi"},"content":"    public Age createNewAge() throws MissingParamException {","lastModifiedDate":"2021-11-03"},{"lineNumber":30,"author":{"gitId":"tttyyzzz"},"content":"        while (!age.isValid()) {","lastModifiedDate":"2021-10-31"},{"lineNumber":31,"author":{"gitId":"tttyyzzz"},"content":"            ui.formatMessageWithBottomDivider(MESSAGE_INTRO_AGE);","lastModifiedDate":"2021-10-31"},{"lineNumber":32,"author":{"gitId":"tttyyzzz"},"content":"            try {","lastModifiedDate":"2021-10-31"},{"lineNumber":33,"author":{"gitId":"tlyi"},"content":"                String userInput \u003d ui.getUserInput().trim();","lastModifiedDate":"2021-11-04"},{"lineNumber":34,"author":{"gitId":"tttyyzzz"},"content":"                setAge(userInput);","lastModifiedDate":"2021-11-07"},{"lineNumber":35,"author":{"gitId":"tttyyzzz"},"content":"                checkAge();","lastModifiedDate":"2021-11-07"},{"lineNumber":36,"author":{"gitId":"tttyyzzz"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2021-11-07"},{"lineNumber":37,"author":{"gitId":"tttyyzzz"},"content":"                ui.formatMessageWithTopDivider(MESSAGE_INVALID_POSITIVE_INT_INPUT);","lastModifiedDate":"2021-11-07"},{"lineNumber":38,"author":{"gitId":"tttyyzzz"},"content":"            }","lastModifiedDate":"2021-11-07"},{"lineNumber":39,"author":{"gitId":"tttyyzzz"},"content":"        }","lastModifiedDate":"2021-11-07"},{"lineNumber":40,"author":{"gitId":"tttyyzzz"},"content":"        return age;","lastModifiedDate":"2021-11-07"},{"lineNumber":41,"author":{"gitId":"tttyyzzz"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":42,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":43,"author":{"gitId":"tttyyzzz"},"content":"    private void checkAge() {","lastModifiedDate":"2021-11-07"},{"lineNumber":44,"author":{"gitId":"tttyyzzz"},"content":"        if (age.isValid()) {","lastModifiedDate":"2021-10-31"},{"lineNumber":45,"author":{"gitId":"tttyyzzz"},"content":"            ui.formatMessageWithTopDivider(","lastModifiedDate":"2021-10-31"},{"lineNumber":46,"author":{"gitId":"tttyyzzz"},"content":"                    String.format(MESSAGE_AGE,","lastModifiedDate":"2021-10-31"},{"lineNumber":47,"author":{"gitId":"tttyyzzz"},"content":"                            age.getAge()));","lastModifiedDate":"2021-10-31"},{"lineNumber":48,"author":{"gitId":"tttyyzzz"},"content":"        } else {","lastModifiedDate":"2021-10-31"},{"lineNumber":49,"author":{"gitId":"tttyyzzz"},"content":"            ui.formatMessageFramedWithDivider(ProfileUtils.ERROR_AGE);","lastModifiedDate":"2021-10-31"},{"lineNumber":50,"author":{"gitId":"tttyyzzz"},"content":"        }","lastModifiedDate":"2021-10-31"},{"lineNumber":51,"author":{"gitId":"tttyyzzz"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":52,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":53,"author":{"gitId":"tttyyzzz"},"content":"    private void setAge(String userInput) throws MissingParamException {","lastModifiedDate":"2021-11-07"},{"lineNumber":54,"author":{"gitId":"tttyyzzz"},"content":"        ui.checkEmptyUserInput(userInput);","lastModifiedDate":"2021-11-07"},{"lineNumber":55,"author":{"gitId":"tttyyzzz"},"content":"        confirmInputBye(userInput);","lastModifiedDate":"2021-11-07"},{"lineNumber":56,"author":{"gitId":"tttyyzzz"},"content":"        int ageInput \u003d Integer.parseInt(userInput);","lastModifiedDate":"2021-11-07"},{"lineNumber":57,"author":{"gitId":"tttyyzzz"},"content":"        age.setAge(ageInput);","lastModifiedDate":"2021-11-07"},{"lineNumber":58,"author":{"gitId":"tttyyzzz"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":59,"author":{"gitId":"tttyyzzz"},"content":"}","lastModifiedDate":"2021-10-31"}],"authorContributionMap":{"tttyyzzz":54,"tlyi":5}},{"path":"src/main/java/seedu/duke/state/AttributeCreator.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.state;","lastModifiedDate":"2021-11-07"},{"lineNumber":2,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":3,"author":{"gitId":"tttyyzzz"},"content":"import seedu.duke.logic.Statistics;","lastModifiedDate":"2021-11-08"},{"lineNumber":4,"author":{"gitId":"tttyyzzz"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2021-11-03"},{"lineNumber":5,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":6,"author":{"gitId":"tttyyzzz"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-11-08"},{"lineNumber":7,"author":{"gitId":"tttyyzzz"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-11-08"},{"lineNumber":8,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":9,"author":{"gitId":"tttyyzzz"},"content":"public class AttributeCreator {","lastModifiedDate":"2021-11-03"},{"lineNumber":10,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":11,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":12,"author":{"gitId":"tttyyzzz"},"content":"    public static final int STATUS \u003d 0;","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"tttyyzzz"},"content":"    protected Ui ui;","lastModifiedDate":"2021-11-03"},{"lineNumber":14,"author":{"gitId":"tttyyzzz"},"content":"    protected static Logger logger \u003d Logger.getLogger(AttributeCreator.class.getName());","lastModifiedDate":"2021-11-08"},{"lineNumber":15,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":16,"author":{"gitId":"tttyyzzz"},"content":"    AttributeCreator(Ui ui) {","lastModifiedDate":"2021-11-03"},{"lineNumber":17,"author":{"gitId":"tttyyzzz"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2021-11-03"},{"lineNumber":18,"author":{"gitId":"tttyyzzz"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":19,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":20,"author":{"gitId":"tttyyzzz"},"content":"    // Followed the format of Bye command to standardise bye message.","lastModifiedDate":"2021-11-03"},{"lineNumber":21,"author":{"gitId":"tttyyzzz"},"content":"    private static final String MESSAGE_SUCCESS \u003d \"Exiting Fitbot....\" + Ui.LS","lastModifiedDate":"2021-11-03"},{"lineNumber":22,"author":{"gitId":"tttyyzzz"},"content":"            + \"Bye! Hope to see you again soon!!\";","lastModifiedDate":"2021-11-03"},{"lineNumber":23,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":24,"author":{"gitId":"tttyyzzz"},"content":"    protected boolean isBye(String userInput) {","lastModifiedDate":"2021-11-03"},{"lineNumber":25,"author":{"gitId":"tttyyzzz"},"content":"        logger.log(Level.FINE, String.valueOf(userInput.toLowerCase().equals(\"bye\")));","lastModifiedDate":"2021-11-08"},{"lineNumber":26,"author":{"gitId":"tttyyzzz"},"content":"        return userInput.toLowerCase().equals(\"bye\");","lastModifiedDate":"2021-11-03"},{"lineNumber":27,"author":{"gitId":"tttyyzzz"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":28,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":29,"author":{"gitId":"tttyyzzz"},"content":"    protected void exit() {","lastModifiedDate":"2021-11-03"},{"lineNumber":30,"author":{"gitId":"tttyyzzz"},"content":"        logger.log(Level.FINE, \"exiting....\");","lastModifiedDate":"2021-11-08"},{"lineNumber":31,"author":{"gitId":"tttyyzzz"},"content":"        ui.formatMessageFramedWithDivider(MESSAGE_SUCCESS);","lastModifiedDate":"2021-11-03"},{"lineNumber":32,"author":{"gitId":"tttyyzzz"},"content":"        System.exit(STATUS);","lastModifiedDate":"2021-11-04"},{"lineNumber":33,"author":{"gitId":"tttyyzzz"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":34,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":35,"author":{"gitId":"tttyyzzz"},"content":"    protected void confirmInputBye(String userInput) {","lastModifiedDate":"2021-11-03"},{"lineNumber":36,"author":{"gitId":"tttyyzzz"},"content":"        if (isBye(userInput.trim())) {","lastModifiedDate":"2021-11-03"},{"lineNumber":37,"author":{"gitId":"tttyyzzz"},"content":"            exit();","lastModifiedDate":"2021-11-03"},{"lineNumber":38,"author":{"gitId":"tttyyzzz"},"content":"        }","lastModifiedDate":"2021-11-03"},{"lineNumber":39,"author":{"gitId":"tttyyzzz"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":40,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":41,"author":{"gitId":"tttyyzzz"},"content":"}","lastModifiedDate":"2021-11-03"}],"authorContributionMap":{"tttyyzzz":40,"tlyi":1}},{"path":"src/main/java/seedu/duke/state/CalorieGoalCreator.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.state;","lastModifiedDate":"2021-11-07"},{"lineNumber":2,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":3,"author":{"gitId":"tttyyzzz"},"content":"import seedu.duke.data.profile.attributes.CalorieGoal;","lastModifiedDate":"2021-10-31"},{"lineNumber":4,"author":{"gitId":"tttyyzzz"},"content":"import seedu.duke.data.profile.utilities.ProfileUtils;","lastModifiedDate":"2021-10-31"},{"lineNumber":5,"author":{"gitId":"tlyi"},"content":"import seedu.duke.logic.parser.exceptions.MissingParamException;","lastModifiedDate":"2021-11-03"},{"lineNumber":6,"author":{"gitId":"tttyyzzz"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2021-10-31"},{"lineNumber":7,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":8,"author":{"gitId":"tttyyzzz"},"content":"//@@author tttyyzzz","lastModifiedDate":"2021-11-02"},{"lineNumber":9,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":10,"author":{"gitId":"tttyyzzz"},"content":"/**","lastModifiedDate":"2021-11-01"},{"lineNumber":11,"author":{"gitId":"tttyyzzz"},"content":" * Creates a CalorieGoal Class and prompts user for valid calorie goal input.","lastModifiedDate":"2021-11-01"},{"lineNumber":12,"author":{"gitId":"tttyyzzz"},"content":" */","lastModifiedDate":"2021-11-01"},{"lineNumber":13,"author":{"gitId":"tttyyzzz"},"content":"public class CalorieGoalCreator extends AttributeCreator {","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":15,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":16,"author":{"gitId":"tttyyzzz"},"content":"    private CalorieGoal calorieGoal;","lastModifiedDate":"2021-10-31"},{"lineNumber":17,"author":{"gitId":"tttyyzzz"},"content":"    private static final String MESSAGE_CALORIE_GOAL \u003d \"You calorie goal is %s cal.\";","lastModifiedDate":"2021-10-31"},{"lineNumber":18,"author":{"gitId":"tttyyzzz"},"content":"    private static final String MESSAGE_INTRO_CALORIE_GOAL \u003d \"Please input your net calorie goal.\";","lastModifiedDate":"2021-10-31"},{"lineNumber":19,"author":{"gitId":"tttyyzzz"},"content":"    private static final String MESSAGE_INVALID_POSITIVE_INT_INPUT \u003d \"Invalid input, \"","lastModifiedDate":"2021-10-31"},{"lineNumber":20,"author":{"gitId":"tttyyzzz"},"content":"            + \"please input a valid whole number from \"","lastModifiedDate":"2021-11-02"},{"lineNumber":21,"author":{"gitId":"tttyyzzz"},"content":"            + CalorieGoal.LIMIT_LOWER_CALORIES + \" to \"","lastModifiedDate":"2021-11-02"},{"lineNumber":22,"author":{"gitId":"tttyyzzz"},"content":"            + CalorieGoal.LIMIT_UPPER_CALORIES;","lastModifiedDate":"2021-11-02"},{"lineNumber":23,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":24,"author":{"gitId":"tttyyzzz"},"content":"    public CalorieGoalCreator(Ui ui) {","lastModifiedDate":"2021-11-04"},{"lineNumber":25,"author":{"gitId":"tttyyzzz"},"content":"        super(ui);","lastModifiedDate":"2021-11-03"},{"lineNumber":26,"author":{"gitId":"tttyyzzz"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":27,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":28,"author":{"gitId":"tttyyzzz"},"content":"    /**","lastModifiedDate":"2021-10-31"},{"lineNumber":29,"author":{"gitId":"tttyyzzz"},"content":"     * Creates a valid profile calorie goal for the profile instance.","lastModifiedDate":"2021-10-31"},{"lineNumber":30,"author":{"gitId":"tttyyzzz"},"content":"     *","lastModifiedDate":"2021-10-31"},{"lineNumber":31,"author":{"gitId":"tttyyzzz"},"content":"     * @throws MissingParamException if user input a string of 0 characters.","lastModifiedDate":"2021-11-03"},{"lineNumber":32,"author":{"gitId":"tttyyzzz"},"content":"     */","lastModifiedDate":"2021-10-31"},{"lineNumber":33,"author":{"gitId":"tttyyzzz"},"content":"    public CalorieGoal createNewCalorieGoal() throws MissingParamException {","lastModifiedDate":"2021-11-03"},{"lineNumber":34,"author":{"gitId":"tttyyzzz"},"content":"        boolean checkInput \u003d false;// check whether calorie goal has the correct input","lastModifiedDate":"2021-10-31"},{"lineNumber":35,"author":{"gitId":"tttyyzzz"},"content":"        do {","lastModifiedDate":"2021-10-31"},{"lineNumber":36,"author":{"gitId":"tttyyzzz"},"content":"            ui.formatMessageWithBottomDivider(MESSAGE_INTRO_CALORIE_GOAL);","lastModifiedDate":"2021-10-31"},{"lineNumber":37,"author":{"gitId":"tttyyzzz"},"content":"            try {","lastModifiedDate":"2021-10-31"},{"lineNumber":38,"author":{"gitId":"tttyyzzz"},"content":"                String userInput \u003d ui.getUserInput().trim();","lastModifiedDate":"2021-11-04"},{"lineNumber":39,"author":{"gitId":"tttyyzzz"},"content":"                setCalorieGoal(userInput);","lastModifiedDate":"2021-11-07"},{"lineNumber":40,"author":{"gitId":"tttyyzzz"},"content":"                checkCalorieGoal();","lastModifiedDate":"2021-11-07"},{"lineNumber":41,"author":{"gitId":"tttyyzzz"},"content":"                checkInput \u003d true;","lastModifiedDate":"2021-11-07"},{"lineNumber":42,"author":{"gitId":"tttyyzzz"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2021-11-07"},{"lineNumber":43,"author":{"gitId":"tttyyzzz"},"content":"                ui.formatMessageWithTopDivider(MESSAGE_INVALID_POSITIVE_INT_INPUT);","lastModifiedDate":"2021-11-07"},{"lineNumber":44,"author":{"gitId":"tttyyzzz"},"content":"            }","lastModifiedDate":"2021-11-07"},{"lineNumber":45,"author":{"gitId":"tttyyzzz"},"content":"        } while (!checkInput || !calorieGoal.isValid());","lastModifiedDate":"2021-11-07"},{"lineNumber":46,"author":{"gitId":"tttyyzzz"},"content":"        return calorieGoal;","lastModifiedDate":"2021-11-07"},{"lineNumber":47,"author":{"gitId":"tttyyzzz"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":48,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":49,"author":{"gitId":"tttyyzzz"},"content":"    private void checkCalorieGoal() {","lastModifiedDate":"2021-11-07"},{"lineNumber":50,"author":{"gitId":"tttyyzzz"},"content":"        if (calorieGoal.isValid()) {","lastModifiedDate":"2021-10-31"},{"lineNumber":51,"author":{"gitId":"tttyyzzz"},"content":"            ui.formatMessageWithTopDivider(","lastModifiedDate":"2021-10-31"},{"lineNumber":52,"author":{"gitId":"tttyyzzz"},"content":"                    String.format(MESSAGE_CALORIE_GOAL,","lastModifiedDate":"2021-10-31"},{"lineNumber":53,"author":{"gitId":"tttyyzzz"},"content":"                            calorieGoal.getCalorieGoal()));","lastModifiedDate":"2021-10-31"},{"lineNumber":54,"author":{"gitId":"tttyyzzz"},"content":"        } else {","lastModifiedDate":"2021-10-31"},{"lineNumber":55,"author":{"gitId":"tttyyzzz"},"content":"            ui.formatMessageWithTopDivider(ProfileUtils.ERROR_CALORIE_GOAL);","lastModifiedDate":"2021-11-05"},{"lineNumber":56,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":57,"author":{"gitId":"tttyyzzz"},"content":"        }","lastModifiedDate":"2021-10-31"},{"lineNumber":58,"author":{"gitId":"tttyyzzz"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":59,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":60,"author":{"gitId":"tttyyzzz"},"content":"    private void setCalorieGoal(String userInput) throws MissingParamException {","lastModifiedDate":"2021-11-07"},{"lineNumber":61,"author":{"gitId":"tttyyzzz"},"content":"        ui.checkEmptyUserInput(userInput);","lastModifiedDate":"2021-11-07"},{"lineNumber":62,"author":{"gitId":"tttyyzzz"},"content":"        confirmInputBye(userInput);","lastModifiedDate":"2021-11-07"},{"lineNumber":63,"author":{"gitId":"tttyyzzz"},"content":"        int calorieGoalInput \u003d Integer.parseInt(userInput);","lastModifiedDate":"2021-11-07"},{"lineNumber":64,"author":{"gitId":"tttyyzzz"},"content":"        calorieGoal \u003d new CalorieGoal(calorieGoalInput);","lastModifiedDate":"2021-11-07"},{"lineNumber":65,"author":{"gitId":"tttyyzzz"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":66,"author":{"gitId":"tttyyzzz"},"content":"}","lastModifiedDate":"2021-10-31"}],"authorContributionMap":{"tttyyzzz":64,"tlyi":2}},{"path":"src/main/java/seedu/duke/state/GenderCreator.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.state;","lastModifiedDate":"2021-11-07"},{"lineNumber":2,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":3,"author":{"gitId":"tttyyzzz"},"content":"import seedu.duke.data.profile.attributes.Gender;","lastModifiedDate":"2021-10-31"},{"lineNumber":4,"author":{"gitId":"tttyyzzz"},"content":"import seedu.duke.data.profile.utilities.ProfileUtils;","lastModifiedDate":"2021-10-31"},{"lineNumber":5,"author":{"gitId":"tlyi"},"content":"import seedu.duke.logic.parser.exceptions.MissingParamException;","lastModifiedDate":"2021-11-03"},{"lineNumber":6,"author":{"gitId":"tttyyzzz"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2021-10-31"},{"lineNumber":7,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":8,"author":{"gitId":"tttyyzzz"},"content":"/**","lastModifiedDate":"2021-11-01"},{"lineNumber":9,"author":{"gitId":"tttyyzzz"},"content":" * Creates a Gender Class and prompts user for valid gender input.","lastModifiedDate":"2021-11-01"},{"lineNumber":10,"author":{"gitId":"tttyyzzz"},"content":" */","lastModifiedDate":"2021-11-01"},{"lineNumber":11,"author":{"gitId":"tttyyzzz"},"content":"public class GenderCreator extends AttributeCreator {","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":13,"author":{"gitId":"tttyyzzz"},"content":"    private Gender gender \u003d new Gender();","lastModifiedDate":"2021-10-31"},{"lineNumber":14,"author":{"gitId":"tttyyzzz"},"content":"    public static final String MESSAGE_INTRO_GENDER \u003d \"What is your gender? (If you are a male, type \u0027m\u0027\"","lastModifiedDate":"2021-10-31"},{"lineNumber":15,"author":{"gitId":"tttyyzzz"},"content":"            + \", if you are a female, type \u0027f\u0027)\";","lastModifiedDate":"2021-10-31"},{"lineNumber":16,"author":{"gitId":"tttyyzzz"},"content":"    public static final char MALE_CHAR \u003d \u0027M\u0027;","lastModifiedDate":"2021-10-31"},{"lineNumber":17,"author":{"gitId":"tttyyzzz"},"content":"    public static final String MESSAGE_MALE \u003d \"You are a male.\";","lastModifiedDate":"2021-10-31"},{"lineNumber":18,"author":{"gitId":"tttyyzzz"},"content":"    public static final String MESSAGE_FEMALE \u003d \"You are a female.\";","lastModifiedDate":"2021-10-31"},{"lineNumber":19,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":20,"author":{"gitId":"tttyyzzz"},"content":"    public GenderCreator(Ui ui) {","lastModifiedDate":"2021-11-04"},{"lineNumber":21,"author":{"gitId":"tttyyzzz"},"content":"        super(ui);","lastModifiedDate":"2021-11-03"},{"lineNumber":22,"author":{"gitId":"tttyyzzz"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":23,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":24,"author":{"gitId":"tttyyzzz"},"content":"    /**","lastModifiedDate":"2021-10-31"},{"lineNumber":25,"author":{"gitId":"tttyyzzz"},"content":"     * Creates a valid profile gender for the profile instance.","lastModifiedDate":"2021-10-31"},{"lineNumber":26,"author":{"gitId":"tttyyzzz"},"content":"     *","lastModifiedDate":"2021-10-31"},{"lineNumber":27,"author":{"gitId":"tlyi"},"content":"     * @throws MissingParamException if user input a string of 0 characters.","lastModifiedDate":"2021-11-03"},{"lineNumber":28,"author":{"gitId":"tttyyzzz"},"content":"     */","lastModifiedDate":"2021-10-31"},{"lineNumber":29,"author":{"gitId":"tttyyzzz"},"content":"    public Gender createNewGender() throws MissingParamException {","lastModifiedDate":"2021-11-03"},{"lineNumber":30,"author":{"gitId":"tttyyzzz"},"content":"        while (!gender.isValid()) {","lastModifiedDate":"2021-10-31"},{"lineNumber":31,"author":{"gitId":"tttyyzzz"},"content":"            ui.formatMessageWithBottomDivider(MESSAGE_INTRO_GENDER);","lastModifiedDate":"2021-10-31"},{"lineNumber":32,"author":{"gitId":"tttyyzzz"},"content":"            String userInput \u003d ui.getUserInput();","lastModifiedDate":"2021-10-31"},{"lineNumber":33,"author":{"gitId":"tttyyzzz"},"content":"            setGender(userInput);","lastModifiedDate":"2021-11-07"},{"lineNumber":34,"author":{"gitId":"tttyyzzz"},"content":"            checkGender();","lastModifiedDate":"2021-11-07"},{"lineNumber":35,"author":{"gitId":"tttyyzzz"},"content":"        }","lastModifiedDate":"2021-11-07"},{"lineNumber":36,"author":{"gitId":"tttyyzzz"},"content":"        return gender;","lastModifiedDate":"2021-11-07"},{"lineNumber":37,"author":{"gitId":"tttyyzzz"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":38,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":39,"author":{"gitId":"tttyyzzz"},"content":"    private void checkGender() {","lastModifiedDate":"2021-11-07"},{"lineNumber":40,"author":{"gitId":"tttyyzzz"},"content":"        if (gender.isValid()) {","lastModifiedDate":"2021-10-31"},{"lineNumber":41,"author":{"gitId":"tttyyzzz"},"content":"            ui.formatMessageWithTopDivider(","lastModifiedDate":"2021-10-31"},{"lineNumber":42,"author":{"gitId":"tttyyzzz"},"content":"                    getGenderMessage(gender.getGender()));","lastModifiedDate":"2021-10-31"},{"lineNumber":43,"author":{"gitId":"tttyyzzz"},"content":"        } else {","lastModifiedDate":"2021-10-31"},{"lineNumber":44,"author":{"gitId":"tttyyzzz"},"content":"            ui.formatMessageWithTopDivider(ProfileUtils.ERROR_GENDER);","lastModifiedDate":"2021-10-31"},{"lineNumber":45,"author":{"gitId":"tttyyzzz"},"content":"        }","lastModifiedDate":"2021-10-31"},{"lineNumber":46,"author":{"gitId":"tttyyzzz"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":47,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":48,"author":{"gitId":"tttyyzzz"},"content":"    private void setGender(String userInput) throws MissingParamException {","lastModifiedDate":"2021-11-07"},{"lineNumber":49,"author":{"gitId":"tttyyzzz"},"content":"        ui.checkEmptyUserInput(userInput);","lastModifiedDate":"2021-11-07"},{"lineNumber":50,"author":{"gitId":"tttyyzzz"},"content":"        confirmInputBye(userInput);","lastModifiedDate":"2021-11-07"},{"lineNumber":51,"author":{"gitId":"tttyyzzz"},"content":"        if (userInput.length() \u003d\u003d 1) {","lastModifiedDate":"2021-11-07"},{"lineNumber":52,"author":{"gitId":"tttyyzzz"},"content":"            char genderInput \u003d userInput.charAt(0);","lastModifiedDate":"2021-11-07"},{"lineNumber":53,"author":{"gitId":"tttyyzzz"},"content":"            gender.setGender(genderInput);","lastModifiedDate":"2021-11-07"},{"lineNumber":54,"author":{"gitId":"tttyyzzz"},"content":"        }","lastModifiedDate":"2021-10-31"},{"lineNumber":55,"author":{"gitId":"tttyyzzz"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":56,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":57,"author":{"gitId":"tttyyzzz"},"content":"    private String getGenderMessage(char gender) {","lastModifiedDate":"2021-10-31"},{"lineNumber":58,"author":{"gitId":"tttyyzzz"},"content":"        return gender \u003d\u003d MALE_CHAR ? MESSAGE_MALE : MESSAGE_FEMALE;","lastModifiedDate":"2021-10-31"},{"lineNumber":59,"author":{"gitId":"tttyyzzz"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":60,"author":{"gitId":"tttyyzzz"},"content":"}","lastModifiedDate":"2021-10-31"}],"authorContributionMap":{"tttyyzzz":57,"tlyi":3}},{"path":"src/main/java/seedu/duke/state/HeightCreator.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.state;","lastModifiedDate":"2021-11-07"},{"lineNumber":2,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":3,"author":{"gitId":"tttyyzzz"},"content":"import seedu.duke.data.profile.attributes.Height;","lastModifiedDate":"2021-10-31"},{"lineNumber":4,"author":{"gitId":"tttyyzzz"},"content":"import seedu.duke.data.profile.utilities.ProfileUtils;","lastModifiedDate":"2021-10-31"},{"lineNumber":5,"author":{"gitId":"tlyi"},"content":"import seedu.duke.logic.parser.exceptions.MissingParamException;","lastModifiedDate":"2021-11-03"},{"lineNumber":6,"author":{"gitId":"tttyyzzz"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2021-10-31"},{"lineNumber":7,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":8,"author":{"gitId":"tttyyzzz"},"content":"/**","lastModifiedDate":"2021-11-01"},{"lineNumber":9,"author":{"gitId":"tttyyzzz"},"content":" * Creates a Height Class and prompts user for valid height input.","lastModifiedDate":"2021-11-01"},{"lineNumber":10,"author":{"gitId":"tttyyzzz"},"content":" */","lastModifiedDate":"2021-11-01"},{"lineNumber":11,"author":{"gitId":"tttyyzzz"},"content":"public class HeightCreator extends AttributeCreator {","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":13,"author":{"gitId":"tttyyzzz"},"content":"    private static final String MESSAGE_HEIGHT \u003d \"Your height is %scm.\";","lastModifiedDate":"2021-10-31"},{"lineNumber":14,"author":{"gitId":"tttyyzzz"},"content":"    private static final String MESSAGE_INTRO_HEIGHT \u003d \"What\u0027s your height? (in cm)\";","lastModifiedDate":"2021-10-31"},{"lineNumber":15,"author":{"gitId":"tttyyzzz"},"content":"    private static final String MESSAGE_INVALID_POSITIVE_DOUBLE_INPUT \u003d \"Invalid input,\"","lastModifiedDate":"2021-10-31"},{"lineNumber":16,"author":{"gitId":"tttyyzzz"},"content":"            + \" please input a valid positive number\";","lastModifiedDate":"2021-10-31"},{"lineNumber":17,"author":{"gitId":"tttyyzzz"},"content":"    private Height height \u003d new Height();","lastModifiedDate":"2021-10-31"},{"lineNumber":18,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":19,"author":{"gitId":"tttyyzzz"},"content":"    public HeightCreator(Ui ui) {","lastModifiedDate":"2021-11-04"},{"lineNumber":20,"author":{"gitId":"tttyyzzz"},"content":"        super(ui);","lastModifiedDate":"2021-11-03"},{"lineNumber":21,"author":{"gitId":"tttyyzzz"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":22,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":23,"author":{"gitId":"tttyyzzz"},"content":"    /**","lastModifiedDate":"2021-10-31"},{"lineNumber":24,"author":{"gitId":"tttyyzzz"},"content":"     * Creates a valid profile height for the profile instance.","lastModifiedDate":"2021-10-31"},{"lineNumber":25,"author":{"gitId":"tttyyzzz"},"content":"     *","lastModifiedDate":"2021-10-31"},{"lineNumber":26,"author":{"gitId":"tlyi"},"content":"     * @throws MissingParamException if user input a string of 0 characters.","lastModifiedDate":"2021-11-03"},{"lineNumber":27,"author":{"gitId":"tttyyzzz"},"content":"     */","lastModifiedDate":"2021-10-31"},{"lineNumber":28,"author":{"gitId":"tlyi"},"content":"    public Height createNewHeight() throws MissingParamException {","lastModifiedDate":"2021-11-03"},{"lineNumber":29,"author":{"gitId":"tttyyzzz"},"content":"        while (!height.isValid()) {","lastModifiedDate":"2021-10-31"},{"lineNumber":30,"author":{"gitId":"tttyyzzz"},"content":"            ui.formatMessageWithBottomDivider(MESSAGE_INTRO_HEIGHT);","lastModifiedDate":"2021-10-31"},{"lineNumber":31,"author":{"gitId":"tttyyzzz"},"content":"            try {","lastModifiedDate":"2021-10-31"},{"lineNumber":32,"author":{"gitId":"tttyyzzz"},"content":"                String userInput \u003d ui.getUserInput();","lastModifiedDate":"2021-10-31"},{"lineNumber":33,"author":{"gitId":"tttyyzzz"},"content":"                setHeight(userInput);","lastModifiedDate":"2021-11-07"},{"lineNumber":34,"author":{"gitId":"tttyyzzz"},"content":"                checkHeight();","lastModifiedDate":"2021-11-07"},{"lineNumber":35,"author":{"gitId":"tttyyzzz"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2021-11-07"},{"lineNumber":36,"author":{"gitId":"tttyyzzz"},"content":"                ui.formatMessageWithTopDivider(MESSAGE_INVALID_POSITIVE_DOUBLE_INPUT);","lastModifiedDate":"2021-11-07"},{"lineNumber":37,"author":{"gitId":"tttyyzzz"},"content":"            }","lastModifiedDate":"2021-11-07"},{"lineNumber":38,"author":{"gitId":"tttyyzzz"},"content":"        }","lastModifiedDate":"2021-11-07"},{"lineNumber":39,"author":{"gitId":"tttyyzzz"},"content":"        return height;","lastModifiedDate":"2021-11-07"},{"lineNumber":40,"author":{"gitId":"tttyyzzz"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":41,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":42,"author":{"gitId":"tttyyzzz"},"content":"    private void checkHeight() {","lastModifiedDate":"2021-11-07"},{"lineNumber":43,"author":{"gitId":"tttyyzzz"},"content":"        if (height.isValid()) {","lastModifiedDate":"2021-10-31"},{"lineNumber":44,"author":{"gitId":"tttyyzzz"},"content":"            ui.formatMessageWithTopDivider(","lastModifiedDate":"2021-10-31"},{"lineNumber":45,"author":{"gitId":"tttyyzzz"},"content":"                    String.format(MESSAGE_HEIGHT,","lastModifiedDate":"2021-10-31"},{"lineNumber":46,"author":{"gitId":"tttyyzzz"},"content":"                            height.getHeight()));","lastModifiedDate":"2021-10-31"},{"lineNumber":47,"author":{"gitId":"tttyyzzz"},"content":"        } else {","lastModifiedDate":"2021-10-31"},{"lineNumber":48,"author":{"gitId":"tttyyzzz"},"content":"            ui.formatMessageFramedWithDivider(ProfileUtils.ERROR_HEIGHT);","lastModifiedDate":"2021-10-31"},{"lineNumber":49,"author":{"gitId":"tttyyzzz"},"content":"        }","lastModifiedDate":"2021-10-31"},{"lineNumber":50,"author":{"gitId":"tttyyzzz"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":51,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":52,"author":{"gitId":"tttyyzzz"},"content":"    private void setHeight(String userInput) throws MissingParamException {","lastModifiedDate":"2021-11-07"},{"lineNumber":53,"author":{"gitId":"tttyyzzz"},"content":"        ui.checkEmptyUserInput(userInput);","lastModifiedDate":"2021-11-07"},{"lineNumber":54,"author":{"gitId":"tttyyzzz"},"content":"        confirmInputBye(userInput);","lastModifiedDate":"2021-11-07"},{"lineNumber":55,"author":{"gitId":"tttyyzzz"},"content":"        double heightInput \u003d Double.parseDouble(userInput);","lastModifiedDate":"2021-11-07"},{"lineNumber":56,"author":{"gitId":"tttyyzzz"},"content":"        height.setHeight(heightInput);","lastModifiedDate":"2021-11-07"},{"lineNumber":57,"author":{"gitId":"tttyyzzz"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":58,"author":{"gitId":"tttyyzzz"},"content":"}","lastModifiedDate":"2021-10-31"}],"authorContributionMap":{"tttyyzzz":54,"tlyi":4}},{"path":"src/main/java/seedu/duke/state/NameCreator.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.state;","lastModifiedDate":"2021-11-07"},{"lineNumber":2,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":3,"author":{"gitId":"tttyyzzz"},"content":"import seedu.duke.data.profile.attributes.Name;","lastModifiedDate":"2021-10-31"},{"lineNumber":4,"author":{"gitId":"tttyyzzz"},"content":"import seedu.duke.data.profile.utilities.ProfileUtils;","lastModifiedDate":"2021-10-31"},{"lineNumber":5,"author":{"gitId":"tlyi"},"content":"import seedu.duke.logic.parser.exceptions.MissingParamException;","lastModifiedDate":"2021-11-03"},{"lineNumber":6,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":7,"author":{"gitId":"tttyyzzz"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2021-10-31"},{"lineNumber":8,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":9,"author":{"gitId":"tttyyzzz"},"content":"/**","lastModifiedDate":"2021-11-01"},{"lineNumber":10,"author":{"gitId":"tttyyzzz"},"content":" * Creates a Name Class and prompts user for valid name input.","lastModifiedDate":"2021-11-01"},{"lineNumber":11,"author":{"gitId":"tttyyzzz"},"content":" */","lastModifiedDate":"2021-11-01"},{"lineNumber":12,"author":{"gitId":"tttyyzzz"},"content":"public class NameCreator extends AttributeCreator {","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":14,"author":{"gitId":"tttyyzzz"},"content":"    private static final String LS \u003d System.lineSeparator();","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"tttyyzzz"},"content":"    private static final String MESSAGE_BYE_DETECTED \u003d \"The command word \u0027bye\u0027 is detected.\" + LS","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"tlyi"},"content":"            + \"Type \u00271\u0027 if you wish to exit. Type \u00272\u0027 if you wish to set your name as \u0027bye\u0027.\" + LS","lastModifiedDate":"2021-11-04"},{"lineNumber":17,"author":{"gitId":"tttyyzzz"},"content":"            + \"Else, type in any key for Fitbot to ask for your name again.\";","lastModifiedDate":"2021-11-03"},{"lineNumber":18,"author":{"gitId":"tttyyzzz"},"content":"    private static final String CHECK_REPEAT_MESSAGE \u003d \"\";","lastModifiedDate":"2021-11-04"},{"lineNumber":19,"author":{"gitId":"tttyyzzz"},"content":"    public static final String FIRST_OPTION \u003d \"1\";","lastModifiedDate":"2021-11-04"},{"lineNumber":20,"author":{"gitId":"tttyyzzz"},"content":"    public static final String SECOND_OPTION \u003d \"2\";","lastModifiedDate":"2021-11-04"},{"lineNumber":21,"author":{"gitId":"tttyyzzz"},"content":"    private Name name \u003d new Name();","lastModifiedDate":"2021-10-31"},{"lineNumber":22,"author":{"gitId":"tttyyzzz"},"content":"    private static final String MESSAGE_INTRO_NAME \u003d \"What\u0027s your name?\";","lastModifiedDate":"2021-11-04"},{"lineNumber":23,"author":{"gitId":"tlyi"},"content":"    private static final String MESSAGE_NAME \u003d \"Nice name you have there! Hello %s.\";","lastModifiedDate":"2021-11-07"},{"lineNumber":24,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":25,"author":{"gitId":"tttyyzzz"},"content":"    public NameCreator(Ui ui) {","lastModifiedDate":"2021-11-04"},{"lineNumber":26,"author":{"gitId":"tttyyzzz"},"content":"        super(ui);","lastModifiedDate":"2021-11-03"},{"lineNumber":27,"author":{"gitId":"tttyyzzz"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":28,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":29,"author":{"gitId":"tttyyzzz"},"content":"    /**","lastModifiedDate":"2021-10-31"},{"lineNumber":30,"author":{"gitId":"tttyyzzz"},"content":"     * Creates a valid profile name for the profile instance.","lastModifiedDate":"2021-10-31"},{"lineNumber":31,"author":{"gitId":"tttyyzzz"},"content":"     *","lastModifiedDate":"2021-10-31"},{"lineNumber":32,"author":{"gitId":"tlyi"},"content":"     * @throws MissingParamException if user input a string of 0 characters.","lastModifiedDate":"2021-11-03"},{"lineNumber":33,"author":{"gitId":"tttyyzzz"},"content":"     */","lastModifiedDate":"2021-10-31"},{"lineNumber":34,"author":{"gitId":"tlyi"},"content":"    public Name createNewName() throws MissingParamException {","lastModifiedDate":"2021-11-03"},{"lineNumber":35,"author":{"gitId":"tttyyzzz"},"content":"        while (!name.isValid()) {","lastModifiedDate":"2021-10-31"},{"lineNumber":36,"author":{"gitId":"tttyyzzz"},"content":"            ui.formatMessageWithBottomDivider(MESSAGE_INTRO_NAME);","lastModifiedDate":"2021-10-31"},{"lineNumber":37,"author":{"gitId":"tttyyzzz"},"content":"            String userInput \u003d ui.getUserInput().trim();","lastModifiedDate":"2021-11-03"},{"lineNumber":38,"author":{"gitId":"tttyyzzz"},"content":"            if (setName(userInput)) {","lastModifiedDate":"2021-11-07"},{"lineNumber":39,"author":{"gitId":"tttyyzzz"},"content":"                continue;","lastModifiedDate":"2021-11-03"},{"lineNumber":40,"author":{"gitId":"tttyyzzz"},"content":"            }","lastModifiedDate":"2021-11-03"},{"lineNumber":41,"author":{"gitId":"tttyyzzz"},"content":"            checkName();","lastModifiedDate":"2021-11-07"},{"lineNumber":42,"author":{"gitId":"tttyyzzz"},"content":"        }","lastModifiedDate":"2021-11-07"},{"lineNumber":43,"author":{"gitId":"tttyyzzz"},"content":"        assert name.isValid() : \" name is valid\";","lastModifiedDate":"2021-11-07"},{"lineNumber":44,"author":{"gitId":"tttyyzzz"},"content":"        return name;","lastModifiedDate":"2021-11-07"},{"lineNumber":45,"author":{"gitId":"tttyyzzz"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":46,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":47,"author":{"gitId":"tttyyzzz"},"content":"    private void checkName() {","lastModifiedDate":"2021-11-07"},{"lineNumber":48,"author":{"gitId":"tttyyzzz"},"content":"        if (name.isValid()) {","lastModifiedDate":"2021-10-31"},{"lineNumber":49,"author":{"gitId":"tttyyzzz"},"content":"            ui.formatMessageWithTopDivider(","lastModifiedDate":"2021-10-31"},{"lineNumber":50,"author":{"gitId":"tttyyzzz"},"content":"                    String.format(MESSAGE_NAME,","lastModifiedDate":"2021-10-31"},{"lineNumber":51,"author":{"gitId":"tttyyzzz"},"content":"                            name.getName()));","lastModifiedDate":"2021-10-31"},{"lineNumber":52,"author":{"gitId":"tttyyzzz"},"content":"        } else {","lastModifiedDate":"2021-10-31"},{"lineNumber":53,"author":{"gitId":"tttyyzzz"},"content":"            ui.formatMessageWithTopDivider(ProfileUtils.ERROR_NAME);","lastModifiedDate":"2021-10-31"},{"lineNumber":54,"author":{"gitId":"tttyyzzz"},"content":"        }","lastModifiedDate":"2021-10-31"},{"lineNumber":55,"author":{"gitId":"tttyyzzz"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":56,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":57,"author":{"gitId":"tttyyzzz"},"content":"    private boolean setName(String userInput) throws MissingParamException {","lastModifiedDate":"2021-11-07"},{"lineNumber":58,"author":{"gitId":"tttyyzzz"},"content":"        ui.checkEmptyUserInput(userInput);","lastModifiedDate":"2021-11-07"},{"lineNumber":59,"author":{"gitId":"tttyyzzz"},"content":"        userInput \u003d checkAndConfirmInputBye(userInput);","lastModifiedDate":"2021-11-07"},{"lineNumber":60,"author":{"gitId":"tttyyzzz"},"content":"        if (userInput.equals(CHECK_REPEAT_MESSAGE)) {","lastModifiedDate":"2021-11-07"},{"lineNumber":61,"author":{"gitId":"tttyyzzz"},"content":"            ui.formatMessageWithTopDivider();","lastModifiedDate":"2021-11-07"},{"lineNumber":62,"author":{"gitId":"tttyyzzz"},"content":"            return true;","lastModifiedDate":"2021-11-07"},{"lineNumber":63,"author":{"gitId":"tttyyzzz"},"content":"        }","lastModifiedDate":"2021-11-07"},{"lineNumber":64,"author":{"gitId":"tttyyzzz"},"content":"        name.setName(userInput);","lastModifiedDate":"2021-11-07"},{"lineNumber":65,"author":{"gitId":"tttyyzzz"},"content":"        return false;","lastModifiedDate":"2021-11-07"},{"lineNumber":66,"author":{"gitId":"tttyyzzz"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":67,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":68,"author":{"gitId":"tttyyzzz"},"content":"    private String checkAndConfirmInputBye(String userInput) {","lastModifiedDate":"2021-11-03"},{"lineNumber":69,"author":{"gitId":"tttyyzzz"},"content":"        boolean isBye \u003d isBye(userInput);","lastModifiedDate":"2021-11-03"},{"lineNumber":70,"author":{"gitId":"tttyyzzz"},"content":"        if (!isBye) {","lastModifiedDate":"2021-11-03"},{"lineNumber":71,"author":{"gitId":"tttyyzzz"},"content":"            return userInput;","lastModifiedDate":"2021-11-03"},{"lineNumber":72,"author":{"gitId":"tttyyzzz"},"content":"        }","lastModifiedDate":"2021-11-03"},{"lineNumber":73,"author":{"gitId":"tttyyzzz"},"content":"        ui.formatMessageFramedWithDivider(String.format(MESSAGE_BYE_DETECTED, userInput));","lastModifiedDate":"2021-11-03"},{"lineNumber":74,"author":{"gitId":"tttyyzzz"},"content":"        String userConfirmByeInput \u003d ui.getUserInput().trim();","lastModifiedDate":"2021-11-03"},{"lineNumber":75,"author":{"gitId":"tttyyzzz"},"content":"        if (userConfirmByeInput.equals(FIRST_OPTION)) {","lastModifiedDate":"2021-11-04"},{"lineNumber":76,"author":{"gitId":"tttyyzzz"},"content":"            exit();","lastModifiedDate":"2021-11-03"},{"lineNumber":77,"author":{"gitId":"tttyyzzz"},"content":"        } else if (userConfirmByeInput.equals(SECOND_OPTION)) {","lastModifiedDate":"2021-11-04"},{"lineNumber":78,"author":{"gitId":"tttyyzzz"},"content":"            return userInput;","lastModifiedDate":"2021-11-03"},{"lineNumber":79,"author":{"gitId":"tttyyzzz"},"content":"        }","lastModifiedDate":"2021-11-03"},{"lineNumber":80,"author":{"gitId":"tttyyzzz"},"content":"        assert !userConfirmByeInput.equals(\"1\") \u0026\u0026 !userConfirmByeInput.equals(\"2\") : \"other inputs\";","lastModifiedDate":"2021-11-03"},{"lineNumber":81,"author":{"gitId":"tttyyzzz"},"content":"        return CHECK_REPEAT_MESSAGE;","lastModifiedDate":"2021-11-03"},{"lineNumber":82,"author":{"gitId":"tttyyzzz"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":83,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":84,"author":{"gitId":"tttyyzzz"},"content":"}","lastModifiedDate":"2021-10-31"}],"authorContributionMap":{"tttyyzzz":78,"tlyi":6}},{"path":"src/main/java/seedu/duke/state/StartState.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.state;","lastModifiedDate":"2021-11-07"},{"lineNumber":2,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":3,"author":{"gitId":"tttyyzzz"},"content":"import seedu.duke.data.profile.Profile;","lastModifiedDate":"2021-10-31"},{"lineNumber":4,"author":{"gitId":"tttyyzzz"},"content":"import seedu.duke.logic.Statistics;","lastModifiedDate":"2021-11-08"},{"lineNumber":5,"author":{"gitId":"tlyi"},"content":"import seedu.duke.logic.parser.exceptions.MissingParamException;","lastModifiedDate":"2021-11-03"},{"lineNumber":6,"author":{"gitId":"tttyyzzz"},"content":"import seedu.duke.storage.StorageManager;","lastModifiedDate":"2021-10-31"},{"lineNumber":7,"author":{"gitId":"tttyyzzz"},"content":"import seedu.duke.storage.exceptions.UnableToWriteFileException;","lastModifiedDate":"2021-10-31"},{"lineNumber":8,"author":{"gitId":"tttyyzzz"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2021-10-31"},{"lineNumber":9,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":10,"author":{"gitId":"tttyyzzz"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-11-08"},{"lineNumber":11,"author":{"gitId":"tttyyzzz"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-11-08"},{"lineNumber":12,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":13,"author":{"gitId":"tttyyzzz"},"content":"//@@author tttyyzzz","lastModifiedDate":"2021-10-31"},{"lineNumber":14,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":15,"author":{"gitId":"tttyyzzz"},"content":"public class StartState {","lastModifiedDate":"2021-10-31"},{"lineNumber":16,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":17,"author":{"gitId":"tttyyzzz"},"content":"    private Profile profile;","lastModifiedDate":"2021-10-31"},{"lineNumber":18,"author":{"gitId":"tttyyzzz"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2021-10-31"},{"lineNumber":19,"author":{"gitId":"tttyyzzz"},"content":"    private Ui ui;","lastModifiedDate":"2021-10-31"},{"lineNumber":20,"author":{"gitId":"tttyyzzz"},"content":"    private static Logger logger \u003d Logger.getLogger(Statistics.class.getName());","lastModifiedDate":"2021-11-08"},{"lineNumber":21,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":22,"author":{"gitId":"tttyyzzz"},"content":"    public StartState(Profile profile, StorageManager storageManager, Ui ui) {","lastModifiedDate":"2021-10-31"},{"lineNumber":23,"author":{"gitId":"tttyyzzz"},"content":"        this.profile \u003d profile;","lastModifiedDate":"2021-10-31"},{"lineNumber":24,"author":{"gitId":"tttyyzzz"},"content":"        this.storageManager \u003d storageManager;","lastModifiedDate":"2021-10-31"},{"lineNumber":25,"author":{"gitId":"tttyyzzz"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2021-10-31"},{"lineNumber":26,"author":{"gitId":"tttyyzzz"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":27,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":28,"author":{"gitId":"tttyyzzz"},"content":"    /**","lastModifiedDate":"2021-10-31"},{"lineNumber":29,"author":{"gitId":"tttyyzzz"},"content":"     * Check whether user\u0027s profile is complete.","lastModifiedDate":"2021-10-31"},{"lineNumber":30,"author":{"gitId":"tttyyzzz"},"content":"     * If profile is complete, the program will exit this method.","lastModifiedDate":"2021-10-31"},{"lineNumber":31,"author":{"gitId":"tttyyzzz"},"content":"     * If the profile is partially complete, it will assist user in completing the profile.","lastModifiedDate":"2021-10-31"},{"lineNumber":32,"author":{"gitId":"tttyyzzz"},"content":"     * If all parameters of profile is incorrect or a new user, user is required to complete","lastModifiedDate":"2021-10-31"},{"lineNumber":33,"author":{"gitId":"tttyyzzz"},"content":"     * all the particulars before saving their profile data.","lastModifiedDate":"2021-10-31"},{"lineNumber":34,"author":{"gitId":"tttyyzzz"},"content":"     */","lastModifiedDate":"2021-10-31"},{"lineNumber":35,"author":{"gitId":"tttyyzzz"},"content":"    public Profile checkAndCreateProfile() {","lastModifiedDate":"2021-10-31"},{"lineNumber":36,"author":{"gitId":"tttyyzzz"},"content":"        if (profile.checkProfileComplete()) {","lastModifiedDate":"2021-10-31"},{"lineNumber":37,"author":{"gitId":"tttyyzzz"},"content":"            logger.log(Level.FINE,\"profile is complete\");","lastModifiedDate":"2021-11-08"},{"lineNumber":38,"author":{"gitId":"tttyyzzz"},"content":"            return profile;","lastModifiedDate":"2021-10-31"},{"lineNumber":39,"author":{"gitId":"tttyyzzz"},"content":"        }","lastModifiedDate":"2021-10-31"},{"lineNumber":40,"author":{"gitId":"tttyyzzz"},"content":"        if (profile.checkProfilePresent()) {","lastModifiedDate":"2021-10-31"},{"lineNumber":41,"author":{"gitId":"tttyyzzz"},"content":"            assert !profile.checkProfileComplete() : \"profile is incomplete\";","lastModifiedDate":"2021-10-31"},{"lineNumber":42,"author":{"gitId":"tttyyzzz"},"content":"            logger.log(Level.FINE,\"profile is partially complete\");","lastModifiedDate":"2021-11-08"},{"lineNumber":43,"author":{"gitId":"tttyyzzz"},"content":"            repairProfile();","lastModifiedDate":"2021-10-31"},{"lineNumber":44,"author":{"gitId":"tttyyzzz"},"content":"        } else {","lastModifiedDate":"2021-10-31"},{"lineNumber":45,"author":{"gitId":"tttyyzzz"},"content":"            logger.log(Level.FINE,\"profile is totally wrong or incomplete\");","lastModifiedDate":"2021-11-08"},{"lineNumber":46,"author":{"gitId":"tttyyzzz"},"content":"            createNewProfile();","lastModifiedDate":"2021-10-31"},{"lineNumber":47,"author":{"gitId":"tttyyzzz"},"content":"        }","lastModifiedDate":"2021-10-31"},{"lineNumber":48,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":49,"author":{"gitId":"tttyyzzz"},"content":"        System.out.println(Ui.MESSAGE_CREATE_PROFILE_SUCCESSFUL + ui.LS + ui.MESSAGE_DIRECT_HELP);","lastModifiedDate":"2021-11-04"},{"lineNumber":50,"author":{"gitId":"tttyyzzz"},"content":"        return profile;","lastModifiedDate":"2021-10-31"},{"lineNumber":51,"author":{"gitId":"tttyyzzz"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":52,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":53,"author":{"gitId":"tttyyzzz"},"content":"    /**","lastModifiedDate":"2021-10-31"},{"lineNumber":54,"author":{"gitId":"tttyyzzz"},"content":"     * Assists user in fixing remaining profile particulars.","lastModifiedDate":"2021-10-31"},{"lineNumber":55,"author":{"gitId":"tttyyzzz"},"content":"     * The profile changes will be saved on every update.","lastModifiedDate":"2021-10-31"},{"lineNumber":56,"author":{"gitId":"tttyyzzz"},"content":"     */","lastModifiedDate":"2021-10-31"},{"lineNumber":57,"author":{"gitId":"tttyyzzz"},"content":"    private void repairProfile() {","lastModifiedDate":"2021-10-31"},{"lineNumber":58,"author":{"gitId":"tttyyzzz"},"content":"        ui.formatMessageWithTopDivider();","lastModifiedDate":"2021-10-31"},{"lineNumber":59,"author":{"gitId":"tttyyzzz"},"content":"        while (!profile.checkProfileComplete()) {","lastModifiedDate":"2021-10-31"},{"lineNumber":60,"author":{"gitId":"tttyyzzz"},"content":"            try {","lastModifiedDate":"2021-10-31"},{"lineNumber":61,"author":{"gitId":"tttyyzzz"},"content":"                if (!profile.getProfileName().isValid()) {","lastModifiedDate":"2021-10-31"},{"lineNumber":62,"author":{"gitId":"tttyyzzz"},"content":"                    createNewProfileName(profile); // if user just enter and exit, it will cause his name to be null","lastModifiedDate":"2021-10-31"},{"lineNumber":63,"author":{"gitId":"tttyyzzz"},"content":"                } else if (!profile.getProfileHeight().isValid()) {","lastModifiedDate":"2021-10-31"},{"lineNumber":64,"author":{"gitId":"tttyyzzz"},"content":"                    createNewProfileHeight(profile);","lastModifiedDate":"2021-10-31"},{"lineNumber":65,"author":{"gitId":"tttyyzzz"},"content":"                } else if (!profile.getProfileWeight().isValid()) {","lastModifiedDate":"2021-10-31"},{"lineNumber":66,"author":{"gitId":"tttyyzzz"},"content":"                    createNewProfileWeight(profile);","lastModifiedDate":"2021-10-31"},{"lineNumber":67,"author":{"gitId":"tttyyzzz"},"content":"                } else if (!profile.getProfileGender().isValid()) {","lastModifiedDate":"2021-10-31"},{"lineNumber":68,"author":{"gitId":"tttyyzzz"},"content":"                    createNewProfileGender(profile);","lastModifiedDate":"2021-10-31"},{"lineNumber":69,"author":{"gitId":"tttyyzzz"},"content":"                } else if (!profile.getProfileAge().isValid()) {","lastModifiedDate":"2021-10-31"},{"lineNumber":70,"author":{"gitId":"tttyyzzz"},"content":"                    createNewProfileAge(profile);","lastModifiedDate":"2021-10-31"},{"lineNumber":71,"author":{"gitId":"tttyyzzz"},"content":"                } else if (!profile.getProfileActivityFactor().isValid()) {","lastModifiedDate":"2021-10-31"},{"lineNumber":72,"author":{"gitId":"tttyyzzz"},"content":"                    createNewProfileActivityFactor(profile);","lastModifiedDate":"2021-10-31"},{"lineNumber":73,"author":{"gitId":"tttyyzzz"},"content":"                } else if (!profile.getProfileCalorieGoal().isValid()) {","lastModifiedDate":"2021-11-03"},{"lineNumber":74,"author":{"gitId":"tttyyzzz"},"content":"                    createNewProfileCalorieGoal(profile);","lastModifiedDate":"2021-10-31"},{"lineNumber":75,"author":{"gitId":"tttyyzzz"},"content":"                }","lastModifiedDate":"2021-10-31"},{"lineNumber":76,"author":{"gitId":"tttyyzzz"},"content":"                storageManager.saveProfile(this.profile);","lastModifiedDate":"2021-10-31"},{"lineNumber":77,"author":{"gitId":"tttyyzzz"},"content":"            } catch (MissingParamException e) {","lastModifiedDate":"2021-11-03"},{"lineNumber":78,"author":{"gitId":"tttyyzzz"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2021-10-31"},{"lineNumber":79,"author":{"gitId":"tttyyzzz"},"content":"            } catch (UnableToWriteFileException e) {","lastModifiedDate":"2021-10-31"},{"lineNumber":80,"author":{"gitId":"tttyyzzz"},"content":"                ui.formatMessageFramedWithDivider(e.getMessage());","lastModifiedDate":"2021-10-31"},{"lineNumber":81,"author":{"gitId":"tttyyzzz"},"content":"            }","lastModifiedDate":"2021-10-31"},{"lineNumber":82,"author":{"gitId":"tttyyzzz"},"content":"        }","lastModifiedDate":"2021-10-31"},{"lineNumber":83,"author":{"gitId":"tttyyzzz"},"content":"        ui.formatMessageWithBottomDivider();","lastModifiedDate":"2021-10-31"},{"lineNumber":84,"author":{"gitId":"tttyyzzz"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":85,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":86,"author":{"gitId":"tttyyzzz"},"content":"    /**","lastModifiedDate":"2021-10-31"},{"lineNumber":87,"author":{"gitId":"tttyyzzz"},"content":"     * Creates a new profile instance for new user.","lastModifiedDate":"2021-10-31"},{"lineNumber":88,"author":{"gitId":"tttyyzzz"},"content":"     * Profile will be lost if user exits the program without setting up the profile.","lastModifiedDate":"2021-10-31"},{"lineNumber":89,"author":{"gitId":"tttyyzzz"},"content":"     * Upon completing profile, the profile instance in Main will be replaced and stored in storage.","lastModifiedDate":"2021-10-31"},{"lineNumber":90,"author":{"gitId":"tttyyzzz"},"content":"     */","lastModifiedDate":"2021-10-31"},{"lineNumber":91,"author":{"gitId":"tttyyzzz"},"content":"    private void createNewProfile() {","lastModifiedDate":"2021-10-31"},{"lineNumber":92,"author":{"gitId":"tttyyzzz"},"content":"        Profile newProfile \u003d new Profile();","lastModifiedDate":"2021-10-31"},{"lineNumber":93,"author":{"gitId":"tttyyzzz"},"content":"        ui.formatMessageWithTopDivider();","lastModifiedDate":"2021-10-31"},{"lineNumber":94,"author":{"gitId":"tttyyzzz"},"content":"        while (!newProfile.checkProfileComplete()) {","lastModifiedDate":"2021-10-31"},{"lineNumber":95,"author":{"gitId":"tttyyzzz"},"content":"            try {","lastModifiedDate":"2021-10-31"},{"lineNumber":96,"author":{"gitId":"tttyyzzz"},"content":"                createNewProfileName(newProfile);","lastModifiedDate":"2021-10-31"},{"lineNumber":97,"author":{"gitId":"tttyyzzz"},"content":"                createNewProfileHeight(newProfile);","lastModifiedDate":"2021-10-31"},{"lineNumber":98,"author":{"gitId":"tttyyzzz"},"content":"                createNewProfileWeight(newProfile);","lastModifiedDate":"2021-10-31"},{"lineNumber":99,"author":{"gitId":"tttyyzzz"},"content":"                createNewProfileGender(newProfile);","lastModifiedDate":"2021-10-31"},{"lineNumber":100,"author":{"gitId":"tttyyzzz"},"content":"                createNewProfileAge(newProfile);","lastModifiedDate":"2021-10-31"},{"lineNumber":101,"author":{"gitId":"tttyyzzz"},"content":"                createNewProfileCalorieGoal(newProfile);","lastModifiedDate":"2021-10-31"},{"lineNumber":102,"author":{"gitId":"tttyyzzz"},"content":"                createNewProfileActivityFactor(newProfile);","lastModifiedDate":"2021-10-31"},{"lineNumber":103,"author":{"gitId":"tttyyzzz"},"content":"            } catch (MissingParamException e) {","lastModifiedDate":"2021-11-03"},{"lineNumber":104,"author":{"gitId":"tttyyzzz"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2021-10-31"},{"lineNumber":105,"author":{"gitId":"tttyyzzz"},"content":"            }","lastModifiedDate":"2021-10-31"},{"lineNumber":106,"author":{"gitId":"tttyyzzz"},"content":"        }","lastModifiedDate":"2021-10-31"},{"lineNumber":107,"author":{"gitId":"tttyyzzz"},"content":"        this.profile \u003d newProfile;","lastModifiedDate":"2021-10-31"},{"lineNumber":108,"author":{"gitId":"tttyyzzz"},"content":"        try {","lastModifiedDate":"2021-10-31"},{"lineNumber":109,"author":{"gitId":"tttyyzzz"},"content":"            storageManager.saveProfile(this.profile);","lastModifiedDate":"2021-10-31"},{"lineNumber":110,"author":{"gitId":"tttyyzzz"},"content":"        } catch (UnableToWriteFileException e) {","lastModifiedDate":"2021-10-31"},{"lineNumber":111,"author":{"gitId":"tttyyzzz"},"content":"            ui.formatMessageFramedWithDivider(e.getMessage());","lastModifiedDate":"2021-10-31"},{"lineNumber":112,"author":{"gitId":"tttyyzzz"},"content":"        }","lastModifiedDate":"2021-10-31"},{"lineNumber":113,"author":{"gitId":"tttyyzzz"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":114,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":115,"author":{"gitId":"tttyyzzz"},"content":"    /**","lastModifiedDate":"2021-10-31"},{"lineNumber":116,"author":{"gitId":"tttyyzzz"},"content":"     * Creates a valid profile activity factor for the profile instance.","lastModifiedDate":"2021-10-31"},{"lineNumber":117,"author":{"gitId":"tttyyzzz"},"content":"     *","lastModifiedDate":"2021-10-31"},{"lineNumber":118,"author":{"gitId":"tttyyzzz"},"content":"     * @param newProfile instance of a profile class.","lastModifiedDate":"2021-10-31"},{"lineNumber":119,"author":{"gitId":"tttyyzzz"},"content":"     * @throws MissingParamException if user input a string of 0 characters.","lastModifiedDate":"2021-11-03"},{"lineNumber":120,"author":{"gitId":"tttyyzzz"},"content":"     */","lastModifiedDate":"2021-10-31"},{"lineNumber":121,"author":{"gitId":"tttyyzzz"},"content":"    private void createNewProfileActivityFactor(Profile newProfile) throws MissingParamException {","lastModifiedDate":"2021-11-03"},{"lineNumber":122,"author":{"gitId":"tttyyzzz"},"content":"        logger.log(Level.FINE,\"creating activity factor\");","lastModifiedDate":"2021-11-08"},{"lineNumber":123,"author":{"gitId":"tttyyzzz"},"content":"        newProfile.setProfileActivityFactor(new ActivityFactorCreator(ui).createActivityFactor());","lastModifiedDate":"2021-11-04"},{"lineNumber":124,"author":{"gitId":"tttyyzzz"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":125,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":126,"author":{"gitId":"tttyyzzz"},"content":"    /**","lastModifiedDate":"2021-10-31"},{"lineNumber":127,"author":{"gitId":"tttyyzzz"},"content":"     * Creates a valid profile calorie goal for the profile instance.","lastModifiedDate":"2021-10-31"},{"lineNumber":128,"author":{"gitId":"tttyyzzz"},"content":"     *","lastModifiedDate":"2021-10-31"},{"lineNumber":129,"author":{"gitId":"tttyyzzz"},"content":"     * @param newProfile instance of a profile class.","lastModifiedDate":"2021-10-31"},{"lineNumber":130,"author":{"gitId":"tttyyzzz"},"content":"     * @throws MissingParamException if user input a string of 0 characters.","lastModifiedDate":"2021-11-03"},{"lineNumber":131,"author":{"gitId":"tttyyzzz"},"content":"     */","lastModifiedDate":"2021-10-31"},{"lineNumber":132,"author":{"gitId":"tttyyzzz"},"content":"    private void createNewProfileCalorieGoal(Profile newProfile) throws MissingParamException {","lastModifiedDate":"2021-11-03"},{"lineNumber":133,"author":{"gitId":"tttyyzzz"},"content":"        logger.log(Level.FINE,\"creating calorie goal\");","lastModifiedDate":"2021-11-08"},{"lineNumber":134,"author":{"gitId":"tttyyzzz"},"content":"        newProfile.setProfileCalorieGoal(new CalorieGoalCreator(ui).createNewCalorieGoal());","lastModifiedDate":"2021-11-04"},{"lineNumber":135,"author":{"gitId":"tttyyzzz"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":136,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":137,"author":{"gitId":"tttyyzzz"},"content":"    /**","lastModifiedDate":"2021-10-31"},{"lineNumber":138,"author":{"gitId":"tttyyzzz"},"content":"     * Creates a valid profile age for the profile instance.","lastModifiedDate":"2021-10-31"},{"lineNumber":139,"author":{"gitId":"tttyyzzz"},"content":"     *","lastModifiedDate":"2021-10-31"},{"lineNumber":140,"author":{"gitId":"tttyyzzz"},"content":"     * @param newProfile instance of a profile class.","lastModifiedDate":"2021-10-31"},{"lineNumber":141,"author":{"gitId":"tttyyzzz"},"content":"     * @throws MissingParamException if user input a string of 0 characters.","lastModifiedDate":"2021-11-03"},{"lineNumber":142,"author":{"gitId":"tttyyzzz"},"content":"     */","lastModifiedDate":"2021-10-31"},{"lineNumber":143,"author":{"gitId":"tttyyzzz"},"content":"    private void createNewProfileAge(Profile newProfile) throws MissingParamException {","lastModifiedDate":"2021-11-03"},{"lineNumber":144,"author":{"gitId":"tttyyzzz"},"content":"        logger.log(Level.FINE,\"creating age\");","lastModifiedDate":"2021-11-08"},{"lineNumber":145,"author":{"gitId":"tttyyzzz"},"content":"        newProfile.setProfileAge(new AgeCreator(ui).createNewAge());","lastModifiedDate":"2021-11-04"},{"lineNumber":146,"author":{"gitId":"tttyyzzz"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":147,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":148,"author":{"gitId":"tttyyzzz"},"content":"    /**","lastModifiedDate":"2021-10-31"},{"lineNumber":149,"author":{"gitId":"tttyyzzz"},"content":"     * Creates a valid profile gender for the profile instance.","lastModifiedDate":"2021-10-31"},{"lineNumber":150,"author":{"gitId":"tttyyzzz"},"content":"     *","lastModifiedDate":"2021-10-31"},{"lineNumber":151,"author":{"gitId":"tttyyzzz"},"content":"     * @param newProfile instance of a profile class.","lastModifiedDate":"2021-10-31"},{"lineNumber":152,"author":{"gitId":"tttyyzzz"},"content":"     */","lastModifiedDate":"2021-10-31"},{"lineNumber":153,"author":{"gitId":"tttyyzzz"},"content":"    private void createNewProfileGender(Profile newProfile) throws MissingParamException {","lastModifiedDate":"2021-11-03"},{"lineNumber":154,"author":{"gitId":"tttyyzzz"},"content":"        logger.log(Level.FINE,\"creating gender\");","lastModifiedDate":"2021-11-08"},{"lineNumber":155,"author":{"gitId":"tttyyzzz"},"content":"        newProfile.setProfileGender(new GenderCreator(ui).createNewGender());","lastModifiedDate":"2021-11-04"},{"lineNumber":156,"author":{"gitId":"tttyyzzz"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":157,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":158,"author":{"gitId":"tttyyzzz"},"content":"    /**","lastModifiedDate":"2021-10-31"},{"lineNumber":159,"author":{"gitId":"tttyyzzz"},"content":"     * Creates a valid profile weight for the profile instance.","lastModifiedDate":"2021-10-31"},{"lineNumber":160,"author":{"gitId":"tttyyzzz"},"content":"     *","lastModifiedDate":"2021-10-31"},{"lineNumber":161,"author":{"gitId":"tttyyzzz"},"content":"     * @param newProfile instance of a profile class.","lastModifiedDate":"2021-10-31"},{"lineNumber":162,"author":{"gitId":"tttyyzzz"},"content":"     * @throws MissingParamException if user input a string of 0 characters.","lastModifiedDate":"2021-11-03"},{"lineNumber":163,"author":{"gitId":"tttyyzzz"},"content":"     */","lastModifiedDate":"2021-10-31"},{"lineNumber":164,"author":{"gitId":"tttyyzzz"},"content":"    private void createNewProfileWeight(Profile newProfile) throws MissingParamException {","lastModifiedDate":"2021-11-03"},{"lineNumber":165,"author":{"gitId":"tttyyzzz"},"content":"        logger.log(Level.FINE,\"crating weight\");","lastModifiedDate":"2021-11-08"},{"lineNumber":166,"author":{"gitId":"tttyyzzz"},"content":"        newProfile.setProfileWeight(new WeightCreator(ui).createNewWeight());","lastModifiedDate":"2021-11-04"},{"lineNumber":167,"author":{"gitId":"tttyyzzz"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":168,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":169,"author":{"gitId":"tttyyzzz"},"content":"    /**","lastModifiedDate":"2021-10-31"},{"lineNumber":170,"author":{"gitId":"tttyyzzz"},"content":"     * Creates a valid profile height for the profile instance.","lastModifiedDate":"2021-10-31"},{"lineNumber":171,"author":{"gitId":"tttyyzzz"},"content":"     *","lastModifiedDate":"2021-10-31"},{"lineNumber":172,"author":{"gitId":"tttyyzzz"},"content":"     * @param newProfile instance of a profile class.","lastModifiedDate":"2021-10-31"},{"lineNumber":173,"author":{"gitId":"tttyyzzz"},"content":"     * @throws MissingParamException if user input a string of 0 characters.","lastModifiedDate":"2021-11-03"},{"lineNumber":174,"author":{"gitId":"tttyyzzz"},"content":"     */","lastModifiedDate":"2021-10-31"},{"lineNumber":175,"author":{"gitId":"tttyyzzz"},"content":"    private void createNewProfileHeight(Profile newProfile) throws MissingParamException {","lastModifiedDate":"2021-11-03"},{"lineNumber":176,"author":{"gitId":"tttyyzzz"},"content":"        logger.log(Level.FINE,\"creating height\");","lastModifiedDate":"2021-11-08"},{"lineNumber":177,"author":{"gitId":"tttyyzzz"},"content":"        newProfile.setProfileHeight(new HeightCreator(ui).createNewHeight());","lastModifiedDate":"2021-11-04"},{"lineNumber":178,"author":{"gitId":"tttyyzzz"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":179,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":180,"author":{"gitId":"tttyyzzz"},"content":"    /**","lastModifiedDate":"2021-10-31"},{"lineNumber":181,"author":{"gitId":"tttyyzzz"},"content":"     * Creates a valid profile name for the profile instance.","lastModifiedDate":"2021-10-31"},{"lineNumber":182,"author":{"gitId":"tttyyzzz"},"content":"     *","lastModifiedDate":"2021-10-31"},{"lineNumber":183,"author":{"gitId":"tttyyzzz"},"content":"     * @param newProfile instance of a profile class.","lastModifiedDate":"2021-10-31"},{"lineNumber":184,"author":{"gitId":"tttyyzzz"},"content":"     * @throws MissingParamException if user input a string of 0 characters.","lastModifiedDate":"2021-11-03"},{"lineNumber":185,"author":{"gitId":"tttyyzzz"},"content":"     */","lastModifiedDate":"2021-10-31"},{"lineNumber":186,"author":{"gitId":"tttyyzzz"},"content":"    private void createNewProfileName(Profile newProfile) throws MissingParamException {","lastModifiedDate":"2021-11-03"},{"lineNumber":187,"author":{"gitId":"tttyyzzz"},"content":"        logger.log(Level.FINE,\"crating name\");","lastModifiedDate":"2021-11-08"},{"lineNumber":188,"author":{"gitId":"tttyyzzz"},"content":"        newProfile.setProfileName(new NameCreator(ui).createNewName());","lastModifiedDate":"2021-11-04"},{"lineNumber":189,"author":{"gitId":"tttyyzzz"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":190,"author":{"gitId":"tttyyzzz"},"content":"}","lastModifiedDate":"2021-10-31"}],"authorContributionMap":{"tttyyzzz":188,"tlyi":2}},{"path":"src/main/java/seedu/duke/state/WeightCreator.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.state;","lastModifiedDate":"2021-11-07"},{"lineNumber":2,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":3,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":4,"author":{"gitId":"tttyyzzz"},"content":"import seedu.duke.data.profile.attributes.Weight;","lastModifiedDate":"2021-10-31"},{"lineNumber":5,"author":{"gitId":"tttyyzzz"},"content":"import seedu.duke.data.profile.utilities.ProfileUtils;","lastModifiedDate":"2021-10-31"},{"lineNumber":6,"author":{"gitId":"tlyi"},"content":"import seedu.duke.logic.parser.exceptions.MissingParamException;","lastModifiedDate":"2021-11-03"},{"lineNumber":7,"author":{"gitId":"tttyyzzz"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2021-10-31"},{"lineNumber":8,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":9,"author":{"gitId":"tttyyzzz"},"content":"/**","lastModifiedDate":"2021-11-01"},{"lineNumber":10,"author":{"gitId":"tttyyzzz"},"content":" * Creates a Weight Class and prompts user for valid weight input.","lastModifiedDate":"2021-11-01"},{"lineNumber":11,"author":{"gitId":"tttyyzzz"},"content":" */","lastModifiedDate":"2021-11-01"},{"lineNumber":12,"author":{"gitId":"tttyyzzz"},"content":"public class WeightCreator extends AttributeCreator {","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":14,"author":{"gitId":"tttyyzzz"},"content":"    public static final String MESSAGE_INTRO_WEIGHT \u003d \"What\u0027s your weight? (in kg)\";","lastModifiedDate":"2021-10-31"},{"lineNumber":15,"author":{"gitId":"tttyyzzz"},"content":"    public static final String MESSAGE_WEIGHT \u003d \"Your weight is %skg.\";","lastModifiedDate":"2021-10-31"},{"lineNumber":16,"author":{"gitId":"tttyyzzz"},"content":"    public static final String MESSAGE_INVALID_WEIGHT_INPUT \u003d \"Invalid input, please input a valid positive number\";","lastModifiedDate":"2021-11-07"},{"lineNumber":17,"author":{"gitId":"tttyyzzz"},"content":"    private Weight weight \u003d new Weight();","lastModifiedDate":"2021-10-31"},{"lineNumber":18,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":19,"author":{"gitId":"tttyyzzz"},"content":"    public WeightCreator(Ui ui) {","lastModifiedDate":"2021-11-04"},{"lineNumber":20,"author":{"gitId":"tttyyzzz"},"content":"        super(ui);","lastModifiedDate":"2021-11-03"},{"lineNumber":21,"author":{"gitId":"tttyyzzz"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":22,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":23,"author":{"gitId":"tttyyzzz"},"content":"    /**","lastModifiedDate":"2021-10-31"},{"lineNumber":24,"author":{"gitId":"tttyyzzz"},"content":"     * Creates a valid profile weight for the profile instance.","lastModifiedDate":"2021-10-31"},{"lineNumber":25,"author":{"gitId":"tttyyzzz"},"content":"     *","lastModifiedDate":"2021-10-31"},{"lineNumber":26,"author":{"gitId":"tlyi"},"content":"     * @throws MissingParamException if user input a string of 0 characters.","lastModifiedDate":"2021-11-03"},{"lineNumber":27,"author":{"gitId":"tttyyzzz"},"content":"     */","lastModifiedDate":"2021-10-31"},{"lineNumber":28,"author":{"gitId":"tlyi"},"content":"    public Weight createNewWeight() throws MissingParamException {","lastModifiedDate":"2021-11-03"},{"lineNumber":29,"author":{"gitId":"tttyyzzz"},"content":"        while (!weight.isValid()) {","lastModifiedDate":"2021-10-31"},{"lineNumber":30,"author":{"gitId":"tttyyzzz"},"content":"            ui.formatMessageWithBottomDivider(MESSAGE_INTRO_WEIGHT);","lastModifiedDate":"2021-10-31"},{"lineNumber":31,"author":{"gitId":"tttyyzzz"},"content":"            try {","lastModifiedDate":"2021-10-31"},{"lineNumber":32,"author":{"gitId":"tttyyzzz"},"content":"                String userInput \u003d ui.getUserInput();","lastModifiedDate":"2021-10-31"},{"lineNumber":33,"author":{"gitId":"tttyyzzz"},"content":"                setWeight(userInput);","lastModifiedDate":"2021-11-07"},{"lineNumber":34,"author":{"gitId":"tttyyzzz"},"content":"                checkWeight();","lastModifiedDate":"2021-11-07"},{"lineNumber":35,"author":{"gitId":"tttyyzzz"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2021-11-07"},{"lineNumber":36,"author":{"gitId":"tttyyzzz"},"content":"                ui.formatMessageWithTopDivider(MESSAGE_INVALID_WEIGHT_INPUT);","lastModifiedDate":"2021-11-07"},{"lineNumber":37,"author":{"gitId":"tttyyzzz"},"content":"            }","lastModifiedDate":"2021-11-07"},{"lineNumber":38,"author":{"gitId":"tttyyzzz"},"content":"        }","lastModifiedDate":"2021-11-07"},{"lineNumber":39,"author":{"gitId":"tttyyzzz"},"content":"        return weight;","lastModifiedDate":"2021-11-07"},{"lineNumber":40,"author":{"gitId":"tttyyzzz"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":41,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":42,"author":{"gitId":"tttyyzzz"},"content":"    private void checkWeight() {","lastModifiedDate":"2021-11-07"},{"lineNumber":43,"author":{"gitId":"tttyyzzz"},"content":"        if (weight.isValid()) {","lastModifiedDate":"2021-10-31"},{"lineNumber":44,"author":{"gitId":"tttyyzzz"},"content":"            ui.formatMessageWithTopDivider(","lastModifiedDate":"2021-10-31"},{"lineNumber":45,"author":{"gitId":"tttyyzzz"},"content":"                    String.format(MESSAGE_WEIGHT,","lastModifiedDate":"2021-10-31"},{"lineNumber":46,"author":{"gitId":"tttyyzzz"},"content":"                            weight.getWeight()));","lastModifiedDate":"2021-10-31"},{"lineNumber":47,"author":{"gitId":"tttyyzzz"},"content":"        } else {","lastModifiedDate":"2021-10-31"},{"lineNumber":48,"author":{"gitId":"tttyyzzz"},"content":"            ui.formatMessageFramedWithDivider(ProfileUtils.ERROR_WEIGHT);","lastModifiedDate":"2021-10-31"},{"lineNumber":49,"author":{"gitId":"tttyyzzz"},"content":"        }","lastModifiedDate":"2021-10-31"},{"lineNumber":50,"author":{"gitId":"tttyyzzz"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":51,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":52,"author":{"gitId":"tttyyzzz"},"content":"    private void setWeight(String userInput) throws MissingParamException {","lastModifiedDate":"2021-11-07"},{"lineNumber":53,"author":{"gitId":"tttyyzzz"},"content":"        ui.checkEmptyUserInput(userInput);","lastModifiedDate":"2021-11-07"},{"lineNumber":54,"author":{"gitId":"tttyyzzz"},"content":"        confirmInputBye(userInput);","lastModifiedDate":"2021-11-07"},{"lineNumber":55,"author":{"gitId":"tttyyzzz"},"content":"        double weightInput \u003d Double.parseDouble(userInput);","lastModifiedDate":"2021-11-07"},{"lineNumber":56,"author":{"gitId":"tttyyzzz"},"content":"        weight.setWeight(weightInput);","lastModifiedDate":"2021-11-07"},{"lineNumber":57,"author":{"gitId":"tttyyzzz"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":58,"author":{"gitId":"tttyyzzz"},"content":"}","lastModifiedDate":"2021-10-31"}],"authorContributionMap":{"tttyyzzz":54,"tlyi":4}},{"path":"src/main/java/seedu/duke/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weidak"},"content":"package seedu.duke.storage;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"weidak"},"content":"import seedu.duke.data.DataManager;","lastModifiedDate":"2021-11-07"},{"lineNumber":4,"author":{"gitId":"weidak"},"content":"import seedu.duke.storage.data.exercise.exercisebank.ExerciseBankStorage;","lastModifiedDate":"2021-11-07"},{"lineNumber":5,"author":{"gitId":"weidak"},"content":"import seedu.duke.storage.data.exercise.exerciselist.ExerciseListStorage;","lastModifiedDate":"2021-11-07"},{"lineNumber":6,"author":{"gitId":"weidak"},"content":"import seedu.duke.storage.data.exercise.futurelist.UpcomingStorage;","lastModifiedDate":"2021-11-07"},{"lineNumber":7,"author":{"gitId":"weidak"},"content":"import seedu.duke.storage.data.food.foodbank.FoodBankStorage;","lastModifiedDate":"2021-11-07"},{"lineNumber":8,"author":{"gitId":"weidak"},"content":"import seedu.duke.storage.data.food.foodlist.FoodListStorage;","lastModifiedDate":"2021-11-07"},{"lineNumber":9,"author":{"gitId":"weidak"},"content":"import seedu.duke.storage.data.profile.ProfileStorage;","lastModifiedDate":"2021-11-07"},{"lineNumber":10,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"weidak"},"content":"/**","lastModifiedDate":"2021-11-07"},{"lineNumber":12,"author":{"gitId":"weidak"},"content":" * API of the Storage component.","lastModifiedDate":"2021-11-08"},{"lineNumber":13,"author":{"gitId":"weidak"},"content":" */","lastModifiedDate":"2021-11-07"},{"lineNumber":14,"author":{"gitId":"weidak"},"content":"public interface Storage extends ProfileStorage, FoodListStorage, ExerciseListStorage,","lastModifiedDate":"2021-11-07"},{"lineNumber":15,"author":{"gitId":"weidak"},"content":"        UpcomingStorage, FoodBankStorage, ExerciseBankStorage {","lastModifiedDate":"2021-11-07"},{"lineNumber":16,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"weidak"},"content":"    String FILE_TEXT_DELIMITER \u003d \"\\\\|\";","lastModifiedDate":"2021-11-07"},{"lineNumber":18,"author":{"gitId":"weidak"},"content":"    String FILEPATH \u003d \"./data/\";","lastModifiedDate":"2021-11-07"},{"lineNumber":19,"author":{"gitId":"weidak"},"content":"    String FILENAME_PROFILE \u003d \"profile.txt\";","lastModifiedDate":"2021-11-07"},{"lineNumber":20,"author":{"gitId":"weidak"},"content":"    String FILEPATH_PROFILE \u003d FILEPATH + FILENAME_PROFILE;","lastModifiedDate":"2021-11-07"},{"lineNumber":21,"author":{"gitId":"weidak"},"content":"    String FILENAME_BANK_FOOD \u003d \"food_bank.txt\";","lastModifiedDate":"2021-11-07"},{"lineNumber":22,"author":{"gitId":"weidak"},"content":"    String FILEPATH_BANK_FOOD \u003d FILEPATH + FILENAME_BANK_FOOD;","lastModifiedDate":"2021-11-07"},{"lineNumber":23,"author":{"gitId":"weidak"},"content":"    String FILENAME_LIST_FOOD \u003d \"food_list.txt\";","lastModifiedDate":"2021-11-07"},{"lineNumber":24,"author":{"gitId":"weidak"},"content":"    String FILEPATH_LIST_FOOD \u003d FILEPATH + FILENAME_LIST_FOOD;","lastModifiedDate":"2021-11-07"},{"lineNumber":25,"author":{"gitId":"weidak"},"content":"    String FILENAME_BANK_EXERCISE \u003d \"exercise_bank.txt\";","lastModifiedDate":"2021-11-07"},{"lineNumber":26,"author":{"gitId":"weidak"},"content":"    String FILEPATH_BANK_EXERCISE \u003d FILEPATH + FILENAME_BANK_EXERCISE;","lastModifiedDate":"2021-11-07"},{"lineNumber":27,"author":{"gitId":"weidak"},"content":"    String FILENAME_LIST_EXERCISE \u003d \"exercise_list.txt\";","lastModifiedDate":"2021-11-07"},{"lineNumber":28,"author":{"gitId":"weidak"},"content":"    String FILEPATH_LIST_EXERCISE \u003d FILEPATH + FILENAME_LIST_EXERCISE;","lastModifiedDate":"2021-11-07"},{"lineNumber":29,"author":{"gitId":"weidak"},"content":"    String FILENAME_LIST_FUTURE \u003d \"future_list.txt\";","lastModifiedDate":"2021-11-07"},{"lineNumber":30,"author":{"gitId":"weidak"},"content":"    String FILEPATH_LIST_FUTURE \u003d FILEPATH + FILENAME_LIST_FUTURE;","lastModifiedDate":"2021-11-07"},{"lineNumber":31,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-11-07"},{"lineNumber":33,"author":{"gitId":"weidak"},"content":"     * Loads all the data into the DataManager object.","lastModifiedDate":"2021-11-07"},{"lineNumber":34,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-11-07"},{"lineNumber":35,"author":{"gitId":"weidak"},"content":"     * @return DataManager containing data loaded from storage","lastModifiedDate":"2021-11-07"},{"lineNumber":36,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-11-07"},{"lineNumber":37,"author":{"gitId":"weidak"},"content":"    DataManager loadAll();","lastModifiedDate":"2021-11-07"},{"lineNumber":38,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":39,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-11-07"},{"lineNumber":40,"author":{"gitId":"weidak"},"content":"     * Saves all the data in the DataManager object.","lastModifiedDate":"2021-11-07"},{"lineNumber":41,"author":{"gitId":"weidak"},"content":"     * Usually used when exiting the program.","lastModifiedDate":"2021-11-07"},{"lineNumber":42,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-11-07"},{"lineNumber":43,"author":{"gitId":"weidak"},"content":"     * @param dataManager DataManager containing the data to be saved","lastModifiedDate":"2021-11-07"},{"lineNumber":44,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-11-07"},{"lineNumber":45,"author":{"gitId":"weidak"},"content":"    void saveAll(DataManager dataManager);","lastModifiedDate":"2021-11-07"},{"lineNumber":46,"author":{"gitId":"weidak"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"weidak":46}},{"path":"src/main/java/seedu/duke/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weidak"},"content":"package seedu.duke.storage;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"weidak"},"content":"import seedu.duke.data.DataManager;","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"tlyi"},"content":"import seedu.duke.data.item.ItemBank;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"tlyi"},"content":"import seedu.duke.data.item.exercise.ExerciseList;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"tlyi"},"content":"import seedu.duke.data.item.exercise.FutureExerciseList;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"tlyi"},"content":"import seedu.duke.data.item.food.FoodList;","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"tlyi"},"content":"import seedu.duke.data.profile.Profile;","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"weidak"},"content":"import seedu.duke.storage.data.exercise.exercisebank.ExerciseBankStorage;","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"weidak"},"content":"import seedu.duke.storage.data.exercise.exercisebank.ExerciseBankStorageUtils;","lastModifiedDate":"2021-11-07"},{"lineNumber":11,"author":{"gitId":"weidak"},"content":"import seedu.duke.storage.data.exercise.exerciselist.ExerciseListStorageUtils;","lastModifiedDate":"2021-11-07"},{"lineNumber":12,"author":{"gitId":"tlyi"},"content":"import seedu.duke.storage.data.exercise.exerciselist.ExerciseListStorage;","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"weidak"},"content":"import seedu.duke.storage.data.exercise.futurelist.FutureExerciseListStorageUtils;","lastModifiedDate":"2021-11-07"},{"lineNumber":14,"author":{"gitId":"weidak"},"content":"import seedu.duke.storage.data.exercise.futurelist.UpcomingStorage;","lastModifiedDate":"2021-11-07"},{"lineNumber":15,"author":{"gitId":"weidak"},"content":"import seedu.duke.storage.data.food.foodbank.FoodBankStorage;","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"weidak"},"content":"import seedu.duke.storage.data.food.foodbank.FoodBankStorageUtils;","lastModifiedDate":"2021-11-07"},{"lineNumber":17,"author":{"gitId":"weidak"},"content":"import seedu.duke.storage.data.food.foodlist.FoodListStorage;","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"weidak"},"content":"import seedu.duke.storage.data.food.foodlist.FoodListStorageUtils;","lastModifiedDate":"2021-11-07"},{"lineNumber":19,"author":{"gitId":"weidak"},"content":"import seedu.duke.storage.data.profile.ProfileStorage;","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"weidak"},"content":"import seedu.duke.storage.data.profile.ProfileStorageUtils;","lastModifiedDate":"2021-11-07"},{"lineNumber":21,"author":{"gitId":"tlyi"},"content":"import seedu.duke.storage.exceptions.UnableToReadFileException;","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"tlyi"},"content":"import seedu.duke.storage.exceptions.UnableToWriteFileException;","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"weidak"},"content":"/**","lastModifiedDate":"2021-10-30"},{"lineNumber":25,"author":{"gitId":"weidak"},"content":" * Manages the loading and saving from various storage subclasses.","lastModifiedDate":"2021-10-30"},{"lineNumber":26,"author":{"gitId":"weidak"},"content":" */","lastModifiedDate":"2021-10-30"},{"lineNumber":27,"author":{"gitId":"weidak"},"content":"public class StorageManager implements Storage {","lastModifiedDate":"2021-11-07"},{"lineNumber":28,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"weidak"},"content":"    private final ProfileStorage profileStorage;","lastModifiedDate":"2021-11-02"},{"lineNumber":30,"author":{"gitId":"weidak"},"content":"    private final ExerciseListStorage exerciseListStorage;","lastModifiedDate":"2021-11-02"},{"lineNumber":31,"author":{"gitId":"weidak"},"content":"    private final FoodListStorage foodListStorage;","lastModifiedDate":"2021-11-02"},{"lineNumber":32,"author":{"gitId":"weidak"},"content":"    private final UpcomingStorage futureExerciseListStorage;","lastModifiedDate":"2021-11-07"},{"lineNumber":33,"author":{"gitId":"weidak"},"content":"    private final FoodBankStorage foodBankStorage;","lastModifiedDate":"2021-11-02"},{"lineNumber":34,"author":{"gitId":"weidak"},"content":"    private final ExerciseBankStorage exerciseBankStorage;","lastModifiedDate":"2021-11-02"},{"lineNumber":35,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":36,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-11-07"},{"lineNumber":37,"author":{"gitId":"weidak"},"content":"     * Constructor for the StorageManager object.","lastModifiedDate":"2021-11-07"},{"lineNumber":38,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-11-07"},{"lineNumber":39,"author":{"gitId":"weidak"},"content":"    public StorageManager() {","lastModifiedDate":"2021-10-27"},{"lineNumber":40,"author":{"gitId":"weidak"},"content":"        this.profileStorage \u003d new ProfileStorageUtils(Storage.FILEPATH_PROFILE);","lastModifiedDate":"2021-11-07"},{"lineNumber":41,"author":{"gitId":"weidak"},"content":"        this.exerciseListStorage \u003d new ExerciseListStorageUtils(Storage.FILEPATH_LIST_EXERCISE);","lastModifiedDate":"2021-11-07"},{"lineNumber":42,"author":{"gitId":"weidak"},"content":"        this.foodListStorage \u003d new FoodListStorageUtils(Storage.FILEPATH_LIST_FOOD);","lastModifiedDate":"2021-11-07"},{"lineNumber":43,"author":{"gitId":"weidak"},"content":"        this.futureExerciseListStorage \u003d new FutureExerciseListStorageUtils(Storage.FILEPATH_LIST_FUTURE);","lastModifiedDate":"2021-11-07"},{"lineNumber":44,"author":{"gitId":"weidak"},"content":"        this.foodBankStorage \u003d new FoodBankStorageUtils(Storage.FILEPATH_BANK_FOOD);","lastModifiedDate":"2021-11-07"},{"lineNumber":45,"author":{"gitId":"weidak"},"content":"        this.exerciseBankStorage \u003d new ExerciseBankStorageUtils(Storage.FILEPATH_BANK_EXERCISE);","lastModifiedDate":"2021-11-07"},{"lineNumber":46,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":47,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":48,"author":{"gitId":"weidak"},"content":"    @Override","lastModifiedDate":"2021-11-07"},{"lineNumber":49,"author":{"gitId":"weidak"},"content":"    public DataManager loadAll() {","lastModifiedDate":"2021-11-02"},{"lineNumber":50,"author":{"gitId":"weidak"},"content":"        return new DataManager(","lastModifiedDate":"2021-10-27"},{"lineNumber":51,"author":{"gitId":"weidak"},"content":"                loadExerciseList(),","lastModifiedDate":"2021-10-27"},{"lineNumber":52,"author":{"gitId":"weidak"},"content":"                loadFutureExerciseList(),","lastModifiedDate":"2021-10-27"},{"lineNumber":53,"author":{"gitId":"weidak"},"content":"                loadFoodList(),","lastModifiedDate":"2021-10-27"},{"lineNumber":54,"author":{"gitId":"weidak"},"content":"                loadExerciseBank(),","lastModifiedDate":"2021-10-27"},{"lineNumber":55,"author":{"gitId":"weidak"},"content":"                loadFoodBank(),","lastModifiedDate":"2021-10-27"},{"lineNumber":56,"author":{"gitId":"weidak"},"content":"                loadProfile());","lastModifiedDate":"2021-10-27"},{"lineNumber":57,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":58,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":59,"author":{"gitId":"weidak"},"content":"    @Override","lastModifiedDate":"2021-11-07"},{"lineNumber":60,"author":{"gitId":"tlyi"},"content":"    public void saveAll(DataManager dataManager) {","lastModifiedDate":"2021-11-04"},{"lineNumber":61,"author":{"gitId":"tlyi"},"content":"        try {","lastModifiedDate":"2021-11-04"},{"lineNumber":62,"author":{"gitId":"tlyi"},"content":"            saveProfile(dataManager.getProfile());","lastModifiedDate":"2021-10-27"},{"lineNumber":63,"author":{"gitId":"tlyi"},"content":"            saveExerciseList(dataManager.getExerciseItems());","lastModifiedDate":"2021-10-27"},{"lineNumber":64,"author":{"gitId":"tlyi"},"content":"            saveFoodList(dataManager.getFoodItems());","lastModifiedDate":"2021-10-27"},{"lineNumber":65,"author":{"gitId":"tlyi"},"content":"            saveFutureExerciseList(dataManager.getFutureExerciseItems());","lastModifiedDate":"2021-10-27"},{"lineNumber":66,"author":{"gitId":"tlyi"},"content":"            saveFoodBank(dataManager.getFoodBank());","lastModifiedDate":"2021-10-27"},{"lineNumber":67,"author":{"gitId":"tlyi"},"content":"            saveExerciseBank(dataManager.getExerciseBank());","lastModifiedDate":"2021-10-27"},{"lineNumber":68,"author":{"gitId":"tlyi"},"content":"        } catch (UnableToWriteFileException e) {","lastModifiedDate":"2021-11-04"},{"lineNumber":69,"author":{"gitId":"tlyi"},"content":"            System.out.println(\"Fitbot was unable to save all your session data. :(\");","lastModifiedDate":"2021-11-04"},{"lineNumber":70,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":71,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":72,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":73,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":74,"author":{"gitId":"weidak"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Profile Methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-25"},{"lineNumber":75,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":76,"author":{"gitId":"weidak"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":77,"author":{"gitId":"weidak"},"content":"    public Profile loadProfile() {","lastModifiedDate":"2021-11-02"},{"lineNumber":78,"author":{"gitId":"weidak"},"content":"        try {","lastModifiedDate":"2021-11-02"},{"lineNumber":79,"author":{"gitId":"weidak"},"content":"            return profileStorage.loadProfile();","lastModifiedDate":"2021-10-24"},{"lineNumber":80,"author":{"gitId":"weidak"},"content":"        } catch (UnableToReadFileException e) {","lastModifiedDate":"2021-11-02"},{"lineNumber":81,"author":{"gitId":"weidak"},"content":"            return new Profile();","lastModifiedDate":"2021-11-02"},{"lineNumber":82,"author":{"gitId":"weidak"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":83,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":84,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":85,"author":{"gitId":"weidak"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":86,"author":{"gitId":"weidak"},"content":"    public void saveProfile(Profile profile) throws UnableToWriteFileException {","lastModifiedDate":"2021-10-25"},{"lineNumber":87,"author":{"gitId":"weidak"},"content":"        profileStorage.saveProfile(profile);","lastModifiedDate":"2021-10-25"},{"lineNumber":88,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":89,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":90,"author":{"gitId":"weidak"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d ExerciseList Methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-25"},{"lineNumber":91,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":92,"author":{"gitId":"weidak"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":93,"author":{"gitId":"weidak"},"content":"    public ExerciseList loadExerciseList() {","lastModifiedDate":"2021-11-02"},{"lineNumber":94,"author":{"gitId":"weidak"},"content":"        try {","lastModifiedDate":"2021-11-02"},{"lineNumber":95,"author":{"gitId":"weidak"},"content":"            return exerciseListStorage.loadExerciseList();","lastModifiedDate":"2021-10-25"},{"lineNumber":96,"author":{"gitId":"weidak"},"content":"        } catch (UnableToReadFileException e) {","lastModifiedDate":"2021-11-02"},{"lineNumber":97,"author":{"gitId":"weidak"},"content":"            return new ExerciseList();","lastModifiedDate":"2021-11-02"},{"lineNumber":98,"author":{"gitId":"weidak"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":99,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":100,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":101,"author":{"gitId":"weidak"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":102,"author":{"gitId":"weidak"},"content":"    public void saveExerciseList(ExerciseList exerciseList) throws UnableToWriteFileException {","lastModifiedDate":"2021-10-25"},{"lineNumber":103,"author":{"gitId":"weidak"},"content":"        exerciseListStorage.saveExerciseList(exerciseList);","lastModifiedDate":"2021-10-25"},{"lineNumber":104,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":105,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":106,"author":{"gitId":"weidak"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d FutureExerciseList Methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-25"},{"lineNumber":107,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":108,"author":{"gitId":"weidak"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":109,"author":{"gitId":"weidak"},"content":"    public FutureExerciseList loadFutureExerciseList() {","lastModifiedDate":"2021-11-02"},{"lineNumber":110,"author":{"gitId":"weidak"},"content":"        try {","lastModifiedDate":"2021-11-02"},{"lineNumber":111,"author":{"gitId":"weidak"},"content":"            return futureExerciseListStorage.loadFutureExerciseList();","lastModifiedDate":"2021-10-25"},{"lineNumber":112,"author":{"gitId":"weidak"},"content":"        } catch (UnableToReadFileException e) {","lastModifiedDate":"2021-11-02"},{"lineNumber":113,"author":{"gitId":"weidak"},"content":"            return new FutureExerciseList();","lastModifiedDate":"2021-11-02"},{"lineNumber":114,"author":{"gitId":"weidak"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":115,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":116,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":117,"author":{"gitId":"weidak"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":118,"author":{"gitId":"weidak"},"content":"    public void saveFutureExerciseList(FutureExerciseList futureExerciseList) throws UnableToWriteFileException {","lastModifiedDate":"2021-10-25"},{"lineNumber":119,"author":{"gitId":"weidak"},"content":"        futureExerciseListStorage.saveFutureExerciseList(futureExerciseList);","lastModifiedDate":"2021-10-25"},{"lineNumber":120,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":121,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":122,"author":{"gitId":"weidak"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d FoodList Methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-25"},{"lineNumber":123,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":124,"author":{"gitId":"weidak"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":125,"author":{"gitId":"weidak"},"content":"    public FoodList loadFoodList() {","lastModifiedDate":"2021-11-02"},{"lineNumber":126,"author":{"gitId":"weidak"},"content":"        try {","lastModifiedDate":"2021-11-02"},{"lineNumber":127,"author":{"gitId":"weidak"},"content":"            return foodListStorage.loadFoodList();","lastModifiedDate":"2021-10-25"},{"lineNumber":128,"author":{"gitId":"weidak"},"content":"        } catch (UnableToReadFileException e) {","lastModifiedDate":"2021-11-02"},{"lineNumber":129,"author":{"gitId":"weidak"},"content":"            return new FoodList();","lastModifiedDate":"2021-11-02"},{"lineNumber":130,"author":{"gitId":"weidak"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":131,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":132,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":133,"author":{"gitId":"weidak"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":134,"author":{"gitId":"weidak"},"content":"    public void saveFoodList(FoodList foodList) throws UnableToWriteFileException {","lastModifiedDate":"2021-10-25"},{"lineNumber":135,"author":{"gitId":"weidak"},"content":"        foodListStorage.saveFoodList(foodList);","lastModifiedDate":"2021-10-25"},{"lineNumber":136,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":137,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":138,"author":{"gitId":"weidak"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d ExerciseBank Methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-25"},{"lineNumber":139,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":140,"author":{"gitId":"weidak"},"content":"    @Override","lastModifiedDate":"2021-10-27"},{"lineNumber":141,"author":{"gitId":"weidak"},"content":"    public ItemBank loadExerciseBank() {","lastModifiedDate":"2021-11-02"},{"lineNumber":142,"author":{"gitId":"weidak"},"content":"        try {","lastModifiedDate":"2021-11-02"},{"lineNumber":143,"author":{"gitId":"weidak"},"content":"            return exerciseBankStorage.loadExerciseBank();","lastModifiedDate":"2021-10-25"},{"lineNumber":144,"author":{"gitId":"weidak"},"content":"        } catch (UnableToReadFileException e) {","lastModifiedDate":"2021-11-02"},{"lineNumber":145,"author":{"gitId":"weidak"},"content":"            return new ItemBank();","lastModifiedDate":"2021-11-02"},{"lineNumber":146,"author":{"gitId":"weidak"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":147,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":148,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":149,"author":{"gitId":"weidak"},"content":"    @Override","lastModifiedDate":"2021-10-27"},{"lineNumber":150,"author":{"gitId":"weidak"},"content":"    public void saveExerciseBank(ItemBank exerciseBank) throws UnableToWriteFileException {","lastModifiedDate":"2021-10-25"},{"lineNumber":151,"author":{"gitId":"weidak"},"content":"        exerciseBankStorage.saveExerciseBank(exerciseBank);","lastModifiedDate":"2021-10-25"},{"lineNumber":152,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":153,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":154,"author":{"gitId":"weidak"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d FoodBank Methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-25"},{"lineNumber":155,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":156,"author":{"gitId":"weidak"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":157,"author":{"gitId":"weidak"},"content":"    public ItemBank loadFoodBank() {","lastModifiedDate":"2021-11-02"},{"lineNumber":158,"author":{"gitId":"weidak"},"content":"        try {","lastModifiedDate":"2021-11-02"},{"lineNumber":159,"author":{"gitId":"weidak"},"content":"            return foodBankStorage.loadFoodBank();","lastModifiedDate":"2021-10-25"},{"lineNumber":160,"author":{"gitId":"weidak"},"content":"        } catch (UnableToReadFileException e) {","lastModifiedDate":"2021-11-02"},{"lineNumber":161,"author":{"gitId":"weidak"},"content":"            return new ItemBank();","lastModifiedDate":"2021-11-02"},{"lineNumber":162,"author":{"gitId":"weidak"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":163,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":164,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":165,"author":{"gitId":"weidak"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":166,"author":{"gitId":"weidak"},"content":"    public void saveFoodBank(ItemBank foodBank) throws UnableToWriteFileException {","lastModifiedDate":"2021-10-20"},{"lineNumber":167,"author":{"gitId":"weidak"},"content":"        foodBankStorage.saveFoodBank(foodBank);","lastModifiedDate":"2021-10-20"},{"lineNumber":168,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":169,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":170,"author":{"gitId":"weidak"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"weidak":151,"tlyi":19}},{"path":"src/main/java/seedu/duke/storage/StorageUtils.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weidak"},"content":"package seedu.duke.storage;","lastModifiedDate":"2021-11-07"},{"lineNumber":2,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":3,"author":{"gitId":"weidak"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-11-07"},{"lineNumber":4,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":5,"author":{"gitId":"weidak"},"content":"/**","lastModifiedDate":"2021-11-07"},{"lineNumber":6,"author":{"gitId":"weidak"},"content":" * Utilities for the various Storages to inherit.","lastModifiedDate":"2021-11-07"},{"lineNumber":7,"author":{"gitId":"weidak"},"content":" */","lastModifiedDate":"2021-11-07"},{"lineNumber":8,"author":{"gitId":"weidak"},"content":"public abstract class StorageUtils {","lastModifiedDate":"2021-11-07"},{"lineNumber":9,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":10,"author":{"gitId":"weidak"},"content":"    protected static final Logger logger \u003d Logger.getLogger(StorageUtils.class.getName());","lastModifiedDate":"2021-11-07"},{"lineNumber":11,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":12,"author":{"gitId":"weidak"},"content":"    protected String filePath;","lastModifiedDate":"2021-11-07"},{"lineNumber":13,"author":{"gitId":"weidak"},"content":"    protected String fileName;","lastModifiedDate":"2021-11-07"},{"lineNumber":14,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":15,"author":{"gitId":"weidak"},"content":"    protected String getFileName(String path) {","lastModifiedDate":"2021-11-07"},{"lineNumber":16,"author":{"gitId":"weidak"},"content":"        return path.split(\"/\")[2];","lastModifiedDate":"2021-11-07"},{"lineNumber":17,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":18,"author":{"gitId":"weidak"},"content":"}","lastModifiedDate":"2021-11-07"}],"authorContributionMap":{"weidak":18}},{"path":"src/main/java/seedu/duke/storage/data/ItemBankDecoder.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weidak"},"content":"package seedu.duke.storage.data;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"weidak"},"content":"import seedu.duke.data.item.Item;","lastModifiedDate":"2021-11-02"},{"lineNumber":4,"author":{"gitId":"weidak"},"content":"import seedu.duke.data.item.ItemBank;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"weidak"},"content":"import seedu.duke.data.item.exceptions.DuplicateItemInBankException;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"weidak"},"content":"import seedu.duke.data.item.exercise.Exercise;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"weidak"},"content":"import seedu.duke.data.item.food.Food;","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"weidak"},"content":"import seedu.duke.data.profile.exceptions.InvalidCharacteristicException;","lastModifiedDate":"2021-10-30"},{"lineNumber":9,"author":{"gitId":"weidak"},"content":"import seedu.duke.storage.Storage;","lastModifiedDate":"2021-11-07"},{"lineNumber":10,"author":{"gitId":"weidak"},"content":"import seedu.duke.storage.data.exercise.exercisebank.ExerciseBankStorageUtils;","lastModifiedDate":"2021-11-07"},{"lineNumber":11,"author":{"gitId":"weidak"},"content":"import seedu.duke.storage.data.food.foodbank.FoodBankStorageUtils;","lastModifiedDate":"2021-11-07"},{"lineNumber":12,"author":{"gitId":"weidak"},"content":"import seedu.duke.storage.exceptions.InvalidDataException;","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"weidak"},"content":"import java.io.File;","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"weidak"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"weidak"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"weidak"},"content":"/**","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"weidak"},"content":" * Decodes the ItemBanks from their respective data storage files.","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"weidak"},"content":" */","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"weidak"},"content":"public class ItemBankDecoder {","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"weidak"},"content":"     * Retrieves data from ItemBank storage.","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"weidak"},"content":"     * @param filePath path of item bank to be retrieved","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"weidak"},"content":"     * @param type     type of ItemBank to retrieve to","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"weidak"},"content":"     * @return the items that have been successfully loaded from the filepath","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"weidak"},"content":"     * @throws FileNotFoundException If the filepath provided is invalid","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"weidak"},"content":"    public static ItemBank retrieveDataFromItemBank(String filePath,","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"weidak"},"content":"                                                    String type) throws FileNotFoundException {","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"weidak"},"content":"        ItemBank items \u003d new ItemBank();","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"weidak"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2021-10-25"},{"lineNumber":35,"author":{"gitId":"weidak"},"content":"        Scanner in \u003d new Scanner(file);","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"weidak"},"content":"        decodeItems(type, items, in);","lastModifiedDate":"2021-10-25"},{"lineNumber":37,"author":{"gitId":"weidak"},"content":"        return items;","lastModifiedDate":"2021-10-25"},{"lineNumber":38,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":39,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":40,"author":{"gitId":"weidak"},"content":"    private static void decodeItems(String type, ItemBank items, Scanner in) {","lastModifiedDate":"2021-10-25"},{"lineNumber":41,"author":{"gitId":"weidak"},"content":"        while (in.hasNext()) {","lastModifiedDate":"2021-10-24"},{"lineNumber":42,"author":{"gitId":"weidak"},"content":"            try {","lastModifiedDate":"2021-10-24"},{"lineNumber":43,"author":{"gitId":"weidak"},"content":"                decodeFoodBankDataFromString(items, in.nextLine(), type);","lastModifiedDate":"2021-10-24"},{"lineNumber":44,"author":{"gitId":"weidak"},"content":"            } catch (InvalidDataException e) {","lastModifiedDate":"2021-10-24"},{"lineNumber":45,"author":{"gitId":"weidak"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2021-10-24"},{"lineNumber":46,"author":{"gitId":"weidak"},"content":"            }","lastModifiedDate":"2021-10-24"},{"lineNumber":47,"author":{"gitId":"weidak"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":48,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":49,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":50,"author":{"gitId":"weidak"},"content":"    private static void decodeFoodBankDataFromString(ItemBank items, String line,","lastModifiedDate":"2021-10-24"},{"lineNumber":51,"author":{"gitId":"weidak"},"content":"                                                     String type) throws InvalidDataException {","lastModifiedDate":"2021-10-24"},{"lineNumber":52,"author":{"gitId":"weidak"},"content":"        try {","lastModifiedDate":"2021-10-24"},{"lineNumber":53,"author":{"gitId":"weidak"},"content":"            final String[] itemDetails \u003d line.split(Storage.FILE_TEXT_DELIMITER);","lastModifiedDate":"2021-11-07"},{"lineNumber":54,"author":{"gitId":"weidak"},"content":"            final String name \u003d itemDetails[1];","lastModifiedDate":"2021-10-24"},{"lineNumber":55,"author":{"gitId":"weidak"},"content":"            final int calories \u003d Integer.parseInt(itemDetails[2]);","lastModifiedDate":"2021-10-24"},{"lineNumber":56,"author":{"gitId":"weidak"},"content":"            addToRespectiveBank(items, type, name, calories);","lastModifiedDate":"2021-10-24"},{"lineNumber":57,"author":{"gitId":"weidak"},"content":"        } catch (IndexOutOfBoundsException | NumberFormatException | NullPointerException","lastModifiedDate":"2021-10-24"},{"lineNumber":58,"author":{"gitId":"weidak"},"content":"                | DuplicateItemInBankException | InvalidCharacteristicException e) {","lastModifiedDate":"2021-10-30"},{"lineNumber":59,"author":{"gitId":"weidak"},"content":"            throw new InvalidDataException(Storage.FILENAME_BANK_FOOD, line);","lastModifiedDate":"2021-11-07"},{"lineNumber":60,"author":{"gitId":"weidak"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":61,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":62,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":63,"author":{"gitId":"weidak"},"content":"    private static void addToRespectiveBank(ItemBank items, String type, String name, int calories)","lastModifiedDate":"2021-10-30"},{"lineNumber":64,"author":{"gitId":"weidak"},"content":"            throws DuplicateItemInBankException, InvalidCharacteristicException {","lastModifiedDate":"2021-10-30"},{"lineNumber":65,"author":{"gitId":"weidak"},"content":"        if (isFoodType(type)) {","lastModifiedDate":"2021-10-24"},{"lineNumber":66,"author":{"gitId":"weidak"},"content":"            addFood(items, name, calories);","lastModifiedDate":"2021-11-02"},{"lineNumber":67,"author":{"gitId":"weidak"},"content":"        } else if (isExerciseType(type)) {","lastModifiedDate":"2021-10-24"},{"lineNumber":68,"author":{"gitId":"weidak"},"content":"            addExercise(items, name, calories);","lastModifiedDate":"2021-11-02"},{"lineNumber":69,"author":{"gitId":"weidak"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":70,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":71,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":72,"author":{"gitId":"weidak"},"content":"    private static void addExercise(ItemBank items, String name, int calories)","lastModifiedDate":"2021-11-02"},{"lineNumber":73,"author":{"gitId":"weidak"},"content":"            throws InvalidCharacteristicException, DuplicateItemInBankException {","lastModifiedDate":"2021-10-30"},{"lineNumber":74,"author":{"gitId":"weidak"},"content":"        final Exercise exercise \u003d new Exercise(name, calories);","lastModifiedDate":"2021-10-30"},{"lineNumber":75,"author":{"gitId":"weidak"},"content":"        checkItemValidity(exercise);","lastModifiedDate":"2021-11-02"},{"lineNumber":76,"author":{"gitId":"weidak"},"content":"        items.addItem(exercise);","lastModifiedDate":"2021-10-30"},{"lineNumber":77,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":78,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":79,"author":{"gitId":"weidak"},"content":"    private static void checkItemValidity(Item item) throws InvalidCharacteristicException {","lastModifiedDate":"2021-11-02"},{"lineNumber":80,"author":{"gitId":"weidak"},"content":"        if (!item.isValid()) {","lastModifiedDate":"2021-11-02"},{"lineNumber":81,"author":{"gitId":"weidak"},"content":"            throw new InvalidCharacteristicException(item.toString());","lastModifiedDate":"2021-11-02"},{"lineNumber":82,"author":{"gitId":"weidak"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":83,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":84,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":85,"author":{"gitId":"weidak"},"content":"    private static void addFood(ItemBank items, String name, int calories)","lastModifiedDate":"2021-11-02"},{"lineNumber":86,"author":{"gitId":"weidak"},"content":"            throws InvalidCharacteristicException, DuplicateItemInBankException {","lastModifiedDate":"2021-10-30"},{"lineNumber":87,"author":{"gitId":"weidak"},"content":"        Food food \u003d new Food(name, calories);","lastModifiedDate":"2021-10-30"},{"lineNumber":88,"author":{"gitId":"weidak"},"content":"        checkItemValidity(food);","lastModifiedDate":"2021-11-02"},{"lineNumber":89,"author":{"gitId":"weidak"},"content":"        items.addItem(food);","lastModifiedDate":"2021-10-30"},{"lineNumber":90,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":91,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":92,"author":{"gitId":"weidak"},"content":"    private static boolean isExerciseType(String type) {","lastModifiedDate":"2021-10-24"},{"lineNumber":93,"author":{"gitId":"weidak"},"content":"        return type.equals(ExerciseBankStorageUtils.TYPE);","lastModifiedDate":"2021-11-07"},{"lineNumber":94,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":95,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":96,"author":{"gitId":"weidak"},"content":"    private static boolean isFoodType(String type) {","lastModifiedDate":"2021-10-24"},{"lineNumber":97,"author":{"gitId":"weidak"},"content":"        return type.equals(FoodBankStorageUtils.TYPE);","lastModifiedDate":"2021-11-07"},{"lineNumber":98,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":99,"author":{"gitId":"weidak"},"content":"}","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"weidak":99}},{"path":"src/main/java/seedu/duke/storage/data/ItemEncoder.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weidak"},"content":"package seedu.duke.storage.data;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"tlyi"},"content":"import seedu.duke.data.item.ItemBank;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"weidak"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"weidak"},"content":"/**","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"weidak"},"content":" * Encodes all the items available for FitBot (Other than Profile).","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"weidak"},"content":" */","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"weidak"},"content":"public class ItemEncoder {","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"weidak"},"content":"     * Encodes the list of items in the item bank in preparation for storage.","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"weidak"},"content":"     * @param itemBank The list of items to be encoded","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"weidak"},"content":"     * @return An ArrayList of the items to be stored","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"weidak"},"content":"    public static ArrayList\u003cString\u003e encode(ItemBank itemBank) {","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"weidak"},"content":"        ArrayList\u003cString\u003e items \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"weidak"},"content":"        for (int i \u003d 0; i \u003c itemBank.getSize(); i++) {","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"weidak"},"content":"            items.add(itemBank.getItem(i).toFileTextString());","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"weidak"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"weidak"},"content":"        return items;","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"weidak"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"weidak":23,"tlyi":1}},{"path":"src/main/java/seedu/duke/storage/data/ListDecoder.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weidak"},"content":"package seedu.duke.storage.data;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"weidak"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"weidak"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"weidak"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"weidak"},"content":"/**","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"weidak"},"content":" * An abstract class that inherits date parsing functionality for lists.","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"weidak"},"content":" */","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"weidak"},"content":"public abstract class ListDecoder {","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"weidak"},"content":"    protected static final DateTimeFormatter DATE_FORMATTER \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy\");","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"weidak"},"content":"    protected static final DateTimeFormatter DATE_TIME_FORMATTER \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\");","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"weidak"},"content":"    protected static LocalDate parseDate(String date) {","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"weidak"},"content":"        return LocalDate.parse(date, DATE_FORMATTER);","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"weidak"},"content":"    protected static LocalDateTime parseDateTime(String dateTime) {","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"weidak"},"content":"        return LocalDateTime.parse(dateTime, DATE_TIME_FORMATTER);","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":23,"author":{"gitId":"weidak"},"content":"    protected static boolean isWithinPastTenYears(LocalDate date) {","lastModifiedDate":"2021-11-02"},{"lineNumber":24,"author":{"gitId":"weidak"},"content":"        //After 10 years ago from today","lastModifiedDate":"2021-11-02"},{"lineNumber":25,"author":{"gitId":"weidak"},"content":"        LocalDate lowerLimit \u003d LocalDate.now().minusYears(10);","lastModifiedDate":"2021-11-02"},{"lineNumber":26,"author":{"gitId":"weidak"},"content":"        //Before tomorrow (today)","lastModifiedDate":"2021-11-02"},{"lineNumber":27,"author":{"gitId":"weidak"},"content":"        LocalDate upperLimit \u003d LocalDate.now().plusDays(1);","lastModifiedDate":"2021-11-02"},{"lineNumber":28,"author":{"gitId":"weidak"},"content":"        return date.isAfter(lowerLimit) \u0026\u0026 date.isBefore(upperLimit);","lastModifiedDate":"2021-11-02"},{"lineNumber":29,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":30,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":31,"author":{"gitId":"weidak"},"content":"    protected static boolean isWithinNextYear(LocalDate date) {","lastModifiedDate":"2021-11-02"},{"lineNumber":32,"author":{"gitId":"weidak"},"content":"        //After the past 7 days (today)","lastModifiedDate":"2021-11-08"},{"lineNumber":33,"author":{"gitId":"weidak"},"content":"        LocalDate lowerLimit \u003d LocalDate.now().minusDays(7);","lastModifiedDate":"2021-11-08"},{"lineNumber":34,"author":{"gitId":"weidak"},"content":"        //Before 1 year from today","lastModifiedDate":"2021-11-02"},{"lineNumber":35,"author":{"gitId":"weidak"},"content":"        LocalDate upperLimit \u003d LocalDate.now().plusYears(1);","lastModifiedDate":"2021-11-02"},{"lineNumber":36,"author":{"gitId":"weidak"},"content":"        return date.isAfter(lowerLimit) \u0026\u0026 date.isBefore(upperLimit);","lastModifiedDate":"2021-11-02"},{"lineNumber":37,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":38,"author":{"gitId":"weidak"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"weidak":38}},{"path":"src/main/java/seedu/duke/storage/data/exercise/exercisebank/ExerciseBankStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weidak"},"content":"package seedu.duke.storage.data.exercise.exercisebank;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"weidak"},"content":"import seedu.duke.data.item.ItemBank;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"weidak"},"content":"import seedu.duke.storage.exceptions.UnableToReadFileException;","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"weidak"},"content":"import seedu.duke.storage.exceptions.UnableToWriteFileException;","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"weidak"},"content":"/**","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"weidak"},"content":" * Interface that ensures both the storage and storage manager has the","lastModifiedDate":"2021-11-07"},{"lineNumber":9,"author":{"gitId":"weidak"},"content":" * required functions to load and save from the exercise bank.","lastModifiedDate":"2021-11-07"},{"lineNumber":10,"author":{"gitId":"weidak"},"content":" */","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"weidak"},"content":"public interface ExerciseBankStorage {","lastModifiedDate":"2021-11-07"},{"lineNumber":12,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"weidak"},"content":"     * Loads the exercise bank from the file.","lastModifiedDate":"2021-11-07"},{"lineNumber":15,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"weidak"},"content":"     * @return ItemBank object with the loaded bank items from the data file.","lastModifiedDate":"2021-11-07"},{"lineNumber":17,"author":{"gitId":"weidak"},"content":"     * @throws UnableToReadFileException If the file is inaccessible or due to environment variables","lastModifiedDate":"2021-11-07"},{"lineNumber":18,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"weidak"},"content":"    ItemBank loadExerciseBank() throws UnableToReadFileException;","lastModifiedDate":"2021-11-07"},{"lineNumber":20,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-11-07"},{"lineNumber":22,"author":{"gitId":"weidak"},"content":"     * Saves the exercise bank to the file.","lastModifiedDate":"2021-11-07"},{"lineNumber":23,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-11-07"},{"lineNumber":24,"author":{"gitId":"weidak"},"content":"     * @throws UnableToReadFileException If the file is inaccessible or due to environment variables","lastModifiedDate":"2021-11-07"},{"lineNumber":25,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-11-07"},{"lineNumber":26,"author":{"gitId":"weidak"},"content":"    void saveExerciseBank(ItemBank exerciseBank) throws UnableToWriteFileException;","lastModifiedDate":"2021-11-07"},{"lineNumber":27,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"weidak"},"content":"}","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"weidak":28}},{"path":"src/main/java/seedu/duke/storage/data/exercise/exercisebank/ExerciseBankStorageUtils.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weidak"},"content":"package seedu.duke.storage.data.exercise.exercisebank;","lastModifiedDate":"2021-11-07"},{"lineNumber":2,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":3,"author":{"gitId":"weidak"},"content":"import seedu.duke.data.item.ItemBank;","lastModifiedDate":"2021-11-07"},{"lineNumber":4,"author":{"gitId":"weidak"},"content":"import seedu.duke.storage.StorageUtils;","lastModifiedDate":"2021-11-07"},{"lineNumber":5,"author":{"gitId":"weidak"},"content":"import seedu.duke.storage.data.ItemBankDecoder;","lastModifiedDate":"2021-11-07"},{"lineNumber":6,"author":{"gitId":"weidak"},"content":"import seedu.duke.storage.data.ItemEncoder;","lastModifiedDate":"2021-11-07"},{"lineNumber":7,"author":{"gitId":"weidak"},"content":"import seedu.duke.storage.exceptions.UnableToReadFileException;","lastModifiedDate":"2021-11-07"},{"lineNumber":8,"author":{"gitId":"weidak"},"content":"import seedu.duke.storage.exceptions.UnableToWriteFileException;","lastModifiedDate":"2021-11-07"},{"lineNumber":9,"author":{"gitId":"weidak"},"content":"import seedu.duke.storage.utilities.FileChecker;","lastModifiedDate":"2021-11-07"},{"lineNumber":10,"author":{"gitId":"weidak"},"content":"import seedu.duke.storage.utilities.FileSaver;","lastModifiedDate":"2021-11-07"},{"lineNumber":11,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":12,"author":{"gitId":"weidak"},"content":"import java.io.IOException;","lastModifiedDate":"2021-11-08"},{"lineNumber":13,"author":{"gitId":"weidak"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-11-07"},{"lineNumber":14,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":15,"author":{"gitId":"weidak"},"content":"/**","lastModifiedDate":"2021-11-07"},{"lineNumber":16,"author":{"gitId":"weidak"},"content":" * This storage handles the loading and saving of exercise bank items.","lastModifiedDate":"2021-11-07"},{"lineNumber":17,"author":{"gitId":"weidak"},"content":" */","lastModifiedDate":"2021-11-07"},{"lineNumber":18,"author":{"gitId":"weidak"},"content":"public class ExerciseBankStorageUtils extends StorageUtils implements ExerciseBankStorage {","lastModifiedDate":"2021-11-07"},{"lineNumber":19,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":20,"author":{"gitId":"weidak"},"content":"    public static final String TYPE \u003d \"Exercise\";","lastModifiedDate":"2021-11-07"},{"lineNumber":21,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":22,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-11-07"},{"lineNumber":23,"author":{"gitId":"weidak"},"content":"     * Constructor for the exercise bank storage.","lastModifiedDate":"2021-11-07"},{"lineNumber":24,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-11-07"},{"lineNumber":25,"author":{"gitId":"weidak"},"content":"     * @param filePath of the exercise bank data file","lastModifiedDate":"2021-11-07"},{"lineNumber":26,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-11-07"},{"lineNumber":27,"author":{"gitId":"weidak"},"content":"    public ExerciseBankStorageUtils(String filePath) {","lastModifiedDate":"2021-11-07"},{"lineNumber":28,"author":{"gitId":"weidak"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2021-11-07"},{"lineNumber":29,"author":{"gitId":"weidak"},"content":"        fileName \u003d getFileName(filePath);","lastModifiedDate":"2021-11-07"},{"lineNumber":30,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":31,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":32,"author":{"gitId":"weidak"},"content":"    @Override","lastModifiedDate":"2021-11-07"},{"lineNumber":33,"author":{"gitId":"weidak"},"content":"    public ItemBank loadExerciseBank() throws UnableToReadFileException {","lastModifiedDate":"2021-11-07"},{"lineNumber":34,"author":{"gitId":"weidak"},"content":"        try {","lastModifiedDate":"2021-11-07"},{"lineNumber":35,"author":{"gitId":"weidak"},"content":"            FileChecker.createFileIfMissing(filePath);","lastModifiedDate":"2021-11-08"},{"lineNumber":36,"author":{"gitId":"weidak"},"content":"            return ItemBankDecoder.retrieveDataFromItemBank(filePath, TYPE);","lastModifiedDate":"2021-11-07"},{"lineNumber":37,"author":{"gitId":"weidak"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-11-08"},{"lineNumber":38,"author":{"gitId":"weidak"},"content":"            logger.log(Level.FINE, \"The path is missing \", filePath);","lastModifiedDate":"2021-11-07"},{"lineNumber":39,"author":{"gitId":"weidak"},"content":"            throw new UnableToReadFileException(filePath);","lastModifiedDate":"2021-11-07"},{"lineNumber":40,"author":{"gitId":"weidak"},"content":"        }","lastModifiedDate":"2021-11-07"},{"lineNumber":41,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":42,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":43,"author":{"gitId":"weidak"},"content":"    @Override","lastModifiedDate":"2021-11-07"},{"lineNumber":44,"author":{"gitId":"weidak"},"content":"    public void saveExerciseBank(ItemBank exerciseBank) throws UnableToWriteFileException {","lastModifiedDate":"2021-11-07"},{"lineNumber":45,"author":{"gitId":"weidak"},"content":"        FileSaver.saveTo(filePath, ItemEncoder.encode(exerciseBank));","lastModifiedDate":"2021-11-07"},{"lineNumber":46,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":47,"author":{"gitId":"weidak"},"content":"}","lastModifiedDate":"2021-11-07"}],"authorContributionMap":{"weidak":47}},{"path":"src/main/java/seedu/duke/storage/data/exercise/exerciselist/ExerciseListDecoder.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weidak"},"content":"package seedu.duke.storage.data.exercise.exerciselist;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"weidak"},"content":"import seedu.duke.data.item.exercise.Exercise;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"weidak"},"content":"import seedu.duke.data.item.exercise.ExerciseList;","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"weidak"},"content":"import seedu.duke.storage.Storage;","lastModifiedDate":"2021-11-07"},{"lineNumber":6,"author":{"gitId":"tlyi"},"content":"import seedu.duke.storage.data.ListDecoder;","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"weidak"},"content":"import seedu.duke.storage.exceptions.InvalidDataException;","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"weidak"},"content":"import java.io.File;","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"weidak"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"weidak"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"weidak"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"weidak"},"content":"/**","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"weidak"},"content":" * Decodes the exercise list from storage.","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"weidak"},"content":" */","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"weidak"},"content":"public class ExerciseListDecoder extends ListDecoder {","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"weidak"},"content":"     * Retrieves exercise list or upcoming list from data.","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"weidak"},"content":"     * @return The exercise list with data loaded from file","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"weidak"},"content":"     * @throws FileNotFoundException If file is misplaced/missing","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":25,"author":{"gitId":"weidak"},"content":"    public static ExerciseList retrieveExerciseListFromData(String filePath) throws FileNotFoundException {","lastModifiedDate":"2021-10-25"},{"lineNumber":26,"author":{"gitId":"weidak"},"content":"        ExerciseList exercises \u003d new ExerciseList();","lastModifiedDate":"2021-10-25"},{"lineNumber":27,"author":{"gitId":"weidak"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"weidak"},"content":"        Scanner in \u003d new Scanner(file);","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"weidak"},"content":"        decodeExercises(exercises, in);","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"weidak"},"content":"        return exercises;","lastModifiedDate":"2021-10-25"},{"lineNumber":31,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":32,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":33,"author":{"gitId":"weidak"},"content":"    private static void decodeExercises(ExerciseList exercises, Scanner in) {","lastModifiedDate":"2021-10-25"},{"lineNumber":34,"author":{"gitId":"weidak"},"content":"        while (in.hasNext()) {","lastModifiedDate":"2021-10-25"},{"lineNumber":35,"author":{"gitId":"weidak"},"content":"            try {","lastModifiedDate":"2021-10-25"},{"lineNumber":36,"author":{"gitId":"weidak"},"content":"                decodeExerciseDataFromString(exercises, in.nextLine());","lastModifiedDate":"2021-10-25"},{"lineNumber":37,"author":{"gitId":"weidak"},"content":"            } catch (InvalidDataException e) {","lastModifiedDate":"2021-10-25"},{"lineNumber":38,"author":{"gitId":"weidak"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2021-10-25"},{"lineNumber":39,"author":{"gitId":"weidak"},"content":"            }","lastModifiedDate":"2021-10-25"},{"lineNumber":40,"author":{"gitId":"weidak"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":41,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":42,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":43,"author":{"gitId":"weidak"},"content":"    private static void decodeExerciseDataFromString(ExerciseList exercises, String line) throws InvalidDataException {","lastModifiedDate":"2021-10-25"},{"lineNumber":44,"author":{"gitId":"weidak"},"content":"        try {","lastModifiedDate":"2021-10-25"},{"lineNumber":45,"author":{"gitId":"weidak"},"content":"            final String[] exerciseDetails \u003d line.split(Storage.FILE_TEXT_DELIMITER);","lastModifiedDate":"2021-11-07"},{"lineNumber":46,"author":{"gitId":"weidak"},"content":"            final String name \u003d exerciseDetails[1];","lastModifiedDate":"2021-10-25"},{"lineNumber":47,"author":{"gitId":"weidak"},"content":"            final int calories \u003d Integer.parseInt(exerciseDetails[2]);","lastModifiedDate":"2021-10-25"},{"lineNumber":48,"author":{"gitId":"weidak"},"content":"            final LocalDate dateOfExercise \u003d parseDate(exerciseDetails[3]);","lastModifiedDate":"2021-10-25"},{"lineNumber":49,"author":{"gitId":"weidak"},"content":"            final Exercise exercise \u003d new Exercise(name, calories, dateOfExercise);","lastModifiedDate":"2021-10-30"},{"lineNumber":50,"author":{"gitId":"weidak"},"content":"            if (!exercise.isValid() || !isWithinPastTenYears(dateOfExercise)) {","lastModifiedDate":"2021-11-02"},{"lineNumber":51,"author":{"gitId":"weidak"},"content":"                throw new InvalidDataException(Storage.FILENAME_LIST_EXERCISE, line);","lastModifiedDate":"2021-11-07"},{"lineNumber":52,"author":{"gitId":"weidak"},"content":"            }","lastModifiedDate":"2021-10-30"},{"lineNumber":53,"author":{"gitId":"weidak"},"content":"            exercises.addItem(exercise);","lastModifiedDate":"2021-10-30"},{"lineNumber":54,"author":{"gitId":"weidak"},"content":"        } catch (IndexOutOfBoundsException | NumberFormatException | NullPointerException e) {","lastModifiedDate":"2021-11-02"},{"lineNumber":55,"author":{"gitId":"weidak"},"content":"            throw new InvalidDataException(Storage.FILENAME_LIST_EXERCISE, line);","lastModifiedDate":"2021-11-07"},{"lineNumber":56,"author":{"gitId":"weidak"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":57,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":58,"author":{"gitId":"weidak"},"content":"}","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"weidak":57,"tlyi":1}},{"path":"src/main/java/seedu/duke/storage/data/exercise/exerciselist/ExerciseListStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weidak"},"content":"package seedu.duke.storage.data.exercise.exerciselist;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"weidak"},"content":"import seedu.duke.data.item.exercise.ExerciseList;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"weidak"},"content":"import seedu.duke.storage.exceptions.UnableToReadFileException;","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"weidak"},"content":"import seedu.duke.storage.exceptions.UnableToWriteFileException;","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"weidak"},"content":"/**","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"weidak"},"content":" * Interface that ensures both the storage and storage manager has the","lastModifiedDate":"2021-11-07"},{"lineNumber":9,"author":{"gitId":"weidak"},"content":" * required functions to load and save from exercise list storage.","lastModifiedDate":"2021-11-07"},{"lineNumber":10,"author":{"gitId":"weidak"},"content":" */","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"weidak"},"content":"public interface ExerciseListStorage {","lastModifiedDate":"2021-11-07"},{"lineNumber":12,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"weidak"},"content":"     * Load exercises into an ExerciseList object.","lastModifiedDate":"2021-11-07"},{"lineNumber":15,"author":{"gitId":"weidak"},"content":"     * Used when the selected profile is accessed and its respective ExerciseList is loaded.","lastModifiedDate":"2021-11-07"},{"lineNumber":16,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"weidak"},"content":"     * @return ExerciseList object with the details from the storage file","lastModifiedDate":"2021-11-07"},{"lineNumber":18,"author":{"gitId":"weidak"},"content":"     * @throws UnableToReadFileException If the file is inaccessible or due to environment variables","lastModifiedDate":"2021-11-07"},{"lineNumber":19,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"weidak"},"content":"    ExerciseList loadExerciseList() throws UnableToReadFileException;","lastModifiedDate":"2021-11-07"},{"lineNumber":21,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-11-07"},{"lineNumber":23,"author":{"gitId":"weidak"},"content":"     * Saves the exercises into storage.","lastModifiedDate":"2021-11-07"},{"lineNumber":24,"author":{"gitId":"weidak"},"content":"     * Used when there is an update to the list.","lastModifiedDate":"2021-11-07"},{"lineNumber":25,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-11-07"},{"lineNumber":26,"author":{"gitId":"weidak"},"content":"     * @param exercises ExerciseList to be saved","lastModifiedDate":"2021-11-07"},{"lineNumber":27,"author":{"gitId":"weidak"},"content":"     * @throws UnableToReadFileException If the file is inaccessible or due to environment variables","lastModifiedDate":"2021-11-07"},{"lineNumber":28,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-11-07"},{"lineNumber":29,"author":{"gitId":"weidak"},"content":"    void saveExerciseList(ExerciseList exercises) throws UnableToWriteFileException;","lastModifiedDate":"2021-11-07"},{"lineNumber":30,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":31,"author":{"gitId":"weidak"},"content":"}","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"weidak":31}},{"path":"src/main/java/seedu/duke/storage/data/exercise/exerciselist/ExerciseListStorageUtils.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weidak"},"content":"package seedu.duke.storage.data.exercise.exerciselist;","lastModifiedDate":"2021-11-07"},{"lineNumber":2,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":3,"author":{"gitId":"weidak"},"content":"import seedu.duke.data.item.exercise.ExerciseList;","lastModifiedDate":"2021-11-07"},{"lineNumber":4,"author":{"gitId":"weidak"},"content":"import seedu.duke.storage.StorageUtils;","lastModifiedDate":"2021-11-07"},{"lineNumber":5,"author":{"gitId":"weidak"},"content":"import seedu.duke.storage.data.ItemEncoder;","lastModifiedDate":"2021-11-07"},{"lineNumber":6,"author":{"gitId":"weidak"},"content":"import seedu.duke.storage.exceptions.UnableToReadFileException;","lastModifiedDate":"2021-11-07"},{"lineNumber":7,"author":{"gitId":"weidak"},"content":"import seedu.duke.storage.exceptions.UnableToWriteFileException;","lastModifiedDate":"2021-11-07"},{"lineNumber":8,"author":{"gitId":"weidak"},"content":"import seedu.duke.storage.utilities.FileChecker;","lastModifiedDate":"2021-11-07"},{"lineNumber":9,"author":{"gitId":"weidak"},"content":"import seedu.duke.storage.utilities.FileSaver;","lastModifiedDate":"2021-11-07"},{"lineNumber":10,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":11,"author":{"gitId":"weidak"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-11-07"},{"lineNumber":12,"author":{"gitId":"weidak"},"content":"import java.io.IOException;","lastModifiedDate":"2021-11-08"},{"lineNumber":13,"author":{"gitId":"weidak"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-11-07"},{"lineNumber":14,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":15,"author":{"gitId":"weidak"},"content":"/**","lastModifiedDate":"2021-11-07"},{"lineNumber":16,"author":{"gitId":"weidak"},"content":" * This storage handles the loading and saving of exercise list items.","lastModifiedDate":"2021-11-07"},{"lineNumber":17,"author":{"gitId":"weidak"},"content":" */","lastModifiedDate":"2021-11-07"},{"lineNumber":18,"author":{"gitId":"weidak"},"content":"public class ExerciseListStorageUtils extends StorageUtils implements ExerciseListStorage {","lastModifiedDate":"2021-11-07"},{"lineNumber":19,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":20,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-11-07"},{"lineNumber":21,"author":{"gitId":"weidak"},"content":"     * Constructor for exercise list storage object.","lastModifiedDate":"2021-11-07"},{"lineNumber":22,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-11-07"},{"lineNumber":23,"author":{"gitId":"weidak"},"content":"     * @param filePath of where the exercise list should be stored.","lastModifiedDate":"2021-11-07"},{"lineNumber":24,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-11-07"},{"lineNumber":25,"author":{"gitId":"weidak"},"content":"    public ExerciseListStorageUtils(String filePath) {","lastModifiedDate":"2021-11-07"},{"lineNumber":26,"author":{"gitId":"weidak"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2021-11-07"},{"lineNumber":27,"author":{"gitId":"weidak"},"content":"        this.fileName \u003d getFileName(filePath);","lastModifiedDate":"2021-11-07"},{"lineNumber":28,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":29,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":30,"author":{"gitId":"weidak"},"content":"    @Override","lastModifiedDate":"2021-11-07"},{"lineNumber":31,"author":{"gitId":"weidak"},"content":"    public ExerciseList loadExerciseList() throws UnableToReadFileException {","lastModifiedDate":"2021-11-07"},{"lineNumber":32,"author":{"gitId":"weidak"},"content":"        try {","lastModifiedDate":"2021-11-07"},{"lineNumber":33,"author":{"gitId":"weidak"},"content":"            FileChecker.createFileIfMissing(filePath);","lastModifiedDate":"2021-11-08"},{"lineNumber":34,"author":{"gitId":"weidak"},"content":"            return ExerciseListDecoder.retrieveExerciseListFromData(filePath);","lastModifiedDate":"2021-11-07"},{"lineNumber":35,"author":{"gitId":"weidak"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-11-08"},{"lineNumber":36,"author":{"gitId":"weidak"},"content":"            throw new UnableToReadFileException(filePath);","lastModifiedDate":"2021-11-07"},{"lineNumber":37,"author":{"gitId":"weidak"},"content":"        }","lastModifiedDate":"2021-11-07"},{"lineNumber":38,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":39,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":40,"author":{"gitId":"weidak"},"content":"    @Override","lastModifiedDate":"2021-11-07"},{"lineNumber":41,"author":{"gitId":"weidak"},"content":"    public void saveExerciseList(ExerciseList exercises) throws UnableToWriteFileException {","lastModifiedDate":"2021-11-07"},{"lineNumber":42,"author":{"gitId":"weidak"},"content":"        FileSaver.saveTo(filePath, ItemEncoder.encode(exercises));","lastModifiedDate":"2021-11-07"},{"lineNumber":43,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":44,"author":{"gitId":"weidak"},"content":"}","lastModifiedDate":"2021-11-07"}],"authorContributionMap":{"weidak":44}},{"path":"src/main/java/seedu/duke/storage/data/exercise/futurelist/FutureExerciseListDecoder.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weidak"},"content":"package seedu.duke.storage.data.exercise.futurelist;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"tlyi"},"content":"import seedu.duke.data.item.exercise.Exercise;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"tlyi"},"content":"import seedu.duke.data.item.exercise.FutureExerciseList;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"weidak"},"content":"import seedu.duke.storage.Storage;","lastModifiedDate":"2021-11-07"},{"lineNumber":6,"author":{"gitId":"weidak"},"content":"import seedu.duke.storage.data.ListDecoder;","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"weidak"},"content":"import seedu.duke.storage.exceptions.InvalidDataException;","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"weidak"},"content":"import java.io.File;","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"weidak"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"weidak"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"weidak"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-11-02"},{"lineNumber":13,"author":{"gitId":"weidak"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"weidak"},"content":"/**","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"weidak"},"content":" * Decodes the upcoming exercises from future exercise list data file.","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"weidak"},"content":" */","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"weidak"},"content":"public class FutureExerciseListDecoder extends ListDecoder {","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"weidak"},"content":"     * Retrieves future exercise list from future_list.txt.","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"weidak"},"content":"     * @return The exercise list with data loaded from file","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"weidak"},"content":"     * @throws FileNotFoundException If file is misplaced/missing","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"weidak"},"content":"    public static FutureExerciseList retrieveUpcomingListFromData(String filePath) throws FileNotFoundException {","lastModifiedDate":"2021-10-25"},{"lineNumber":27,"author":{"gitId":"weidak"},"content":"        FutureExerciseList exercises \u003d new FutureExerciseList();","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"weidak"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"weidak"},"content":"        Scanner in \u003d new Scanner(file);","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"weidak"},"content":"        decodeUpcomingExercises(exercises, in);","lastModifiedDate":"2021-10-25"},{"lineNumber":31,"author":{"gitId":"weidak"},"content":"        return exercises;","lastModifiedDate":"2021-10-25"},{"lineNumber":32,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":33,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":34,"author":{"gitId":"weidak"},"content":"    private static void decodeUpcomingExercises(FutureExerciseList exercises, Scanner in) {","lastModifiedDate":"2021-10-25"},{"lineNumber":35,"author":{"gitId":"weidak"},"content":"        while (in.hasNext()) {","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"weidak"},"content":"            try {","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"weidak"},"content":"                decodeUpcomingExerciseDataFromString(exercises, in.nextLine());","lastModifiedDate":"2021-10-25"},{"lineNumber":38,"author":{"gitId":"weidak"},"content":"            } catch (InvalidDataException e) {","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"weidak"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"weidak"},"content":"            }","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"weidak"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":42,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":43,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":44,"author":{"gitId":"weidak"},"content":"    private static void decodeUpcomingExerciseDataFromString(FutureExerciseList exercises,","lastModifiedDate":"2021-10-25"},{"lineNumber":45,"author":{"gitId":"weidak"},"content":"                                                             String line) throws InvalidDataException {","lastModifiedDate":"2021-10-20"},{"lineNumber":46,"author":{"gitId":"weidak"},"content":"        try {","lastModifiedDate":"2021-10-20"},{"lineNumber":47,"author":{"gitId":"weidak"},"content":"            final String[] exerciseDetails \u003d line.split(Storage.FILE_TEXT_DELIMITER);","lastModifiedDate":"2021-11-07"},{"lineNumber":48,"author":{"gitId":"weidak"},"content":"            final String name \u003d exerciseDetails[1];","lastModifiedDate":"2021-10-20"},{"lineNumber":49,"author":{"gitId":"weidak"},"content":"            final int calories \u003d Integer.parseInt(exerciseDetails[2]);","lastModifiedDate":"2021-10-20"},{"lineNumber":50,"author":{"gitId":"weidak"},"content":"            final LocalDate dateOfExercise \u003d parseDate(exerciseDetails[3]);","lastModifiedDate":"2021-10-20"},{"lineNumber":51,"author":{"gitId":"weidak"},"content":"            final Exercise exercise \u003d new Exercise(name, calories, dateOfExercise);","lastModifiedDate":"2021-10-30"},{"lineNumber":52,"author":{"gitId":"weidak"},"content":"            if (!exercise.isValid() || !isWithinNextYear(dateOfExercise)) {","lastModifiedDate":"2021-11-02"},{"lineNumber":53,"author":{"gitId":"weidak"},"content":"                throw new InvalidDataException(Storage.FILENAME_LIST_FUTURE, line);","lastModifiedDate":"2021-11-07"},{"lineNumber":54,"author":{"gitId":"weidak"},"content":"            }","lastModifiedDate":"2021-10-30"},{"lineNumber":55,"author":{"gitId":"weidak"},"content":"            exercises.addItem(new Exercise(name, calories, dateOfExercise));","lastModifiedDate":"2021-10-20"},{"lineNumber":56,"author":{"gitId":"weidak"},"content":"        } catch (IndexOutOfBoundsException | NumberFormatException | NullPointerException","lastModifiedDate":"2021-11-02"},{"lineNumber":57,"author":{"gitId":"weidak"},"content":"                | DateTimeParseException e) {","lastModifiedDate":"2021-11-02"},{"lineNumber":58,"author":{"gitId":"weidak"},"content":"            throw new InvalidDataException(Storage.FILENAME_LIST_FUTURE, line);","lastModifiedDate":"2021-11-07"},{"lineNumber":59,"author":{"gitId":"weidak"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":60,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":61,"author":{"gitId":"weidak"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"weidak":59,"tlyi":2}},{"path":"src/main/java/seedu/duke/storage/data/exercise/futurelist/FutureExerciseListStorageUtils.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weidak"},"content":"package seedu.duke.storage.data.exercise.futurelist;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"weidak"},"content":"import seedu.duke.data.item.exercise.FutureExerciseList;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"weidak"},"content":"import seedu.duke.storage.StorageUtils;","lastModifiedDate":"2021-11-07"},{"lineNumber":5,"author":{"gitId":"weidak"},"content":"import seedu.duke.storage.data.ItemEncoder;","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"weidak"},"content":"import seedu.duke.storage.exceptions.UnableToReadFileException;","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"weidak"},"content":"import seedu.duke.storage.exceptions.UnableToWriteFileException;","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"weidak"},"content":"import seedu.duke.storage.utilities.FileChecker;","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"weidak"},"content":"import seedu.duke.storage.utilities.FileSaver;","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"weidak"},"content":"import java.io.IOException;","lastModifiedDate":"2021-11-08"},{"lineNumber":12,"author":{"gitId":"weidak"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"weidak"},"content":"/**","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"weidak"},"content":" * Storage that handles the saving and loading of data files of upcoming exercises in future exercise storage.","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"weidak"},"content":" */","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"weidak"},"content":"public class FutureExerciseListStorageUtils extends StorageUtils implements UpcomingStorage {","lastModifiedDate":"2021-11-07"},{"lineNumber":18,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"weidak"},"content":"     * Constructor for future exercise list storage.","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"weidak"},"content":"     * @param filePath of where the future exercise list should be stored","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"weidak"},"content":"    public FutureExerciseListStorageUtils(String filePath) {","lastModifiedDate":"2021-11-07"},{"lineNumber":25,"author":{"gitId":"weidak"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2021-10-25"},{"lineNumber":26,"author":{"gitId":"weidak"},"content":"        this.fileName \u003d getFileName(filePath);","lastModifiedDate":"2021-10-25"},{"lineNumber":27,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"weidak"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"weidak"},"content":"    public FutureExerciseList loadFutureExerciseList() throws UnableToReadFileException {","lastModifiedDate":"2021-10-25"},{"lineNumber":31,"author":{"gitId":"weidak"},"content":"        try {","lastModifiedDate":"2021-10-25"},{"lineNumber":32,"author":{"gitId":"weidak"},"content":"            FileChecker.createFileIfMissing(filePath);","lastModifiedDate":"2021-11-08"},{"lineNumber":33,"author":{"gitId":"weidak"},"content":"            return FutureExerciseListDecoder.retrieveUpcomingListFromData(filePath);","lastModifiedDate":"2021-10-25"},{"lineNumber":34,"author":{"gitId":"weidak"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-11-08"},{"lineNumber":35,"author":{"gitId":"tryyang2001"},"content":"            logger.log(Level.FINE, \"The path is missing \", filePath);","lastModifiedDate":"2021-10-28"},{"lineNumber":36,"author":{"gitId":"weidak"},"content":"            throw new UnableToReadFileException(fileName);","lastModifiedDate":"2021-10-25"},{"lineNumber":37,"author":{"gitId":"weidak"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":38,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":39,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":40,"author":{"gitId":"weidak"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":41,"author":{"gitId":"weidak"},"content":"    public void saveFutureExerciseList(FutureExerciseList futureExercises) throws UnableToWriteFileException {","lastModifiedDate":"2021-10-25"},{"lineNumber":42,"author":{"gitId":"weidak"},"content":"        FileSaver.saveTo(filePath, ItemEncoder.encode(futureExercises));","lastModifiedDate":"2021-10-25"},{"lineNumber":43,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":44,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":45,"author":{"gitId":"weidak"},"content":"}","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"weidak":44,"tryyang2001":1}},{"path":"src/main/java/seedu/duke/storage/data/exercise/futurelist/UpcomingStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weidak"},"content":"package seedu.duke.storage.data.exercise.futurelist;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"weidak"},"content":"import seedu.duke.data.item.exercise.FutureExerciseList;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"weidak"},"content":"import seedu.duke.storage.exceptions.UnableToReadFileException;","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"weidak"},"content":"import seedu.duke.storage.exceptions.UnableToWriteFileException;","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"weidak"},"content":"/**","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"weidak"},"content":" * Interface that ensures both the storage and storage manager has the","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"weidak"},"content":" * required functions to load and save from the future exercise list in storage.","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"weidak"},"content":" */","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"weidak"},"content":"public interface UpcomingStorage {","lastModifiedDate":"2021-11-07"},{"lineNumber":12,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"weidak"},"content":"     * Loads the future exercise list from storage.","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"weidak"},"content":"     * @return the future exercise list with data loaded in","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"weidak"},"content":"     * @throws UnableToReadFileException If the file is inaccessible or due to environment variables","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"weidak"},"content":"    FutureExerciseList loadFutureExerciseList() throws UnableToReadFileException;","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"weidak"},"content":"     * Saves the future exercise list into storage.","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"weidak"},"content":"     * @param futureExercises the future exercises to be saved to data","lastModifiedDate":"2021-10-25"},{"lineNumber":25,"author":{"gitId":"weidak"},"content":"     * @throws UnableToWriteFileException If the file is inaccessible or due to environment variables","lastModifiedDate":"2021-10-25"},{"lineNumber":26,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":27,"author":{"gitId":"weidak"},"content":"    void saveFutureExerciseList(FutureExerciseList futureExercises) throws UnableToWriteFileException;","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"weidak"},"content":"}","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"weidak":29}},{"path":"src/main/java/seedu/duke/storage/data/food/foodbank/FoodBankStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weidak"},"content":"package seedu.duke.storage.data.food.foodbank;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"weidak"},"content":"import seedu.duke.data.item.ItemBank;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"weidak"},"content":"import seedu.duke.storage.exceptions.UnableToReadFileException;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"weidak"},"content":"import seedu.duke.storage.exceptions.UnableToWriteFileException;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"weidak"},"content":"/**","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"weidak"},"content":" * Interface that ensures the storage device has a load and save food bank method.","lastModifiedDate":"2021-11-07"},{"lineNumber":9,"author":{"gitId":"weidak"},"content":" */","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"weidak"},"content":"public interface FoodBankStorage {","lastModifiedDate":"2021-11-07"},{"lineNumber":11,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"weidak"},"content":"     * Loads the food bank file from data storage.","lastModifiedDate":"2021-11-07"},{"lineNumber":14,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"weidak"},"content":"     * @return FoodBank object from data storage","lastModifiedDate":"2021-11-07"},{"lineNumber":16,"author":{"gitId":"weidak"},"content":"     * @throws UnableToReadFileException if the filepath given is inaccessible or I/O was interrupted","lastModifiedDate":"2021-11-07"},{"lineNumber":17,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"weidak"},"content":"    ItemBank loadFoodBank() throws UnableToReadFileException;","lastModifiedDate":"2021-11-07"},{"lineNumber":19,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-11-07"},{"lineNumber":21,"author":{"gitId":"weidak"},"content":"     * Saves the Food Bank into storage.","lastModifiedDate":"2021-11-07"},{"lineNumber":22,"author":{"gitId":"weidak"},"content":"     * Used when there is an update to the Food Bank.","lastModifiedDate":"2021-11-07"},{"lineNumber":23,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-11-07"},{"lineNumber":24,"author":{"gitId":"weidak"},"content":"     * @param foodBank FoodBank that is to be saved","lastModifiedDate":"2021-11-07"},{"lineNumber":25,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-11-07"},{"lineNumber":26,"author":{"gitId":"weidak"},"content":"    void saveFoodBank(ItemBank foodBank) throws UnableToWriteFileException;","lastModifiedDate":"2021-11-07"},{"lineNumber":27,"author":{"gitId":"weidak"},"content":"}","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"weidak":27}},{"path":"src/main/java/seedu/duke/storage/data/food/foodbank/FoodBankStorageUtils.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weidak"},"content":"package seedu.duke.storage.data.food.foodbank;","lastModifiedDate":"2021-11-07"},{"lineNumber":2,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":3,"author":{"gitId":"weidak"},"content":"import seedu.duke.data.item.ItemBank;","lastModifiedDate":"2021-11-07"},{"lineNumber":4,"author":{"gitId":"weidak"},"content":"import seedu.duke.storage.StorageUtils;","lastModifiedDate":"2021-11-07"},{"lineNumber":5,"author":{"gitId":"weidak"},"content":"import seedu.duke.storage.data.ItemBankDecoder;","lastModifiedDate":"2021-11-07"},{"lineNumber":6,"author":{"gitId":"weidak"},"content":"import seedu.duke.storage.data.ItemEncoder;","lastModifiedDate":"2021-11-07"},{"lineNumber":7,"author":{"gitId":"weidak"},"content":"import seedu.duke.storage.exceptions.UnableToReadFileException;","lastModifiedDate":"2021-11-07"},{"lineNumber":8,"author":{"gitId":"weidak"},"content":"import seedu.duke.storage.exceptions.UnableToWriteFileException;","lastModifiedDate":"2021-11-07"},{"lineNumber":9,"author":{"gitId":"weidak"},"content":"import seedu.duke.storage.utilities.FileChecker;","lastModifiedDate":"2021-11-07"},{"lineNumber":10,"author":{"gitId":"weidak"},"content":"import seedu.duke.storage.utilities.FileSaver;","lastModifiedDate":"2021-11-07"},{"lineNumber":11,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":12,"author":{"gitId":"weidak"},"content":"import java.io.IOException;","lastModifiedDate":"2021-11-08"},{"lineNumber":13,"author":{"gitId":"weidak"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-11-07"},{"lineNumber":14,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":15,"author":{"gitId":"weidak"},"content":"/**","lastModifiedDate":"2021-11-07"},{"lineNumber":16,"author":{"gitId":"weidak"},"content":" * A Storage class that handles the saving and loading of the FoodBank.","lastModifiedDate":"2021-11-07"},{"lineNumber":17,"author":{"gitId":"weidak"},"content":" */","lastModifiedDate":"2021-11-07"},{"lineNumber":18,"author":{"gitId":"weidak"},"content":"public class FoodBankStorageUtils extends StorageUtils implements FoodBankStorage {","lastModifiedDate":"2021-11-07"},{"lineNumber":19,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":20,"author":{"gitId":"weidak"},"content":"    public static final String TYPE \u003d \"Food\";","lastModifiedDate":"2021-11-07"},{"lineNumber":21,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":22,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-11-07"},{"lineNumber":23,"author":{"gitId":"weidak"},"content":"     * Constructs the food bank storage handler with its respective path.","lastModifiedDate":"2021-11-07"},{"lineNumber":24,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-11-07"},{"lineNumber":25,"author":{"gitId":"weidak"},"content":"     * @param path the directory to save the food bank file","lastModifiedDate":"2021-11-07"},{"lineNumber":26,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-11-07"},{"lineNumber":27,"author":{"gitId":"weidak"},"content":"    public FoodBankStorageUtils(String path) {","lastModifiedDate":"2021-11-07"},{"lineNumber":28,"author":{"gitId":"weidak"},"content":"        this.filePath \u003d path;","lastModifiedDate":"2021-11-07"},{"lineNumber":29,"author":{"gitId":"weidak"},"content":"        this.fileName \u003d getFileName(path);","lastModifiedDate":"2021-11-07"},{"lineNumber":30,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":31,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":32,"author":{"gitId":"weidak"},"content":"    @Override","lastModifiedDate":"2021-11-07"},{"lineNumber":33,"author":{"gitId":"weidak"},"content":"    public ItemBank loadFoodBank() throws UnableToReadFileException {","lastModifiedDate":"2021-11-07"},{"lineNumber":34,"author":{"gitId":"weidak"},"content":"        try {","lastModifiedDate":"2021-11-07"},{"lineNumber":35,"author":{"gitId":"weidak"},"content":"            FileChecker.createFileIfMissing(filePath);","lastModifiedDate":"2021-11-08"},{"lineNumber":36,"author":{"gitId":"weidak"},"content":"            return ItemBankDecoder.retrieveDataFromItemBank(filePath, TYPE);","lastModifiedDate":"2021-11-07"},{"lineNumber":37,"author":{"gitId":"weidak"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-11-08"},{"lineNumber":38,"author":{"gitId":"weidak"},"content":"            logger.log(Level.FINE, \"The path is missing \", filePath);","lastModifiedDate":"2021-11-07"},{"lineNumber":39,"author":{"gitId":"weidak"},"content":"            throw new UnableToReadFileException(filePath);","lastModifiedDate":"2021-11-07"},{"lineNumber":40,"author":{"gitId":"weidak"},"content":"        }","lastModifiedDate":"2021-11-07"},{"lineNumber":41,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":42,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":43,"author":{"gitId":"weidak"},"content":"    @Override","lastModifiedDate":"2021-11-07"},{"lineNumber":44,"author":{"gitId":"weidak"},"content":"    public void saveFoodBank(ItemBank foodBank) throws UnableToWriteFileException {","lastModifiedDate":"2021-11-07"},{"lineNumber":45,"author":{"gitId":"weidak"},"content":"        FileSaver.saveTo(filePath, ItemEncoder.encode(foodBank));","lastModifiedDate":"2021-11-07"},{"lineNumber":46,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":47,"author":{"gitId":"weidak"},"content":"}","lastModifiedDate":"2021-11-07"}],"authorContributionMap":{"weidak":47}},{"path":"src/main/java/seedu/duke/storage/data/food/foodlist/FoodListDecoder.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weidak"},"content":"package seedu.duke.storage.data.food.foodlist;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"weidak"},"content":"import seedu.duke.data.item.food.Food;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"weidak"},"content":"import seedu.duke.data.item.food.FoodList;","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"weidak"},"content":"import seedu.duke.storage.Storage;","lastModifiedDate":"2021-11-07"},{"lineNumber":6,"author":{"gitId":"weidak"},"content":"import seedu.duke.storage.data.ListDecoder;","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"weidak"},"content":"import seedu.duke.storage.exceptions.InvalidDataException;","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"weidak"},"content":"import java.io.File;","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"weidak"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"weidak"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"weidak"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"weidak"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"weidak"},"content":"/**","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"weidak"},"content":" * Decodes the food list from the storage file.","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"weidak"},"content":" */","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"weidak"},"content":"public class FoodListDecoder extends ListDecoder {","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"weidak"},"content":"     * Retrieves food list from food_list.txt.","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"weidak"},"content":"     * @return The food list with data loaded from file","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"weidak"},"content":"     * @throws FileNotFoundException If file is misplaced/missing","lastModifiedDate":"2021-10-25"},{"lineNumber":25,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":26,"author":{"gitId":"weidak"},"content":"    public static FoodList retrieveFoodListFromData(String filePath) throws FileNotFoundException {","lastModifiedDate":"2021-10-25"},{"lineNumber":27,"author":{"gitId":"weidak"},"content":"        FoodList foodItems \u003d new FoodList();","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"weidak"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"weidak"},"content":"        Scanner in \u003d new Scanner(file);","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"weidak"},"content":"        decodeFoodItems(foodItems, in);","lastModifiedDate":"2021-10-25"},{"lineNumber":31,"author":{"gitId":"weidak"},"content":"        return foodItems;","lastModifiedDate":"2021-10-25"},{"lineNumber":32,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":33,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":34,"author":{"gitId":"weidak"},"content":"    private static void decodeFoodItems(FoodList foodItems, Scanner in) {","lastModifiedDate":"2021-10-25"},{"lineNumber":35,"author":{"gitId":"weidak"},"content":"        while (in.hasNext()) {","lastModifiedDate":"2021-10-25"},{"lineNumber":36,"author":{"gitId":"weidak"},"content":"            try {","lastModifiedDate":"2021-10-25"},{"lineNumber":37,"author":{"gitId":"weidak"},"content":"                decodeFoodDataFromString(foodItems, in.nextLine());","lastModifiedDate":"2021-10-25"},{"lineNumber":38,"author":{"gitId":"weidak"},"content":"            } catch (InvalidDataException e) {","lastModifiedDate":"2021-10-25"},{"lineNumber":39,"author":{"gitId":"weidak"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2021-10-25"},{"lineNumber":40,"author":{"gitId":"weidak"},"content":"            }","lastModifiedDate":"2021-10-25"},{"lineNumber":41,"author":{"gitId":"weidak"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":42,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":43,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":44,"author":{"gitId":"weidak"},"content":"    private static void decodeFoodDataFromString(FoodList foodItems, String line) throws InvalidDataException {","lastModifiedDate":"2021-10-25"},{"lineNumber":45,"author":{"gitId":"weidak"},"content":"        try {","lastModifiedDate":"2021-10-25"},{"lineNumber":46,"author":{"gitId":"weidak"},"content":"            final String[] foodDetails \u003d line.split(Storage.FILE_TEXT_DELIMITER);","lastModifiedDate":"2021-11-07"},{"lineNumber":47,"author":{"gitId":"weidak"},"content":"            final String name \u003d foodDetails[1];","lastModifiedDate":"2021-10-25"},{"lineNumber":48,"author":{"gitId":"weidak"},"content":"            final int calories \u003d Integer.parseInt(foodDetails[2]);","lastModifiedDate":"2021-10-25"},{"lineNumber":49,"author":{"gitId":"weidak"},"content":"            final LocalDateTime dateTimeOfFood \u003d parseDateTime(foodDetails[3]);","lastModifiedDate":"2021-10-25"},{"lineNumber":50,"author":{"gitId":"weidak"},"content":"            final Food food \u003d new Food(name, calories, dateTimeOfFood);","lastModifiedDate":"2021-10-30"},{"lineNumber":51,"author":{"gitId":"weidak"},"content":"            if (!food.isValid() || !isWithinPastTenYears(dateTimeOfFood.toLocalDate())) {","lastModifiedDate":"2021-11-02"},{"lineNumber":52,"author":{"gitId":"weidak"},"content":"                throw new InvalidDataException(Storage.FILENAME_LIST_FOOD, line);","lastModifiedDate":"2021-11-07"},{"lineNumber":53,"author":{"gitId":"weidak"},"content":"            }","lastModifiedDate":"2021-10-30"},{"lineNumber":54,"author":{"gitId":"weidak"},"content":"            foodItems.addItem(new Food(name, calories, dateTimeOfFood));","lastModifiedDate":"2021-10-25"},{"lineNumber":55,"author":{"gitId":"weidak"},"content":"        } catch (IndexOutOfBoundsException | NumberFormatException | NullPointerException | DateTimeException e) {","lastModifiedDate":"2021-11-02"},{"lineNumber":56,"author":{"gitId":"weidak"},"content":"            throw new InvalidDataException(Storage.FILENAME_LIST_FOOD, line);","lastModifiedDate":"2021-11-07"},{"lineNumber":57,"author":{"gitId":"weidak"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":58,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":59,"author":{"gitId":"weidak"},"content":"}","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"weidak":59}},{"path":"src/main/java/seedu/duke/storage/data/food/foodlist/FoodListStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weidak"},"content":"package seedu.duke.storage.data.food.foodlist;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"weidak"},"content":"import seedu.duke.data.item.food.FoodList;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"weidak"},"content":"import seedu.duke.storage.exceptions.UnableToReadFileException;","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"weidak"},"content":"import seedu.duke.storage.exceptions.UnableToWriteFileException;","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"weidak"},"content":"/**","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"weidak"},"content":" * Interface that ensures both the storage and storage manager has the","lastModifiedDate":"2021-11-07"},{"lineNumber":9,"author":{"gitId":"weidak"},"content":" * required functions to load and save from food list.","lastModifiedDate":"2021-11-07"},{"lineNumber":10,"author":{"gitId":"weidak"},"content":" */","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"weidak"},"content":"public interface FoodListStorage {","lastModifiedDate":"2021-11-07"},{"lineNumber":12,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"weidak"},"content":"     * Load food items into a FoodList object.","lastModifiedDate":"2021-11-07"},{"lineNumber":15,"author":{"gitId":"weidak"},"content":"     * Used when the selected profile is accessed and its respective ExerciseList is loaded.","lastModifiedDate":"2021-11-07"},{"lineNumber":16,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"weidak"},"content":"     * @return FoodList object with the details from the storage file","lastModifiedDate":"2021-11-07"},{"lineNumber":18,"author":{"gitId":"weidak"},"content":"     * @throws UnableToReadFileException If the file is inaccessible or due to environment variables","lastModifiedDate":"2021-11-07"},{"lineNumber":19,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"weidak"},"content":"    FoodList loadFoodList() throws UnableToReadFileException;","lastModifiedDate":"2021-11-07"},{"lineNumber":21,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-11-07"},{"lineNumber":23,"author":{"gitId":"weidak"},"content":"     * Saves the food items into the respective food list data file.","lastModifiedDate":"2021-11-07"},{"lineNumber":24,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-11-07"},{"lineNumber":25,"author":{"gitId":"weidak"},"content":"     * @param foodItems food items to be saved to the storage file","lastModifiedDate":"2021-11-07"},{"lineNumber":26,"author":{"gitId":"weidak"},"content":"     * @throws UnableToWriteFileException If the file is inaccessible or due to environment variables","lastModifiedDate":"2021-11-07"},{"lineNumber":27,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-11-07"},{"lineNumber":28,"author":{"gitId":"weidak"},"content":"    void saveFoodList(FoodList foodItems) throws UnableToWriteFileException;","lastModifiedDate":"2021-11-07"},{"lineNumber":29,"author":{"gitId":"weidak"},"content":"}","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"weidak":29}},{"path":"src/main/java/seedu/duke/storage/data/food/foodlist/FoodListStorageUtils.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weidak"},"content":"package seedu.duke.storage.data.food.foodlist;","lastModifiedDate":"2021-11-07"},{"lineNumber":2,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":3,"author":{"gitId":"weidak"},"content":"import seedu.duke.data.item.food.FoodList;","lastModifiedDate":"2021-11-07"},{"lineNumber":4,"author":{"gitId":"weidak"},"content":"import seedu.duke.storage.StorageUtils;","lastModifiedDate":"2021-11-07"},{"lineNumber":5,"author":{"gitId":"weidak"},"content":"import seedu.duke.storage.data.ItemEncoder;","lastModifiedDate":"2021-11-07"},{"lineNumber":6,"author":{"gitId":"weidak"},"content":"import seedu.duke.storage.exceptions.UnableToReadFileException;","lastModifiedDate":"2021-11-07"},{"lineNumber":7,"author":{"gitId":"weidak"},"content":"import seedu.duke.storage.exceptions.UnableToWriteFileException;","lastModifiedDate":"2021-11-07"},{"lineNumber":8,"author":{"gitId":"weidak"},"content":"import seedu.duke.storage.utilities.FileChecker;","lastModifiedDate":"2021-11-07"},{"lineNumber":9,"author":{"gitId":"weidak"},"content":"import seedu.duke.storage.utilities.FileSaver;","lastModifiedDate":"2021-11-07"},{"lineNumber":10,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":11,"author":{"gitId":"weidak"},"content":"import java.io.IOException;","lastModifiedDate":"2021-11-08"},{"lineNumber":12,"author":{"gitId":"weidak"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-11-07"},{"lineNumber":13,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":14,"author":{"gitId":"weidak"},"content":"/**","lastModifiedDate":"2021-11-07"},{"lineNumber":15,"author":{"gitId":"weidak"},"content":" * Storage that handles the saving and loading of data files of upcoming exercises in future exercise storage.","lastModifiedDate":"2021-11-07"},{"lineNumber":16,"author":{"gitId":"weidak"},"content":" */","lastModifiedDate":"2021-11-07"},{"lineNumber":17,"author":{"gitId":"weidak"},"content":"public class FoodListStorageUtils extends StorageUtils implements FoodListStorage {","lastModifiedDate":"2021-11-07"},{"lineNumber":18,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":19,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-11-07"},{"lineNumber":20,"author":{"gitId":"weidak"},"content":"     * Constructor for food list storage object.","lastModifiedDate":"2021-11-07"},{"lineNumber":21,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-11-07"},{"lineNumber":22,"author":{"gitId":"weidak"},"content":"     * @param filePath of where the food list should be saved","lastModifiedDate":"2021-11-07"},{"lineNumber":23,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-11-07"},{"lineNumber":24,"author":{"gitId":"weidak"},"content":"    public FoodListStorageUtils(String filePath) {","lastModifiedDate":"2021-11-07"},{"lineNumber":25,"author":{"gitId":"weidak"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2021-11-07"},{"lineNumber":26,"author":{"gitId":"weidak"},"content":"        this.fileName \u003d getFileName(filePath);","lastModifiedDate":"2021-11-07"},{"lineNumber":27,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":28,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":29,"author":{"gitId":"weidak"},"content":"    @Override","lastModifiedDate":"2021-11-07"},{"lineNumber":30,"author":{"gitId":"weidak"},"content":"    public FoodList loadFoodList() throws UnableToReadFileException {","lastModifiedDate":"2021-11-07"},{"lineNumber":31,"author":{"gitId":"weidak"},"content":"        try {","lastModifiedDate":"2021-11-07"},{"lineNumber":32,"author":{"gitId":"weidak"},"content":"            FileChecker.createFileIfMissing(filePath);","lastModifiedDate":"2021-11-08"},{"lineNumber":33,"author":{"gitId":"weidak"},"content":"            return FoodListDecoder.retrieveFoodListFromData(filePath);","lastModifiedDate":"2021-11-07"},{"lineNumber":34,"author":{"gitId":"weidak"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-11-08"},{"lineNumber":35,"author":{"gitId":"weidak"},"content":"            logger.log(Level.FINE, \"The path is missing \", filePath);","lastModifiedDate":"2021-11-07"},{"lineNumber":36,"author":{"gitId":"weidak"},"content":"            throw new UnableToReadFileException(fileName);","lastModifiedDate":"2021-11-07"},{"lineNumber":37,"author":{"gitId":"weidak"},"content":"        }","lastModifiedDate":"2021-11-07"},{"lineNumber":38,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":39,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":40,"author":{"gitId":"weidak"},"content":"    @Override","lastModifiedDate":"2021-11-07"},{"lineNumber":41,"author":{"gitId":"weidak"},"content":"    public void saveFoodList(FoodList foodItems) throws UnableToWriteFileException {","lastModifiedDate":"2021-11-07"},{"lineNumber":42,"author":{"gitId":"weidak"},"content":"        FileSaver.saveTo(filePath, ItemEncoder.encode(foodItems));","lastModifiedDate":"2021-11-07"},{"lineNumber":43,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":44,"author":{"gitId":"weidak"},"content":"}","lastModifiedDate":"2021-11-07"}],"authorContributionMap":{"weidak":44}},{"path":"src/main/java/seedu/duke/storage/data/profile/ProfileDecoder.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weidak"},"content":"package seedu.duke.storage.data.profile;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"tlyi"},"content":"import seedu.duke.data.profile.Profile;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"weidak"},"content":"import seedu.duke.data.profile.attributes.ActivityFactor;","lastModifiedDate":"2021-11-05"},{"lineNumber":5,"author":{"gitId":"weidak"},"content":"import seedu.duke.data.profile.attributes.Age;","lastModifiedDate":"2021-11-05"},{"lineNumber":6,"author":{"gitId":"weidak"},"content":"import seedu.duke.data.profile.attributes.CalorieGoal;","lastModifiedDate":"2021-11-05"},{"lineNumber":7,"author":{"gitId":"weidak"},"content":"import seedu.duke.data.profile.attributes.Gender;","lastModifiedDate":"2021-11-05"},{"lineNumber":8,"author":{"gitId":"weidak"},"content":"import seedu.duke.data.profile.attributes.Height;","lastModifiedDate":"2021-11-05"},{"lineNumber":9,"author":{"gitId":"weidak"},"content":"import seedu.duke.data.profile.attributes.Name;","lastModifiedDate":"2021-11-05"},{"lineNumber":10,"author":{"gitId":"weidak"},"content":"import seedu.duke.data.profile.attributes.Weight;","lastModifiedDate":"2021-11-05"},{"lineNumber":11,"author":{"gitId":"weidak"},"content":"import seedu.duke.storage.Storage;","lastModifiedDate":"2021-11-07"},{"lineNumber":12,"author":{"gitId":"weidak"},"content":"import seedu.duke.storage.exceptions.InvalidDataException;","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"weidak"},"content":"import java.io.File;","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"weidak"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"weidak"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"weidak"},"content":"/**","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"weidak"},"content":" * Decodes the profile from storage data.","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"weidak"},"content":" */","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"weidak"},"content":"public class ProfileDecoder {","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"weidak"},"content":"     * Retrieves profile data from profile.txt","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"weidak"},"content":"     * @return The profile object with its corresponding characteristics","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"weidak"},"content":"     * @throws FileNotFoundException          If the file is misplaced/missing","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"weidak"},"content":"    public static Profile retrieveProfileFromData(String filePath) throws FileNotFoundException {","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"weidak"},"content":"        try {","lastModifiedDate":"2021-11-05"},{"lineNumber":31,"author":{"gitId":"weidak"},"content":"            File file \u003d new File(filePath);","lastModifiedDate":"2021-10-25"},{"lineNumber":32,"author":{"gitId":"weidak"},"content":"            Scanner in \u003d new Scanner(file);","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"weidak"},"content":"            if (in.hasNext()) {","lastModifiedDate":"2021-10-25"},{"lineNumber":34,"author":{"gitId":"weidak"},"content":"                return decodeProfile(in.nextLine());","lastModifiedDate":"2021-11-05"},{"lineNumber":35,"author":{"gitId":"weidak"},"content":"            }","lastModifiedDate":"2021-10-25"},{"lineNumber":36,"author":{"gitId":"weidak"},"content":"        } catch (InvalidDataException e) {","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"weidak"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"weidak"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"weidak"},"content":"        throw new FileNotFoundException();","lastModifiedDate":"2021-11-08"},{"lineNumber":40,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":42,"author":{"gitId":"weidak"},"content":"    private static Profile decodeProfile(String line) throws InvalidDataException {","lastModifiedDate":"2021-11-05"},{"lineNumber":43,"author":{"gitId":"weidak"},"content":"        try {","lastModifiedDate":"2021-10-20"},{"lineNumber":44,"author":{"gitId":"weidak"},"content":"            final String[] profileDetails \u003d line.split(Storage.FILE_TEXT_DELIMITER);","lastModifiedDate":"2021-11-07"},{"lineNumber":45,"author":{"gitId":"weidak"},"content":"            final Name name \u003d decodeName(profileDetails[0]);","lastModifiedDate":"2021-11-05"},{"lineNumber":46,"author":{"gitId":"weidak"},"content":"            final Height height \u003d decodeHeight(profileDetails[1]);","lastModifiedDate":"2021-11-05"},{"lineNumber":47,"author":{"gitId":"weidak"},"content":"            final Weight weight \u003d decodeWeight(profileDetails[2]);","lastModifiedDate":"2021-11-05"},{"lineNumber":48,"author":{"gitId":"weidak"},"content":"            final Gender gender \u003d decodeGender(profileDetails[3]);","lastModifiedDate":"2021-11-05"},{"lineNumber":49,"author":{"gitId":"weidak"},"content":"            final Age age \u003d decodeAge(profileDetails[4]);","lastModifiedDate":"2021-11-05"},{"lineNumber":50,"author":{"gitId":"weidak"},"content":"            final CalorieGoal calorieGoal \u003d decodeCalorieGoal(profileDetails[5]);","lastModifiedDate":"2021-11-05"},{"lineNumber":51,"author":{"gitId":"weidak"},"content":"            final ActivityFactor activityFactor \u003d decodeActivityFactor(profileDetails[6]);","lastModifiedDate":"2021-11-05"},{"lineNumber":52,"author":{"gitId":"weidak"},"content":"            return new Profile(name, height, weight, gender, age, calorieGoal, activityFactor);","lastModifiedDate":"2021-11-08"},{"lineNumber":53,"author":{"gitId":"weidak"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-11-05"},{"lineNumber":54,"author":{"gitId":"weidak"},"content":"            throw new InvalidDataException(Storage.FILENAME_PROFILE, line);","lastModifiedDate":"2021-11-07"},{"lineNumber":55,"author":{"gitId":"weidak"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":56,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":57,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":58,"author":{"gitId":"weidak"},"content":"    private static Name decodeName(String detail) {","lastModifiedDate":"2021-11-05"},{"lineNumber":59,"author":{"gitId":"weidak"},"content":"        return new Name(detail);","lastModifiedDate":"2021-11-05"},{"lineNumber":60,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":61,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":62,"author":{"gitId":"weidak"},"content":"    private static Height decodeHeight(String detail) {","lastModifiedDate":"2021-11-05"},{"lineNumber":63,"author":{"gitId":"weidak"},"content":"        try {","lastModifiedDate":"2021-11-05"},{"lineNumber":64,"author":{"gitId":"weidak"},"content":"            return new Height(Double.parseDouble(detail));","lastModifiedDate":"2021-11-05"},{"lineNumber":65,"author":{"gitId":"weidak"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-11-05"},{"lineNumber":66,"author":{"gitId":"weidak"},"content":"            //Returns an invalid height for startup to detect","lastModifiedDate":"2021-11-05"},{"lineNumber":67,"author":{"gitId":"weidak"},"content":"            return new Height(Double.MIN_VALUE);","lastModifiedDate":"2021-11-05"},{"lineNumber":68,"author":{"gitId":"weidak"},"content":"        }","lastModifiedDate":"2021-11-05"},{"lineNumber":69,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":70,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":71,"author":{"gitId":"weidak"},"content":"    private static Weight decodeWeight(String detail) {","lastModifiedDate":"2021-11-05"},{"lineNumber":72,"author":{"gitId":"weidak"},"content":"        try {","lastModifiedDate":"2021-11-05"},{"lineNumber":73,"author":{"gitId":"weidak"},"content":"            return new Weight(Double.parseDouble(detail));","lastModifiedDate":"2021-11-05"},{"lineNumber":74,"author":{"gitId":"weidak"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-11-05"},{"lineNumber":75,"author":{"gitId":"weidak"},"content":"            //Returns an invalid weight for startup to detect","lastModifiedDate":"2021-11-05"},{"lineNumber":76,"author":{"gitId":"weidak"},"content":"            return new Weight(Double.MIN_VALUE);","lastModifiedDate":"2021-11-05"},{"lineNumber":77,"author":{"gitId":"weidak"},"content":"        }","lastModifiedDate":"2021-11-05"},{"lineNumber":78,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":79,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":80,"author":{"gitId":"weidak"},"content":"    private static Gender decodeGender(String detail) {","lastModifiedDate":"2021-11-05"},{"lineNumber":81,"author":{"gitId":"weidak"},"content":"        if (detail.length() \u003e 1) {","lastModifiedDate":"2021-11-05"},{"lineNumber":82,"author":{"gitId":"weidak"},"content":"            //Returns an invalid gender for startup to detect","lastModifiedDate":"2021-11-05"},{"lineNumber":83,"author":{"gitId":"weidak"},"content":"            return new Gender(\u0027X\u0027);","lastModifiedDate":"2021-11-05"},{"lineNumber":84,"author":{"gitId":"weidak"},"content":"        }","lastModifiedDate":"2021-11-05"},{"lineNumber":85,"author":{"gitId":"weidak"},"content":"        return new Gender(detail.charAt(0));","lastModifiedDate":"2021-11-05"},{"lineNumber":86,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":87,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":88,"author":{"gitId":"weidak"},"content":"    private static Age decodeAge(String detail) {","lastModifiedDate":"2021-11-05"},{"lineNumber":89,"author":{"gitId":"weidak"},"content":"        try {","lastModifiedDate":"2021-11-05"},{"lineNumber":90,"author":{"gitId":"weidak"},"content":"            return new Age(Integer.parseInt(detail));","lastModifiedDate":"2021-11-05"},{"lineNumber":91,"author":{"gitId":"weidak"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-11-05"},{"lineNumber":92,"author":{"gitId":"weidak"},"content":"            //Returns an invalid Age for startup to detect","lastModifiedDate":"2021-11-05"},{"lineNumber":93,"author":{"gitId":"weidak"},"content":"            return new Age(Integer.MIN_VALUE);","lastModifiedDate":"2021-11-05"},{"lineNumber":94,"author":{"gitId":"weidak"},"content":"        }","lastModifiedDate":"2021-11-05"},{"lineNumber":95,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":96,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":97,"author":{"gitId":"weidak"},"content":"    private static CalorieGoal decodeCalorieGoal(String detail) {","lastModifiedDate":"2021-11-05"},{"lineNumber":98,"author":{"gitId":"weidak"},"content":"        try {","lastModifiedDate":"2021-11-05"},{"lineNumber":99,"author":{"gitId":"weidak"},"content":"            return new CalorieGoal(Integer.parseInt(detail));","lastModifiedDate":"2021-11-05"},{"lineNumber":100,"author":{"gitId":"weidak"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-11-05"},{"lineNumber":101,"author":{"gitId":"weidak"},"content":"            //Returns an invalid CalorieGoal for startup to detect","lastModifiedDate":"2021-11-05"},{"lineNumber":102,"author":{"gitId":"weidak"},"content":"            return new CalorieGoal(Integer.MIN_VALUE);","lastModifiedDate":"2021-11-05"},{"lineNumber":103,"author":{"gitId":"weidak"},"content":"        }","lastModifiedDate":"2021-11-05"},{"lineNumber":104,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":105,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":106,"author":{"gitId":"weidak"},"content":"    private static ActivityFactor decodeActivityFactor(String detail) {","lastModifiedDate":"2021-11-05"},{"lineNumber":107,"author":{"gitId":"weidak"},"content":"        try {","lastModifiedDate":"2021-11-05"},{"lineNumber":108,"author":{"gitId":"weidak"},"content":"            return new ActivityFactor(Integer.parseInt(detail));","lastModifiedDate":"2021-11-05"},{"lineNumber":109,"author":{"gitId":"weidak"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-11-05"},{"lineNumber":110,"author":{"gitId":"weidak"},"content":"            //Returns an invalid ActivityFactor for startup to detect","lastModifiedDate":"2021-11-05"},{"lineNumber":111,"author":{"gitId":"weidak"},"content":"            return new ActivityFactor(Integer.MIN_VALUE);","lastModifiedDate":"2021-11-05"},{"lineNumber":112,"author":{"gitId":"weidak"},"content":"        }","lastModifiedDate":"2021-11-05"},{"lineNumber":113,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":114,"author":{"gitId":"weidak"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"weidak":113,"tlyi":1}},{"path":"src/main/java/seedu/duke/storage/data/profile/ProfileEncoder.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weidak"},"content":"package seedu.duke.storage.data.profile;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"tlyi"},"content":"import seedu.duke.data.profile.Profile;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"weidak"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"weidak"},"content":"/**","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"weidak"},"content":" * Encodes the profile attributes into an ArrayList to be saved.","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"weidak"},"content":" */","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"weidak"},"content":"public class ProfileEncoder {","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"weidak"},"content":"     * Encodes profile for storage.","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"weidak"},"content":"     * @param profile The profile object to be stored.","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"weidak"},"content":"     * @return An arraylist that contains the profile details to save.","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"weidak"},"content":"    public static ArrayList\u003cString\u003e encode(Profile profile) {","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"weidak"},"content":"        return new ArrayList\u003cString\u003e() {","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"weidak"},"content":"            {","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"weidak"},"content":"                add(profile.toFileTextString());","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"weidak"},"content":"            }","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"weidak"},"content":"        };","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"weidak"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"weidak":24,"tlyi":1}},{"path":"src/main/java/seedu/duke/storage/data/profile/ProfileStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weidak"},"content":"package seedu.duke.storage.data.profile;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"tlyi"},"content":"import seedu.duke.data.profile.Profile;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"weidak"},"content":"import seedu.duke.storage.exceptions.UnableToReadFileException;","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"weidak"},"content":"import seedu.duke.storage.exceptions.UnableToWriteFileException;","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"weidak"},"content":"/**","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"weidak"},"content":" * Interface that ensures the storage device has a load and save profile method.","lastModifiedDate":"2021-11-07"},{"lineNumber":9,"author":{"gitId":"weidak"},"content":" */","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"weidak"},"content":"public interface ProfileStorage {","lastModifiedDate":"2021-11-07"},{"lineNumber":11,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"weidak"},"content":"     * Loads the profile file from data storage.","lastModifiedDate":"2021-11-07"},{"lineNumber":13,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"weidak"},"content":"     * @return Profile object from data storage","lastModifiedDate":"2021-11-07"},{"lineNumber":15,"author":{"gitId":"weidak"},"content":"     * @throws UnableToReadFileException if the filepath given is inaccessible or I/O was interrupted","lastModifiedDate":"2021-11-07"},{"lineNumber":16,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"weidak"},"content":"    Profile loadProfile() throws UnableToReadFileException;","lastModifiedDate":"2021-11-07"},{"lineNumber":18,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-11-07"},{"lineNumber":20,"author":{"gitId":"weidak"},"content":"     * Saves the profile details into storage.","lastModifiedDate":"2021-11-07"},{"lineNumber":21,"author":{"gitId":"weidak"},"content":"     * Used when there is an update to any profile attribute.","lastModifiedDate":"2021-11-07"},{"lineNumber":22,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-11-07"},{"lineNumber":23,"author":{"gitId":"weidak"},"content":"     * @param profile Profile of the current user","lastModifiedDate":"2021-11-07"},{"lineNumber":24,"author":{"gitId":"weidak"},"content":"     * @throws UnableToWriteFileException if the filepath given is inaccessible or I/O was interrupted","lastModifiedDate":"2021-11-07"},{"lineNumber":25,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-11-07"},{"lineNumber":26,"author":{"gitId":"weidak"},"content":"    void saveProfile(Profile profile) throws UnableToWriteFileException;","lastModifiedDate":"2021-11-07"},{"lineNumber":27,"author":{"gitId":"weidak"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"weidak":26,"tlyi":1}},{"path":"src/main/java/seedu/duke/storage/data/profile/ProfileStorageUtils.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weidak"},"content":"package seedu.duke.storage.data.profile;","lastModifiedDate":"2021-11-07"},{"lineNumber":2,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":3,"author":{"gitId":"weidak"},"content":"import seedu.duke.data.profile.Profile;","lastModifiedDate":"2021-11-07"},{"lineNumber":4,"author":{"gitId":"weidak"},"content":"import seedu.duke.storage.StorageUtils;","lastModifiedDate":"2021-11-07"},{"lineNumber":5,"author":{"gitId":"weidak"},"content":"import seedu.duke.storage.exceptions.UnableToReadFileException;","lastModifiedDate":"2021-11-07"},{"lineNumber":6,"author":{"gitId":"weidak"},"content":"import seedu.duke.storage.exceptions.UnableToWriteFileException;","lastModifiedDate":"2021-11-07"},{"lineNumber":7,"author":{"gitId":"weidak"},"content":"import seedu.duke.storage.utilities.FileChecker;","lastModifiedDate":"2021-11-07"},{"lineNumber":8,"author":{"gitId":"weidak"},"content":"import seedu.duke.storage.utilities.FileSaver;","lastModifiedDate":"2021-11-07"},{"lineNumber":9,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":10,"author":{"gitId":"weidak"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-11-07"},{"lineNumber":11,"author":{"gitId":"weidak"},"content":"import java.io.IOException;","lastModifiedDate":"2021-11-08"},{"lineNumber":12,"author":{"gitId":"weidak"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-11-07"},{"lineNumber":13,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":14,"author":{"gitId":"weidak"},"content":"/**","lastModifiedDate":"2021-11-07"},{"lineNumber":15,"author":{"gitId":"weidak"},"content":" * A Storage class that handles the saving and loading of the Profile.","lastModifiedDate":"2021-11-07"},{"lineNumber":16,"author":{"gitId":"weidak"},"content":" */","lastModifiedDate":"2021-11-07"},{"lineNumber":17,"author":{"gitId":"weidak"},"content":"public class ProfileStorageUtils extends StorageUtils implements ProfileStorage {","lastModifiedDate":"2021-11-07"},{"lineNumber":18,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":19,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-11-07"},{"lineNumber":20,"author":{"gitId":"weidak"},"content":"     * Constructs the profile storage handler with its respective path.","lastModifiedDate":"2021-11-07"},{"lineNumber":21,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-11-07"},{"lineNumber":22,"author":{"gitId":"weidak"},"content":"     * @param path the directory to save the profile file","lastModifiedDate":"2021-11-07"},{"lineNumber":23,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-11-07"},{"lineNumber":24,"author":{"gitId":"weidak"},"content":"    public ProfileStorageUtils(String path) {","lastModifiedDate":"2021-11-07"},{"lineNumber":25,"author":{"gitId":"weidak"},"content":"        this.filePath \u003d path;","lastModifiedDate":"2021-11-07"},{"lineNumber":26,"author":{"gitId":"weidak"},"content":"        this.fileName \u003d getFileName(path);","lastModifiedDate":"2021-11-07"},{"lineNumber":27,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":28,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":29,"author":{"gitId":"weidak"},"content":"    @Override","lastModifiedDate":"2021-11-07"},{"lineNumber":30,"author":{"gitId":"weidak"},"content":"    public Profile loadProfile() throws UnableToReadFileException {","lastModifiedDate":"2021-11-07"},{"lineNumber":31,"author":{"gitId":"weidak"},"content":"        try {","lastModifiedDate":"2021-11-07"},{"lineNumber":32,"author":{"gitId":"weidak"},"content":"            FileChecker.createFileIfMissing(filePath);","lastModifiedDate":"2021-11-08"},{"lineNumber":33,"author":{"gitId":"weidak"},"content":"            return ProfileDecoder.retrieveProfileFromData(filePath);","lastModifiedDate":"2021-11-07"},{"lineNumber":34,"author":{"gitId":"weidak"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-11-08"},{"lineNumber":35,"author":{"gitId":"weidak"},"content":"            throw new UnableToReadFileException(fileName);","lastModifiedDate":"2021-11-07"},{"lineNumber":36,"author":{"gitId":"weidak"},"content":"        }","lastModifiedDate":"2021-11-07"},{"lineNumber":37,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":38,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":39,"author":{"gitId":"weidak"},"content":"    @Override","lastModifiedDate":"2021-11-07"},{"lineNumber":40,"author":{"gitId":"weidak"},"content":"    public void saveProfile(Profile profile) throws UnableToWriteFileException {","lastModifiedDate":"2021-11-07"},{"lineNumber":41,"author":{"gitId":"weidak"},"content":"        FileSaver.saveTo(filePath, ProfileEncoder.encode(profile));","lastModifiedDate":"2021-11-07"},{"lineNumber":42,"author":{"gitId":"weidak"},"content":"        logger.log(Level.FINE, \"Saved profile.\");","lastModifiedDate":"2021-11-07"},{"lineNumber":43,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":44,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":45,"author":{"gitId":"weidak"},"content":"}","lastModifiedDate":"2021-11-07"}],"authorContributionMap":{"weidak":45}},{"path":"src/main/java/seedu/duke/storage/exceptions/InvalidDataException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weidak"},"content":"package seedu.duke.storage.exceptions;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"weidak"},"content":"/**","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"weidak"},"content":" * Exception that is thrown when the data has been modified and become unreadable.","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"weidak"},"content":" */","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"weidak"},"content":"public class InvalidDataException extends Exception {","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"weidak"},"content":"    private static final String LS \u003d System.lineSeparator();","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"weidak"},"content":"    private static final String DIVIDER \u003d \"............................................................................\"","lastModifiedDate":"2021-11-02"},{"lineNumber":9,"author":{"gitId":"weidak"},"content":"             + \"..............................\";","lastModifiedDate":"2021-11-02"},{"lineNumber":10,"author":{"gitId":"weidak"},"content":"    private static final String ERROR_MESSAGE \u003d DIVIDER + LS","lastModifiedDate":"2021-10-28"},{"lineNumber":11,"author":{"gitId":"weidak"},"content":"            + \"There is an invalid line in %1$s. \" + LS","lastModifiedDate":"2021-11-02"},{"lineNumber":12,"author":{"gitId":"weidak"},"content":"            + \"The values are either out of accepted range or we are unable to read it.\" + LS","lastModifiedDate":"2021-11-02"},{"lineNumber":13,"author":{"gitId":"weidak"},"content":"            + \"\\\"%2$s\\\" will not be loaded into the bot.\" + LS + DIVIDER;","lastModifiedDate":"2021-10-28"},{"lineNumber":14,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"weidak"},"content":"    public InvalidDataException(String file, String inputData) {","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"weidak"},"content":"        super(String.format(ERROR_MESSAGE, file, inputData));","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"weidak"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"weidak":19}},{"path":"src/main/java/seedu/duke/storage/exceptions/UnableToReadFileException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weidak"},"content":"package seedu.duke.storage.exceptions;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"weidak"},"content":"/**","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"weidak"},"content":" * An error that is thrown when the bot is unable to access the file or create the file.","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"weidak"},"content":" */","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"weidak"},"content":"public class UnableToReadFileException extends Exception {","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"weidak"},"content":"    private static final String ERROR_MESSAGE \u003d \" file is inaccessible due to an environment error.\"","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"tlyi"},"content":"            + System.lineSeparator() + \"Please restart Fitbot and try again! :(\";","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"weidak"},"content":"    public UnableToReadFileException(String fileName) {","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"weidak"},"content":"        super(fileName + ERROR_MESSAGE);","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"weidak"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"weidak":12,"tlyi":1}},{"path":"src/main/java/seedu/duke/storage/exceptions/UnableToWriteFileException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weidak"},"content":"package seedu.duke.storage.exceptions;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"weidak"},"content":"/**","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"weidak"},"content":" * An error that indicates if there is an environment error with the file it is trying to write to.","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"weidak"},"content":" */","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"weidak"},"content":"public class UnableToWriteFileException extends Exception {","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"tlyi"},"content":"    private static final String ERROR_MESSAGE \u003d \"Unable to write to file, something went wrong while saving! \"","lastModifiedDate":"2021-11-04"},{"lineNumber":8,"author":{"gitId":"tlyi"},"content":"            + \"Please restart Fitbot and try again! :(\";","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"weidak"},"content":"    public UnableToWriteFileException() {","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"weidak"},"content":"        super(ERROR_MESSAGE);","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"weidak"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"weidak":11,"tlyi":2}},{"path":"src/main/java/seedu/duke/storage/utilities/FileChecker.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weidak"},"content":"package seedu.duke.storage.utilities;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"weidak"},"content":"import seedu.duke.storage.exceptions.UnableToReadFileException;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"weidak"},"content":"import java.io.File;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"weidak"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"weidak"},"content":"import java.nio.file.Files;","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"weidak"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"weidak"},"content":"/**","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"weidak"},"content":" * A File utility that checks and creates the directory and files if they are missing.","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"weidak"},"content":" */","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"weidak"},"content":"public class FileChecker {","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"weidak"},"content":"    private static final String FILEPATH \u003d \"./data/\";","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"weidak"},"content":"     * Creates the directory and file if it is unable to find the file.","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"weidak"},"content":"     * @param path The file path that it is checking","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"weidak"},"content":"     * @throws UnableToReadFileException If it is unable to find the path specified","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"weidak"},"content":"    public static void createFileIfMissing(String path) throws IOException {","lastModifiedDate":"2021-11-08"},{"lineNumber":24,"author":{"gitId":"weidak"},"content":"        final File file \u003d new File(path);","lastModifiedDate":"2021-11-02"},{"lineNumber":25,"author":{"gitId":"weidak"},"content":"        createDirectory();","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"weidak"},"content":"        checkFileExists(file);","lastModifiedDate":"2021-11-02"},{"lineNumber":27,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"weidak"},"content":"    private static void checkFileExists(File fileToCheck) throws IOException {","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"weidak"},"content":"        if (!fileToCheck.exists()) {","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"weidak"},"content":"            fileToCheck.createNewFile();","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"weidak"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"weidak"},"content":"    private static void createDirectory() throws IOException {","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"weidak"},"content":"        Files.createDirectories(Paths.get(FILEPATH));","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":38,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":39,"author":{"gitId":"weidak"},"content":"    private static String getFileName(String path) {","lastModifiedDate":"2021-10-24"},{"lineNumber":40,"author":{"gitId":"weidak"},"content":"        return path.split(\"/\")[2];","lastModifiedDate":"2021-10-24"},{"lineNumber":41,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":42,"author":{"gitId":"weidak"},"content":"}","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"weidak":42}},{"path":"src/main/java/seedu/duke/storage/utilities/FileSaver.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weidak"},"content":"package seedu.duke.storage.utilities;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"weidak"},"content":"import seedu.duke.storage.exceptions.UnableToWriteFileException;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"weidak"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"weidak"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"weidak"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"weidak"},"content":"/**","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"weidak"},"content":" * A File utility that saves the data into their corresponding file paths.","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"weidak"},"content":" */","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"weidak"},"content":"public class FileSaver {","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"weidak"},"content":"     * Saves an ArrayList of strings to a given filepath.","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"weidak"},"content":"     * @param path filepath of the ArrayList to be stored","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"weidak"},"content":"     * @throws UnableToWriteFileException If the saving is interrupted by an environment variable","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"weidak"},"content":"    public static void saveTo(String path, ArrayList\u003cString\u003e toSave) throws UnableToWriteFileException {","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"weidak"},"content":"        try {","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"weidak"},"content":"            FileWriter fw \u003d new FileWriter(path);","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"weidak"},"content":"            writeTo(fw, toSave);","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"weidak"},"content":"            closeFile(fw);","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"weidak"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"weidak"},"content":"            throw new UnableToWriteFileException();","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"weidak"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"weidak"},"content":"    private static void writeTo(FileWriter fw, ArrayList\u003cString\u003e toSave) throws IOException {","lastModifiedDate":"2021-10-25"},{"lineNumber":31,"author":{"gitId":"weidak"},"content":"        for (String item : toSave) {","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"weidak"},"content":"            fw.write(item + System.lineSeparator());","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"weidak"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"weidak"},"content":"    private static void closeFile(FileWriter fw) throws IOException {","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"weidak"},"content":"        fw.close();","lastModifiedDate":"2021-10-24"},{"lineNumber":38,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":39,"author":{"gitId":"weidak"},"content":"}","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"weidak":39}},{"path":"src/main/java/seedu/duke/ui/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.ui;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"tlyi"},"content":"import seedu.duke.logic.commands.HelpCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"tlyi"},"content":"import seedu.duke.logic.parser.exceptions.MissingParamException;","lastModifiedDate":"2021-11-03"},{"lineNumber":5,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":6,"author":{"gitId":"tlyi"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"tttyyzzz"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"tlyi"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"tttyyzzz"},"content":"/**","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"tttyyzzz"},"content":" * This class deals with interaction with user on CLI.","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"tttyyzzz"},"content":" * Also helps to change color of output if required.","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"tttyyzzz"},"content":" */","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"tttyyzzz"},"content":"public class Ui {","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"tlyi"},"content":"    public static final String TAB \u003d \"\\t\";","lastModifiedDate":"2021-11-04"},{"lineNumber":17,"author":{"gitId":"tlyi"},"content":"    public static final String DIVIDER \u003d \"___________________________________________\"","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"tlyi"},"content":"            + \"_______________________________________________________________\";","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"tlyi"},"content":"    public static final String STAR_DIVIDER \u003d \"*\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\"","lastModifiedDate":"2021-11-04"},{"lineNumber":20,"author":{"gitId":"tlyi"},"content":"            + \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d*\";","lastModifiedDate":"2021-11-04"},{"lineNumber":21,"author":{"gitId":"tttyyzzz"},"content":"    public static final String LS \u003d System.lineSeparator();","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"tlyi"},"content":"    public static final String INDENTED_LS \u003d LS + TAB;","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"tttyyzzz"},"content":"    private static final String FITBOT_V0 \u003d \"  ______ _ _   _           _\"","lastModifiedDate":"2021-10-31"},{"lineNumber":24,"author":{"gitId":"tttyyzzz"},"content":"            + LS","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"tttyyzzz"},"content":"            + \" |  ____(_) | | |         | |\"","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"tttyyzzz"},"content":"            + LS","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"tttyyzzz"},"content":"            + \" | |__   _| |_| |__   ___ | |_\"","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"tttyyzzz"},"content":"            + LS","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"tttyyzzz"},"content":"            + \" |  __| | | __| \u0027_ \\\\ / _ \\\\| __|\"","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"tttyyzzz"},"content":"            + LS","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"tttyyzzz"},"content":"            + \" | |    | | |_| |_) | (_) | |_\"","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"tttyyzzz"},"content":"            + LS","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"tttyyzzz"},"content":"            + \" |_|    |_|\\\\__|_.__/ \\\\___/ \\\\__|\";","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"tttyyzzz"},"content":"    private static final String MESSAGE_WELCOME \u003d \"Welcome to Fitbot!\"","lastModifiedDate":"2021-10-31"},{"lineNumber":35,"author":{"gitId":"tttyyzzz"},"content":"            + \" Fitbot is here to help you to keep track of your calories.\";","lastModifiedDate":"2021-10-25"},{"lineNumber":36,"author":{"gitId":"tttyyzzz"},"content":"    public static final String MESSAGE_DIRECT_HELP \u003d \"You can start by typing a command or view the list of \"","lastModifiedDate":"2021-10-25"},{"lineNumber":37,"author":{"gitId":"tlyi"},"content":"            + \"available commands by typing \" + HelpCommand.MESSAGE_COMMAND_FORMAT + \".\" + LS + DIVIDER;","lastModifiedDate":"2021-11-04"},{"lineNumber":38,"author":{"gitId":"tlyi"},"content":"    private static final String MESSAGE_FIX_PROFILE \u003d LS + STAR_DIVIDER + LS + \"                   \"","lastModifiedDate":"2021-11-04"},{"lineNumber":39,"author":{"gitId":"tlyi"},"content":"            + \"Fitbot realised that some of your profile \"","lastModifiedDate":"2021-11-04"},{"lineNumber":40,"author":{"gitId":"tlyi"},"content":"            + \"attributes are missing.\"","lastModifiedDate":"2021-11-04"},{"lineNumber":41,"author":{"gitId":"tlyi"},"content":"            + LS + \"                \" + \"Please follow the instructions below so that your profile can be complete.\";","lastModifiedDate":"2021-11-04"},{"lineNumber":42,"author":{"gitId":"tlyi"},"content":"    private static final String MESSAGE_NEW_PROFILE \u003d LS + STAR_DIVIDER + LS + \"      \"","lastModifiedDate":"2021-11-04"},{"lineNumber":43,"author":{"gitId":"tlyi"},"content":"            + \"Fitbot realised that your profile has not been created.\"","lastModifiedDate":"2021-11-04"},{"lineNumber":44,"author":{"gitId":"tlyi"},"content":"            + \" Let\u0027s start creating a profile below!\";","lastModifiedDate":"2021-10-28"},{"lineNumber":45,"author":{"gitId":"tttyyzzz"},"content":"    private static final String MESSAGE_EMPTY_INPUT \u003d \"Input cannot be empty\";","lastModifiedDate":"2021-10-31"},{"lineNumber":46,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_CREATE_PROFILE_SUCCESSFUL \u003d LS","lastModifiedDate":"2021-11-04"},{"lineNumber":47,"author":{"gitId":"tlyi"},"content":"            + \"                                    \"","lastModifiedDate":"2021-11-04"},{"lineNumber":48,"author":{"gitId":"tlyi"},"content":"            + \"Profile created successfully!\" + LS + STAR_DIVIDER + LS;","lastModifiedDate":"2021-11-04"},{"lineNumber":49,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":50,"author":{"gitId":"tlyi"},"content":"    private Scanner scanner;","lastModifiedDate":"2021-10-11"},{"lineNumber":51,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":52,"author":{"gitId":"tlyi"},"content":"    public Ui() {","lastModifiedDate":"2021-10-11"},{"lineNumber":53,"author":{"gitId":"tlyi"},"content":"        this.scanner \u003d new Scanner(System.in);","lastModifiedDate":"2021-10-11"},{"lineNumber":54,"author":{"gitId":"tlyi"},"content":"        this.printStartApplicationPage();","lastModifiedDate":"2021-10-11"},{"lineNumber":55,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":56,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":57,"author":{"gitId":"tttyyzzz"},"content":"    public String getUserInput() {","lastModifiedDate":"2021-10-25"},{"lineNumber":58,"author":{"gitId":"tlyi"},"content":"        return scanner.nextLine();","lastModifiedDate":"2021-10-11"},{"lineNumber":59,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":60,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":61,"author":{"gitId":"tttyyzzz"},"content":"    private static Logger logger \u003d Logger.getLogger(Ui.class.getName());","lastModifiedDate":"2021-10-13"},{"lineNumber":62,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":63,"author":{"gitId":"tttyyzzz"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":64,"author":{"gitId":"tttyyzzz"},"content":"     * Surround strings with lines for user to differentiate results.","lastModifiedDate":"2021-10-08"},{"lineNumber":65,"author":{"gitId":"tttyyzzz"},"content":"     *","lastModifiedDate":"2021-10-08"},{"lineNumber":66,"author":{"gitId":"tttyyzzz"},"content":"     * @param messages is the strings that need to be printed on CLI","lastModifiedDate":"2021-10-08"},{"lineNumber":67,"author":{"gitId":"tttyyzzz"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":68,"author":{"gitId":"tlyi"},"content":"    public void formatMessageFramedWithDivider(String... messages) {","lastModifiedDate":"2021-10-11"},{"lineNumber":69,"author":{"gitId":"tttyyzzz"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2021-10-08"},{"lineNumber":70,"author":{"gitId":"tttyyzzz"},"content":"        for (String message : messages) {","lastModifiedDate":"2021-10-08"},{"lineNumber":71,"author":{"gitId":"tttyyzzz"},"content":"            System.out.println(message);","lastModifiedDate":"2021-10-08"},{"lineNumber":72,"author":{"gitId":"tttyyzzz"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":73,"author":{"gitId":"tttyyzzz"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2021-10-26"},{"lineNumber":74,"author":{"gitId":"tttyyzzz"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":75,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":76,"author":{"gitId":"tttyyzzz"},"content":"    public void formatMessageWithTopDivider(String... messages) {","lastModifiedDate":"2021-10-26"},{"lineNumber":77,"author":{"gitId":"tttyyzzz"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2021-10-26"},{"lineNumber":78,"author":{"gitId":"tttyyzzz"},"content":"        for (String message : messages) {","lastModifiedDate":"2021-10-26"},{"lineNumber":79,"author":{"gitId":"tttyyzzz"},"content":"            System.out.println(message);","lastModifiedDate":"2021-10-26"},{"lineNumber":80,"author":{"gitId":"tttyyzzz"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":81,"author":{"gitId":"tttyyzzz"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":82,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":83,"author":{"gitId":"tttyyzzz"},"content":"    public void formatMessageWithBottomDivider(String... messages) {","lastModifiedDate":"2021-10-26"},{"lineNumber":84,"author":{"gitId":"tttyyzzz"},"content":"        for (String message : messages) {","lastModifiedDate":"2021-10-26"},{"lineNumber":85,"author":{"gitId":"tttyyzzz"},"content":"            System.out.println(message);","lastModifiedDate":"2021-10-26"},{"lineNumber":86,"author":{"gitId":"tttyyzzz"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":87,"author":{"gitId":"tttyyzzz"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2021-10-26"},{"lineNumber":88,"author":{"gitId":"tttyyzzz"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":89,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":90,"author":{"gitId":"tlyi"},"content":"    public void printStartApplicationPage() {","lastModifiedDate":"2021-10-11"},{"lineNumber":91,"author":{"gitId":"tttyyzzz"},"content":"        logger.log(Level.FINE, \"start of application\");","lastModifiedDate":"2021-10-13"},{"lineNumber":92,"author":{"gitId":"tttyyzzz"},"content":"        System.out.println(FITBOT_V0 + LS + MESSAGE_WELCOME);","lastModifiedDate":"2021-10-20"},{"lineNumber":93,"author":{"gitId":"tttyyzzz"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":94,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":95,"author":{"gitId":"tttyyzzz"},"content":"    public void printStartMessage(boolean isProfileComplete, boolean isProfilePresent) {","lastModifiedDate":"2021-10-20"},{"lineNumber":96,"author":{"gitId":"tttyyzzz"},"content":"        if (isProfileComplete) {","lastModifiedDate":"2021-10-20"},{"lineNumber":97,"author":{"gitId":"tttyyzzz"},"content":"            System.out.println(MESSAGE_DIRECT_HELP);","lastModifiedDate":"2021-10-20"},{"lineNumber":98,"author":{"gitId":"tttyyzzz"},"content":"            return;","lastModifiedDate":"2021-10-20"},{"lineNumber":99,"author":{"gitId":"tttyyzzz"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":100,"author":{"gitId":"tttyyzzz"},"content":"        if (isProfilePresent) {","lastModifiedDate":"2021-10-20"},{"lineNumber":101,"author":{"gitId":"tttyyzzz"},"content":"            System.out.println(MESSAGE_FIX_PROFILE);","lastModifiedDate":"2021-10-20"},{"lineNumber":102,"author":{"gitId":"tttyyzzz"},"content":"        } else {","lastModifiedDate":"2021-11-04"},{"lineNumber":103,"author":{"gitId":"tttyyzzz"},"content":"            System.out.println(MESSAGE_NEW_PROFILE);","lastModifiedDate":"2021-10-20"},{"lineNumber":104,"author":{"gitId":"tttyyzzz"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":105,"author":{"gitId":"tttyyzzz"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":106,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":107,"author":{"gitId":"tttyyzzz"},"content":"    /**","lastModifiedDate":"2021-10-31"},{"lineNumber":108,"author":{"gitId":"tttyyzzz"},"content":"     * Checks if user input is empty.","lastModifiedDate":"2021-10-31"},{"lineNumber":109,"author":{"gitId":"tttyyzzz"},"content":"     *","lastModifiedDate":"2021-10-31"},{"lineNumber":110,"author":{"gitId":"tttyyzzz"},"content":"     * @param userInput input from the user.","lastModifiedDate":"2021-10-31"},{"lineNumber":111,"author":{"gitId":"tlyi"},"content":"     * @throws MissingParamException if input length is 0 (missing).","lastModifiedDate":"2021-11-03"},{"lineNumber":112,"author":{"gitId":"tttyyzzz"},"content":"     */","lastModifiedDate":"2021-10-31"},{"lineNumber":113,"author":{"gitId":"tlyi"},"content":"    public void checkEmptyUserInput(String userInput) throws MissingParamException {","lastModifiedDate":"2021-11-03"},{"lineNumber":114,"author":{"gitId":"tttyyzzz"},"content":"        if (userInput.length() \u003d\u003d 0) {","lastModifiedDate":"2021-10-31"},{"lineNumber":115,"author":{"gitId":"tlyi"},"content":"            throw new MissingParamException(MESSAGE_EMPTY_INPUT);","lastModifiedDate":"2021-11-03"},{"lineNumber":116,"author":{"gitId":"tttyyzzz"},"content":"        }","lastModifiedDate":"2021-10-31"},{"lineNumber":117,"author":{"gitId":"tttyyzzz"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":118,"author":{"gitId":"tttyyzzz"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"tttyyzzz":79,"tlyi":39}},{"path":"src/test/java/seedu/duke/data/profile/ProfileTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.data.profile;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"weidak"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"tlyi"},"content":"import seedu.duke.data.profile.exceptions.InvalidCharacteristicException;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"weidak"},"content":"import seedu.duke.data.profile.utilities.ProfileUtils;","lastModifiedDate":"2021-10-30"},{"lineNumber":6,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"weidak"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"weidak"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"weidak"},"content":"class ProfileTest {","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"weidak"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"weidak"},"content":"    void calculateBmi_twoDoubleInputs_expectDoubleReturned() throws InvalidCharacteristicException {","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"weidak"},"content":"        final double height \u003d 171.2;","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"weidak"},"content":"        final double weight \u003d 59.8;","lastModifiedDate":"2021-10-18"},{"lineNumber":17,"author":{"gitId":"weidak"},"content":"        assertEquals(20.4, ProfileUtils.calculateBmi(height, weight));","lastModifiedDate":"2021-10-30"},{"lineNumber":18,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":20,"author":{"gitId":"weidak"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"weidak"},"content":"    void calculateBmi_negativeHeightInput_expectInvalidCharacteristicException() {","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"weidak"},"content":"        final double height \u003d -171.2;","lastModifiedDate":"2021-10-18"},{"lineNumber":23,"author":{"gitId":"weidak"},"content":"        final double weight \u003d 59.8;","lastModifiedDate":"2021-10-18"},{"lineNumber":24,"author":{"gitId":"weidak"},"content":"        assertThrows(InvalidCharacteristicException.class,","lastModifiedDate":"2021-10-18"},{"lineNumber":25,"author":{"gitId":"weidak"},"content":"            () -\u003e ProfileUtils.calculateBmi(height, weight));","lastModifiedDate":"2021-10-30"},{"lineNumber":26,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":27,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":28,"author":{"gitId":"weidak"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":29,"author":{"gitId":"weidak"},"content":"    void calculateBmi_negativeWeightInput_expectInvalidCharacteristicException() {","lastModifiedDate":"2021-10-18"},{"lineNumber":30,"author":{"gitId":"weidak"},"content":"        final double height \u003d 171.2;","lastModifiedDate":"2021-10-18"},{"lineNumber":31,"author":{"gitId":"weidak"},"content":"        final double weight \u003d -59.8;","lastModifiedDate":"2021-10-18"},{"lineNumber":32,"author":{"gitId":"weidak"},"content":"        assertThrows(InvalidCharacteristicException.class,","lastModifiedDate":"2021-10-09"},{"lineNumber":33,"author":{"gitId":"weidak"},"content":"            () -\u003e ProfileUtils.calculateBmi(height, weight));","lastModifiedDate":"2021-10-30"},{"lineNumber":34,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":35,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":36,"author":{"gitId":"weidak"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":37,"author":{"gitId":"weidak"},"content":"    void retrieveBmiStatus_validBmiInputs_expectCorrectStatuses() {","lastModifiedDate":"2021-10-18"},{"lineNumber":38,"author":{"gitId":"weidak"},"content":"        final String expectedStatusUnderweight \u003d \"Underweight\";","lastModifiedDate":"2021-10-18"},{"lineNumber":39,"author":{"gitId":"weidak"},"content":"        final String expectedStatusHealthy \u003d \"Healthy\";","lastModifiedDate":"2021-10-18"},{"lineNumber":40,"author":{"gitId":"weidak"},"content":"        final String expectedStatusOverweight \u003d \"Overweight\";","lastModifiedDate":"2021-10-18"},{"lineNumber":41,"author":{"gitId":"weidak"},"content":"        final String expectedStatusObese \u003d \"Obese\";","lastModifiedDate":"2021-10-18"},{"lineNumber":42,"author":{"gitId":"weidak"},"content":"        final double bmiUnderweight \u003d 10.5;","lastModifiedDate":"2021-10-18"},{"lineNumber":43,"author":{"gitId":"weidak"},"content":"        final double bmiHealthy \u003d 22.5;","lastModifiedDate":"2021-10-18"},{"lineNumber":44,"author":{"gitId":"weidak"},"content":"        final double bmiOverweight \u003d 25.5;","lastModifiedDate":"2021-10-18"},{"lineNumber":45,"author":{"gitId":"weidak"},"content":"        final double bmiObese \u003d 30.0;","lastModifiedDate":"2021-10-18"},{"lineNumber":46,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":47,"author":{"gitId":"weidak"},"content":"        assertEquals(expectedStatusUnderweight, ProfileUtils.retrieveBmiStatus(bmiUnderweight));","lastModifiedDate":"2021-10-30"},{"lineNumber":48,"author":{"gitId":"weidak"},"content":"        assertEquals(expectedStatusHealthy, ProfileUtils.retrieveBmiStatus(bmiHealthy));","lastModifiedDate":"2021-10-30"},{"lineNumber":49,"author":{"gitId":"weidak"},"content":"        assertEquals(expectedStatusOverweight, ProfileUtils.retrieveBmiStatus(bmiOverweight));","lastModifiedDate":"2021-10-30"},{"lineNumber":50,"author":{"gitId":"weidak"},"content":"        assertEquals(expectedStatusObese, ProfileUtils.retrieveBmiStatus(bmiObese));","lastModifiedDate":"2021-10-30"},{"lineNumber":51,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":52,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":53,"author":{"gitId":"weidak"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":54,"author":{"gitId":"weidak"},"content":"    void getBmrValuesMen_validInputs_expectCorrectBmrValues() {","lastModifiedDate":"2021-10-20"},{"lineNumber":55,"author":{"gitId":"weidak"},"content":"        Profile p \u003d new Profile();","lastModifiedDate":"2021-10-18"},{"lineNumber":56,"author":{"gitId":"weidak"},"content":"        final String name \u003d \"John\";","lastModifiedDate":"2021-10-18"},{"lineNumber":57,"author":{"gitId":"weidak"},"content":"        final double height \u003d 170.1;","lastModifiedDate":"2021-10-18"},{"lineNumber":58,"author":{"gitId":"weidak"},"content":"        final double weight \u003d 60;","lastModifiedDate":"2021-10-18"},{"lineNumber":59,"author":{"gitId":"weidak"},"content":"        final int calorieGoal \u003d 300;","lastModifiedDate":"2021-10-18"},{"lineNumber":60,"author":{"gitId":"weidak"},"content":"        final char gender \u003d \u0027M\u0027;","lastModifiedDate":"2021-10-18"},{"lineNumber":61,"author":{"gitId":"weidak"},"content":"        final int age \u003d 22;","lastModifiedDate":"2021-10-18"},{"lineNumber":62,"author":{"gitId":"weidak"},"content":"        final int activityFactor \u003d 1;","lastModifiedDate":"2021-10-18"},{"lineNumber":63,"author":{"gitId":"weidak"},"content":"        final double baseBmr \u003d 1583.5979;","lastModifiedDate":"2021-10-18"},{"lineNumber":64,"author":{"gitId":"weidak"},"content":"        final int bmrSedentary \u003d (int) Math.round(baseBmr * 1.2);","lastModifiedDate":"2021-10-18"},{"lineNumber":65,"author":{"gitId":"weidak"},"content":"        final int bmrLight \u003d (int) Math.round(baseBmr * 1.375);","lastModifiedDate":"2021-10-18"},{"lineNumber":66,"author":{"gitId":"weidak"},"content":"        final int bmrModerate \u003d (int) Math.round(baseBmr * 1.55);","lastModifiedDate":"2021-10-18"},{"lineNumber":67,"author":{"gitId":"weidak"},"content":"        final int bmrIntense \u003d (int) Math.round(baseBmr * 1.725);","lastModifiedDate":"2021-10-18"},{"lineNumber":68,"author":{"gitId":"weidak"},"content":"        final int bmrExtreme \u003d (int) Math.round(baseBmr * 1.9);","lastModifiedDate":"2021-10-18"},{"lineNumber":69,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":70,"author":{"gitId":"weidak"},"content":"        p.setProfileWithRawInputs(name, height, weight, gender, age, calorieGoal, activityFactor);","lastModifiedDate":"2021-10-20"},{"lineNumber":71,"author":{"gitId":"weidak"},"content":"        assertEquals(bmrSedentary, ProfileUtils.getBmr(p));","lastModifiedDate":"2021-10-30"},{"lineNumber":72,"author":{"gitId":"weidak"},"content":"        p.getProfileActivityFactor().setUserInput(2);","lastModifiedDate":"2021-10-30"},{"lineNumber":73,"author":{"gitId":"weidak"},"content":"        assertEquals(bmrLight, ProfileUtils.getBmr(p));","lastModifiedDate":"2021-10-30"},{"lineNumber":74,"author":{"gitId":"weidak"},"content":"        p.getProfileActivityFactor().setUserInput(3);","lastModifiedDate":"2021-10-30"},{"lineNumber":75,"author":{"gitId":"weidak"},"content":"        assertEquals(bmrModerate, ProfileUtils.getBmr(p));","lastModifiedDate":"2021-10-30"},{"lineNumber":76,"author":{"gitId":"weidak"},"content":"        p.getProfileActivityFactor().setUserInput(4);","lastModifiedDate":"2021-10-30"},{"lineNumber":77,"author":{"gitId":"weidak"},"content":"        assertEquals(bmrIntense, ProfileUtils.getBmr(p));","lastModifiedDate":"2021-10-30"},{"lineNumber":78,"author":{"gitId":"weidak"},"content":"        p.getProfileActivityFactor().setUserInput(5);","lastModifiedDate":"2021-10-30"},{"lineNumber":79,"author":{"gitId":"weidak"},"content":"        assertEquals(bmrExtreme, ProfileUtils.getBmr(p));","lastModifiedDate":"2021-10-30"},{"lineNumber":80,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":81,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":82,"author":{"gitId":"weidak"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":83,"author":{"gitId":"weidak"},"content":"    void getBmrValuesFemale_validInputs_expectCorrectBmrValues() {","lastModifiedDate":"2021-10-20"},{"lineNumber":84,"author":{"gitId":"weidak"},"content":"        Profile p \u003d new Profile();","lastModifiedDate":"2021-10-18"},{"lineNumber":85,"author":{"gitId":"weidak"},"content":"        final String name \u003d \"Mary\";","lastModifiedDate":"2021-10-18"},{"lineNumber":86,"author":{"gitId":"weidak"},"content":"        final double height \u003d 160.1;","lastModifiedDate":"2021-10-18"},{"lineNumber":87,"author":{"gitId":"weidak"},"content":"        final double weight \u003d 45.2;","lastModifiedDate":"2021-10-18"},{"lineNumber":88,"author":{"gitId":"weidak"},"content":"        final int calorieGoal \u003d 300;","lastModifiedDate":"2021-10-18"},{"lineNumber":89,"author":{"gitId":"weidak"},"content":"        final char gender \u003d \u0027F\u0027;","lastModifiedDate":"2021-10-18"},{"lineNumber":90,"author":{"gitId":"weidak"},"content":"        final int age \u003d 20;","lastModifiedDate":"2021-10-18"},{"lineNumber":91,"author":{"gitId":"weidak"},"content":"        final int activityFactor \u003d 1;","lastModifiedDate":"2021-10-18"},{"lineNumber":92,"author":{"gitId":"weidak"},"content":"        final double baseBmr \u003d 1274.9472;","lastModifiedDate":"2021-10-18"},{"lineNumber":93,"author":{"gitId":"weidak"},"content":"        final int bmrSedentary \u003d (int) Math.round(baseBmr * 1.2);","lastModifiedDate":"2021-10-18"},{"lineNumber":94,"author":{"gitId":"weidak"},"content":"        final int bmrLight \u003d (int) Math.round(baseBmr * 1.375);","lastModifiedDate":"2021-10-18"},{"lineNumber":95,"author":{"gitId":"weidak"},"content":"        final int bmrModerate \u003d (int) Math.round(baseBmr * 1.55);","lastModifiedDate":"2021-10-18"},{"lineNumber":96,"author":{"gitId":"weidak"},"content":"        final int bmrIntense \u003d (int) Math.round(baseBmr * 1.725);","lastModifiedDate":"2021-10-18"},{"lineNumber":97,"author":{"gitId":"weidak"},"content":"        final int bmrExtreme \u003d (int) Math.round(baseBmr * 1.9);","lastModifiedDate":"2021-10-18"},{"lineNumber":98,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":99,"author":{"gitId":"weidak"},"content":"        p.setProfileWithRawInputs(name, height, weight, gender, age, calorieGoal, activityFactor);","lastModifiedDate":"2021-10-20"},{"lineNumber":100,"author":{"gitId":"weidak"},"content":"        assertEquals(bmrSedentary, ProfileUtils.getBmr(p));","lastModifiedDate":"2021-10-30"},{"lineNumber":101,"author":{"gitId":"weidak"},"content":"        p.getProfileActivityFactor().setUserInput(2);","lastModifiedDate":"2021-10-30"},{"lineNumber":102,"author":{"gitId":"weidak"},"content":"        assertEquals(bmrLight, ProfileUtils.getBmr(p));","lastModifiedDate":"2021-10-30"},{"lineNumber":103,"author":{"gitId":"weidak"},"content":"        p.getProfileActivityFactor().setUserInput(3);","lastModifiedDate":"2021-10-30"},{"lineNumber":104,"author":{"gitId":"weidak"},"content":"        assertEquals(bmrModerate, ProfileUtils.getBmr(p));","lastModifiedDate":"2021-10-30"},{"lineNumber":105,"author":{"gitId":"weidak"},"content":"        p.getProfileActivityFactor().setUserInput(4);","lastModifiedDate":"2021-10-30"},{"lineNumber":106,"author":{"gitId":"weidak"},"content":"        assertEquals(bmrIntense, ProfileUtils.getBmr(p));","lastModifiedDate":"2021-10-30"},{"lineNumber":107,"author":{"gitId":"weidak"},"content":"        p.getProfileActivityFactor().setUserInput(5);","lastModifiedDate":"2021-10-30"},{"lineNumber":108,"author":{"gitId":"weidak"},"content":"        assertEquals(bmrExtreme, ProfileUtils.getBmr(p));","lastModifiedDate":"2021-10-30"},{"lineNumber":109,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":110,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":111,"author":{"gitId":"weidak"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":112,"author":{"gitId":"weidak"},"content":"    void toFileTextString_validInputs_expectCorrectString() {","lastModifiedDate":"2021-10-20"},{"lineNumber":113,"author":{"gitId":"weidak"},"content":"        Profile p \u003d new Profile();","lastModifiedDate":"2021-10-18"},{"lineNumber":114,"author":{"gitId":"weidak"},"content":"        String name \u003d \"John\";","lastModifiedDate":"2021-10-18"},{"lineNumber":115,"author":{"gitId":"weidak"},"content":"        double height \u003d 170.1;","lastModifiedDate":"2021-10-18"},{"lineNumber":116,"author":{"gitId":"weidak"},"content":"        double weight \u003d 60;","lastModifiedDate":"2021-10-18"},{"lineNumber":117,"author":{"gitId":"weidak"},"content":"        int calorieGoal \u003d 300;","lastModifiedDate":"2021-10-18"},{"lineNumber":118,"author":{"gitId":"weidak"},"content":"        char gender \u003d \u0027M\u0027;","lastModifiedDate":"2021-10-18"},{"lineNumber":119,"author":{"gitId":"weidak"},"content":"        int age \u003d 22;","lastModifiedDate":"2021-10-18"},{"lineNumber":120,"author":{"gitId":"weidak"},"content":"        int activityFactor \u003d 1;","lastModifiedDate":"2021-10-18"},{"lineNumber":121,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":122,"author":{"gitId":"weidak"},"content":"        p.setProfileWithRawInputs(name, height, weight, gender, age, calorieGoal, activityFactor);","lastModifiedDate":"2021-10-20"},{"lineNumber":123,"author":{"gitId":"weidak"},"content":"        String correctOutput \u003d \"John|170.1|60.0|M|22|300|1\";","lastModifiedDate":"2021-10-20"},{"lineNumber":124,"author":{"gitId":"weidak"},"content":"        assertEquals(correctOutput, p.toFileTextString());","lastModifiedDate":"2021-10-18"},{"lineNumber":125,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":126,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":127,"author":{"gitId":"weidak"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"weidak":125,"tlyi":2}},{"path":"src/test/java/seedu/duke/data/profile/attributes/ActivityFactorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.data.profile.attributes;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"weidak"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"weidak"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"weidak"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"weidak"},"content":"class ActivityFactorTest {","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"weidak"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"weidak"},"content":"    void createActivityFactor_validFactors_expectTrue() {","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"weidak"},"content":"        final ActivityFactor a1 \u003d new ActivityFactor(1);","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"weidak"},"content":"        final ActivityFactor a2 \u003d new ActivityFactor(2);","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"weidak"},"content":"        final ActivityFactor a3 \u003d new ActivityFactor(3);","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"weidak"},"content":"        final ActivityFactor a4 \u003d new ActivityFactor(4);","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"weidak"},"content":"        final ActivityFactor a5 \u003d new ActivityFactor(5);","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"weidak"},"content":"        assertTrue(a1.isValid());","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"weidak"},"content":"        assertTrue(a2.isValid());","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"weidak"},"content":"        assertTrue(a3.isValid());","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"weidak"},"content":"        assertTrue(a4.isValid());","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"weidak"},"content":"        assertTrue(a5.isValid());","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"weidak"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"weidak"},"content":"    void createActivityFactor_invalidFactors_expectFalse() {","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"weidak"},"content":"        final ActivityFactor a1 \u003d new ActivityFactor(-1);","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"weidak"},"content":"        final ActivityFactor a2 \u003d new ActivityFactor(6);","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"weidak"},"content":"        assertFalse(a1.isValid());","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"weidak"},"content":"        assertFalse(a2.isValid());","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"weidak"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"weidak":31,"tlyi":1}},{"path":"src/test/java/seedu/duke/data/profile/attributes/AgeTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.data.profile.attributes;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"weidak"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"weidak"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"weidak"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"weidak"},"content":"class AgeTest {","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"weidak"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"weidak"},"content":"    void createAge_positiveInputs_expectTrue() {","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"weidak"},"content":"        final Age a1 \u003d new Age(10);","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"weidak"},"content":"        final Age a2 \u003d new Age(25);","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"weidak"},"content":"        final Age a3 \u003d new Age(45);","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"weidak"},"content":"        final Age a4 \u003d new Age(57);","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"weidak"},"content":"        final Age a5 \u003d new Age(80);","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"weidak"},"content":"        assertTrue(a1.isValid());","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"weidak"},"content":"        assertTrue(a2.isValid());","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"weidak"},"content":"        assertTrue(a3.isValid());","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"weidak"},"content":"        assertTrue(a4.isValid());","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"weidak"},"content":"        assertTrue(a5.isValid());","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"weidak"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"weidak"},"content":"    void createAge_nonPositiveInput_expectFalse() {","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"weidak"},"content":"        final Age a1 \u003d new Age(0);","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"weidak"},"content":"        final Age a2 \u003d new Age(-25);","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"weidak"},"content":"        final Age a3 \u003d new Age(-45);","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"weidak"},"content":"        final Age a4 \u003d new Age(-57);","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"weidak"},"content":"        final Age a5 \u003d new Age(-80);","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"weidak"},"content":"        assertFalse(a1.isValid());","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"weidak"},"content":"        assertFalse(a2.isValid());","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"weidak"},"content":"        assertFalse(a3.isValid());","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"weidak"},"content":"        assertFalse(a4.isValid());","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"weidak"},"content":"        assertFalse(a5.isValid());","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"weidak"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"weidak":37,"tlyi":1}},{"path":"src/test/java/seedu/duke/data/profile/attributes/CalorieGoalTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.data.profile.attributes;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"weidak"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"weidak"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"weidak"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"weidak"},"content":"class CalorieGoalTest {","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"weidak"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"weidak"},"content":"    void createCalorieGoal_validGoalInputs_expectTrue() {","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"weidak"},"content":"        final CalorieGoal c1 \u003d new CalorieGoal(2499);","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"weidak"},"content":"        final CalorieGoal c2 \u003d new CalorieGoal(-2499);","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"weidak"},"content":"        assertTrue(c1.isValid());","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"weidak"},"content":"        assertTrue(c2.isValid());","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"weidak"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"weidak"},"content":"    void createCalorieGoal_invalidGoalInputs_expectTrue() {","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"weidak"},"content":"        final CalorieGoal c1 \u003d new CalorieGoal(239030);","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"weidak"},"content":"        final CalorieGoal c2 \u003d new CalorieGoal(-23435);","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"weidak"},"content":"        assertFalse(c1.isValid());","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"weidak"},"content":"        assertFalse(c2.isValid());","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"weidak"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"weidak":25,"tlyi":1}},{"path":"src/test/java/seedu/duke/data/profile/attributes/GenderTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.data.profile.attributes;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"weidak"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"weidak"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"weidak"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"weidak"},"content":"class GenderTest {","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"weidak"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"weidak"},"content":"    void createGender_validGenderInputs_expectTrue() {","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"weidak"},"content":"        final Gender g1 \u003d new Gender(\u0027F\u0027);","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"weidak"},"content":"        final Gender g2 \u003d new Gender(\u0027M\u0027);","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"weidak"},"content":"        assertTrue(g1.isValid());","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"weidak"},"content":"        assertTrue(g2.isValid());","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"weidak"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"weidak"},"content":"    void createCalorieGoal_invalidGoalInputs_expectTrue() {","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"weidak"},"content":"        final Gender g1 \u003d new Gender(\u0027S\u0027);","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"weidak"},"content":"        final Gender g2 \u003d new Gender(\u0027D\u0027);","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"weidak"},"content":"        assertFalse(g1.isValid());","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"weidak"},"content":"        assertFalse(g2.isValid());","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"weidak"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"weidak":25,"tlyi":1}},{"path":"src/test/java/seedu/duke/data/profile/attributes/HeightTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.data.profile.attributes;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"weidak"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"weidak"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"weidak"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"weidak"},"content":"class HeightTest {","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"weidak"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"weidak"},"content":"    void createHeight_validHeightInputs_expectTrue() {","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"tlyi"},"content":"        final Height h1 \u003d new Height(190.0);","lastModifiedDate":"2021-10-30"},{"lineNumber":13,"author":{"gitId":"tlyi"},"content":"        final Height h2 \u003d new Height(165.0);","lastModifiedDate":"2021-10-30"},{"lineNumber":14,"author":{"gitId":"weidak"},"content":"        assertTrue(h1.isValid());","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"weidak"},"content":"        assertTrue(h2.isValid());","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"weidak"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"weidak"},"content":"    void createHeight_invalidHeightInputs_expectFalse() {","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"weidak"},"content":"        final Height h1 \u003d new Height(0);","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"weidak"},"content":"        final Height h2 \u003d new Height(-10);","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"weidak"},"content":"        assertFalse(h1.isValid());","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"weidak"},"content":"        assertFalse(h2.isValid());","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"weidak"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"weidak":23,"tlyi":3}},{"path":"src/test/java/seedu/duke/data/profile/attributes/NameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.data.profile.attributes;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"weidak"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"weidak"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"weidak"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"weidak"},"content":"class NameTest {","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"weidak"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"weidak"},"content":"    void createName_validNameInputs_expectTrue() {","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"weidak"},"content":"        final Name n1 \u003d new Name(\"John\");","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"weidak"},"content":"        final Name n2 \u003d new Name(\"qwertyuiop\u003c\u003e:{},.;\u0027[]\u0027+\u003d-!@#$%^\u0026*()~`\");","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"weidak"},"content":"        assertTrue(n1.isValid());","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"weidak"},"content":"        assertTrue(n2.isValid());","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"weidak"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"weidak"},"content":"    void createName_invalidNameInputs_expectFalse() {","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"weidak"},"content":"        final Name n1 \u003d new Name(\"Hello/ooooo\");","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"weidak"},"content":"        final Name n2 \u003d new Name(\"Delim|ters\");","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"weidak"},"content":"        assertFalse(n1.isValid());","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"weidak"},"content":"        assertFalse(n2.isValid());","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"weidak"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"weidak":25,"tlyi":1}},{"path":"src/test/java/seedu/duke/data/profile/attributes/WeightTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.data.profile.attributes;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"weidak"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"weidak"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"weidak"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"weidak"},"content":"class WeightTest {","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"weidak"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"weidak"},"content":"    void createWeight_validWeightInputs_expectTrue() {","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"weidak"},"content":"        final Weight w1 \u003d new Weight(60);","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"weidak"},"content":"        final Weight w2 \u003d new Weight(70.25);","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"weidak"},"content":"        assertTrue(w1.isValid());","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"weidak"},"content":"        assertTrue(w2.isValid());","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"weidak"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"weidak"},"content":"    void createWeight_invalidWeightInputs_expectFalse() {","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"weidak"},"content":"        final Weight w1 \u003d new Weight(0);","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"weidak"},"content":"        final Weight w2 \u003d new Weight(-10);","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"weidak"},"content":"        assertFalse(w1.isValid());","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"weidak"},"content":"        assertFalse(w2.isValid());","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"weidak"},"content":"    ","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"weidak"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"weidak":25,"tlyi":1}},{"path":"src/test/java/seedu/duke/exercise/ExerciseListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xingjie99"},"content":"package seedu.duke.exercise;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"xingjie99"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"tlyi"},"content":"import seedu.duke.data.item.exercise.Exercise;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"tlyi"},"content":"import seedu.duke.data.item.exercise.ExerciseList;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"tryyang2001"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-16"},{"lineNumber":8,"author":{"gitId":"tryyang2001"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-10-16"},{"lineNumber":9,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"xingjie99"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"xingjie99"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"xingjie99"},"content":"class ExerciseListTest {","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"xingjie99"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"tryyang2001"},"content":"    void addExercise_exerciseClassParameter_expectAddInList() {","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"xingjie99"},"content":"        ExerciseList exerciseList \u003d new ExerciseList();","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"tryyang2001"},"content":"        exerciseList.addItem(new Exercise(\"Jumping Jacks\", 100));","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"tryyang2001"},"content":"        assertEquals(\"Jumping Jacks (100 cal)\", exerciseList.getItem(0).toString());","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"xingjie99"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"xingjie99"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"xingjie99"},"content":"    void deleteExercise_exerciseIndex_expectDeleteFromList() {","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"xingjie99"},"content":"        ExerciseList exerciseList \u003d new ExerciseList();","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"tryyang2001"},"content":"        exerciseList.addItem(new Exercise(\"Running\", 250));","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"tryyang2001"},"content":"        exerciseList.addItem(new Exercise(\"Jumping Jacks\", 100));","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"tryyang2001"},"content":"        exerciseList.deleteItem(0, LocalDate.now());","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"tryyang2001"},"content":"        assertEquals(\"Jumping Jacks (100 cal)\", exerciseList.getItem(0).toString());","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"xingjie99"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"xingjie99"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"xingjie99"},"content":"    void deleteExercise_exerciseIndex_expectCorrectNumberOfTasksLeft() {","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"xingjie99"},"content":"        ExerciseList exerciseList \u003d new ExerciseList();","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"tryyang2001"},"content":"        exerciseList.addItem(new Exercise(\"Running\", 250,","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"tryyang2001"},"content":"                LocalDate.parse(\"19-10-2021\", DateTimeFormatter.ofPattern(\"dd-MM-yyyy\"))));","lastModifiedDate":"2021-10-19"},{"lineNumber":37,"author":{"gitId":"tryyang2001"},"content":"        exerciseList.addItem(new Exercise(\"Jumping Jacks\", 100,","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"tryyang2001"},"content":"                LocalDate.parse(\"19-10-2021\", DateTimeFormatter.ofPattern(\"dd-MM-yyyy\"))));","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"tryyang2001"},"content":"        System.out.println(exerciseList.deleteItem(0,","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"tryyang2001"},"content":"                LocalDate.parse(\"19-10-2021\", DateTimeFormatter.ofPattern(\"dd-MM-yyyy\"))));","lastModifiedDate":"2021-10-19"},{"lineNumber":41,"author":{"gitId":"xingjie99"},"content":"        assertEquals(1, exerciseList.getSize());","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"xingjie99"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":43,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":44,"author":{"gitId":"xingjie99"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":45,"author":{"gitId":"xingjie99"},"content":"    void deleteExercise_invalidIndex_expectException() {","lastModifiedDate":"2021-10-11"},{"lineNumber":46,"author":{"gitId":"xingjie99"},"content":"        ExerciseList exerciseList \u003d new ExerciseList();","lastModifiedDate":"2021-10-11"},{"lineNumber":47,"author":{"gitId":"tryyang2001"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e exerciseList.deleteItem(0,","lastModifiedDate":"2021-10-19"},{"lineNumber":48,"author":{"gitId":"tryyang2001"},"content":"                LocalDate.parse(\"19-10-2021\", DateTimeFormatter.ofPattern(\"dd-MM-yyyy\"))));","lastModifiedDate":"2021-10-19"},{"lineNumber":49,"author":{"gitId":"xingjie99"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":50,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":51,"author":{"gitId":"xingjie99"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":52,"author":{"gitId":"xingjie99"},"content":"    void totalCalorie_someExercises_expectTotalCalorie() {","lastModifiedDate":"2021-10-11"},{"lineNumber":53,"author":{"gitId":"xingjie99"},"content":"        ExerciseList exerciseList \u003d new ExerciseList();","lastModifiedDate":"2021-10-11"},{"lineNumber":54,"author":{"gitId":"tryyang2001"},"content":"        exerciseList.addItem(new Exercise(\"Running\", 250));","lastModifiedDate":"2021-10-19"},{"lineNumber":55,"author":{"gitId":"tryyang2001"},"content":"        exerciseList.addItem(new Exercise(\"Jumping Jacks\", 100));","lastModifiedDate":"2021-10-19"},{"lineNumber":56,"author":{"gitId":"tryyang2001"},"content":"        exerciseList.addItem(new Exercise(\"Skipping\", 200));","lastModifiedDate":"2021-10-19"},{"lineNumber":57,"author":{"gitId":"tryyang2001"},"content":"        exerciseList.addItem(new Exercise(\"Swimming\", 300));","lastModifiedDate":"2021-10-19"},{"lineNumber":58,"author":{"gitId":"tlyi"},"content":"        assertEquals(850, exerciseList.getTotalCalories());","lastModifiedDate":"2021-10-13"},{"lineNumber":59,"author":{"gitId":"xingjie99"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":60,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":61,"author":{"gitId":"tryyang2001"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":62,"author":{"gitId":"tryyang2001"},"content":"    void sortExerciseList_callSortExerciseListMethod_expectSortedList() {","lastModifiedDate":"2021-10-16"},{"lineNumber":63,"author":{"gitId":"tryyang2001"},"content":"        ExerciseList exerciseList \u003d new ExerciseList();","lastModifiedDate":"2021-10-16"},{"lineNumber":64,"author":{"gitId":"tryyang2001"},"content":"        exerciseList.addItem(new Exercise(\"Running\", 250,","lastModifiedDate":"2021-10-19"},{"lineNumber":65,"author":{"gitId":"tryyang2001"},"content":"                LocalDate.parse(\"2021-10-16\", DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"))));","lastModifiedDate":"2021-10-16"},{"lineNumber":66,"author":{"gitId":"tryyang2001"},"content":"        exerciseList.addItem(new Exercise(\"Jumping Jacks\", 100,","lastModifiedDate":"2021-10-19"},{"lineNumber":67,"author":{"gitId":"tryyang2001"},"content":"                LocalDate.parse(\"2021-10-19\", DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"))));","lastModifiedDate":"2021-10-16"},{"lineNumber":68,"author":{"gitId":"tryyang2001"},"content":"        exerciseList.addItem(new Exercise(\"Skipping\", 200,","lastModifiedDate":"2021-10-19"},{"lineNumber":69,"author":{"gitId":"tryyang2001"},"content":"                LocalDate.parse(\"2021-10-18\", DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"))));","lastModifiedDate":"2021-10-16"},{"lineNumber":70,"author":{"gitId":"tryyang2001"},"content":"        exerciseList.addItem(new Exercise(\"Swimming\", 300,","lastModifiedDate":"2021-10-19"},{"lineNumber":71,"author":{"gitId":"tryyang2001"},"content":"                LocalDate.parse(\"2021-10-17\", DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"))));","lastModifiedDate":"2021-10-16"},{"lineNumber":72,"author":{"gitId":"tryyang2001"},"content":"        exerciseList.sortList();","lastModifiedDate":"2021-10-19"},{"lineNumber":73,"author":{"gitId":"tryyang2001"},"content":"        System.out.println(exerciseList.convertToString());","lastModifiedDate":"2021-10-16"},{"lineNumber":74,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":75,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":76,"author":{"gitId":"tryyang2001"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":77,"author":{"gitId":"tryyang2001"},"content":"    void totalExerciseCaloriesForSingleDate_oneLocalDateInput_expectSumOfCalorieOnThatDay() {","lastModifiedDate":"2021-10-16"},{"lineNumber":78,"author":{"gitId":"tryyang2001"},"content":"        ExerciseList exerciseList \u003d new ExerciseList();","lastModifiedDate":"2021-10-16"},{"lineNumber":79,"author":{"gitId":"tryyang2001"},"content":"        exerciseList.addItem(new Exercise(\"Running\", 250,","lastModifiedDate":"2021-10-19"},{"lineNumber":80,"author":{"gitId":"tryyang2001"},"content":"                LocalDate.parse(\"2021-10-16\", DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"))));","lastModifiedDate":"2021-10-16"},{"lineNumber":81,"author":{"gitId":"tryyang2001"},"content":"        exerciseList.addItem(new Exercise(\"Jumping Jacks\", 100,","lastModifiedDate":"2021-10-19"},{"lineNumber":82,"author":{"gitId":"tryyang2001"},"content":"                LocalDate.parse(\"2021-10-19\", DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"))));","lastModifiedDate":"2021-10-16"},{"lineNumber":83,"author":{"gitId":"tryyang2001"},"content":"        exerciseList.addItem(new Exercise(\"Skipping\", 200,","lastModifiedDate":"2021-10-19"},{"lineNumber":84,"author":{"gitId":"tryyang2001"},"content":"                LocalDate.parse(\"2021-10-18\", DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"))));","lastModifiedDate":"2021-10-16"},{"lineNumber":85,"author":{"gitId":"tryyang2001"},"content":"        exerciseList.addItem(new Exercise(\"Swimming\", 300,","lastModifiedDate":"2021-10-19"},{"lineNumber":86,"author":{"gitId":"tryyang2001"},"content":"                LocalDate.parse(\"2021-10-17\", DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"))));","lastModifiedDate":"2021-10-16"},{"lineNumber":87,"author":{"gitId":"tryyang2001"},"content":"        exerciseList.addItem(new Exercise(\"Jump rope\", 453,","lastModifiedDate":"2021-10-19"},{"lineNumber":88,"author":{"gitId":"tryyang2001"},"content":"                LocalDate.parse(\"2021-10-17\", DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"))));","lastModifiedDate":"2021-10-16"},{"lineNumber":89,"author":{"gitId":"tryyang2001"},"content":"        exerciseList.addItem(new Exercise(\"Biking\", 420,","lastModifiedDate":"2021-10-19"},{"lineNumber":90,"author":{"gitId":"tryyang2001"},"content":"                LocalDate.parse(\"2021-10-17\", DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"))));","lastModifiedDate":"2021-10-16"},{"lineNumber":91,"author":{"gitId":"tryyang2001"},"content":"        assertEquals(1173, exerciseList.getTotalCaloriesWithDate(","lastModifiedDate":"2021-10-16"},{"lineNumber":92,"author":{"gitId":"tryyang2001"},"content":"                LocalDate.parse(\"17-10-2021\", DateTimeFormatter.ofPattern(\"dd-MM-yyyy\"))));","lastModifiedDate":"2021-10-16"},{"lineNumber":93,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":94,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":95,"author":{"gitId":"tryyang2001"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":96,"author":{"gitId":"tryyang2001"},"content":"    void printExerciseListByOneGivenDate_inputLocalDate_expectExerciseListOfTheDayOnly() {","lastModifiedDate":"2021-10-16"},{"lineNumber":97,"author":{"gitId":"tryyang2001"},"content":"        ExerciseList exerciseList \u003d new ExerciseList();","lastModifiedDate":"2021-10-16"},{"lineNumber":98,"author":{"gitId":"tryyang2001"},"content":"        exerciseList.addItem(new Exercise(\"Running\", 250,","lastModifiedDate":"2021-10-19"},{"lineNumber":99,"author":{"gitId":"tryyang2001"},"content":"                LocalDate.parse(\"2021-10-16\", DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"))));","lastModifiedDate":"2021-10-16"},{"lineNumber":100,"author":{"gitId":"tryyang2001"},"content":"        exerciseList.addItem(new Exercise(\"Jumping Jacks\", 100,","lastModifiedDate":"2021-10-19"},{"lineNumber":101,"author":{"gitId":"tryyang2001"},"content":"                LocalDate.parse(\"2021-10-19\", DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"))));","lastModifiedDate":"2021-10-16"},{"lineNumber":102,"author":{"gitId":"tryyang2001"},"content":"        exerciseList.addItem(new Exercise(\"Skipping\", 200,","lastModifiedDate":"2021-10-19"},{"lineNumber":103,"author":{"gitId":"tryyang2001"},"content":"                LocalDate.parse(\"2021-10-18\", DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"))));","lastModifiedDate":"2021-10-16"},{"lineNumber":104,"author":{"gitId":"tryyang2001"},"content":"        exerciseList.addItem(new Exercise(\"Swimming\", 300,","lastModifiedDate":"2021-10-19"},{"lineNumber":105,"author":{"gitId":"tryyang2001"},"content":"                LocalDate.parse(\"2021-10-17\", DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"))));","lastModifiedDate":"2021-10-16"},{"lineNumber":106,"author":{"gitId":"tryyang2001"},"content":"        exerciseList.addItem(new Exercise(\"Jump rope\", 453,","lastModifiedDate":"2021-10-19"},{"lineNumber":107,"author":{"gitId":"tryyang2001"},"content":"                LocalDate.parse(\"2021-10-17\", DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"))));","lastModifiedDate":"2021-10-16"},{"lineNumber":108,"author":{"gitId":"tryyang2001"},"content":"        exerciseList.addItem(new Exercise(\"Biking\", 420,","lastModifiedDate":"2021-10-19"},{"lineNumber":109,"author":{"gitId":"tryyang2001"},"content":"                LocalDate.parse(\"2021-10-17\", DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"))));","lastModifiedDate":"2021-10-16"},{"lineNumber":110,"author":{"gitId":"tryyang2001"},"content":"        System.out.println(exerciseList.convertToStringBySpecificDate(","lastModifiedDate":"2021-10-17"},{"lineNumber":111,"author":{"gitId":"tryyang2001"},"content":"                LocalDate.parse(\"17-10-2021\", DateTimeFormatter.ofPattern(\"dd-MM-yyyy\"))));","lastModifiedDate":"2021-10-16"},{"lineNumber":112,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":113,"author":{"gitId":"xingjie99"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"xingjie99":35,"tryyang2001":75,"tlyi":3}},{"path":"src/test/java/seedu/duke/food/FoodListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.food;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"tryyang2001"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"tlyi"},"content":"import seedu.duke.data.item.food.Food;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"tlyi"},"content":"import seedu.duke.data.item.food.FoodList;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"tlyi"},"content":"import seedu.duke.data.item.food.TimePeriod;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"tryyang2001"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-16"},{"lineNumber":9,"author":{"gitId":"tryyang2001"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"tryyang2001"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":12,"author":{"gitId":"tryyang2001"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"tryyang2001"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"tryyang2001"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"tlyi"},"content":"class FoodListTest {","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"tryyang2001"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"tryyang2001"},"content":"    void addFoodUsingFoodClassParameter_foodClassParameter_expectExistsInList() {","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"tryyang2001"},"content":"        FoodList foodList \u003d new FoodList();","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"tryyang2001"},"content":"        foodList.addItem(new Food(\"chicken rice\", 607,","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"tryyang2001"},"content":"                LocalDateTime.parse(\"2021-10-16 1020\", DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"))));","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"tryyang2001"},"content":"        assertEquals(\"chicken rice (607 cal) @ 10:20, 16 Oct 2021\",","lastModifiedDate":"2021-10-28"},{"lineNumber":23,"author":{"gitId":"tryyang2001"},"content":"                foodList.getItem(foodList.getSize() - 1).toStringWithDate());","lastModifiedDate":"2021-10-28"},{"lineNumber":24,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"tryyang2001"},"content":"    ","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"tryyang2001"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"tryyang2001"},"content":"    void printNonEmptyFoodList_nonEmptyFoodList_expectCorrectOutputString() {","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"tryyang2001"},"content":"        FoodList foodList \u003d new FoodList();","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"tryyang2001"},"content":"        foodList.addItem(new Food(\"chicken rice\", 607,","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"tryyang2001"},"content":"                LocalDateTime.parse(\"2021-10-16 1020\", DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"))));","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"tryyang2001"},"content":"        foodList.addItem(new Food(\"char kway teow\", 744,","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"tryyang2001"},"content":"                LocalDateTime.parse(\"2021-10-19 1900\", DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"))));","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"tryyang2001"},"content":"        foodList.addItem(new Food(\"yong tau foo\", 536,","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"tryyang2001"},"content":"                LocalDateTime.parse(\"2021-10-17 1450\", DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"))));","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"tryyang2001"},"content":"        foodList.addItem(new Food(\"mcspicy alacarte\", 528,","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"tryyang2001"},"content":"                LocalDateTime.parse(\"2021-10-18 1650\", DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"))));","lastModifiedDate":"2021-10-19"},{"lineNumber":37,"author":{"gitId":"tryyang2001"},"content":"        foodList.addItem(new Food(\"maggie mee\", 276,","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"tryyang2001"},"content":"                LocalDateTime.parse(\"16-10-2021 1020\", DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\"))));","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"tryyang2001"},"content":"        foodList.addItem(new Food(\"yong tau foo\", 536,","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"tryyang2001"},"content":"                LocalDateTime.parse(\"2021-10-17 1450\", DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"))));","lastModifiedDate":"2021-10-19"},{"lineNumber":41,"author":{"gitId":"tryyang2001"},"content":"        foodList.addItem(new Food(\"McDonald\u0027s Medium Fries\", 380,","lastModifiedDate":"2021-10-19"},{"lineNumber":42,"author":{"gitId":"tryyang2001"},"content":"                LocalDateTime.parse(\"16-10-2021 1430\", DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\"))));","lastModifiedDate":"2021-10-19"},{"lineNumber":43,"author":{"gitId":"tryyang2001"},"content":"        foodList.addItem(new Food(\"Starbuck\u0027s Old-fashioned Glazed Donut\", 420,","lastModifiedDate":"2021-10-19"},{"lineNumber":44,"author":{"gitId":"tryyang2001"},"content":"                LocalDateTime.parse(\"16-10-2021 1020\", DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\"))));","lastModifiedDate":"2021-10-19"},{"lineNumber":45,"author":{"gitId":"tryyang2001"},"content":"        foodList.sortList();","lastModifiedDate":"2021-10-19"},{"lineNumber":46,"author":{"gitId":"tryyang2001"},"content":"        System.out.println(foodList.convertToString());","lastModifiedDate":"2021-10-10"},{"lineNumber":47,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":48,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":49,"author":{"gitId":"tryyang2001"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":50,"author":{"gitId":"tryyang2001"},"content":"    void printEmptyFoodList_emptyFoodList_expectEmptyString() {","lastModifiedDate":"2021-10-13"},{"lineNumber":51,"author":{"gitId":"tryyang2001"},"content":"        FoodList foodList \u003d new FoodList();","lastModifiedDate":"2021-10-13"},{"lineNumber":52,"author":{"gitId":"tryyang2001"},"content":"        assertEquals(\"\", foodList.convertToString());","lastModifiedDate":"2021-10-13"},{"lineNumber":53,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":54,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":55,"author":{"gitId":"tryyang2001"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":56,"author":{"gitId":"tryyang2001"},"content":"    void deleteExistingFoodItem_validIndexInput_expectDeleteSuccessful() {","lastModifiedDate":"2021-10-07"},{"lineNumber":57,"author":{"gitId":"tryyang2001"},"content":"        FoodList foodList \u003d new FoodList();","lastModifiedDate":"2021-10-07"},{"lineNumber":58,"author":{"gitId":"tryyang2001"},"content":"        foodList.addItem(new Food(\"chicken rice\", 607,","lastModifiedDate":"2021-10-19"},{"lineNumber":59,"author":{"gitId":"tryyang2001"},"content":"                LocalDateTime.parse(\"2021-10-16 1020\", DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"))));","lastModifiedDate":"2021-10-19"},{"lineNumber":60,"author":{"gitId":"tryyang2001"},"content":"        foodList.addItem(new Food(\"char kway teow\", 744,","lastModifiedDate":"2021-10-19"},{"lineNumber":61,"author":{"gitId":"tryyang2001"},"content":"                LocalDateTime.parse(\"2021-10-19 1900\", DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"))));","lastModifiedDate":"2021-10-19"},{"lineNumber":62,"author":{"gitId":"tryyang2001"},"content":"        foodList.addItem(new Food(\"yong tau foo\", 536,","lastModifiedDate":"2021-10-19"},{"lineNumber":63,"author":{"gitId":"tryyang2001"},"content":"                LocalDateTime.parse(\"2021-10-17 1450\", DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"))));","lastModifiedDate":"2021-10-19"},{"lineNumber":64,"author":{"gitId":"tryyang2001"},"content":"        foodList.addItem(new Food(\"mcspicy alacarte\", 528,","lastModifiedDate":"2021-10-19"},{"lineNumber":65,"author":{"gitId":"tryyang2001"},"content":"                LocalDateTime.parse(\"2021-10-18 1650\", DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"))));","lastModifiedDate":"2021-10-19"},{"lineNumber":66,"author":{"gitId":"tryyang2001"},"content":"        foodList.addItem(new Food(\"maggie mee\", 276,","lastModifiedDate":"2021-10-19"},{"lineNumber":67,"author":{"gitId":"tryyang2001"},"content":"                LocalDateTime.parse(\"16-10-2021 1020\", DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\"))));","lastModifiedDate":"2021-10-19"},{"lineNumber":68,"author":{"gitId":"tryyang2001"},"content":"        foodList.addItem(new Food(\"yong tau foo\", 536,","lastModifiedDate":"2021-10-19"},{"lineNumber":69,"author":{"gitId":"tryyang2001"},"content":"                LocalDateTime.parse(\"2021-10-17 1450\", DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"))));","lastModifiedDate":"2021-10-19"},{"lineNumber":70,"author":{"gitId":"tryyang2001"},"content":"        foodList.addItem(new Food(\"McDonald\u0027s Medium Fries\", 380,","lastModifiedDate":"2021-10-19"},{"lineNumber":71,"author":{"gitId":"tryyang2001"},"content":"                LocalDateTime.parse(\"16-10-2021 1430\", DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\"))));","lastModifiedDate":"2021-10-19"},{"lineNumber":72,"author":{"gitId":"tryyang2001"},"content":"        foodList.addItem(new Food(\"Starbuck\u0027s Old-fashioned Glazed Donut\", 420,","lastModifiedDate":"2021-10-19"},{"lineNumber":73,"author":{"gitId":"tryyang2001"},"content":"                LocalDateTime.parse(\"16-10-2021 1020\", DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\"))));","lastModifiedDate":"2021-10-19"},{"lineNumber":74,"author":{"gitId":"tryyang2001"},"content":"        foodList.sortList();","lastModifiedDate":"2021-10-19"},{"lineNumber":75,"author":{"gitId":"tryyang2001"},"content":"        foodList.deleteItem(1, LocalDateTime.parse(\"16-10-2021 1020\",","lastModifiedDate":"2021-10-19"},{"lineNumber":76,"author":{"gitId":"tryyang2001"},"content":"                DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\")).toLocalDate(),","lastModifiedDate":"2021-10-19"},{"lineNumber":77,"author":{"gitId":"tryyang2001"},"content":"                LocalDateTime.parse(\"16-10-2021 1020\",","lastModifiedDate":"2021-10-19"},{"lineNumber":78,"author":{"gitId":"tryyang2001"},"content":"                        DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\")).toLocalTime());","lastModifiedDate":"2021-10-19"},{"lineNumber":79,"author":{"gitId":"tryyang2001"},"content":"        System.out.println(foodList.convertToString());","lastModifiedDate":"2021-10-18"},{"lineNumber":80,"author":{"gitId":"tryyang2001"},"content":"        assertNotEquals(8, foodList.getSize());","lastModifiedDate":"2021-10-18"},{"lineNumber":81,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":82,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":83,"author":{"gitId":"tryyang2001"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":84,"author":{"gitId":"tryyang2001"},"content":"    void deleteNonExistingFoodItem_invalidIndexInput_expectIndexOutOfBoundException() {","lastModifiedDate":"2021-10-07"},{"lineNumber":85,"author":{"gitId":"tryyang2001"},"content":"        FoodList foodList \u003d new FoodList();","lastModifiedDate":"2021-10-07"},{"lineNumber":86,"author":{"gitId":"tryyang2001"},"content":"        foodList.addItem(new Food(\"chicken rice\", 607,","lastModifiedDate":"2021-10-19"},{"lineNumber":87,"author":{"gitId":"tryyang2001"},"content":"                LocalDateTime.parse(\"2021-10-16 1020\", DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"))));","lastModifiedDate":"2021-10-19"},{"lineNumber":88,"author":{"gitId":"tryyang2001"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e foodList.deleteItem(3));","lastModifiedDate":"2021-10-19"},{"lineNumber":89,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":90,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":91,"author":{"gitId":"tryyang2001"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":92,"author":{"gitId":"tryyang2001"},"content":"    void deleteNegativeIndexFoodItem_negativeIndexInput_expectIndexOutOfBoundException() {","lastModifiedDate":"2021-10-13"},{"lineNumber":93,"author":{"gitId":"tryyang2001"},"content":"        FoodList foodList \u003d new FoodList();","lastModifiedDate":"2021-10-13"},{"lineNumber":94,"author":{"gitId":"tryyang2001"},"content":"        foodList.addItem(new Food(\"chicken rice\", 607,","lastModifiedDate":"2021-10-20"},{"lineNumber":95,"author":{"gitId":"tryyang2001"},"content":"                LocalDateTime.parse(\"2021-10-16 1020\", DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"))));","lastModifiedDate":"2021-10-20"},{"lineNumber":96,"author":{"gitId":"tryyang2001"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e foodList.deleteItem(-1));","lastModifiedDate":"2021-10-19"},{"lineNumber":97,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":98,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":99,"author":{"gitId":"tryyang2001"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":100,"author":{"gitId":"tryyang2001"},"content":"    void deleteNonDigitIndexFoodItem_nonDigitIndexInput_expectNumberFormatException() {","lastModifiedDate":"2021-10-13"},{"lineNumber":101,"author":{"gitId":"tryyang2001"},"content":"        FoodList foodList \u003d new FoodList();","lastModifiedDate":"2021-10-13"},{"lineNumber":102,"author":{"gitId":"tryyang2001"},"content":"        foodList.addItem(new Food(\"chicken rice\", 607,","lastModifiedDate":"2021-10-20"},{"lineNumber":103,"author":{"gitId":"tryyang2001"},"content":"                LocalDateTime.parse(\"2021-10-16 1020\", DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"))));","lastModifiedDate":"2021-10-20"},{"lineNumber":104,"author":{"gitId":"tryyang2001"},"content":"        assertThrows(NumberFormatException.class, () -\u003e foodList.deleteItem(Integer.parseInt(\"a\")));","lastModifiedDate":"2021-10-19"},{"lineNumber":105,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":106,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":107,"author":{"gitId":"tryyang2001"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":108,"author":{"gitId":"tryyang2001"},"content":"    void deleteFromEmptyFoodList_emptyFoodList_expectIndexOutOfBoundException() {","lastModifiedDate":"2021-10-13"},{"lineNumber":109,"author":{"gitId":"tryyang2001"},"content":"        FoodList foodList \u003d new FoodList();","lastModifiedDate":"2021-10-13"},{"lineNumber":110,"author":{"gitId":"tryyang2001"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e foodList.deleteItem(1));","lastModifiedDate":"2021-10-19"},{"lineNumber":111,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":112,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":113,"author":{"gitId":"tryyang2001"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":114,"author":{"gitId":"tryyang2001"},"content":"    void deleteAllFoodItems_callDeleteAllMethod_expectEmptyList() {","lastModifiedDate":"2021-10-07"},{"lineNumber":115,"author":{"gitId":"tryyang2001"},"content":"        FoodList foodList \u003d new FoodList();","lastModifiedDate":"2021-10-07"},{"lineNumber":116,"author":{"gitId":"tryyang2001"},"content":"        foodList.addItem(new Food(\"chicken rice\", 607));","lastModifiedDate":"2021-10-19"},{"lineNumber":117,"author":{"gitId":"tryyang2001"},"content":"        foodList.addItem(new Food(\"yong tau foo\", 536));","lastModifiedDate":"2021-10-19"},{"lineNumber":118,"author":{"gitId":"tryyang2001"},"content":"        foodList.addItem(new Food(\"mcspicy alacarte\", 528));","lastModifiedDate":"2021-10-19"},{"lineNumber":119,"author":{"gitId":"tryyang2001"},"content":"        foodList.addItem(new Food(\"char kway teow\", 744));","lastModifiedDate":"2021-10-19"},{"lineNumber":120,"author":{"gitId":"tryyang2001"},"content":"        foodList.clearList();","lastModifiedDate":"2021-10-19"},{"lineNumber":121,"author":{"gitId":"tryyang2001"},"content":"        assertEquals(0, foodList.getSize());","lastModifiedDate":"2021-10-10"},{"lineNumber":122,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":123,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":124,"author":{"gitId":"tryyang2001"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":125,"author":{"gitId":"tryyang2001"},"content":"    void deleteAllFromEmptyFoodList_emptyFoodList_expectEmptyList() {","lastModifiedDate":"2021-10-13"},{"lineNumber":126,"author":{"gitId":"tryyang2001"},"content":"        FoodList foodList \u003d new FoodList();","lastModifiedDate":"2021-10-13"},{"lineNumber":127,"author":{"gitId":"tryyang2001"},"content":"        foodList.clearList();","lastModifiedDate":"2021-10-19"},{"lineNumber":128,"author":{"gitId":"tryyang2001"},"content":"        assertEquals(0, foodList.getSize());","lastModifiedDate":"2021-10-13"},{"lineNumber":129,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":130,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":131,"author":{"gitId":"tryyang2001"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":132,"author":{"gitId":"tryyang2001"},"content":"    void totalFoodCalories_callTotalCaloriesMethod_expectSumOfFoodCalories() {","lastModifiedDate":"2021-10-13"},{"lineNumber":133,"author":{"gitId":"tryyang2001"},"content":"        FoodList foodList \u003d new FoodList();","lastModifiedDate":"2021-10-13"},{"lineNumber":134,"author":{"gitId":"tryyang2001"},"content":"        foodList.addItem(new Food(\"chicken rice\", 607));","lastModifiedDate":"2021-10-19"},{"lineNumber":135,"author":{"gitId":"tryyang2001"},"content":"        foodList.addItem(new Food(\"yong tau foo\", 536));","lastModifiedDate":"2021-10-19"},{"lineNumber":136,"author":{"gitId":"tryyang2001"},"content":"        foodList.addItem(new Food(\"mcspicy alacarte\", 528));","lastModifiedDate":"2021-10-19"},{"lineNumber":137,"author":{"gitId":"tryyang2001"},"content":"        foodList.addItem(new Food(\"char kway teow\", 744));","lastModifiedDate":"2021-10-19"},{"lineNumber":138,"author":{"gitId":"tryyang2001"},"content":"        assertEquals(2415, foodList.getTotalCalories());","lastModifiedDate":"2021-10-13"},{"lineNumber":139,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":140,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":141,"author":{"gitId":"tryyang2001"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":142,"author":{"gitId":"tryyang2001"},"content":"    void totalFoodCalories_emptyFoodList_expectZeroSum() {","lastModifiedDate":"2021-10-13"},{"lineNumber":143,"author":{"gitId":"tryyang2001"},"content":"        FoodList foodList \u003d new FoodList();","lastModifiedDate":"2021-10-13"},{"lineNumber":144,"author":{"gitId":"tryyang2001"},"content":"        assertEquals(0, foodList.getTotalCalories());","lastModifiedDate":"2021-10-13"},{"lineNumber":145,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":146,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":147,"author":{"gitId":"tryyang2001"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":148,"author":{"gitId":"tryyang2001"},"content":"    void totalFoodCaloriesForSingleDate_oneLocalDateInput_expectSumOfCalorieOnThatDay() {","lastModifiedDate":"2021-10-16"},{"lineNumber":149,"author":{"gitId":"tryyang2001"},"content":"        FoodList foodList \u003d new FoodList();","lastModifiedDate":"2021-10-16"},{"lineNumber":150,"author":{"gitId":"tryyang2001"},"content":"        foodList.addItem(new Food(\"chicken rice\", 607,","lastModifiedDate":"2021-10-19"},{"lineNumber":151,"author":{"gitId":"tryyang2001"},"content":"                LocalDateTime.parse(\"2021-10-16 1020\", DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"))));","lastModifiedDate":"2021-10-19"},{"lineNumber":152,"author":{"gitId":"tryyang2001"},"content":"        foodList.addItem(new Food(\"char kway teow\", 744,","lastModifiedDate":"2021-10-19"},{"lineNumber":153,"author":{"gitId":"tryyang2001"},"content":"                LocalDateTime.parse(\"2021-10-19 1900\", DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"))));","lastModifiedDate":"2021-10-19"},{"lineNumber":154,"author":{"gitId":"tryyang2001"},"content":"        foodList.addItem(new Food(\"yong tau foo\", 536,","lastModifiedDate":"2021-10-19"},{"lineNumber":155,"author":{"gitId":"tryyang2001"},"content":"                LocalDateTime.parse(\"2021-10-17 1450\", DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"))));","lastModifiedDate":"2021-10-19"},{"lineNumber":156,"author":{"gitId":"tryyang2001"},"content":"        foodList.addItem(new Food(\"mcspicy alacarte\", 528,","lastModifiedDate":"2021-10-19"},{"lineNumber":157,"author":{"gitId":"tryyang2001"},"content":"                LocalDateTime.parse(\"2021-10-18 1650\", DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"))));","lastModifiedDate":"2021-10-19"},{"lineNumber":158,"author":{"gitId":"tryyang2001"},"content":"        foodList.addItem(new Food(\"maggie mee\", 276,","lastModifiedDate":"2021-10-19"},{"lineNumber":159,"author":{"gitId":"tryyang2001"},"content":"                LocalDateTime.parse(\"16-10-2021 1020\", DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\"))));","lastModifiedDate":"2021-10-19"},{"lineNumber":160,"author":{"gitId":"tryyang2001"},"content":"        foodList.addItem(new Food(\"McDonald’s Medium Fries\", 380,","lastModifiedDate":"2021-10-19"},{"lineNumber":161,"author":{"gitId":"tryyang2001"},"content":"                LocalDateTime.parse(\"16-10-2021 1430\", DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\"))));","lastModifiedDate":"2021-10-19"},{"lineNumber":162,"author":{"gitId":"tryyang2001"},"content":"        foodList.addItem(new Food(\"Starbuck’s Old-fashioned Glazed Donut\", 420,","lastModifiedDate":"2021-10-19"},{"lineNumber":163,"author":{"gitId":"tryyang2001"},"content":"                LocalDateTime.parse(\"16-10-2021 1020\", DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\"))));","lastModifiedDate":"2021-10-19"},{"lineNumber":164,"author":{"gitId":"tryyang2001"},"content":"        assertEquals(1683, foodList.getTotalCaloriesWithDate(","lastModifiedDate":"2021-10-16"},{"lineNumber":165,"author":{"gitId":"tryyang2001"},"content":"                LocalDate.parse(\"16-10-2021\", DateTimeFormatter.ofPattern(\"dd-MM-yyyy\"))));","lastModifiedDate":"2021-10-16"},{"lineNumber":166,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":167,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":168,"author":{"gitId":"tryyang2001"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":169,"author":{"gitId":"tryyang2001"},"content":"    void printFoodListByOneGivenDate_inputLocalDate_expectFoodListOfThatDayOnly() {","lastModifiedDate":"2021-10-16"},{"lineNumber":170,"author":{"gitId":"tryyang2001"},"content":"        FoodList foodList \u003d new FoodList();","lastModifiedDate":"2021-10-16"},{"lineNumber":171,"author":{"gitId":"tryyang2001"},"content":"        foodList.addItem(new Food(\"chicken rice\", 607,","lastModifiedDate":"2021-10-19"},{"lineNumber":172,"author":{"gitId":"tryyang2001"},"content":"                LocalDateTime.parse(\"2021-10-16 1020\", DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"))));","lastModifiedDate":"2021-10-19"},{"lineNumber":173,"author":{"gitId":"tryyang2001"},"content":"        foodList.addItem(new Food(\"char kway teow\", 744,","lastModifiedDate":"2021-10-19"},{"lineNumber":174,"author":{"gitId":"tryyang2001"},"content":"                LocalDateTime.parse(\"2021-10-19 1900\", DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"))));","lastModifiedDate":"2021-10-19"},{"lineNumber":175,"author":{"gitId":"tryyang2001"},"content":"        foodList.addItem(new Food(\"yong tau foo\", 536,","lastModifiedDate":"2021-10-19"},{"lineNumber":176,"author":{"gitId":"tryyang2001"},"content":"                LocalDateTime.parse(\"2021-10-17 1450\", DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"))));","lastModifiedDate":"2021-10-19"},{"lineNumber":177,"author":{"gitId":"tryyang2001"},"content":"        foodList.addItem(new Food(\"mcspicy alacarte\", 528,","lastModifiedDate":"2021-10-19"},{"lineNumber":178,"author":{"gitId":"tryyang2001"},"content":"                LocalDateTime.parse(\"2021-10-18 1650\", DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"))));","lastModifiedDate":"2021-10-19"},{"lineNumber":179,"author":{"gitId":"tryyang2001"},"content":"        foodList.addItem(new Food(\"maggie mee\", 276,","lastModifiedDate":"2021-10-19"},{"lineNumber":180,"author":{"gitId":"tryyang2001"},"content":"                LocalDateTime.parse(\"16-10-2021 1020\", DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\"))));","lastModifiedDate":"2021-10-19"},{"lineNumber":181,"author":{"gitId":"tryyang2001"},"content":"        foodList.addItem(new Food(\"yong tau foo\", 536,","lastModifiedDate":"2021-10-19"},{"lineNumber":182,"author":{"gitId":"tryyang2001"},"content":"                LocalDateTime.parse(\"2021-10-17 1450\", DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"))));","lastModifiedDate":"2021-10-19"},{"lineNumber":183,"author":{"gitId":"tryyang2001"},"content":"        foodList.addItem(new Food(\"McDonald\u0027s Medium Fries\", 380,","lastModifiedDate":"2021-10-19"},{"lineNumber":184,"author":{"gitId":"tryyang2001"},"content":"                LocalDateTime.parse(\"16-10-2021 1430\", DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\"))));","lastModifiedDate":"2021-10-19"},{"lineNumber":185,"author":{"gitId":"tryyang2001"},"content":"        foodList.addItem(new Food(\"Starbuck\u0027s Old-fashioned Glazed Donut\", 420,","lastModifiedDate":"2021-10-19"},{"lineNumber":186,"author":{"gitId":"tryyang2001"},"content":"                LocalDateTime.parse(\"16-10-2021 1020\", DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\"))));","lastModifiedDate":"2021-10-19"},{"lineNumber":187,"author":{"gitId":"tryyang2001"},"content":"        System.out.println(foodList.convertToStringBySpecificDate(","lastModifiedDate":"2021-10-18"},{"lineNumber":188,"author":{"gitId":"tryyang2001"},"content":"                LocalDate.parse(\"16-10-2021\", DateTimeFormatter.ofPattern(\"dd-MM-yyyy\"))));","lastModifiedDate":"2021-10-16"},{"lineNumber":189,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":190,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":191,"author":{"gitId":"tryyang2001"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":192,"author":{"gitId":"tryyang2001"},"content":"    void printFoodListWithDifferentDateAndTimePeriod_inputDateAndTime_expectFoodListWithDateAndTimePeriodSeparated() {","lastModifiedDate":"2021-10-17"},{"lineNumber":193,"author":{"gitId":"tryyang2001"},"content":"        FoodList foodList \u003d new FoodList();","lastModifiedDate":"2021-10-17"},{"lineNumber":194,"author":{"gitId":"tryyang2001"},"content":"        foodList.addItem(new Food(\"chicken rice\", 607,","lastModifiedDate":"2021-10-19"},{"lineNumber":195,"author":{"gitId":"tryyang2001"},"content":"                LocalDateTime.parse(\"2021-10-16 1320\", DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"))));","lastModifiedDate":"2021-10-19"},{"lineNumber":196,"author":{"gitId":"tryyang2001"},"content":"        foodList.addItem(new Food(\"char kway teow\", 744,","lastModifiedDate":"2021-10-19"},{"lineNumber":197,"author":{"gitId":"tryyang2001"},"content":"                LocalDateTime.parse(\"2021-10-17 1900\", DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"))));","lastModifiedDate":"2021-10-19"},{"lineNumber":198,"author":{"gitId":"tryyang2001"},"content":"        foodList.addItem(new Food(\"yong tau foo\", 536,","lastModifiedDate":"2021-10-19"},{"lineNumber":199,"author":{"gitId":"tryyang2001"},"content":"                LocalDateTime.parse(\"2021-10-17 1450\", DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"))));","lastModifiedDate":"2021-10-19"},{"lineNumber":200,"author":{"gitId":"tryyang2001"},"content":"        foodList.addItem(new Food(\"mcspicy alacarte\", 528,","lastModifiedDate":"2021-10-19"},{"lineNumber":201,"author":{"gitId":"tryyang2001"},"content":"                LocalDateTime.parse(\"2021-10-18 1850\", DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"))));","lastModifiedDate":"2021-10-19"},{"lineNumber":202,"author":{"gitId":"tryyang2001"},"content":"        foodList.addItem(new Food(\"maggie mee\", 276,","lastModifiedDate":"2021-10-19"},{"lineNumber":203,"author":{"gitId":"tryyang2001"},"content":"                LocalDateTime.parse(\"16-10-2021 1020\", DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\"))));","lastModifiedDate":"2021-10-19"},{"lineNumber":204,"author":{"gitId":"tryyang2001"},"content":"        foodList.addItem(new Food(\"yong tau foo\", 536,","lastModifiedDate":"2021-10-19"},{"lineNumber":205,"author":{"gitId":"tryyang2001"},"content":"                LocalDateTime.parse(\"2021-10-17 1450\", DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"))));","lastModifiedDate":"2021-10-19"},{"lineNumber":206,"author":{"gitId":"tryyang2001"},"content":"        foodList.addItem(new Food(\"McDonald\u0027s Medium Fries\", 380,","lastModifiedDate":"2021-10-19"},{"lineNumber":207,"author":{"gitId":"tryyang2001"},"content":"                LocalDateTime.parse(\"16-10-2021 1030\", DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\"))));","lastModifiedDate":"2021-10-19"},{"lineNumber":208,"author":{"gitId":"tryyang2001"},"content":"        foodList.addItem(new Food(\"Starbuck\u0027s Old-fashioned Glazed Donut\", 420,","lastModifiedDate":"2021-10-19"},{"lineNumber":209,"author":{"gitId":"tryyang2001"},"content":"                LocalDateTime.parse(\"17-10-2021 1020\", DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\"))));","lastModifiedDate":"2021-10-19"},{"lineNumber":210,"author":{"gitId":"tryyang2001"},"content":"        foodList.addItem(new Food(\"fish soup\", 300,","lastModifiedDate":"2021-10-19"},{"lineNumber":211,"author":{"gitId":"tryyang2001"},"content":"                LocalDateTime.parse(\"16-10-2021 1920\", DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\"))));","lastModifiedDate":"2021-10-19"},{"lineNumber":212,"author":{"gitId":"tryyang2001"},"content":"        foodList.addItem(new Food(\"nasi lemak\", 430,","lastModifiedDate":"2021-10-19"},{"lineNumber":213,"author":{"gitId":"tryyang2001"},"content":"                LocalDateTime.parse(\"16-10-2021 0120\", DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\"))));","lastModifiedDate":"2021-10-19"},{"lineNumber":214,"author":{"gitId":"tryyang2001"},"content":"        foodList.sortList();","lastModifiedDate":"2021-10-19"},{"lineNumber":215,"author":{"gitId":"tryyang2001"},"content":"        System.out.println(foodList.convertToString());","lastModifiedDate":"2021-10-17"},{"lineNumber":216,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":217,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":218,"author":{"gitId":"tryyang2001"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":219,"author":{"gitId":"tryyang2001"},"content":"    void countSupperWithNonEmptyFoodList_callCountSupperMethod_expectCorrectIntegerSupperCount() {","lastModifiedDate":"2021-10-17"},{"lineNumber":220,"author":{"gitId":"tryyang2001"},"content":"        FoodList foodList \u003d new FoodList();","lastModifiedDate":"2021-10-17"},{"lineNumber":221,"author":{"gitId":"tryyang2001"},"content":"        foodList.addItem(new Food(\"chicken rice\", 607,","lastModifiedDate":"2021-10-19"},{"lineNumber":222,"author":{"gitId":"tryyang2001"},"content":"                LocalDateTime.parse(\"2021-10-16 1320\", DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"))));","lastModifiedDate":"2021-10-19"},{"lineNumber":223,"author":{"gitId":"tryyang2001"},"content":"        foodList.addItem(new Food(\"char kway teow\", 744,","lastModifiedDate":"2021-10-19"},{"lineNumber":224,"author":{"gitId":"tryyang2001"},"content":"                LocalDateTime.parse(\"2021-10-17 1900\", DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"))));","lastModifiedDate":"2021-10-19"},{"lineNumber":225,"author":{"gitId":"tryyang2001"},"content":"        foodList.addItem(new Food(\"yong tau foo\", 536,","lastModifiedDate":"2021-10-19"},{"lineNumber":226,"author":{"gitId":"tryyang2001"},"content":"                LocalDateTime.parse(\"2021-10-17 1450\", DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"))));","lastModifiedDate":"2021-10-19"},{"lineNumber":227,"author":{"gitId":"tryyang2001"},"content":"        foodList.addItem(new Food(\"mcspicy alacarte\", 528,","lastModifiedDate":"2021-10-19"},{"lineNumber":228,"author":{"gitId":"tryyang2001"},"content":"                LocalDateTime.parse(\"2021-10-18 1850\", DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"))));","lastModifiedDate":"2021-10-19"},{"lineNumber":229,"author":{"gitId":"tryyang2001"},"content":"        foodList.addItem(new Food(\"maggie mee\", 276,","lastModifiedDate":"2021-10-19"},{"lineNumber":230,"author":{"gitId":"tryyang2001"},"content":"                LocalDateTime.parse(\"16-10-2021 1020\", DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\"))));","lastModifiedDate":"2021-10-19"},{"lineNumber":231,"author":{"gitId":"tryyang2001"},"content":"        foodList.addItem(new Food(\"yong tau foo\", 536,","lastModifiedDate":"2021-10-19"},{"lineNumber":232,"author":{"gitId":"tryyang2001"},"content":"                LocalDateTime.parse(\"2021-10-17 1450\", DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"))));","lastModifiedDate":"2021-10-19"},{"lineNumber":233,"author":{"gitId":"tryyang2001"},"content":"        foodList.addItem(new Food(\"McDonald\u0027s Medium Fries\", 380,","lastModifiedDate":"2021-10-19"},{"lineNumber":234,"author":{"gitId":"tryyang2001"},"content":"                LocalDateTime.parse(\"16-10-2021 1030\", DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\"))));","lastModifiedDate":"2021-10-19"},{"lineNumber":235,"author":{"gitId":"tryyang2001"},"content":"        foodList.addItem(new Food(\"Starbuck\u0027s Old-fashioned Glazed Donut\", 420,","lastModifiedDate":"2021-10-19"},{"lineNumber":236,"author":{"gitId":"tryyang2001"},"content":"                LocalDateTime.parse(\"17-10-2021 1020\", DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\"))));","lastModifiedDate":"2021-10-19"},{"lineNumber":237,"author":{"gitId":"tryyang2001"},"content":"        foodList.addItem(new Food(\"fish soup\", 300,","lastModifiedDate":"2021-10-19"},{"lineNumber":238,"author":{"gitId":"tryyang2001"},"content":"                LocalDateTime.parse(\"16-10-2021 1920\", DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\"))));","lastModifiedDate":"2021-10-19"},{"lineNumber":239,"author":{"gitId":"tryyang2001"},"content":"        foodList.addItem(new Food(\"nasi lemak\", 430,","lastModifiedDate":"2021-10-19"},{"lineNumber":240,"author":{"gitId":"tryyang2001"},"content":"                LocalDateTime.parse(\"16-10-2021 0120\", DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\"))));","lastModifiedDate":"2021-10-19"},{"lineNumber":241,"author":{"gitId":"tryyang2001"},"content":"        foodList.addItem(new Food(\"cheese chicken burger\", 430,","lastModifiedDate":"2021-10-19"},{"lineNumber":242,"author":{"gitId":"tryyang2001"},"content":"                LocalDateTime.parse(\"18-10-2021 0420\", DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\"))));","lastModifiedDate":"2021-10-19"},{"lineNumber":243,"author":{"gitId":"tryyang2001"},"content":"        assertEquals(2, foodList.getSupperCount());","lastModifiedDate":"2021-10-17"},{"lineNumber":244,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":245,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":246,"author":{"gitId":"tryyang2001"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":247,"author":{"gitId":"tryyang2001"},"content":"    void printFoodListBySpecificDateAndTime_inputDateAndTimePeriod_expectFoodListForTheDateAndTimePeriodOnly() {","lastModifiedDate":"2021-10-17"},{"lineNumber":248,"author":{"gitId":"tryyang2001"},"content":"        FoodList foodList \u003d new FoodList();","lastModifiedDate":"2021-10-17"},{"lineNumber":249,"author":{"gitId":"tryyang2001"},"content":"        foodList.addItem(new Food(\"chicken rice\", 607,","lastModifiedDate":"2021-10-19"},{"lineNumber":250,"author":{"gitId":"tryyang2001"},"content":"                LocalDateTime.parse(\"2021-10-16 1320\", DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"))));","lastModifiedDate":"2021-10-19"},{"lineNumber":251,"author":{"gitId":"tryyang2001"},"content":"        foodList.addItem(new Food(\"char kway teow\", 744,","lastModifiedDate":"2021-10-19"},{"lineNumber":252,"author":{"gitId":"tryyang2001"},"content":"                LocalDateTime.parse(\"2021-10-17 1900\", DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"))));","lastModifiedDate":"2021-10-19"},{"lineNumber":253,"author":{"gitId":"tryyang2001"},"content":"        foodList.addItem(new Food(\"yong tau foo\", 536,","lastModifiedDate":"2021-10-19"},{"lineNumber":254,"author":{"gitId":"tryyang2001"},"content":"                LocalDateTime.parse(\"2021-10-17 1450\", DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"))));","lastModifiedDate":"2021-10-19"},{"lineNumber":255,"author":{"gitId":"tryyang2001"},"content":"        foodList.addItem(new Food(\"mcspicy alacarte\", 528,","lastModifiedDate":"2021-10-19"},{"lineNumber":256,"author":{"gitId":"tryyang2001"},"content":"                LocalDateTime.parse(\"2021-10-18 1850\", DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"))));","lastModifiedDate":"2021-10-19"},{"lineNumber":257,"author":{"gitId":"tryyang2001"},"content":"        foodList.addItem(new Food(\"maggie mee\", 276,","lastModifiedDate":"2021-10-19"},{"lineNumber":258,"author":{"gitId":"tryyang2001"},"content":"                LocalDateTime.parse(\"16-10-2021 1020\", DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\"))));","lastModifiedDate":"2021-10-19"},{"lineNumber":259,"author":{"gitId":"tryyang2001"},"content":"        foodList.addItem(new Food(\"yong tau foo\", 536,","lastModifiedDate":"2021-10-19"},{"lineNumber":260,"author":{"gitId":"tryyang2001"},"content":"                LocalDateTime.parse(\"2021-10-17 1450\", DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"))));","lastModifiedDate":"2021-10-19"},{"lineNumber":261,"author":{"gitId":"tryyang2001"},"content":"        foodList.addItem(new Food(\"McDonald\u0027s Medium Fries\", 380,","lastModifiedDate":"2021-10-19"},{"lineNumber":262,"author":{"gitId":"tryyang2001"},"content":"                LocalDateTime.parse(\"16-10-2021 1030\", DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\"))));","lastModifiedDate":"2021-10-19"},{"lineNumber":263,"author":{"gitId":"tryyang2001"},"content":"        foodList.addItem(new Food(\"Starbuck\u0027s Old-fashioned Glazed Donut\", 420,","lastModifiedDate":"2021-10-19"},{"lineNumber":264,"author":{"gitId":"tryyang2001"},"content":"                LocalDateTime.parse(\"17-10-2021 1020\", DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\"))));","lastModifiedDate":"2021-10-19"},{"lineNumber":265,"author":{"gitId":"tryyang2001"},"content":"        foodList.addItem(new Food(\"fish soup\", 300,","lastModifiedDate":"2021-10-19"},{"lineNumber":266,"author":{"gitId":"tryyang2001"},"content":"                LocalDateTime.parse(\"16-10-2021 1920\", DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\"))));","lastModifiedDate":"2021-10-19"},{"lineNumber":267,"author":{"gitId":"tryyang2001"},"content":"        foodList.addItem(new Food(\"nasi lemak\", 430,","lastModifiedDate":"2021-10-19"},{"lineNumber":268,"author":{"gitId":"tryyang2001"},"content":"                LocalDateTime.parse(\"16-10-2021 0120\", DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\"))));","lastModifiedDate":"2021-10-19"},{"lineNumber":269,"author":{"gitId":"tryyang2001"},"content":"        foodList.addItem(new Food(\"cheese chicken burger\", 430,","lastModifiedDate":"2021-10-19"},{"lineNumber":270,"author":{"gitId":"tryyang2001"},"content":"                LocalDateTime.parse(\"18-10-2021 0420\", DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\"))));","lastModifiedDate":"2021-10-19"},{"lineNumber":271,"author":{"gitId":"tryyang2001"},"content":"        foodList.sortList();","lastModifiedDate":"2021-10-19"},{"lineNumber":272,"author":{"gitId":"tryyang2001"},"content":"        System.out.println(foodList.convertToStringBySpecificDateAndTime(","lastModifiedDate":"2021-10-17"},{"lineNumber":273,"author":{"gitId":"tryyang2001"},"content":"                LocalDate.parse(\"16-10-2021\", DateTimeFormatter.ofPattern(\"dd-MM-yyyy\")),","lastModifiedDate":"2021-10-17"},{"lineNumber":274,"author":{"gitId":"tryyang2001"},"content":"                TimePeriod.MORNING));","lastModifiedDate":"2021-11-08"},{"lineNumber":275,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":276,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":277,"author":{"gitId":"tryyang2001"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":278,"author":{"gitId":"tryyang2001"},"content":"    void printFoodListBySpecificDateWithEmptyFoodList_emptyFoodList_expectErrorMessage() {","lastModifiedDate":"2021-10-17"},{"lineNumber":279,"author":{"gitId":"tryyang2001"},"content":"        FoodList foodList \u003d new FoodList();","lastModifiedDate":"2021-10-17"},{"lineNumber":280,"author":{"gitId":"tryyang2001"},"content":"        foodList.addItem(new Food(\"chicken rice\", 607,","lastModifiedDate":"2021-10-19"},{"lineNumber":281,"author":{"gitId":"tryyang2001"},"content":"                LocalDateTime.parse(\"17-10-2021 2359\", DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\"))));","lastModifiedDate":"2021-10-19"},{"lineNumber":282,"author":{"gitId":"tryyang2001"},"content":"        assertEquals(\"There is no food item found by the given date\", foodList.convertToStringBySpecificDate(","lastModifiedDate":"2021-10-18"},{"lineNumber":283,"author":{"gitId":"tryyang2001"},"content":"                LocalDate.parse(\"16-10-2021\", DateTimeFormatter.ofPattern(\"dd-MM-yyyy\"))));","lastModifiedDate":"2021-10-17"},{"lineNumber":284,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":285,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":286,"author":{"gitId":"tryyang2001"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":287,"author":{"gitId":"tryyang2001"},"content":"    void printFoodListBySpecificDateAndTimePeriodWithEmptyFoodList_emptyFoodList_expectErrorMessage() {","lastModifiedDate":"2021-10-17"},{"lineNumber":288,"author":{"gitId":"tryyang2001"},"content":"        FoodList foodList \u003d new FoodList();","lastModifiedDate":"2021-10-17"},{"lineNumber":289,"author":{"gitId":"tryyang2001"},"content":"        foodList.addItem(new Food(\"chicken rice\", 607,","lastModifiedDate":"2021-10-19"},{"lineNumber":290,"author":{"gitId":"tryyang2001"},"content":"                LocalDateTime.parse(\"17-10-2021 2359\", DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\"))));","lastModifiedDate":"2021-10-19"},{"lineNumber":291,"author":{"gitId":"tryyang2001"},"content":"        assertEquals(\"There is no food item found by the given date and time period\",","lastModifiedDate":"2021-10-17"},{"lineNumber":292,"author":{"gitId":"tryyang2001"},"content":"                foodList.convertToStringBySpecificDateAndTime(","lastModifiedDate":"2021-10-17"},{"lineNumber":293,"author":{"gitId":"tryyang2001"},"content":"                        LocalDate.parse(\"16-10-2021\", DateTimeFormatter.ofPattern(\"dd-MM-yyyy\")), TimePeriod.MORNING));","lastModifiedDate":"2021-11-08"},{"lineNumber":294,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":295,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":296,"author":{"gitId":"tryyang2001"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"tryyang2001":291,"tlyi":5}},{"path":"src/test/java/seedu/duke/logic/StatisticsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tttyyzzz"},"content":"package seedu.duke.logic;","lastModifiedDate":"2021-11-08"},{"lineNumber":2,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":3,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"tttyyzzz"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"tttyyzzz"},"content":"import seedu.duke.data.item.exercise.Exercise;","lastModifiedDate":"2021-11-08"},{"lineNumber":6,"author":{"gitId":"tlyi"},"content":"import seedu.duke.data.item.exercise.ExerciseList;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"tttyyzzz"},"content":"import seedu.duke.data.item.food.Food;","lastModifiedDate":"2021-11-08"},{"lineNumber":8,"author":{"gitId":"tlyi"},"content":"import seedu.duke.data.item.food.FoodList;","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"tlyi"},"content":"import seedu.duke.data.profile.Profile;","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"tttyyzzz"},"content":"import seedu.duke.data.profile.attributes.ActivityFactor;","lastModifiedDate":"2021-10-26"},{"lineNumber":11,"author":{"gitId":"tttyyzzz"},"content":"import seedu.duke.data.profile.attributes.Age;","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"tttyyzzz"},"content":"import seedu.duke.data.profile.attributes.Gender;","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"tttyyzzz"},"content":"import seedu.duke.data.profile.attributes.Height;","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":15,"author":{"gitId":"tttyyzzz"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-11-08"},{"lineNumber":16,"author":{"gitId":"tttyyzzz"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-11-08"},{"lineNumber":17,"author":{"gitId":"tttyyzzz"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-11-08"},{"lineNumber":18,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":19,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"tttyyzzz"},"content":"import java.lang.reflect.InvocationTargetException;","lastModifiedDate":"2021-11-07"},{"lineNumber":21,"author":{"gitId":"tttyyzzz"},"content":"import java.lang.reflect.Method;","lastModifiedDate":"2021-11-07"},{"lineNumber":22,"author":{"gitId":"tttyyzzz"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-11-08"},{"lineNumber":23,"author":{"gitId":"tttyyzzz"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-11-07"},{"lineNumber":24,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":25,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":26,"author":{"gitId":"tttyyzzz"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"tttyyzzz"},"content":"class StatisticsTest {","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"tttyyzzz"},"content":"    private final String ls \u003d System.lineSeparator();","lastModifiedDate":"2021-11-08"},{"lineNumber":30,"author":{"gitId":"tttyyzzz"},"content":"    private FoodList foodItems;","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"tttyyzzz"},"content":"    private ExerciseList exerciseItems;","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"tttyyzzz"},"content":"    private Profile profile;","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"tttyyzzz"},"content":"    Statistics stats \u003d new Statistics(new FoodList(), new ExerciseList(), new Profile());","lastModifiedDate":"2021-10-26"},{"lineNumber":34,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":35,"author":{"gitId":"tttyyzzz"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":36,"author":{"gitId":"tttyyzzz"},"content":"    void printCalorieResult_netCaloriesAndCalorieGoal_messages() {","lastModifiedDate":"2021-10-13"},{"lineNumber":37,"author":{"gitId":"tttyyzzz"},"content":"        int caloriesGoal \u003d 5000;","lastModifiedDate":"2021-10-13"},{"lineNumber":38,"author":{"gitId":"tttyyzzz"},"content":"        int foodCalories \u003d 3000;","lastModifiedDate":"2021-10-13"},{"lineNumber":39,"author":{"gitId":"tttyyzzz"},"content":"        int exerciseCalories \u003d 2000;","lastModifiedDate":"2021-10-13"},{"lineNumber":40,"author":{"gitId":"tttyyzzz"},"content":"        int netCalories \u003d foodCalories - exerciseCalories;","lastModifiedDate":"2021-10-13"},{"lineNumber":41,"author":{"gitId":"tttyyzzz"},"content":"        String message \u003d stats.printCaloriesMessage(netCalories, caloriesGoal);","lastModifiedDate":"2021-10-13"},{"lineNumber":42,"author":{"gitId":"tlyi"},"content":"        assertEquals(\"You are 4000 cal away from your goal!\", message);","lastModifiedDate":"2021-11-04"},{"lineNumber":43,"author":{"gitId":"tttyyzzz"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":44,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":45,"author":{"gitId":"tttyyzzz"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":46,"author":{"gitId":"tttyyzzz"},"content":"    void printCalories_foodCaloriesExerciseCaloriesAndCalorieGoal_messageArray() {","lastModifiedDate":"2021-10-13"},{"lineNumber":47,"author":{"gitId":"tttyyzzz"},"content":"        this.profile \u003d new Profile();","lastModifiedDate":"2021-10-26"},{"lineNumber":48,"author":{"gitId":"tttyyzzz"},"content":"        profile.setProfileAge(new Age(12));","lastModifiedDate":"2021-10-26"},{"lineNumber":49,"author":{"gitId":"tttyyzzz"},"content":"        profile.setProfileHeight(new Height(170.0));","lastModifiedDate":"2021-10-26"},{"lineNumber":50,"author":{"gitId":"tttyyzzz"},"content":"        profile.setProfileGender(new Gender(\u0027M\u0027));","lastModifiedDate":"2021-10-26"},{"lineNumber":51,"author":{"gitId":"tttyyzzz"},"content":"        profile.setProfileActivityFactor(new ActivityFactor(3));","lastModifiedDate":"2021-10-26"},{"lineNumber":52,"author":{"gitId":"tttyyzzz"},"content":"        int caloriesGoal \u003d 5000;","lastModifiedDate":"2021-10-13"},{"lineNumber":53,"author":{"gitId":"tttyyzzz"},"content":"        int foodCalories \u003d 3000;","lastModifiedDate":"2021-10-13"},{"lineNumber":54,"author":{"gitId":"tttyyzzz"},"content":"        int exerciseCalories \u003d 2000;","lastModifiedDate":"2021-10-13"},{"lineNumber":55,"author":{"gitId":"tlyi"},"content":"        String expectedResult \u003d \"You are 6448 cal away from your goal!\";","lastModifiedDate":"2021-11-04"},{"lineNumber":56,"author":{"gitId":"tttyyzzz"},"content":"        assertEquals(expectedResult, stats.getCaloriesReport(foodCalories, exerciseCalories, caloriesGoal)[4]);","lastModifiedDate":"2021-10-13"},{"lineNumber":57,"author":{"gitId":"tttyyzzz"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":58,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":59,"author":{"gitId":"tttyyzzz"},"content":"    @Test","lastModifiedDate":"2021-11-08"},{"lineNumber":60,"author":{"gitId":"tttyyzzz"},"content":"    void getCurrentDayOverview_foodAndExerciseInput_messageArray()","lastModifiedDate":"2021-11-08"},{"lineNumber":61,"author":{"gitId":"tttyyzzz"},"content":"            throws NoSuchMethodException, InvocationTargetException, IllegalAccessException {","lastModifiedDate":"2021-11-08"},{"lineNumber":62,"author":{"gitId":"tttyyzzz"},"content":"        this.profile \u003d new Profile();","lastModifiedDate":"2021-11-08"},{"lineNumber":63,"author":{"gitId":"tttyyzzz"},"content":"        profile.setProfileAge(new Age(21));","lastModifiedDate":"2021-11-08"},{"lineNumber":64,"author":{"gitId":"tttyyzzz"},"content":"        profile.setProfileHeight(new Height(170.0));","lastModifiedDate":"2021-11-08"},{"lineNumber":65,"author":{"gitId":"tttyyzzz"},"content":"        profile.setProfileGender(new Gender(\u0027M\u0027));","lastModifiedDate":"2021-11-08"},{"lineNumber":66,"author":{"gitId":"tttyyzzz"},"content":"        this.foodItems \u003d new FoodList();","lastModifiedDate":"2021-11-08"},{"lineNumber":67,"author":{"gitId":"tttyyzzz"},"content":"        this.exerciseItems \u003d new ExerciseList();","lastModifiedDate":"2021-11-08"},{"lineNumber":68,"author":{"gitId":"tttyyzzz"},"content":"        profile.setProfileActivityFactor(new ActivityFactor(3));","lastModifiedDate":"2021-11-08"},{"lineNumber":69,"author":{"gitId":"tttyyzzz"},"content":"        this.foodItems.addItem(new Food(\"food1\", 21));","lastModifiedDate":"2021-11-08"},{"lineNumber":70,"author":{"gitId":"tttyyzzz"},"content":"        this.exerciseItems.addItem(new Exercise(\"wwe\", 12));","lastModifiedDate":"2021-11-08"},{"lineNumber":71,"author":{"gitId":"tttyyzzz"},"content":"        Method method \u003d stats.getClass().getDeclaredMethod(\"getCurrentDayOverview\");","lastModifiedDate":"2021-11-08"},{"lineNumber":72,"author":{"gitId":"tttyyzzz"},"content":"        method.setAccessible(true);","lastModifiedDate":"2021-11-08"},{"lineNumber":73,"author":{"gitId":"tttyyzzz"},"content":"        String result \u003d (String) method.invoke(stats);","lastModifiedDate":"2021-11-08"},{"lineNumber":74,"author":{"gitId":"tttyyzzz"},"content":"        String expected \u003d \"This is your calorie overview for today:\" + ls","lastModifiedDate":"2021-11-08"},{"lineNumber":75,"author":{"gitId":"tttyyzzz"},"content":"                + \"Your calorie gained from food is: 0\" + ls","lastModifiedDate":"2021-11-08"},{"lineNumber":76,"author":{"gitId":"tttyyzzz"},"content":"                + \"Your calorie lost from exercise is: 0\" + ls","lastModifiedDate":"2021-11-08"},{"lineNumber":77,"author":{"gitId":"tttyyzzz"},"content":"                + \"Your net calorie intake is: -448\" + ls","lastModifiedDate":"2021-11-08"},{"lineNumber":78,"author":{"gitId":"tttyyzzz"},"content":"                + \"Your calorie goal is: 0\" + ls","lastModifiedDate":"2021-11-08"},{"lineNumber":79,"author":{"gitId":"tttyyzzz"},"content":"                + \"You are 448 cal away from your goal!\";","lastModifiedDate":"2021-11-08"},{"lineNumber":80,"author":{"gitId":"tttyyzzz"},"content":"        assertEquals(expected, result);","lastModifiedDate":"2021-11-08"},{"lineNumber":81,"author":{"gitId":"tttyyzzz"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":82,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":83,"author":{"gitId":"tttyyzzz"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"tttyyzzz":78,"tlyi":5}},{"path":"src/test/java/seedu/duke/logic/parser/ParserManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.logic.parser;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"tlyi"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"tlyi"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"tlyi"},"content":"import seedu.duke.data.profile.Profile;","lastModifiedDate":"2021-11-04"},{"lineNumber":6,"author":{"gitId":"tlyi"},"content":"import seedu.duke.data.profile.utilities.ProfileUtils;","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"tlyi"},"content":"import seedu.duke.logic.commands.AddExerciseBankCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"tlyi"},"content":"import seedu.duke.logic.commands.AddExerciseCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"tlyi"},"content":"import seedu.duke.logic.commands.AddFoodBankCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"tlyi"},"content":"import seedu.duke.logic.commands.AddFoodCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"tlyi"},"content":"import seedu.duke.logic.commands.AddRecurringExerciseCommand;","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"tlyi"},"content":"import seedu.duke.logic.commands.ByeCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"tlyi"},"content":"import seedu.duke.logic.commands.CalculateBmiCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"tlyi"},"content":"import seedu.duke.logic.commands.CalculateBmiWithProfileCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"tlyi"},"content":"import seedu.duke.logic.commands.Command;","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"tlyi"},"content":"import seedu.duke.logic.commands.CommandMessages;","lastModifiedDate":"2021-11-04"},{"lineNumber":17,"author":{"gitId":"tlyi"},"content":"import seedu.duke.logic.commands.HelpCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"tlyi"},"content":"import seedu.duke.logic.commands.InvalidCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"tlyi"},"content":"import seedu.duke.logic.commands.OverviewCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"tlyi"},"content":"import seedu.duke.logic.commands.ProfileUpdateCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"tlyi"},"content":"import seedu.duke.logic.commands.ViewExerciseBankCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"tlyi"},"content":"import seedu.duke.logic.commands.ViewExerciseListCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"tlyi"},"content":"import seedu.duke.logic.commands.ViewFoodBankCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"tlyi"},"content":"import seedu.duke.logic.commands.ViewFoodListCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"tlyi"},"content":"import seedu.duke.logic.commands.ViewFutureExerciseListCommand;","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"tlyi"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"tlyi"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":30,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"tlyi"},"content":"class ParserManagerTest {","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"tlyi"},"content":"    private ParserManager parser;","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"tlyi"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"tlyi"},"content":"    public void setUp() {","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"tlyi"},"content":"        parser \u003d new ParserManager();","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":39,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":40,"author":{"gitId":"tlyi"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"tlyi"},"content":"    void parseCommand_invalidCommandWord_commandDoesNotExistMessage() {","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"tlyi"},"content":"        parseAndAssertIncorrectWithMessage(ParserMessages.MESSAGE_ERROR_COMMAND_DOES_NOT_EXIST,","lastModifiedDate":"2021-10-21"},{"lineNumber":43,"author":{"gitId":"tlyi"},"content":"                \"potato\", \"hi\");","lastModifiedDate":"2021-10-21"},{"lineNumber":44,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":45,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":46,"author":{"gitId":"tlyi"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":47,"author":{"gitId":"tlyi"},"content":"    void parseCommand_containsTextFileDelimiter_illegalCharacterMessage() {","lastModifiedDate":"2021-10-13"},{"lineNumber":48,"author":{"gitId":"tlyi"},"content":"        parseAndAssertIncorrectWithMessage(ParserMessages.MESSAGE_ERROR_ILLEGAL_CHARACTER,","lastModifiedDate":"2021-10-21"},{"lineNumber":49,"author":{"gitId":"tlyi"},"content":"                \"potato | as\", \"add |\", \"name h|o\");","lastModifiedDate":"2021-10-21"},{"lineNumber":50,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":51,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":52,"author":{"gitId":"tlyi"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":53,"author":{"gitId":"tlyi"},"content":"    void parseAddCommand_correctInput_addCommand() {","lastModifiedDate":"2021-10-11"},{"lineNumber":54,"author":{"gitId":"tlyi"},"content":"        parseAndAssertCommandType(\"add f/potato c/20\", AddFoodCommand.class);","lastModifiedDate":"2021-11-04"},{"lineNumber":55,"author":{"gitId":"tlyi"},"content":"        parseAndAssertCommandType(\"add f/potato c/20\", AddFoodCommand.class);","lastModifiedDate":"2021-10-11"},{"lineNumber":56,"author":{"gitId":"tlyi"},"content":"        parseAndAssertCommandType(\"add e/potato c/20\", AddExerciseCommand.class);","lastModifiedDate":"2021-10-11"},{"lineNumber":57,"author":{"gitId":"tlyi"},"content":"        parseAndAssertCommandType(\"add fbank/potato c/20\", AddFoodBankCommand.class);","lastModifiedDate":"2021-10-19"},{"lineNumber":58,"author":{"gitId":"tlyi"},"content":"        parseAndAssertCommandType(\"add ebank/potato c/20\", AddExerciseBankCommand.class);","lastModifiedDate":"2021-10-19"},{"lineNumber":59,"author":{"gitId":"tlyi"},"content":"        parseAndAssertCommandType(\"add ebank/exercise c/250\", AddExerciseBankCommand.class);","lastModifiedDate":"2021-11-04"},{"lineNumber":60,"author":{"gitId":"tlyi"},"content":"        parseAndAssertCommandType(\"add r/exercise c/250 :/11-12-2021 -/30-12-2021 @/1,2,3\",","lastModifiedDate":"2021-11-04"},{"lineNumber":61,"author":{"gitId":"tlyi"},"content":"                AddRecurringExerciseCommand.class);","lastModifiedDate":"2021-11-04"},{"lineNumber":62,"author":{"gitId":"tlyi"},"content":"        parseAndAssertCommandType(\"add r/exercise c/250 :/11-12-2021 -/30-12-2021 @/1\",","lastModifiedDate":"2021-11-04"},{"lineNumber":63,"author":{"gitId":"tlyi"},"content":"                AddRecurringExerciseCommand.class);","lastModifiedDate":"2021-11-04"},{"lineNumber":64,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":65,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":66,"author":{"gitId":"tlyi"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":67,"author":{"gitId":"tlyi"},"content":"    void parseAddCommand_tooManyDelimiters_tooManyDelimitersMessage() {","lastModifiedDate":"2021-11-04"},{"lineNumber":68,"author":{"gitId":"tlyi"},"content":"        parseAndAssertIncorrectWithMessage(ParserMessages.MESSAGE_ERROR_TOO_MANY_DELIMITERS,","lastModifiedDate":"2021-11-04"},{"lineNumber":69,"author":{"gitId":"tlyi"},"content":"                \"add f/pota/to c/20\",","lastModifiedDate":"2021-11-04"},{"lineNumber":70,"author":{"gitId":"tlyi"},"content":"                \"add fbank/tac/o c/20\",","lastModifiedDate":"2021-11-04"},{"lineNumber":71,"author":{"gitId":"tlyi"},"content":"                \"add ebank/tac/o/o c/20\",","lastModifiedDate":"2021-11-04"},{"lineNumber":72,"author":{"gitId":"tlyi"},"content":"                \"add r/exer/cise/ c/250 :/11-12-2021 -/30-12-2021 @/1\");","lastModifiedDate":"2021-11-04"},{"lineNumber":73,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":74,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":75,"author":{"gitId":"tlyi"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":76,"author":{"gitId":"tlyi"},"content":"    void parseAddCommand_extraParameters_invalidCommand() {","lastModifiedDate":"2021-11-04"},{"lineNumber":77,"author":{"gitId":"tlyi"},"content":"        parseAndAssertCommandType(\"add f/potato c/20 abc\", InvalidCommand.class);","lastModifiedDate":"2021-11-04"},{"lineNumber":78,"author":{"gitId":"tlyi"},"content":"        parseAndAssertCommandType(\"add f/potato c/20 a\", InvalidCommand.class);","lastModifiedDate":"2021-11-04"},{"lineNumber":79,"author":{"gitId":"tlyi"},"content":"        parseAndAssertCommandType(\"add e/potato c/20 12\", InvalidCommand.class);","lastModifiedDate":"2021-11-04"},{"lineNumber":80,"author":{"gitId":"tlyi"},"content":"        parseAndAssertCommandType(\"add fbank/potato c/20 sjsjd\", InvalidCommand.class);","lastModifiedDate":"2021-11-04"},{"lineNumber":81,"author":{"gitId":"tlyi"},"content":"        parseAndAssertCommandType(\"add ebank/potato c/20 qqaz\", InvalidCommand.class);","lastModifiedDate":"2021-11-04"},{"lineNumber":82,"author":{"gitId":"tlyi"},"content":"        parseAndAssertCommandType(\"add ebank/exercise c/250 c\", InvalidCommand.class);","lastModifiedDate":"2021-11-04"},{"lineNumber":83,"author":{"gitId":"tlyi"},"content":"        parseAndAssertCommandType(\"add r/exercise c/250 :/11-12-2021 -/30-12-2021 @/1,2,3 abc\",","lastModifiedDate":"2021-11-04"},{"lineNumber":84,"author":{"gitId":"tlyi"},"content":"                InvalidCommand.class);","lastModifiedDate":"2021-11-04"},{"lineNumber":85,"author":{"gitId":"tlyi"},"content":"        parseAndAssertCommandType(\"add r/exercise c/250 :/11-12-2021 asd -/30-12-2021 @/1,2,3 abc\",","lastModifiedDate":"2021-11-04"},{"lineNumber":86,"author":{"gitId":"tlyi"},"content":"                InvalidCommand.class);","lastModifiedDate":"2021-11-04"},{"lineNumber":87,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":88,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":89,"author":{"gitId":"tlyi"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":90,"author":{"gitId":"tlyi"},"content":"    void parseAddCommand_itemTypeNotSpecified_invalidCommand() {","lastModifiedDate":"2021-10-19"},{"lineNumber":91,"author":{"gitId":"tlyi"},"content":"        parseAndAssertCommandType(\"add\", InvalidCommand.class);","lastModifiedDate":"2021-10-19"},{"lineNumber":92,"author":{"gitId":"tlyi"},"content":"        parseAndAssertCommandType(\"add a/\", InvalidCommand.class);","lastModifiedDate":"2021-10-19"},{"lineNumber":93,"author":{"gitId":"tlyi"},"content":"        parseAndAssertCommandType(\"add a\", InvalidCommand.class);","lastModifiedDate":"2021-10-19"},{"lineNumber":94,"author":{"gitId":"tlyi"},"content":"        parseAndAssertCommandType(\"add c/20 f/potato\", InvalidCommand.class);","lastModifiedDate":"2021-11-04"},{"lineNumber":95,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":96,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":97,"author":{"gitId":"tlyi"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":98,"author":{"gitId":"tlyi"},"content":"    void parseAddCommand_nameNotGiven_invalidCommand() {","lastModifiedDate":"2021-10-11"},{"lineNumber":99,"author":{"gitId":"tlyi"},"content":"        parseAndAssertCommandType(\"add f/ c/120\", InvalidCommand.class);","lastModifiedDate":"2021-10-11"},{"lineNumber":100,"author":{"gitId":"tlyi"},"content":"        parseAndAssertCommandType(\"add e/ c/120\", InvalidCommand.class);","lastModifiedDate":"2021-10-11"},{"lineNumber":101,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":102,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":103,"author":{"gitId":"tlyi"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":104,"author":{"gitId":"tlyi"},"content":"    void parseAddCommand_caloriesNotANumber_caloriesNotNumberMessage() {","lastModifiedDate":"2021-10-11"},{"lineNumber":105,"author":{"gitId":"tlyi"},"content":"        parseAndAssertIncorrectWithMessage(CommandMessages.MESSAGE_INVALID_CALORIES,","lastModifiedDate":"2021-11-04"},{"lineNumber":106,"author":{"gitId":"tlyi"},"content":"                \"add f/potato c/potato\", \"add e/hiit c/potato\");","lastModifiedDate":"2021-10-11"},{"lineNumber":107,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":108,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":109,"author":{"gitId":"tlyi"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":110,"author":{"gitId":"tlyi"},"content":"    void parseAddRecurringExerciseCommand_daysNotInRange_invalidCommand() {","lastModifiedDate":"2021-11-04"},{"lineNumber":111,"author":{"gitId":"tlyi"},"content":"        parseAndAssertCommandType(\"add r/exercise c/250 :/11-12-2021 -/30-12-2021 @/1,2,9\",","lastModifiedDate":"2021-11-04"},{"lineNumber":112,"author":{"gitId":"tlyi"},"content":"               InvalidCommand.class);","lastModifiedDate":"2021-11-04"},{"lineNumber":113,"author":{"gitId":"tlyi"},"content":"        parseAndAssertCommandType(\"add r/exercise c/250 :/11-12-2021 -/30-12-2021 @/-1\",","lastModifiedDate":"2021-11-04"},{"lineNumber":114,"author":{"gitId":"tlyi"},"content":"                InvalidCommand.class);","lastModifiedDate":"2021-11-04"},{"lineNumber":115,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":116,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":117,"author":{"gitId":"tlyi"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":118,"author":{"gitId":"tlyi"},"content":"    void parseByeCommand_correctInput_byeCommand() {","lastModifiedDate":"2021-10-13"},{"lineNumber":119,"author":{"gitId":"tlyi"},"content":"        parseAndAssertCommandType(\"bye\", ByeCommand.class);","lastModifiedDate":"2021-10-13"},{"lineNumber":120,"author":{"gitId":"tlyi"},"content":"        parseAndAssertCommandType(\"ByE\", ByeCommand.class);","lastModifiedDate":"2021-10-13"},{"lineNumber":121,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":122,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":123,"author":{"gitId":"tlyi"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":124,"author":{"gitId":"tlyi"},"content":"    void parseCalculateBmiWithProfileCommand_correctInput_calculateBmiWithProfileCommand() {","lastModifiedDate":"2021-10-13"},{"lineNumber":125,"author":{"gitId":"tlyi"},"content":"        parseAndAssertCommandType(\"bmi\", CalculateBmiWithProfileCommand.class);","lastModifiedDate":"2021-10-13"},{"lineNumber":126,"author":{"gitId":"tlyi"},"content":"        parseAndAssertCommandType(\"BMI\", CalculateBmiWithProfileCommand.class);","lastModifiedDate":"2021-10-13"},{"lineNumber":127,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":128,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":129,"author":{"gitId":"tlyi"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":130,"author":{"gitId":"tlyi"},"content":"    void parseCalculateBmiCommand_correctInput_calculateBmiCommand() {","lastModifiedDate":"2021-10-13"},{"lineNumber":131,"author":{"gitId":"tlyi"},"content":"        parseAndAssertCommandType(\"bmi h/50 w/20\", CalculateBmiCommand.class);","lastModifiedDate":"2021-10-13"},{"lineNumber":132,"author":{"gitId":"tlyi"},"content":"        parseAndAssertCommandType(\"BMI w/20 h/50\", CalculateBmiCommand.class);","lastModifiedDate":"2021-10-13"},{"lineNumber":133,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":134,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":135,"author":{"gitId":"tlyi"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":136,"author":{"gitId":"tlyi"},"content":"    void parseCalculateBmiCommand_parametersNotGiven_invalidCommand() {","lastModifiedDate":"2021-10-13"},{"lineNumber":137,"author":{"gitId":"tlyi"},"content":"        parseAndAssertCommandType(\"bmi w/20\", InvalidCommand.class);","lastModifiedDate":"2021-10-13"},{"lineNumber":138,"author":{"gitId":"tlyi"},"content":"        parseAndAssertCommandType(\"bmi h/20\", InvalidCommand.class);","lastModifiedDate":"2021-10-13"},{"lineNumber":139,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":140,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":141,"author":{"gitId":"tlyi"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":142,"author":{"gitId":"tlyi"},"content":"    void parseCalculateBmiCommand_parametersInvalid_errorMessage() {","lastModifiedDate":"2021-10-14"},{"lineNumber":143,"author":{"gitId":"tlyi"},"content":"        parseAndAssertIncorrectWithMessage(","lastModifiedDate":"2021-10-19"},{"lineNumber":144,"author":{"gitId":"tlyi"},"content":"                ProfileUtils.ERROR_HEIGHT,","lastModifiedDate":"2021-11-04"},{"lineNumber":145,"author":{"gitId":"tlyi"},"content":"                \"BMI w/20 h/potato\");","lastModifiedDate":"2021-10-19"},{"lineNumber":146,"author":{"gitId":"tlyi"},"content":"        parseAndAssertIncorrectWithMessage(","lastModifiedDate":"2021-10-19"},{"lineNumber":147,"author":{"gitId":"tlyi"},"content":"                ProfileUtils.ERROR_WEIGHT,","lastModifiedDate":"2021-11-04"},{"lineNumber":148,"author":{"gitId":"tlyi"},"content":"                \"BMI w/potato h/20\");","lastModifiedDate":"2021-10-19"},{"lineNumber":149,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":150,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":151,"author":{"gitId":"tlyi"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":152,"author":{"gitId":"tlyi"},"content":"    void parseDeleteCommand_itemTypeNotSpecified_invalidCommand() {","lastModifiedDate":"2021-10-19"},{"lineNumber":153,"author":{"gitId":"tlyi"},"content":"        parseAndAssertCommandType(\"delete\", InvalidCommand.class);","lastModifiedDate":"2021-10-19"},{"lineNumber":154,"author":{"gitId":"tlyi"},"content":"        parseAndAssertCommandType(\"delete a/\", InvalidCommand.class);","lastModifiedDate":"2021-10-19"},{"lineNumber":155,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":156,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":157,"author":{"gitId":"tlyi"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":158,"author":{"gitId":"tlyi"},"content":"    void parseDeleteFoodCommand_missingParameters_errorMessage() {","lastModifiedDate":"2021-11-04"},{"lineNumber":159,"author":{"gitId":"tlyi"},"content":"        parseAndAssertIncorrectWithMessage(ParserMessages.MESSAGE_ERROR_NO_DATE, \"delete f/1\",","lastModifiedDate":"2021-11-04"},{"lineNumber":160,"author":{"gitId":"tlyi"},"content":"                \"delete f/1 t/2359\");","lastModifiedDate":"2021-11-04"},{"lineNumber":161,"author":{"gitId":"tlyi"},"content":"        parseAndAssertIncorrectWithMessage(ParserMessages.MESSAGE_ERROR_NO_TIME, \"delete f/1 d/25-12-2021\");","lastModifiedDate":"2021-11-04"},{"lineNumber":162,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":163,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":164,"author":{"gitId":"tlyi"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":165,"author":{"gitId":"tlyi"},"content":"    void parseDeleteCommand_itemNumInvalid_invalidCommand() {","lastModifiedDate":"2021-10-14"},{"lineNumber":166,"author":{"gitId":"tlyi"},"content":"        parseAndAssertCommandType(\"delete fbank/ \", InvalidCommand.class);","lastModifiedDate":"2021-10-19"},{"lineNumber":167,"author":{"gitId":"tlyi"},"content":"        parseAndAssertCommandType(\"delete ebank/\", InvalidCommand.class);","lastModifiedDate":"2021-10-19"},{"lineNumber":168,"author":{"gitId":"tlyi"},"content":"        parseAndAssertCommandType(\"delete fbank/potato\", InvalidCommand.class);","lastModifiedDate":"2021-10-19"},{"lineNumber":169,"author":{"gitId":"tlyi"},"content":"        parseAndAssertCommandType(\"delete ebank/potato\", InvalidCommand.class);","lastModifiedDate":"2021-10-19"},{"lineNumber":170,"author":{"gitId":"tlyi"},"content":"        parseAndAssertCommandType(\"delete u/\", InvalidCommand.class);","lastModifiedDate":"2021-11-04"},{"lineNumber":171,"author":{"gitId":"tlyi"},"content":"        parseAndAssertCommandType(\"delete u/potato\", InvalidCommand.class);","lastModifiedDate":"2021-11-04"},{"lineNumber":172,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":173,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":174,"author":{"gitId":"tlyi"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":175,"author":{"gitId":"tlyi"},"content":"    void parseHelpCommand_correctInput_helpCommand() {","lastModifiedDate":"2021-10-14"},{"lineNumber":176,"author":{"gitId":"tlyi"},"content":"        parseAndAssertCommandType(\"help\", HelpCommand.class);","lastModifiedDate":"2021-10-14"},{"lineNumber":177,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":178,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":179,"author":{"gitId":"tlyi"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":180,"author":{"gitId":"tlyi"},"content":"    void parseOverviewCommand_correctInput_overviewCommand() {","lastModifiedDate":"2021-10-14"},{"lineNumber":181,"author":{"gitId":"tlyi"},"content":"        parseAndAssertCommandType(\"overview\", OverviewCommand.class);","lastModifiedDate":"2021-10-14"},{"lineNumber":182,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":183,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":184,"author":{"gitId":"tlyi"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":185,"author":{"gitId":"tlyi"},"content":"    void parseProfileUpdateCommand_correctInput_ProfileCreateCommand() {","lastModifiedDate":"2021-10-19"},{"lineNumber":186,"author":{"gitId":"tlyi"},"content":"        parseAndAssertCommandType(\"profile n/hello w/50 h/80\", ProfileUpdateCommand.class);","lastModifiedDate":"2021-11-04"},{"lineNumber":187,"author":{"gitId":"tlyi"},"content":"        parseAndAssertCommandType(\"profile g/100 a/23 s/F x/2\", ProfileUpdateCommand.class);","lastModifiedDate":"2021-11-04"},{"lineNumber":188,"author":{"gitId":"weidak"},"content":"        parseAndAssertCommandType(\"profile h/50 n/hello potato g/20 w/20 a/23 s/F x/2\", ProfileUpdateCommand.class);","lastModifiedDate":"2021-10-20"},{"lineNumber":189,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":190,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":191,"author":{"gitId":"tlyi"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":192,"author":{"gitId":"tlyi"},"content":"    void parseProfileCreateCommand_parametersNotGiven_invalidCommand() {","lastModifiedDate":"2021-10-19"},{"lineNumber":193,"author":{"gitId":"tlyi"},"content":"        parseAndAssertCommandType(\"profile n/ \", InvalidCommand.class);","lastModifiedDate":"2021-10-19"},{"lineNumber":194,"author":{"gitId":"tlyi"},"content":"        parseAndAssertCommandType(\"profile h/\", InvalidCommand.class);","lastModifiedDate":"2021-10-19"},{"lineNumber":195,"author":{"gitId":"tlyi"},"content":"        parseAndAssertCommandType(\"profile w/\", InvalidCommand.class);","lastModifiedDate":"2021-10-19"},{"lineNumber":196,"author":{"gitId":"tlyi"},"content":"        parseAndAssertCommandType(\"profile n/ h/\", InvalidCommand.class);","lastModifiedDate":"2021-10-19"},{"lineNumber":197,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":198,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":199,"author":{"gitId":"tlyi"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":200,"author":{"gitId":"tlyi"},"content":"    void parseProfileCreateCommand_parametersInvalid_tooManyDelimitersMessage() {","lastModifiedDate":"2021-10-19"},{"lineNumber":201,"author":{"gitId":"tlyi"},"content":"        parseAndAssertIncorrectWithMessage(ParserMessages.MESSAGE_ERROR_TOO_MANY_DELIMITERS,","lastModifiedDate":"2021-11-04"},{"lineNumber":202,"author":{"gitId":"tlyi"},"content":"                \"profile n/hi n/hello\", \"profile n/h/i n/hello\", \"profile n/h/i z/hello\");","lastModifiedDate":"2021-11-04"},{"lineNumber":203,"author":{"gitId":"tlyi"},"content":"        parseAndAssertIncorrectWithMessage(ProfileUtils.ERROR_WEIGHT,","lastModifiedDate":"2021-11-04"},{"lineNumber":204,"author":{"gitId":"tlyi"},"content":"                \"profile w/hello\");","lastModifiedDate":"2021-11-04"},{"lineNumber":205,"author":{"gitId":"tlyi"},"content":"        parseAndAssertIncorrectWithMessage(ProfileUtils.ERROR_HEIGHT,","lastModifiedDate":"2021-11-04"},{"lineNumber":206,"author":{"gitId":"tlyi"},"content":"                \"profile h/hello\");","lastModifiedDate":"2021-11-04"},{"lineNumber":207,"author":{"gitId":"tlyi"},"content":"        parseAndAssertIncorrectWithMessage(ProfileUtils.ERROR_ACTIVITY_FACTOR,","lastModifiedDate":"2021-11-04"},{"lineNumber":208,"author":{"gitId":"tlyi"},"content":"                \"profile x/hello\");","lastModifiedDate":"2021-11-04"},{"lineNumber":209,"author":{"gitId":"tlyi"},"content":"        parseAndAssertIncorrectWithMessage(ProfileUtils.ERROR_AGE,","lastModifiedDate":"2021-11-04"},{"lineNumber":210,"author":{"gitId":"tlyi"},"content":"                \"profile a/hello\");","lastModifiedDate":"2021-11-04"},{"lineNumber":211,"author":{"gitId":"tlyi"},"content":"        parseAndAssertIncorrectWithMessage(ProfileUtils.ERROR_CALORIE_GOAL,","lastModifiedDate":"2021-11-04"},{"lineNumber":212,"author":{"gitId":"tlyi"},"content":"                \"profile g/hello\");","lastModifiedDate":"2021-11-04"},{"lineNumber":213,"author":{"gitId":"tlyi"},"content":"        parseAndAssertIncorrectWithMessage(ProfileUtils.ERROR_GENDER,","lastModifiedDate":"2021-11-04"},{"lineNumber":214,"author":{"gitId":"tlyi"},"content":"                \"profile s/fm\");","lastModifiedDate":"2021-11-04"},{"lineNumber":215,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":216,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":217,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":218,"author":{"gitId":"tlyi"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":219,"author":{"gitId":"tlyi"},"content":"    void parseViewCommand_correctInput_viewCommand() {","lastModifiedDate":"2021-10-14"},{"lineNumber":220,"author":{"gitId":"tlyi"},"content":"        parseAndAssertCommandType(\"view e/\", ViewExerciseListCommand.class);","lastModifiedDate":"2021-10-14"},{"lineNumber":221,"author":{"gitId":"tlyi"},"content":"        parseAndAssertCommandType(\"view f/\", ViewFoodListCommand.class);","lastModifiedDate":"2021-10-14"},{"lineNumber":222,"author":{"gitId":"tlyi"},"content":"        parseAndAssertCommandType(\"view fbank/\", ViewFoodBankCommand.class);","lastModifiedDate":"2021-10-19"},{"lineNumber":223,"author":{"gitId":"tlyi"},"content":"        parseAndAssertCommandType(\"view ebank/\", ViewExerciseBankCommand.class);","lastModifiedDate":"2021-10-19"},{"lineNumber":224,"author":{"gitId":"tlyi"},"content":"        parseAndAssertCommandType(\"view u/\", ViewFutureExerciseListCommand.class);","lastModifiedDate":"2021-10-27"},{"lineNumber":225,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":226,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":227,"author":{"gitId":"tlyi"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":228,"author":{"gitId":"tlyi"},"content":"    void parseViewCommand_itemTypeNotSpecified_invalidCommand() {","lastModifiedDate":"2021-10-19"},{"lineNumber":229,"author":{"gitId":"tlyi"},"content":"        parseAndAssertCommandType(\"view a/\", InvalidCommand.class);","lastModifiedDate":"2021-10-19"},{"lineNumber":230,"author":{"gitId":"tlyi"},"content":"        parseAndAssertCommandType(\"view a\", InvalidCommand.class);","lastModifiedDate":"2021-10-19"},{"lineNumber":231,"author":{"gitId":"tlyi"},"content":"        parseAndAssertCommandType(\"view ef/\", InvalidCommand.class);","lastModifiedDate":"2021-11-04"},{"lineNumber":232,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":233,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":234,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":235,"author":{"gitId":"tlyi"},"content":"    /*","lastModifiedDate":"2021-10-11"},{"lineNumber":236,"author":{"gitId":"tlyi"},"content":"     * Utility methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-11"},{"lineNumber":237,"author":{"gitId":"tlyi"},"content":"     * Adapted from AddressBook-Level2","lastModifiedDate":"2021-10-11"},{"lineNumber":238,"author":{"gitId":"tlyi"},"content":"     * https://github.com/se-edu/addressbook-level2/blob/master/test/java/seedu/addressbook/parser/ParserTest.java","lastModifiedDate":"2021-10-11"},{"lineNumber":239,"author":{"gitId":"tlyi"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":240,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":241,"author":{"gitId":"tlyi"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":242,"author":{"gitId":"tlyi"},"content":"     * Asserts that parsing the given inputs will return IncorrectCommand with the given feedback message.","lastModifiedDate":"2021-10-11"},{"lineNumber":243,"author":{"gitId":"tlyi"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":244,"author":{"gitId":"tlyi"},"content":"    private void parseAndAssertIncorrectWithMessage(String errorMessage, String... inputs) {","lastModifiedDate":"2021-10-11"},{"lineNumber":245,"author":{"gitId":"tlyi"},"content":"        for (String input : inputs) {","lastModifiedDate":"2021-10-11"},{"lineNumber":246,"author":{"gitId":"tlyi"},"content":"            final InvalidCommand result \u003d parseAndAssertCommandType(input, InvalidCommand.class);","lastModifiedDate":"2021-10-11"},{"lineNumber":247,"author":{"gitId":"tlyi"},"content":"            assertEquals(result.errorMessage, errorMessage);","lastModifiedDate":"2021-10-11"},{"lineNumber":248,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":249,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":250,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":251,"author":{"gitId":"tlyi"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":252,"author":{"gitId":"tlyi"},"content":"     * Parses input and asserts the class/type of the returned command object.","lastModifiedDate":"2021-10-11"},{"lineNumber":253,"author":{"gitId":"tlyi"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":254,"author":{"gitId":"tlyi"},"content":"     * @param input                to be parsed","lastModifiedDate":"2021-10-11"},{"lineNumber":255,"author":{"gitId":"tlyi"},"content":"     * @param expectedCommandClass expected class of returned command","lastModifiedDate":"2021-10-11"},{"lineNumber":256,"author":{"gitId":"tlyi"},"content":"     * @return the parsed command object","lastModifiedDate":"2021-10-11"},{"lineNumber":257,"author":{"gitId":"tlyi"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":258,"author":{"gitId":"tlyi"},"content":"    private \u003cT extends Command\u003e T parseAndAssertCommandType(String input, Class\u003cT\u003e expectedCommandClass) {","lastModifiedDate":"2021-10-11"},{"lineNumber":259,"author":{"gitId":"tlyi"},"content":"        final Command result \u003d parser.parseCommand(input);","lastModifiedDate":"2021-10-11"},{"lineNumber":260,"author":{"gitId":"tlyi"},"content":"        assertTrue(result.getClass().isAssignableFrom(expectedCommandClass));","lastModifiedDate":"2021-10-11"},{"lineNumber":261,"author":{"gitId":"tlyi"},"content":"        return (T) result;","lastModifiedDate":"2021-10-11"},{"lineNumber":262,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":263,"author":{"gitId":"tlyi"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"weidak":1,"tryyang2001":1,"tlyi":261}},{"path":"src/test/java/seedu/duke/state/ActivityFactorCreatorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tttyyzzz"},"content":"package seedu.duke.state;","lastModifiedDate":"2021-11-07"},{"lineNumber":2,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":3,"author":{"gitId":"tttyyzzz"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2021-11-07"},{"lineNumber":4,"author":{"gitId":"tttyyzzz"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2021-11-07"},{"lineNumber":5,"author":{"gitId":"tttyyzzz"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-11-07"},{"lineNumber":6,"author":{"gitId":"tttyyzzz"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-11-07"},{"lineNumber":7,"author":{"gitId":"tttyyzzz"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2021-11-07"},{"lineNumber":8,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":9,"author":{"gitId":"tttyyzzz"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2021-11-07"},{"lineNumber":10,"author":{"gitId":"tttyyzzz"},"content":"import java.io.PrintStream;","lastModifiedDate":"2021-11-07"},{"lineNumber":11,"author":{"gitId":"tttyyzzz"},"content":"import java.lang.reflect.InvocationTargetException;","lastModifiedDate":"2021-11-07"},{"lineNumber":12,"author":{"gitId":"tttyyzzz"},"content":"import java.lang.reflect.Method;","lastModifiedDate":"2021-11-07"},{"lineNumber":13,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":14,"author":{"gitId":"tttyyzzz"},"content":"class ActivityFactorCreatorTest {","lastModifiedDate":"2021-11-07"},{"lineNumber":15,"author":{"gitId":"tttyyzzz"},"content":"    ActivityFactorCreator activityFactorCreator \u003d new ActivityFactorCreator(new Ui());","lastModifiedDate":"2021-11-07"},{"lineNumber":16,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":17,"author":{"gitId":"tttyyzzz"},"content":"    private final PrintStream standardOut \u003d System.out;","lastModifiedDate":"2021-11-07"},{"lineNumber":18,"author":{"gitId":"tttyyzzz"},"content":"    private final ByteArrayOutputStream outputStreamCaptor \u003d new ByteArrayOutputStream();","lastModifiedDate":"2021-11-07"},{"lineNumber":19,"author":{"gitId":"tttyyzzz"},"content":"    private final String ls \u003d System.lineSeparator();","lastModifiedDate":"2021-11-07"},{"lineNumber":20,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":21,"author":{"gitId":"tttyyzzz"},"content":"    @BeforeEach","lastModifiedDate":"2021-11-07"},{"lineNumber":22,"author":{"gitId":"tttyyzzz"},"content":"    public void setUp() {","lastModifiedDate":"2021-11-07"},{"lineNumber":23,"author":{"gitId":"tttyyzzz"},"content":"        System.setOut(new PrintStream(outputStreamCaptor));","lastModifiedDate":"2021-11-07"},{"lineNumber":24,"author":{"gitId":"tttyyzzz"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":25,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":26,"author":{"gitId":"tttyyzzz"},"content":"    @Test","lastModifiedDate":"2021-11-07"},{"lineNumber":27,"author":{"gitId":"tttyyzzz"},"content":"    void setActivityFactor_oneInvalidInput_throwsException()","lastModifiedDate":"2021-11-07"},{"lineNumber":28,"author":{"gitId":"tttyyzzz"},"content":"            throws InvocationTargetException, IllegalAccessException, NoSuchMethodException {","lastModifiedDate":"2021-11-07"},{"lineNumber":29,"author":{"gitId":"tttyyzzz"},"content":"        Method method \u003d activityFactorCreator.getClass().getDeclaredMethod(\"setActivityFactor\", String.class);","lastModifiedDate":"2021-11-07"},{"lineNumber":30,"author":{"gitId":"tttyyzzz"},"content":"        method.setAccessible(true);","lastModifiedDate":"2021-11-07"},{"lineNumber":31,"author":{"gitId":"tttyyzzz"},"content":"        Assertions.assertThrows(InvocationTargetException.class,","lastModifiedDate":"2021-11-07"},{"lineNumber":32,"author":{"gitId":"tttyyzzz"},"content":"            () -\u003e method.invoke(activityFactorCreator, \"dg\"));","lastModifiedDate":"2021-11-07"},{"lineNumber":33,"author":{"gitId":"tttyyzzz"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":34,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":35,"author":{"gitId":"tttyyzzz"},"content":"    @Test","lastModifiedDate":"2021-11-07"},{"lineNumber":36,"author":{"gitId":"tttyyzzz"},"content":"    void setActivityFactor_emptyInput_throwsException()","lastModifiedDate":"2021-11-07"},{"lineNumber":37,"author":{"gitId":"tttyyzzz"},"content":"            throws NoSuchMethodException {","lastModifiedDate":"2021-11-07"},{"lineNumber":38,"author":{"gitId":"tttyyzzz"},"content":"        Method method \u003d activityFactorCreator.getClass().getDeclaredMethod(\"setActivityFactor\", String.class);","lastModifiedDate":"2021-11-07"},{"lineNumber":39,"author":{"gitId":"tttyyzzz"},"content":"        method.setAccessible(true);","lastModifiedDate":"2021-11-07"},{"lineNumber":40,"author":{"gitId":"tttyyzzz"},"content":"        Assertions.assertThrows(InvocationTargetException.class, () -\u003e method.invoke(activityFactorCreator, \"\"));","lastModifiedDate":"2021-11-07"},{"lineNumber":41,"author":{"gitId":"tttyyzzz"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":42,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":43,"author":{"gitId":"tttyyzzz"},"content":"    @Test","lastModifiedDate":"2021-11-07"},{"lineNumber":44,"author":{"gitId":"tttyyzzz"},"content":"    void setActivityFactor_spacesInput_throwsException() throws NoSuchMethodException {","lastModifiedDate":"2021-11-07"},{"lineNumber":45,"author":{"gitId":"tttyyzzz"},"content":"        Method method \u003d activityFactorCreator.getClass().getDeclaredMethod(\"setActivityFactor\", String.class);","lastModifiedDate":"2021-11-07"},{"lineNumber":46,"author":{"gitId":"tttyyzzz"},"content":"        method.setAccessible(true);","lastModifiedDate":"2021-11-07"},{"lineNumber":47,"author":{"gitId":"tttyyzzz"},"content":"        Assertions.assertThrows(InvocationTargetException.class,","lastModifiedDate":"2021-11-07"},{"lineNumber":48,"author":{"gitId":"tttyyzzz"},"content":"            () -\u003e method.invoke(activityFactorCreator, \"    \"));","lastModifiedDate":"2021-11-07"},{"lineNumber":49,"author":{"gitId":"tttyyzzz"},"content":"        Assertions.assertThrows(InvocationTargetException.class,","lastModifiedDate":"2021-11-07"},{"lineNumber":50,"author":{"gitId":"tttyyzzz"},"content":"            () -\u003e method.invoke(activityFactorCreator, \" \" + ls));","lastModifiedDate":"2021-11-07"},{"lineNumber":51,"author":{"gitId":"tttyyzzz"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":52,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":53,"author":{"gitId":"tttyyzzz"},"content":"    @Test","lastModifiedDate":"2021-11-07"},{"lineNumber":54,"author":{"gitId":"tttyyzzz"},"content":"    void checkActivityFactor_activityFactorInstance_validMessage()","lastModifiedDate":"2021-11-07"},{"lineNumber":55,"author":{"gitId":"tttyyzzz"},"content":"            throws NoSuchMethodException, InvocationTargetException, IllegalAccessException {","lastModifiedDate":"2021-11-07"},{"lineNumber":56,"author":{"gitId":"tttyyzzz"},"content":"        Method method \u003d activityFactorCreator.getClass().getDeclaredMethod(\"setActivityFactor\", String.class);","lastModifiedDate":"2021-11-07"},{"lineNumber":57,"author":{"gitId":"tttyyzzz"},"content":"        Method checkMethod \u003d activityFactorCreator.getClass().getDeclaredMethod(\"checkActivityFactor\");","lastModifiedDate":"2021-11-07"},{"lineNumber":58,"author":{"gitId":"tttyyzzz"},"content":"        method.setAccessible(true);","lastModifiedDate":"2021-11-07"},{"lineNumber":59,"author":{"gitId":"tttyyzzz"},"content":"        method.invoke(activityFactorCreator, \"0\");","lastModifiedDate":"2021-11-07"},{"lineNumber":60,"author":{"gitId":"tttyyzzz"},"content":"        checkMethod.setAccessible(true);","lastModifiedDate":"2021-11-07"},{"lineNumber":61,"author":{"gitId":"tttyyzzz"},"content":"        checkMethod.invoke(activityFactorCreator);","lastModifiedDate":"2021-11-07"},{"lineNumber":62,"author":{"gitId":"tttyyzzz"},"content":"        String expected \u003d \"_________________________________________________________\"","lastModifiedDate":"2021-11-07"},{"lineNumber":63,"author":{"gitId":"tttyyzzz"},"content":"                + \"_________________________________________________\" + ls","lastModifiedDate":"2021-11-07"},{"lineNumber":64,"author":{"gitId":"tttyyzzz"},"content":"                + \"Maybe you can try a whole number from 1 to 5.\" + ls","lastModifiedDate":"2021-11-07"},{"lineNumber":65,"author":{"gitId":"tttyyzzz"},"content":"                + \"__________________________________________________________________\"","lastModifiedDate":"2021-11-07"},{"lineNumber":66,"author":{"gitId":"tttyyzzz"},"content":"                + \"________________________________________\";","lastModifiedDate":"2021-11-07"},{"lineNumber":67,"author":{"gitId":"tttyyzzz"},"content":"        Assertions.assertEquals(expected, outputStreamCaptor.toString()","lastModifiedDate":"2021-11-07"},{"lineNumber":68,"author":{"gitId":"tttyyzzz"},"content":"                .trim());","lastModifiedDate":"2021-11-07"},{"lineNumber":69,"author":{"gitId":"tttyyzzz"},"content":"        String expected1 \u003d expected + ls","lastModifiedDate":"2021-11-07"},{"lineNumber":70,"author":{"gitId":"tttyyzzz"},"content":"                + \"__________________________________________________________\"","lastModifiedDate":"2021-11-07"},{"lineNumber":71,"author":{"gitId":"tttyyzzz"},"content":"                + \"________________________________________________\" + ls","lastModifiedDate":"2021-11-07"},{"lineNumber":72,"author":{"gitId":"tttyyzzz"},"content":"                + \"Your activity factor is 4.\";","lastModifiedDate":"2021-11-07"},{"lineNumber":73,"author":{"gitId":"tttyyzzz"},"content":"        method.invoke(activityFactorCreator, \"4\");","lastModifiedDate":"2021-11-07"},{"lineNumber":74,"author":{"gitId":"tttyyzzz"},"content":"        checkMethod.invoke(activityFactorCreator);","lastModifiedDate":"2021-11-07"},{"lineNumber":75,"author":{"gitId":"tttyyzzz"},"content":"        Assertions.assertEquals(expected1, outputStreamCaptor.toString()","lastModifiedDate":"2021-11-07"},{"lineNumber":76,"author":{"gitId":"tttyyzzz"},"content":"                .trim());","lastModifiedDate":"2021-11-07"},{"lineNumber":77,"author":{"gitId":"tttyyzzz"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":78,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":79,"author":{"gitId":"tttyyzzz"},"content":"    @AfterEach","lastModifiedDate":"2021-11-07"},{"lineNumber":80,"author":{"gitId":"tttyyzzz"},"content":"    public void tearDown() {","lastModifiedDate":"2021-11-07"},{"lineNumber":81,"author":{"gitId":"tttyyzzz"},"content":"        System.setOut(standardOut);","lastModifiedDate":"2021-11-07"},{"lineNumber":82,"author":{"gitId":"tttyyzzz"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":83,"author":{"gitId":"tttyyzzz"},"content":"}","lastModifiedDate":"2021-11-07"}],"authorContributionMap":{"tttyyzzz":83}},{"path":"src/test/java/seedu/duke/state/AgeCreatorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tttyyzzz"},"content":"package seedu.duke.state;","lastModifiedDate":"2021-11-07"},{"lineNumber":2,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":3,"author":{"gitId":"tttyyzzz"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2021-11-07"},{"lineNumber":4,"author":{"gitId":"tttyyzzz"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-11-07"},{"lineNumber":5,"author":{"gitId":"tttyyzzz"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-11-07"},{"lineNumber":6,"author":{"gitId":"tttyyzzz"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2021-11-07"},{"lineNumber":7,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":8,"author":{"gitId":"tttyyzzz"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2021-11-07"},{"lineNumber":9,"author":{"gitId":"tttyyzzz"},"content":"import java.io.PrintStream;","lastModifiedDate":"2021-11-07"},{"lineNumber":10,"author":{"gitId":"tttyyzzz"},"content":"import java.lang.reflect.InvocationTargetException;","lastModifiedDate":"2021-11-07"},{"lineNumber":11,"author":{"gitId":"tttyyzzz"},"content":"import java.lang.reflect.Method;","lastModifiedDate":"2021-11-07"},{"lineNumber":12,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":13,"author":{"gitId":"tttyyzzz"},"content":"import  org.junit.jupiter.api.Assertions;","lastModifiedDate":"2021-11-07"},{"lineNumber":14,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":15,"author":{"gitId":"tttyyzzz"},"content":"class AgeCreatorTest {","lastModifiedDate":"2021-11-07"},{"lineNumber":16,"author":{"gitId":"tttyyzzz"},"content":"    AgeCreator ageCreator \u003d new AgeCreator(new Ui());","lastModifiedDate":"2021-11-07"},{"lineNumber":17,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":18,"author":{"gitId":"tttyyzzz"},"content":"    private final PrintStream standardOut \u003d System.out;","lastModifiedDate":"2021-11-07"},{"lineNumber":19,"author":{"gitId":"tttyyzzz"},"content":"    private final ByteArrayOutputStream outputStreamCaptor \u003d new ByteArrayOutputStream();","lastModifiedDate":"2021-11-07"},{"lineNumber":20,"author":{"gitId":"tttyyzzz"},"content":"    private final String ls \u003d System.lineSeparator();","lastModifiedDate":"2021-11-07"},{"lineNumber":21,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":22,"author":{"gitId":"tttyyzzz"},"content":"    @BeforeEach","lastModifiedDate":"2021-11-07"},{"lineNumber":23,"author":{"gitId":"tttyyzzz"},"content":"    public void setUp() {","lastModifiedDate":"2021-11-07"},{"lineNumber":24,"author":{"gitId":"tttyyzzz"},"content":"        System.setOut(new PrintStream(outputStreamCaptor));","lastModifiedDate":"2021-11-07"},{"lineNumber":25,"author":{"gitId":"tttyyzzz"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":26,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":27,"author":{"gitId":"tttyyzzz"},"content":"    @Test","lastModifiedDate":"2021-11-07"},{"lineNumber":28,"author":{"gitId":"tttyyzzz"},"content":"    void setAge_oneInvalidInput_throwsException()","lastModifiedDate":"2021-11-07"},{"lineNumber":29,"author":{"gitId":"tttyyzzz"},"content":"            throws NoSuchMethodException {","lastModifiedDate":"2021-11-07"},{"lineNumber":30,"author":{"gitId":"tttyyzzz"},"content":"        Method method \u003d ageCreator.getClass().getDeclaredMethod(\"setAge\",String.class);","lastModifiedDate":"2021-11-07"},{"lineNumber":31,"author":{"gitId":"tttyyzzz"},"content":"        method.setAccessible(true);","lastModifiedDate":"2021-11-07"},{"lineNumber":32,"author":{"gitId":"tttyyzzz"},"content":"        Assertions.assertThrows(InvocationTargetException.class, () -\u003e method.invoke(ageCreator,\"adg\"));","lastModifiedDate":"2021-11-07"},{"lineNumber":33,"author":{"gitId":"tttyyzzz"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":34,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":35,"author":{"gitId":"tttyyzzz"},"content":"    @Test","lastModifiedDate":"2021-11-07"},{"lineNumber":36,"author":{"gitId":"tttyyzzz"},"content":"    void setAge_emptyInput_throwsException()","lastModifiedDate":"2021-11-07"},{"lineNumber":37,"author":{"gitId":"tttyyzzz"},"content":"            throws NoSuchMethodException {","lastModifiedDate":"2021-11-07"},{"lineNumber":38,"author":{"gitId":"tttyyzzz"},"content":"        Method method \u003d ageCreator.getClass().getDeclaredMethod(\"setAge\",String.class);","lastModifiedDate":"2021-11-07"},{"lineNumber":39,"author":{"gitId":"tttyyzzz"},"content":"        method.setAccessible(true);","lastModifiedDate":"2021-11-07"},{"lineNumber":40,"author":{"gitId":"tttyyzzz"},"content":"        Assertions.assertThrows(InvocationTargetException.class, () -\u003e method.invoke(ageCreator,\"\"));","lastModifiedDate":"2021-11-07"},{"lineNumber":41,"author":{"gitId":"tttyyzzz"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":42,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":43,"author":{"gitId":"tttyyzzz"},"content":"    @Test","lastModifiedDate":"2021-11-07"},{"lineNumber":44,"author":{"gitId":"tttyyzzz"},"content":"    void setAge_spacesInput_throwsException() throws NoSuchMethodException {","lastModifiedDate":"2021-11-07"},{"lineNumber":45,"author":{"gitId":"tttyyzzz"},"content":"        Method method \u003d ageCreator.getClass().getDeclaredMethod(\"setAge\",String.class);","lastModifiedDate":"2021-11-07"},{"lineNumber":46,"author":{"gitId":"tttyyzzz"},"content":"        method.setAccessible(true);","lastModifiedDate":"2021-11-07"},{"lineNumber":47,"author":{"gitId":"tttyyzzz"},"content":"        Assertions.assertThrows(InvocationTargetException.class, () -\u003e method.invoke(ageCreator,\"    \"));","lastModifiedDate":"2021-11-07"},{"lineNumber":48,"author":{"gitId":"tttyyzzz"},"content":"        Assertions.assertThrows(InvocationTargetException.class, () -\u003e method.invoke(ageCreator,\" \" + ls));","lastModifiedDate":"2021-11-07"},{"lineNumber":49,"author":{"gitId":"tttyyzzz"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":50,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":51,"author":{"gitId":"tttyyzzz"},"content":"    @Test","lastModifiedDate":"2021-11-07"},{"lineNumber":52,"author":{"gitId":"tttyyzzz"},"content":"    void checkAge_ageInstance_validMessage()","lastModifiedDate":"2021-11-07"},{"lineNumber":53,"author":{"gitId":"tttyyzzz"},"content":"            throws NoSuchMethodException, InvocationTargetException, IllegalAccessException {","lastModifiedDate":"2021-11-07"},{"lineNumber":54,"author":{"gitId":"tttyyzzz"},"content":"        Method method \u003d ageCreator.getClass().getDeclaredMethod(\"setAge\",String.class);","lastModifiedDate":"2021-11-07"},{"lineNumber":55,"author":{"gitId":"tttyyzzz"},"content":"        Method checkMethod \u003d ageCreator.getClass().getDeclaredMethod(\"checkAge\");","lastModifiedDate":"2021-11-07"},{"lineNumber":56,"author":{"gitId":"tttyyzzz"},"content":"        method.setAccessible(true);","lastModifiedDate":"2021-11-07"},{"lineNumber":57,"author":{"gitId":"tttyyzzz"},"content":"        method.invoke(ageCreator,\"1\");","lastModifiedDate":"2021-11-07"},{"lineNumber":58,"author":{"gitId":"tttyyzzz"},"content":"        checkMethod.setAccessible(true);","lastModifiedDate":"2021-11-07"},{"lineNumber":59,"author":{"gitId":"tttyyzzz"},"content":"        checkMethod.invoke(ageCreator);","lastModifiedDate":"2021-11-07"},{"lineNumber":60,"author":{"gitId":"tttyyzzz"},"content":"        String expected \u003d \"_________________________________________________________________\"","lastModifiedDate":"2021-11-07"},{"lineNumber":61,"author":{"gitId":"tttyyzzz"},"content":"                + \"_________________________________________\" + ls","lastModifiedDate":"2021-11-07"},{"lineNumber":62,"author":{"gitId":"tttyyzzz"},"content":"                + \"Your age cannot be this value.\" + ls","lastModifiedDate":"2021-11-07"},{"lineNumber":63,"author":{"gitId":"tttyyzzz"},"content":"                + \"Maybe you can try a whole number from 10 to 150.\" + ls","lastModifiedDate":"2021-11-07"},{"lineNumber":64,"author":{"gitId":"tttyyzzz"},"content":"                + \"___________________________________________________________\"","lastModifiedDate":"2021-11-07"},{"lineNumber":65,"author":{"gitId":"tttyyzzz"},"content":"                + \"_______________________________________________\";","lastModifiedDate":"2021-11-07"},{"lineNumber":66,"author":{"gitId":"tttyyzzz"},"content":"        Assertions.assertEquals(expected, outputStreamCaptor.toString()","lastModifiedDate":"2021-11-07"},{"lineNumber":67,"author":{"gitId":"tttyyzzz"},"content":"                .trim());","lastModifiedDate":"2021-11-07"},{"lineNumber":68,"author":{"gitId":"tttyyzzz"},"content":"        String expected1 \u003d expected + ls","lastModifiedDate":"2021-11-07"},{"lineNumber":69,"author":{"gitId":"tttyyzzz"},"content":"                + \"_________________________________________________\"","lastModifiedDate":"2021-11-07"},{"lineNumber":70,"author":{"gitId":"tttyyzzz"},"content":"                + \"_________________________________________________________\" + ls","lastModifiedDate":"2021-11-07"},{"lineNumber":71,"author":{"gitId":"tttyyzzz"},"content":"                + \"You are 20 years old.\";","lastModifiedDate":"2021-11-07"},{"lineNumber":72,"author":{"gitId":"tttyyzzz"},"content":"        method.invoke(ageCreator,\"20\");","lastModifiedDate":"2021-11-07"},{"lineNumber":73,"author":{"gitId":"tttyyzzz"},"content":"        checkMethod.invoke(ageCreator);","lastModifiedDate":"2021-11-07"},{"lineNumber":74,"author":{"gitId":"tttyyzzz"},"content":"        Assertions.assertEquals(expected1, outputStreamCaptor.toString()","lastModifiedDate":"2021-11-07"},{"lineNumber":75,"author":{"gitId":"tttyyzzz"},"content":"                .trim());","lastModifiedDate":"2021-11-07"},{"lineNumber":76,"author":{"gitId":"tttyyzzz"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":77,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":78,"author":{"gitId":"tttyyzzz"},"content":"    @AfterEach","lastModifiedDate":"2021-11-07"},{"lineNumber":79,"author":{"gitId":"tttyyzzz"},"content":"    public void tearDown() {","lastModifiedDate":"2021-11-07"},{"lineNumber":80,"author":{"gitId":"tttyyzzz"},"content":"        System.setOut(standardOut);","lastModifiedDate":"2021-11-07"},{"lineNumber":81,"author":{"gitId":"tttyyzzz"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":82,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":83,"author":{"gitId":"tttyyzzz"},"content":"}","lastModifiedDate":"2021-11-07"}],"authorContributionMap":{"tttyyzzz":83}},{"path":"src/test/java/seedu/duke/state/CalorieGoalCreatorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tttyyzzz"},"content":"package seedu.duke.state;","lastModifiedDate":"2021-11-07"},{"lineNumber":2,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":3,"author":{"gitId":"tttyyzzz"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2021-11-07"},{"lineNumber":4,"author":{"gitId":"tttyyzzz"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2021-11-07"},{"lineNumber":5,"author":{"gitId":"tttyyzzz"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-11-07"},{"lineNumber":6,"author":{"gitId":"tttyyzzz"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-11-07"},{"lineNumber":7,"author":{"gitId":"tttyyzzz"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2021-11-07"},{"lineNumber":8,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":9,"author":{"gitId":"tttyyzzz"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2021-11-07"},{"lineNumber":10,"author":{"gitId":"tttyyzzz"},"content":"import java.io.PrintStream;","lastModifiedDate":"2021-11-07"},{"lineNumber":11,"author":{"gitId":"tttyyzzz"},"content":"import java.lang.reflect.InvocationTargetException;","lastModifiedDate":"2021-11-07"},{"lineNumber":12,"author":{"gitId":"tttyyzzz"},"content":"import java.lang.reflect.Method;","lastModifiedDate":"2021-11-07"},{"lineNumber":13,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":14,"author":{"gitId":"tttyyzzz"},"content":"class CalorieGoalCreatorTest {","lastModifiedDate":"2021-11-07"},{"lineNumber":15,"author":{"gitId":"tttyyzzz"},"content":"    CalorieGoalCreator calorieGoalCreator \u003d new CalorieGoalCreator(new Ui());","lastModifiedDate":"2021-11-07"},{"lineNumber":16,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":17,"author":{"gitId":"tttyyzzz"},"content":"    private final PrintStream standardOut \u003d System.out;","lastModifiedDate":"2021-11-07"},{"lineNumber":18,"author":{"gitId":"tttyyzzz"},"content":"    private final ByteArrayOutputStream outputStreamCaptor \u003d new ByteArrayOutputStream();","lastModifiedDate":"2021-11-07"},{"lineNumber":19,"author":{"gitId":"tttyyzzz"},"content":"    private final String ls \u003d System.lineSeparator();","lastModifiedDate":"2021-11-07"},{"lineNumber":20,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":21,"author":{"gitId":"tttyyzzz"},"content":"    @BeforeEach","lastModifiedDate":"2021-11-07"},{"lineNumber":22,"author":{"gitId":"tttyyzzz"},"content":"    public void setUp() {","lastModifiedDate":"2021-11-07"},{"lineNumber":23,"author":{"gitId":"tttyyzzz"},"content":"        System.setOut(new PrintStream(outputStreamCaptor));","lastModifiedDate":"2021-11-07"},{"lineNumber":24,"author":{"gitId":"tttyyzzz"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":25,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":26,"author":{"gitId":"tttyyzzz"},"content":"    @Test","lastModifiedDate":"2021-11-07"},{"lineNumber":27,"author":{"gitId":"tttyyzzz"},"content":"    void setCalorieGoal_oneInvalidInput_throwsException()","lastModifiedDate":"2021-11-07"},{"lineNumber":28,"author":{"gitId":"tttyyzzz"},"content":"            throws InvocationTargetException, IllegalAccessException, NoSuchMethodException {","lastModifiedDate":"2021-11-07"},{"lineNumber":29,"author":{"gitId":"tttyyzzz"},"content":"        Method method \u003d calorieGoalCreator.getClass().getDeclaredMethod(\"setCalorieGoal\", String.class);","lastModifiedDate":"2021-11-07"},{"lineNumber":30,"author":{"gitId":"tttyyzzz"},"content":"        method.setAccessible(true);","lastModifiedDate":"2021-11-07"},{"lineNumber":31,"author":{"gitId":"tttyyzzz"},"content":"        Assertions.assertThrows(InvocationTargetException.class, () -\u003e method.invoke(calorieGoalCreator, \"dg\"));","lastModifiedDate":"2021-11-07"},{"lineNumber":32,"author":{"gitId":"tttyyzzz"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":33,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":34,"author":{"gitId":"tttyyzzz"},"content":"    @Test","lastModifiedDate":"2021-11-07"},{"lineNumber":35,"author":{"gitId":"tttyyzzz"},"content":"    void setCalorieGoal_emptyInput_throwsException()","lastModifiedDate":"2021-11-07"},{"lineNumber":36,"author":{"gitId":"tttyyzzz"},"content":"            throws NoSuchMethodException {","lastModifiedDate":"2021-11-07"},{"lineNumber":37,"author":{"gitId":"tttyyzzz"},"content":"        Method method \u003d calorieGoalCreator.getClass().getDeclaredMethod(\"setCalorieGoal\", String.class);","lastModifiedDate":"2021-11-07"},{"lineNumber":38,"author":{"gitId":"tttyyzzz"},"content":"        method.setAccessible(true);","lastModifiedDate":"2021-11-07"},{"lineNumber":39,"author":{"gitId":"tttyyzzz"},"content":"        Assertions.assertThrows(InvocationTargetException.class, () -\u003e method.invoke(calorieGoalCreator, \"\"));","lastModifiedDate":"2021-11-07"},{"lineNumber":40,"author":{"gitId":"tttyyzzz"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":41,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":42,"author":{"gitId":"tttyyzzz"},"content":"    @Test","lastModifiedDate":"2021-11-07"},{"lineNumber":43,"author":{"gitId":"tttyyzzz"},"content":"    void setCalorieGoal_spacesInput_throwsException() throws NoSuchMethodException {","lastModifiedDate":"2021-11-07"},{"lineNumber":44,"author":{"gitId":"tttyyzzz"},"content":"        Method method \u003d calorieGoalCreator.getClass().getDeclaredMethod(\"setCalorieGoal\", String.class);","lastModifiedDate":"2021-11-07"},{"lineNumber":45,"author":{"gitId":"tttyyzzz"},"content":"        method.setAccessible(true);","lastModifiedDate":"2021-11-07"},{"lineNumber":46,"author":{"gitId":"tttyyzzz"},"content":"        Assertions.assertThrows(InvocationTargetException.class,","lastModifiedDate":"2021-11-07"},{"lineNumber":47,"author":{"gitId":"tttyyzzz"},"content":"            () -\u003e method.invoke(calorieGoalCreator, \"    \"));","lastModifiedDate":"2021-11-07"},{"lineNumber":48,"author":{"gitId":"tttyyzzz"},"content":"        Assertions.assertThrows(InvocationTargetException.class,","lastModifiedDate":"2021-11-07"},{"lineNumber":49,"author":{"gitId":"tttyyzzz"},"content":"            () -\u003e method.invoke(calorieGoalCreator, \" \" + ls));","lastModifiedDate":"2021-11-07"},{"lineNumber":50,"author":{"gitId":"tttyyzzz"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":51,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":52,"author":{"gitId":"tttyyzzz"},"content":"    @Test","lastModifiedDate":"2021-11-07"},{"lineNumber":53,"author":{"gitId":"tttyyzzz"},"content":"    void checkCalorieGoal_calorieGoalInstance_validMessage()","lastModifiedDate":"2021-11-07"},{"lineNumber":54,"author":{"gitId":"tttyyzzz"},"content":"            throws NoSuchMethodException, InvocationTargetException, IllegalAccessException {","lastModifiedDate":"2021-11-07"},{"lineNumber":55,"author":{"gitId":"tttyyzzz"},"content":"        Method method \u003d calorieGoalCreator.getClass().getDeclaredMethod(\"setCalorieGoal\", String.class);","lastModifiedDate":"2021-11-07"},{"lineNumber":56,"author":{"gitId":"tttyyzzz"},"content":"        Method checkMethod \u003d calorieGoalCreator.getClass().getDeclaredMethod(\"checkCalorieGoal\");","lastModifiedDate":"2021-11-07"},{"lineNumber":57,"author":{"gitId":"tttyyzzz"},"content":"        method.setAccessible(true);","lastModifiedDate":"2021-11-07"},{"lineNumber":58,"author":{"gitId":"tttyyzzz"},"content":"        method.invoke(calorieGoalCreator, \"0\");","lastModifiedDate":"2021-11-07"},{"lineNumber":59,"author":{"gitId":"tttyyzzz"},"content":"        checkMethod.setAccessible(true);","lastModifiedDate":"2021-11-07"},{"lineNumber":60,"author":{"gitId":"tttyyzzz"},"content":"        checkMethod.invoke(calorieGoalCreator);","lastModifiedDate":"2021-11-07"},{"lineNumber":61,"author":{"gitId":"tttyyzzz"},"content":"        String expected \u003d \"____________________________________________________________\"","lastModifiedDate":"2021-11-07"},{"lineNumber":62,"author":{"gitId":"tttyyzzz"},"content":"                + \"______________________________________________\" + ls","lastModifiedDate":"2021-11-07"},{"lineNumber":63,"author":{"gitId":"tttyyzzz"},"content":"                + \"You calorie goal is 0 cal.\";","lastModifiedDate":"2021-11-07"},{"lineNumber":64,"author":{"gitId":"tttyyzzz"},"content":"        Assertions.assertEquals(expected, outputStreamCaptor.toString()","lastModifiedDate":"2021-11-07"},{"lineNumber":65,"author":{"gitId":"tttyyzzz"},"content":"                .trim());","lastModifiedDate":"2021-11-07"},{"lineNumber":66,"author":{"gitId":"tttyyzzz"},"content":"        String expected1 \u003d expected + ls","lastModifiedDate":"2021-11-07"},{"lineNumber":67,"author":{"gitId":"tttyyzzz"},"content":"                + \"________________________________________________________\"","lastModifiedDate":"2021-11-07"},{"lineNumber":68,"author":{"gitId":"tttyyzzz"},"content":"                + \"__________________________________________________\" + ls","lastModifiedDate":"2021-11-07"},{"lineNumber":69,"author":{"gitId":"tttyyzzz"},"content":"                + \"You calorie goal is 4 cal.\";","lastModifiedDate":"2021-11-07"},{"lineNumber":70,"author":{"gitId":"tttyyzzz"},"content":"        method.invoke(calorieGoalCreator, \"4\");","lastModifiedDate":"2021-11-07"},{"lineNumber":71,"author":{"gitId":"tttyyzzz"},"content":"        checkMethod.invoke(calorieGoalCreator);","lastModifiedDate":"2021-11-07"},{"lineNumber":72,"author":{"gitId":"tttyyzzz"},"content":"        Assertions.assertEquals(expected1, outputStreamCaptor.toString()","lastModifiedDate":"2021-11-07"},{"lineNumber":73,"author":{"gitId":"tttyyzzz"},"content":"                .trim());","lastModifiedDate":"2021-11-07"},{"lineNumber":74,"author":{"gitId":"tttyyzzz"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":75,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":76,"author":{"gitId":"tttyyzzz"},"content":"    @AfterEach","lastModifiedDate":"2021-11-07"},{"lineNumber":77,"author":{"gitId":"tttyyzzz"},"content":"    public void tearDown() {","lastModifiedDate":"2021-11-07"},{"lineNumber":78,"author":{"gitId":"tttyyzzz"},"content":"        System.setOut(standardOut);","lastModifiedDate":"2021-11-07"},{"lineNumber":79,"author":{"gitId":"tttyyzzz"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":80,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":81,"author":{"gitId":"tttyyzzz"},"content":"}","lastModifiedDate":"2021-11-07"}],"authorContributionMap":{"tttyyzzz":81}},{"path":"src/test/java/seedu/duke/state/GenderCreatorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tttyyzzz"},"content":"package seedu.duke.state;","lastModifiedDate":"2021-11-07"},{"lineNumber":2,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":3,"author":{"gitId":"tttyyzzz"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2021-11-07"},{"lineNumber":4,"author":{"gitId":"tttyyzzz"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2021-11-07"},{"lineNumber":5,"author":{"gitId":"tttyyzzz"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-11-07"},{"lineNumber":6,"author":{"gitId":"tttyyzzz"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-11-07"},{"lineNumber":7,"author":{"gitId":"tttyyzzz"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2021-11-07"},{"lineNumber":8,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":9,"author":{"gitId":"tttyyzzz"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2021-11-07"},{"lineNumber":10,"author":{"gitId":"tttyyzzz"},"content":"import java.io.PrintStream;","lastModifiedDate":"2021-11-07"},{"lineNumber":11,"author":{"gitId":"tttyyzzz"},"content":"import java.lang.reflect.InvocationTargetException;","lastModifiedDate":"2021-11-07"},{"lineNumber":12,"author":{"gitId":"tttyyzzz"},"content":"import java.lang.reflect.Method;","lastModifiedDate":"2021-11-07"},{"lineNumber":13,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":14,"author":{"gitId":"tttyyzzz"},"content":"class GenderCreatorTest {","lastModifiedDate":"2021-11-07"},{"lineNumber":15,"author":{"gitId":"tttyyzzz"},"content":"    GenderCreator genderCreator \u003d new GenderCreator(new Ui());","lastModifiedDate":"2021-11-07"},{"lineNumber":16,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":17,"author":{"gitId":"tttyyzzz"},"content":"    private final PrintStream standardOut \u003d System.out;","lastModifiedDate":"2021-11-07"},{"lineNumber":18,"author":{"gitId":"tttyyzzz"},"content":"    private final ByteArrayOutputStream outputStreamCaptor \u003d new ByteArrayOutputStream();","lastModifiedDate":"2021-11-07"},{"lineNumber":19,"author":{"gitId":"tttyyzzz"},"content":"    private final String ls \u003d System.lineSeparator();","lastModifiedDate":"2021-11-07"},{"lineNumber":20,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":21,"author":{"gitId":"tttyyzzz"},"content":"    @BeforeEach","lastModifiedDate":"2021-11-07"},{"lineNumber":22,"author":{"gitId":"tttyyzzz"},"content":"    public void setUp() {","lastModifiedDate":"2021-11-07"},{"lineNumber":23,"author":{"gitId":"tttyyzzz"},"content":"        System.setOut(new PrintStream(outputStreamCaptor));","lastModifiedDate":"2021-11-07"},{"lineNumber":24,"author":{"gitId":"tttyyzzz"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":25,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":26,"author":{"gitId":"tttyyzzz"},"content":"    @Test","lastModifiedDate":"2021-11-07"},{"lineNumber":27,"author":{"gitId":"tttyyzzz"},"content":"    void setGender_emptyInput_throwsException()","lastModifiedDate":"2021-11-07"},{"lineNumber":28,"author":{"gitId":"tttyyzzz"},"content":"            throws NoSuchMethodException {","lastModifiedDate":"2021-11-07"},{"lineNumber":29,"author":{"gitId":"tttyyzzz"},"content":"        Method method \u003d genderCreator.getClass().getDeclaredMethod(\"setGender\",String.class);","lastModifiedDate":"2021-11-07"},{"lineNumber":30,"author":{"gitId":"tttyyzzz"},"content":"        method.setAccessible(true);","lastModifiedDate":"2021-11-07"},{"lineNumber":31,"author":{"gitId":"tttyyzzz"},"content":"        Assertions.assertThrows(InvocationTargetException.class, () -\u003e method.invoke(genderCreator,\"\"));","lastModifiedDate":"2021-11-07"},{"lineNumber":32,"author":{"gitId":"tttyyzzz"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":33,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":34,"author":{"gitId":"tttyyzzz"},"content":"    @Test","lastModifiedDate":"2021-11-07"},{"lineNumber":35,"author":{"gitId":"tttyyzzz"},"content":"    void checkGender_genderInstance_validMessage()","lastModifiedDate":"2021-11-07"},{"lineNumber":36,"author":{"gitId":"tttyyzzz"},"content":"            throws NoSuchMethodException, InvocationTargetException, IllegalAccessException {","lastModifiedDate":"2021-11-07"},{"lineNumber":37,"author":{"gitId":"tttyyzzz"},"content":"        Method method \u003d genderCreator.getClass().getDeclaredMethod(\"setGender\",String.class);","lastModifiedDate":"2021-11-07"},{"lineNumber":38,"author":{"gitId":"tttyyzzz"},"content":"        Method checkMethod \u003d genderCreator.getClass().getDeclaredMethod(\"checkGender\");","lastModifiedDate":"2021-11-07"},{"lineNumber":39,"author":{"gitId":"tttyyzzz"},"content":"        method.setAccessible(true);","lastModifiedDate":"2021-11-07"},{"lineNumber":40,"author":{"gitId":"tttyyzzz"},"content":"        method.invoke(genderCreator,\"0\");","lastModifiedDate":"2021-11-07"},{"lineNumber":41,"author":{"gitId":"tttyyzzz"},"content":"        checkMethod.setAccessible(true);","lastModifiedDate":"2021-11-07"},{"lineNumber":42,"author":{"gitId":"tttyyzzz"},"content":"        checkMethod.invoke(genderCreator);","lastModifiedDate":"2021-11-07"},{"lineNumber":43,"author":{"gitId":"tttyyzzz"},"content":"        String expected \u003d \"____________________________________________________________________\"","lastModifiedDate":"2021-11-07"},{"lineNumber":44,"author":{"gitId":"tttyyzzz"},"content":"                + \"______________________________________\" + ls","lastModifiedDate":"2021-11-07"},{"lineNumber":45,"author":{"gitId":"tttyyzzz"},"content":"                + \"Please type in M or F only!\";","lastModifiedDate":"2021-11-07"},{"lineNumber":46,"author":{"gitId":"tttyyzzz"},"content":"        Assertions.assertEquals(expected, outputStreamCaptor.toString()","lastModifiedDate":"2021-11-07"},{"lineNumber":47,"author":{"gitId":"tttyyzzz"},"content":"                .trim());","lastModifiedDate":"2021-11-07"},{"lineNumber":48,"author":{"gitId":"tttyyzzz"},"content":"        String expected1 \u003d expected + ls","lastModifiedDate":"2021-11-07"},{"lineNumber":49,"author":{"gitId":"tttyyzzz"},"content":"                + \"_____________________________________________________________________\"","lastModifiedDate":"2021-11-07"},{"lineNumber":50,"author":{"gitId":"tttyyzzz"},"content":"                + \"_____________________________________\" + ls","lastModifiedDate":"2021-11-07"},{"lineNumber":51,"author":{"gitId":"tttyyzzz"},"content":"                + \"You are a male.\";","lastModifiedDate":"2021-11-07"},{"lineNumber":52,"author":{"gitId":"tttyyzzz"},"content":"        method.invoke(genderCreator,\"m\");","lastModifiedDate":"2021-11-07"},{"lineNumber":53,"author":{"gitId":"tttyyzzz"},"content":"        checkMethod.invoke(genderCreator);","lastModifiedDate":"2021-11-07"},{"lineNumber":54,"author":{"gitId":"tttyyzzz"},"content":"        Assertions.assertEquals(expected1, outputStreamCaptor.toString()","lastModifiedDate":"2021-11-07"},{"lineNumber":55,"author":{"gitId":"tttyyzzz"},"content":"                .trim());","lastModifiedDate":"2021-11-07"},{"lineNumber":56,"author":{"gitId":"tttyyzzz"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":57,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":58,"author":{"gitId":"tttyyzzz"},"content":"    @AfterEach","lastModifiedDate":"2021-11-07"},{"lineNumber":59,"author":{"gitId":"tttyyzzz"},"content":"    public void tearDown() {","lastModifiedDate":"2021-11-07"},{"lineNumber":60,"author":{"gitId":"tttyyzzz"},"content":"        System.setOut(standardOut);","lastModifiedDate":"2021-11-07"},{"lineNumber":61,"author":{"gitId":"tttyyzzz"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":62,"author":{"gitId":"tttyyzzz"},"content":"}","lastModifiedDate":"2021-11-07"}],"authorContributionMap":{"tttyyzzz":62}},{"path":"src/test/java/seedu/duke/state/HeightCreatorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tttyyzzz"},"content":"package seedu.duke.state;","lastModifiedDate":"2021-11-07"},{"lineNumber":2,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":3,"author":{"gitId":"tttyyzzz"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2021-11-07"},{"lineNumber":4,"author":{"gitId":"tttyyzzz"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2021-11-07"},{"lineNumber":5,"author":{"gitId":"tttyyzzz"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-11-07"},{"lineNumber":6,"author":{"gitId":"tttyyzzz"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-11-07"},{"lineNumber":7,"author":{"gitId":"tttyyzzz"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2021-11-07"},{"lineNumber":8,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":9,"author":{"gitId":"tttyyzzz"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2021-11-07"},{"lineNumber":10,"author":{"gitId":"tttyyzzz"},"content":"import java.io.PrintStream;","lastModifiedDate":"2021-11-07"},{"lineNumber":11,"author":{"gitId":"tttyyzzz"},"content":"import java.lang.reflect.InvocationTargetException;","lastModifiedDate":"2021-11-07"},{"lineNumber":12,"author":{"gitId":"tttyyzzz"},"content":"import java.lang.reflect.Method;","lastModifiedDate":"2021-11-07"},{"lineNumber":13,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":14,"author":{"gitId":"tttyyzzz"},"content":"class HeightCreatorTest {","lastModifiedDate":"2021-11-07"},{"lineNumber":15,"author":{"gitId":"tttyyzzz"},"content":"    HeightCreator heightCreator \u003d new HeightCreator(new Ui());","lastModifiedDate":"2021-11-07"},{"lineNumber":16,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":17,"author":{"gitId":"tttyyzzz"},"content":"    private final PrintStream standardOut \u003d System.out;","lastModifiedDate":"2021-11-07"},{"lineNumber":18,"author":{"gitId":"tttyyzzz"},"content":"    private final ByteArrayOutputStream outputStreamCaptor \u003d new ByteArrayOutputStream();","lastModifiedDate":"2021-11-07"},{"lineNumber":19,"author":{"gitId":"tttyyzzz"},"content":"    private final String ls \u003d System.lineSeparator();","lastModifiedDate":"2021-11-07"},{"lineNumber":20,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":21,"author":{"gitId":"tttyyzzz"},"content":"    @BeforeEach","lastModifiedDate":"2021-11-07"},{"lineNumber":22,"author":{"gitId":"tttyyzzz"},"content":"    public void setUp() {","lastModifiedDate":"2021-11-07"},{"lineNumber":23,"author":{"gitId":"tttyyzzz"},"content":"        System.setOut(new PrintStream(outputStreamCaptor));","lastModifiedDate":"2021-11-07"},{"lineNumber":24,"author":{"gitId":"tttyyzzz"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":25,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":26,"author":{"gitId":"tttyyzzz"},"content":"    @Test","lastModifiedDate":"2021-11-07"},{"lineNumber":27,"author":{"gitId":"tttyyzzz"},"content":"    void setHeight_oneInvalidInput_throwsException()","lastModifiedDate":"2021-11-07"},{"lineNumber":28,"author":{"gitId":"tttyyzzz"},"content":"            throws InvocationTargetException, IllegalAccessException, NoSuchMethodException {","lastModifiedDate":"2021-11-07"},{"lineNumber":29,"author":{"gitId":"tttyyzzz"},"content":"        Method method \u003d heightCreator.getClass().getDeclaredMethod(\"setHeight\", String.class);","lastModifiedDate":"2021-11-07"},{"lineNumber":30,"author":{"gitId":"tttyyzzz"},"content":"        method.setAccessible(true);","lastModifiedDate":"2021-11-07"},{"lineNumber":31,"author":{"gitId":"tttyyzzz"},"content":"        Assertions.assertThrows(InvocationTargetException.class, () -\u003e method.invoke(heightCreator, \"dg\"));","lastModifiedDate":"2021-11-07"},{"lineNumber":32,"author":{"gitId":"tttyyzzz"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":33,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":34,"author":{"gitId":"tttyyzzz"},"content":"    @Test","lastModifiedDate":"2021-11-07"},{"lineNumber":35,"author":{"gitId":"tttyyzzz"},"content":"    void setHeight_emptyInput_throwsException()","lastModifiedDate":"2021-11-07"},{"lineNumber":36,"author":{"gitId":"tttyyzzz"},"content":"            throws NoSuchMethodException {","lastModifiedDate":"2021-11-07"},{"lineNumber":37,"author":{"gitId":"tttyyzzz"},"content":"        Method method \u003d heightCreator.getClass().getDeclaredMethod(\"setHeight\", String.class);","lastModifiedDate":"2021-11-07"},{"lineNumber":38,"author":{"gitId":"tttyyzzz"},"content":"        method.setAccessible(true);","lastModifiedDate":"2021-11-07"},{"lineNumber":39,"author":{"gitId":"tttyyzzz"},"content":"        Assertions.assertThrows(InvocationTargetException.class, () -\u003e method.invoke(heightCreator, \"\"));","lastModifiedDate":"2021-11-07"},{"lineNumber":40,"author":{"gitId":"tttyyzzz"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":41,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":42,"author":{"gitId":"tttyyzzz"},"content":"    @Test","lastModifiedDate":"2021-11-07"},{"lineNumber":43,"author":{"gitId":"tttyyzzz"},"content":"    void setHeight_spacesInput_throwsException() throws NoSuchMethodException {","lastModifiedDate":"2021-11-07"},{"lineNumber":44,"author":{"gitId":"tttyyzzz"},"content":"        Method method \u003d heightCreator.getClass().getDeclaredMethod(\"setHeight\", String.class);","lastModifiedDate":"2021-11-07"},{"lineNumber":45,"author":{"gitId":"tttyyzzz"},"content":"        method.setAccessible(true);","lastModifiedDate":"2021-11-07"},{"lineNumber":46,"author":{"gitId":"tttyyzzz"},"content":"        Assertions.assertThrows(InvocationTargetException.class,","lastModifiedDate":"2021-11-07"},{"lineNumber":47,"author":{"gitId":"tttyyzzz"},"content":"            () -\u003e method.invoke(heightCreator, \"    \"));","lastModifiedDate":"2021-11-07"},{"lineNumber":48,"author":{"gitId":"tttyyzzz"},"content":"        Assertions.assertThrows(InvocationTargetException.class,","lastModifiedDate":"2021-11-07"},{"lineNumber":49,"author":{"gitId":"tttyyzzz"},"content":"            () -\u003e method.invoke(heightCreator, \" \" + ls));","lastModifiedDate":"2021-11-07"},{"lineNumber":50,"author":{"gitId":"tttyyzzz"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":51,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":52,"author":{"gitId":"tttyyzzz"},"content":"    @Test","lastModifiedDate":"2021-11-07"},{"lineNumber":53,"author":{"gitId":"tttyyzzz"},"content":"    void checkHeight_heightInstance_validMessage()","lastModifiedDate":"2021-11-07"},{"lineNumber":54,"author":{"gitId":"tttyyzzz"},"content":"            throws NoSuchMethodException, InvocationTargetException, IllegalAccessException {","lastModifiedDate":"2021-11-07"},{"lineNumber":55,"author":{"gitId":"tttyyzzz"},"content":"        Method method \u003d heightCreator.getClass().getDeclaredMethod(\"setHeight\", String.class);","lastModifiedDate":"2021-11-07"},{"lineNumber":56,"author":{"gitId":"tttyyzzz"},"content":"        Method checkMethod \u003d heightCreator.getClass().getDeclaredMethod(\"checkHeight\");","lastModifiedDate":"2021-11-07"},{"lineNumber":57,"author":{"gitId":"tttyyzzz"},"content":"        method.setAccessible(true);","lastModifiedDate":"2021-11-07"},{"lineNumber":58,"author":{"gitId":"tttyyzzz"},"content":"        method.invoke(heightCreator, \"0\");","lastModifiedDate":"2021-11-07"},{"lineNumber":59,"author":{"gitId":"tttyyzzz"},"content":"        checkMethod.setAccessible(true);","lastModifiedDate":"2021-11-07"},{"lineNumber":60,"author":{"gitId":"tttyyzzz"},"content":"        checkMethod.invoke(heightCreator);","lastModifiedDate":"2021-11-07"},{"lineNumber":61,"author":{"gitId":"tttyyzzz"},"content":"        String expected \u003d \"________________________________________________________\"","lastModifiedDate":"2021-11-07"},{"lineNumber":62,"author":{"gitId":"tttyyzzz"},"content":"                + \"__________________________________________________\" + ls","lastModifiedDate":"2021-11-07"},{"lineNumber":63,"author":{"gitId":"tttyyzzz"},"content":"                + \"Your height cannot be of this value!\" + ls","lastModifiedDate":"2021-11-07"},{"lineNumber":64,"author":{"gitId":"tttyyzzz"},"content":"                + \"Maybe you can try a number from 1 to 300.\" + ls","lastModifiedDate":"2021-11-07"},{"lineNumber":65,"author":{"gitId":"tttyyzzz"},"content":"                + \"________________________________________________\"","lastModifiedDate":"2021-11-07"},{"lineNumber":66,"author":{"gitId":"tttyyzzz"},"content":"                + \"__________________________________________________________\";","lastModifiedDate":"2021-11-07"},{"lineNumber":67,"author":{"gitId":"tttyyzzz"},"content":"        Assertions.assertEquals(expected, outputStreamCaptor.toString()","lastModifiedDate":"2021-11-07"},{"lineNumber":68,"author":{"gitId":"tttyyzzz"},"content":"                .trim());","lastModifiedDate":"2021-11-07"},{"lineNumber":69,"author":{"gitId":"tttyyzzz"},"content":"        String expected1 \u003d expected + ls","lastModifiedDate":"2021-11-07"},{"lineNumber":70,"author":{"gitId":"tttyyzzz"},"content":"                + \"___________________________________________________________\"","lastModifiedDate":"2021-11-07"},{"lineNumber":71,"author":{"gitId":"tttyyzzz"},"content":"                + \"_______________________________________________\" + ls","lastModifiedDate":"2021-11-07"},{"lineNumber":72,"author":{"gitId":"tttyyzzz"},"content":"                + \"Your height is 4.0cm.\";","lastModifiedDate":"2021-11-07"},{"lineNumber":73,"author":{"gitId":"tttyyzzz"},"content":"        method.invoke(heightCreator, \"4\");","lastModifiedDate":"2021-11-07"},{"lineNumber":74,"author":{"gitId":"tttyyzzz"},"content":"        checkMethod.invoke(heightCreator);","lastModifiedDate":"2021-11-07"},{"lineNumber":75,"author":{"gitId":"tttyyzzz"},"content":"        Assertions.assertEquals(expected1, outputStreamCaptor.toString()","lastModifiedDate":"2021-11-07"},{"lineNumber":76,"author":{"gitId":"tttyyzzz"},"content":"                .trim());","lastModifiedDate":"2021-11-07"},{"lineNumber":77,"author":{"gitId":"tttyyzzz"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":78,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":79,"author":{"gitId":"tttyyzzz"},"content":"    @AfterEach","lastModifiedDate":"2021-11-07"},{"lineNumber":80,"author":{"gitId":"tttyyzzz"},"content":"    public void tearDown() {","lastModifiedDate":"2021-11-07"},{"lineNumber":81,"author":{"gitId":"tttyyzzz"},"content":"        System.setOut(standardOut);","lastModifiedDate":"2021-11-07"},{"lineNumber":82,"author":{"gitId":"tttyyzzz"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":83,"author":{"gitId":"tttyyzzz"},"content":"}","lastModifiedDate":"2021-11-07"}],"authorContributionMap":{"tttyyzzz":83}},{"path":"src/test/java/seedu/duke/state/NameCreatorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tttyyzzz"},"content":"package seedu.duke.state;","lastModifiedDate":"2021-11-07"},{"lineNumber":2,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":3,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":4,"author":{"gitId":"tttyyzzz"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2021-11-07"},{"lineNumber":5,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":6,"author":{"gitId":"tttyyzzz"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-11-07"},{"lineNumber":7,"author":{"gitId":"tttyyzzz"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2021-11-07"},{"lineNumber":8,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":9,"author":{"gitId":"tttyyzzz"},"content":"import java.lang.reflect.InvocationTargetException;","lastModifiedDate":"2021-11-07"},{"lineNumber":10,"author":{"gitId":"tttyyzzz"},"content":"import java.lang.reflect.Method;","lastModifiedDate":"2021-11-07"},{"lineNumber":11,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":12,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":13,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":14,"author":{"gitId":"tttyyzzz"},"content":"class NameCreatorTest {","lastModifiedDate":"2021-11-07"},{"lineNumber":15,"author":{"gitId":"tttyyzzz"},"content":"    NameCreator nameCreator \u003d new NameCreator(new Ui());","lastModifiedDate":"2021-11-07"},{"lineNumber":16,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":17,"author":{"gitId":"tttyyzzz"},"content":"    @Test","lastModifiedDate":"2021-11-07"},{"lineNumber":18,"author":{"gitId":"tttyyzzz"},"content":"    void setName_emptyInput_throwsException()","lastModifiedDate":"2021-11-07"},{"lineNumber":19,"author":{"gitId":"tttyyzzz"},"content":"            throws NoSuchMethodException {","lastModifiedDate":"2021-11-07"},{"lineNumber":20,"author":{"gitId":"tttyyzzz"},"content":"        Method method \u003d nameCreator.getClass().getDeclaredMethod(\"setName\",String.class);","lastModifiedDate":"2021-11-07"},{"lineNumber":21,"author":{"gitId":"tttyyzzz"},"content":"        method.setAccessible(true);","lastModifiedDate":"2021-11-07"},{"lineNumber":22,"author":{"gitId":"tttyyzzz"},"content":"        Assertions.assertThrows(InvocationTargetException.class, () -\u003e method.invoke(nameCreator,\"\"));","lastModifiedDate":"2021-11-07"},{"lineNumber":23,"author":{"gitId":"tttyyzzz"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":24,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":25,"author":{"gitId":"tttyyzzz"},"content":"    @Test","lastModifiedDate":"2021-11-07"},{"lineNumber":26,"author":{"gitId":"tttyyzzz"},"content":"    void checkName_nameInstance_validMessage()","lastModifiedDate":"2021-11-07"},{"lineNumber":27,"author":{"gitId":"tttyyzzz"},"content":"            throws NoSuchMethodException, InvocationTargetException, IllegalAccessException {","lastModifiedDate":"2021-11-07"},{"lineNumber":28,"author":{"gitId":"tttyyzzz"},"content":"        Method method \u003d nameCreator.getClass().getDeclaredMethod(\"setName\",String.class);","lastModifiedDate":"2021-11-07"},{"lineNumber":29,"author":{"gitId":"tttyyzzz"},"content":"        method.setAccessible(true);","lastModifiedDate":"2021-11-07"},{"lineNumber":30,"author":{"gitId":"tttyyzzz"},"content":"        boolean result \u003d (boolean) method.invoke(nameCreator,\"bywere\");","lastModifiedDate":"2021-11-07"},{"lineNumber":31,"author":{"gitId":"tttyyzzz"},"content":"        Assertions.assertEquals(result, false);","lastModifiedDate":"2021-11-07"},{"lineNumber":32,"author":{"gitId":"tttyyzzz"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":33,"author":{"gitId":"tttyyzzz"},"content":"}","lastModifiedDate":"2021-11-07"}],"authorContributionMap":{"tttyyzzz":33}},{"path":"src/test/java/seedu/duke/state/WeightCreatorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tttyyzzz"},"content":"package seedu.duke.state;","lastModifiedDate":"2021-11-07"},{"lineNumber":2,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":3,"author":{"gitId":"tttyyzzz"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2021-11-07"},{"lineNumber":4,"author":{"gitId":"tttyyzzz"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2021-11-07"},{"lineNumber":5,"author":{"gitId":"tttyyzzz"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-11-07"},{"lineNumber":6,"author":{"gitId":"tttyyzzz"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-11-07"},{"lineNumber":7,"author":{"gitId":"tttyyzzz"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2021-11-07"},{"lineNumber":8,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":9,"author":{"gitId":"tttyyzzz"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2021-11-07"},{"lineNumber":10,"author":{"gitId":"tttyyzzz"},"content":"import java.io.PrintStream;","lastModifiedDate":"2021-11-07"},{"lineNumber":11,"author":{"gitId":"tttyyzzz"},"content":"import java.lang.reflect.InvocationTargetException;","lastModifiedDate":"2021-11-07"},{"lineNumber":12,"author":{"gitId":"tttyyzzz"},"content":"import java.lang.reflect.Method;","lastModifiedDate":"2021-11-07"},{"lineNumber":13,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":14,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":15,"author":{"gitId":"tttyyzzz"},"content":"class WeightCreatorTest {","lastModifiedDate":"2021-11-07"},{"lineNumber":16,"author":{"gitId":"tttyyzzz"},"content":"    WeightCreator weightCreator \u003d new WeightCreator(new Ui());","lastModifiedDate":"2021-11-07"},{"lineNumber":17,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":18,"author":{"gitId":"tttyyzzz"},"content":"    private final PrintStream standardOut \u003d System.out;","lastModifiedDate":"2021-11-07"},{"lineNumber":19,"author":{"gitId":"tttyyzzz"},"content":"    private final ByteArrayOutputStream outputStreamCaptor \u003d new ByteArrayOutputStream();","lastModifiedDate":"2021-11-07"},{"lineNumber":20,"author":{"gitId":"tttyyzzz"},"content":"    private final String ls \u003d System.lineSeparator();","lastModifiedDate":"2021-11-07"},{"lineNumber":21,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":22,"author":{"gitId":"tttyyzzz"},"content":"    @BeforeEach","lastModifiedDate":"2021-11-07"},{"lineNumber":23,"author":{"gitId":"tttyyzzz"},"content":"    public void setUp() {","lastModifiedDate":"2021-11-07"},{"lineNumber":24,"author":{"gitId":"tttyyzzz"},"content":"        System.setOut(new PrintStream(outputStreamCaptor));","lastModifiedDate":"2021-11-07"},{"lineNumber":25,"author":{"gitId":"tttyyzzz"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":26,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":27,"author":{"gitId":"tttyyzzz"},"content":"    @Test","lastModifiedDate":"2021-11-07"},{"lineNumber":28,"author":{"gitId":"tttyyzzz"},"content":"    void setWeight_oneInvalidInput_throwsException()","lastModifiedDate":"2021-11-07"},{"lineNumber":29,"author":{"gitId":"tttyyzzz"},"content":"            throws InvocationTargetException, IllegalAccessException, NoSuchMethodException {","lastModifiedDate":"2021-11-07"},{"lineNumber":30,"author":{"gitId":"tttyyzzz"},"content":"        Method method \u003d weightCreator.getClass().getDeclaredMethod(\"setWeight\", String.class);","lastModifiedDate":"2021-11-07"},{"lineNumber":31,"author":{"gitId":"tttyyzzz"},"content":"        method.setAccessible(true);","lastModifiedDate":"2021-11-07"},{"lineNumber":32,"author":{"gitId":"tttyyzzz"},"content":"        Assertions.assertThrows(InvocationTargetException.class, () -\u003e method.invoke(weightCreator, \"dg\"));","lastModifiedDate":"2021-11-07"},{"lineNumber":33,"author":{"gitId":"tttyyzzz"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":34,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":35,"author":{"gitId":"tttyyzzz"},"content":"    @Test","lastModifiedDate":"2021-11-07"},{"lineNumber":36,"author":{"gitId":"tttyyzzz"},"content":"    void setWeight_emptyInput_throwsException()","lastModifiedDate":"2021-11-07"},{"lineNumber":37,"author":{"gitId":"tttyyzzz"},"content":"            throws NoSuchMethodException {","lastModifiedDate":"2021-11-07"},{"lineNumber":38,"author":{"gitId":"tttyyzzz"},"content":"        Method method \u003d weightCreator.getClass().getDeclaredMethod(\"setWeight\", String.class);","lastModifiedDate":"2021-11-07"},{"lineNumber":39,"author":{"gitId":"tttyyzzz"},"content":"        method.setAccessible(true);","lastModifiedDate":"2021-11-07"},{"lineNumber":40,"author":{"gitId":"tttyyzzz"},"content":"        Assertions.assertThrows(InvocationTargetException.class, () -\u003e method.invoke(weightCreator, \"\"));","lastModifiedDate":"2021-11-07"},{"lineNumber":41,"author":{"gitId":"tttyyzzz"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":42,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":43,"author":{"gitId":"tttyyzzz"},"content":"    @Test","lastModifiedDate":"2021-11-07"},{"lineNumber":44,"author":{"gitId":"tttyyzzz"},"content":"    void setWeight_spacesInput_throwsException() throws NoSuchMethodException {","lastModifiedDate":"2021-11-07"},{"lineNumber":45,"author":{"gitId":"tttyyzzz"},"content":"        Method method \u003d weightCreator.getClass().getDeclaredMethod(\"setWeight\", String.class);","lastModifiedDate":"2021-11-07"},{"lineNumber":46,"author":{"gitId":"tttyyzzz"},"content":"        method.setAccessible(true);","lastModifiedDate":"2021-11-07"},{"lineNumber":47,"author":{"gitId":"tttyyzzz"},"content":"        Assertions.assertThrows(InvocationTargetException.class,","lastModifiedDate":"2021-11-07"},{"lineNumber":48,"author":{"gitId":"tttyyzzz"},"content":"            () -\u003e method.invoke(weightCreator, \"    \"));","lastModifiedDate":"2021-11-07"},{"lineNumber":49,"author":{"gitId":"tttyyzzz"},"content":"        Assertions.assertThrows(InvocationTargetException.class,","lastModifiedDate":"2021-11-07"},{"lineNumber":50,"author":{"gitId":"tttyyzzz"},"content":"            () -\u003e method.invoke(weightCreator, \" \" + ls));","lastModifiedDate":"2021-11-07"},{"lineNumber":51,"author":{"gitId":"tttyyzzz"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":52,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":53,"author":{"gitId":"tttyyzzz"},"content":"    @Test","lastModifiedDate":"2021-11-07"},{"lineNumber":54,"author":{"gitId":"tttyyzzz"},"content":"    void checkWeight_weightInstance_validMessage()","lastModifiedDate":"2021-11-07"},{"lineNumber":55,"author":{"gitId":"tttyyzzz"},"content":"            throws NoSuchMethodException, InvocationTargetException, IllegalAccessException {","lastModifiedDate":"2021-11-07"},{"lineNumber":56,"author":{"gitId":"tttyyzzz"},"content":"        Method method \u003d weightCreator.getClass().getDeclaredMethod(\"setWeight\", String.class);","lastModifiedDate":"2021-11-07"},{"lineNumber":57,"author":{"gitId":"tttyyzzz"},"content":"        Method checkMethod \u003d weightCreator.getClass().getDeclaredMethod(\"checkWeight\");","lastModifiedDate":"2021-11-07"},{"lineNumber":58,"author":{"gitId":"tttyyzzz"},"content":"        method.setAccessible(true);","lastModifiedDate":"2021-11-07"},{"lineNumber":59,"author":{"gitId":"tttyyzzz"},"content":"        method.invoke(weightCreator, \"0\");","lastModifiedDate":"2021-11-07"},{"lineNumber":60,"author":{"gitId":"tttyyzzz"},"content":"        checkMethod.setAccessible(true);","lastModifiedDate":"2021-11-07"},{"lineNumber":61,"author":{"gitId":"tttyyzzz"},"content":"        checkMethod.invoke(weightCreator);","lastModifiedDate":"2021-11-07"},{"lineNumber":62,"author":{"gitId":"tttyyzzz"},"content":"        String expected \u003d \"___________________________________________________\"","lastModifiedDate":"2021-11-07"},{"lineNumber":63,"author":{"gitId":"tttyyzzz"},"content":"                + \"_______________________________________________________\" + ls","lastModifiedDate":"2021-11-07"},{"lineNumber":64,"author":{"gitId":"tttyyzzz"},"content":"                + \"Your weight cannot be of this value!\" + ls","lastModifiedDate":"2021-11-07"},{"lineNumber":65,"author":{"gitId":"tttyyzzz"},"content":"                + \"Maybe you can try a number from 1 to 300.\" + ls","lastModifiedDate":"2021-11-07"},{"lineNumber":66,"author":{"gitId":"tttyyzzz"},"content":"                + \"__________________________________________________________________\"","lastModifiedDate":"2021-11-07"},{"lineNumber":67,"author":{"gitId":"tttyyzzz"},"content":"                + \"________________________________________\";","lastModifiedDate":"2021-11-07"},{"lineNumber":68,"author":{"gitId":"tttyyzzz"},"content":"        Assertions.assertEquals(expected, outputStreamCaptor.toString()","lastModifiedDate":"2021-11-07"},{"lineNumber":69,"author":{"gitId":"tttyyzzz"},"content":"                .trim());","lastModifiedDate":"2021-11-07"},{"lineNumber":70,"author":{"gitId":"tttyyzzz"},"content":"        String expected1 \u003d expected + ls","lastModifiedDate":"2021-11-07"},{"lineNumber":71,"author":{"gitId":"tttyyzzz"},"content":"                + \"_____________________________________________________________\"","lastModifiedDate":"2021-11-07"},{"lineNumber":72,"author":{"gitId":"tttyyzzz"},"content":"                + \"_____________________________________________\" + ls","lastModifiedDate":"2021-11-07"},{"lineNumber":73,"author":{"gitId":"tttyyzzz"},"content":"                + \"Your weight is 4.0kg.\";","lastModifiedDate":"2021-11-07"},{"lineNumber":74,"author":{"gitId":"tttyyzzz"},"content":"        method.invoke(weightCreator, \"4\");","lastModifiedDate":"2021-11-07"},{"lineNumber":75,"author":{"gitId":"tttyyzzz"},"content":"        checkMethod.invoke(weightCreator);","lastModifiedDate":"2021-11-07"},{"lineNumber":76,"author":{"gitId":"tttyyzzz"},"content":"        Assertions.assertEquals(expected1, outputStreamCaptor.toString()","lastModifiedDate":"2021-11-07"},{"lineNumber":77,"author":{"gitId":"tttyyzzz"},"content":"                .trim());","lastModifiedDate":"2021-11-07"},{"lineNumber":78,"author":{"gitId":"tttyyzzz"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":79,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":80,"author":{"gitId":"tttyyzzz"},"content":"    @AfterEach","lastModifiedDate":"2021-11-07"},{"lineNumber":81,"author":{"gitId":"tttyyzzz"},"content":"    public void tearDown() {","lastModifiedDate":"2021-11-07"},{"lineNumber":82,"author":{"gitId":"tttyyzzz"},"content":"        System.setOut(standardOut);","lastModifiedDate":"2021-11-07"},{"lineNumber":83,"author":{"gitId":"tttyyzzz"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":84,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":85,"author":{"gitId":"tttyyzzz"},"content":"}","lastModifiedDate":"2021-11-07"}],"authorContributionMap":{"tttyyzzz":85}},{"path":"src/test/java/seedu/duke/storage/data/ItemEncoderTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"weidak"},"content":"package seedu.duke.storage.data;","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":3,"author":{"gitId":"weidak"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-28"},{"lineNumber":4,"author":{"gitId":"weidak"},"content":"import seedu.duke.data.item.exercise.Exercise;","lastModifiedDate":"2021-10-28"},{"lineNumber":5,"author":{"gitId":"weidak"},"content":"import seedu.duke.data.item.exercise.ExerciseList;","lastModifiedDate":"2021-10-28"},{"lineNumber":6,"author":{"gitId":"weidak"},"content":"import seedu.duke.data.item.food.Food;","lastModifiedDate":"2021-10-28"},{"lineNumber":7,"author":{"gitId":"weidak"},"content":"import seedu.duke.data.item.food.FoodList;","lastModifiedDate":"2021-10-28"},{"lineNumber":8,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":9,"author":{"gitId":"weidak"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-28"},{"lineNumber":10,"author":{"gitId":"weidak"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-10-28"},{"lineNumber":11,"author":{"gitId":"weidak"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-10-28"},{"lineNumber":12,"author":{"gitId":"weidak"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-28"},{"lineNumber":13,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":14,"author":{"gitId":"weidak"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-28"},{"lineNumber":15,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":16,"author":{"gitId":"weidak"},"content":"class ItemEncoderTest {","lastModifiedDate":"2021-10-28"},{"lineNumber":17,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":18,"author":{"gitId":"weidak"},"content":"    @Test","lastModifiedDate":"2021-10-28"},{"lineNumber":19,"author":{"gitId":"weidak"},"content":"    void encodeItems_validInputsInUnsortedOrder_expectSortedOrderWhenEncoded() {","lastModifiedDate":"2021-10-28"},{"lineNumber":20,"author":{"gitId":"weidak"},"content":"        FoodList foodList \u003d new FoodList();","lastModifiedDate":"2021-10-28"},{"lineNumber":21,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":22,"author":{"gitId":"weidak"},"content":"        //The food items are not added in order","lastModifiedDate":"2021-10-28"},{"lineNumber":23,"author":{"gitId":"weidak"},"content":"        foodList.addItem(new Food(\"peanut butter waffle\", 403,","lastModifiedDate":"2021-10-28"},{"lineNumber":24,"author":{"gitId":"weidak"},"content":"                LocalDateTime.parse(\"2021-10-16 1020\", DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"))));","lastModifiedDate":"2021-10-28"},{"lineNumber":25,"author":{"gitId":"weidak"},"content":"        foodList.addItem(new Food(\"peanut butter waffle1\", 403,","lastModifiedDate":"2021-10-28"},{"lineNumber":26,"author":{"gitId":"weidak"},"content":"                LocalDateTime.parse(\"2021-11-16 1030\", DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"))));","lastModifiedDate":"2021-10-28"},{"lineNumber":27,"author":{"gitId":"weidak"},"content":"        foodList.addItem(new Food(\"peanut butter waffle2\", 403,","lastModifiedDate":"2021-10-28"},{"lineNumber":28,"author":{"gitId":"weidak"},"content":"                LocalDateTime.parse(\"2021-12-16 1040\", DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"))));","lastModifiedDate":"2021-10-28"},{"lineNumber":29,"author":{"gitId":"weidak"},"content":"        foodList.addItem(new Food(\"peanut butter waffle3\", 403,","lastModifiedDate":"2021-10-28"},{"lineNumber":30,"author":{"gitId":"weidak"},"content":"                LocalDateTime.parse(\"2021-09-16 1050\", DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"))));","lastModifiedDate":"2021-10-28"},{"lineNumber":31,"author":{"gitId":"weidak"},"content":"        ArrayList\u003cString\u003e testingList \u003d ItemEncoder.encode(foodList);","lastModifiedDate":"2021-10-28"},{"lineNumber":32,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":33,"author":{"gitId":"weidak"},"content":"        //But the expected list should be in order when encoded","lastModifiedDate":"2021-10-28"},{"lineNumber":34,"author":{"gitId":"weidak"},"content":"        ArrayList\u003cString\u003e expectedList \u003d new ArrayList\u003c\u003e() {","lastModifiedDate":"2021-10-28"},{"lineNumber":35,"author":{"gitId":"weidak"},"content":"            {","lastModifiedDate":"2021-10-28"},{"lineNumber":36,"author":{"gitId":"weidak"},"content":"                add(\"F|peanut butter waffle3|403|16-09-2021 1050\");","lastModifiedDate":"2021-10-28"},{"lineNumber":37,"author":{"gitId":"weidak"},"content":"                add(\"F|peanut butter waffle|403|16-10-2021 1020\");","lastModifiedDate":"2021-10-28"},{"lineNumber":38,"author":{"gitId":"weidak"},"content":"                add(\"F|peanut butter waffle1|403|16-11-2021 1030\");","lastModifiedDate":"2021-10-28"},{"lineNumber":39,"author":{"gitId":"weidak"},"content":"                add(\"F|peanut butter waffle2|403|16-12-2021 1040\");","lastModifiedDate":"2021-10-28"},{"lineNumber":40,"author":{"gitId":"weidak"},"content":"            }","lastModifiedDate":"2021-10-28"},{"lineNumber":41,"author":{"gitId":"weidak"},"content":"        };","lastModifiedDate":"2021-10-28"},{"lineNumber":42,"author":{"gitId":"weidak"},"content":"        assertEquals(expectedList, testingList);","lastModifiedDate":"2021-10-28"},{"lineNumber":43,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":44,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":45,"author":{"gitId":"weidak"},"content":"    @Test","lastModifiedDate":"2021-10-28"},{"lineNumber":46,"author":{"gitId":"weidak"},"content":"    void encodeExerciseItems_validInputsInUnsortedOrder_expectSortedOrderWhenEncoded() {","lastModifiedDate":"2021-10-28"},{"lineNumber":47,"author":{"gitId":"weidak"},"content":"        ExerciseList exerciseList \u003d new ExerciseList();","lastModifiedDate":"2021-10-28"},{"lineNumber":48,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":49,"author":{"gitId":"weidak"},"content":"        //The exercise items are not added in order","lastModifiedDate":"2021-10-28"},{"lineNumber":50,"author":{"gitId":"weidak"},"content":"        exerciseList.addItem(new Exercise(\"Running 21k\", 1200,","lastModifiedDate":"2021-10-28"},{"lineNumber":51,"author":{"gitId":"weidak"},"content":"                LocalDate.parse(\"19-12-2021\", DateTimeFormatter.ofPattern(\"dd-MM-yyyy\"))));","lastModifiedDate":"2021-10-28"},{"lineNumber":52,"author":{"gitId":"weidak"},"content":"        exerciseList.addItem(new Exercise(\"Running 10k\", 780,","lastModifiedDate":"2021-10-28"},{"lineNumber":53,"author":{"gitId":"weidak"},"content":"                LocalDate.parse(\"19-11-2021\", DateTimeFormatter.ofPattern(\"dd-MM-yyyy\"))));","lastModifiedDate":"2021-10-28"},{"lineNumber":54,"author":{"gitId":"weidak"},"content":"        exerciseList.addItem(new Exercise(\"Running 2.4k\", 250,","lastModifiedDate":"2021-10-28"},{"lineNumber":55,"author":{"gitId":"weidak"},"content":"                LocalDate.parse(\"19-09-2021\", DateTimeFormatter.ofPattern(\"dd-MM-yyyy\"))));","lastModifiedDate":"2021-10-28"},{"lineNumber":56,"author":{"gitId":"weidak"},"content":"        exerciseList.addItem(new Exercise(\"Running 5k\", 530,","lastModifiedDate":"2021-10-28"},{"lineNumber":57,"author":{"gitId":"weidak"},"content":"                LocalDate.parse(\"19-10-2021\", DateTimeFormatter.ofPattern(\"dd-MM-yyyy\"))));","lastModifiedDate":"2021-10-28"},{"lineNumber":58,"author":{"gitId":"weidak"},"content":"        ArrayList\u003cString\u003e testingList \u003d ItemEncoder.encode(exerciseList);","lastModifiedDate":"2021-10-28"},{"lineNumber":59,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":60,"author":{"gitId":"weidak"},"content":"        //But the expected list should be in order when encoded","lastModifiedDate":"2021-10-28"},{"lineNumber":61,"author":{"gitId":"weidak"},"content":"        ArrayList\u003cString\u003e expectedList \u003d new ArrayList\u003c\u003e() {","lastModifiedDate":"2021-10-28"},{"lineNumber":62,"author":{"gitId":"weidak"},"content":"            {","lastModifiedDate":"2021-10-28"},{"lineNumber":63,"author":{"gitId":"weidak"},"content":"                add(\"E|Running 2.4k|250|19-09-2021\");","lastModifiedDate":"2021-10-28"},{"lineNumber":64,"author":{"gitId":"weidak"},"content":"                add(\"E|Running 5k|530|19-10-2021\");","lastModifiedDate":"2021-10-28"},{"lineNumber":65,"author":{"gitId":"weidak"},"content":"                add(\"E|Running 10k|780|19-11-2021\");","lastModifiedDate":"2021-10-28"},{"lineNumber":66,"author":{"gitId":"weidak"},"content":"                add(\"E|Running 21k|1200|19-12-2021\");","lastModifiedDate":"2021-10-28"},{"lineNumber":67,"author":{"gitId":"weidak"},"content":"            }","lastModifiedDate":"2021-10-28"},{"lineNumber":68,"author":{"gitId":"weidak"},"content":"        };","lastModifiedDate":"2021-10-28"},{"lineNumber":69,"author":{"gitId":"weidak"},"content":"        assertEquals(expectedList, testingList);","lastModifiedDate":"2021-10-28"},{"lineNumber":70,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":71,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":72,"author":{"gitId":"weidak"},"content":"}","lastModifiedDate":"2021-10-28"}],"authorContributionMap":{"weidak":72}},{"path":"src/test/java/seedu/duke/ui/UiTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tttyyzzz"},"content":"package seedu.duke.ui;","lastModifiedDate":"2021-11-07"},{"lineNumber":2,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":3,"author":{"gitId":"tttyyzzz"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2021-11-07"},{"lineNumber":4,"author":{"gitId":"tttyyzzz"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-11-07"},{"lineNumber":5,"author":{"gitId":"tttyyzzz"},"content":"import seedu.duke.logic.parser.exceptions.MissingParamException;","lastModifiedDate":"2021-11-07"},{"lineNumber":6,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":7,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":8,"author":{"gitId":"tttyyzzz"},"content":"class UiTest {","lastModifiedDate":"2021-11-07"},{"lineNumber":9,"author":{"gitId":"tttyyzzz"},"content":"    @Test","lastModifiedDate":"2021-11-07"},{"lineNumber":10,"author":{"gitId":"tttyyzzz"},"content":"    void checkEmptyUserInput_emptyStringInput_throwsException() {","lastModifiedDate":"2021-11-07"},{"lineNumber":11,"author":{"gitId":"tttyyzzz"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2021-11-07"},{"lineNumber":12,"author":{"gitId":"tttyyzzz"},"content":"        Assertions.assertThrows(MissingParamException.class, () -\u003e ui.checkEmptyUserInput(\"\"));","lastModifiedDate":"2021-11-07"},{"lineNumber":13,"author":{"gitId":"tttyyzzz"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":14,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":15,"author":{"gitId":"tttyyzzz"},"content":"    @Test","lastModifiedDate":"2021-11-07"},{"lineNumber":16,"author":{"gitId":"tttyyzzz"},"content":"    void checkEmptyUserInput_oneStringInput_doesNotThrowException() {","lastModifiedDate":"2021-11-07"},{"lineNumber":17,"author":{"gitId":"tttyyzzz"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2021-11-07"},{"lineNumber":18,"author":{"gitId":"tttyyzzz"},"content":"        Assertions.assertDoesNotThrow(() -\u003e ui.checkEmptyUserInput(\"1\"));","lastModifiedDate":"2021-11-07"},{"lineNumber":19,"author":{"gitId":"tttyyzzz"},"content":"        Assertions.assertDoesNotThrow(() -\u003e ui.checkEmptyUserInput(\"this\"));","lastModifiedDate":"2021-11-07"},{"lineNumber":20,"author":{"gitId":"tttyyzzz"},"content":"        Assertions.assertDoesNotThrow(() -\u003e ui.checkEmptyUserInput(\" \"));","lastModifiedDate":"2021-11-07"},{"lineNumber":21,"author":{"gitId":"tttyyzzz"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":22,"author":{"gitId":"tttyyzzz"},"content":"}","lastModifiedDate":"2021-11-07"}],"authorContributionMap":{"tttyyzzz":22}}]
