[{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# About us","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"Display | Name | Github Profile | Portfolio ","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"--------|:----:|:--------------:|:---------:","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"weidak"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Tay Weida | [Github](https://github.com/weidak) | [Portfolio](docs/team/tayweida.md)","lastModifiedDate":"2021-10-01"},{"lineNumber":6,"author":{"gitId":"xingjie99"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Xing Jie | [Github](https://github.com/xingjie99) | [Portfolio](docs/team/xingjie.md)","lastModifiedDate":"2021-10-01"},{"lineNumber":7,"author":{"gitId":"tryyang2001"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Rui Yang | [Github](https://github.com/tryyang2001) | [Portfolio](docs/team/ruiyang.md)","lastModifiedDate":"2021-10-01"},{"lineNumber":8,"author":{"gitId":"tttyyzzz"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Toh Yi Zhi | [Github](https://github.com/tttyyzzz/tp) | [Portfolio](docs/team/noidea.md)","lastModifiedDate":"2021-10-01"},{"lineNumber":9,"author":{"gitId":"tlyi"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Tan Le Yi | [Github](https://github.com/tlyi) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2021-10-01"}],"authorContributionMap":{"weidak":1,"tttyyzzz":1,"xingjie99":1,"tryyang2001":1,"-":4,"tlyi":1}},{"path":"docs/team/tayweida.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"weidak"},"content":"# Weida - Project Portfolio Page","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Overview","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"### Summary of Contributions","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"weidak":1,"-":5}},{"path":"src/main/java/seedu/duke/Main.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"tlyi"},"content":"import seedu.duke.commands.ByeCommand;","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"tlyi"},"content":"import seedu.duke.commands.Command;","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"tlyi"},"content":"import seedu.duke.commands.CommandResult;","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"tlyi"},"content":"import seedu.duke.exercise.ExerciseList;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"tlyi"},"content":"import seedu.duke.food.FoodList;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"tlyi"},"content":"import seedu.duke.parser.Parser;","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"tlyi"},"content":"import seedu.duke.profile.Profile;","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"weidak"},"content":"import seedu.duke.storage.Storage;","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"weidak"},"content":"import seedu.duke.storage.exceptions.UnableToReadFileException;","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"tttyyzzz"},"content":"import seedu.duke.ui.Statistics;","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"tlyi"},"content":"import seedu.duke.storage.exceptions.UnableToWriteFileException;","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"tlyi"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"tlyi"},"content":"/**","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"tlyi"},"content":" * Main class of Fitbot.","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"tlyi"},"content":" * Initialises the application and starts interaction with user.","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"tlyi"},"content":" */","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"tlyi"},"content":"public class Main {","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"tlyi"},"content":"    private ExerciseList exerciseItems;","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"tlyi"},"content":"    private FoodList foodItems;","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"tlyi"},"content":"    private Profile profile;","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"tlyi"},"content":"    private Ui ui;","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"weidak"},"content":"    private Storage storage;","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"tttyyzzz"},"content":"    private Statistics statistics;","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":31,"author":{"gitId":"tlyi"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"tlyi"},"content":"     * Entry point of the application.","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"tlyi"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":34,"author":{"gitId":"tlyi"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-10-10"},{"lineNumber":35,"author":{"gitId":"tlyi"},"content":"        new Main().run(args);","lastModifiedDate":"2021-10-10"},{"lineNumber":36,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":37,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":38,"author":{"gitId":"tlyi"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":39,"author":{"gitId":"tlyi"},"content":"     * Runs the application until command is given to exit it.","lastModifiedDate":"2021-10-10"},{"lineNumber":40,"author":{"gitId":"tlyi"},"content":"     **/","lastModifiedDate":"2021-10-10"},{"lineNumber":41,"author":{"gitId":"tlyi"},"content":"    private void run(String[] args) {","lastModifiedDate":"2021-10-10"},{"lineNumber":42,"author":{"gitId":"tlyi"},"content":"        start();","lastModifiedDate":"2021-10-10"},{"lineNumber":43,"author":{"gitId":"tlyi"},"content":"        enterTaskModeUntilByeCommand();","lastModifiedDate":"2021-10-10"},{"lineNumber":44,"author":{"gitId":"tlyi"},"content":"        exit();","lastModifiedDate":"2021-10-10"},{"lineNumber":45,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":46,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":47,"author":{"gitId":"tlyi"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":48,"author":{"gitId":"tlyi"},"content":"     * Initialises the application by creating the required objects and loading data from the","lastModifiedDate":"2021-10-13"},{"lineNumber":49,"author":{"gitId":"tlyi"},"content":"     * storage file, then showing the welcome message.","lastModifiedDate":"2021-10-10"},{"lineNumber":50,"author":{"gitId":"tlyi"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":51,"author":{"gitId":"tlyi"},"content":"    private void start() {","lastModifiedDate":"2021-10-10"},{"lineNumber":52,"author":{"gitId":"weidak"},"content":"        this.storage \u003d new Storage();","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"tlyi"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2021-10-11"},{"lineNumber":54,"author":{"gitId":"weidak"},"content":"        try {","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"weidak"},"content":"            this.profile \u003d storage.loadProfileFile();","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"weidak"},"content":"            this.foodItems \u003d storage.loadFoodListFile();","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"weidak"},"content":"            this.exerciseItems \u003d storage.loadExerciseListFile();","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"weidak"},"content":"        } catch (UnableToReadFileException e) {","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"tlyi"},"content":"            ui.formatMessageFramedWithDivider(e.getMessage());","lastModifiedDate":"2021-10-13"},{"lineNumber":60,"author":{"gitId":"weidak"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":62,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":63,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":64,"author":{"gitId":"tlyi"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":65,"author":{"gitId":"tlyi"},"content":"     * Reads the user input and executes appropriate command.","lastModifiedDate":"2021-10-10"},{"lineNumber":66,"author":{"gitId":"tlyi"},"content":"     * Runs indefinitely until user inputs the Bye command.","lastModifiedDate":"2021-10-10"},{"lineNumber":67,"author":{"gitId":"tlyi"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":68,"author":{"gitId":"tlyi"},"content":"    private void enterTaskModeUntilByeCommand() {","lastModifiedDate":"2021-10-10"},{"lineNumber":69,"author":{"gitId":"tlyi"},"content":"        Command command;","lastModifiedDate":"2021-10-10"},{"lineNumber":70,"author":{"gitId":"tlyi"},"content":"        do {","lastModifiedDate":"2021-10-10"},{"lineNumber":71,"author":{"gitId":"tlyi"},"content":"            String userInput \u003d ui.getUserInput();","lastModifiedDate":"2021-10-11"},{"lineNumber":72,"author":{"gitId":"tlyi"},"content":"            command \u003d new Parser().parseCommand(userInput);","lastModifiedDate":"2021-10-11"},{"lineNumber":73,"author":{"gitId":"tlyi"},"content":"            CommandResult result \u003d executeCommand(command);","lastModifiedDate":"2021-10-10"},{"lineNumber":74,"author":{"gitId":"tlyi"},"content":"            ui.formatMessageFramedWithDivider(result.toString());","lastModifiedDate":"2021-10-11"},{"lineNumber":75,"author":{"gitId":"tlyi"},"content":"        } while (!ByeCommand.isBye(command));","lastModifiedDate":"2021-10-10"},{"lineNumber":76,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":77,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":78,"author":{"gitId":"tlyi"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":79,"author":{"gitId":"tlyi"},"content":"     * Executes the given Command and (to be implemented) calls for storage operation if required.","lastModifiedDate":"2021-10-10"},{"lineNumber":80,"author":{"gitId":"tlyi"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":81,"author":{"gitId":"tlyi"},"content":"     * @param command Command to be executed","lastModifiedDate":"2021-10-10"},{"lineNumber":82,"author":{"gitId":"tlyi"},"content":"     * @return CommandResult representing result of execution of the command","lastModifiedDate":"2021-10-10"},{"lineNumber":83,"author":{"gitId":"tlyi"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":84,"author":{"gitId":"tlyi"},"content":"    private CommandResult executeCommand(Command command) {","lastModifiedDate":"2021-10-10"},{"lineNumber":85,"author":{"gitId":"tttyyzzz"},"content":"        command.setData(this.profile, this.exerciseItems, this.foodItems, this.statistics);","lastModifiedDate":"2021-10-13"},{"lineNumber":86,"author":{"gitId":"tlyi"},"content":"        CommandResult result \u003d command.execute();","lastModifiedDate":"2021-10-10"},{"lineNumber":87,"author":{"gitId":"tlyi"},"content":"        try {","lastModifiedDate":"2021-10-12"},{"lineNumber":88,"author":{"gitId":"tlyi"},"content":"            if (ByeCommand.isBye(command)) {","lastModifiedDate":"2021-10-12"},{"lineNumber":89,"author":{"gitId":"tlyi"},"content":"                storage.saveAll(this.profile, this.exerciseItems, this.foodItems);","lastModifiedDate":"2021-10-13"},{"lineNumber":90,"author":{"gitId":"tlyi"},"content":"            }","lastModifiedDate":"2021-10-12"},{"lineNumber":91,"author":{"gitId":"tlyi"},"content":"            if (Command.requiresProfileStorageRewrite(command)) {","lastModifiedDate":"2021-10-12"},{"lineNumber":92,"author":{"gitId":"tlyi"},"content":"                storage.saveProfile(this.profile);","lastModifiedDate":"2021-10-13"},{"lineNumber":93,"author":{"gitId":"tlyi"},"content":"            }","lastModifiedDate":"2021-10-12"},{"lineNumber":94,"author":{"gitId":"tlyi"},"content":"            if (Command.requiresExerciseListStorageRewrite(command)) {","lastModifiedDate":"2021-10-12"},{"lineNumber":95,"author":{"gitId":"tlyi"},"content":"                storage.saveExercises(this.exerciseItems);","lastModifiedDate":"2021-10-13"},{"lineNumber":96,"author":{"gitId":"tlyi"},"content":"            }","lastModifiedDate":"2021-10-12"},{"lineNumber":97,"author":{"gitId":"tlyi"},"content":"            if (Command.requiresFoodListStorageRewrite(command)) {","lastModifiedDate":"2021-10-12"},{"lineNumber":98,"author":{"gitId":"tlyi"},"content":"                storage.saveFoodList(this.foodItems);","lastModifiedDate":"2021-10-13"},{"lineNumber":99,"author":{"gitId":"tlyi"},"content":"            }","lastModifiedDate":"2021-10-12"},{"lineNumber":100,"author":{"gitId":"tlyi"},"content":"        } catch (UnableToWriteFileException e) {","lastModifiedDate":"2021-10-13"},{"lineNumber":101,"author":{"gitId":"tlyi"},"content":"            ui.formatMessageFramedWithDivider(e.getMessage());","lastModifiedDate":"2021-10-13"},{"lineNumber":102,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":103,"author":{"gitId":"tlyi"},"content":"        return result;","lastModifiedDate":"2021-10-10"},{"lineNumber":104,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":105,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":106,"author":{"gitId":"tlyi"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":107,"author":{"gitId":"tlyi"},"content":"     * Exits the application.","lastModifiedDate":"2021-10-10"},{"lineNumber":108,"author":{"gitId":"tlyi"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":109,"author":{"gitId":"tlyi"},"content":"    private void exit() {","lastModifiedDate":"2021-10-10"},{"lineNumber":110,"author":{"gitId":"tlyi"},"content":"        System.exit(0);","lastModifiedDate":"2021-10-10"},{"lineNumber":111,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":112,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":113,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":114,"author":{"gitId":"tlyi"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"weidak":10,"tttyyzzz":3,"tlyi":101}},{"path":"src/main/java/seedu/duke/commands/AddExerciseCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.commands;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"tlyi"},"content":"import seedu.duke.exercise.Exercise;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"weidak"},"content":"import seedu.duke.storage.Storage;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"tlyi"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"xingjie99"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"xingjie99"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"tlyi"},"content":"/**","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"tlyi"},"content":" * Represents the command that when executed, adds an Exercise item to the ExerciseList.","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"tlyi"},"content":" */","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"tlyi"},"content":"public class AddExerciseCommand extends Command {","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_COMMAND_FORMAT \u003d Ui.QUOTATION + COMMAND_WORD_ADD","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"tlyi"},"content":"            + \" \" + COMMAND_PREFIX_EXERCISE + COMMAND_PREFIX_DELIMITER + \"exercise name\"","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"tlyi"},"content":"            + \" \" + COMMAND_PREFIX_CALORIES + COMMAND_PREFIX_DELIMITER + \"calories\" + Ui.QUOTATION;","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid format! \"","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"tlyi"},"content":"            + \"Trying to add an exercise item? Use this format:\"","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"tlyi"},"content":"            + Ui.LS + MESSAGE_COMMAND_FORMAT;","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"An exercise item has been added:\"","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"tlyi"},"content":"            + Ui.INDENTED_LS + \"%s\";","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"xingjie99"},"content":"    public static final String MESSAGE_INVALID_EXERCISE_CALORIES \u003d \"Exercise calories cannot be less than or equal to 0\"","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"xingjie99"},"content":"            + Ui.LS + \"Try a positive value instead\";","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"xingjie99"},"content":"    private static Logger logger \u003d Logger.getLogger(\"AddExerciseCommand\");","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"tlyi"},"content":"    private Exercise exercise;","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"tlyi"},"content":"    private final String description;","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"tlyi"},"content":"    private final int calories;","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"tlyi"},"content":"    public AddExerciseCommand(String description, int calories) {","lastModifiedDate":"2021-10-10"},{"lineNumber":31,"author":{"gitId":"tlyi"},"content":"        this.exercise \u003d new Exercise(description, calories);","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"tlyi"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"tlyi"},"content":"        this.calories \u003d calories;","lastModifiedDate":"2021-10-10"},{"lineNumber":34,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":35,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":36,"author":{"gitId":"tlyi"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":37,"author":{"gitId":"tlyi"},"content":"    public CommandResult execute() {","lastModifiedDate":"2021-10-10"},{"lineNumber":38,"author":{"gitId":"xingjie99"},"content":"        if (exercise.getCalories() \u003c\u003d 0) {","lastModifiedDate":"2021-10-11"},{"lineNumber":39,"author":{"gitId":"xingjie99"},"content":"            logger.log(Level.WARNING,\"Exercise calorie is invalid\");","lastModifiedDate":"2021-10-13"},{"lineNumber":40,"author":{"gitId":"xingjie99"},"content":"            return new CommandResult(MESSAGE_INVALID_EXERCISE_CALORIES);","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"weidak"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"xingjie99"},"content":"        assert exercise.getCalories() \u003e 0 : \"Exercise calorie is valid\";","lastModifiedDate":"2021-10-13"},{"lineNumber":43,"author":{"gitId":"tlyi"},"content":"        super.exerciseItems.addExercise(this.exercise);","lastModifiedDate":"2021-10-11"},{"lineNumber":44,"author":{"gitId":"xingjie99"},"content":"        logger.log(Level.INFO, \"Exercise is successfully added\");","lastModifiedDate":"2021-10-13"},{"lineNumber":45,"author":{"gitId":"tlyi"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, this.exercise));","lastModifiedDate":"2021-10-11"},{"lineNumber":46,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":47,"author":{"gitId":"tlyi"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"weidak":2,"xingjie99":11,"tlyi":34}},{"path":"src/main/java/seedu/duke/commands/AddFoodCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.commands;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"tlyi"},"content":"import seedu.duke.food.Food;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"tlyi"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"tlyi"},"content":"/**","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"tlyi"},"content":" * Represents the command that when executed, adds a Food item to the FoodList.","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"tlyi"},"content":" */","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"tlyi"},"content":"public class AddFoodCommand extends Command {","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_COMMAND_FORMAT \u003d Ui.QUOTATION + COMMAND_WORD_ADD","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"tlyi"},"content":"            + \" \" + COMMAND_PREFIX_FOOD + COMMAND_PREFIX_DELIMITER + \"food name\"","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"tlyi"},"content":"            + \" \" + COMMAND_PREFIX_CALORIES + COMMAND_PREFIX_DELIMITER + \"calories\" + Ui.QUOTATION;","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid format! \"","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"tlyi"},"content":"            + \"Trying to add a food item? Use this format:\"","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"tlyi"},"content":"            + Ui.LS + MESSAGE_COMMAND_FORMAT;","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"A food item has been added:\"","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"tlyi"},"content":"            + Ui.INDENTED_LS + \"%s\";","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"tryyang2001"},"content":"    public static final String MESSAGE_INVALID_FOOD_CALORIES \u003d \"Food calories cannot be less than 0\" + Ui.LS","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"tryyang2001"},"content":"            + \"Try a positive value instead\";","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"tlyi"},"content":"    private Food food;","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"tlyi"},"content":"    public AddFoodCommand(String description, int calories) {","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"tlyi"},"content":"        this.food \u003d new Food(description, calories);","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"tlyi"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"tlyi"},"content":"    public CommandResult execute() {","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"tryyang2001"},"content":"        if (this.food.getCalories() \u003c 0) {","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"tryyang2001"},"content":"            return new CommandResult(MESSAGE_INVALID_FOOD_CALORIES);","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"tryyang2001"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"tlyi"},"content":"        super.foodItems.addFood(this.food);","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"tryyang2001"},"content":"        assert foodItems.getSize() \u003e 0 : \"The size of the food list should at least larger than 0\";","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"tlyi"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, this.food));","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":36,"author":{"gitId":"tlyi"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"tryyang2001":6,"tlyi":30}},{"path":"src/main/java/seedu/duke/commands/ByeCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.commands;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"tlyi"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"tlyi"},"content":"/**","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"tlyi"},"content":" * Represents the command that when executed, signals to the application to exit.","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"tlyi"},"content":" */","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"tlyi"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"tlyi"},"content":"    public static final String COMMAND_WORD \u003d \"bye\";","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_COMMAND_FORMAT \u003d Ui.QUOTATION + COMMAND_WORD + Ui.QUOTATION;","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"tlyi"},"content":"    private static final String MESSAGE_SUCCESS \u003d \"Exiting Fitbot....\" + Ui.LS","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"tlyi"},"content":"            + \"Bye! Hope to see you again soon!!\";","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"tlyi"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"tlyi"},"content":"    public CommandResult execute() {","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"tlyi"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"tlyi"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"tlyi"},"content":"     * Determines if command is the Bye command so that the main program knows when to exit.","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"tlyi"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"tlyi"},"content":"    public static boolean isBye(Command command) {","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"tlyi"},"content":"        return command instanceof ByeCommand;","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"tlyi"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"tlyi":25}},{"path":"src/main/java/seedu/duke/commands/CalculateBmiCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.commands;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"tlyi"},"content":"import seedu.duke.profile.exceptions.InvalidCharacteristicException;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"tlyi"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"tlyi"},"content":"/**","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"tlyi"},"content":" * Represents the command that when executed, calculates the BMI with the given height and weight data.","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"tlyi"},"content":" */","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"tlyi"},"content":"public class CalculateBmiCommand extends Command {","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_COMMAND_FORMAT \u003d Ui.QUOTATION + COMMAND_WORD_BMI","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"tlyi"},"content":"            + \" \" + COMMAND_PREFIX_HEIGHT + COMMAND_PREFIX_DELIMITER + \"Y \"","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"tlyi"},"content":"            + COMMAND_PREFIX_WEIGHT + COMMAND_PREFIX_DELIMITER + \"Z\"","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"tlyi"},"content":"            + Ui.QUOTATION + \" where X is the height in CM and Y is the weight in KG\";","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid format! \"","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"tlyi"},"content":"            + \"Trying to calculate BMI for a certain height and weight? Use this format:\"","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"tlyi"},"content":"            + Ui.INDENTED_LS + MESSAGE_COMMAND_FORMAT;","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"The calculated BMI value is %1$,.1f (%2$s)\";","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"tlyi"},"content":"    private final double height;","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"tlyi"},"content":"    private final double weight;","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"tlyi"},"content":"    public CalculateBmiCommand(double height, double weight) {","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"tlyi"},"content":"        this.height \u003d height;","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"tlyi"},"content":"        this.weight \u003d weight;","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"tlyi"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"tlyi"},"content":"    public CommandResult execute() {","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"tlyi"},"content":"        try {","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"tlyi"},"content":"            final double bmi \u003d super.profile.calculateBmi(this.height, this.weight);","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"tlyi"},"content":"            return new CommandResult(String.format(MESSAGE_SUCCESS, bmi, super.profile.retrieveBmiStatus(bmi)));","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"tlyi"},"content":"        } catch (InvalidCharacteristicException e) {","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"tlyi"},"content":"            return new CommandResult(e.getMessage());","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":37,"author":{"gitId":"tlyi"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"tlyi":37}},{"path":"src/main/java/seedu/duke/commands/CalculateBmiWithProfileCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.commands;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"tlyi"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"tlyi"},"content":"/**","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"tlyi"},"content":" * Represents the command that when executed, calculates the BMI of the current Profile.","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"tlyi"},"content":" */","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"tlyi"},"content":"public class CalculateBmiWithProfileCommand extends Command {","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_COMMAND_FORMAT \u003d Ui.QUOTATION + COMMAND_WORD_BMI + Ui.QUOTATION;","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Your BMI value according to your current profile is:\"","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"tlyi"},"content":"            + Ui.INDENTED_LS + \"%1$,.1f (%2$s)\";","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"tlyi"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"tlyi"},"content":"    public CommandResult execute() {","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"tlyi"},"content":"        final double bmi \u003d super.profile.calculateBmi();","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"tlyi"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, bmi, super.profile.retrieveBmiStatus(bmi)));","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"tlyi"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"tlyi":19}},{"path":"src/main/java/seedu/duke/commands/ChangeHeightCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.commands;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"tlyi"},"content":"import seedu.duke.profile.exceptions.InvalidCharacteristicException;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"tlyi"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"tlyi"},"content":"/**","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"tlyi"},"content":" * Represents the command that when executed, changes the value of height in the Profile.","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"tlyi"},"content":" */","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"tlyi"},"content":"public class ChangeHeightCommand extends Command {","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"tlyi"},"content":"    public static final String COMMAND_WORD \u003d \"height\";","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_COMMAND_FORMAT \u003d Ui.QUOTATION + COMMAND_WORD","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"tlyi"},"content":"            + \" X\" + Ui.QUOTATION + \", where X is your height in CM\";","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid format! \"","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"tlyi"},"content":"            + \"Trying to update your height? Use this format:\"","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"tlyi"},"content":"            + Ui.LS + MESSAGE_COMMAND_FORMAT;","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Your height has been updated!\" + Ui.LS + \"Your height is %scm.\";","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"tlyi"},"content":"    private final double height;","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"tlyi"},"content":"    public ChangeHeightCommand(double height) {","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"tlyi"},"content":"        this.height \u003d height;","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"tlyi"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"tlyi"},"content":"    public CommandResult execute() {","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"tlyi"},"content":"        try {","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"tlyi"},"content":"            super.profile.setHeight(this.height);","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"tlyi"},"content":"            return new CommandResult(String.format(MESSAGE_SUCCESS, super.profile.getHeight()));","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"tlyi"},"content":"        } catch (InvalidCharacteristicException e) {","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"tlyi"},"content":"            return new CommandResult(e.getMessage());","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"tlyi"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"tlyi":33}},{"path":"src/main/java/seedu/duke/commands/ChangeNameCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.commands;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"tlyi"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"tlyi"},"content":"/**","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"tlyi"},"content":" * Represents the command that when executed, changes the value of name in the Profile.","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"tlyi"},"content":" */","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"tlyi"},"content":"public class ChangeNameCommand extends Command {","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"tlyi"},"content":"    public static final String COMMAND_WORD \u003d \"name\";","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_COMMAND_FORMAT \u003d Ui.QUOTATION + COMMAND_WORD","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"tlyi"},"content":"            + \" X\" + Ui.QUOTATION + \", where X is your name\";","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid format! \"","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"tlyi"},"content":"            + \"Trying to update your name? Use this format:\"","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"tlyi"},"content":"            + Ui.INDENTED_LS + MESSAGE_COMMAND_FORMAT;","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Your name has been updated!\" + Ui.LS + \"Hello %s!\";","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"tlyi"},"content":"    private final String name;","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"tlyi"},"content":"    public ChangeNameCommand(String name) {","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"tlyi"},"content":"        assert name !\u003d null : \"parser should have ensured name is not null\";","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"tlyi"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"tlyi"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"tlyi"},"content":"    public CommandResult execute() {","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"tlyi"},"content":"        if (this.name.isEmpty()) {","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"tlyi"},"content":"            return new CommandResult(MESSAGE_INVALID_COMMAND_FORMAT);","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"tlyi"},"content":"        super.profile.setName(this.name);","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"tlyi"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, super.profile.getName()));","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"tlyi"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"tlyi":32}},{"path":"src/main/java/seedu/duke/commands/ChangeWeightCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.commands;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"tlyi"},"content":"import seedu.duke.profile.exceptions.InvalidCharacteristicException;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"tlyi"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"tlyi"},"content":"/**","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"tlyi"},"content":" * Represents the command that when executed, changes the value of weight in the Profile.","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"tlyi"},"content":" */","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"tlyi"},"content":"public class ChangeWeightCommand extends Command {","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"tlyi"},"content":"    public static final String COMMAND_WORD \u003d \"weight\";","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_COMMAND_FORMAT \u003d Ui.QUOTATION + COMMAND_WORD","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"tlyi"},"content":"            + \" X\" + Ui.QUOTATION + \", where X is your weight in KG\";","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid format! \"","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"tlyi"},"content":"            + \"Trying to update your weight? Use this format:\"","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"tlyi"},"content":"            + Ui.INDENTED_LS + MESSAGE_COMMAND_FORMAT;","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Your weight has been updated!\" + Ui.LS + \"Your weight is %skg.\";","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"tlyi"},"content":"    private final double weight;","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"tlyi"},"content":"    public ChangeWeightCommand(double weight) {","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"tlyi"},"content":"        this.weight \u003d weight;","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"tlyi"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"tlyi"},"content":"    public CommandResult execute() {","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"tlyi"},"content":"        try {","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"tlyi"},"content":"            super.profile.setWeight(this.weight);","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"tlyi"},"content":"            return new CommandResult(String.format(MESSAGE_SUCCESS, super.profile.getWeight()));","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"tlyi"},"content":"        } catch (InvalidCharacteristicException e) {","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"tlyi"},"content":"            return new CommandResult(e.getMessage());","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"tlyi"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"tlyi":33}},{"path":"src/main/java/seedu/duke/commands/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.commands;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"tlyi"},"content":"import seedu.duke.exercise.ExerciseList;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"tlyi"},"content":"import seedu.duke.food.FoodList;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"tlyi"},"content":"import seedu.duke.profile.Profile;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"tttyyzzz"},"content":"import seedu.duke.ui.Statistics;","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"tlyi"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"tlyi"},"content":"/**","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"tlyi"},"content":" * Abstract class used to represent executable Commands.","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"tlyi"},"content":" * All Commands can be executed to return a CommandResult.","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"tlyi"},"content":" */","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"tlyi"},"content":"public abstract class Command {","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"tlyi"},"content":"    public static final String COMMAND_PREFIX_DELIMITER \u003d \"/\";","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"tlyi"},"content":"    public static final String COMMAND_PREFIX_EXERCISE \u003d \"e\";","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"tlyi"},"content":"    public static final String COMMAND_PREFIX_FOOD \u003d \"f\";","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"tlyi"},"content":"    public static final String COMMAND_PREFIX_CALORIES \u003d \"c\";","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"tlyi"},"content":"    public static final String COMMAND_PREFIX_NAME \u003d \"n\";","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"tlyi"},"content":"    public static final String COMMAND_PREFIX_HEIGHT \u003d \"h\";","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"tlyi"},"content":"    public static final String COMMAND_PREFIX_WEIGHT \u003d \"w\";","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"tlyi"},"content":"    public static final String COMMAND_WORD_ADD \u003d \"add\";","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"tlyi"},"content":"    public static final String COMMAND_WORD_DELETE \u003d \"delete\";","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"tlyi"},"content":"    public static final String COMMAND_WORD_VIEW \u003d \"view\";","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"tlyi"},"content":"    public static final String COMMAND_WORD_BMI \u003d \"bmi\";","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"tlyi"},"content":"    public static final String COMMAND_WORD_PROFILE \u003d \"profile\";","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"tlyi"},"content":"    public static final int COMMAND_ADD_EXPECTED_NUM_DELIMITERS \u003d 2;","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"tlyi"},"content":"    public static final int COMMAND_BMI_EXPECTED_NUM_DELIMITERS \u003d 2;","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"tryyang2001"},"content":"    public static final String COMMAND_WORD_DELETE_ALL \u003d \"all\";","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_ERROR_ITEM_NOT_SPECIFIED \u003d \"Invalid format for this command! \"","lastModifiedDate":"2021-10-10"},{"lineNumber":31,"author":{"gitId":"tlyi"},"content":"            + \"Please follow one of the formats:\" + Ui.LS","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"tlyi"},"content":"            + \"1. %1$s\" + Ui.LS","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"tlyi"},"content":"            + \"2. %2$s\";","lastModifiedDate":"2021-10-10"},{"lineNumber":34,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_EMPTY_EXERCISE_LIST \u003d \"No exercise items yet!\";","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_EMPTY_FOOD_LIST \u003d \"No food items yet!\";","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_ONLY_ONE_IN_LIST \u003d \"You have only 1 item in the list!\";","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_LIST_OUT_OF_BOUNDS \u003d \"Please input a valid item number from 1 to %s\";","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":39,"author":{"gitId":"tlyi"},"content":"    protected Profile profile;","lastModifiedDate":"2021-10-10"},{"lineNumber":40,"author":{"gitId":"tlyi"},"content":"    protected ExerciseList exerciseItems;","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"tlyi"},"content":"    protected FoodList foodItems;","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"tttyyzzz"},"content":"    protected Statistics statistics;","lastModifiedDate":"2021-10-13"},{"lineNumber":43,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":44,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":45,"author":{"gitId":"tlyi"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":46,"author":{"gitId":"tlyi"},"content":"     * Returns the appropriate CommandResult after execution of the command.","lastModifiedDate":"2021-10-10"},{"lineNumber":47,"author":{"gitId":"tlyi"},"content":"     * Each child class that inherits this class represents an executable command and will have its own implementation","lastModifiedDate":"2021-10-10"},{"lineNumber":48,"author":{"gitId":"tlyi"},"content":"     * of this method specific to its functionality.","lastModifiedDate":"2021-10-10"},{"lineNumber":49,"author":{"gitId":"tlyi"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":50,"author":{"gitId":"tlyi"},"content":"    public abstract CommandResult execute();","lastModifiedDate":"2021-10-10"},{"lineNumber":51,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":52,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":53,"author":{"gitId":"tlyi"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"tlyi"},"content":"     * Provides the necessary data structures for the command to operate on.","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"tlyi"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"tttyyzzz"},"content":"    public void setData(Profile profile, ExerciseList exerciseItems, FoodList foodItems, Statistics statistics) {","lastModifiedDate":"2021-10-13"},{"lineNumber":57,"author":{"gitId":"tlyi"},"content":"        this.profile \u003d profile;","lastModifiedDate":"2021-10-10"},{"lineNumber":58,"author":{"gitId":"tlyi"},"content":"        this.exerciseItems \u003d exerciseItems;","lastModifiedDate":"2021-10-11"},{"lineNumber":59,"author":{"gitId":"tlyi"},"content":"        this.foodItems \u003d foodItems;","lastModifiedDate":"2021-10-11"},{"lineNumber":60,"author":{"gitId":"tttyyzzz"},"content":"        this.statistics \u003d statistics;","lastModifiedDate":"2021-10-13"},{"lineNumber":61,"author":{"gitId":"tlyi"},"content":"        assert profile !\u003d null : \"Profile supplied to command should not be null\";","lastModifiedDate":"2021-10-13"},{"lineNumber":62,"author":{"gitId":"tlyi"},"content":"        assert exerciseItems !\u003d null : \"Exercise items supplied to command should not be null\";","lastModifiedDate":"2021-10-13"},{"lineNumber":63,"author":{"gitId":"tlyi"},"content":"        assert foodItems !\u003d null : \"Food items supplied to command should not be null\";","lastModifiedDate":"2021-10-13"},{"lineNumber":64,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":65,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":66,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":67,"author":{"gitId":"tlyi"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":68,"author":{"gitId":"tlyi"},"content":"     * Returns true if the command requires the profile storage file to be rewritten after execution.","lastModifiedDate":"2021-10-12"},{"lineNumber":69,"author":{"gitId":"tlyi"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":70,"author":{"gitId":"tlyi"},"content":"     * @param command Command that has just been executed","lastModifiedDate":"2021-10-12"},{"lineNumber":71,"author":{"gitId":"tlyi"},"content":"     * @return True if profile storage file is to be rewritten after execution of the command","lastModifiedDate":"2021-10-12"},{"lineNumber":72,"author":{"gitId":"tlyi"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":73,"author":{"gitId":"tlyi"},"content":"    public static boolean requiresProfileStorageRewrite(Command command) {","lastModifiedDate":"2021-10-12"},{"lineNumber":74,"author":{"gitId":"tlyi"},"content":"        return command instanceof ChangeHeightCommand","lastModifiedDate":"2021-10-12"},{"lineNumber":75,"author":{"gitId":"tlyi"},"content":"                || command instanceof ChangeNameCommand","lastModifiedDate":"2021-10-12"},{"lineNumber":76,"author":{"gitId":"tlyi"},"content":"                || command instanceof ChangeWeightCommand","lastModifiedDate":"2021-10-12"},{"lineNumber":77,"author":{"gitId":"tlyi"},"content":"                || command instanceof ProfileCreateCommand","lastModifiedDate":"2021-10-12"},{"lineNumber":78,"author":{"gitId":"tlyi"},"content":"                || command instanceof SetGoalCommand;","lastModifiedDate":"2021-10-12"},{"lineNumber":79,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":80,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":81,"author":{"gitId":"tlyi"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":82,"author":{"gitId":"tlyi"},"content":"     * Returns true if the command requires the exercise list storage file to be rewritten after execution.","lastModifiedDate":"2021-10-12"},{"lineNumber":83,"author":{"gitId":"tlyi"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":84,"author":{"gitId":"tlyi"},"content":"     * @param command Command that has just been executed","lastModifiedDate":"2021-10-12"},{"lineNumber":85,"author":{"gitId":"tlyi"},"content":"     * @return True if exercise list storage file is to be rewritten after execution of the command","lastModifiedDate":"2021-10-12"},{"lineNumber":86,"author":{"gitId":"tlyi"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":87,"author":{"gitId":"tlyi"},"content":"    public static boolean requiresExerciseListStorageRewrite(Command command) {","lastModifiedDate":"2021-10-12"},{"lineNumber":88,"author":{"gitId":"tlyi"},"content":"        return command instanceof AddExerciseCommand","lastModifiedDate":"2021-10-12"},{"lineNumber":89,"author":{"gitId":"tlyi"},"content":"                || command instanceof DeleteExerciseCommand;","lastModifiedDate":"2021-10-12"},{"lineNumber":90,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":91,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":92,"author":{"gitId":"tlyi"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":93,"author":{"gitId":"tlyi"},"content":"     * Returns true if the command requires the food list storage file to be rewritten after execution.","lastModifiedDate":"2021-10-12"},{"lineNumber":94,"author":{"gitId":"tlyi"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":95,"author":{"gitId":"tlyi"},"content":"     * @param command Command that has just been executed","lastModifiedDate":"2021-10-12"},{"lineNumber":96,"author":{"gitId":"tlyi"},"content":"     * @return True if food list storage file is to be rewritten after execution of the command","lastModifiedDate":"2021-10-12"},{"lineNumber":97,"author":{"gitId":"tlyi"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":98,"author":{"gitId":"tlyi"},"content":"    public static boolean requiresFoodListStorageRewrite(Command command) {","lastModifiedDate":"2021-10-12"},{"lineNumber":99,"author":{"gitId":"tlyi"},"content":"        return command instanceof AddFoodCommand","lastModifiedDate":"2021-10-12"},{"lineNumber":100,"author":{"gitId":"tlyi"},"content":"                || command instanceof DeleteFoodCommand;","lastModifiedDate":"2021-10-12"},{"lineNumber":101,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":102,"author":{"gitId":"tlyi"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"tttyyzzz":5,"tryyang2001":1,"tlyi":96}},{"path":"src/main/java/seedu/duke/commands/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.commands;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"tlyi"},"content":"/**","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"tlyi"},"content":" * Represents the result of the execution of the commands to be displayed to the user.","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"tlyi"},"content":" */","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"tlyi"},"content":"public class CommandResult {","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"tlyi"},"content":"    public final String messageToBeShown;","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"tlyi"},"content":"    public CommandResult(String messageToBeShown) {","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"tlyi"},"content":"        this.messageToBeShown \u003d messageToBeShown;","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"tlyi"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"tlyi"},"content":"    public String toString() {","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"tlyi"},"content":"        return this.messageToBeShown;","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"tlyi"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"tlyi":17}},{"path":"src/main/java/seedu/duke/commands/DeleteExerciseCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.commands;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"tlyi"},"content":"import seedu.duke.exercise.Exercise;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"tlyi"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"xingjie99"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"xingjie99"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"tlyi"},"content":"/**","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"tlyi"},"content":" * Represents the command that when executed, deletes an Exercise item from the ExerciseList.","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"tlyi"},"content":" */","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"tlyi"},"content":"public class DeleteExerciseCommand extends Command {","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_COMMAND_FORMAT \u003d Ui.QUOTATION + COMMAND_WORD_DELETE","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"tlyi"},"content":"            + \" \" + COMMAND_PREFIX_EXERCISE + COMMAND_PREFIX_DELIMITER + \"X\" + Ui.QUOTATION","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"tlyi"},"content":"            + \", where X is the item number in the exercise list\";","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid format! \"","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"tlyi"},"content":"            + \"Trying to delete an exercise item? Use this format:\"","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"tlyi"},"content":"            + Ui.INDENTED_LS + MESSAGE_COMMAND_FORMAT;","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"An exercise item has been deleted:\"","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"tlyi"},"content":"            + Ui.INDENTED_LS + \"%s\"","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"tlyi"},"content":"            + Ui.LS + \"Number of exercise item(s) left: %2$d\";","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"xingjie99"},"content":"    private static final String MESSAGE_EXERCISE_CLEAR \u003d \"All exercise items have been removed.\";","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"xingjie99"},"content":"    private static Logger logger \u003d Logger.getLogger(\"DeleteExerciseCommand\");","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"tlyi"},"content":"    private final int itemIndex;","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"tlyi"},"content":"    public DeleteExerciseCommand(int itemIndex) {","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"tlyi"},"content":"        this.itemIndex \u003d itemIndex;","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":31,"author":{"gitId":"tlyi"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"tlyi"},"content":"    public CommandResult execute() {","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"xingjie99"},"content":"        if (this.itemIndex \u003d\u003d 0) {","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"xingjie99"},"content":"            logger.log(Level.INFO,\"Clearing exercise list\");","lastModifiedDate":"2021-10-13"},{"lineNumber":35,"author":{"gitId":"xingjie99"},"content":"            super.exerciseItems.clearExerciseList();","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"xingjie99"},"content":"            return new CommandResult(MESSAGE_EXERCISE_CLEAR);","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"xingjie99"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":39,"author":{"gitId":"xingjie99"},"content":"        assert this.itemIndex \u003e 0 : \"Deleting an item only\";","lastModifiedDate":"2021-10-13"},{"lineNumber":40,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":41,"author":{"gitId":"tlyi"},"content":"        if (super.exerciseItems.getSize() \u003d\u003d 0) {","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"xingjie99"},"content":"            logger.log(Level.WARNING,\"Exercise list is empty\");","lastModifiedDate":"2021-10-13"},{"lineNumber":43,"author":{"gitId":"tlyi"},"content":"            return new CommandResult(MESSAGE_EMPTY_EXERCISE_LIST);","lastModifiedDate":"2021-10-11"},{"lineNumber":44,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":45,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":46,"author":{"gitId":"xingjie99"},"content":"        logger.log(Level.INFO,\"Trying to delete item now\");","lastModifiedDate":"2021-10-13"},{"lineNumber":47,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":48,"author":{"gitId":"tlyi"},"content":"        try {","lastModifiedDate":"2021-10-11"},{"lineNumber":49,"author":{"gitId":"tlyi"},"content":"            Exercise deletedExercise;","lastModifiedDate":"2021-10-11"},{"lineNumber":50,"author":{"gitId":"tlyi"},"content":"            deletedExercise \u003d super.exerciseItems.deleteExercise(this.itemIndex);","lastModifiedDate":"2021-10-11"},{"lineNumber":51,"author":{"gitId":"tlyi"},"content":"            return new CommandResult(String.format(MESSAGE_SUCCESS, deletedExercise, super.exerciseItems.getSize()));","lastModifiedDate":"2021-10-11"},{"lineNumber":52,"author":{"gitId":"tlyi"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-10-11"},{"lineNumber":53,"author":{"gitId":"xingjie99"},"content":"            logger.log(Level.WARNING,\"Index is out of bound\");","lastModifiedDate":"2021-10-13"},{"lineNumber":54,"author":{"gitId":"tlyi"},"content":"            if (super.exerciseItems.getSize() \u003d\u003d 1) {","lastModifiedDate":"2021-10-11"},{"lineNumber":55,"author":{"gitId":"tlyi"},"content":"                return new CommandResult(MESSAGE_ONLY_ONE_IN_LIST);","lastModifiedDate":"2021-10-11"},{"lineNumber":56,"author":{"gitId":"tlyi"},"content":"            }","lastModifiedDate":"2021-10-11"},{"lineNumber":57,"author":{"gitId":"tlyi"},"content":"            return new CommandResult(String.format(MESSAGE_LIST_OUT_OF_BOUNDS, super.exerciseItems.getSize()));","lastModifiedDate":"2021-10-11"},{"lineNumber":58,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":59,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":60,"author":{"gitId":"tlyi"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"xingjie99":18,"tlyi":42}},{"path":"src/main/java/seedu/duke/commands/DeleteFoodCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.commands;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"tlyi"},"content":"import seedu.duke.food.Food;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"tryyang2001"},"content":"import seedu.duke.parser.Parser;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"tlyi"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"tlyi"},"content":"/**","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"tlyi"},"content":" * Represents the command that when executed, deletes a Food item from the FoodList.","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"tlyi"},"content":" */","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"tlyi"},"content":"public class DeleteFoodCommand extends Command {","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_COMMAND_FORMAT \u003d Ui.QUOTATION + COMMAND_WORD_DELETE","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"tlyi"},"content":"            + \" \" + COMMAND_PREFIX_FOOD + COMMAND_PREFIX_DELIMITER + \"X\" + Ui.QUOTATION","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"tlyi"},"content":"            + \", where X is the item number in the food list\";","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid format! \"","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"tlyi"},"content":"            + \"Trying to delete a food item?\"","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"tlyi"},"content":"            + Ui.INDENTED_LS + \"Use this format:\" + Ui.LS + MESSAGE_COMMAND_FORMAT;","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"A food item has been deleted:\"","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"tlyi"},"content":"            + Ui.INDENTED_LS + \"%1$s\"","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"tlyi"},"content":"            + Ui.INDENTED_LS + \"Number of food item(s) left: %2$d\";","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"tryyang2001"},"content":"    public static final String MESSAGE_FOOD_CLEAR \u003d \"All food items have been removed.\";","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"tlyi"},"content":"    private final int itemIndex;","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"tlyi"},"content":"    public DeleteFoodCommand(int itemIndex) {","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"tlyi"},"content":"        this.itemIndex \u003d itemIndex;","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"tlyi"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"tlyi"},"content":"    public CommandResult execute() {","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"tlyi"},"content":"        if (super.foodItems.getSize() \u003d\u003d 0) {","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"tlyi"},"content":"            return new CommandResult(MESSAGE_EMPTY_FOOD_LIST);","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"tryyang2001"},"content":"        if (this.itemIndex \u003d\u003d Parser.PARAMS_ALL_INDICES) {","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"tryyang2001"},"content":"            super.foodItems.clearFoodList();","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"tryyang2001"},"content":"            assert foodItems.getSize() \u003d\u003d 0 : \"The size of the food list should be 0 after clear\";","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"tryyang2001"},"content":"            return new CommandResult(MESSAGE_FOOD_CLEAR);","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"tryyang2001"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"tlyi"},"content":"        try {","lastModifiedDate":"2021-10-11"},{"lineNumber":39,"author":{"gitId":"tlyi"},"content":"            Food deletedFood;","lastModifiedDate":"2021-10-11"},{"lineNumber":40,"author":{"gitId":"tlyi"},"content":"            deletedFood \u003d super.foodItems.deleteFood(this.itemIndex);","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"tlyi"},"content":"            return new CommandResult(String.format(MESSAGE_SUCCESS, deletedFood, super.foodItems.getSize()));","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"tlyi"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-10-11"},{"lineNumber":43,"author":{"gitId":"tlyi"},"content":"            if (super.foodItems.getSize() \u003d\u003d 1) {","lastModifiedDate":"2021-10-11"},{"lineNumber":44,"author":{"gitId":"tlyi"},"content":"                return new CommandResult(MESSAGE_ONLY_ONE_IN_LIST);","lastModifiedDate":"2021-10-11"},{"lineNumber":45,"author":{"gitId":"tlyi"},"content":"            }","lastModifiedDate":"2021-10-11"},{"lineNumber":46,"author":{"gitId":"tlyi"},"content":"            return new CommandResult(String.format(MESSAGE_LIST_OUT_OF_BOUNDS, super.foodItems.getSize()));","lastModifiedDate":"2021-10-11"},{"lineNumber":47,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":48,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":49,"author":{"gitId":"tlyi"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"tryyang2001":7,"tlyi":42}},{"path":"src/main/java/seedu/duke/commands/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.commands;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"tlyi"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"tlyi"},"content":"/**","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"tlyi"},"content":" * Represents the command that when executed, displays the list of available commands to the user.","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"tlyi"},"content":" */","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"tlyi"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"tlyi"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_COMMAND_FORMAT \u003d Ui.QUOTATION + COMMAND_WORD + Ui.QUOTATION;","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"tlyi"},"content":"    private static final String MESSAGE_SUCCESS \u003d \"These are the available commands:\" + Ui.LS + \"%s\";","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"tlyi"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"tlyi"},"content":"    public CommandResult execute() {","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"tlyi"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, \"list of commands (placeholder)\"));","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"tlyi"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"tlyi":17}},{"path":"src/main/java/seedu/duke/commands/InvalidCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.commands;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"tlyi"},"content":"/**","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"tlyi"},"content":" * Represents any command that cannot be executed due to invalid format.","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"tlyi"},"content":" * Contains a String of message that describes the error.","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"tlyi"},"content":" */","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"tlyi"},"content":"public class InvalidCommand extends Command {","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"tlyi"},"content":"    public final String errorMessage;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"tlyi"},"content":"    public InvalidCommand(String errorMessage) {","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"tlyi"},"content":"        this.errorMessage \u003d errorMessage;","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"tlyi"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"tlyi"},"content":"    public CommandResult execute() {","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"tlyi"},"content":"        return new CommandResult(this.errorMessage);","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"tlyi"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"tlyi":18}},{"path":"src/main/java/seedu/duke/commands/OverviewCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.commands;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"tttyyzzz"},"content":"import seedu.duke.food.FoodList;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"tttyyzzz"},"content":"import seedu.duke.ui.Statistics;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"tlyi"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"tlyi"},"content":"/**","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"tlyi"},"content":" * Represents the command that when executed, displays the overview of calorie statistics.","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"tlyi"},"content":" */","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"tlyi"},"content":"public class OverviewCommand extends Command {","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"tlyi"},"content":"    public static final String COMMAND_WORD \u003d \"overview\";","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_COMMAND_FORMAT \u003d Ui.QUOTATION + COMMAND_WORD + Ui.QUOTATION;","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"This is an overview of your day:\"","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"tlyi"},"content":"            + Ui.INDENTED_LS + \"Calories consumed: %1$d calories\"","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"tlyi"},"content":"            + Ui.INDENTED_LS + \"Calories burnt: %2$d calories\"","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"tlyi"},"content":"            + Ui.INDENTED_LS + \"Net calories: %3$d calories\"","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"tlyi"},"content":"            + Ui.LS + \"%4$s\";","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"tlyi"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"tlyi"},"content":"    public CommandResult execute() {","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"tttyyzzz"},"content":"        int caloriesConsumed \u003d super.foodItems.getTotalCalories();","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"tttyyzzz"},"content":"        int caloriesLost \u003d super.exerciseItems.getTotalCalories();","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"tttyyzzz"},"content":"        int caloriesGoal \u003d super.profile.getCalorieGoal();","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"tttyyzzz"},"content":"        String[] calorieReport \u003d super.statistics.getCaloriesReport(caloriesLost, caloriesConsumed, caloriesGoal);","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"tttyyzzz"},"content":"        return new CommandResult(super.statistics.formatMessage(calorieReport));","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"tlyi"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"tttyyzzz":7,"tlyi":20}},{"path":"src/main/java/seedu/duke/commands/ProfileCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.commands;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"tlyi"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"tlyi"},"content":"/**","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"tlyi"},"content":" * Represents the command that when executed, shows the value of name, height and weight in the Profile.","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"tlyi"},"content":" */","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"tlyi"},"content":"public class ProfileCommand extends Command {","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Hello! This is your current profile:\";","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"tlyi"},"content":"    private static final String MESSAGE_NAME \u003d \"Your name is %s.\";","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"tlyi"},"content":"    private static final String MESSAGE_HEIGHT \u003d \"Your height is %scm.\";","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"tlyi"},"content":"    private static final String MESSAGE_WEIGHT \u003d \"Your weight is %skg.\";","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"tlyi"},"content":"    private static final String MESSAGE_NO_INFO \u003d \"I do not know your %1$s yet, tell me using the command %2$s!\";","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"tlyi"},"content":"    public ProfileCommand() {","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"tlyi"},"content":"    @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"tlyi"},"content":"    public CommandResult execute() {","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"tlyi"},"content":"        final String nameString \u003d super.profile.getName() \u003d\u003d null","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"tlyi"},"content":"                ? String.format(MESSAGE_NO_INFO, \"name\", ChangeNameCommand.MESSAGE_COMMAND_FORMAT)","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"tlyi"},"content":"                : String.format(MESSAGE_NAME, super.profile.getName());","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"tlyi"},"content":"        final String heightString \u003d super.profile.getHeight() \u003d\u003d 0","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"tlyi"},"content":"                ? String.format(MESSAGE_NO_INFO, \"height\", ChangeHeightCommand.MESSAGE_COMMAND_FORMAT)","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"tlyi"},"content":"                : String.format(MESSAGE_HEIGHT, super.profile.getHeight());","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"tlyi"},"content":"        final String weightString \u003d super.profile.getWeight() \u003d\u003d 0","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"tlyi"},"content":"                ? String.format(MESSAGE_NO_INFO, \"weight\", ChangeWeightCommand.MESSAGE_COMMAND_FORMAT)","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"tlyi"},"content":"                : String.format(MESSAGE_WEIGHT, super.profile.getWeight());","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"tlyi"},"content":"        return new CommandResult(MESSAGE_SUCCESS","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"tlyi"},"content":"                + Ui.INDENTED_LS + nameString","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"tlyi"},"content":"                + Ui.INDENTED_LS + heightString","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"tlyi"},"content":"                + Ui.INDENTED_LS + weightString);","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"tlyi"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"tlyi":34}},{"path":"src/main/java/seedu/duke/commands/ProfileCreateCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.commands;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"tlyi"},"content":"import seedu.duke.profile.exceptions.InvalidCharacteristicException;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"tlyi"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"tlyi"},"content":"/**","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"tlyi"},"content":" * Represents the command that when executed, changes the value of name, height and weight in the Profile.","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"tlyi"},"content":" */","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"tlyi"},"content":"public class ProfileCreateCommand extends Command {","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"tlyi"},"content":"    public static int COMMAND_EXPECTED_NUM_DELIMITERS \u003d 3;","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_COMMAND_FORMAT \u003d Ui.QUOTATION + COMMAND_WORD_PROFILE","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"tlyi"},"content":"            + \" \" + COMMAND_PREFIX_NAME + COMMAND_PREFIX_DELIMITER + \"X \"","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"tlyi"},"content":"            + COMMAND_PREFIX_HEIGHT + COMMAND_PREFIX_DELIMITER + \"Y \"","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"tlyi"},"content":"            + COMMAND_PREFIX_WEIGHT + COMMAND_PREFIX_DELIMITER + \"Z\"","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"tlyi"},"content":"            + Ui.QUOTATION + \" where X is your name, Y is your height in CM and Z is your weight in KG.\";","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid format! \"","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"tlyi"},"content":"            + \"Trying to create your profile? Use this format:\"","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"tlyi"},"content":"            + Ui.INDENTED_LS + MESSAGE_COMMAND_FORMAT;","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Hello %1$s! Your profile has been created!\"","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"tlyi"},"content":"            + Ui.INDENTED_LS + \"Your height is %2$scm.\"","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"tlyi"},"content":"            + Ui.INDENTED_LS + \"Your weight is %3$skg.\";","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"tlyi"},"content":"    private final String name;","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"tlyi"},"content":"    private final double weight;","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"tlyi"},"content":"    private final double height;","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"tlyi"},"content":"    public ProfileCreateCommand(String name, double height, double weight) {","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"tlyi"},"content":"        assert name !\u003d null : \"parser should have ensured name is not null\";","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"tlyi"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-10-10"},{"lineNumber":31,"author":{"gitId":"tlyi"},"content":"        this.height \u003d height;","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"tlyi"},"content":"        this.weight \u003d weight;","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":34,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":35,"author":{"gitId":"tlyi"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":36,"author":{"gitId":"tlyi"},"content":"    public CommandResult execute() {","lastModifiedDate":"2021-10-10"},{"lineNumber":37,"author":{"gitId":"tlyi"},"content":"        try {","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"tlyi"},"content":"            super.profile.setProfile(this.name, this.height, this.weight);","lastModifiedDate":"2021-10-11"},{"lineNumber":39,"author":{"gitId":"tlyi"},"content":"            return new CommandResult(String.format(MESSAGE_SUCCESS, this.name, this.height, this.weight));","lastModifiedDate":"2021-10-10"},{"lineNumber":40,"author":{"gitId":"tlyi"},"content":"        } catch (InvalidCharacteristicException e) {","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"tlyi"},"content":"            return new CommandResult(e.getMessage());","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":43,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":44,"author":{"gitId":"tlyi"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"tlyi":44}},{"path":"src/main/java/seedu/duke/commands/SetGoalCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.commands;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"tlyi"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"tlyi"},"content":"/**","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"tlyi"},"content":" * Represents the command that when executed, sets the net calorie goal for Profile.","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"tlyi"},"content":" */","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"tlyi"},"content":"public class SetGoalCommand extends Command {","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"tlyi"},"content":"    public static final String COMMAND_WORD \u003d \"goal\";","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_COMMAND_FORMAT \u003d Ui.QUOTATION + COMMAND_WORD + \" X\" + Ui.QUOTATION","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"tlyi"},"content":"            + \", where X is your net calorie goal for the day\";","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Your goal has been set!\"","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"tlyi"},"content":"            + Ui.INDENTED_LS + \"Current net calorie goal per day: %s\";","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"tlyi"},"content":"    private final int calorieGoal;","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"tlyi"},"content":"    public SetGoalCommand(int calorieGoal) {","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"tlyi"},"content":"        this.calorieGoal \u003d calorieGoal;","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"tlyi"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"tlyi"},"content":"    public CommandResult execute() {","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"tlyi"},"content":"        super.profile.setCalorieGoal(this.calorieGoal);","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"tlyi"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, super.profile.getCalorieGoal()));","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"tlyi"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"tlyi":26}},{"path":"src/main/java/seedu/duke/commands/ViewCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.commands;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"tlyi"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"tlyi"},"content":"/**","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"tlyi"},"content":" * Represents the command that when executed, lists all the items in the FoodList and ExerciseList.","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"tlyi"},"content":" */","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"tlyi"},"content":"public class ViewCommand extends Command {","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"tlyi"},"content":"    public static final String COMMAND_WORD \u003d \"view\";","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_COMMAND_FORMAT \u003d Ui.QUOTATION + COMMAND_WORD + Ui.QUOTATION;","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"This is what you have recorded so far!\" + Ui.LS;","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_FOOD \u003d \"You have consumed %1$d food item(s):\"","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"tlyi"},"content":"            + Ui.LS + \"%2$s\"","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"tlyi"},"content":"            + Ui.LS + \"Total calories consumed: %3$s\";","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_EXERCISE \u003d \"You have done %1$d exercise(s):\"","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"tlyi"},"content":"            + Ui.LS + \"%2$s\"","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"tlyi"},"content":"            + Ui.LS + \"Total calories burnt: %3$s\";","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"tlyi"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"tlyi"},"content":"    public CommandResult execute() {","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"tlyi"},"content":"        String foodMessage;","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"tlyi"},"content":"        if (super.foodItems.getSize() \u003d\u003d 0) {","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"tlyi"},"content":"            foodMessage \u003d MESSAGE_EMPTY_FOOD_LIST;","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"tlyi"},"content":"        } else {","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"tlyi"},"content":"            foodMessage \u003d String.format(MESSAGE_FOOD, super.foodItems.getSize(),","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"tlyi"},"content":"                    super.foodItems.convertToString(),","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"tlyi"},"content":"                    super.foodItems.getTotalCalories());","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"tlyi"},"content":"        String exerciseMessage;","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"tlyi"},"content":"        if (super.exerciseItems.getSize() \u003d\u003d 0) {","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"tlyi"},"content":"            exerciseMessage \u003d MESSAGE_EMPTY_EXERCISE_LIST;","lastModifiedDate":"2021-10-13"},{"lineNumber":34,"author":{"gitId":"tlyi"},"content":"        } else {","lastModifiedDate":"2021-10-13"},{"lineNumber":35,"author":{"gitId":"tlyi"},"content":"            exerciseMessage \u003d String.format(MESSAGE_EXERCISE, super.exerciseItems.getSize(),","lastModifiedDate":"2021-10-13"},{"lineNumber":36,"author":{"gitId":"tlyi"},"content":"                    super.exerciseItems.convertToString(),","lastModifiedDate":"2021-10-13"},{"lineNumber":37,"author":{"gitId":"tlyi"},"content":"                    super.exerciseItems.getTotalCalories());","lastModifiedDate":"2021-10-13"},{"lineNumber":38,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":39,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":40,"author":{"gitId":"tlyi"},"content":"        return new CommandResult(MESSAGE_SUCCESS + foodMessage + exerciseMessage);","lastModifiedDate":"2021-10-13"},{"lineNumber":41,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":42,"author":{"gitId":"tlyi"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"tlyi":42}},{"path":"src/main/java/seedu/duke/commands/ViewExerciseListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.commands;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"tlyi"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"xingjie99"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"xingjie99"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"tlyi"},"content":"/**","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"tlyi"},"content":" * Represents the command that when executed, lists all the items in the ExerciseList.","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"tlyi"},"content":" */","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"tlyi"},"content":"public class ViewExerciseListCommand extends Command {","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_COMMAND_FORMAT \u003d Ui.QUOTATION + COMMAND_WORD_VIEW","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"tlyi"},"content":"            + \" \" + COMMAND_PREFIX_EXERCISE + COMMAND_PREFIX_DELIMITER + Ui.QUOTATION;","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid format!\"","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"tlyi"},"content":"            + \"Trying to view the exercise list? Use this format:\"","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"tlyi"},"content":"            + Ui.LS + MESSAGE_COMMAND_FORMAT;","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"You have done %1$d exercise(s):\"","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"tlyi"},"content":"            + Ui.LS + \"%2$s\"","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"tlyi"},"content":"            + Ui.LS + \"Total calories burnt: %3$s\";","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"xingjie99"},"content":"    private static Logger logger \u003d Logger.getLogger(\"ViewExerciseCommand\");","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"tlyi"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"tlyi"},"content":"    public CommandResult execute() {","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"xingjie99"},"content":"        if (super.exerciseItems.getSize() \u003d\u003d 0) {","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"xingjie99"},"content":"            logger.log(Level.WARNING,\"Exercise list is empty\");","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"xingjie99"},"content":"            return new CommandResult(MESSAGE_EMPTY_EXERCISE_LIST);","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"xingjie99"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"xingjie99"},"content":"        assert exerciseItems.getSize() \u003e 0 : \"Exercise list is not empty\";","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"tlyi"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, super.exerciseItems.getSize(),","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"tlyi"},"content":"                super.exerciseItems.convertToString(),","lastModifiedDate":"2021-10-13"},{"lineNumber":33,"author":{"gitId":"tlyi"},"content":"                super.exerciseItems.getTotalCalories()));","lastModifiedDate":"2021-10-13"},{"lineNumber":34,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":35,"author":{"gitId":"tlyi"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"xingjie99":10,"tlyi":25}},{"path":"src/main/java/seedu/duke/commands/ViewFoodListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.commands;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"tlyi"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"tlyi"},"content":"/**","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"tlyi"},"content":" * Represents the command that when executed, lists all the items in the FoodList.","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"tlyi"},"content":" */","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"tlyi"},"content":"public class ViewFoodListCommand extends Command {","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_COMMAND_FORMAT \u003d Ui.QUOTATION + COMMAND_WORD_VIEW","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"tlyi"},"content":"            + \" \" + COMMAND_PREFIX_FOOD + COMMAND_PREFIX_DELIMITER + Ui.QUOTATION;","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid format! \"","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"tlyi"},"content":"            + \"Trying to view the food list? Use this format:\"","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"tlyi"},"content":"            + Ui.LS + MESSAGE_COMMAND_FORMAT;","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"tlyi"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"You have consumed %1$d food item(s):\"","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"tlyi"},"content":"            + Ui.LS + \"%2$s\"","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"tlyi"},"content":"            + Ui.LS + \"Total calories consumed: %3$s\";","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"tlyi"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"tlyi"},"content":"    public CommandResult execute() {","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"tlyi"},"content":"        if (super.foodItems.getSize() \u003d\u003d 0) {","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"tlyi"},"content":"            return new CommandResult(MESSAGE_EMPTY_FOOD_LIST);","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"tlyi"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, super.foodItems.getSize(),","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"tlyi"},"content":"                super.foodItems.convertToString(),","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"tlyi"},"content":"                super.foodItems.getTotalCalories()));","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"tlyi"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"tlyi":27}},{"path":"src/main/java/seedu/duke/exercise/Exercise.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xingjie99"},"content":"package seedu.duke.exercise;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"xingjie99"},"content":"public class Exercise {","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"xingjie99"},"content":"    private String name;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"xingjie99"},"content":"    private int calories;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"xingjie99"},"content":"    public static final String EXERCISE_TYPE \u003d \"E\";","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"xingjie99"},"content":"    public static final String FILE_TEXT_DELIMITER \u003d \"|\";","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"xingjie99"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"xingjie99"},"content":"     * Constructor for exercise object.","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"xingjie99"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"xingjie99"},"content":"     * @param name     Description of the exercise.","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"xingjie99"},"content":"     * @param calories Calorie burnt from the exercise.","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"xingjie99"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"xingjie99"},"content":"    public Exercise(String name, int calories) {","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"xingjie99"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"xingjie99"},"content":"        this.calories \u003d calories;","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"xingjie99"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"xingjie99"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"xingjie99"},"content":"     * Returns the name of the exercise.","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"xingjie99"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"xingjie99"},"content":"     * @return Name of the exercise.","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"xingjie99"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"xingjie99"},"content":"    public String getName() {","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"xingjie99"},"content":"        return name;","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"xingjie99"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"xingjie99"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"xingjie99"},"content":"     * Returns the calorie burnt from the exercise.","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"xingjie99"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"xingjie99"},"content":"     * @return Calorie burnt from the exercise.","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"xingjie99"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"xingjie99"},"content":"    public int getCalories() {","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"xingjie99"},"content":"        return calories;","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"xingjie99"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"xingjie99"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":39,"author":{"gitId":"xingjie99"},"content":"     * Sets or updates the name of the exercise.","lastModifiedDate":"2021-10-11"},{"lineNumber":40,"author":{"gitId":"xingjie99"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"xingjie99"},"content":"     * @param name New name of the exercise to be changed to.","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"xingjie99"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":43,"author":{"gitId":"xingjie99"},"content":"    public void setName(String name) {","lastModifiedDate":"2021-10-11"},{"lineNumber":44,"author":{"gitId":"xingjie99"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-10-11"},{"lineNumber":45,"author":{"gitId":"xingjie99"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":46,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":47,"author":{"gitId":"xingjie99"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":48,"author":{"gitId":"xingjie99"},"content":"     * Sets or updates the calorie burnt from the exercise.","lastModifiedDate":"2021-10-11"},{"lineNumber":49,"author":{"gitId":"xingjie99"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":50,"author":{"gitId":"xingjie99"},"content":"     * @param calories New calorie burnt from the exercise.","lastModifiedDate":"2021-10-11"},{"lineNumber":51,"author":{"gitId":"xingjie99"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":52,"author":{"gitId":"xingjie99"},"content":"    public void setCalories(int calories) {","lastModifiedDate":"2021-10-11"},{"lineNumber":53,"author":{"gitId":"xingjie99"},"content":"        this.calories \u003d calories;","lastModifiedDate":"2021-10-11"},{"lineNumber":54,"author":{"gitId":"xingjie99"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":55,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":56,"author":{"gitId":"xingjie99"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":57,"author":{"gitId":"xingjie99"},"content":"     * Prints the name of exercise along with its calorie.","lastModifiedDate":"2021-10-11"},{"lineNumber":58,"author":{"gitId":"xingjie99"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":59,"author":{"gitId":"xingjie99"},"content":"     * @return Name and calorie of exercise in display format.","lastModifiedDate":"2021-10-11"},{"lineNumber":60,"author":{"gitId":"xingjie99"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":61,"author":{"gitId":"xingjie99"},"content":"    @Override","lastModifiedDate":"2021-10-11"},{"lineNumber":62,"author":{"gitId":"xingjie99"},"content":"    public String toString() {","lastModifiedDate":"2021-10-11"},{"lineNumber":63,"author":{"gitId":"xingjie99"},"content":"        return this.getName() + \" (\" + this.getCalories() + \" cal)\";","lastModifiedDate":"2021-10-11"},{"lineNumber":64,"author":{"gitId":"xingjie99"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":65,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":66,"author":{"gitId":"xingjie99"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":67,"author":{"gitId":"xingjie99"},"content":"     * Prints exercise to external file format.","lastModifiedDate":"2021-10-11"},{"lineNumber":68,"author":{"gitId":"xingjie99"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":69,"author":{"gitId":"xingjie99"},"content":"     * @return Name and calorie of exercise in file format.","lastModifiedDate":"2021-10-11"},{"lineNumber":70,"author":{"gitId":"xingjie99"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":71,"author":{"gitId":"xingjie99"},"content":"    public String toFileTextString() {","lastModifiedDate":"2021-10-11"},{"lineNumber":72,"author":{"gitId":"xingjie99"},"content":"        return EXERCISE_TYPE + FILE_TEXT_DELIMITER + this.getName() + FILE_TEXT_DELIMITER + this.getCalories();","lastModifiedDate":"2021-10-11"},{"lineNumber":73,"author":{"gitId":"xingjie99"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":74,"author":{"gitId":"xingjie99"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"xingjie99":74}},{"path":"src/main/java/seedu/duke/exercise/ExerciseList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xingjie99"},"content":"package seedu.duke.exercise;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"tlyi"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"xingjie99"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"xingjie99"},"content":"public class ExerciseList {","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"xingjie99"},"content":"    private ArrayList\u003cExercise\u003e exerciseList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"xingjie99"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"xingjie99"},"content":"     * Returns the exercise list.","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"xingjie99"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"xingjie99"},"content":"     * @return Exercise list.","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"xingjie99"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"xingjie99"},"content":"    public ArrayList\u003cExercise\u003e getExerciseList() {","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"xingjie99"},"content":"        return exerciseList;","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"xingjie99"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"xingjie99"},"content":"     * Returns exercise item at a specific index in the exercise list.","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"xingjie99"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"xingjie99"},"content":"     * @param index Index of the exercise item.","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"xingjie99"},"content":"     * @return exercise item in the exercise list.","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"xingjie99"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"xingjie99"},"content":"    public Exercise getExercise(int index) {","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"xingjie99"},"content":"        return this.exerciseList.get(index);","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"xingjie99"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"xingjie99"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"xingjie99"},"content":"     * Returns the number of exercises in the exercise list.","lastModifiedDate":"2021-10-10"},{"lineNumber":31,"author":{"gitId":"xingjie99"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"xingjie99"},"content":"     * @return Number of exercises in the exercise list.","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"xingjie99"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":34,"author":{"gitId":"xingjie99"},"content":"    public int getSize() {","lastModifiedDate":"2021-10-10"},{"lineNumber":35,"author":{"gitId":"xingjie99"},"content":"        return exerciseList.size();","lastModifiedDate":"2021-10-10"},{"lineNumber":36,"author":{"gitId":"xingjie99"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":37,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":38,"author":{"gitId":"xingjie99"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":39,"author":{"gitId":"xingjie99"},"content":"     * Adds an exercise item into the exercise list.","lastModifiedDate":"2021-10-10"},{"lineNumber":40,"author":{"gitId":"xingjie99"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":41,"author":{"gitId":"xingjie99"},"content":"     * @param exercise Exercise class object to be added.","lastModifiedDate":"2021-10-10"},{"lineNumber":42,"author":{"gitId":"xingjie99"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":43,"author":{"gitId":"xingjie99"},"content":"    public void addExercise(Exercise exercise) {","lastModifiedDate":"2021-10-10"},{"lineNumber":44,"author":{"gitId":"xingjie99"},"content":"        this.exerciseList.add(exercise);","lastModifiedDate":"2021-10-10"},{"lineNumber":45,"author":{"gitId":"xingjie99"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":46,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":47,"author":{"gitId":"xingjie99"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":48,"author":{"gitId":"xingjie99"},"content":"     * Deletes an exercise item from the exercise list.","lastModifiedDate":"2021-10-10"},{"lineNumber":49,"author":{"gitId":"xingjie99"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":50,"author":{"gitId":"xingjie99"},"content":"     * @param index Index of the exercise to be deleted.","lastModifiedDate":"2021-10-10"},{"lineNumber":51,"author":{"gitId":"xingjie99"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":52,"author":{"gitId":"tlyi"},"content":"    public Exercise deleteExercise(int index) {","lastModifiedDate":"2021-10-11"},{"lineNumber":53,"author":{"gitId":"tlyi"},"content":"        return exerciseList.remove(index);","lastModifiedDate":"2021-10-11"},{"lineNumber":54,"author":{"gitId":"xingjie99"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":55,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":56,"author":{"gitId":"xingjie99"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":57,"author":{"gitId":"xingjie99"},"content":"     * Returns exercise list in a string format.","lastModifiedDate":"2021-10-11"},{"lineNumber":58,"author":{"gitId":"xingjie99"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":59,"author":{"gitId":"xingjie99"},"content":"     * @return Exercise list in string format.","lastModifiedDate":"2021-10-11"},{"lineNumber":60,"author":{"gitId":"xingjie99"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":61,"author":{"gitId":"xingjie99"},"content":"    public String convertToString() {","lastModifiedDate":"2021-10-11"},{"lineNumber":62,"author":{"gitId":"xingjie99"},"content":"        StringBuilder exerciseListToString \u003d new StringBuilder();","lastModifiedDate":"2021-10-11"},{"lineNumber":63,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":64,"author":{"gitId":"xingjie99"},"content":"        for (int i \u003d 0; i \u003c exerciseList.size(); i++) {","lastModifiedDate":"2021-10-10"},{"lineNumber":65,"author":{"gitId":"tlyi"},"content":"            exerciseListToString.append(\"\\t\").append(i + 1).append(\". \").append(exerciseList.get(i)).append(Ui.LS);","lastModifiedDate":"2021-10-13"},{"lineNumber":66,"author":{"gitId":"xingjie99"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":67,"author":{"gitId":"xingjie99"},"content":"        return exerciseListToString.toString();","lastModifiedDate":"2021-10-11"},{"lineNumber":68,"author":{"gitId":"xingjie99"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":69,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":70,"author":{"gitId":"xingjie99"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":71,"author":{"gitId":"xingjie99"},"content":"     * Computes the sum of calorie of all exercises in exercise list.","lastModifiedDate":"2021-10-11"},{"lineNumber":72,"author":{"gitId":"xingjie99"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":73,"author":{"gitId":"xingjie99"},"content":"     * @return Integer value of the sum of calorie of all exercises.","lastModifiedDate":"2021-10-11"},{"lineNumber":74,"author":{"gitId":"xingjie99"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":75,"author":{"gitId":"tlyi"},"content":"    public int getTotalCalories() {","lastModifiedDate":"2021-10-13"},{"lineNumber":76,"author":{"gitId":"xingjie99"},"content":"        int sumOfExerciseCalorie \u003d 0;","lastModifiedDate":"2021-10-11"},{"lineNumber":77,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":78,"author":{"gitId":"xingjie99"},"content":"        for (Exercise exercise : exerciseList) {","lastModifiedDate":"2021-10-11"},{"lineNumber":79,"author":{"gitId":"xingjie99"},"content":"            sumOfExerciseCalorie +\u003d exercise.getCalories();","lastModifiedDate":"2021-10-11"},{"lineNumber":80,"author":{"gitId":"xingjie99"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":81,"author":{"gitId":"xingjie99"},"content":"        return sumOfExerciseCalorie;","lastModifiedDate":"2021-10-11"},{"lineNumber":82,"author":{"gitId":"xingjie99"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":83,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":84,"author":{"gitId":"xingjie99"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":85,"author":{"gitId":"xingjie99"},"content":"     * Deletes all exercises in the exercise list.","lastModifiedDate":"2021-10-11"},{"lineNumber":86,"author":{"gitId":"xingjie99"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":87,"author":{"gitId":"xingjie99"},"content":"    public void clearExerciseList() {","lastModifiedDate":"2021-10-11"},{"lineNumber":88,"author":{"gitId":"xingjie99"},"content":"        this.exerciseList.clear();","lastModifiedDate":"2021-10-11"},{"lineNumber":89,"author":{"gitId":"xingjie99"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":90,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":91,"author":{"gitId":"xingjie99"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"weidak":1,"xingjie99":85,"tlyi":5}},{"path":"src/main/java/seedu/duke/food/Food.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tryyang2001"},"content":"package seedu.duke.food;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"tryyang2001"},"content":"public class Food {","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"tryyang2001"},"content":"    public static final String FOOD_TYPE \u003d \"F\";","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"tryyang2001"},"content":"    public static final String FILE_TEXT_DELIMITER \u003d \"|\";","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"tryyang2001"},"content":"    private String name;","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"tryyang2001"},"content":"    private int calories;","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"tryyang2001"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"tryyang2001"},"content":"     * Constructor for the food object.","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"tryyang2001"},"content":"     *","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"tryyang2001"},"content":"     * @param name     The name or description of the food","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"tryyang2001"},"content":"     * @param calories The calorie of the food consumed","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"tryyang2001"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"tryyang2001"},"content":"    public Food(String name, int calories) {","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"tryyang2001"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"tryyang2001"},"content":"        this.calories \u003d calories;","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"tryyang2001"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"tryyang2001"},"content":"     * Gets the name of the food.","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"tryyang2001"},"content":"     *","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"tryyang2001"},"content":"     * @return The name description of the food item","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"tryyang2001"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"tryyang2001"},"content":"    public String getName() {","lastModifiedDate":"2021-10-06"},{"lineNumber":26,"author":{"gitId":"tryyang2001"},"content":"        return name;","lastModifiedDate":"2021-10-06"},{"lineNumber":27,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":28,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":29,"author":{"gitId":"tryyang2001"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"tryyang2001"},"content":"     * Sets or updates the name of the food.","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"tryyang2001"},"content":"     *","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"tryyang2001"},"content":"     * @param name The new name description of the food item","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"tryyang2001"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"tryyang2001"},"content":"    public void setName(String name) {","lastModifiedDate":"2021-10-06"},{"lineNumber":35,"author":{"gitId":"tryyang2001"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-10-06"},{"lineNumber":36,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":37,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":38,"author":{"gitId":"tryyang2001"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"tryyang2001"},"content":"     * Gets the amount of calorie of the food.","lastModifiedDate":"2021-10-08"},{"lineNumber":40,"author":{"gitId":"tryyang2001"},"content":"     *","lastModifiedDate":"2021-10-08"},{"lineNumber":41,"author":{"gitId":"tryyang2001"},"content":"     * @return The amount of calorie in integer","lastModifiedDate":"2021-10-08"},{"lineNumber":42,"author":{"gitId":"tryyang2001"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":43,"author":{"gitId":"tryyang2001"},"content":"    public int getCalories() {","lastModifiedDate":"2021-10-10"},{"lineNumber":44,"author":{"gitId":"tryyang2001"},"content":"        return calories;","lastModifiedDate":"2021-10-10"},{"lineNumber":45,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":46,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":47,"author":{"gitId":"tryyang2001"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":48,"author":{"gitId":"tryyang2001"},"content":"     * Sets or updates the amount of calorie for the food consumed.","lastModifiedDate":"2021-10-08"},{"lineNumber":49,"author":{"gitId":"tryyang2001"},"content":"     *","lastModifiedDate":"2021-10-08"},{"lineNumber":50,"author":{"gitId":"tryyang2001"},"content":"     * @param calories The new amount of calorie in integer","lastModifiedDate":"2021-10-10"},{"lineNumber":51,"author":{"gitId":"tryyang2001"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":52,"author":{"gitId":"tryyang2001"},"content":"    public void setCalories(int calories) {","lastModifiedDate":"2021-10-10"},{"lineNumber":53,"author":{"gitId":"tryyang2001"},"content":"        this.calories \u003d calories;","lastModifiedDate":"2021-10-10"},{"lineNumber":54,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":55,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":56,"author":{"gitId":"tryyang2001"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":57,"author":{"gitId":"tryyang2001"},"content":"     * Prints the food item in the format of food name description + (calories consumed).","lastModifiedDate":"2021-10-11"},{"lineNumber":58,"author":{"gitId":"tlyi"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":59,"author":{"gitId":"tryyang2001"},"content":"     * @return The food item with name and calories in string format","lastModifiedDate":"2021-10-11"},{"lineNumber":60,"author":{"gitId":"tryyang2001"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":61,"author":{"gitId":"tryyang2001"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":62,"author":{"gitId":"tryyang2001"},"content":"    public String toString() {","lastModifiedDate":"2021-10-06"},{"lineNumber":63,"author":{"gitId":"tryyang2001"},"content":"        return this.getName() + \" (\" + this.getCalories() + \" cal)\";","lastModifiedDate":"2021-10-10"},{"lineNumber":64,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":65,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":66,"author":{"gitId":"tryyang2001"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":67,"author":{"gitId":"tryyang2001"},"content":"     * Converts the food item to string with attributes separated by delimiter for data storage.","lastModifiedDate":"2021-10-11"},{"lineNumber":68,"author":{"gitId":"tlyi"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":69,"author":{"gitId":"tryyang2001"},"content":"     * @return The food item with food type, name and calories in the string format with delimiters","lastModifiedDate":"2021-10-11"},{"lineNumber":70,"author":{"gitId":"tryyang2001"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":71,"author":{"gitId":"tryyang2001"},"content":"    public String toFileTextString() {","lastModifiedDate":"2021-10-11"},{"lineNumber":72,"author":{"gitId":"tryyang2001"},"content":"        return FOOD_TYPE + FILE_TEXT_DELIMITER + this.getName() + FILE_TEXT_DELIMITER + this.getCalories();","lastModifiedDate":"2021-10-11"},{"lineNumber":73,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":74,"author":{"gitId":"tryyang2001"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"tryyang2001":72,"tlyi":2}},{"path":"src/main/java/seedu/duke/food/FoodList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tryyang2001"},"content":"package seedu.duke.food;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"tlyi"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"tryyang2001"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"tryyang2001"},"content":"public class FoodList {","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"tryyang2001"},"content":"    private ArrayList\u003cFood\u003e foodRecords \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"tryyang2001"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"tryyang2001"},"content":"     * Returns food item in the food list.","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"tryyang2001"},"content":"     *","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"tryyang2001"},"content":"     * @param index The index of the food item","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"tryyang2001"},"content":"     * @return the food item with the given index","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"tryyang2001"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"tryyang2001"},"content":"    public Food get(int index) {","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"tryyang2001"},"content":"        return this.foodRecords.get(index);","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"tryyang2001"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"tryyang2001"},"content":"     * Returns the size of the array list.","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"tryyang2001"},"content":"     *","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"tryyang2001"},"content":"     * @return the size of the array list attribute","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"tryyang2001"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"tryyang2001"},"content":"    public int getSize() {","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"tryyang2001"},"content":"        return foodRecords.size();","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"tryyang2001"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":31,"author":{"gitId":"tryyang2001"},"content":"     * Adds a food item into the food list.","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"tryyang2001"},"content":"     *","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"tryyang2001"},"content":"     * @param food The food class object to add","lastModifiedDate":"2021-10-06"},{"lineNumber":34,"author":{"gitId":"tryyang2001"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":35,"author":{"gitId":"tryyang2001"},"content":"    public void addFood(Food food) {","lastModifiedDate":"2021-10-10"},{"lineNumber":36,"author":{"gitId":"tryyang2001"},"content":"        this.foodRecords.add(food);","lastModifiedDate":"2021-10-06"},{"lineNumber":37,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":38,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":39,"author":{"gitId":"tryyang2001"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":40,"author":{"gitId":"tryyang2001"},"content":"     * Converts the entire food list to string format for printing purpose.","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"tryyang2001"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":42,"author":{"gitId":"tryyang2001"},"content":"     * @return The food list in a single string","lastModifiedDate":"2021-10-10"},{"lineNumber":43,"author":{"gitId":"tryyang2001"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":44,"author":{"gitId":"tryyang2001"},"content":"    public String convertToString() {","lastModifiedDate":"2021-10-10"},{"lineNumber":45,"author":{"gitId":"tryyang2001"},"content":"        StringBuilder foodListInString \u003d new StringBuilder(\"\"); //declares as StringBuilder for mutable String object","lastModifiedDate":"2021-10-11"},{"lineNumber":46,"author":{"gitId":"tryyang2001"},"content":"        for (int i \u003d 0; i \u003c foodRecords.size(); i++) {","lastModifiedDate":"2021-10-10"},{"lineNumber":47,"author":{"gitId":"tlyi"},"content":"            foodListInString.append(\"\\t\").append(i + 1).append(\". \").append(foodRecords.get(i)).append(Ui.LS);","lastModifiedDate":"2021-10-13"},{"lineNumber":48,"author":{"gitId":"tryyang2001"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":49,"author":{"gitId":"tryyang2001"},"content":"        return foodListInString.toString();","lastModifiedDate":"2021-10-10"},{"lineNumber":50,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":51,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":52,"author":{"gitId":"tryyang2001"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":53,"author":{"gitId":"tryyang2001"},"content":"     * Deletes a food item according to its index number.","lastModifiedDate":"2021-10-08"},{"lineNumber":54,"author":{"gitId":"tryyang2001"},"content":"     *","lastModifiedDate":"2021-10-07"},{"lineNumber":55,"author":{"gitId":"tryyang2001"},"content":"     * @param index The index of the food item","lastModifiedDate":"2021-10-06"},{"lineNumber":56,"author":{"gitId":"tryyang2001"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":57,"author":{"gitId":"tryyang2001"},"content":"    public Food deleteFood(int index) {","lastModifiedDate":"2021-10-10"},{"lineNumber":58,"author":{"gitId":"tryyang2001"},"content":"        return foodRecords.remove(index);","lastModifiedDate":"2021-10-10"},{"lineNumber":59,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":60,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":61,"author":{"gitId":"tryyang2001"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":62,"author":{"gitId":"tryyang2001"},"content":"     * Deletes all the food items from the food list.","lastModifiedDate":"2021-10-08"},{"lineNumber":63,"author":{"gitId":"tryyang2001"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":64,"author":{"gitId":"tryyang2001"},"content":"    public void clearFoodList() {","lastModifiedDate":"2021-10-11"},{"lineNumber":65,"author":{"gitId":"tryyang2001"},"content":"        this.foodRecords.clear();","lastModifiedDate":"2021-10-06"},{"lineNumber":66,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":67,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":68,"author":{"gitId":"tryyang2001"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":69,"author":{"gitId":"tryyang2001"},"content":"     * Calculates the total calories of all the food items stored in the list.","lastModifiedDate":"2021-10-11"},{"lineNumber":70,"author":{"gitId":"tryyang2001"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":71,"author":{"gitId":"tryyang2001"},"content":"     * @return The total calories intake","lastModifiedDate":"2021-10-11"},{"lineNumber":72,"author":{"gitId":"tryyang2001"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":73,"author":{"gitId":"tlyi"},"content":"    public int getTotalCalories() {","lastModifiedDate":"2021-10-13"},{"lineNumber":74,"author":{"gitId":"tryyang2001"},"content":"        int totalCalories \u003d 0;","lastModifiedDate":"2021-10-11"},{"lineNumber":75,"author":{"gitId":"tryyang2001"},"content":"        for (Food food : foodRecords) {","lastModifiedDate":"2021-10-11"},{"lineNumber":76,"author":{"gitId":"tryyang2001"},"content":"            totalCalories +\u003d food.getCalories();","lastModifiedDate":"2021-10-11"},{"lineNumber":77,"author":{"gitId":"tryyang2001"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":78,"author":{"gitId":"tryyang2001"},"content":"        return totalCalories;","lastModifiedDate":"2021-10-11"},{"lineNumber":79,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":80,"author":{"gitId":"tryyang2001"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"weidak":1,"tryyang2001":75,"tlyi":4}},{"path":"src/main/java/seedu/duke/parser/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.parser;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"tlyi"},"content":"import seedu.duke.commands.AddExerciseCommand;","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"tlyi"},"content":"import seedu.duke.commands.AddFoodCommand;","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"tlyi"},"content":"import seedu.duke.commands.ByeCommand;","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"tlyi"},"content":"import seedu.duke.commands.CalculateBmiCommand;","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"tlyi"},"content":"import seedu.duke.commands.CalculateBmiWithProfileCommand;","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"tlyi"},"content":"import seedu.duke.commands.ChangeHeightCommand;","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"tlyi"},"content":"import seedu.duke.commands.ChangeNameCommand;","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"tlyi"},"content":"import seedu.duke.commands.ChangeWeightCommand;","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"tlyi"},"content":"import seedu.duke.commands.Command;","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"tlyi"},"content":"import seedu.duke.commands.ProfileCommand;","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"tlyi"},"content":"import seedu.duke.commands.ProfileCreateCommand;","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"tlyi"},"content":"import seedu.duke.commands.DeleteExerciseCommand;","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"tlyi"},"content":"import seedu.duke.commands.DeleteFoodCommand;","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"tlyi"},"content":"import seedu.duke.commands.HelpCommand;","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"tlyi"},"content":"import seedu.duke.commands.InvalidCommand;","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"tlyi"},"content":"import seedu.duke.commands.OverviewCommand;","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"tlyi"},"content":"import seedu.duke.commands.SetGoalCommand;","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"tlyi"},"content":"import seedu.duke.commands.ViewCommand;","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"tlyi"},"content":"import seedu.duke.commands.ViewExerciseListCommand;","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"tlyi"},"content":"import seedu.duke.commands.ViewFoodListCommand;","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"tlyi"},"content":"import seedu.duke.parser.exceptions.ItemNotSpecifiedException;","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"tlyi"},"content":"import seedu.duke.parser.exceptions.ParamInvalidException;","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"tlyi"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"tlyi"},"content":"/**","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"tlyi"},"content":" * Parses user input to determine which command to execute.","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"tlyi"},"content":" */","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"tlyi"},"content":"public class Parser {","lastModifiedDate":"2021-10-10"},{"lineNumber":31,"author":{"gitId":"tlyi"},"content":"    protected static final String EMPTY \u003d \"\";","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"tlyi"},"content":"    protected static final String MESSAGE_ERROR_COMMAND_DOES_NOT_EXIST \u003d \"Fitbot is unable to understand this command! \"","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"tlyi"},"content":"            + Ui.LS + \"Lost? Try typing \" + HelpCommand.MESSAGE_COMMAND_FORMAT + \" to see the list of commands!\";","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"tlyi"},"content":"    protected static final String MESSAGE_ERROR_NO_DESCRIPTION \u003d \"Please input a description for this item!\";","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"tlyi"},"content":"    protected static final String MESSAGE_ERROR_NO_NAME \u003d \"Please input your name!\";","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"tlyi"},"content":"    protected static final String MESSAGE_ERROR_NO_HEIGHT \u003d \"Please input height as a number!\";","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"tlyi"},"content":"    protected static final String MESSAGE_ERROR_NO_WEIGHT \u003d \"Please input weight as a number!\";","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"tlyi"},"content":"    protected static final String MESSAGE_ERROR_NO_CALORIES_INFO \u003d \"Please input the number of calories!\";","lastModifiedDate":"2021-10-11"},{"lineNumber":39,"author":{"gitId":"tlyi"},"content":"    protected static final String MESSAGE_ERROR_INVALID_CALORIES_INFO \u003d \"Please input calories as a number! E.g 123\";","lastModifiedDate":"2021-10-11"},{"lineNumber":40,"author":{"gitId":"tlyi"},"content":"    protected static final String MESSAGE_ERROR_NO_ITEM_NUM \u003d \"Please input the item number!\";","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"tlyi"},"content":"    protected static final String MESSAGE_ERROR_INVALID_ITEM_NUM \u003d \"Please input the item number as a number! E.g 1\";","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"tlyi"},"content":"    protected static final String MESSAGE_ERROR_NOT_A_NUMBER \u003d \"Please input a number!\";","lastModifiedDate":"2021-10-11"},{"lineNumber":43,"author":{"gitId":"tlyi"},"content":"    protected static final String MESSAGE_ERROR_TOO_MANY_DELIMITERS \u003d \"Please do not use the character \"","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"tlyi"},"content":"            + Ui.QUOTATION + Command.COMMAND_PREFIX_DELIMITER + Ui.QUOTATION","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"tlyi"},"content":"            + \" in your input other than to specify parameters!\";","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"tlyi"},"content":"    protected static final String FILE_TEXT_DELIMITER \u003d \"|\";","lastModifiedDate":"2021-10-13"},{"lineNumber":47,"author":{"gitId":"tlyi"},"content":"    protected static final String MESSAGE_ERROR_ILLEGAL_CHARACTER \u003d \"Please do not use the character \"","lastModifiedDate":"2021-10-13"},{"lineNumber":48,"author":{"gitId":"tlyi"},"content":"            + Ui.QUOTATION + FILE_TEXT_DELIMITER + Ui.QUOTATION","lastModifiedDate":"2021-10-13"},{"lineNumber":49,"author":{"gitId":"tlyi"},"content":"            + \" in your input!\";","lastModifiedDate":"2021-10-13"},{"lineNumber":50,"author":{"gitId":"tryyang2001"},"content":"    public static final int PARAMS_ALL_INDICES \u003d 0;","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":52,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":53,"author":{"gitId":"tlyi"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":54,"author":{"gitId":"tlyi"},"content":"     * Returns the correct command to be executed depending on user input.","lastModifiedDate":"2021-10-10"},{"lineNumber":55,"author":{"gitId":"tlyi"},"content":"     * Command words are case-insensitive.","lastModifiedDate":"2021-10-10"},{"lineNumber":56,"author":{"gitId":"tlyi"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":57,"author":{"gitId":"tlyi"},"content":"     * @param input Raw user input string","lastModifiedDate":"2021-10-10"},{"lineNumber":58,"author":{"gitId":"tlyi"},"content":"     * @return Command class representing the correct command to be executed","lastModifiedDate":"2021-10-10"},{"lineNumber":59,"author":{"gitId":"tlyi"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":60,"author":{"gitId":"tlyi"},"content":"    public Command parseCommand(String input) {","lastModifiedDate":"2021-10-10"},{"lineNumber":61,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":62,"author":{"gitId":"tlyi"},"content":"        if (hasTextFileDelimiter(input)) {","lastModifiedDate":"2021-10-13"},{"lineNumber":63,"author":{"gitId":"tlyi"},"content":"            return new InvalidCommand(MESSAGE_ERROR_ILLEGAL_CHARACTER);","lastModifiedDate":"2021-10-13"},{"lineNumber":64,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":65,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":66,"author":{"gitId":"tlyi"},"content":"        final String[] commandAndParams \u003d splitInputIntoCommandAndParams(input);","lastModifiedDate":"2021-10-10"},{"lineNumber":67,"author":{"gitId":"tlyi"},"content":"        final String commandWord \u003d commandAndParams[0].toLowerCase(); //case-insensitive (all lower case)","lastModifiedDate":"2021-10-10"},{"lineNumber":68,"author":{"gitId":"tlyi"},"content":"        final String params \u003d commandAndParams[1];","lastModifiedDate":"2021-10-10"},{"lineNumber":69,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":70,"author":{"gitId":"tlyi"},"content":"        switch (commandWord) {","lastModifiedDate":"2021-10-10"},{"lineNumber":71,"author":{"gitId":"tlyi"},"content":"        case Command.COMMAND_WORD_ADD:","lastModifiedDate":"2021-10-10"},{"lineNumber":72,"author":{"gitId":"tlyi"},"content":"            return parseAddItems(params);","lastModifiedDate":"2021-10-10"},{"lineNumber":73,"author":{"gitId":"tlyi"},"content":"        case Command.COMMAND_WORD_DELETE:","lastModifiedDate":"2021-10-10"},{"lineNumber":74,"author":{"gitId":"tlyi"},"content":"            return parseDeleteItems(params);","lastModifiedDate":"2021-10-10"},{"lineNumber":75,"author":{"gitId":"tlyi"},"content":"        case Command.COMMAND_WORD_VIEW:","lastModifiedDate":"2021-10-10"},{"lineNumber":76,"author":{"gitId":"tlyi"},"content":"            return parseViewItems(params);","lastModifiedDate":"2021-10-10"},{"lineNumber":77,"author":{"gitId":"tlyi"},"content":"        case Command.COMMAND_WORD_BMI:","lastModifiedDate":"2021-10-10"},{"lineNumber":78,"author":{"gitId":"tlyi"},"content":"            return parseBmi(params);","lastModifiedDate":"2021-10-10"},{"lineNumber":79,"author":{"gitId":"tlyi"},"content":"        case Command.COMMAND_WORD_PROFILE:","lastModifiedDate":"2021-10-13"},{"lineNumber":80,"author":{"gitId":"tlyi"},"content":"            return parseProfile(params);","lastModifiedDate":"2021-10-13"},{"lineNumber":81,"author":{"gitId":"tlyi"},"content":"        case ChangeNameCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-10"},{"lineNumber":82,"author":{"gitId":"tlyi"},"content":"            return new ChangeNameCommand(params);","lastModifiedDate":"2021-10-10"},{"lineNumber":83,"author":{"gitId":"tlyi"},"content":"        case ChangeHeightCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-10"},{"lineNumber":84,"author":{"gitId":"tlyi"},"content":"            return parseChangeHeight(params);","lastModifiedDate":"2021-10-10"},{"lineNumber":85,"author":{"gitId":"tlyi"},"content":"        case ChangeWeightCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-10"},{"lineNumber":86,"author":{"gitId":"tlyi"},"content":"            return parseChangeWeight(params);","lastModifiedDate":"2021-10-10"},{"lineNumber":87,"author":{"gitId":"tlyi"},"content":"        case SetGoalCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-10"},{"lineNumber":88,"author":{"gitId":"tlyi"},"content":"            return parseSetGoal(params);","lastModifiedDate":"2021-10-10"},{"lineNumber":89,"author":{"gitId":"tlyi"},"content":"        case OverviewCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-10"},{"lineNumber":90,"author":{"gitId":"tlyi"},"content":"            return new OverviewCommand();","lastModifiedDate":"2021-10-10"},{"lineNumber":91,"author":{"gitId":"tlyi"},"content":"        case ByeCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-10"},{"lineNumber":92,"author":{"gitId":"tlyi"},"content":"            return new ByeCommand();","lastModifiedDate":"2021-10-10"},{"lineNumber":93,"author":{"gitId":"tlyi"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-10"},{"lineNumber":94,"author":{"gitId":"tlyi"},"content":"            return new HelpCommand();","lastModifiedDate":"2021-10-10"},{"lineNumber":95,"author":{"gitId":"tlyi"},"content":"        default:","lastModifiedDate":"2021-10-10"},{"lineNumber":96,"author":{"gitId":"tlyi"},"content":"            return new InvalidCommand(MESSAGE_ERROR_COMMAND_DOES_NOT_EXIST);","lastModifiedDate":"2021-10-10"},{"lineNumber":97,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":98,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":99,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":100,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":101,"author":{"gitId":"tlyi"},"content":"    private Command parseAddItems(String params) {","lastModifiedDate":"2021-10-10"},{"lineNumber":102,"author":{"gitId":"tlyi"},"content":"        if (hasExtraDelimiters(params, Command.COMMAND_ADD_EXPECTED_NUM_DELIMITERS)) {","lastModifiedDate":"2021-10-12"},{"lineNumber":103,"author":{"gitId":"tlyi"},"content":"            return new InvalidCommand(MESSAGE_ERROR_TOO_MANY_DELIMITERS);","lastModifiedDate":"2021-10-12"},{"lineNumber":104,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":105,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":106,"author":{"gitId":"tlyi"},"content":"        try {","lastModifiedDate":"2021-10-10"},{"lineNumber":107,"author":{"gitId":"tlyi"},"content":"            final String itemTypePrefix \u003d extractItemTypePrefix(params);","lastModifiedDate":"2021-10-10"},{"lineNumber":108,"author":{"gitId":"tlyi"},"content":"            final String description \u003d extractItemDescription(params, itemTypePrefix);","lastModifiedDate":"2021-10-10"},{"lineNumber":109,"author":{"gitId":"tlyi"},"content":"            final int calories \u003d extractItemCalories(params);","lastModifiedDate":"2021-10-10"},{"lineNumber":110,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":111,"author":{"gitId":"tlyi"},"content":"            if (itemTypePrefix.equals(Command.COMMAND_PREFIX_EXERCISE)) {","lastModifiedDate":"2021-10-10"},{"lineNumber":112,"author":{"gitId":"tlyi"},"content":"                return new AddExerciseCommand(description, calories);","lastModifiedDate":"2021-10-10"},{"lineNumber":113,"author":{"gitId":"tlyi"},"content":"            } else {","lastModifiedDate":"2021-10-10"},{"lineNumber":114,"author":{"gitId":"tlyi"},"content":"                return new AddFoodCommand(description, calories);","lastModifiedDate":"2021-10-10"},{"lineNumber":115,"author":{"gitId":"tlyi"},"content":"            }","lastModifiedDate":"2021-10-10"},{"lineNumber":116,"author":{"gitId":"tlyi"},"content":"        } catch (ItemNotSpecifiedException e) {","lastModifiedDate":"2021-10-10"},{"lineNumber":117,"author":{"gitId":"tlyi"},"content":"            return new InvalidCommand(String.format(Command.MESSAGE_ERROR_ITEM_NOT_SPECIFIED,","lastModifiedDate":"2021-10-10"},{"lineNumber":118,"author":{"gitId":"tlyi"},"content":"                    AddFoodCommand.MESSAGE_COMMAND_FORMAT,","lastModifiedDate":"2021-10-10"},{"lineNumber":119,"author":{"gitId":"tlyi"},"content":"                    AddExerciseCommand.MESSAGE_COMMAND_FORMAT));","lastModifiedDate":"2021-10-10"},{"lineNumber":120,"author":{"gitId":"tlyi"},"content":"        } catch (ParamInvalidException e) {","lastModifiedDate":"2021-10-10"},{"lineNumber":121,"author":{"gitId":"tlyi"},"content":"            return new InvalidCommand(e.getMessage());","lastModifiedDate":"2021-10-10"},{"lineNumber":122,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":123,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":124,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":125,"author":{"gitId":"tlyi"},"content":"    private Command parseDeleteItems(String params) {","lastModifiedDate":"2021-10-10"},{"lineNumber":126,"author":{"gitId":"tlyi"},"content":"        try {","lastModifiedDate":"2021-10-10"},{"lineNumber":127,"author":{"gitId":"tlyi"},"content":"            final String itemTypePrefix \u003d extractItemTypePrefix(params);","lastModifiedDate":"2021-10-10"},{"lineNumber":128,"author":{"gitId":"tlyi"},"content":"            final String description \u003d extractItemDescription(params, itemTypePrefix).split(\" \")[0];","lastModifiedDate":"2021-10-10"},{"lineNumber":129,"author":{"gitId":"xingjie99"},"content":"            final int itemIndex;","lastModifiedDate":"2021-10-11"},{"lineNumber":130,"author":{"gitId":"tryyang2001"},"content":"            boolean isClear \u003d description.trim().equalsIgnoreCase(Command.COMMAND_WORD_DELETE_ALL);","lastModifiedDate":"2021-10-12"},{"lineNumber":131,"author":{"gitId":"tlyi"},"content":"            if (itemTypePrefix.equals(Command.COMMAND_PREFIX_EXERCISE)) {","lastModifiedDate":"2021-10-10"},{"lineNumber":132,"author":{"gitId":"xingjie99"},"content":"                if (isClear) {","lastModifiedDate":"2021-10-11"},{"lineNumber":133,"author":{"gitId":"tryyang2001"},"content":"                    return new DeleteExerciseCommand(PARAMS_ALL_INDICES);","lastModifiedDate":"2021-10-12"},{"lineNumber":134,"author":{"gitId":"xingjie99"},"content":"                }","lastModifiedDate":"2021-10-11"},{"lineNumber":135,"author":{"gitId":"xingjie99"},"content":"                itemIndex \u003d convertItemNumToItemIndex(Integer.parseInt(description.trim()));","lastModifiedDate":"2021-10-11"},{"lineNumber":136,"author":{"gitId":"tlyi"},"content":"                return new DeleteExerciseCommand(itemIndex);","lastModifiedDate":"2021-10-11"},{"lineNumber":137,"author":{"gitId":"tlyi"},"content":"            } else {","lastModifiedDate":"2021-10-10"},{"lineNumber":138,"author":{"gitId":"xingjie99"},"content":"                if (isClear) {","lastModifiedDate":"2021-10-11"},{"lineNumber":139,"author":{"gitId":"tryyang2001"},"content":"                    return new DeleteFoodCommand(PARAMS_ALL_INDICES);","lastModifiedDate":"2021-10-12"},{"lineNumber":140,"author":{"gitId":"xingjie99"},"content":"                }","lastModifiedDate":"2021-10-11"},{"lineNumber":141,"author":{"gitId":"xingjie99"},"content":"                itemIndex \u003d convertItemNumToItemIndex(Integer.parseInt(description.trim()));","lastModifiedDate":"2021-10-11"},{"lineNumber":142,"author":{"gitId":"tlyi"},"content":"                return new DeleteFoodCommand(itemIndex);","lastModifiedDate":"2021-10-11"},{"lineNumber":143,"author":{"gitId":"tlyi"},"content":"            }","lastModifiedDate":"2021-10-10"},{"lineNumber":144,"author":{"gitId":"tlyi"},"content":"        } catch (ItemNotSpecifiedException e) {","lastModifiedDate":"2021-10-10"},{"lineNumber":145,"author":{"gitId":"tlyi"},"content":"            return new InvalidCommand(String.format(Command.MESSAGE_ERROR_ITEM_NOT_SPECIFIED,","lastModifiedDate":"2021-10-10"},{"lineNumber":146,"author":{"gitId":"tlyi"},"content":"                    DeleteFoodCommand.MESSAGE_COMMAND_FORMAT,","lastModifiedDate":"2021-10-10"},{"lineNumber":147,"author":{"gitId":"tlyi"},"content":"                    DeleteExerciseCommand.MESSAGE_COMMAND_FORMAT));","lastModifiedDate":"2021-10-10"},{"lineNumber":148,"author":{"gitId":"tlyi"},"content":"        } catch (ParamInvalidException e) {","lastModifiedDate":"2021-10-10"},{"lineNumber":149,"author":{"gitId":"tlyi"},"content":"            return new InvalidCommand(MESSAGE_ERROR_NO_ITEM_NUM);","lastModifiedDate":"2021-10-10"},{"lineNumber":150,"author":{"gitId":"tlyi"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-10-10"},{"lineNumber":151,"author":{"gitId":"tlyi"},"content":"            return new InvalidCommand(MESSAGE_ERROR_INVALID_ITEM_NUM);","lastModifiedDate":"2021-10-10"},{"lineNumber":152,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":153,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":154,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":155,"author":{"gitId":"tlyi"},"content":"    private Command parseViewItems(String params) {","lastModifiedDate":"2021-10-10"},{"lineNumber":156,"author":{"gitId":"tlyi"},"content":"        if (params.equals(EMPTY)) {","lastModifiedDate":"2021-10-10"},{"lineNumber":157,"author":{"gitId":"tlyi"},"content":"            return new ViewCommand();","lastModifiedDate":"2021-10-10"},{"lineNumber":158,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":159,"author":{"gitId":"tlyi"},"content":"        try {","lastModifiedDate":"2021-10-10"},{"lineNumber":160,"author":{"gitId":"tlyi"},"content":"            final String itemTypePrefix \u003d extractItemTypePrefix(params);","lastModifiedDate":"2021-10-10"},{"lineNumber":161,"author":{"gitId":"tlyi"},"content":"            if (itemTypePrefix.equals(Command.COMMAND_PREFIX_EXERCISE)) {","lastModifiedDate":"2021-10-10"},{"lineNumber":162,"author":{"gitId":"tlyi"},"content":"                return new ViewExerciseListCommand();","lastModifiedDate":"2021-10-10"},{"lineNumber":163,"author":{"gitId":"tlyi"},"content":"            } else {","lastModifiedDate":"2021-10-10"},{"lineNumber":164,"author":{"gitId":"tlyi"},"content":"                return new ViewFoodListCommand();","lastModifiedDate":"2021-10-10"},{"lineNumber":165,"author":{"gitId":"tlyi"},"content":"            }","lastModifiedDate":"2021-10-10"},{"lineNumber":166,"author":{"gitId":"tlyi"},"content":"        } catch (ItemNotSpecifiedException e) {","lastModifiedDate":"2021-10-10"},{"lineNumber":167,"author":{"gitId":"tlyi"},"content":"            return new InvalidCommand(String.format(Command.MESSAGE_ERROR_ITEM_NOT_SPECIFIED,","lastModifiedDate":"2021-10-10"},{"lineNumber":168,"author":{"gitId":"tlyi"},"content":"                    ViewFoodListCommand.MESSAGE_COMMAND_FORMAT,","lastModifiedDate":"2021-10-10"},{"lineNumber":169,"author":{"gitId":"tlyi"},"content":"                    ViewExerciseListCommand.MESSAGE_COMMAND_FORMAT));","lastModifiedDate":"2021-10-10"},{"lineNumber":170,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":171,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":172,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":173,"author":{"gitId":"tlyi"},"content":"    private Command parseBmi(String params) {","lastModifiedDate":"2021-10-10"},{"lineNumber":174,"author":{"gitId":"tlyi"},"content":"        if (params.equals(EMPTY)) { //no additional parameters, assumed to be bmi from current profile","lastModifiedDate":"2021-10-10"},{"lineNumber":175,"author":{"gitId":"tlyi"},"content":"            return new CalculateBmiWithProfileCommand();","lastModifiedDate":"2021-10-10"},{"lineNumber":176,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":177,"author":{"gitId":"tlyi"},"content":"        if (!hasRequiredParams(params,","lastModifiedDate":"2021-10-12"},{"lineNumber":178,"author":{"gitId":"tlyi"},"content":"                Command.COMMAND_PREFIX_HEIGHT,","lastModifiedDate":"2021-10-10"},{"lineNumber":179,"author":{"gitId":"tlyi"},"content":"                Command.COMMAND_PREFIX_WEIGHT)) {","lastModifiedDate":"2021-10-10"},{"lineNumber":180,"author":{"gitId":"tlyi"},"content":"            return new InvalidCommand(CalculateBmiCommand.MESSAGE_INVALID_COMMAND_FORMAT);","lastModifiedDate":"2021-10-12"},{"lineNumber":181,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":182,"author":{"gitId":"tlyi"},"content":"        if (hasExtraDelimiters(params, Command.COMMAND_BMI_EXPECTED_NUM_DELIMITERS)) {","lastModifiedDate":"2021-10-12"},{"lineNumber":183,"author":{"gitId":"tlyi"},"content":"            return new InvalidCommand(MESSAGE_ERROR_TOO_MANY_DELIMITERS);","lastModifiedDate":"2021-10-12"},{"lineNumber":184,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":185,"author":{"gitId":"tlyi"},"content":"        try {","lastModifiedDate":"2021-10-10"},{"lineNumber":186,"author":{"gitId":"tlyi"},"content":"            final double height \u003d extractHeight(params);","lastModifiedDate":"2021-10-10"},{"lineNumber":187,"author":{"gitId":"tlyi"},"content":"            final double weight \u003d extractWeight(params);","lastModifiedDate":"2021-10-10"},{"lineNumber":188,"author":{"gitId":"tlyi"},"content":"            return new CalculateBmiCommand(height, weight);","lastModifiedDate":"2021-10-10"},{"lineNumber":189,"author":{"gitId":"tlyi"},"content":"        } catch (ParamInvalidException e) {","lastModifiedDate":"2021-10-10"},{"lineNumber":190,"author":{"gitId":"tlyi"},"content":"            return new InvalidCommand(e.getMessage());","lastModifiedDate":"2021-10-10"},{"lineNumber":191,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":192,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":193,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":194,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":195,"author":{"gitId":"tlyi"},"content":"    private Command parseProfile(String params) {","lastModifiedDate":"2021-10-13"},{"lineNumber":196,"author":{"gitId":"tlyi"},"content":"        if (params.isEmpty()) { //no additional parameters, assumed to be view profile command","lastModifiedDate":"2021-10-13"},{"lineNumber":197,"author":{"gitId":"tlyi"},"content":"            return new ProfileCommand();","lastModifiedDate":"2021-10-12"},{"lineNumber":198,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":199,"author":{"gitId":"tttyyzzz"},"content":"        if (hasExtraDelimiters(params, ProfileCreateCommand.COMMAND_EXPECTED_NUM_DELIMITERS)) {","lastModifiedDate":"2021-10-13"},{"lineNumber":200,"author":{"gitId":"tttyyzzz"},"content":"            return new InvalidCommand(MESSAGE_ERROR_TOO_MANY_DELIMITERS);","lastModifiedDate":"2021-10-13"},{"lineNumber":201,"author":{"gitId":"tttyyzzz"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":202,"author":{"gitId":"tlyi"},"content":"        if (!hasRequiredParams(params,","lastModifiedDate":"2021-10-10"},{"lineNumber":203,"author":{"gitId":"tlyi"},"content":"                Command.COMMAND_PREFIX_NAME,","lastModifiedDate":"2021-10-10"},{"lineNumber":204,"author":{"gitId":"tlyi"},"content":"                Command.COMMAND_PREFIX_HEIGHT,","lastModifiedDate":"2021-10-10"},{"lineNumber":205,"author":{"gitId":"tlyi"},"content":"                Command.COMMAND_PREFIX_WEIGHT)) {","lastModifiedDate":"2021-10-10"},{"lineNumber":206,"author":{"gitId":"tlyi"},"content":"            return new InvalidCommand(ProfileCreateCommand.MESSAGE_INVALID_COMMAND_FORMAT);","lastModifiedDate":"2021-10-12"},{"lineNumber":207,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":208,"author":{"gitId":"tlyi"},"content":"        try {","lastModifiedDate":"2021-10-10"},{"lineNumber":209,"author":{"gitId":"tlyi"},"content":"            final String name \u003d extractProfileName(params);","lastModifiedDate":"2021-10-10"},{"lineNumber":210,"author":{"gitId":"tlyi"},"content":"            final double height \u003d extractHeight(params);","lastModifiedDate":"2021-10-10"},{"lineNumber":211,"author":{"gitId":"tlyi"},"content":"            final double weight \u003d extractWeight(params);","lastModifiedDate":"2021-10-10"},{"lineNumber":212,"author":{"gitId":"tlyi"},"content":"            return new ProfileCreateCommand(name, height, weight);","lastModifiedDate":"2021-10-12"},{"lineNumber":213,"author":{"gitId":"tlyi"},"content":"        } catch (ParamInvalidException e) {","lastModifiedDate":"2021-10-10"},{"lineNumber":214,"author":{"gitId":"tlyi"},"content":"            return new InvalidCommand(e.getMessage());","lastModifiedDate":"2021-10-10"},{"lineNumber":215,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":216,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":217,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":218,"author":{"gitId":"tlyi"},"content":"    private Command parseChangeHeight(String params) {","lastModifiedDate":"2021-10-13"},{"lineNumber":219,"author":{"gitId":"tlyi"},"content":"        try {","lastModifiedDate":"2021-10-13"},{"lineNumber":220,"author":{"gitId":"tlyi"},"content":"            final double height \u003d Double.parseDouble(params);","lastModifiedDate":"2021-10-13"},{"lineNumber":221,"author":{"gitId":"tlyi"},"content":"            return new ChangeHeightCommand(height);","lastModifiedDate":"2021-10-13"},{"lineNumber":222,"author":{"gitId":"tlyi"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-10-13"},{"lineNumber":223,"author":{"gitId":"tlyi"},"content":"            return new InvalidCommand(MESSAGE_ERROR_NOT_A_NUMBER);","lastModifiedDate":"2021-10-13"},{"lineNumber":224,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":225,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":226,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":227,"author":{"gitId":"tlyi"},"content":"    private Command parseChangeWeight(String params) {","lastModifiedDate":"2021-10-13"},{"lineNumber":228,"author":{"gitId":"tlyi"},"content":"        try {","lastModifiedDate":"2021-10-13"},{"lineNumber":229,"author":{"gitId":"tlyi"},"content":"            final double weight \u003d Double.parseDouble(params);","lastModifiedDate":"2021-10-13"},{"lineNumber":230,"author":{"gitId":"tlyi"},"content":"            return new ChangeWeightCommand(weight);","lastModifiedDate":"2021-10-13"},{"lineNumber":231,"author":{"gitId":"tlyi"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-10-13"},{"lineNumber":232,"author":{"gitId":"tlyi"},"content":"            return new InvalidCommand(MESSAGE_ERROR_NOT_A_NUMBER);","lastModifiedDate":"2021-10-13"},{"lineNumber":233,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":234,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":235,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":236,"author":{"gitId":"tlyi"},"content":"    private Command parseSetGoal(String params) {","lastModifiedDate":"2021-10-10"},{"lineNumber":237,"author":{"gitId":"tlyi"},"content":"        try {","lastModifiedDate":"2021-10-10"},{"lineNumber":238,"author":{"gitId":"tlyi"},"content":"            final int goal \u003d Integer.parseInt(params);","lastModifiedDate":"2021-10-11"},{"lineNumber":239,"author":{"gitId":"tlyi"},"content":"            return new SetGoalCommand(goal);","lastModifiedDate":"2021-10-10"},{"lineNumber":240,"author":{"gitId":"tlyi"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-10-10"},{"lineNumber":241,"author":{"gitId":"tlyi"},"content":"            return new InvalidCommand(MESSAGE_ERROR_NOT_A_NUMBER);","lastModifiedDate":"2021-10-10"},{"lineNumber":242,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":243,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":244,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":245,"author":{"gitId":"tlyi"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":246,"author":{"gitId":"tlyi"},"content":"     * Returns a String array where 0th index is command string and 1st index is the remaining parameters.","lastModifiedDate":"2021-10-10"},{"lineNumber":247,"author":{"gitId":"tlyi"},"content":"     * Command string and parameter string is assumed to be separated by the first \" \" in input.","lastModifiedDate":"2021-10-10"},{"lineNumber":248,"author":{"gitId":"tlyi"},"content":"     * If no parameters are provided in the input, 1st index will be set to EMPTY.","lastModifiedDate":"2021-10-10"},{"lineNumber":249,"author":{"gitId":"tlyi"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":250,"author":{"gitId":"tlyi"},"content":"     * @param input Raw user input string","lastModifiedDate":"2021-10-10"},{"lineNumber":251,"author":{"gitId":"tlyi"},"content":"     * @return String array [command, parameters]","lastModifiedDate":"2021-10-10"},{"lineNumber":252,"author":{"gitId":"tlyi"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":253,"author":{"gitId":"tlyi"},"content":"    private String[] splitInputIntoCommandAndParams(String input) {","lastModifiedDate":"2021-10-10"},{"lineNumber":254,"author":{"gitId":"tlyi"},"content":"        String[] commandAndParams \u003d new String[2];","lastModifiedDate":"2021-10-10"},{"lineNumber":255,"author":{"gitId":"tlyi"},"content":"        final String[] inputSplit \u003d input.trim().split(\" \", 2);","lastModifiedDate":"2021-10-10"},{"lineNumber":256,"author":{"gitId":"tlyi"},"content":"        //command string","lastModifiedDate":"2021-10-10"},{"lineNumber":257,"author":{"gitId":"tlyi"},"content":"        commandAndParams[0] \u003d inputSplit[0];","lastModifiedDate":"2021-10-10"},{"lineNumber":258,"author":{"gitId":"tlyi"},"content":"        //param string; if not given, set to EMPTY for error handling","lastModifiedDate":"2021-10-10"},{"lineNumber":259,"author":{"gitId":"tlyi"},"content":"        commandAndParams[1] \u003d (inputSplit.length \u003d\u003d 2) ? inputSplit[1].trim() : EMPTY;","lastModifiedDate":"2021-10-13"},{"lineNumber":260,"author":{"gitId":"tlyi"},"content":"        return commandAndParams;","lastModifiedDate":"2021-10-10"},{"lineNumber":261,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":262,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":263,"author":{"gitId":"tlyi"},"content":"    private boolean hasRequiredParams(String params, String... prefixes) {","lastModifiedDate":"2021-10-10"},{"lineNumber":264,"author":{"gitId":"tlyi"},"content":"        for (String prefix : prefixes) {","lastModifiedDate":"2021-10-10"},{"lineNumber":265,"author":{"gitId":"tlyi"},"content":"            if (!params.toLowerCase().contains(prefix + Command.COMMAND_PREFIX_DELIMITER)) {","lastModifiedDate":"2021-10-10"},{"lineNumber":266,"author":{"gitId":"tlyi"},"content":"                return false;","lastModifiedDate":"2021-10-10"},{"lineNumber":267,"author":{"gitId":"tlyi"},"content":"            }","lastModifiedDate":"2021-10-10"},{"lineNumber":268,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":269,"author":{"gitId":"tlyi"},"content":"        return true;","lastModifiedDate":"2021-10-10"},{"lineNumber":270,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":271,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":272,"author":{"gitId":"tlyi"},"content":"    private String extractItemTypePrefix(String params) throws ItemNotSpecifiedException {","lastModifiedDate":"2021-10-10"},{"lineNumber":273,"author":{"gitId":"tlyi"},"content":"        boolean isExercise \u003d","lastModifiedDate":"2021-10-10"},{"lineNumber":274,"author":{"gitId":"tlyi"},"content":"                params.toLowerCase().contains(Command.COMMAND_PREFIX_EXERCISE","lastModifiedDate":"2021-10-10"},{"lineNumber":275,"author":{"gitId":"tlyi"},"content":"                        + Command.COMMAND_PREFIX_DELIMITER);","lastModifiedDate":"2021-10-10"},{"lineNumber":276,"author":{"gitId":"tlyi"},"content":"        boolean isFood \u003d","lastModifiedDate":"2021-10-10"},{"lineNumber":277,"author":{"gitId":"tlyi"},"content":"                params.toLowerCase().contains(Command.COMMAND_PREFIX_FOOD","lastModifiedDate":"2021-10-10"},{"lineNumber":278,"author":{"gitId":"tlyi"},"content":"                        + Command.COMMAND_PREFIX_DELIMITER);","lastModifiedDate":"2021-10-10"},{"lineNumber":279,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":280,"author":{"gitId":"tlyi"},"content":"        if (isExercise \u0026\u0026 isFood || !isExercise \u0026\u0026 !isFood) {","lastModifiedDate":"2021-10-10"},{"lineNumber":281,"author":{"gitId":"tlyi"},"content":"            throw new ItemNotSpecifiedException(); //cannot be both and cannot be neither","lastModifiedDate":"2021-10-10"},{"lineNumber":282,"author":{"gitId":"tlyi"},"content":"        } else if (isExercise) {","lastModifiedDate":"2021-10-10"},{"lineNumber":283,"author":{"gitId":"tlyi"},"content":"            return Command.COMMAND_PREFIX_EXERCISE;","lastModifiedDate":"2021-10-10"},{"lineNumber":284,"author":{"gitId":"tlyi"},"content":"        } else {","lastModifiedDate":"2021-10-10"},{"lineNumber":285,"author":{"gitId":"tlyi"},"content":"            return Command.COMMAND_PREFIX_FOOD;","lastModifiedDate":"2021-10-10"},{"lineNumber":286,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":287,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":288,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":289,"author":{"gitId":"tlyi"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":290,"author":{"gitId":"tlyi"},"content":"     * Extract only the parameter required so that any additional parameter","lastModifiedDate":"2021-10-11"},{"lineNumber":291,"author":{"gitId":"tlyi"},"content":"     * specified behind this string (if any) is removed.","lastModifiedDate":"2021-10-11"},{"lineNumber":292,"author":{"gitId":"tlyi"},"content":"     * E.g. \"John Doe w/20\" is returned as \"John Doe\".","lastModifiedDate":"2021-10-11"},{"lineNumber":293,"author":{"gitId":"tlyi"},"content":"     * NOTE: This is why users are not allowed to include the character \"/\" in their inputs","lastModifiedDate":"2021-10-12"},{"lineNumber":294,"author":{"gitId":"tlyi"},"content":"     * other than to specify a parameter.","lastModifiedDate":"2021-10-12"},{"lineNumber":295,"author":{"gitId":"tlyi"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":296,"author":{"gitId":"tlyi"},"content":"    private String extractRelevantParameter(String params) {","lastModifiedDate":"2021-10-10"},{"lineNumber":297,"author":{"gitId":"tlyi"},"content":"        if (params.contains(Command.COMMAND_PREFIX_DELIMITER)) {","lastModifiedDate":"2021-10-10"},{"lineNumber":298,"author":{"gitId":"tlyi"},"content":"            return params.substring(0, params.indexOf(Command.COMMAND_PREFIX_DELIMITER) - 1).trim();","lastModifiedDate":"2021-10-10"},{"lineNumber":299,"author":{"gitId":"tlyi"},"content":"        } else {","lastModifiedDate":"2021-10-10"},{"lineNumber":300,"author":{"gitId":"tlyi"},"content":"            return params;","lastModifiedDate":"2021-10-10"},{"lineNumber":301,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":302,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":303,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":304,"author":{"gitId":"tlyi"},"content":"    private String extractItemDescription(String params, String prefix) throws ParamInvalidException {","lastModifiedDate":"2021-10-10"},{"lineNumber":305,"author":{"gitId":"tlyi"},"content":"        try {","lastModifiedDate":"2021-10-10"},{"lineNumber":306,"author":{"gitId":"tlyi"},"content":"            String stringAfterPrefix \u003d params.split(prefix + Command.COMMAND_PREFIX_DELIMITER, 2)[1];","lastModifiedDate":"2021-10-11"},{"lineNumber":307,"author":{"gitId":"tlyi"},"content":"            String description \u003d extractRelevantParameter(stringAfterPrefix);","lastModifiedDate":"2021-10-10"},{"lineNumber":308,"author":{"gitId":"tlyi"},"content":"            if (description.equals(EMPTY)) {","lastModifiedDate":"2021-10-10"},{"lineNumber":309,"author":{"gitId":"tlyi"},"content":"                throw new ParamInvalidException(MESSAGE_ERROR_NO_DESCRIPTION);","lastModifiedDate":"2021-10-10"},{"lineNumber":310,"author":{"gitId":"tlyi"},"content":"            }","lastModifiedDate":"2021-10-10"},{"lineNumber":311,"author":{"gitId":"tlyi"},"content":"            return description;","lastModifiedDate":"2021-10-10"},{"lineNumber":312,"author":{"gitId":"tlyi"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-10-10"},{"lineNumber":313,"author":{"gitId":"tlyi"},"content":"            throw new ParamInvalidException(MESSAGE_ERROR_NO_DESCRIPTION);","lastModifiedDate":"2021-10-10"},{"lineNumber":314,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":315,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":316,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":317,"author":{"gitId":"tlyi"},"content":"    private int extractItemCalories(String params) throws ParamInvalidException {","lastModifiedDate":"2021-10-10"},{"lineNumber":318,"author":{"gitId":"tlyi"},"content":"        try {","lastModifiedDate":"2021-10-10"},{"lineNumber":319,"author":{"gitId":"tlyi"},"content":"            if (params.contains(Command.COMMAND_PREFIX_CALORIES + Command.COMMAND_PREFIX_DELIMITER)) {","lastModifiedDate":"2021-10-10"},{"lineNumber":320,"author":{"gitId":"tlyi"},"content":"                String stringAfterPrefix \u003d","lastModifiedDate":"2021-10-10"},{"lineNumber":321,"author":{"gitId":"tlyi"},"content":"                        params.split(Command.COMMAND_PREFIX_CALORIES","lastModifiedDate":"2021-10-11"},{"lineNumber":322,"author":{"gitId":"tlyi"},"content":"                                + Command.COMMAND_PREFIX_DELIMITER, 2)[1];","lastModifiedDate":"2021-10-11"},{"lineNumber":323,"author":{"gitId":"tlyi"},"content":"                String caloriesString \u003d stringAfterPrefix.split(\" \", 2)[0];","lastModifiedDate":"2021-10-10"},{"lineNumber":324,"author":{"gitId":"tlyi"},"content":"                return Integer.parseInt(caloriesString);","lastModifiedDate":"2021-10-10"},{"lineNumber":325,"author":{"gitId":"tlyi"},"content":"            } else {","lastModifiedDate":"2021-10-10"},{"lineNumber":326,"author":{"gitId":"tlyi"},"content":"                throw new ParamInvalidException(MESSAGE_ERROR_NO_CALORIES_INFO);","lastModifiedDate":"2021-10-10"},{"lineNumber":327,"author":{"gitId":"tlyi"},"content":"            }","lastModifiedDate":"2021-10-10"},{"lineNumber":328,"author":{"gitId":"tlyi"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-10-10"},{"lineNumber":329,"author":{"gitId":"tlyi"},"content":"            throw new ParamInvalidException(MESSAGE_ERROR_INVALID_CALORIES_INFO);","lastModifiedDate":"2021-10-10"},{"lineNumber":330,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":331,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":332,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":333,"author":{"gitId":"tlyi"},"content":"    private double extractHeight(String params) throws ParamInvalidException {","lastModifiedDate":"2021-10-10"},{"lineNumber":334,"author":{"gitId":"tlyi"},"content":"        try {","lastModifiedDate":"2021-10-10"},{"lineNumber":335,"author":{"gitId":"tlyi"},"content":"            String stringAfterPrefix \u003d","lastModifiedDate":"2021-10-10"},{"lineNumber":336,"author":{"gitId":"tlyi"},"content":"                    params.split(Command.COMMAND_PREFIX_HEIGHT","lastModifiedDate":"2021-10-11"},{"lineNumber":337,"author":{"gitId":"tlyi"},"content":"                            + Command.COMMAND_PREFIX_DELIMITER, 2)[1];","lastModifiedDate":"2021-10-11"},{"lineNumber":338,"author":{"gitId":"tlyi"},"content":"            String doubleString \u003d stringAfterPrefix.split(\" \", 2)[0];","lastModifiedDate":"2021-10-10"},{"lineNumber":339,"author":{"gitId":"tlyi"},"content":"            return Double.parseDouble(doubleString);","lastModifiedDate":"2021-10-10"},{"lineNumber":340,"author":{"gitId":"tlyi"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-10-10"},{"lineNumber":341,"author":{"gitId":"tlyi"},"content":"            throw new ParamInvalidException(MESSAGE_ERROR_NO_HEIGHT);","lastModifiedDate":"2021-10-10"},{"lineNumber":342,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":343,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":344,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":345,"author":{"gitId":"tlyi"},"content":"    private double extractWeight(String params) throws ParamInvalidException {","lastModifiedDate":"2021-10-10"},{"lineNumber":346,"author":{"gitId":"tlyi"},"content":"        try {","lastModifiedDate":"2021-10-10"},{"lineNumber":347,"author":{"gitId":"tlyi"},"content":"            String stringAfterPrefix \u003d","lastModifiedDate":"2021-10-10"},{"lineNumber":348,"author":{"gitId":"tlyi"},"content":"                    params.split(Command.COMMAND_PREFIX_WEIGHT","lastModifiedDate":"2021-10-11"},{"lineNumber":349,"author":{"gitId":"tlyi"},"content":"                            + Command.COMMAND_PREFIX_DELIMITER, 2)[1];","lastModifiedDate":"2021-10-11"},{"lineNumber":350,"author":{"gitId":"tlyi"},"content":"            String doubleString \u003d stringAfterPrefix.split(\" \", 2)[0];","lastModifiedDate":"2021-10-10"},{"lineNumber":351,"author":{"gitId":"tlyi"},"content":"            return Double.parseDouble(doubleString);","lastModifiedDate":"2021-10-10"},{"lineNumber":352,"author":{"gitId":"tlyi"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-10-10"},{"lineNumber":353,"author":{"gitId":"tlyi"},"content":"            throw new ParamInvalidException(MESSAGE_ERROR_NO_WEIGHT);","lastModifiedDate":"2021-10-10"},{"lineNumber":354,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":355,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":356,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":357,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":358,"author":{"gitId":"tlyi"},"content":"    private String extractProfileName(String params) throws ParamInvalidException {","lastModifiedDate":"2021-10-10"},{"lineNumber":359,"author":{"gitId":"tlyi"},"content":"        try {","lastModifiedDate":"2021-10-10"},{"lineNumber":360,"author":{"gitId":"tlyi"},"content":"            String stringAfterPrefix \u003d","lastModifiedDate":"2021-10-10"},{"lineNumber":361,"author":{"gitId":"tlyi"},"content":"                    params.split(Command.COMMAND_PREFIX_NAME","lastModifiedDate":"2021-10-11"},{"lineNumber":362,"author":{"gitId":"tlyi"},"content":"                            + Command.COMMAND_PREFIX_DELIMITER, 2)[1];","lastModifiedDate":"2021-10-10"},{"lineNumber":363,"author":{"gitId":"tlyi"},"content":"            String name \u003d extractRelevantParameter(stringAfterPrefix).trim();","lastModifiedDate":"2021-10-11"},{"lineNumber":364,"author":{"gitId":"tlyi"},"content":"            if (name.equals(EMPTY)) {","lastModifiedDate":"2021-10-10"},{"lineNumber":365,"author":{"gitId":"tlyi"},"content":"                throw new ParamInvalidException(MESSAGE_ERROR_NO_NAME);","lastModifiedDate":"2021-10-10"},{"lineNumber":366,"author":{"gitId":"tlyi"},"content":"            }","lastModifiedDate":"2021-10-10"},{"lineNumber":367,"author":{"gitId":"tlyi"},"content":"            return name;","lastModifiedDate":"2021-10-10"},{"lineNumber":368,"author":{"gitId":"tlyi"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-10-10"},{"lineNumber":369,"author":{"gitId":"tlyi"},"content":"            throw new ParamInvalidException(MESSAGE_ERROR_NO_NAME);","lastModifiedDate":"2021-10-10"},{"lineNumber":370,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":371,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":372,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":373,"author":{"gitId":"tlyi"},"content":"    private int convertItemNumToItemIndex(int itemNum) {","lastModifiedDate":"2021-10-11"},{"lineNumber":374,"author":{"gitId":"tlyi"},"content":"        return itemNum - 1;","lastModifiedDate":"2021-10-11"},{"lineNumber":375,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":376,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":377,"author":{"gitId":"tlyi"},"content":"    private boolean hasExtraDelimiters(String params, int expectedNum) {","lastModifiedDate":"2021-10-12"},{"lineNumber":378,"author":{"gitId":"tttyyzzz"},"content":"        int numOfDelimiters \u003d 0;","lastModifiedDate":"2021-10-13"},{"lineNumber":379,"author":{"gitId":"tttyyzzz"},"content":"        for (int i \u003d 0; i \u003c params.length(); i++) {","lastModifiedDate":"2021-10-13"},{"lineNumber":380,"author":{"gitId":"tttyyzzz"},"content":"            if (params.charAt(i) \u003d\u003d Command.COMMAND_PREFIX_DELIMITER.charAt(0)) {","lastModifiedDate":"2021-10-13"},{"lineNumber":381,"author":{"gitId":"tttyyzzz"},"content":"                numOfDelimiters++;","lastModifiedDate":"2021-10-13"},{"lineNumber":382,"author":{"gitId":"tttyyzzz"},"content":"            }","lastModifiedDate":"2021-10-13"},{"lineNumber":383,"author":{"gitId":"tttyyzzz"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":384,"author":{"gitId":"tlyi"},"content":"        return numOfDelimiters \u003e expectedNum;","lastModifiedDate":"2021-10-12"},{"lineNumber":385,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":386,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":387,"author":{"gitId":"tlyi"},"content":"    private boolean hasTextFileDelimiter(String input) {","lastModifiedDate":"2021-10-13"},{"lineNumber":388,"author":{"gitId":"tlyi"},"content":"        return input.contains(FILE_TEXT_DELIMITER);","lastModifiedDate":"2021-10-13"},{"lineNumber":389,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":390,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":391,"author":{"gitId":"tlyi"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"tttyyzzz":9,"tryyang2001":4,"xingjie99":7,"tlyi":371}},{"path":"src/main/java/seedu/duke/parser/exceptions/ItemNotSpecifiedException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.parser.exceptions;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"tlyi"},"content":"/**","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"tlyi"},"content":" * Represents an error where the user did not specify which list to execute the command on. (food/exercise)","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"tlyi"},"content":" */","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"tlyi"},"content":"public class ItemNotSpecifiedException extends Exception {","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"tlyi"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"tlyi":7}},{"path":"src/main/java/seedu/duke/parser/exceptions/ParamInvalidException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.parser.exceptions;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"tlyi"},"content":"/**","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"tlyi"},"content":" * Represents an error where the user did not specify a required parameter,","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"tlyi"},"content":" * or parameter specified is invalid for the command.","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"tlyi"},"content":" */","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"tlyi"},"content":"public class ParamInvalidException extends Exception {","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"tlyi"},"content":"    private static String errorMessage;","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"tlyi"},"content":"    public ParamInvalidException(String errorMessage) {","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"tlyi"},"content":"        super(errorMessage);","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"tlyi"},"content":"        ParamInvalidException.errorMessage \u003d errorMessage;","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"tlyi"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"tlyi":14}},{"path":"src/main/java/seedu/duke/profile/Profile.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weidak"},"content":"package seedu.duke.profile;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"weidak"},"content":"import seedu.duke.profile.exceptions.InvalidCharacteristicException;","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"weidak"},"content":"import seedu.duke.profile.exceptions.NullCharacteristicException;","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"weidak"},"content":"/**","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"weidak"},"content":" * Profile that contains the relevant data input by user.","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"weidak"},"content":" */","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"weidak"},"content":"public class Profile {","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"weidak"},"content":"    private static final String BMI_STATUS_UNDERWEIGHT \u003d \"Underweight\";","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"weidak"},"content":"    private static final String BMI_STATUS_HEALTHY \u003d \"Healthy\";","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"weidak"},"content":"    private static final String BMI_STATUS_OVERWEIGHT \u003d \"Overweight\";","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"weidak"},"content":"    private static final String BMI_STATUS_OBESE \u003d \"Obese\";","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"weidak"},"content":"    private String name;","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"weidak"},"content":"    private double height;","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"weidak"},"content":"    private double weight;","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"weidak"},"content":"    private int calorieGoal;","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":22,"author":{"gitId":"tttyyzzz"},"content":"     * Constructor for the Profile class.","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-10-09"},{"lineNumber":24,"author":{"gitId":"weidak"},"content":"     * @param name   Name of user","lastModifiedDate":"2021-10-09"},{"lineNumber":25,"author":{"gitId":"weidak"},"content":"     * @param height Height of user","lastModifiedDate":"2021-10-09"},{"lineNumber":26,"author":{"gitId":"weidak"},"content":"     * @param weight Weight of user","lastModifiedDate":"2021-10-09"},{"lineNumber":27,"author":{"gitId":"weidak"},"content":"     * @throws InvalidCharacteristicException If a value of \u003c\u003d 0 is provided for height or weight","lastModifiedDate":"2021-10-09"},{"lineNumber":28,"author":{"gitId":"weidak"},"content":"     * @throws NullCharacteristicException    When the input name is null or \"\"","lastModifiedDate":"2021-10-09"},{"lineNumber":29,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":30,"author":{"gitId":"weidak"},"content":"    public Profile(String name, double height, double weight, int calorieGoal)","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"tlyi"},"content":"            throws InvalidCharacteristicException {","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"tttyyzzz"},"content":"        setName(name);","lastModifiedDate":"2021-10-13"},{"lineNumber":33,"author":{"gitId":"tttyyzzz"},"content":"        setHeight(height);","lastModifiedDate":"2021-10-13"},{"lineNumber":34,"author":{"gitId":"tttyyzzz"},"content":"        setWeight(weight);","lastModifiedDate":"2021-10-13"},{"lineNumber":35,"author":{"gitId":"tttyyzzz"},"content":"        setCalorieGoal(calorieGoal);","lastModifiedDate":"2021-10-13"},{"lineNumber":36,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"tlyi"},"content":"    public Profile() {","lastModifiedDate":"2021-10-11"},{"lineNumber":39,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":40,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"tlyi"},"content":"    public void setProfile(String name, double height, double weight) throws InvalidCharacteristicException {","lastModifiedDate":"2021-10-11"},{"lineNumber":43,"author":{"gitId":"tlyi"},"content":"        setName(name);","lastModifiedDate":"2021-10-11"},{"lineNumber":44,"author":{"gitId":"tlyi"},"content":"        setHeight(height);","lastModifiedDate":"2021-10-11"},{"lineNumber":45,"author":{"gitId":"tlyi"},"content":"        setWeight(weight);","lastModifiedDate":"2021-10-11"},{"lineNumber":46,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":47,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":48,"author":{"gitId":"tlyi"},"content":"    public void setName(String name) {","lastModifiedDate":"2021-10-11"},{"lineNumber":49,"author":{"gitId":"weidak"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-10-09"},{"lineNumber":50,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":51,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":52,"author":{"gitId":"tlyi"},"content":"    public double getHeight() {","lastModifiedDate":"2021-10-11"},{"lineNumber":53,"author":{"gitId":"tlyi"},"content":"        return this.height;","lastModifiedDate":"2021-10-11"},{"lineNumber":54,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":55,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":56,"author":{"gitId":"tlyi"},"content":"    public double getWeight() {","lastModifiedDate":"2021-10-11"},{"lineNumber":57,"author":{"gitId":"tlyi"},"content":"        return this.weight;","lastModifiedDate":"2021-10-11"},{"lineNumber":58,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":59,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":60,"author":{"gitId":"tlyi"},"content":"    public String getName() {","lastModifiedDate":"2021-10-11"},{"lineNumber":61,"author":{"gitId":"tlyi"},"content":"        return this.name;","lastModifiedDate":"2021-10-11"},{"lineNumber":62,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":63,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":64,"author":{"gitId":"tlyi"},"content":"    public int getCalorieGoal() {","lastModifiedDate":"2021-10-11"},{"lineNumber":65,"author":{"gitId":"tlyi"},"content":"        return this.calorieGoal;","lastModifiedDate":"2021-10-11"},{"lineNumber":66,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":67,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":68,"author":{"gitId":"weidak"},"content":"    public void setHeight(double height) throws InvalidCharacteristicException {","lastModifiedDate":"2021-10-09"},{"lineNumber":69,"author":{"gitId":"weidak"},"content":"        checkHeightValidity(height);","lastModifiedDate":"2021-10-09"},{"lineNumber":70,"author":{"gitId":"weidak"},"content":"        this.height \u003d height;","lastModifiedDate":"2021-10-08"},{"lineNumber":71,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":72,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":73,"author":{"gitId":"weidak"},"content":"    public void setWeight(double weight) throws InvalidCharacteristicException {","lastModifiedDate":"2021-10-09"},{"lineNumber":74,"author":{"gitId":"weidak"},"content":"        checkWeightValidity(weight);","lastModifiedDate":"2021-10-09"},{"lineNumber":75,"author":{"gitId":"weidak"},"content":"        this.weight \u003d weight;","lastModifiedDate":"2021-10-08"},{"lineNumber":76,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":77,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":78,"author":{"gitId":"weidak"},"content":"    public void setCalorieGoal(int calorieGoal) {","lastModifiedDate":"2021-10-08"},{"lineNumber":79,"author":{"gitId":"weidak"},"content":"        this.calorieGoal \u003d calorieGoal;","lastModifiedDate":"2021-10-08"},{"lineNumber":80,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":81,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":82,"author":{"gitId":"weidak"},"content":"    public double calculateBmi() {","lastModifiedDate":"2021-10-08"},{"lineNumber":83,"author":{"gitId":"weidak"},"content":"        return computeBmi(height, weight);","lastModifiedDate":"2021-10-09"},{"lineNumber":84,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":85,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":86,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":87,"author":{"gitId":"weidak"},"content":"     * Manually calculates the BMI.","lastModifiedDate":"2021-10-09"},{"lineNumber":88,"author":{"gitId":"weidak"},"content":"     * Used when the user input values that is not be stored in his/her profile.","lastModifiedDate":"2021-10-09"},{"lineNumber":89,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-10-09"},{"lineNumber":90,"author":{"gitId":"weidak"},"content":"     * @param height Value of manual input of height","lastModifiedDate":"2021-10-09"},{"lineNumber":91,"author":{"gitId":"weidak"},"content":"     * @param weight Value of manual input of weight","lastModifiedDate":"2021-10-09"},{"lineNumber":92,"author":{"gitId":"weidak"},"content":"     * @return The calculated BMI of the manual inputs","lastModifiedDate":"2021-10-09"},{"lineNumber":93,"author":{"gitId":"weidak"},"content":"     * @throws InvalidCharacteristicException When the user inputs negative values for either height or weight","lastModifiedDate":"2021-10-09"},{"lineNumber":94,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":95,"author":{"gitId":"weidak"},"content":"    public static double calculateBmi(double height, double weight) throws InvalidCharacteristicException {","lastModifiedDate":"2021-10-09"},{"lineNumber":96,"author":{"gitId":"weidak"},"content":"        checkHeightValidity(height);","lastModifiedDate":"2021-10-09"},{"lineNumber":97,"author":{"gitId":"weidak"},"content":"        checkWeightValidity(weight);","lastModifiedDate":"2021-10-09"},{"lineNumber":98,"author":{"gitId":"weidak"},"content":"        return computeBmi(height, weight);","lastModifiedDate":"2021-10-09"},{"lineNumber":99,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":100,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":101,"author":{"gitId":"weidak"},"content":"    private static double computeBmi(double height, double weight) {","lastModifiedDate":"2021-10-09"},{"lineNumber":102,"author":{"gitId":"weidak"},"content":"        double heightInM \u003d height / 100.0;","lastModifiedDate":"2021-10-09"},{"lineNumber":103,"author":{"gitId":"weidak"},"content":"        return Math.round((weight / (Math.pow(heightInM, 2))) * 10) / 10.0;","lastModifiedDate":"2021-10-09"},{"lineNumber":104,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":105,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":106,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":107,"author":{"gitId":"weidak"},"content":"    private static void checkWeightValidity(double weight) throws InvalidCharacteristicException {","lastModifiedDate":"2021-10-09"},{"lineNumber":108,"author":{"gitId":"weidak"},"content":"        if (weight \u003c\u003d 0) {","lastModifiedDate":"2021-10-09"},{"lineNumber":109,"author":{"gitId":"weidak"},"content":"            throw new InvalidCharacteristicException(\"Weight\");","lastModifiedDate":"2021-10-09"},{"lineNumber":110,"author":{"gitId":"weidak"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":111,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":112,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":113,"author":{"gitId":"weidak"},"content":"    private static void checkHeightValidity(double height) throws InvalidCharacteristicException {","lastModifiedDate":"2021-10-09"},{"lineNumber":114,"author":{"gitId":"weidak"},"content":"        if (height \u003c\u003d 0) {","lastModifiedDate":"2021-10-09"},{"lineNumber":115,"author":{"gitId":"weidak"},"content":"            throw new InvalidCharacteristicException(\"Height\");","lastModifiedDate":"2021-10-09"},{"lineNumber":116,"author":{"gitId":"tttyyzzz"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":117,"author":{"gitId":"tttyyzzz"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":118,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":119,"author":{"gitId":"tttyyzzz"},"content":"    private static void checkBmiValidity(int bmi) throws InvalidCharacteristicException {","lastModifiedDate":"2021-10-13"},{"lineNumber":120,"author":{"gitId":"tttyyzzz"},"content":"        if (bmi \u003c\u003d 1) {","lastModifiedDate":"2021-10-13"},{"lineNumber":121,"author":{"gitId":"tttyyzzz"},"content":"            throw new InvalidCharacteristicException(\"Height\");","lastModifiedDate":"2021-10-13"},{"lineNumber":122,"author":{"gitId":"weidak"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":123,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":124,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":125,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":126,"author":{"gitId":"weidak"},"content":"     * Retrieves the indication with regard to the value of their BMI.","lastModifiedDate":"2021-10-09"},{"lineNumber":127,"author":{"gitId":"weidak"},"content":"     * Should not have any exceptions thrown since the other functions handled invalid cases.","lastModifiedDate":"2021-10-09"},{"lineNumber":128,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-10-09"},{"lineNumber":129,"author":{"gitId":"weidak"},"content":"     * @param bmi The bmi of the user","lastModifiedDate":"2021-10-09"},{"lineNumber":130,"author":{"gitId":"weidak"},"content":"     * @return The status of his current body","lastModifiedDate":"2021-10-09"},{"lineNumber":131,"author":{"gitId":"weidak"},"content":"     **/","lastModifiedDate":"2021-10-09"},{"lineNumber":132,"author":{"gitId":"weidak"},"content":"    public static String retrieveBmiStatus(double bmi) {","lastModifiedDate":"2021-10-09"},{"lineNumber":133,"author":{"gitId":"weidak"},"content":"        String result;","lastModifiedDate":"2021-10-09"},{"lineNumber":134,"author":{"gitId":"weidak"},"content":"        assert bmi \u003e 0;","lastModifiedDate":"2021-10-12"},{"lineNumber":135,"author":{"gitId":"weidak"},"content":"        if (bmi \u003c 18.5) {","lastModifiedDate":"2021-10-09"},{"lineNumber":136,"author":{"gitId":"weidak"},"content":"            result \u003d BMI_STATUS_UNDERWEIGHT;","lastModifiedDate":"2021-10-11"},{"lineNumber":137,"author":{"gitId":"weidak"},"content":"        } else if (bmi \u003c\u003d 24.9) {","lastModifiedDate":"2021-10-09"},{"lineNumber":138,"author":{"gitId":"weidak"},"content":"            result \u003d BMI_STATUS_HEALTHY;","lastModifiedDate":"2021-10-11"},{"lineNumber":139,"author":{"gitId":"weidak"},"content":"        } else if (bmi \u003c\u003d 29.9) {","lastModifiedDate":"2021-10-09"},{"lineNumber":140,"author":{"gitId":"weidak"},"content":"            result \u003d BMI_STATUS_OVERWEIGHT;","lastModifiedDate":"2021-10-11"},{"lineNumber":141,"author":{"gitId":"weidak"},"content":"        } else {","lastModifiedDate":"2021-10-09"},{"lineNumber":142,"author":{"gitId":"weidak"},"content":"            result \u003d BMI_STATUS_OBESE;","lastModifiedDate":"2021-10-11"},{"lineNumber":143,"author":{"gitId":"weidak"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":144,"author":{"gitId":"weidak"},"content":"        return result;","lastModifiedDate":"2021-10-09"},{"lineNumber":145,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":146,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":147,"author":{"gitId":"weidak"},"content":"    public int calculateNetCalories(int foodCalories, int exerciseCalories) {","lastModifiedDate":"2021-10-08"},{"lineNumber":148,"author":{"gitId":"weidak"},"content":"        return foodCalories - exerciseCalories;","lastModifiedDate":"2021-10-08"},{"lineNumber":149,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":150,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":151,"author":{"gitId":"weidak"},"content":"    public String toFileTextString() {","lastModifiedDate":"2021-10-12"},{"lineNumber":152,"author":{"gitId":"weidak"},"content":"        return getName() + \"|\" + getHeight() + \"|\" + getWeight() + \"|\" + getCalorieGoal();","lastModifiedDate":"2021-10-12"},{"lineNumber":153,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":154,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":155,"author":{"gitId":"weidak"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"weidak":116,"tttyyzzz":11,"tlyi":28}},{"path":"src/main/java/seedu/duke/profile/exceptions/InvalidCharacteristicException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weidak"},"content":"package seedu.duke.profile.exceptions;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"weidak"},"content":"/**","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"weidak"},"content":" * Exception that is thrown when the input human characteristics are invalid.","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"weidak"},"content":" */","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"weidak"},"content":"public class InvalidCharacteristicException extends Exception {","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"weidak"},"content":"    private static final String ERROR_MESSAGE \u003d \" cannot be less than or equal to 0 :(\" + System.lineSeparator()","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"weidak"},"content":"            + \"Try a positive value instead!\";","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"weidak"},"content":"    public InvalidCharacteristicException(String characteristic) {","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"weidak"},"content":"        super(characteristic + ERROR_MESSAGE);","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"weidak"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"weidak":13}},{"path":"src/main/java/seedu/duke/profile/exceptions/NullCharacteristicException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weidak"},"content":"package seedu.duke.profile.exceptions;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"weidak"},"content":"public class NullCharacteristicException extends Exception {","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"weidak"},"content":"    private static final String ERROR_MESSAGE \u003d \" is empty.\" + System.lineSeparator()","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"weidak"},"content":"            + \"Please key in a value.\";","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"weidak"},"content":"    public NullCharacteristicException(String characteristic) {","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"weidak"},"content":"        super(characteristic + ERROR_MESSAGE);","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"weidak"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"weidak":10}},{"path":"src/main/java/seedu/duke/storage/Decoder.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weidak"},"content":"package seedu.duke.storage;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"weidak"},"content":"import seedu.duke.exercise.Exercise;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"weidak"},"content":"import seedu.duke.exercise.ExerciseList;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"weidak"},"content":"import seedu.duke.food.Food;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"weidak"},"content":"import seedu.duke.food.FoodList;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"weidak"},"content":"import seedu.duke.profile.Profile;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"weidak"},"content":"import seedu.duke.profile.exceptions.InvalidCharacteristicException;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"weidak"},"content":"import java.io.File;","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"weidak"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"weidak"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"weidak"},"content":"/**","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"weidak"},"content":" * Converts the profile, exercise list and food list from storage and inputs into the bot.","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"weidak"},"content":" */","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"weidak"},"content":"public class Decoder {","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"weidak"},"content":"    public static final String FILE_TEXT_DELIMITER \u003d \"\\\\|\";","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"weidak"},"content":"     * Retrieves profile data from profile.txt","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"weidak"},"content":"     * @return The profile object with its corresponding characteristics","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"weidak"},"content":"     * @throws FileNotFoundException          If the file is misplaced/missing","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"weidak"},"content":"     * @throws InvalidCharacteristicException When the data is corrupted in the file.","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"weidak"},"content":"    public Profile getProfileFromData() throws FileNotFoundException, InvalidCharacteristicException {","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"weidak"},"content":"        File file \u003d new File(Storage.FILEPATH_PROFILE);","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"weidak"},"content":"        Scanner in \u003d new Scanner(file);","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"weidak"},"content":"        if (in.hasNext()) {","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"tttyyzzz"},"content":"            return decodeProfileData(in.nextLine());","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"weidak"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"tttyyzzz"},"content":"        return new Profile();","lastModifiedDate":"2021-10-13"},{"lineNumber":34,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"weidak"},"content":"    private Profile decodeProfileData(String input) throws InvalidCharacteristicException {","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"tttyyzzz"},"content":"        Profile profile \u003d new Profile();","lastModifiedDate":"2021-10-13"},{"lineNumber":38,"author":{"gitId":"weidak"},"content":"        String[] profileDetails \u003d input.split(FILE_TEXT_DELIMITER);","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"weidak"},"content":"        String name \u003d profileDetails[0];","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"weidak"},"content":"        double height \u003d Double.parseDouble(profileDetails[1]);","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"weidak"},"content":"        double weight \u003d Double.parseDouble(profileDetails[2]);","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"tttyyzzz"},"content":"        if (!name.equals(\"null\")) {","lastModifiedDate":"2021-10-13"},{"lineNumber":43,"author":{"gitId":"tttyyzzz"},"content":"            profile.setName(name);","lastModifiedDate":"2021-10-13"},{"lineNumber":44,"author":{"gitId":"tttyyzzz"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":45,"author":{"gitId":"tttyyzzz"},"content":"        if (height !\u003d 0.0) {","lastModifiedDate":"2021-10-13"},{"lineNumber":46,"author":{"gitId":"tttyyzzz"},"content":"            profile.setHeight(height);","lastModifiedDate":"2021-10-13"},{"lineNumber":47,"author":{"gitId":"tttyyzzz"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":48,"author":{"gitId":"tttyyzzz"},"content":"        if (weight !\u003d 0.0) {","lastModifiedDate":"2021-10-13"},{"lineNumber":49,"author":{"gitId":"tttyyzzz"},"content":"            profile.setWeight(weight);","lastModifiedDate":"2021-10-13"},{"lineNumber":50,"author":{"gitId":"weidak"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"tttyyzzz"},"content":"        int calorieGoal \u003d Integer.parseInt(profileDetails[3]);","lastModifiedDate":"2021-10-13"},{"lineNumber":52,"author":{"gitId":"tttyyzzz"},"content":"        profile.setCalorieGoal(calorieGoal);","lastModifiedDate":"2021-10-13"},{"lineNumber":53,"author":{"gitId":"tttyyzzz"},"content":"        return profile;","lastModifiedDate":"2021-10-13"},{"lineNumber":54,"author":{"gitId":"tttyyzzz"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":55,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":56,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":57,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"weidak"},"content":"     * Retrieves exercise list from exercise_list.txt.","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"weidak"},"content":"     * @return The exercise list with data loaded from file","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"weidak"},"content":"     * @throws FileNotFoundException If file is misplaced/missing","lastModifiedDate":"2021-10-12"},{"lineNumber":62,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":63,"author":{"gitId":"weidak"},"content":"    public ExerciseList getExerciseListFromData() throws FileNotFoundException {","lastModifiedDate":"2021-10-12"},{"lineNumber":64,"author":{"gitId":"weidak"},"content":"        ExerciseList exercises \u003d new ExerciseList();","lastModifiedDate":"2021-10-12"},{"lineNumber":65,"author":{"gitId":"weidak"},"content":"        File file \u003d new File(Storage.FILEPATH_EXERCISE_LIST);","lastModifiedDate":"2021-10-12"},{"lineNumber":66,"author":{"gitId":"weidak"},"content":"        Scanner in \u003d new Scanner(file);","lastModifiedDate":"2021-10-12"},{"lineNumber":67,"author":{"gitId":"weidak"},"content":"        while (in.hasNext()) {","lastModifiedDate":"2021-10-12"},{"lineNumber":68,"author":{"gitId":"weidak"},"content":"            decodeExerciseData(exercises, in.nextLine());","lastModifiedDate":"2021-10-12"},{"lineNumber":69,"author":{"gitId":"weidak"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":70,"author":{"gitId":"weidak"},"content":"        return exercises;","lastModifiedDate":"2021-10-12"},{"lineNumber":71,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":72,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":73,"author":{"gitId":"weidak"},"content":"    private void decodeExerciseData(ExerciseList exercises, String line) {","lastModifiedDate":"2021-10-12"},{"lineNumber":74,"author":{"gitId":"weidak"},"content":"        String[] exerciseDetails \u003d line.split(FILE_TEXT_DELIMITER);","lastModifiedDate":"2021-10-12"},{"lineNumber":75,"author":{"gitId":"weidak"},"content":"        String name \u003d exerciseDetails[1];","lastModifiedDate":"2021-10-12"},{"lineNumber":76,"author":{"gitId":"weidak"},"content":"        int calories \u003d Integer.parseInt(exerciseDetails[2]);","lastModifiedDate":"2021-10-12"},{"lineNumber":77,"author":{"gitId":"weidak"},"content":"        exercises.addExercise(new Exercise(name, calories));","lastModifiedDate":"2021-10-12"},{"lineNumber":78,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":79,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":80,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":81,"author":{"gitId":"weidak"},"content":"     * Retrieves food list from food_list.txt.","lastModifiedDate":"2021-10-12"},{"lineNumber":82,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":83,"author":{"gitId":"weidak"},"content":"     * @return The food list with data loaded from file","lastModifiedDate":"2021-10-12"},{"lineNumber":84,"author":{"gitId":"weidak"},"content":"     * @throws FileNotFoundException If file is misplaced/missing","lastModifiedDate":"2021-10-12"},{"lineNumber":85,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":86,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":87,"author":{"gitId":"weidak"},"content":"    public FoodList getFoodListFromData() throws FileNotFoundException {","lastModifiedDate":"2021-10-12"},{"lineNumber":88,"author":{"gitId":"weidak"},"content":"        FoodList foodItems \u003d new FoodList();","lastModifiedDate":"2021-10-12"},{"lineNumber":89,"author":{"gitId":"weidak"},"content":"        File file \u003d new File(Storage.FILEPATH_FOOD_LIST);","lastModifiedDate":"2021-10-12"},{"lineNumber":90,"author":{"gitId":"weidak"},"content":"        Scanner in \u003d new Scanner(file);","lastModifiedDate":"2021-10-12"},{"lineNumber":91,"author":{"gitId":"weidak"},"content":"        while (in.hasNext()) {","lastModifiedDate":"2021-10-12"},{"lineNumber":92,"author":{"gitId":"weidak"},"content":"            decodeFoodData(foodItems, in.nextLine());","lastModifiedDate":"2021-10-12"},{"lineNumber":93,"author":{"gitId":"weidak"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":94,"author":{"gitId":"weidak"},"content":"        return foodItems;","lastModifiedDate":"2021-10-12"},{"lineNumber":95,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":96,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":97,"author":{"gitId":"weidak"},"content":"    private void decodeFoodData(FoodList foodItems, String line) {","lastModifiedDate":"2021-10-12"},{"lineNumber":98,"author":{"gitId":"weidak"},"content":"        String[] foodDetails \u003d line.split(FILE_TEXT_DELIMITER);","lastModifiedDate":"2021-10-12"},{"lineNumber":99,"author":{"gitId":"weidak"},"content":"        String name \u003d foodDetails[1];","lastModifiedDate":"2021-10-12"},{"lineNumber":100,"author":{"gitId":"weidak"},"content":"        int calories \u003d Integer.parseInt(foodDetails[2]);","lastModifiedDate":"2021-10-12"},{"lineNumber":101,"author":{"gitId":"weidak"},"content":"        foodItems.addFood(new Food(name, calories));","lastModifiedDate":"2021-10-12"},{"lineNumber":102,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":103,"author":{"gitId":"weidak"},"content":"}","lastModifiedDate":"2021-10-12"},{"lineNumber":104,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"weidak":87,"tttyyzzz":17}},{"path":"src/main/java/seedu/duke/storage/Encoder.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weidak"},"content":"package seedu.duke.storage;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"weidak"},"content":"import seedu.duke.exercise.ExerciseList;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"weidak"},"content":"import seedu.duke.food.FoodList;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"weidak"},"content":"import seedu.duke.profile.Profile;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"weidak"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"weidak"},"content":"/**","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"weidak"},"content":" * Converts profile, exercise list and food list for storage.","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"weidak"},"content":" */","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"weidak"},"content":"public class Encoder {","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"weidak"},"content":"     * Encodes the profile details into strings for storage.","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"weidak"},"content":"     * @param profile The profile to be encoded","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"weidak"},"content":"     * @return An ArrayList of the profile details to be stored","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"weidak"},"content":"    public ArrayList\u003cString\u003e encodeProfileDetails(Profile profile) {","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"weidak"},"content":"        ArrayList\u003cString\u003e profileDetails \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"weidak"},"content":"        profileDetails.add(profile.toFileTextString());","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"weidak"},"content":"        return profileDetails;","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"weidak"},"content":"     * Encodes the list of exercises into an ArrayList of string in preparation for storage.","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"weidak"},"content":"     * @param exerciseList The list of exercises to be encoded","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"weidak"},"content":"     * @return An ArrayList of the exercises to be stored","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"weidak"},"content":"    public ArrayList\u003cString\u003e encodeExerciseList(ExerciseList exerciseList) {","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"weidak"},"content":"        ArrayList\u003cString\u003e exercises \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-10"},{"lineNumber":34,"author":{"gitId":"weidak"},"content":"        for (int i \u003d 0; i \u003c exerciseList.getSize(); i++) {","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"weidak"},"content":"            exercises.add(exerciseList.getExercise(i).toFileTextString());","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"weidak"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":37,"author":{"gitId":"weidak"},"content":"        return exercises;","lastModifiedDate":"2021-10-10"},{"lineNumber":38,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":39,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":40,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"weidak"},"content":"     * Encodes the list of exercises into an ArrayList of string in preparation for storage.","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":43,"author":{"gitId":"weidak"},"content":"     * @param foodList The list of food items to be encoded","lastModifiedDate":"2021-10-11"},{"lineNumber":44,"author":{"gitId":"weidak"},"content":"     * @return An ArrayList of the food items to be stored","lastModifiedDate":"2021-10-11"},{"lineNumber":45,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":46,"author":{"gitId":"weidak"},"content":"    public ArrayList\u003cString\u003e encodeFoodList(FoodList foodList) {","lastModifiedDate":"2021-10-10"},{"lineNumber":47,"author":{"gitId":"weidak"},"content":"        ArrayList\u003cString\u003e foodItems \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-10"},{"lineNumber":48,"author":{"gitId":"weidak"},"content":"        for (int i \u003d 0; i \u003c foodList.getSize(); i++) {","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"weidak"},"content":"            foodItems.add(foodList.get(i).toFileTextString());","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"weidak"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":51,"author":{"gitId":"weidak"},"content":"        return foodItems;","lastModifiedDate":"2021-10-10"},{"lineNumber":52,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":53,"author":{"gitId":"weidak"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"weidak":53}},{"path":"src/main/java/seedu/duke/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weidak"},"content":"package seedu.duke.storage;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"weidak"},"content":"import seedu.duke.exercise.ExerciseList;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"weidak"},"content":"import seedu.duke.food.FoodList;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"weidak"},"content":"import seedu.duke.profile.Profile;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"weidak"},"content":"import seedu.duke.profile.exceptions.InvalidCharacteristicException;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"weidak"},"content":"import seedu.duke.storage.exceptions.UnableToReadFileException;","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"weidak"},"content":"import seedu.duke.storage.exceptions.UnableToWriteFileException;","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"weidak"},"content":"import java.io.File;","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"weidak"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"weidak"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"weidak"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"weidak"},"content":"import java.nio.file.Files;","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"weidak"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"weidak"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"weidak"},"content":"/**","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"weidak"},"content":" * Handles all read and write operations to the storage files.","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"weidak"},"content":" */","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"weidak"},"content":"public class Storage {","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"weidak"},"content":"    private static final String FILEPATH \u003d \"./data/\";","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"weidak"},"content":"    public static final String FILENAME_PROFILE \u003d \"profile.txt\";","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"weidak"},"content":"    public static final String FILENAME_FOOD_LIST \u003d \"food_list.txt\";","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"weidak"},"content":"    public static final String FILENAME_EXERCISE_LIST \u003d \"exercise_list.txt\";","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"weidak"},"content":"    public static final String FILEPATH_PROFILE \u003d FILEPATH + FILENAME_PROFILE;","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"weidak"},"content":"    public static final String FILEPATH_FOOD_LIST \u003d FILEPATH + FILENAME_FOOD_LIST;","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"weidak"},"content":"    public static final String FILEPATH_EXERCISE_LIST \u003d FILEPATH + FILENAME_EXERCISE_LIST;","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"weidak"},"content":"    private static final String MESSAGE_CREATE_PROFILE \u003d \"No profile detected!\"","lastModifiedDate":"2021-10-10"},{"lineNumber":31,"author":{"gitId":"weidak"},"content":"            + \"A new profile has been created successfully.\";","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"weidak"},"content":"    private static final String MESSAGE_CREATE_FOOD_LIST \u003d \"No food items detected!\"","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"weidak"},"content":"            + \"A new food list has been created successfully.\";","lastModifiedDate":"2021-10-10"},{"lineNumber":34,"author":{"gitId":"weidak"},"content":"    private static final String MESSAGE_CREATE_EXERCISE_LIST \u003d \"No exercises detected!\"","lastModifiedDate":"2021-10-10"},{"lineNumber":35,"author":{"gitId":"weidak"},"content":"            + \"A new exercise has been created successfully.\";","lastModifiedDate":"2021-10-10"},{"lineNumber":36,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":37,"author":{"gitId":"weidak"},"content":"    private final Encoder encoder \u003d new Encoder();","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"weidak"},"content":"    private final Decoder decoder \u003d new Decoder();","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":40,"author":{"gitId":"weidak"},"content":"    public Storage() {","lastModifiedDate":"2021-10-10"},{"lineNumber":41,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":42,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":43,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":44,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":45,"author":{"gitId":"weidak"},"content":"     * Load profile data into a profile object.","lastModifiedDate":"2021-10-11"},{"lineNumber":46,"author":{"gitId":"weidak"},"content":"     * Used when the selected profile is accessed.","lastModifiedDate":"2021-10-11"},{"lineNumber":47,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":48,"author":{"gitId":"weidak"},"content":"     * @return Profile object with the details from the storage file","lastModifiedDate":"2021-10-11"},{"lineNumber":49,"author":{"gitId":"weidak"},"content":"     * @throws UnableToReadFileException If the file is inaccessible or due to environment variables","lastModifiedDate":"2021-10-11"},{"lineNumber":50,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":51,"author":{"gitId":"weidak"},"content":"    public Profile loadProfileFile() throws UnableToReadFileException {","lastModifiedDate":"2021-10-10"},{"lineNumber":52,"author":{"gitId":"weidak"},"content":"        checkForFile(FILEPATH_PROFILE);","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"weidak"},"content":"        return readFromProfileFile();","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":55,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":56,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":57,"author":{"gitId":"weidak"},"content":"     * Load exercises into an ExerciseList object.","lastModifiedDate":"2021-10-11"},{"lineNumber":58,"author":{"gitId":"weidak"},"content":"     * Used when the selected profile is accessed and its respective ExerciseList is loaded.","lastModifiedDate":"2021-10-11"},{"lineNumber":59,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":60,"author":{"gitId":"weidak"},"content":"     * @return ExerciseList object with the details from the storage file","lastModifiedDate":"2021-10-11"},{"lineNumber":61,"author":{"gitId":"weidak"},"content":"     * @throws UnableToReadFileException If the file is inaccessible or due to environment variables","lastModifiedDate":"2021-10-11"},{"lineNumber":62,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":63,"author":{"gitId":"weidak"},"content":"    public ExerciseList loadExerciseListFile() throws UnableToReadFileException {","lastModifiedDate":"2021-10-10"},{"lineNumber":64,"author":{"gitId":"weidak"},"content":"        checkForFile(FILEPATH_EXERCISE_LIST);","lastModifiedDate":"2021-10-12"},{"lineNumber":65,"author":{"gitId":"weidak"},"content":"        return readFromExerciseListFile();","lastModifiedDate":"2021-10-12"},{"lineNumber":66,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":67,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":68,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":69,"author":{"gitId":"weidak"},"content":"     * Load food items into a FoodList object.","lastModifiedDate":"2021-10-11"},{"lineNumber":70,"author":{"gitId":"weidak"},"content":"     * Used when the selected profile is accessed and its respective ExerciseList is loaded.","lastModifiedDate":"2021-10-11"},{"lineNumber":71,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":72,"author":{"gitId":"tlyi"},"content":"     * @return FoodList object with the details from the storage file","lastModifiedDate":"2021-10-13"},{"lineNumber":73,"author":{"gitId":"weidak"},"content":"     * @throws UnableToReadFileException If the file is inaccessible or due to environment variables","lastModifiedDate":"2021-10-11"},{"lineNumber":74,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":75,"author":{"gitId":"weidak"},"content":"    public FoodList loadFoodListFile() throws UnableToReadFileException {","lastModifiedDate":"2021-10-10"},{"lineNumber":76,"author":{"gitId":"weidak"},"content":"        checkForFile(FILEPATH_FOOD_LIST);","lastModifiedDate":"2021-10-12"},{"lineNumber":77,"author":{"gitId":"weidak"},"content":"        return readFromFoodListFile();","lastModifiedDate":"2021-10-12"},{"lineNumber":78,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":79,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":80,"author":{"gitId":"weidak"},"content":"    private void checkForFile(String filePath) throws UnableToReadFileException {","lastModifiedDate":"2021-10-12"},{"lineNumber":81,"author":{"gitId":"weidak"},"content":"        File f \u003d new File(filePath);","lastModifiedDate":"2021-10-12"},{"lineNumber":82,"author":{"gitId":"weidak"},"content":"        String[] paths \u003d filePath.split(\"/\");","lastModifiedDate":"2021-10-10"},{"lineNumber":83,"author":{"gitId":"weidak"},"content":"        String fileName \u003d paths[2];","lastModifiedDate":"2021-10-10"},{"lineNumber":84,"author":{"gitId":"weidak"},"content":"        try {","lastModifiedDate":"2021-10-10"},{"lineNumber":85,"author":{"gitId":"weidak"},"content":"            Files.createDirectories(Paths.get(\"./data\"));","lastModifiedDate":"2021-10-12"},{"lineNumber":86,"author":{"gitId":"weidak"},"content":"            if (!f.exists()) {","lastModifiedDate":"2021-10-12"},{"lineNumber":87,"author":{"gitId":"weidak"},"content":"                f.createNewFile();","lastModifiedDate":"2021-10-12"},{"lineNumber":88,"author":{"gitId":"weidak"},"content":"            }","lastModifiedDate":"2021-10-10"},{"lineNumber":89,"author":{"gitId":"weidak"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-10-10"},{"lineNumber":90,"author":{"gitId":"weidak"},"content":"            throw new UnableToReadFileException(fileName);","lastModifiedDate":"2021-10-10"},{"lineNumber":91,"author":{"gitId":"weidak"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":92,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":93,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":94,"author":{"gitId":"weidak"},"content":"    private Profile readFromProfileFile() throws UnableToReadFileException {","lastModifiedDate":"2021-10-12"},{"lineNumber":95,"author":{"gitId":"weidak"},"content":"        try {","lastModifiedDate":"2021-10-12"},{"lineNumber":96,"author":{"gitId":"weidak"},"content":"            return decoder.getProfileFromData();","lastModifiedDate":"2021-10-12"},{"lineNumber":97,"author":{"gitId":"weidak"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-10-12"},{"lineNumber":98,"author":{"gitId":"weidak"},"content":"            throw new UnableToReadFileException(FILENAME_PROFILE);","lastModifiedDate":"2021-10-12"},{"lineNumber":99,"author":{"gitId":"weidak"},"content":"        } catch (InvalidCharacteristicException e) {","lastModifiedDate":"2021-10-12"},{"lineNumber":100,"author":{"gitId":"weidak"},"content":"            throw new UnableToReadFileException(FILENAME_PROFILE);","lastModifiedDate":"2021-10-12"},{"lineNumber":101,"author":{"gitId":"weidak"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":102,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":103,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":104,"author":{"gitId":"weidak"},"content":"    private ExerciseList readFromExerciseListFile() throws UnableToReadFileException {","lastModifiedDate":"2021-10-12"},{"lineNumber":105,"author":{"gitId":"weidak"},"content":"        try {","lastModifiedDate":"2021-10-12"},{"lineNumber":106,"author":{"gitId":"weidak"},"content":"            return decoder.getExerciseListFromData();","lastModifiedDate":"2021-10-12"},{"lineNumber":107,"author":{"gitId":"weidak"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-10-12"},{"lineNumber":108,"author":{"gitId":"weidak"},"content":"            throw new UnableToReadFileException(FILEPATH_EXERCISE_LIST);","lastModifiedDate":"2021-10-12"},{"lineNumber":109,"author":{"gitId":"weidak"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":110,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":111,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":112,"author":{"gitId":"weidak"},"content":"    private FoodList readFromFoodListFile() throws UnableToReadFileException {","lastModifiedDate":"2021-10-12"},{"lineNumber":113,"author":{"gitId":"weidak"},"content":"        try {","lastModifiedDate":"2021-10-12"},{"lineNumber":114,"author":{"gitId":"weidak"},"content":"            return decoder.getFoodListFromData();","lastModifiedDate":"2021-10-12"},{"lineNumber":115,"author":{"gitId":"weidak"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-10-12"},{"lineNumber":116,"author":{"gitId":"weidak"},"content":"            throw new UnableToReadFileException(FILEPATH_FOOD_LIST);","lastModifiedDate":"2021-10-12"},{"lineNumber":117,"author":{"gitId":"weidak"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":118,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":119,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":120,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":121,"author":{"gitId":"weidak"},"content":"     * Saves all the files into storage.","lastModifiedDate":"2021-10-11"},{"lineNumber":122,"author":{"gitId":"weidak"},"content":"     * Used when the program exits.","lastModifiedDate":"2021-10-11"},{"lineNumber":123,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":124,"author":{"gitId":"weidak"},"content":"     * @param p Profile of the current user","lastModifiedDate":"2021-10-11"},{"lineNumber":125,"author":{"gitId":"weidak"},"content":"     * @param e ExerciseList of the respective profile","lastModifiedDate":"2021-10-11"},{"lineNumber":126,"author":{"gitId":"weidak"},"content":"     * @param f FoodList of the respective profile","lastModifiedDate":"2021-10-11"},{"lineNumber":127,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":128,"author":{"gitId":"tlyi"},"content":"    public void saveAll(Profile p, ExerciseList e, FoodList f) throws UnableToWriteFileException {","lastModifiedDate":"2021-10-13"},{"lineNumber":129,"author":{"gitId":"weidak"},"content":"        saveProfile(p);","lastModifiedDate":"2021-10-10"},{"lineNumber":130,"author":{"gitId":"weidak"},"content":"        saveExercises(e);","lastModifiedDate":"2021-10-10"},{"lineNumber":131,"author":{"gitId":"weidak"},"content":"        saveFoodList(f);","lastModifiedDate":"2021-10-10"},{"lineNumber":132,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":133,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":134,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":135,"author":{"gitId":"weidak"},"content":"     * Saves the profile details into storage.","lastModifiedDate":"2021-10-11"},{"lineNumber":136,"author":{"gitId":"weidak"},"content":"     * Used when there is an update to a profile attribute.","lastModifiedDate":"2021-10-11"},{"lineNumber":137,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":138,"author":{"gitId":"weidak"},"content":"     * @param profile Profile of the current user","lastModifiedDate":"2021-10-11"},{"lineNumber":139,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":140,"author":{"gitId":"tlyi"},"content":"    public void saveProfile(Profile profile) throws UnableToWriteFileException {","lastModifiedDate":"2021-10-13"},{"lineNumber":141,"author":{"gitId":"weidak"},"content":"        ArrayList\u003cString\u003e profileDetails \u003d encoder.encodeProfileDetails(profile);","lastModifiedDate":"2021-10-12"},{"lineNumber":142,"author":{"gitId":"weidak"},"content":"        writeToFile(profileDetails, FILEPATH_PROFILE);","lastModifiedDate":"2021-10-10"},{"lineNumber":143,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":144,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":145,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":146,"author":{"gitId":"weidak"},"content":"     * Saves the exercises into storage.","lastModifiedDate":"2021-10-11"},{"lineNumber":147,"author":{"gitId":"weidak"},"content":"     * Used when there is an update to the list.","lastModifiedDate":"2021-10-11"},{"lineNumber":148,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":149,"author":{"gitId":"weidak"},"content":"     * @param exercises ExerciseList to be saved","lastModifiedDate":"2021-10-11"},{"lineNumber":150,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":151,"author":{"gitId":"tlyi"},"content":"    public void saveExercises(ExerciseList exercises) throws UnableToWriteFileException {","lastModifiedDate":"2021-10-13"},{"lineNumber":152,"author":{"gitId":"weidak"},"content":"        ArrayList\u003cString\u003e exerciseList \u003d encoder.encodeExerciseList(exercises);","lastModifiedDate":"2021-10-12"},{"lineNumber":153,"author":{"gitId":"weidak"},"content":"        writeToFile(exerciseList, FILEPATH_EXERCISE_LIST);","lastModifiedDate":"2021-10-10"},{"lineNumber":154,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":155,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":156,"author":{"gitId":"weidak"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":157,"author":{"gitId":"weidak"},"content":"     * Saves the food items into storage.","lastModifiedDate":"2021-10-11"},{"lineNumber":158,"author":{"gitId":"weidak"},"content":"     * Used when there is an update to the list.","lastModifiedDate":"2021-10-11"},{"lineNumber":159,"author":{"gitId":"weidak"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":160,"author":{"gitId":"weidak"},"content":"     * @param foodItems FoodList to be saved","lastModifiedDate":"2021-10-11"},{"lineNumber":161,"author":{"gitId":"weidak"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":162,"author":{"gitId":"tlyi"},"content":"    public void saveFoodList(FoodList foodItems) throws UnableToWriteFileException {","lastModifiedDate":"2021-10-13"},{"lineNumber":163,"author":{"gitId":"weidak"},"content":"        ArrayList\u003cString\u003e foodList \u003d encoder.encodeFoodList(foodItems);","lastModifiedDate":"2021-10-12"},{"lineNumber":164,"author":{"gitId":"weidak"},"content":"        writeToFile(foodList, FILEPATH_FOOD_LIST);","lastModifiedDate":"2021-10-10"},{"lineNumber":165,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":166,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":167,"author":{"gitId":"weidak"},"content":"    private void writeToFile(ArrayList\u003cString\u003e itemList, String filePath) throws UnableToWriteFileException {","lastModifiedDate":"2021-10-10"},{"lineNumber":168,"author":{"gitId":"weidak"},"content":"        try {","lastModifiedDate":"2021-10-10"},{"lineNumber":169,"author":{"gitId":"weidak"},"content":"            FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2021-10-10"},{"lineNumber":170,"author":{"gitId":"weidak"},"content":"            for (String item : itemList) {","lastModifiedDate":"2021-10-10"},{"lineNumber":171,"author":{"gitId":"weidak"},"content":"                fw.write(item + System.lineSeparator());","lastModifiedDate":"2021-10-10"},{"lineNumber":172,"author":{"gitId":"weidak"},"content":"            }","lastModifiedDate":"2021-10-10"},{"lineNumber":173,"author":{"gitId":"weidak"},"content":"            fw.close();","lastModifiedDate":"2021-10-10"},{"lineNumber":174,"author":{"gitId":"weidak"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-10-10"},{"lineNumber":175,"author":{"gitId":"weidak"},"content":"            throw new UnableToWriteFileException();","lastModifiedDate":"2021-10-10"},{"lineNumber":176,"author":{"gitId":"weidak"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":177,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":178,"author":{"gitId":"weidak"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"weidak":173,"tlyi":5}},{"path":"src/main/java/seedu/duke/storage/exceptions/UnableToReadFileException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weidak"},"content":"package seedu.duke.storage.exceptions;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"weidak"},"content":"/**","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"weidak"},"content":" * An error that is thrown when the bot is unable to access the file or create the file.","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"weidak"},"content":" */","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"weidak"},"content":"public class UnableToReadFileException extends Exception {","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"weidak"},"content":"    private static final String ERROR_MESSAGE \u003d \" file is inaccessible due to an environment error.\"","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"weidak"},"content":"            + System.lineSeparator() + \"Please restart Fitbot and try again.\";","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"weidak"},"content":"    public UnableToReadFileException(String fileName) {","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"weidak"},"content":"        super(fileName + ERROR_MESSAGE);","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"weidak"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"weidak":13}},{"path":"src/main/java/seedu/duke/storage/exceptions/UnableToWriteFileException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weidak"},"content":"package seedu.duke.storage.exceptions;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"weidak"},"content":"public class UnableToWriteFileException extends Exception {","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"weidak"},"content":"    private static final String ERROR_MESSAGE \u003d \"Unable to write to file, something went wrong while saving\";","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"weidak"},"content":"    public UnableToWriteFileException() {","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"weidak"},"content":"        super(ERROR_MESSAGE);","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"weidak"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"weidak":9}},{"path":"src/main/java/seedu/duke/ui/Statistics.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tttyyzzz"},"content":"package seedu.duke.ui;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"tttyyzzz"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"tttyyzzz"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"tttyyzzz"},"content":"/* A class that manage the statics of the calories*/","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"tttyyzzz"},"content":"public class Statistics {","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"tttyyzzz"},"content":"    public static final String MESSAGE_CALORIE_GAIN \u003d \"Your calorie gained from food is: %d\";","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"tttyyzzz"},"content":"    public static final String MESSAGE_CALORIE_LOST \u003d \"Your calorie lost from exercise is: %d\";","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"tttyyzzz"},"content":"    public static final String MESSAGE_CALORIE_NET \u003d \"Your net calorie intake is: %d\";","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"tttyyzzz"},"content":"    public static final String MESSAGE_CALORIE_GOAL \u003d \"Your calorie to goal is: %d\";","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"tttyyzzz"},"content":"    public Statistics() {","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"tttyyzzz"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"tttyyzzz"},"content":"    private static Logger logger \u003d Logger.getLogger(\"Foo\");","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"tttyyzzz"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"tttyyzzz"},"content":"     * Calculate netCalories and format exerciseCalories, foodCalories, calorieGoal","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"tttyyzzz"},"content":"     * into strings.","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"tttyyzzz"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"tttyyzzz"},"content":"     * @param exerciseCalories is the total calories lost by exercising","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"tttyyzzz"},"content":"     * @param foodCalories     is the total calories gained by consuming food","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"tttyyzzz"},"content":"     * @param calorieGoal      is the goal set by the user","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"tttyyzzz"},"content":"     * @return formatted strings.","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"tttyyzzz"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"tttyyzzz"},"content":"    public String[] getCaloriesReport(int exerciseCalories, int foodCalories, int calorieGoal) {","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"tttyyzzz"},"content":"        int netCalories \u003d foodCalories - exerciseCalories;","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"tttyyzzz"},"content":"        int remainingCalories \u003d calorieGoal - netCalories;","lastModifiedDate":"2021-10-13"},{"lineNumber":33,"author":{"gitId":"tttyyzzz"},"content":"        return new String[]{String.format(MESSAGE_CALORIE_GAIN, foodCalories),","lastModifiedDate":"2021-10-13"},{"lineNumber":34,"author":{"gitId":"tttyyzzz"},"content":"                String.format(MESSAGE_CALORIE_LOST, exerciseCalories),","lastModifiedDate":"2021-10-13"},{"lineNumber":35,"author":{"gitId":"tttyyzzz"},"content":"                String.format(MESSAGE_CALORIE_NET, netCalories),","lastModifiedDate":"2021-10-13"},{"lineNumber":36,"author":{"gitId":"tttyyzzz"},"content":"                String.format(MESSAGE_CALORIE_GOAL, remainingCalories),","lastModifiedDate":"2021-10-13"},{"lineNumber":37,"author":{"gitId":"tttyyzzz"},"content":"                printCaloriesMessage(netCalories, calorieGoal)};","lastModifiedDate":"2021-10-13"},{"lineNumber":38,"author":{"gitId":"tttyyzzz"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":39,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":40,"author":{"gitId":"tttyyzzz"},"content":"    public String formatMessage(String... messages) {","lastModifiedDate":"2021-10-13"},{"lineNumber":41,"author":{"gitId":"tttyyzzz"},"content":"        StringBuilder content \u003d new StringBuilder(\"\");","lastModifiedDate":"2021-10-13"},{"lineNumber":42,"author":{"gitId":"tttyyzzz"},"content":"        for (String message : messages) {","lastModifiedDate":"2021-10-13"},{"lineNumber":43,"author":{"gitId":"tttyyzzz"},"content":"            content.append(message).append(Ui.LS);","lastModifiedDate":"2021-10-13"},{"lineNumber":44,"author":{"gitId":"tttyyzzz"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":45,"author":{"gitId":"tttyyzzz"},"content":"        return content.toString();","lastModifiedDate":"2021-10-13"},{"lineNumber":46,"author":{"gitId":"tttyyzzz"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":47,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":48,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":49,"author":{"gitId":"tttyyzzz"},"content":"    public String printCaloriesMessage(int netCalories, int calorieGoal) {","lastModifiedDate":"2021-10-13"},{"lineNumber":50,"author":{"gitId":"tttyyzzz"},"content":"        logger.log(Level.INFO, \"preparing calories message\");","lastModifiedDate":"2021-10-13"},{"lineNumber":51,"author":{"gitId":"tttyyzzz"},"content":"        int calorieDifference \u003d calorieGoal - netCalories;","lastModifiedDate":"2021-10-13"},{"lineNumber":52,"author":{"gitId":"tttyyzzz"},"content":"        String message;","lastModifiedDate":"2021-10-13"},{"lineNumber":53,"author":{"gitId":"tttyyzzz"},"content":"        if (calorieDifference \u003e 0) {","lastModifiedDate":"2021-10-13"},{"lineNumber":54,"author":{"gitId":"tttyyzzz"},"content":"            message \u003d String.format(\"You are %s cal away from your goal\", calorieDifference);","lastModifiedDate":"2021-10-13"},{"lineNumber":55,"author":{"gitId":"tttyyzzz"},"content":"        } else if (calorieDifference \u003c 0) {","lastModifiedDate":"2021-10-13"},{"lineNumber":56,"author":{"gitId":"tttyyzzz"},"content":"            message \u003d String.format(\"You have exceeded your calorie goal by %s cal \", calorieDifference);","lastModifiedDate":"2021-10-13"},{"lineNumber":57,"author":{"gitId":"tttyyzzz"},"content":"        } else {","lastModifiedDate":"2021-10-13"},{"lineNumber":58,"author":{"gitId":"tttyyzzz"},"content":"            assert calorieDifference \u003d\u003d 0 : \"calorieDifference should be 0\";","lastModifiedDate":"2021-10-13"},{"lineNumber":59,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":60,"author":{"gitId":"tttyyzzz"},"content":"            message \u003d String.format(\"You have reached your calorie goal exactly. Good job!\");","lastModifiedDate":"2021-10-13"},{"lineNumber":61,"author":{"gitId":"tttyyzzz"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":62,"author":{"gitId":"tttyyzzz"},"content":"        return message;","lastModifiedDate":"2021-10-13"},{"lineNumber":63,"author":{"gitId":"tttyyzzz"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":64,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":65,"author":{"gitId":"tttyyzzz"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"tttyyzzz":65}},{"path":"src/main/java/seedu/duke/ui/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.ui;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"tttyyzzz"},"content":"import java.lang.System;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"tlyi"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"tttyyzzz"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"tttyyzzz"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"tttyyzzz"},"content":"/**","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"tttyyzzz"},"content":" * This class deals with interaction with user on CLI.","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"tttyyzzz"},"content":" * Also helps to change color of output if required.","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"tttyyzzz"},"content":" */","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"tttyyzzz"},"content":"public class Ui {","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"tttyyzzz"},"content":"    // to delete on v2.1","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"tttyyzzz"},"content":"    public static final String ANSI_RESET \u003d \"\\u001B[0m\";","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"tttyyzzz"},"content":"    public static final String ANSI_BLACK \u003d \"\\u001B[30m\";","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"tttyyzzz"},"content":"    public static final String ANSI_RED \u003d \"\\u001B[31m\";","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"tttyyzzz"},"content":"    public static final String ANSI_GREEN \u003d \"\\u001B[32m\";","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"tttyyzzz"},"content":"    public static final String ANSI_YELLOW \u003d \"\\u001B[33m\";","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"tttyyzzz"},"content":"    public static final String ANSI_BLUE \u003d \"\\u001B[34m\";","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"tttyyzzz"},"content":"    public static final String ANSI_PURPLE \u003d \"\\u001B[35m\";","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"tttyyzzz"},"content":"    public static final String ANSI_CYAN \u003d \"\\u001B[36m\";","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"tttyyzzz"},"content":"    public static final String ANSI_WHITE \u003d \"\\u001B[37m\";","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"tttyyzzz"},"content":"    public static final String ANSI_GRAY \u003d \"\\u001B[90m\";","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"tttyyzzz"},"content":"    public static final String FULL_BLOCK \u003d \"█\";","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"tttyyzzz"},"content":"    public static final String HALF_BLOCK \u003d \"▌\";","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"tttyyzzz"},"content":"    public static final int MAX_BAR \u003d 16;","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"tttyyzzz"},"content":"    public static final int BAR_WIDTH \u003d 10;","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"tttyyzzz"},"content":"    public static final String SPACE \u003d \" \";","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"tlyi"},"content":"    public static final String TAB \u003d \"\\t\";","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"tlyi"},"content":"    public static final String DIVIDER \u003d \"___________________________________________\"","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"tlyi"},"content":"            + \"_______________________________________________________________\";","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"tttyyzzz"},"content":"    public static final String LS \u003d System.lineSeparator();","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"tlyi"},"content":"    public static final String INDENTED_LS \u003d LS + TAB;","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"tttyyzzz"},"content":"    public static final String EMOJI_1 \u003d \" ᕦ(ò_óˇ)\";","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"tttyyzzz"},"content":"    public static final String FITBOT_V0 \u003d \"  ______ _ _   _           _\"","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"tttyyzzz"},"content":"            + LS","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"tttyyzzz"},"content":"            + \" |  ____(_) | | |         | |\"","lastModifiedDate":"2021-10-07"},{"lineNumber":38,"author":{"gitId":"tttyyzzz"},"content":"            + LS","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"tttyyzzz"},"content":"            + \" | |__   _| |_| |__   ___ | |_\"","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"tttyyzzz"},"content":"            + LS","lastModifiedDate":"2021-10-08"},{"lineNumber":41,"author":{"gitId":"tttyyzzz"},"content":"            + \" |  __| | | __| \u0027_ \\\\ / _ \\\\| __|\"","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"tttyyzzz"},"content":"            + LS","lastModifiedDate":"2021-10-08"},{"lineNumber":43,"author":{"gitId":"tttyyzzz"},"content":"            + \" | |    | | |_| |_) | (_) | |_\"","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"tttyyzzz"},"content":"            + LS","lastModifiedDate":"2021-10-08"},{"lineNumber":45,"author":{"gitId":"tttyyzzz"},"content":"            + \" |_|    |_|\\\\__|_.__/ \\\\___/ \\\\__|\";","lastModifiedDate":"2021-10-07"},{"lineNumber":46,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":47,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":48,"author":{"gitId":"tlyi"},"content":"    //TODO: These constants are to be moved to UI class","lastModifiedDate":"2021-10-11"},{"lineNumber":49,"author":{"gitId":"tlyi"},"content":"    public static final String QUOTATION \u003d \"\\\"\";","lastModifiedDate":"2021-10-11"},{"lineNumber":50,"author":{"gitId":"tttyyzzz"},"content":"    public static final String MESSAGE_WELCOME \u003d \"Welcome to Fitbot, a desktop app that helps university students\"","lastModifiedDate":"2021-10-13"},{"lineNumber":51,"author":{"gitId":"tttyyzzz"},"content":"            + \" who are looking to keep track of their \"","lastModifiedDate":"2021-10-13"},{"lineNumber":52,"author":{"gitId":"tttyyzzz"},"content":"            + LS","lastModifiedDate":"2021-10-13"},{"lineNumber":53,"author":{"gitId":"tttyyzzz"},"content":"            + \"fitness and health. Please type a command or view the list of\"","lastModifiedDate":"2021-10-13"},{"lineNumber":54,"author":{"gitId":"tttyyzzz"},"content":"            + \"available commands by typing \u0027help\u0027.\";","lastModifiedDate":"2021-10-13"},{"lineNumber":55,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":56,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":57,"author":{"gitId":"tlyi"},"content":"    private Scanner scanner;","lastModifiedDate":"2021-10-11"},{"lineNumber":58,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":59,"author":{"gitId":"tlyi"},"content":"    public Ui() {","lastModifiedDate":"2021-10-11"},{"lineNumber":60,"author":{"gitId":"tlyi"},"content":"        this.scanner \u003d new Scanner(System.in);","lastModifiedDate":"2021-10-11"},{"lineNumber":61,"author":{"gitId":"tlyi"},"content":"        this.printStartApplicationPage();","lastModifiedDate":"2021-10-11"},{"lineNumber":62,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":63,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":64,"author":{"gitId":"tlyi"},"content":"    public String getUserInput() {  //To be moved into UI","lastModifiedDate":"2021-10-11"},{"lineNumber":65,"author":{"gitId":"tlyi"},"content":"        return scanner.nextLine();","lastModifiedDate":"2021-10-11"},{"lineNumber":66,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":67,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":68,"author":{"gitId":"tttyyzzz"},"content":"    private static Logger logger \u003d Logger.getLogger(\"Foo\");","lastModifiedDate":"2021-10-13"},{"lineNumber":69,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":70,"author":{"gitId":"tttyyzzz"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":71,"author":{"gitId":"tttyyzzz"},"content":"     * Surround strings with lines for user to differentiate results.","lastModifiedDate":"2021-10-08"},{"lineNumber":72,"author":{"gitId":"tttyyzzz"},"content":"     *","lastModifiedDate":"2021-10-08"},{"lineNumber":73,"author":{"gitId":"tttyyzzz"},"content":"     * @param messages is the strings that need to be printed on CLI","lastModifiedDate":"2021-10-08"},{"lineNumber":74,"author":{"gitId":"tttyyzzz"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":75,"author":{"gitId":"tlyi"},"content":"    public void formatMessageFramedWithDivider(String... messages) {","lastModifiedDate":"2021-10-11"},{"lineNumber":76,"author":{"gitId":"tttyyzzz"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2021-10-08"},{"lineNumber":77,"author":{"gitId":"tttyyzzz"},"content":"        for (String message : messages) {","lastModifiedDate":"2021-10-08"},{"lineNumber":78,"author":{"gitId":"tttyyzzz"},"content":"            System.out.println(message);","lastModifiedDate":"2021-10-08"},{"lineNumber":79,"author":{"gitId":"tttyyzzz"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":80,"author":{"gitId":"tttyyzzz"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2021-10-08"},{"lineNumber":81,"author":{"gitId":"tttyyzzz"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":82,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":83,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":84,"author":{"gitId":"tlyi"},"content":"    public void printStartApplicationPage() {","lastModifiedDate":"2021-10-11"},{"lineNumber":85,"author":{"gitId":"tttyyzzz"},"content":"        logger.log(Level.INFO, \"start of application\");","lastModifiedDate":"2021-10-13"},{"lineNumber":86,"author":{"gitId":"tttyyzzz"},"content":"        System.out.println(FITBOT_V0 + EMOJI_1 + LS + MESSAGE_WELCOME);","lastModifiedDate":"2021-10-13"},{"lineNumber":87,"author":{"gitId":"tttyyzzz"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":88,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":89,"author":{"gitId":"tttyyzzz"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"tttyyzzz":66,"tlyi":23}},{"path":"src/test/java/seedu/duke/exercise/ExerciseListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xingjie99"},"content":"package seedu.duke.exercise;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"xingjie99"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"xingjie99"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"xingjie99"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"xingjie99"},"content":"class ExerciseListTest {","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"xingjie99"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"xingjie99"},"content":"    void addExercise_exerciseClassParameter_expectAddInList() {","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"xingjie99"},"content":"        ExerciseList exerciseList \u003d new ExerciseList();","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"xingjie99"},"content":"        exerciseList.addExercise(new Exercise(\"Jumping Jacks\", 100));","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"xingjie99"},"content":"        assertEquals(\"Jumping Jacks (100 cal)\", exerciseList.getExercise(0).toString());","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"xingjie99"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"xingjie99"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"xingjie99"},"content":"    void deleteExercise_exerciseIndex_expectDeleteFromList() {","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"xingjie99"},"content":"        ExerciseList exerciseList \u003d new ExerciseList();","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"xingjie99"},"content":"        exerciseList.addExercise(new Exercise(\"Running\", 250));","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"xingjie99"},"content":"        exerciseList.addExercise(new Exercise(\"Jumping Jacks\", 100));","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"xingjie99"},"content":"        exerciseList.deleteExercise(0);","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"xingjie99"},"content":"        assertEquals(\"Jumping Jacks (100 cal)\", exerciseList.getExercise(0).toString());","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"xingjie99"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"xingjie99"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"xingjie99"},"content":"    void deleteExercise_exerciseIndex_expectCorrectNumberOfTasksLeft() {","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"xingjie99"},"content":"        ExerciseList exerciseList \u003d new ExerciseList();","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"xingjie99"},"content":"        exerciseList.addExercise(new Exercise(\"Running\", 250));","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"xingjie99"},"content":"        exerciseList.addExercise(new Exercise(\"Jumping Jacks\", 100));","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"xingjie99"},"content":"        exerciseList.deleteExercise(0);","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"xingjie99"},"content":"        assertEquals(1, exerciseList.getSize());","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"xingjie99"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"xingjie99"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"xingjie99"},"content":"    void deleteExercise_invalidIndex_expectException() {","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"xingjie99"},"content":"        ExerciseList exerciseList \u003d new ExerciseList();","lastModifiedDate":"2021-10-11"},{"lineNumber":39,"author":{"gitId":"xingjie99"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e exerciseList.deleteExercise(0));","lastModifiedDate":"2021-10-11"},{"lineNumber":40,"author":{"gitId":"xingjie99"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"xingjie99"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":43,"author":{"gitId":"xingjie99"},"content":"    void totalCalorie_someExercises_expectTotalCalorie() {","lastModifiedDate":"2021-10-11"},{"lineNumber":44,"author":{"gitId":"xingjie99"},"content":"        ExerciseList exerciseList \u003d new ExerciseList();","lastModifiedDate":"2021-10-11"},{"lineNumber":45,"author":{"gitId":"xingjie99"},"content":"        exerciseList.addExercise(new Exercise(\"Running\", 250));","lastModifiedDate":"2021-10-11"},{"lineNumber":46,"author":{"gitId":"xingjie99"},"content":"        exerciseList.addExercise(new Exercise(\"Jumping Jacks\", 100));","lastModifiedDate":"2021-10-11"},{"lineNumber":47,"author":{"gitId":"xingjie99"},"content":"        exerciseList.addExercise(new Exercise(\"Skipping\", 200));","lastModifiedDate":"2021-10-11"},{"lineNumber":48,"author":{"gitId":"xingjie99"},"content":"        exerciseList.addExercise(new Exercise(\"Swimming\", 300));","lastModifiedDate":"2021-10-11"},{"lineNumber":49,"author":{"gitId":"tlyi"},"content":"        assertEquals(850, exerciseList.getTotalCalories());","lastModifiedDate":"2021-10-13"},{"lineNumber":50,"author":{"gitId":"xingjie99"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":51,"author":{"gitId":"xingjie99"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"xingjie99":50,"tlyi":1}},{"path":"src/test/java/seedu/duke/food/FoodListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.food;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"tryyang2001"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"tryyang2001"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"tryyang2001"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"tryyang2001"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"tlyi"},"content":"class FoodListTest {","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"tryyang2001"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"tryyang2001"},"content":"    void addFoodUsingFoodClassParameter_foodClassParameter_expectExistsInList() {","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"tryyang2001"},"content":"        FoodList foodList \u003d new FoodList();","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"tryyang2001"},"content":"        foodList.addFood(new Food(\"chicken rice\", 607));","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"tryyang2001"},"content":"        assertEquals(\"chicken rice (607 cal)\", foodList.get(foodList.getSize() - 1).toString());","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"tryyang2001"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"tryyang2001"},"content":"    void printNonEmptyFoodList_nonEmptyFoodList_expectCorrectOutputString() {","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"tryyang2001"},"content":"        FoodList foodList \u003d new FoodList();","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"tryyang2001"},"content":"        foodList.addFood(new Food(\"chicken rice\", 607));","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"tryyang2001"},"content":"        foodList.addFood(new Food(\"yong tau foo\", 536));","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"tryyang2001"},"content":"        foodList.addFood(new Food(\"mcspicy alacarte\", 528));","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"tryyang2001"},"content":"        foodList.addFood(new Food(\"char kway teow\", 744));","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"tryyang2001"},"content":"        System.out.println(foodList.convertToString());","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"tryyang2001"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"tryyang2001"},"content":"    void deleteExistingFoodItem_validIndexInput_expectDeleteSuccessful() {","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"tryyang2001"},"content":"        FoodList foodList \u003d new FoodList();","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"tryyang2001"},"content":"        foodList.addFood(new Food(\"chicken rice\", 607));","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"tryyang2001"},"content":"        foodList.addFood(new Food(\"yong tau foo\", 536));","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"tryyang2001"},"content":"        foodList.deleteFood(1);","lastModifiedDate":"2021-10-10"},{"lineNumber":34,"author":{"gitId":"tryyang2001"},"content":"        assertNotEquals(2, foodList.getSize());","lastModifiedDate":"2021-10-10"},{"lineNumber":35,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"tryyang2001"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":38,"author":{"gitId":"tryyang2001"},"content":"    void deleteNonExistingFoodItem_invalidIndexInput_expectIndexOutOfBoundException() {","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"tryyang2001"},"content":"        FoodList foodList \u003d new FoodList();","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"tryyang2001"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e foodList.deleteFood(0));","lastModifiedDate":"2021-10-10"},{"lineNumber":41,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"tryyang2001"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"tryyang2001"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"tryyang2001"},"content":"    void deleteAllFoodItems_callDeleteAllMethod_expectEmptyList() {","lastModifiedDate":"2021-10-07"},{"lineNumber":45,"author":{"gitId":"tryyang2001"},"content":"        FoodList foodList \u003d new FoodList();","lastModifiedDate":"2021-10-07"},{"lineNumber":46,"author":{"gitId":"tryyang2001"},"content":"        foodList.addFood(new Food(\"chicken rice\", 607));","lastModifiedDate":"2021-10-10"},{"lineNumber":47,"author":{"gitId":"tryyang2001"},"content":"        foodList.addFood(new Food(\"yong tau foo\", 536));","lastModifiedDate":"2021-10-10"},{"lineNumber":48,"author":{"gitId":"tryyang2001"},"content":"        foodList.addFood(new Food(\"mcspicy alacarte\", 528));","lastModifiedDate":"2021-10-10"},{"lineNumber":49,"author":{"gitId":"tryyang2001"},"content":"        foodList.addFood(new Food(\"char kway teow\", 744));","lastModifiedDate":"2021-10-10"},{"lineNumber":50,"author":{"gitId":"tryyang2001"},"content":"        foodList.clearFoodList();","lastModifiedDate":"2021-10-11"},{"lineNumber":51,"author":{"gitId":"tryyang2001"},"content":"        assertEquals(0, foodList.getSize());","lastModifiedDate":"2021-10-10"},{"lineNumber":52,"author":{"gitId":"tryyang2001"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":53,"author":{"gitId":"tryyang2001"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"tryyang2001":51,"tlyi":2}},{"path":"src/test/java/seedu/duke/parser/ParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tlyi"},"content":"package seedu.duke.parser;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"tlyi"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"tlyi"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"tlyi"},"content":"import seedu.duke.commands.AddExerciseCommand;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"tlyi"},"content":"import seedu.duke.commands.AddFoodCommand;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"tlyi"},"content":"import seedu.duke.commands.ByeCommand;","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"tlyi"},"content":"import seedu.duke.commands.CalculateBmiCommand;","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"tlyi"},"content":"import seedu.duke.commands.CalculateBmiWithProfileCommand;","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"tlyi"},"content":"import seedu.duke.commands.Command;","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"tlyi"},"content":"import seedu.duke.commands.InvalidCommand;","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"tlyi"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"tlyi"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"tlyi"},"content":"import static seedu.duke.parser.Parser.MESSAGE_ERROR_COMMAND_DOES_NOT_EXIST;","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"tlyi"},"content":"import static seedu.duke.parser.Parser.MESSAGE_ERROR_ILLEGAL_CHARACTER;","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"tlyi"},"content":"import static seedu.duke.parser.Parser.MESSAGE_ERROR_INVALID_CALORIES_INFO;","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"tlyi"},"content":"import static seedu.duke.parser.Parser.MESSAGE_ERROR_NOT_A_NUMBER;","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"tlyi"},"content":"import static seedu.duke.parser.Parser.MESSAGE_ERROR_NO_HEIGHT;","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"tlyi"},"content":"import static seedu.duke.parser.Parser.MESSAGE_ERROR_NO_WEIGHT;","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"tlyi"},"content":"class ParserTest {","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"tlyi"},"content":"    private Parser parser;","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"tlyi"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"tlyi"},"content":"    public void setUp() {","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"tlyi"},"content":"        parser \u003d new Parser();","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"tlyi"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"tlyi"},"content":"    void parseCommand_invalidCommandWord_commandDoesNotExistMessage() {","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"tlyi"},"content":"        parseAndAssertIncorrectWithMessage(MESSAGE_ERROR_COMMAND_DOES_NOT_EXIST, \"potato\", \"hi\");","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"tlyi"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":38,"author":{"gitId":"tlyi"},"content":"    void parseCommand_containsTextFileDelimiter_illegalCharacterMessage() {","lastModifiedDate":"2021-10-13"},{"lineNumber":39,"author":{"gitId":"tlyi"},"content":"        parseAndAssertIncorrectWithMessage(MESSAGE_ERROR_ILLEGAL_CHARACTER, \"potato | as\", \"add |\", \"name h|o\");","lastModifiedDate":"2021-10-13"},{"lineNumber":40,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":41,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":42,"author":{"gitId":"tlyi"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":43,"author":{"gitId":"tlyi"},"content":"    void parseAddCommand_correctInput_addCommand() {","lastModifiedDate":"2021-10-11"},{"lineNumber":44,"author":{"gitId":"tlyi"},"content":"        parseAndAssertCommandType(\"add f/potato c/20\", AddFoodCommand.class);","lastModifiedDate":"2021-10-11"},{"lineNumber":45,"author":{"gitId":"tlyi"},"content":"        parseAndAssertCommandType(\"aDD c/20 f/potato\", AddFoodCommand.class);","lastModifiedDate":"2021-10-11"},{"lineNumber":46,"author":{"gitId":"tlyi"},"content":"        parseAndAssertCommandType(\"add e/potato c/20\", AddExerciseCommand.class);","lastModifiedDate":"2021-10-11"},{"lineNumber":47,"author":{"gitId":"tlyi"},"content":"        parseAndAssertCommandType(\"aDD c/20 e/potato\", AddExerciseCommand.class);","lastModifiedDate":"2021-10-11"},{"lineNumber":48,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":49,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":50,"author":{"gitId":"tlyi"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":51,"author":{"gitId":"tlyi"},"content":"    void parseAddCommand_itemTypeNotSpecified_itemTypeNotSpecifiedMessage() {","lastModifiedDate":"2021-10-11"},{"lineNumber":52,"author":{"gitId":"tlyi"},"content":"        final String expectedMessage \u003d String.format(Command.MESSAGE_ERROR_ITEM_NOT_SPECIFIED,","lastModifiedDate":"2021-10-11"},{"lineNumber":53,"author":{"gitId":"tlyi"},"content":"                AddFoodCommand.MESSAGE_COMMAND_FORMAT,","lastModifiedDate":"2021-10-11"},{"lineNumber":54,"author":{"gitId":"tlyi"},"content":"                AddExerciseCommand.MESSAGE_COMMAND_FORMAT);","lastModifiedDate":"2021-10-11"},{"lineNumber":55,"author":{"gitId":"tlyi"},"content":"        parseAndAssertIncorrectWithMessage(expectedMessage, \"add\", \"add e\", \"add c/\");","lastModifiedDate":"2021-10-11"},{"lineNumber":56,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":57,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":58,"author":{"gitId":"tlyi"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":59,"author":{"gitId":"tlyi"},"content":"    void parseAddCommand_nameNotGiven_invalidCommand() {","lastModifiedDate":"2021-10-11"},{"lineNumber":60,"author":{"gitId":"tlyi"},"content":"        parseAndAssertCommandType(\"add f/ c/120\", InvalidCommand.class);","lastModifiedDate":"2021-10-11"},{"lineNumber":61,"author":{"gitId":"tlyi"},"content":"        parseAndAssertCommandType(\"add e/ c/120\", InvalidCommand.class);","lastModifiedDate":"2021-10-11"},{"lineNumber":62,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":63,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":64,"author":{"gitId":"tlyi"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":65,"author":{"gitId":"tlyi"},"content":"    void parseAddCommand_caloriesNotGiven_invalidCommand() {","lastModifiedDate":"2021-10-11"},{"lineNumber":66,"author":{"gitId":"tlyi"},"content":"        parseAndAssertCommandType(\"add f/potato\", InvalidCommand.class);","lastModifiedDate":"2021-10-11"},{"lineNumber":67,"author":{"gitId":"tlyi"},"content":"        parseAndAssertCommandType(\"add f/potato c/\", InvalidCommand.class);","lastModifiedDate":"2021-10-11"},{"lineNumber":68,"author":{"gitId":"tlyi"},"content":"        parseAndAssertCommandType(\"add e/hiit\", InvalidCommand.class);","lastModifiedDate":"2021-10-11"},{"lineNumber":69,"author":{"gitId":"tlyi"},"content":"        parseAndAssertCommandType(\"add e/hiit c/\", InvalidCommand.class);","lastModifiedDate":"2021-10-11"},{"lineNumber":70,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":71,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":72,"author":{"gitId":"tlyi"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":73,"author":{"gitId":"tlyi"},"content":"    void parseAddCommand_caloriesNotANumber_caloriesNotNumberMessage() {","lastModifiedDate":"2021-10-11"},{"lineNumber":74,"author":{"gitId":"tlyi"},"content":"        parseAndAssertIncorrectWithMessage(MESSAGE_ERROR_INVALID_CALORIES_INFO,","lastModifiedDate":"2021-10-11"},{"lineNumber":75,"author":{"gitId":"tlyi"},"content":"                \"add f/potato c/potato\", \"add e/hiit c/potato\");","lastModifiedDate":"2021-10-11"},{"lineNumber":76,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":77,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":78,"author":{"gitId":"tlyi"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":79,"author":{"gitId":"tlyi"},"content":"    void parseByeCommand_correctInput_byeCommand() {","lastModifiedDate":"2021-10-13"},{"lineNumber":80,"author":{"gitId":"tlyi"},"content":"        parseAndAssertCommandType(\"bye\", ByeCommand.class);","lastModifiedDate":"2021-10-13"},{"lineNumber":81,"author":{"gitId":"tlyi"},"content":"        parseAndAssertCommandType(\"ByE\", ByeCommand.class);","lastModifiedDate":"2021-10-13"},{"lineNumber":82,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":83,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":84,"author":{"gitId":"tlyi"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":85,"author":{"gitId":"tlyi"},"content":"    void parseCalculateBmiWithProfileCommand_correctInput_calculateBmiWithProfileCommand() {","lastModifiedDate":"2021-10-13"},{"lineNumber":86,"author":{"gitId":"tlyi"},"content":"        parseAndAssertCommandType(\"bmi\", CalculateBmiWithProfileCommand.class);","lastModifiedDate":"2021-10-13"},{"lineNumber":87,"author":{"gitId":"tlyi"},"content":"        parseAndAssertCommandType(\"BMI\", CalculateBmiWithProfileCommand.class);","lastModifiedDate":"2021-10-13"},{"lineNumber":88,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":89,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":90,"author":{"gitId":"tlyi"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":91,"author":{"gitId":"tlyi"},"content":"    void parseCalculateBmiCommand_correctInput_calculateBmiCommand() {","lastModifiedDate":"2021-10-13"},{"lineNumber":92,"author":{"gitId":"tlyi"},"content":"        parseAndAssertCommandType(\"bmi h/50 w/20\", CalculateBmiCommand.class);","lastModifiedDate":"2021-10-13"},{"lineNumber":93,"author":{"gitId":"tlyi"},"content":"        parseAndAssertCommandType(\"BMI w/20 h/50\", CalculateBmiCommand.class);","lastModifiedDate":"2021-10-13"},{"lineNumber":94,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":95,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":96,"author":{"gitId":"tlyi"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":97,"author":{"gitId":"tlyi"},"content":"    void parseCalculateBmiCommand_parametersNotGiven_invalidCommand() {","lastModifiedDate":"2021-10-13"},{"lineNumber":98,"author":{"gitId":"tlyi"},"content":"        parseAndAssertCommandType(\"bmi w/20\", InvalidCommand.class);","lastModifiedDate":"2021-10-13"},{"lineNumber":99,"author":{"gitId":"tlyi"},"content":"        parseAndAssertCommandType(\"bmi h/20\", InvalidCommand.class);","lastModifiedDate":"2021-10-13"},{"lineNumber":100,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":101,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":102,"author":{"gitId":"tlyi"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":103,"author":{"gitId":"tlyi"},"content":"    void parseCalculateCommand_parametersInvalid_errorMessage() {","lastModifiedDate":"2021-10-13"},{"lineNumber":104,"author":{"gitId":"tlyi"},"content":"        parseAndAssertIncorrectWithMessage(MESSAGE_ERROR_NO_HEIGHT, \"BMI w/20 h/potato\");","lastModifiedDate":"2021-10-13"},{"lineNumber":105,"author":{"gitId":"tlyi"},"content":"        parseAndAssertIncorrectWithMessage(MESSAGE_ERROR_NO_WEIGHT, \"BMI w/potato h/20\");","lastModifiedDate":"2021-10-13"},{"lineNumber":106,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":107,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":108,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":109,"author":{"gitId":"tlyi"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":110,"author":{"gitId":"tlyi"},"content":"    void changeHeightCommand_heightNotGiven_invalidCommand() {","lastModifiedDate":"2021-10-13"},{"lineNumber":111,"author":{"gitId":"tlyi"},"content":"        parseAndAssertCommandType(\"height\", InvalidCommand.class);","lastModifiedDate":"2021-10-13"},{"lineNumber":112,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":113,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":114,"author":{"gitId":"tlyi"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":115,"author":{"gitId":"tlyi"},"content":"    void changeHeightCommand_heightNotANumber_errorMessage() {","lastModifiedDate":"2021-10-13"},{"lineNumber":116,"author":{"gitId":"tlyi"},"content":"        parseAndAssertIncorrectWithMessage(MESSAGE_ERROR_NOT_A_NUMBER, \"height abc\");","lastModifiedDate":"2021-10-13"},{"lineNumber":117,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":118,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":119,"author":{"gitId":"tlyi"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":120,"author":{"gitId":"tlyi"},"content":"    void changeWeightCommand_weightNotGiven_invalidCommand() {","lastModifiedDate":"2021-10-13"},{"lineNumber":121,"author":{"gitId":"tlyi"},"content":"        parseAndAssertCommandType(\"weight\", InvalidCommand.class);","lastModifiedDate":"2021-10-13"},{"lineNumber":122,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":123,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":124,"author":{"gitId":"tlyi"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":125,"author":{"gitId":"tlyi"},"content":"    void changeWeightCommand_weightNotANumber_errorMessage() {","lastModifiedDate":"2021-10-13"},{"lineNumber":126,"author":{"gitId":"tlyi"},"content":"        parseAndAssertIncorrectWithMessage(MESSAGE_ERROR_NOT_A_NUMBER, \"weight abc\");","lastModifiedDate":"2021-10-13"},{"lineNumber":127,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":128,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":129,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":130,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":131,"author":{"gitId":"tlyi"},"content":"    /*","lastModifiedDate":"2021-10-11"},{"lineNumber":132,"author":{"gitId":"tlyi"},"content":"     * Utility methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-11"},{"lineNumber":133,"author":{"gitId":"tlyi"},"content":"     * Adapted from AddressBook-Level2","lastModifiedDate":"2021-10-11"},{"lineNumber":134,"author":{"gitId":"tlyi"},"content":"     * https://github.com/se-edu/addressbook-level2/blob/master/test/java/seedu/addressbook/parser/ParserTest.java","lastModifiedDate":"2021-10-11"},{"lineNumber":135,"author":{"gitId":"tlyi"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":136,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":137,"author":{"gitId":"tlyi"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":138,"author":{"gitId":"tlyi"},"content":"     * Asserts that parsing the given inputs will return IncorrectCommand with the given feedback message.","lastModifiedDate":"2021-10-11"},{"lineNumber":139,"author":{"gitId":"tlyi"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":140,"author":{"gitId":"tlyi"},"content":"    private void parseAndAssertIncorrectWithMessage(String errorMessage, String... inputs) {","lastModifiedDate":"2021-10-11"},{"lineNumber":141,"author":{"gitId":"tlyi"},"content":"        for (String input : inputs) {","lastModifiedDate":"2021-10-11"},{"lineNumber":142,"author":{"gitId":"tlyi"},"content":"            final InvalidCommand result \u003d parseAndAssertCommandType(input, InvalidCommand.class);","lastModifiedDate":"2021-10-11"},{"lineNumber":143,"author":{"gitId":"tlyi"},"content":"            assertEquals(result.errorMessage, errorMessage);","lastModifiedDate":"2021-10-11"},{"lineNumber":144,"author":{"gitId":"tlyi"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":145,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":146,"author":{"gitId":"tlyi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":147,"author":{"gitId":"tlyi"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":148,"author":{"gitId":"tlyi"},"content":"     * Parses input and asserts the class/type of the returned command object.","lastModifiedDate":"2021-10-11"},{"lineNumber":149,"author":{"gitId":"tlyi"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":150,"author":{"gitId":"tlyi"},"content":"     * @param input                to be parsed","lastModifiedDate":"2021-10-11"},{"lineNumber":151,"author":{"gitId":"tlyi"},"content":"     * @param expectedCommandClass expected class of returned command","lastModifiedDate":"2021-10-11"},{"lineNumber":152,"author":{"gitId":"tlyi"},"content":"     * @return the parsed command object","lastModifiedDate":"2021-10-11"},{"lineNumber":153,"author":{"gitId":"tlyi"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":154,"author":{"gitId":"tlyi"},"content":"    private \u003cT extends Command\u003e T parseAndAssertCommandType(String input, Class\u003cT\u003e expectedCommandClass) {","lastModifiedDate":"2021-10-11"},{"lineNumber":155,"author":{"gitId":"tlyi"},"content":"        final Command result \u003d parser.parseCommand(input);","lastModifiedDate":"2021-10-11"},{"lineNumber":156,"author":{"gitId":"tlyi"},"content":"        assertTrue(result.getClass().isAssignableFrom(expectedCommandClass));","lastModifiedDate":"2021-10-11"},{"lineNumber":157,"author":{"gitId":"tlyi"},"content":"        return (T) result;","lastModifiedDate":"2021-10-11"},{"lineNumber":158,"author":{"gitId":"tlyi"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":159,"author":{"gitId":"tlyi"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"tlyi":159}},{"path":"src/test/java/seedu/duke/profile/ProfileTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"weidak"},"content":"package seedu.duke.profile;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"weidak"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"weidak"},"content":"import seedu.duke.profile.exceptions.InvalidCharacteristicException;","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"weidak"},"content":"import seedu.duke.profile.exceptions.NullCharacteristicException;","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"weidak"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"weidak"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"weidak"},"content":"class ProfileTest {","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"weidak"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"weidak"},"content":"    void createProfile_negativeInputs_expectException() {","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"weidak"},"content":"        String name \u003d \"John\";","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"weidak"},"content":"        double height \u003d -1;","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"weidak"},"content":"        double weight \u003d -1;","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"weidak"},"content":"        int calorieGoal \u003d 0;","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"weidak"},"content":"        assertThrows(InvalidCharacteristicException.class,","lastModifiedDate":"2021-10-09"},{"lineNumber":20,"author":{"gitId":"weidak"},"content":"            () -\u003e {","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"weidak"},"content":"                Profile p \u003d new Profile(name, height, weight, calorieGoal);","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"weidak"},"content":"            });","lastModifiedDate":"2021-10-09"},{"lineNumber":23,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":24,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":25,"author":{"gitId":"weidak"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":26,"author":{"gitId":"weidak"},"content":"    void setHeight_negativeInput_expectException() throws InvalidCharacteristicException {","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"weidak"},"content":"        String name \u003d \"John\";","lastModifiedDate":"2021-10-09"},{"lineNumber":28,"author":{"gitId":"weidak"},"content":"        double height \u003d 170.2;","lastModifiedDate":"2021-10-09"},{"lineNumber":29,"author":{"gitId":"weidak"},"content":"        double weight \u003d 60.5;","lastModifiedDate":"2021-10-09"},{"lineNumber":30,"author":{"gitId":"weidak"},"content":"        int calorieGoal \u003d 1240;","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"weidak"},"content":"        Profile p \u003d new Profile(name, height, weight, calorieGoal);","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"weidak"},"content":"        assertThrows(InvalidCharacteristicException.class,","lastModifiedDate":"2021-10-09"},{"lineNumber":33,"author":{"gitId":"weidak"},"content":"            () -\u003e p.setHeight(-1));","lastModifiedDate":"2021-10-09"},{"lineNumber":34,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":35,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":36,"author":{"gitId":"weidak"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":37,"author":{"gitId":"weidak"},"content":"    void setWeight_negativeInput_expectException() throws InvalidCharacteristicException {","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"weidak"},"content":"        String name \u003d \"John\";","lastModifiedDate":"2021-10-09"},{"lineNumber":39,"author":{"gitId":"weidak"},"content":"        double height \u003d 170.2;","lastModifiedDate":"2021-10-09"},{"lineNumber":40,"author":{"gitId":"weidak"},"content":"        double weight \u003d 60.5;","lastModifiedDate":"2021-10-09"},{"lineNumber":41,"author":{"gitId":"weidak"},"content":"        int calorieGoal \u003d 1240;","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"weidak"},"content":"        Profile p \u003d new Profile(name, height, weight, calorieGoal);","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"weidak"},"content":"        assertThrows(InvalidCharacteristicException.class,","lastModifiedDate":"2021-10-09"},{"lineNumber":44,"author":{"gitId":"weidak"},"content":"            () -\u003e p.setWeight(-1));","lastModifiedDate":"2021-10-09"},{"lineNumber":45,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":46,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":47,"author":{"gitId":"weidak"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":48,"author":{"gitId":"weidak"},"content":"    void calculateBmi_twoDoubleInputs_expectDoubleReturned() throws InvalidCharacteristicException {","lastModifiedDate":"2021-10-09"},{"lineNumber":49,"author":{"gitId":"weidak"},"content":"        double height \u003d 171.2;","lastModifiedDate":"2021-10-09"},{"lineNumber":50,"author":{"gitId":"weidak"},"content":"        double weight \u003d 59.8;","lastModifiedDate":"2021-10-09"},{"lineNumber":51,"author":{"gitId":"weidak"},"content":"        assertEquals(20.4, Profile.calculateBmi(height, weight));","lastModifiedDate":"2021-10-09"},{"lineNumber":52,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":53,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":54,"author":{"gitId":"weidak"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":55,"author":{"gitId":"weidak"},"content":"    void calculateBmi_negativeInputs_expectException() {","lastModifiedDate":"2021-10-09"},{"lineNumber":56,"author":{"gitId":"weidak"},"content":"        double height \u003d -171.2;","lastModifiedDate":"2021-10-09"},{"lineNumber":57,"author":{"gitId":"weidak"},"content":"        double weight \u003d -59.8;","lastModifiedDate":"2021-10-09"},{"lineNumber":58,"author":{"gitId":"weidak"},"content":"        assertThrows(InvalidCharacteristicException.class,","lastModifiedDate":"2021-10-09"},{"lineNumber":59,"author":{"gitId":"weidak"},"content":"            () -\u003e Profile.calculateBmi(height, weight));","lastModifiedDate":"2021-10-09"},{"lineNumber":60,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":61,"author":{"gitId":"weidak"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":62,"author":{"gitId":"weidak"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":63,"author":{"gitId":"weidak"},"content":"    void retrieveBmiStatus_healthyBmiInput_expectHealthyStatus() {","lastModifiedDate":"2021-10-09"},{"lineNumber":64,"author":{"gitId":"weidak"},"content":"        String expectedStatus \u003d \"Healthy\";","lastModifiedDate":"2021-10-09"},{"lineNumber":65,"author":{"gitId":"weidak"},"content":"        double bmi \u003d 22.5;","lastModifiedDate":"2021-10-09"},{"lineNumber":66,"author":{"gitId":"weidak"},"content":"        assertEquals(expectedStatus, Profile.retrieveBmiStatus(bmi));","lastModifiedDate":"2021-10-09"},{"lineNumber":67,"author":{"gitId":"weidak"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":68,"author":{"gitId":"weidak"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"weidak":68}},{"path":"src/test/java/seedu/duke/ui/StatisticsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tttyyzzz"},"content":"package seedu.duke.ui;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"tttyyzzz"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"tttyyzzz"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"tttyyzzz"},"content":"class StatisticsTest {","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"tttyyzzz"},"content":"    Statistics stats \u003d new Statistics();","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"tttyyzzz"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"tttyyzzz"},"content":"    void printCalorieResult_netCaloriesAndCalorieGoal_messages() {","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"tttyyzzz"},"content":"        int caloriesGoal \u003d 5000;","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"tttyyzzz"},"content":"        int foodCalories \u003d 3000;","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"tttyyzzz"},"content":"        int exerciseCalories \u003d 2000;","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"tttyyzzz"},"content":"        int netCalories \u003d foodCalories - exerciseCalories;","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"tttyyzzz"},"content":"        String message \u003d stats.printCaloriesMessage(netCalories, caloriesGoal);","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"tttyyzzz"},"content":"        assertEquals(\"You are 4000 cal away from your goal\", message);","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"tttyyzzz"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"tttyyzzz"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"tttyyzzz"},"content":"    void printCalories_foodCaloriesExerciseCaloriesAndCalorieGoal_messageArray() {","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"tttyyzzz"},"content":"        int caloriesGoal \u003d 5000;","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"tttyyzzz"},"content":"        int foodCalories \u003d 3000;","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"tttyyzzz"},"content":"        int exerciseCalories \u003d 2000;","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"tttyyzzz"},"content":"        String expectedResult \u003d \"You are 6000 cal away from your goal\";","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"tttyyzzz"},"content":"        assertEquals(expectedResult, stats.getCaloriesReport(foodCalories, exerciseCalories, caloriesGoal)[4]);","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"tttyyzzz"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"tttyyzzz"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"tttyyzzz":32}}]
