[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Duke project template","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11 (use the exact version), update Intellij to the most recent version.","lastModifiedDate":"2020-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. **Ensure Intellij JDK 11 is defined as an SDK**, as described [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk) -- this step is not needed if you have used JDK 11 in a previous Intellij project.","lastModifiedDate":"2020-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"   * In the same dialog, you _may_ have to set the Project language level field to the SDK default option.","lastModifiedDate":"2021-09-04"},{"lineNumber":11,"author":{"gitId":"-"},"content":"1. **Import the project _as a Gradle project_**, as described [here](https://se-education.org/guides/tutorials/intellijImportGradleProject.html).","lastModifiedDate":"2020-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"1. **Verify the set up**: After the importing is complete, locate the `src/main/java/seedu/duke/Duke.java` file, right-click it, and choose `Run Duke.main()`. If the setup is correct, you should see something like the below:","lastModifiedDate":"2020-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"   \u003e Task :compileJava","lastModifiedDate":"2020-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   \u003e Task :processResources NO-SOURCE","lastModifiedDate":"2020-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"   \u003e Task :classes","lastModifiedDate":"2020-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ","lastModifiedDate":"2020-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   \u003e Task :Duke.main()","lastModifiedDate":"2020-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   ","lastModifiedDate":"2020-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   What is your name?","lastModifiedDate":"2020-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"   Type some word and press enter to let the execution proceed to the end.","lastModifiedDate":"2020-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"## Build automation using Gradle","lastModifiedDate":"2020-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"* This project uses Gradle for build automation and dependency management. It includes a basic build script as well (i.e. the `build.gradle` file).","lastModifiedDate":"2020-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"* If you are new to Gradle, refer to the [Gradle Tutorial at se-education.org/guides](https://se-education.org/guides/tutorials/gradle.html).","lastModifiedDate":"2020-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"## Testing","lastModifiedDate":"2020-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"### I/O redirection tests","lastModifiedDate":"2020-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":39,"author":{"gitId":"oneScotch"},"content":"* To run _I/O redirection_ tests (aka _Text ui tests_), navigate to the `text-ui-test` and run the `runtest(.bat/.sh)` script.","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"### JUnit tests","lastModifiedDate":"2020-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"* A skeleton JUnit test (`src/test/java/seedu/duke/DukeTest.java`) is provided with this project template. ","lastModifiedDate":"2020-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"* If you are new to JUnit, refer to the [JUnit Tutorial at se-education.org/guides](https://se-education.org/guides/tutorials/junit.html).","lastModifiedDate":"2020-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"## Checkstyle","lastModifiedDate":"2020-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* A sample CheckStyle rule configuration is provided in this project.","lastModifiedDate":"2020-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* If you are new to Checkstyle, refer to the [Checkstyle Tutorial at se-education.org/guides](https://se-education.org/guides/tutorials/checkstyle.html).","lastModifiedDate":"2020-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"## CI using GitHub Actions","lastModifiedDate":"2020-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"The project uses [GitHub actions](https://github.com/features/actions) for CI. When you push a commit to this repo or PR against it, GitHub actions will run automatically to build and verify the code as updated by the commit/PR.","lastModifiedDate":"2020-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"## Documentation","lastModifiedDate":"2020-05-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"`/docs` folder contains a skeleton version of the project documentation.","lastModifiedDate":"2020-05-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"Steps for publishing documentation to the public: ","lastModifiedDate":"2020-05-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"1. If you are using this project template for an individual project, go your fork on GitHub.\u003cbr\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"   If you are using this project template for a team project, go to the team fork on GitHub.","lastModifiedDate":"2020-05-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"1. Click on the `settings` tab.","lastModifiedDate":"2020-05-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"1. Scroll down to the `GitHub Pages` section.","lastModifiedDate":"2020-05-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"1. Set the `source` as `master branch /docs folder`.","lastModifiedDate":"2020-05-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"1. Optionally, use the `choose a theme` button to choose a theme for your documentation.","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"oneScotch":1,"-":64}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    mainClassName \u003d \"seedu.duke.Duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.23\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"oneScotch"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2021-10-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"oneScotch":1,"-":46}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# About us","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"Display | Name | Github Profile | Portfolio ","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"--------|:----:|:--------------:|:---------:","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"Mist0919"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Xue Yushan | [Github](https://github.com/) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2021-09-30"},{"lineNumber":6,"author":{"gitId":"LilyDaytoy"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Peng Wenxuan | [Github](https://github.com/) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2021-09-30"},{"lineNumber":7,"author":{"gitId":"oneScotch"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Wang Ruisi | [Github](https://github.com/oneScotch) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2021-09-30"},{"lineNumber":8,"author":{"gitId":"Vincent6896"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Wang Chuhan | [Github](https://github.com/) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2021-09-30"},{"lineNumber":9,"author":{"gitId":"Yuxinn-J"},"content":"![](https://avatars.githubusercontent.com/u/73170270?v\u003d4) | Jiang Yuxin | [Github](https://github.com/Yuxinn-J) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2021-09-30"}],"authorContributionMap":{"Yuxinn-J":1,"oneScotch":1,"Mist0919":1,"-":4,"LilyDaytoy":1,"Vincent6896":1}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Developer Guide","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Acknowledgements","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"oneScotch"},"content":"Inspiration for User Guide and Developer Guide: AddressBook (Level 3)","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"oneScotch"},"content":"https://se-education.org/addressbook-level3/DeveloperGuide.html","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"oneScotch"},"content":"https://se-education.org/addressbook-level3/UserGuide.html","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"{list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2020-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Design \u0026 implementation","lastModifiedDate":"2020-05-24"},{"lineNumber":11,"author":{"gitId":"oneScotch"},"content":"###System Architecture","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"oneScotch"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"oneScotch"},"content":"System Architecture diagram of the design of Code Hunt:","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"oneScotch"},"content":"//Todo {diagram}","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"oneScotch"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"oneScotch"},"content":"**Main component of the architecture (Game.java)**","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"oneScotch"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"oneScotch"},"content":"On launch, the Game.java initialises the logger and input scanner. It calls Game main menu to enter the game.","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"oneScotch"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"oneScotch"},"content":"The rest of the Code Hunt consists of below components:","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"oneScotch"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"oneScotch"},"content":"**Ui** :Command Line User Interface of Code Hunt. (Menu classes)","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"oneScotch"},"content":"- main/Game main menu: Loads previous record or initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"oneScotch"},"content":"- game/Game menu: Chooses easy/difficult game level; Checks game progress/ achieved cards content.","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"oneScotch"},"content":"- game/Easy menu, Difficult menu: Two game levels.","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"oneScotch"},"content":"- card/Card menu: ","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"oneScotch"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"oneScotch"},"content":"**Parser**: Parser to parser user inputs from Ui.","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"oneScotch"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"oneScotch"},"content":"**IO**: The input/output formatter.","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"oneScotch"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"oneScotch"},"content":"**Errors**: Show different error information.","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"oneScotch"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"oneScotch"},"content":"**Messages** Numbers/Strings: Store all the constant values used in this programme","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"oneScotch"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"oneScotch"},"content":"**Data**:","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"oneScotch"},"content":"- Player: The database of all data for one player","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"LilyDaytoy"},"content":"- Card: The card with coding knowledge that a player can collect","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"LilyDaytoy"},"content":"- CardManager: All operations that player can do to a card list","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"Mist0919"},"content":"- Game: The parent class of game","lastModifiedDate":"2021-10-22"},{"lineNumber":41,"author":{"gitId":"Mist0919"},"content":"- GameRecord: The list storing all the games completed by the user","lastModifiedDate":"2021-10-22"},{"lineNumber":42,"author":{"gitId":"Mist0919"},"content":"- GuessingNumGame: The guessing number game","lastModifiedDate":"2021-10-22"},{"lineNumber":43,"author":{"gitId":"Mist0919"},"content":"- TreasureHuntGame: The treasure hunt game","lastModifiedDate":"2021-10-22"},{"lineNumber":44,"author":{"gitId":"Mist0919"},"content":"- TreasureHuntMap: All the maps for the treasure hunt game","lastModifiedDate":"2021-10-22"},{"lineNumber":45,"author":{"gitId":"oneScotch"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":46,"author":{"gitId":"oneScotch"},"content":"###How the architecture components interact with each other","lastModifiedDate":"2021-10-20"},{"lineNumber":47,"author":{"gitId":"oneScotch"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":48,"author":{"gitId":"oneScotch"},"content":"The Sequence Diagram below shows how the components interact with each other for the scenario where the user issues the command","lastModifiedDate":"2021-10-20"},{"lineNumber":49,"author":{"gitId":"oneScotch"},"content":"//TODO {diagram}","lastModifiedDate":"2021-10-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"## Product scope","lastModifiedDate":"2020-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"### Target user profile","lastModifiedDate":"2020-05-24"},{"lineNumber":55,"author":{"gitId":"Mist0919"},"content":"This product is for children ages 6 and up who have little prior coding experience but have an interest in discovering their interests and talents in the technology field.","lastModifiedDate":"2021-10-22"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"### Value proposition","lastModifiedDate":"2020-05-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":59,"author":{"gitId":"Mist0919"},"content":"As digital literacy becomes increasingly important, this product is designed for preparing our next generation to be future-ready. It would raise children\u0027s interest in coding by simple coding tasks and help them learn some basic coding skills through different levels of text-based adventure games. It is also designed to help children to develop their logical thinking.","lastModifiedDate":"2021-10-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"## User Stories","lastModifiedDate":"2020-05-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"|Version| As a ... | I want to ... | So that I can ...|","lastModifiedDate":"2020-05-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"|--------|----------|---------------|------------------|","lastModifiedDate":"2020-05-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"|v1.0|new user|see usage instructions|refer to them when I forget how to use the application|","lastModifiedDate":"2020-05-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"|v2.0|user|find a to-do item by name|locate a to-do without having to go through the entire list|","lastModifiedDate":"2020-05-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"## Non-Functional Requirements","lastModifiedDate":"2020-05-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"{Give non-functional requirements}","lastModifiedDate":"2020-05-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"## Glossary","lastModifiedDate":"2020-05-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"* *glossary item* - Definition","lastModifiedDate":"2020-05-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"## Instructions for manual testing","lastModifiedDate":"2020-05-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"{Give instructions on how to do a manual product testing e.g., how to load sample data to be used for testing}","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"oneScotch":35,"Mist0919":7,"-":33,"LilyDaytoy":2}},{"path":"src/main/java/data/Player.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"oneScotch"},"content":"package data;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"oneScotch"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"oneScotch"},"content":"import data.game.Game;","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"Vincent6896"},"content":"import data.card.CardManager;","lastModifiedDate":"2021-10-14"},{"lineNumber":5,"author":{"gitId":"Vincent6896"},"content":"import data.card.Card;","lastModifiedDate":"2021-10-14"},{"lineNumber":6,"author":{"gitId":"oneScotch"},"content":"import utils.Errors;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"oneScotch"},"content":"import utils.IO;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"oneScotch"},"content":"import utils.message.Strings;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"LilyDaytoy"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"LilyDaytoy"},"content":"import java.io.File;","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"LilyDaytoy"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"LilyDaytoy"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"LilyDaytoy"},"content":"import java.io.FileInputStream;","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"LilyDaytoy"},"content":"import java.io.FileOutputStream;","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"LilyDaytoy"},"content":"import java.io.ObjectInputStream;","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"LilyDaytoy"},"content":"import java.io.ObjectOutputStream;","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"oneScotch"},"content":"import java.nio.file.Files;","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"oneScotch"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"oneScotch"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"oneScotch"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"oneScotch"},"content":"import java.util.List;","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"oneScotch"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"oneScotch"},"content":"import java.util.Calendar;","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"oneScotch"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"oneScotch"},"content":"/**","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"oneScotch"},"content":" * A player.","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"oneScotch"},"content":" */","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"oneScotch"},"content":"public class Player {","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"oneScotch"},"content":"    public static final Path DATAPATH \u003d Paths.get(System.getProperty(\"user.dir\"), \"data\");","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"oneScotch"},"content":"    public static String PLAYER_FILE_NAME;","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"LilyDaytoy"},"content":"    public static List\u003cInteger\u003e collectedCardIDs \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"LilyDaytoy"},"content":"    // store the card id of the card collected -- for storage use","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"LilyDaytoy"},"content":"    public static List\u003cInteger\u003e usedCardIDs \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"LilyDaytoy"},"content":"    // store the card id of the card used to buy tips -- for storage use","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"LilyDaytoy"},"content":"    public static final int COLLECTED_LENGTH \u003d 10;","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"LilyDaytoy"},"content":"    public static final int USED_LENGTH \u003d 5;","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"oneScotch"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":38,"author":{"gitId":"oneScotch"},"content":"     * The name of the restaurant.","lastModifiedDate":"2021-10-10"},{"lineNumber":39,"author":{"gitId":"oneScotch"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":40,"author":{"gitId":"oneScotch"},"content":"    private static String name;","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"oneScotch"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":42,"author":{"gitId":"oneScotch"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":43,"author":{"gitId":"oneScotch"},"content":"     * The list of games.","lastModifiedDate":"2021-10-10"},{"lineNumber":44,"author":{"gitId":"oneScotch"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":45,"author":{"gitId":"oneScotch"},"content":"    private static List\u003cGame\u003e games;","lastModifiedDate":"2021-10-11"},{"lineNumber":46,"author":{"gitId":"oneScotch"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":47,"author":{"gitId":"oneScotch"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":48,"author":{"gitId":"oneScotch"},"content":"     * The used cards list.","lastModifiedDate":"2021-10-20"},{"lineNumber":49,"author":{"gitId":"oneScotch"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":50,"author":{"gitId":"LilyDaytoy"},"content":"    private static CardManager cardsCollected;","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"oneScotch"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":52,"author":{"gitId":"oneScotch"},"content":"     * The cards list.","lastModifiedDate":"2021-10-20"},{"lineNumber":53,"author":{"gitId":"oneScotch"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":54,"author":{"gitId":"oneScotch"},"content":"    private static CardManager cardsToBeCollected;","lastModifiedDate":"2021-10-20"},{"lineNumber":55,"author":{"gitId":"oneScotch"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":56,"author":{"gitId":"LilyDaytoy"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":57,"author":{"gitId":"LilyDaytoy"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"LilyDaytoy"},"content":"     * startID indicates which game\u0027s card is collected.","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"oneScotch"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":60,"author":{"gitId":"LilyDaytoy"},"content":"     * @param startID the startID return by the \"execute()\" method of games, startID \u003d 0 indicates loose","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"LilyDaytoy"},"content":"     * @return boolean: if win card successfully","lastModifiedDate":"2021-10-12"},{"lineNumber":62,"author":{"gitId":"LilyDaytoy"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":63,"author":{"gitId":"Yuxinn-J"},"content":"    public static boolean winCard(int startID) {","lastModifiedDate":"2021-10-14"},{"lineNumber":64,"author":{"gitId":"LilyDaytoy"},"content":"        if (startID \u003d\u003d 0) {","lastModifiedDate":"2021-10-12"},{"lineNumber":65,"author":{"gitId":"LilyDaytoy"},"content":"            return false;   // if startID \u003d 0 , actually should not enter this method, need to be solved in the menu","lastModifiedDate":"2021-10-12"},{"lineNumber":66,"author":{"gitId":"LilyDaytoy"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":67,"author":{"gitId":"LilyDaytoy"},"content":"        int index \u003d cardsToBeCollected.getCardPosition(startID);","lastModifiedDate":"2021-10-12"},{"lineNumber":68,"author":{"gitId":"LilyDaytoy"},"content":"        boolean canBeCollected \u003d index \u003d\u003d -1 ? false : true;","lastModifiedDate":"2021-10-14"},{"lineNumber":69,"author":{"gitId":"LilyDaytoy"},"content":"        if (canBeCollected) {","lastModifiedDate":"2021-10-14"},{"lineNumber":70,"author":{"gitId":"LilyDaytoy"},"content":"            int cardID \u003d cardsToBeCollected.transferTo(cardsCollected, index);","lastModifiedDate":"2021-10-21"},{"lineNumber":71,"author":{"gitId":"LilyDaytoy"},"content":"            collectedCardIDs.add(cardID);","lastModifiedDate":"2021-10-21"},{"lineNumber":72,"author":{"gitId":"LilyDaytoy"},"content":"            // print card","lastModifiedDate":"2021-10-14"},{"lineNumber":73,"author":{"gitId":"Yuxinn-J"},"content":"        } else {","lastModifiedDate":"2021-10-14"},{"lineNumber":74,"author":{"gitId":"Yuxinn-J"},"content":"            System.out.println(\"Oops! You have already collected all the cards for this game.\");","lastModifiedDate":"2021-10-14"},{"lineNumber":75,"author":{"gitId":"LilyDaytoy"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":76,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":77,"author":{"gitId":"LilyDaytoy"},"content":"        return canBeCollected;   // return false means not enough cards to collect for this game","lastModifiedDate":"2021-10-14"},{"lineNumber":78,"author":{"gitId":"LilyDaytoy"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":79,"author":{"gitId":"LilyDaytoy"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":80,"author":{"gitId":"LilyDaytoy"},"content":"    public static void buyTip(int cardID) {","lastModifiedDate":"2021-10-21"},{"lineNumber":81,"author":{"gitId":"LilyDaytoy"},"content":"        boolean canBeExchanged \u003d cardsCollected.exchange(cardID);","lastModifiedDate":"2021-10-10"},{"lineNumber":82,"author":{"gitId":"LilyDaytoy"},"content":"        if (canBeExchanged) {","lastModifiedDate":"2021-10-10"},{"lineNumber":83,"author":{"gitId":"LilyDaytoy"},"content":"            // todo : tip-related method","lastModifiedDate":"2021-10-12"},{"lineNumber":84,"author":{"gitId":"LilyDaytoy"},"content":"            usedCardIDs.add(cardID);","lastModifiedDate":"2021-10-21"},{"lineNumber":85,"author":{"gitId":"LilyDaytoy"},"content":"            System.out.println(\"Sure, you successfully use one card to get the tip!\");","lastModifiedDate":"2021-10-10"},{"lineNumber":86,"author":{"gitId":"LilyDaytoy"},"content":"        } else {","lastModifiedDate":"2021-10-10"},{"lineNumber":87,"author":{"gitId":"LilyDaytoy"},"content":"            System.out.println(\"Ops, it seems that you have already used that card, please choose another one\");","lastModifiedDate":"2021-10-10"},{"lineNumber":88,"author":{"gitId":"LilyDaytoy"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":89,"author":{"gitId":"LilyDaytoy"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":90,"author":{"gitId":"oneScotch"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":91,"author":{"gitId":"oneScotch"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":92,"author":{"gitId":"oneScotch"},"content":"    //TODO 暂时为了过test","lastModifiedDate":"2021-10-10"},{"lineNumber":93,"author":{"gitId":"LilyDaytoy"},"content":"    private Player(String name, List\u003cGame\u003e games, CardManager cardsCollected, CardManager cardsToBeCollected) {","lastModifiedDate":"2021-10-10"},{"lineNumber":94,"author":{"gitId":"oneScotch"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-10-10"},{"lineNumber":95,"author":{"gitId":"oneScotch"},"content":"        this.games \u003d games;","lastModifiedDate":"2021-10-10"},{"lineNumber":96,"author":{"gitId":"LilyDaytoy"},"content":"        this.cardsCollected \u003d cardsCollected;","lastModifiedDate":"2021-10-10"},{"lineNumber":97,"author":{"gitId":"LilyDaytoy"},"content":"        this.cardsToBeCollected \u003d cardsToBeCollected;","lastModifiedDate":"2021-10-10"},{"lineNumber":98,"author":{"gitId":"oneScotch"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":99,"author":{"gitId":"oneScotch"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":100,"author":{"gitId":"oneScotch"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":101,"author":{"gitId":"Yuxinn-J"},"content":"    public static void showGameProgress() {","lastModifiedDate":"2021-10-12"},{"lineNumber":102,"author":{"gitId":"Yuxinn-J"},"content":"        for (Game game : games) {","lastModifiedDate":"2021-10-12"},{"lineNumber":103,"author":{"gitId":"Yuxinn-J"},"content":"            System.out.println(game.getName());","lastModifiedDate":"2021-10-12"},{"lineNumber":104,"author":{"gitId":"Yuxinn-J"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":105,"author":{"gitId":"Yuxinn-J"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":106,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":107,"author":{"gitId":"Yuxinn-J"},"content":"    public static void showCollectedCards() {","lastModifiedDate":"2021-10-12"},{"lineNumber":108,"author":{"gitId":"Yuxinn-J"},"content":"        cardsCollected.listCards();","lastModifiedDate":"2021-10-12"},{"lineNumber":109,"author":{"gitId":"Yuxinn-J"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":110,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":111,"author":{"gitId":"oneScotch"},"content":"    public static void deleteCard() {","lastModifiedDate":"2021-10-11"},{"lineNumber":112,"author":{"gitId":"oneScotch"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":113,"author":{"gitId":"oneScotch"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":114,"author":{"gitId":"oneScotch"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":115,"author":{"gitId":"oneScotch"},"content":"    public static void getCard() {","lastModifiedDate":"2021-10-11"},{"lineNumber":116,"author":{"gitId":"oneScotch"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":117,"author":{"gitId":"oneScotch"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":118,"author":{"gitId":"oneScotch"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":119,"author":{"gitId":"oneScotch"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":120,"author":{"gitId":"oneScotch"},"content":"    public static void savePlayer() {","lastModifiedDate":"2021-10-11"},{"lineNumber":121,"author":{"gitId":"oneScotch"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":122,"author":{"gitId":"oneScotch"},"content":"        if (!Files.exists(DATAPATH)) {","lastModifiedDate":"2021-10-11"},{"lineNumber":123,"author":{"gitId":"oneScotch"},"content":"            System.out.println(\"Data folder not found!\");","lastModifiedDate":"2021-10-11"},{"lineNumber":124,"author":{"gitId":"oneScotch"},"content":"            File dir \u003d new File(DATAPATH.toString());","lastModifiedDate":"2021-10-11"},{"lineNumber":125,"author":{"gitId":"oneScotch"},"content":"            if (dir.mkdir()) {","lastModifiedDate":"2021-10-11"},{"lineNumber":126,"author":{"gitId":"oneScotch"},"content":"                System.out.println(\"Directory \" + DATAPATH + \" created...\");","lastModifiedDate":"2021-10-11"},{"lineNumber":127,"author":{"gitId":"oneScotch"},"content":"            }","lastModifiedDate":"2021-10-11"},{"lineNumber":128,"author":{"gitId":"oneScotch"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":129,"author":{"gitId":"oneScotch"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":130,"author":{"gitId":"LilyDaytoy"},"content":"        Object[] playerMember \u003d {name, games, cardsCollected, cardsToBeCollected};","lastModifiedDate":"2021-10-11"},{"lineNumber":131,"author":{"gitId":"oneScotch"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":132,"author":{"gitId":"oneScotch"},"content":"        Path saveFileName \u003d Paths.get(DATAPATH.toString(), PLAYER_FILE_NAME);","lastModifiedDate":"2021-10-11"},{"lineNumber":133,"author":{"gitId":"oneScotch"},"content":"        FileOutputStream fos \u003d null;","lastModifiedDate":"2021-10-11"},{"lineNumber":134,"author":{"gitId":"oneScotch"},"content":"        ObjectOutputStream oos \u003d null;","lastModifiedDate":"2021-10-11"},{"lineNumber":135,"author":{"gitId":"oneScotch"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":136,"author":{"gitId":"oneScotch"},"content":"        try {","lastModifiedDate":"2021-10-11"},{"lineNumber":137,"author":{"gitId":"oneScotch"},"content":"            fos \u003d new FileOutputStream(saveFileName.toString());","lastModifiedDate":"2021-10-11"},{"lineNumber":138,"author":{"gitId":"oneScotch"},"content":"            oos \u003d new ObjectOutputStream(fos);","lastModifiedDate":"2021-10-11"},{"lineNumber":139,"author":{"gitId":"oneScotch"},"content":"            oos.writeObject(playerMember);","lastModifiedDate":"2021-10-11"},{"lineNumber":140,"author":{"gitId":"oneScotch"},"content":"            oos.close();","lastModifiedDate":"2021-10-11"},{"lineNumber":141,"author":{"gitId":"oneScotch"},"content":"        } catch (IOException ex) {","lastModifiedDate":"2021-10-11"},{"lineNumber":142,"author":{"gitId":"oneScotch"},"content":"            ex.printStackTrace();","lastModifiedDate":"2021-10-11"},{"lineNumber":143,"author":{"gitId":"oneScotch"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":144,"author":{"gitId":"oneScotch"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":145,"author":{"gitId":"oneScotch"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":146,"author":{"gitId":"oneScotch"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":147,"author":{"gitId":"LilyDaytoy"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":148,"author":{"gitId":"LilyDaytoy"},"content":"     * save the card information by cardID.","lastModifiedDate":"2021-10-21"},{"lineNumber":149,"author":{"gitId":"LilyDaytoy"},"content":"     * @param path the file path to save the data","lastModifiedDate":"2021-10-21"},{"lineNumber":150,"author":{"gitId":"LilyDaytoy"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":151,"author":{"gitId":"LilyDaytoy"},"content":"    public static void saveCard(String path) {","lastModifiedDate":"2021-10-21"},{"lineNumber":152,"author":{"gitId":"LilyDaytoy"},"content":"        try {","lastModifiedDate":"2021-10-21"},{"lineNumber":153,"author":{"gitId":"LilyDaytoy"},"content":"            String collectedIDs \u003d \"Collected:\";","lastModifiedDate":"2021-10-21"},{"lineNumber":154,"author":{"gitId":"LilyDaytoy"},"content":"            String usedIDs \u003d \"Used:\";","lastModifiedDate":"2021-10-21"},{"lineNumber":155,"author":{"gitId":"LilyDaytoy"},"content":"            for (int i \u003d 0; i \u003c collectedCardIDs.size(); i++) {","lastModifiedDate":"2021-10-21"},{"lineNumber":156,"author":{"gitId":"LilyDaytoy"},"content":"                collectedIDs +\u003d collectedCardIDs.get(i);","lastModifiedDate":"2021-10-21"},{"lineNumber":157,"author":{"gitId":"LilyDaytoy"},"content":"                collectedIDs +\u003d \" \";","lastModifiedDate":"2021-10-21"},{"lineNumber":158,"author":{"gitId":"LilyDaytoy"},"content":"            }","lastModifiedDate":"2021-10-21"},{"lineNumber":159,"author":{"gitId":"LilyDaytoy"},"content":"            for (int i \u003d 0; i \u003c usedCardIDs.size(); i++) {","lastModifiedDate":"2021-10-21"},{"lineNumber":160,"author":{"gitId":"LilyDaytoy"},"content":"                usedIDs +\u003d usedCardIDs.get(i);","lastModifiedDate":"2021-10-21"},{"lineNumber":161,"author":{"gitId":"LilyDaytoy"},"content":"                usedIDs +\u003d \" \";","lastModifiedDate":"2021-10-21"},{"lineNumber":162,"author":{"gitId":"LilyDaytoy"},"content":"            }","lastModifiedDate":"2021-10-21"},{"lineNumber":163,"author":{"gitId":"LilyDaytoy"},"content":"            FileWriter fw \u003d new FileWriter(path);","lastModifiedDate":"2021-10-21"},{"lineNumber":164,"author":{"gitId":"LilyDaytoy"},"content":"            fw.write(collectedIDs);","lastModifiedDate":"2021-10-21"},{"lineNumber":165,"author":{"gitId":"LilyDaytoy"},"content":"            fw.write(System.getProperty(\"line.separator\"));","lastModifiedDate":"2021-10-21"},{"lineNumber":166,"author":{"gitId":"LilyDaytoy"},"content":"            fw.write(usedIDs);","lastModifiedDate":"2021-10-21"},{"lineNumber":167,"author":{"gitId":"LilyDaytoy"},"content":"            fw.close();","lastModifiedDate":"2021-10-21"},{"lineNumber":168,"author":{"gitId":"LilyDaytoy"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-10-21"},{"lineNumber":169,"author":{"gitId":"LilyDaytoy"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2021-10-21"},{"lineNumber":170,"author":{"gitId":"LilyDaytoy"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":171,"author":{"gitId":"LilyDaytoy"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":172,"author":{"gitId":"LilyDaytoy"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":173,"author":{"gitId":"LilyDaytoy"},"content":"    public static void loadCard(String path) throws FileNotFoundException {","lastModifiedDate":"2021-10-21"},{"lineNumber":174,"author":{"gitId":"LilyDaytoy"},"content":"        File f \u003d new File(path);","lastModifiedDate":"2021-10-21"},{"lineNumber":175,"author":{"gitId":"LilyDaytoy"},"content":"        Scanner sc \u003d new Scanner(f);","lastModifiedDate":"2021-10-21"},{"lineNumber":176,"author":{"gitId":"LilyDaytoy"},"content":"        // Assume the first line stores the card message","lastModifiedDate":"2021-10-21"},{"lineNumber":177,"author":{"gitId":"LilyDaytoy"},"content":"        String collectedIDs \u003d sc.nextLine();","lastModifiedDate":"2021-10-21"},{"lineNumber":178,"author":{"gitId":"LilyDaytoy"},"content":"        String usedIDs \u003d sc.nextLine();","lastModifiedDate":"2021-10-21"},{"lineNumber":179,"author":{"gitId":"LilyDaytoy"},"content":"        String[] collectedIdArray \u003d collectedIDs.substring(COLLECTED_LENGTH).split(\" \");","lastModifiedDate":"2021-10-21"},{"lineNumber":180,"author":{"gitId":"LilyDaytoy"},"content":"        for (int i \u003d 0; i \u003c collectedIdArray.length; i++) {","lastModifiedDate":"2021-10-21"},{"lineNumber":181,"author":{"gitId":"LilyDaytoy"},"content":"            int collectedCardID \u003d Integer.parseInt(collectedIdArray[i]);","lastModifiedDate":"2021-10-21"},{"lineNumber":182,"author":{"gitId":"LilyDaytoy"},"content":"            cardsToBeCollected.transferTo(cardsCollected, cardsToBeCollected.findCard(collectedCardID));","lastModifiedDate":"2021-10-21"},{"lineNumber":183,"author":{"gitId":"LilyDaytoy"},"content":"            collectedCardIDs.add(collectedCardID);","lastModifiedDate":"2021-10-21"},{"lineNumber":184,"author":{"gitId":"LilyDaytoy"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":185,"author":{"gitId":"LilyDaytoy"},"content":"        String[] usedIdArray \u003d usedIDs.substring(USED_LENGTH).split(\" \");","lastModifiedDate":"2021-10-21"},{"lineNumber":186,"author":{"gitId":"LilyDaytoy"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":187,"author":{"gitId":"LilyDaytoy"},"content":"        for (int i \u003d 0; i \u003c usedIdArray.length; i++) {","lastModifiedDate":"2021-10-21"},{"lineNumber":188,"author":{"gitId":"LilyDaytoy"},"content":"            int usedCardID \u003d Integer.parseInt(usedIdArray[i]);","lastModifiedDate":"2021-10-21"},{"lineNumber":189,"author":{"gitId":"LilyDaytoy"},"content":"            buyTip(usedCardID);","lastModifiedDate":"2021-10-21"},{"lineNumber":190,"author":{"gitId":"LilyDaytoy"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":191,"author":{"gitId":"LilyDaytoy"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":192,"author":{"gitId":"LilyDaytoy"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":193,"author":{"gitId":"LilyDaytoy"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":194,"author":{"gitId":"oneScotch"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":195,"author":{"gitId":"oneScotch"},"content":"     * Load restaurant previous save state.","lastModifiedDate":"2021-10-11"},{"lineNumber":196,"author":{"gitId":"oneScotch"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":197,"author":{"gitId":"oneScotch"},"content":"    @SuppressWarnings(\"unchecked\")","lastModifiedDate":"2021-10-11"},{"lineNumber":198,"author":{"gitId":"oneScotch"},"content":"    public static void loadPlayer(String playerId) {","lastModifiedDate":"2021-10-11"},{"lineNumber":199,"author":{"gitId":"oneScotch"},"content":"        PLAYER_FILE_NAME \u003d playerId + \".dat\";","lastModifiedDate":"2021-10-11"},{"lineNumber":200,"author":{"gitId":"oneScotch"},"content":"        Object[] playerMember \u003d null;","lastModifiedDate":"2021-10-11"},{"lineNumber":201,"author":{"gitId":"oneScotch"},"content":"        Path saveData \u003d Paths.get(DATAPATH.toString(), PLAYER_FILE_NAME);","lastModifiedDate":"2021-10-11"},{"lineNumber":202,"author":{"gitId":"oneScotch"},"content":"        FileInputStream fis \u003d null;","lastModifiedDate":"2021-10-11"},{"lineNumber":203,"author":{"gitId":"oneScotch"},"content":"        ObjectInputStream ois \u003d null;","lastModifiedDate":"2021-10-11"},{"lineNumber":204,"author":{"gitId":"oneScotch"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":205,"author":{"gitId":"oneScotch"},"content":"        try {","lastModifiedDate":"2021-10-11"},{"lineNumber":206,"author":{"gitId":"oneScotch"},"content":"            fis \u003d new FileInputStream(saveData.toString());","lastModifiedDate":"2021-10-11"},{"lineNumber":207,"author":{"gitId":"oneScotch"},"content":"            ois \u003d new ObjectInputStream(fis);","lastModifiedDate":"2021-10-11"},{"lineNumber":208,"author":{"gitId":"oneScotch"},"content":"            playerMember \u003d (Object[]) ois.readObject();","lastModifiedDate":"2021-10-11"},{"lineNumber":209,"author":{"gitId":"oneScotch"},"content":"            if (playerMember !\u003d null) {","lastModifiedDate":"2021-10-11"},{"lineNumber":210,"author":{"gitId":"oneScotch"},"content":"                name \u003d (String) playerMember[0];","lastModifiedDate":"2021-10-11"},{"lineNumber":211,"author":{"gitId":"oneScotch"},"content":"                games \u003d (ArrayList\u003cGame\u003e) playerMember[1];","lastModifiedDate":"2021-10-11"},{"lineNumber":212,"author":{"gitId":"LilyDaytoy"},"content":"                cardsCollected \u003d (CardManager) playerMember[2];","lastModifiedDate":"2021-10-11"},{"lineNumber":213,"author":{"gitId":"LilyDaytoy"},"content":"                cardsToBeCollected \u003d (CardManager) playerMember[3];","lastModifiedDate":"2021-10-11"},{"lineNumber":214,"author":{"gitId":"oneScotch"},"content":"            }","lastModifiedDate":"2021-10-11"},{"lineNumber":215,"author":{"gitId":"oneScotch"},"content":"            ois.close();","lastModifiedDate":"2021-10-11"},{"lineNumber":216,"author":{"gitId":"oneScotch"},"content":"        } catch (IOException ex) {","lastModifiedDate":"2021-10-11"},{"lineNumber":217,"author":{"gitId":"oneScotch"},"content":"            Errors.print(PLAYER_FILE_NAME + Strings.ERR_PLAYER_FILE_NOTFOUND_MESSAGE);","lastModifiedDate":"2021-10-11"},{"lineNumber":218,"author":{"gitId":"oneScotch"},"content":"            initPlayer();","lastModifiedDate":"2021-10-11"},{"lineNumber":219,"author":{"gitId":"oneScotch"},"content":"        } catch (ClassCastException | ClassNotFoundException ex) {","lastModifiedDate":"2021-10-11"},{"lineNumber":220,"author":{"gitId":"oneScotch"},"content":"            System.out.println(String.format(Strings.ERR_PLAYER_FILE_CORRUPTED_MESSAGE, PLAYER_FILE_NAME));","lastModifiedDate":"2021-10-11"},{"lineNumber":221,"author":{"gitId":"oneScotch"},"content":"            initPlayer();","lastModifiedDate":"2021-10-11"},{"lineNumber":222,"author":{"gitId":"oneScotch"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":223,"author":{"gitId":"oneScotch"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":224,"author":{"gitId":"oneScotch"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":225,"author":{"gitId":"oneScotch"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":226,"author":{"gitId":"oneScotch"},"content":"    public static void loadPlayer() {","lastModifiedDate":"2021-10-11"},{"lineNumber":227,"author":{"gitId":"oneScotch"},"content":"        initPlayer();","lastModifiedDate":"2021-10-11"},{"lineNumber":228,"author":{"gitId":"oneScotch"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":229,"author":{"gitId":"oneScotch"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":230,"author":{"gitId":"oneScotch"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":231,"author":{"gitId":"oneScotch"},"content":"     * Initialise player static members.","lastModifiedDate":"2021-10-11"},{"lineNumber":232,"author":{"gitId":"oneScotch"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":233,"author":{"gitId":"oneScotch"},"content":"    public static void initPlayer() {","lastModifiedDate":"2021-10-11"},{"lineNumber":234,"author":{"gitId":"oneScotch"},"content":"        //TODO","lastModifiedDate":"2021-10-11"},{"lineNumber":235,"author":{"gitId":"oneScotch"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2021-10-11"},{"lineNumber":236,"author":{"gitId":"oneScotch"},"content":"        name \u003d IO.readString(sc, Strings.PLAYER_NAME_ENTER_PROMPT).trim();","lastModifiedDate":"2021-10-11"},{"lineNumber":237,"author":{"gitId":"oneScotch"},"content":"        assert name \u003d\u003d null : \"Nothing is inputted!!\";","lastModifiedDate":"2021-10-11"},{"lineNumber":238,"author":{"gitId":"oneScotch"},"content":"        String playerId \u003d name + Calendar.getInstance().hashCode();","lastModifiedDate":"2021-10-11"},{"lineNumber":239,"author":{"gitId":"oneScotch"},"content":"        PLAYER_FILE_NAME \u003d playerId + \".dat\";","lastModifiedDate":"2021-10-11"},{"lineNumber":240,"author":{"gitId":"oneScotch"},"content":"        System.out.println(String.format(Strings.PLAYER_ID_PROMPT, playerId));","lastModifiedDate":"2021-10-11"},{"lineNumber":241,"author":{"gitId":"oneScotch"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":242,"author":{"gitId":"oneScotch"},"content":"        /*initGames();","lastModifiedDate":"2021-10-11"},{"lineNumber":243,"author":{"gitId":"oneScotch"},"content":"        initCards();","lastModifiedDate":"2021-10-11"},{"lineNumber":244,"author":{"gitId":"LilyDaytoy"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":245,"author":{"gitId":"LilyDaytoy"},"content":"        */","lastModifiedDate":"2021-10-12"},{"lineNumber":246,"author":{"gitId":"oneScotch"},"content":"        initCards();","lastModifiedDate":"2021-10-20"},{"lineNumber":247,"author":{"gitId":"LilyDaytoy"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":248,"author":{"gitId":"LilyDaytoy"},"content":"        //init Cards(), CardsUsed()","lastModifiedDate":"2021-10-12"},{"lineNumber":249,"author":{"gitId":"oneScotch"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":250,"author":{"gitId":"oneScotch"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":251,"author":{"gitId":"oneScotch"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":252,"author":{"gitId":"oneScotch"},"content":"     * Initial cards for diff games, each with a unique cardID.","lastModifiedDate":"2021-10-20"},{"lineNumber":253,"author":{"gitId":"oneScotch"},"content":"     * Initial cardManager for cards and used cards.","lastModifiedDate":"2021-10-20"},{"lineNumber":254,"author":{"gitId":"oneScotch"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":255,"author":{"gitId":"oneScotch"},"content":"    private static void initCards() {","lastModifiedDate":"2021-10-20"},{"lineNumber":256,"author":{"gitId":"LilyDaytoy"},"content":"        ArrayList\u003cCard\u003e cardsInit \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-12"},{"lineNumber":257,"author":{"gitId":"oneScotch"},"content":"        // Init cards for diff games","lastModifiedDate":"2021-10-20"},{"lineNumber":258,"author":{"gitId":"LilyDaytoy"},"content":"        // For game Treasure","lastModifiedDate":"2021-10-12"},{"lineNumber":259,"author":{"gitId":"LilyDaytoy"},"content":"        cardsInit.add(new Card(\"\u0027Sequence\u0027 is the order that commands are executed by a computer\", 1));","lastModifiedDate":"2021-10-12"},{"lineNumber":260,"author":{"gitId":"LilyDaytoy"},"content":"        cardsInit.add(new Card(\"\u0027Sequence\u0027 is a set of logical steps carried out in order.\", 2));","lastModifiedDate":"2021-10-14"},{"lineNumber":261,"author":{"gitId":"LilyDaytoy"},"content":"        cardsInit.add(new Card(\"3\", 3));","lastModifiedDate":"2021-10-12"},{"lineNumber":262,"author":{"gitId":"LilyDaytoy"},"content":"        cardsInit.add(new Card(\"4\", 4));","lastModifiedDate":"2021-10-12"},{"lineNumber":263,"author":{"gitId":"LilyDaytoy"},"content":"        cardsInit.add(new Card(\"5\", 5));","lastModifiedDate":"2021-10-12"},{"lineNumber":264,"author":{"gitId":"LilyDaytoy"},"content":"        cardsInit.add(new Card(\"6\", 6));","lastModifiedDate":"2021-10-12"},{"lineNumber":265,"author":{"gitId":"LilyDaytoy"},"content":"        cardsInit.add(new Card(\"7\", 7));","lastModifiedDate":"2021-10-12"},{"lineNumber":266,"author":{"gitId":"LilyDaytoy"},"content":"        cardsInit.add(new Card(\"8\", 8));","lastModifiedDate":"2021-10-12"},{"lineNumber":267,"author":{"gitId":"LilyDaytoy"},"content":"        cardsInit.add(new Card(\"9\", 9));","lastModifiedDate":"2021-10-12"},{"lineNumber":268,"author":{"gitId":"LilyDaytoy"},"content":"        cardsInit.add(new Card(\"10\", 10));","lastModifiedDate":"2021-10-12"},{"lineNumber":269,"author":{"gitId":"LilyDaytoy"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":270,"author":{"gitId":"LilyDaytoy"},"content":"        // For game GuessingNum","lastModifiedDate":"2021-10-12"},{"lineNumber":271,"author":{"gitId":"LilyDaytoy"},"content":"        cardsInit.add(new Card(\"Binary search is an efficient algorithm\"","lastModifiedDate":"2021-10-14"},{"lineNumber":272,"author":{"gitId":"LilyDaytoy"},"content":"                + \" for finding an item from a sorted list of items.\", 11));","lastModifiedDate":"2021-10-14"},{"lineNumber":273,"author":{"gitId":"LilyDaytoy"},"content":"        cardsInit.add(new Card(\"It works by repeatedly dividing in half the portion of the list\"","lastModifiedDate":"2021-10-14"},{"lineNumber":274,"author":{"gitId":"LilyDaytoy"},"content":"                + \" that could contain the item, until you\u0027ve narrowed down the possible locations to just one.\", 12));","lastModifiedDate":"2021-10-14"},{"lineNumber":275,"author":{"gitId":"LilyDaytoy"},"content":"        cardsInit.add(new Card(\"13\", 13));","lastModifiedDate":"2021-10-12"},{"lineNumber":276,"author":{"gitId":"LilyDaytoy"},"content":"        cardsInit.add(new Card(\"14\", 14));","lastModifiedDate":"2021-10-12"},{"lineNumber":277,"author":{"gitId":"LilyDaytoy"},"content":"        cardsInit.add(new Card(\"15\", 15));","lastModifiedDate":"2021-10-12"},{"lineNumber":278,"author":{"gitId":"LilyDaytoy"},"content":"        cardsInit.add(new Card(\"16\", 16));","lastModifiedDate":"2021-10-12"},{"lineNumber":279,"author":{"gitId":"LilyDaytoy"},"content":"        cardsInit.add(new Card(\"17\", 17));","lastModifiedDate":"2021-10-12"},{"lineNumber":280,"author":{"gitId":"LilyDaytoy"},"content":"        cardsInit.add(new Card(\"18\", 18));","lastModifiedDate":"2021-10-12"},{"lineNumber":281,"author":{"gitId":"LilyDaytoy"},"content":"        cardsInit.add(new Card(\"19\", 19));","lastModifiedDate":"2021-10-12"},{"lineNumber":282,"author":{"gitId":"LilyDaytoy"},"content":"        cardsInit.add(new Card(\"20\", 20));","lastModifiedDate":"2021-10-12"},{"lineNumber":283,"author":{"gitId":"LilyDaytoy"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":284,"author":{"gitId":"LilyDaytoy"},"content":"        // For game QuizGame","lastModifiedDate":"2021-10-12"},{"lineNumber":285,"author":{"gitId":"LilyDaytoy"},"content":"        cardsInit.add(new Card(\"a variable is an abstract storage location paired \"","lastModifiedDate":"2021-10-14"},{"lineNumber":286,"author":{"gitId":"LilyDaytoy"},"content":"                + \"with an associated symbolic name\", 21));","lastModifiedDate":"2021-10-14"},{"lineNumber":287,"author":{"gitId":"LilyDaytoy"},"content":"        cardsInit.add(new Card(\"An if else statement in programming is \"","lastModifiedDate":"2021-10-14"},{"lineNumber":288,"author":{"gitId":"LilyDaytoy"},"content":"                + \"a conditional statement that runs a different set of statements\"","lastModifiedDate":"2021-10-14"},{"lineNumber":289,"author":{"gitId":"LilyDaytoy"},"content":"                + \" depending on whether an expression is true or false\", 22));","lastModifiedDate":"2021-10-14"},{"lineNumber":290,"author":{"gitId":"LilyDaytoy"},"content":"        cardsInit.add(new Card(\"23\", 23));","lastModifiedDate":"2021-10-12"},{"lineNumber":291,"author":{"gitId":"LilyDaytoy"},"content":"        cardsInit.add(new Card(\"24\", 24));","lastModifiedDate":"2021-10-12"},{"lineNumber":292,"author":{"gitId":"LilyDaytoy"},"content":"        cardsInit.add(new Card(\"25\", 25));","lastModifiedDate":"2021-10-12"},{"lineNumber":293,"author":{"gitId":"LilyDaytoy"},"content":"        cardsInit.add(new Card(\"26\", 26));","lastModifiedDate":"2021-10-12"},{"lineNumber":294,"author":{"gitId":"LilyDaytoy"},"content":"        cardsInit.add(new Card(\"27\", 27));","lastModifiedDate":"2021-10-12"},{"lineNumber":295,"author":{"gitId":"LilyDaytoy"},"content":"        cardsInit.add(new Card(\"28\", 28));","lastModifiedDate":"2021-10-12"},{"lineNumber":296,"author":{"gitId":"LilyDaytoy"},"content":"        cardsInit.add(new Card(\"29\", 29));","lastModifiedDate":"2021-10-12"},{"lineNumber":297,"author":{"gitId":"LilyDaytoy"},"content":"        cardsInit.add(new Card(\"30\", 30));","lastModifiedDate":"2021-10-12"},{"lineNumber":298,"author":{"gitId":"LilyDaytoy"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":299,"author":{"gitId":"LilyDaytoy"},"content":"        // For game HangMan","lastModifiedDate":"2021-10-12"},{"lineNumber":300,"author":{"gitId":"LilyDaytoy"},"content":"        cardsInit.add(new Card(\"a loop is a sequence of instruction s that is continually \"","lastModifiedDate":"2021-10-14"},{"lineNumber":301,"author":{"gitId":"LilyDaytoy"},"content":"                + \"repeated until a certain condition is reached. \", 31));","lastModifiedDate":"2021-10-14"},{"lineNumber":302,"author":{"gitId":"LilyDaytoy"},"content":"        cardsInit.add(new Card(\"A for loop is a control flow statement for specifying iteration, \"","lastModifiedDate":"2021-10-14"},{"lineNumber":303,"author":{"gitId":"LilyDaytoy"},"content":"                + \"which allows code to be executed repeatedly.\", 32));","lastModifiedDate":"2021-10-14"},{"lineNumber":304,"author":{"gitId":"LilyDaytoy"},"content":"        cardsInit.add(new Card(\"A \\\"While\\\" Loop is used to repeat a specific block of code an unknown\"","lastModifiedDate":"2021-10-14"},{"lineNumber":305,"author":{"gitId":"LilyDaytoy"},"content":"                + \" number of times, until a condition is met. \", 33));","lastModifiedDate":"2021-10-14"},{"lineNumber":306,"author":{"gitId":"LilyDaytoy"},"content":"        cardsInit.add(new Card(\"An array is a data structure, which can store a fixed-size collection of \"","lastModifiedDate":"2021-10-14"},{"lineNumber":307,"author":{"gitId":"LilyDaytoy"},"content":"                + \"elements of the same data type. \", 34));","lastModifiedDate":"2021-10-14"},{"lineNumber":308,"author":{"gitId":"LilyDaytoy"},"content":"        cardsInit.add(new Card(\"An algorithm is simply a set of steps used \"","lastModifiedDate":"2021-10-14"},{"lineNumber":309,"author":{"gitId":"LilyDaytoy"},"content":"                + \"to complete a specific task. \", 35));","lastModifiedDate":"2021-10-14"},{"lineNumber":310,"author":{"gitId":"LilyDaytoy"},"content":"        cardsInit.add(new Card(\"36\", 36));","lastModifiedDate":"2021-10-12"},{"lineNumber":311,"author":{"gitId":"LilyDaytoy"},"content":"        cardsInit.add(new Card(\"37\", 37));","lastModifiedDate":"2021-10-12"},{"lineNumber":312,"author":{"gitId":"LilyDaytoy"},"content":"        cardsInit.add(new Card(\"38\", 38));","lastModifiedDate":"2021-10-12"},{"lineNumber":313,"author":{"gitId":"LilyDaytoy"},"content":"        cardsInit.add(new Card(\"39\", 39));","lastModifiedDate":"2021-10-12"},{"lineNumber":314,"author":{"gitId":"LilyDaytoy"},"content":"        cardsInit.add(new Card(\"40\", 40));","lastModifiedDate":"2021-10-12"},{"lineNumber":315,"author":{"gitId":"LilyDaytoy"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":316,"author":{"gitId":"LilyDaytoy"},"content":"        cardsCollected \u003d new CardManager();","lastModifiedDate":"2021-10-12"},{"lineNumber":317,"author":{"gitId":"LilyDaytoy"},"content":"        cardsToBeCollected \u003d new CardManager(cardsInit);","lastModifiedDate":"2021-10-12"},{"lineNumber":318,"author":{"gitId":"LilyDaytoy"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":319,"author":{"gitId":"oneScotch"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":320,"author":{"gitId":"oneScotch"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":321,"author":{"gitId":"oneScotch"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"Yuxinn-J":14,"oneScotch":142,"Vincent6896":2,"LilyDaytoy":163}},{"path":"src/main/java/data/card/Card.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"oneScotch"},"content":"package data.card;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"Vincent6896"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"LilyDaytoy"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"Yuxinn-J"},"content":"import utils.message.Strings;","lastModifiedDate":"2021-10-14"},{"lineNumber":5,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":6,"author":{"gitId":"oneScotch"},"content":"import java.io.Serializable;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"oneScotch"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"oneScotch"},"content":"public class Card implements Serializable {","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"oneScotch"},"content":"    private static final long serialVersionUID \u003d -9135686500512288865L;","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"LilyDaytoy"},"content":"    private String content;","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"LilyDaytoy"},"content":"    private boolean isUsed;","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"LilyDaytoy"},"content":"    private int cardID;","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"LilyDaytoy"},"content":"    private boolean isCollected;","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"Vincent6896"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"LilyDaytoy"},"content":"    public Card(String content, int cardID) {","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"LilyDaytoy"},"content":"        this.content \u003d content;","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"LilyDaytoy"},"content":"        this.cardID \u003d cardID;","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"LilyDaytoy"},"content":"        this.isUsed \u003d false;","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"LilyDaytoy"},"content":"        this.isCollected \u003d false;","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"LilyDaytoy"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"LilyDaytoy"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"LilyDaytoy"},"content":"    public Card(Card card) {","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"LilyDaytoy"},"content":"        this(card.getContent(), card.getCardID());","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"LilyDaytoy"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"LilyDaytoy"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"LilyDaytoy"},"content":"    public int getCardID() {","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"LilyDaytoy"},"content":"        return cardID;","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"Vincent6896"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"Vincent6896"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"LilyDaytoy"},"content":"    public String getContent() {","lastModifiedDate":"2021-10-10"},{"lineNumber":31,"author":{"gitId":"LilyDaytoy"},"content":"        return content;","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"Vincent6896"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"Vincent6896"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"LilyDaytoy"},"content":"    public boolean checkIfIsUsed() {","lastModifiedDate":"2021-10-10"},{"lineNumber":35,"author":{"gitId":"LilyDaytoy"},"content":"        return isUsed;","lastModifiedDate":"2021-10-10"},{"lineNumber":36,"author":{"gitId":"Vincent6896"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"Vincent6896"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":38,"author":{"gitId":"LilyDaytoy"},"content":"    public boolean checkIfCollected() {","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"LilyDaytoy"},"content":"        return isCollected;","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"LilyDaytoy"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"LilyDaytoy"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"LilyDaytoy"},"content":"    public void setAsUsed() {","lastModifiedDate":"2021-10-10"},{"lineNumber":43,"author":{"gitId":"LilyDaytoy"},"content":"        isUsed \u003d true;","lastModifiedDate":"2021-10-10"},{"lineNumber":44,"author":{"gitId":"Vincent6896"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":45,"author":{"gitId":"Vincent6896"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":46,"author":{"gitId":"LilyDaytoy"},"content":"    public Card setAsCollected() {","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"LilyDaytoy"},"content":"        Card card \u003d new Card(this);","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"LilyDaytoy"},"content":"        card.isCollected \u003d true;","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"LilyDaytoy"},"content":"        return card;","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"LilyDaytoy"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"LilyDaytoy"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"Vincent6896"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":53,"author":{"gitId":"Vincent6896"},"content":"    public String toString() {","lastModifiedDate":"2021-10-07"},{"lineNumber":54,"author":{"gitId":"Yuxinn-J"},"content":"        return getContent();","lastModifiedDate":"2021-10-14"},{"lineNumber":55,"author":{"gitId":"Vincent6896"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":56,"author":{"gitId":"Vincent6896"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"Yuxinn-J":3,"oneScotch":5,"Vincent6896":14,"LilyDaytoy":34}},{"path":"src/main/java/data/card/CardManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"oneScotch"},"content":"package data.card;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"Vincent6896"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"Yuxinn-J"},"content":"import utils.message.Strings;","lastModifiedDate":"2021-10-14"},{"lineNumber":4,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":5,"author":{"gitId":"Vincent6896"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"Vincent6896"},"content":"import java.util.List;","lastModifiedDate":"2021-10-14"},{"lineNumber":7,"author":{"gitId":"oneScotch"},"content":"import java.io.Serializable;","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"Vincent6896"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"oneScotch"},"content":"public class CardManager implements Serializable {","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"oneScotch"},"content":"    private static final long serialVersionUID \u003d -9135686500512288865L;","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"Vincent6896"},"content":"    private List\u003cCard\u003e cards;","lastModifiedDate":"2021-10-14"},{"lineNumber":12,"author":{"gitId":"Vincent6896"},"content":"    private static final String MARK_NOT_USED \u003d \"[ ]\";","lastModifiedDate":"2021-10-14"},{"lineNumber":13,"author":{"gitId":"Vincent6896"},"content":"    private static final String MARK_USED \u003d \"[x]\";","lastModifiedDate":"2021-10-14"},{"lineNumber":14,"author":{"gitId":"Vincent6896"},"content":"    private static final int NUM_OF_CARDS_PER_GAME \u003d 10;     // 10 may need to be changed later on","lastModifiedDate":"2021-10-14"},{"lineNumber":15,"author":{"gitId":"Vincent6896"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"Vincent6896"},"content":"    public CardManager(List\u003cCard\u003e cards) {","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"Vincent6896"},"content":"        this.cards \u003d cards;","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"Vincent6896"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"Vincent6896"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"Vincent6896"},"content":"    public CardManager() {","lastModifiedDate":"2021-10-14"},{"lineNumber":21,"author":{"gitId":"Vincent6896"},"content":"        this(new ArrayList\u003c\u003e());","lastModifiedDate":"2021-10-14"},{"lineNumber":22,"author":{"gitId":"Vincent6896"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":23,"author":{"gitId":"Vincent6896"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":24,"author":{"gitId":"Vincent6896"},"content":"    public void add(Card card) {","lastModifiedDate":"2021-10-14"},{"lineNumber":25,"author":{"gitId":"Vincent6896"},"content":"        cards.add(card);","lastModifiedDate":"2021-10-14"},{"lineNumber":26,"author":{"gitId":"LilyDaytoy"},"content":"        //System.out.println(\"Great! You collect card: \" + card.toString());","lastModifiedDate":"2021-10-14"},{"lineNumber":27,"author":{"gitId":"Vincent6896"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"Vincent6896"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"LilyDaytoy"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"LilyDaytoy"},"content":"     * find card that is not collected within a certain range.","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"Vincent6896"},"content":"     * @return the index of the card in the ArrayList, if the cards in the range are all collected, return -1","lastModifiedDate":"2021-10-14"},{"lineNumber":32,"author":{"gitId":"Vincent6896"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":33,"author":{"gitId":"Vincent6896"},"content":"    public int getCardPosition(int startID) {","lastModifiedDate":"2021-10-14"},{"lineNumber":34,"author":{"gitId":"Vincent6896"},"content":"        int index \u003d -1;","lastModifiedDate":"2021-10-14"},{"lineNumber":35,"author":{"gitId":"Vincent6896"},"content":"        int startIndex \u003d startID - 1;","lastModifiedDate":"2021-10-14"},{"lineNumber":36,"author":{"gitId":"Vincent6896"},"content":"        for (int i \u003d startIndex; i \u003c startIndex + NUM_OF_CARDS_PER_GAME; i++) {","lastModifiedDate":"2021-10-14"},{"lineNumber":37,"author":{"gitId":"LilyDaytoy"},"content":"            if (!cards.get(i).checkIfCollected()) {","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"LilyDaytoy"},"content":"                index \u003d i;","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"LilyDaytoy"},"content":"                break;","lastModifiedDate":"2021-10-14"},{"lineNumber":40,"author":{"gitId":"LilyDaytoy"},"content":"            }","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"LilyDaytoy"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"LilyDaytoy"},"content":"        return index;","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"LilyDaytoy"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"LilyDaytoy"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"LilyDaytoy"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"Vincent6896"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":47,"author":{"gitId":"Vincent6896"},"content":"     * find the index of the card in the cardList by cardID.","lastModifiedDate":"2021-10-14"},{"lineNumber":48,"author":{"gitId":"Vincent6896"},"content":"     * @return -1 if the cardID is not found","lastModifiedDate":"2021-10-14"},{"lineNumber":49,"author":{"gitId":"Vincent6896"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":50,"author":{"gitId":"Vincent6896"},"content":"    public int findCard(int cardID) {","lastModifiedDate":"2021-10-14"},{"lineNumber":51,"author":{"gitId":"Vincent6896"},"content":"        int len \u003d cards.size();","lastModifiedDate":"2021-10-14"},{"lineNumber":52,"author":{"gitId":"LilyDaytoy"},"content":"        int index \u003d -1;","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"Vincent6896"},"content":"        for (int i \u003d 0; i \u003c len; i++) {","lastModifiedDate":"2021-10-14"},{"lineNumber":54,"author":{"gitId":"LilyDaytoy"},"content":"            if (cards.get(i).getCardID() \u003d\u003d cardID) {","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"LilyDaytoy"},"content":"                index \u003d i;","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"LilyDaytoy"},"content":"                break;","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"LilyDaytoy"},"content":"            }","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"Vincent6896"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":59,"author":{"gitId":"Vincent6896"},"content":"        return index;","lastModifiedDate":"2021-10-14"},{"lineNumber":60,"author":{"gitId":"Vincent6896"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":61,"author":{"gitId":"Vincent6896"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":62,"author":{"gitId":"Vincent6896"},"content":"    public void searchByKeyWord(String message) {","lastModifiedDate":"2021-10-14"},{"lineNumber":63,"author":{"gitId":"Vincent6896"},"content":"        int len \u003d cards.size();","lastModifiedDate":"2021-10-14"},{"lineNumber":64,"author":{"gitId":"Vincent6896"},"content":"        int count \u003d 0;","lastModifiedDate":"2021-10-14"},{"lineNumber":65,"author":{"gitId":"LilyDaytoy"},"content":"        for (int i \u003d 0; i \u003c len; i++) {","lastModifiedDate":"2021-10-10"},{"lineNumber":66,"author":{"gitId":"LilyDaytoy"},"content":"            Card currentCard \u003d cards.get(i);","lastModifiedDate":"2021-10-10"},{"lineNumber":67,"author":{"gitId":"Vincent6896"},"content":"            if (currentCard.getContent().contains(message)) {","lastModifiedDate":"2021-10-14"},{"lineNumber":68,"author":{"gitId":"Vincent6896"},"content":"                System.out.println(currentCard);","lastModifiedDate":"2021-10-14"},{"lineNumber":69,"author":{"gitId":"Vincent6896"},"content":"                count++;","lastModifiedDate":"2021-10-14"},{"lineNumber":70,"author":{"gitId":"Vincent6896"},"content":"            }","lastModifiedDate":"2021-10-14"},{"lineNumber":71,"author":{"gitId":"Vincent6896"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":72,"author":{"gitId":"Vincent6896"},"content":"        if (count \u003d\u003d 0) {","lastModifiedDate":"2021-10-14"},{"lineNumber":73,"author":{"gitId":"Vincent6896"},"content":"            System.out.println(\"Ops! It seems that you do not have any card containing the keyword\");","lastModifiedDate":"2021-10-14"},{"lineNumber":74,"author":{"gitId":"Vincent6896"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":75,"author":{"gitId":"Vincent6896"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":76,"author":{"gitId":"Vincent6896"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":77,"author":{"gitId":"Yuxinn-J"},"content":"    public void listCards() {","lastModifiedDate":"2021-10-12"},{"lineNumber":78,"author":{"gitId":"LilyDaytoy"},"content":"        int len \u003d cards.size();","lastModifiedDate":"2021-10-10"},{"lineNumber":79,"author":{"gitId":"LilyDaytoy"},"content":"        for (int i \u003d 0; i \u003c len; i++) {","lastModifiedDate":"2021-10-10"},{"lineNumber":80,"author":{"gitId":"LilyDaytoy"},"content":"            Card card \u003d cards.get(i);","lastModifiedDate":"2021-10-10"},{"lineNumber":81,"author":{"gitId":"Vincent6896"},"content":"            String label \u003d card.checkIfIsUsed() ? MARK_USED : MARK_NOT_USED;","lastModifiedDate":"2021-10-14"},{"lineNumber":82,"author":{"gitId":"Vincent6896"},"content":"            int id \u003d i + 1;","lastModifiedDate":"2021-10-14"},{"lineNumber":83,"author":{"gitId":"Vincent6896"},"content":"            System.out.println(id + \". \" + cards.get(i) + \" \" + label);","lastModifiedDate":"2021-10-14"},{"lineNumber":84,"author":{"gitId":"Vincent6896"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":85,"author":{"gitId":"Vincent6896"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":86,"author":{"gitId":"Vincent6896"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":87,"author":{"gitId":"Vincent6896"},"content":"    public Card deleteCard(int id) {","lastModifiedDate":"2021-10-14"},{"lineNumber":88,"author":{"gitId":"Vincent6896"},"content":"        try {","lastModifiedDate":"2021-10-14"},{"lineNumber":89,"author":{"gitId":"Vincent6896"},"content":"            boolean isValid \u003d id \u003e 0 \u0026\u0026 id \u003c\u003d cards.size();","lastModifiedDate":"2021-10-14"},{"lineNumber":90,"author":{"gitId":"Vincent6896"},"content":"            assert isValid : \"Ops, it seems that you input an invalid card id, please try again!\";","lastModifiedDate":"2021-10-14"},{"lineNumber":91,"author":{"gitId":"Vincent6896"},"content":"            System.out.println(\"Your card \" + id + \" : \" + cards.get(id) + \" has been removed!\");","lastModifiedDate":"2021-10-14"},{"lineNumber":92,"author":{"gitId":"Vincent6896"},"content":"            return cards.remove(id - 1);","lastModifiedDate":"2021-10-14"},{"lineNumber":93,"author":{"gitId":"Vincent6896"},"content":"        } catch (AssertionError e) {","lastModifiedDate":"2021-10-14"},{"lineNumber":94,"author":{"gitId":"Vincent6896"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2021-10-14"},{"lineNumber":95,"author":{"gitId":"LilyDaytoy"},"content":"            return null;","lastModifiedDate":"2021-10-12"},{"lineNumber":96,"author":{"gitId":"Vincent6896"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":97,"author":{"gitId":"Vincent6896"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":98,"author":{"gitId":"Vincent6896"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":99,"author":{"gitId":"Vincent6896"},"content":"    public void setAsCollected(int index) {","lastModifiedDate":"2021-10-14"},{"lineNumber":100,"author":{"gitId":"Vincent6896"},"content":"        Card cardToCollect \u003d cards.get(index);","lastModifiedDate":"2021-10-14"},{"lineNumber":101,"author":{"gitId":"Vincent6896"},"content":"        cardToCollect.setAsCollected();","lastModifiedDate":"2021-10-14"},{"lineNumber":102,"author":{"gitId":"Vincent6896"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":103,"author":{"gitId":"Vincent6896"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":104,"author":{"gitId":"Vincent6896"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":105,"author":{"gitId":"LilyDaytoy"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":106,"author":{"gitId":"LilyDaytoy"},"content":"     * enter this function means you are sure to win the card and there are enough cards","lastModifiedDate":"2021-10-14"},{"lineNumber":107,"author":{"gitId":"LilyDaytoy"},"content":"     * print the card message when you win the card.","lastModifiedDate":"2021-10-14"},{"lineNumber":108,"author":{"gitId":"LilyDaytoy"},"content":"     * @param cardsToTransfer  CardsCollectd","lastModifiedDate":"2021-10-14"},{"lineNumber":109,"author":{"gitId":"LilyDaytoy"},"content":"     * @param index  the index of the card in the ArrayList of the CardsToBeCollected","lastModifiedDate":"2021-10-14"},{"lineNumber":110,"author":{"gitId":"LilyDaytoy"},"content":"     * @return the cardID of the card collected","lastModifiedDate":"2021-10-21"},{"lineNumber":111,"author":{"gitId":"LilyDaytoy"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":112,"author":{"gitId":"LilyDaytoy"},"content":"    public int transferTo(CardManager cardsToTransfer, int index) {","lastModifiedDate":"2021-10-21"},{"lineNumber":113,"author":{"gitId":"Vincent6896"},"content":"        Card cardToCollect \u003d cards.get(index).setAsCollected();","lastModifiedDate":"2021-10-14"},{"lineNumber":114,"author":{"gitId":"Yuxinn-J"},"content":"        System.out.println(\"Great, this is the card you win!\\n\" + Strings.CARD_DIVIDER_MESSAGE);","lastModifiedDate":"2021-10-14"},{"lineNumber":115,"author":{"gitId":"LilyDaytoy"},"content":"        System.out.println(cardToCollect);","lastModifiedDate":"2021-10-14"},{"lineNumber":116,"author":{"gitId":"Yuxinn-J"},"content":"        System.out.println(Strings.CARD_DIVIDER_MESSAGE);","lastModifiedDate":"2021-10-14"},{"lineNumber":117,"author":{"gitId":"Vincent6896"},"content":"        cards.set(index, cardToCollect);   //set the card as \"collected\" in the cards list","lastModifiedDate":"2021-10-14"},{"lineNumber":118,"author":{"gitId":"Vincent6896"},"content":"        cardsToTransfer.add(cardToCollect);   //add the \"collected\" card to cardsToTransfer","lastModifiedDate":"2021-10-14"},{"lineNumber":119,"author":{"gitId":"LilyDaytoy"},"content":"        return cardToCollect.getCardID();","lastModifiedDate":"2021-10-21"},{"lineNumber":120,"author":{"gitId":"Vincent6896"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":121,"author":{"gitId":"Vincent6896"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":122,"author":{"gitId":"Vincent6896"},"content":"    public boolean exchange(int cardID) {","lastModifiedDate":"2021-10-14"},{"lineNumber":123,"author":{"gitId":"Vincent6896"},"content":"        boolean canBeExchanged \u003d true;","lastModifiedDate":"2021-10-14"},{"lineNumber":124,"author":{"gitId":"Vincent6896"},"content":"        Card cardSelected \u003d cards.get(cardID - 1);","lastModifiedDate":"2021-10-14"},{"lineNumber":125,"author":{"gitId":"Vincent6896"},"content":"        if (cardSelected.checkIfIsUsed()) {","lastModifiedDate":"2021-10-14"},{"lineNumber":126,"author":{"gitId":"Vincent6896"},"content":"            canBeExchanged \u003d false;","lastModifiedDate":"2021-10-14"},{"lineNumber":127,"author":{"gitId":"Vincent6896"},"content":"        } else {","lastModifiedDate":"2021-10-14"},{"lineNumber":128,"author":{"gitId":"Vincent6896"},"content":"            cardSelected.setAsUsed();","lastModifiedDate":"2021-10-14"},{"lineNumber":129,"author":{"gitId":"Vincent6896"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":130,"author":{"gitId":"LilyDaytoy"},"content":"        return canBeExchanged;","lastModifiedDate":"2021-10-10"},{"lineNumber":131,"author":{"gitId":"Vincent6896"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":132,"author":{"gitId":"Vincent6896"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"Yuxinn-J":5,"oneScotch":4,"Vincent6896":89,"LilyDaytoy":34}},{"path":"src/main/java/data/game/Game.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"oneScotch"},"content":"package data.game;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"Vincent6896"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"oneScotch"},"content":"import java.io.Serializable;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"oneScotch"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"oneScotch"},"content":"public abstract class Game implements Serializable {","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"oneScotch"},"content":"    private static final long serialVersionUID \u003d -9135686500512288865L;","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"Vincent6896"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"LilyDaytoy"},"content":"    public abstract int execute();","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"Vincent6896"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"Vincent6896"},"content":"    public abstract String getName();","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"Vincent6896"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"oneScotch":5,"Vincent6896":5,"LilyDaytoy":1}},{"path":"src/main/java/data/game/GameRecord.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"oneScotch"},"content":"package data.game;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"oneScotch"},"content":"import java.io.Serializable;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"Mist0919"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"oneScotch"},"content":"public class GameRecord implements Serializable {","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"oneScotch"},"content":"    private static final long serialVersionUID \u003d -9135686500512288865L;","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"Vincent6896"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"Mist0919"},"content":"    public static ArrayList\u003cGame\u003e games;","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"Mist0919"},"content":"    public GameRecord() {","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"Mist0919"},"content":"        this.games \u003d new ArrayList\u003cGame\u003e();","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"Mist0919"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"Mist0919"},"content":"    public GameRecord(ArrayList\u003cGame\u003e games) {","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"Mist0919"},"content":"        this.games \u003d games;","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"Mist0919"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"Mist0919"},"content":"    public void addGame(Game game) {","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"Mist0919"},"content":"        this.games.add(game);","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"Mist0919"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"Mist0919"},"content":"    public Game deleteGame(int index) {","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"Mist0919"},"content":"        Game removedGame \u003d this.games.get(index);","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"Mist0919"},"content":"        this.games.remove(index);","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"Mist0919"},"content":"        return removedGame;","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"Mist0919"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"Mist0919"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"oneScotch":4,"Mist0919":23,"Vincent6896":1}},{"path":"src/main/java/data/game/GuessingNumGame.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Mist0919"},"content":"package data.game;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"oneScotch"},"content":"import java.io.Serializable;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"Mist0919"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"Mist0919"},"content":"import java.util.InputMismatchException;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"oneScotch"},"content":"public class GuessingNumGame extends Game implements Serializable {","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"oneScotch"},"content":"    private static final long serialVersionUID \u003d -9135686500512288865L;","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"Mist0919"},"content":"    public static final String name \u003d \"GuessingNumber\";","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"Mist0919"},"content":"    public static final int MAX_NUM \u003d 100;","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"Mist0919"},"content":"    public static final int MAX_TRIES \u003d 8;","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"Mist0919"},"content":"    public static final String LOGO \u003d \" _____ _     _____ ____  ____  _  _      _____   \"","lastModifiedDate":"2021-10-14"},{"lineNumber":13,"author":{"gitId":"Mist0919"},"content":"            + \"_      _     _      ____  _____ ____ \\n\"","lastModifiedDate":"2021-10-14"},{"lineNumber":14,"author":{"gitId":"Mist0919"},"content":"            + \"/  __// \\\\ /\\\\/  __// ___\\\\/ ___\\\\/ \\\\/ \\\\  /|/  __/  / \"","lastModifiedDate":"2021-10-14"},{"lineNumber":15,"author":{"gitId":"Mist0919"},"content":"            + \"\\\\  /|/ \\\\ /\\\\/ \\\\__/|/  _ \\\\/  __//  __\\\\\\n\"","lastModifiedDate":"2021-10-14"},{"lineNumber":16,"author":{"gitId":"Mist0919"},"content":"            + \"| |  _| | |||  \\\\  |    \\\\|    \\\\| || |\\\\ ||| |  _  | |\\\\\"","lastModifiedDate":"2021-10-14"},{"lineNumber":17,"author":{"gitId":"Mist0919"},"content":"            + \" ||| | ||| |\\\\/||| | //|  \\\\  |  \\\\/|\\n\"","lastModifiedDate":"2021-10-14"},{"lineNumber":18,"author":{"gitId":"Mist0919"},"content":"            + \"| |_//| \\\\_/||  /_ \\\\___ |\\\\___ || || | \\\\||| |_//  | | \\\\\"","lastModifiedDate":"2021-10-14"},{"lineNumber":19,"author":{"gitId":"Mist0919"},"content":"            + \"||| \\\\_/|| |  ||| |_\\\\\\\\|  /_ |    /\\n\"","lastModifiedDate":"2021-10-14"},{"lineNumber":20,"author":{"gitId":"Mist0919"},"content":"            + \"\\\\____\\\\\\\\____/\\\\____\\\\\\\\____/\\\\____/\\\\_/\\\\_/  \\\\|\\\\____\\\\\"","lastModifiedDate":"2021-10-14"},{"lineNumber":21,"author":{"gitId":"Mist0919"},"content":"            + \"  \\\\_/  \\\\|\\\\____/\\\\_/  \\\\|\\\\____/\\\\____\\\\\\\\_/\\\\_\\\\\";","lastModifiedDate":"2021-10-14"},{"lineNumber":22,"author":{"gitId":"Yuxinn-J"},"content":"    public static final String GAME_RULES \u003d \"The purpose of the game is to guess the secret number. \"","lastModifiedDate":"2021-10-14"},{"lineNumber":23,"author":{"gitId":"Mist0919"},"content":"            + \"You have to guess a number between 0 to \" + (MAX_NUM - 1) + \" in a maximum of \"","lastModifiedDate":"2021-10-14"},{"lineNumber":24,"author":{"gitId":"Yuxinn-J"},"content":"            + MAX_TRIES + \" attempts, if the guess is not correct, a tip will be given telling\"","lastModifiedDate":"2021-10-14"},{"lineNumber":25,"author":{"gitId":"Yuxinn-J"},"content":"            + \"whether the number you guess is smaller or larger than the secret number.\";","lastModifiedDate":"2021-10-14"},{"lineNumber":26,"author":{"gitId":"Yuxinn-J"},"content":"    private final int secretNum;","lastModifiedDate":"2021-10-14"},{"lineNumber":27,"author":{"gitId":"Mist0919"},"content":"    private int remainingTries;","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"LilyDaytoy"},"content":"    private static int startID \u003d 11;","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"Mist0919"},"content":"    Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"Mist0919"},"content":"    public GuessingNumGame() {","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"Yuxinn-J"},"content":"        this.secretNum \u003d generateSecretNum() % MAX_NUM;","lastModifiedDate":"2021-10-14"},{"lineNumber":35,"author":{"gitId":"Mist0919"},"content":"        this.remainingTries \u003d MAX_TRIES;","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"Mist0919"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"Mist0919"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"Mist0919"},"content":"     * execute the game and return cardID collected.","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"Mist0919"},"content":"     * @return cardID of the card to collect in the Player class; return 0 if lose","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"Mist0919"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":42,"author":{"gitId":"Mist0919"},"content":"    @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"LilyDaytoy"},"content":"    public int execute() {","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"Mist0919"},"content":"        displayGameDetails();","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"Mist0919"},"content":"        GuessingNumGame g \u003d new GuessingNumGame();","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"LilyDaytoy"},"content":"        boolean isWin \u003d g.play();","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"LilyDaytoy"},"content":"        return isWin ? startID : 0;","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"Mist0919"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"Mist0919"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":51,"author":{"gitId":"Mist0919"},"content":"     * gets the name of this game.","lastModifiedDate":"2021-10-21"},{"lineNumber":52,"author":{"gitId":"Mist0919"},"content":"     * @return string the name of the game","lastModifiedDate":"2021-10-21"},{"lineNumber":53,"author":{"gitId":"Mist0919"},"content":"     *","lastModifiedDate":"2021-10-21"},{"lineNumber":54,"author":{"gitId":"Mist0919"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":55,"author":{"gitId":"Mist0919"},"content":"    @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"Mist0919"},"content":"    public String getName() {","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"Mist0919"},"content":"        return this.name;","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"Mist0919"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"Mist0919"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":61,"author":{"gitId":"Mist0919"},"content":"     * randomly generated a number between 0 and max number minus 1 to be guessed.","lastModifiedDate":"2021-10-21"},{"lineNumber":62,"author":{"gitId":"Mist0919"},"content":"     * @return the randomly generated integer","lastModifiedDate":"2021-10-21"},{"lineNumber":63,"author":{"gitId":"Mist0919"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":64,"author":{"gitId":"Yuxinn-J"},"content":"    public int generateSecretNum() {","lastModifiedDate":"2021-10-14"},{"lineNumber":65,"author":{"gitId":"Mist0919"},"content":"        final double randomNum \u003d Math.random();","lastModifiedDate":"2021-10-12"},{"lineNumber":66,"author":{"gitId":"Mist0919"},"content":"        return (int) (randomNum * 100);","lastModifiedDate":"2021-10-12"},{"lineNumber":67,"author":{"gitId":"Mist0919"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":68,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":69,"author":{"gitId":"Mist0919"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":70,"author":{"gitId":"Mist0919"},"content":"     * executes the main part of game which the user can play with.","lastModifiedDate":"2021-10-21"},{"lineNumber":71,"author":{"gitId":"Mist0919"},"content":"     * @return boolean whether the user has won this game","lastModifiedDate":"2021-10-21"},{"lineNumber":72,"author":{"gitId":"Mist0919"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":73,"author":{"gitId":"LilyDaytoy"},"content":"    public boolean play() {","lastModifiedDate":"2021-10-12"},{"lineNumber":74,"author":{"gitId":"LilyDaytoy"},"content":"        boolean isWin \u003d false;","lastModifiedDate":"2021-10-12"},{"lineNumber":75,"author":{"gitId":"Mist0919"},"content":"        while (this.remainingTries \u003e 0) {","lastModifiedDate":"2021-10-12"},{"lineNumber":76,"author":{"gitId":"Mist0919"},"content":"            Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2021-10-12"},{"lineNumber":77,"author":{"gitId":"Mist0919"},"content":"            printEnterMessage();","lastModifiedDate":"2021-10-12"},{"lineNumber":78,"author":{"gitId":"Mist0919"},"content":"            int input \u003d -1;","lastModifiedDate":"2021-10-12"},{"lineNumber":79,"author":{"gitId":"Mist0919"},"content":"            boolean isCorrectInput \u003d true;","lastModifiedDate":"2021-10-14"},{"lineNumber":80,"author":{"gitId":"Mist0919"},"content":"            try {","lastModifiedDate":"2021-10-12"},{"lineNumber":81,"author":{"gitId":"Mist0919"},"content":"                input \u003d in.nextInt();","lastModifiedDate":"2021-10-12"},{"lineNumber":82,"author":{"gitId":"Mist0919"},"content":"                assert input \u003c MAX_NUM \u0026\u0026 input \u003e\u003d 0 : \"Please enter a number between 0 to \" + MAX_NUM + \":(\\n\";","lastModifiedDate":"2021-10-14"},{"lineNumber":83,"author":{"gitId":"Mist0919"},"content":"            } catch (InputMismatchException i) {","lastModifiedDate":"2021-10-12"},{"lineNumber":84,"author":{"gitId":"Mist0919"},"content":"                System.out.println(\"Sorry, please enter an integer between 0 to \" + MAX_NUM + \":(\\n\");","lastModifiedDate":"2021-10-12"},{"lineNumber":85,"author":{"gitId":"Mist0919"},"content":"                isCorrectInput \u003d false;","lastModifiedDate":"2021-10-14"},{"lineNumber":86,"author":{"gitId":"Mist0919"},"content":"            }","lastModifiedDate":"2021-10-12"},{"lineNumber":87,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":88,"author":{"gitId":"Mist0919"},"content":"            if (isCorrectInput) {","lastModifiedDate":"2021-10-12"},{"lineNumber":89,"author":{"gitId":"Mist0919"},"content":"                this.remainingTries--;","lastModifiedDate":"2021-10-12"},{"lineNumber":90,"author":{"gitId":"Yuxinn-J"},"content":"                if (input \u003d\u003d this.secretNum) {","lastModifiedDate":"2021-10-14"},{"lineNumber":91,"author":{"gitId":"Mist0919"},"content":"                    printSuccessfulMessage();","lastModifiedDate":"2021-10-12"},{"lineNumber":92,"author":{"gitId":"LilyDaytoy"},"content":"                    isWin \u003d true;","lastModifiedDate":"2021-10-12"},{"lineNumber":93,"author":{"gitId":"Mist0919"},"content":"                    break;","lastModifiedDate":"2021-10-14"},{"lineNumber":94,"author":{"gitId":"Mist0919"},"content":"                } else {","lastModifiedDate":"2021-10-12"},{"lineNumber":95,"author":{"gitId":"Mist0919"},"content":"                    printFailingMessage(input);","lastModifiedDate":"2021-10-12"},{"lineNumber":96,"author":{"gitId":"Mist0919"},"content":"                }","lastModifiedDate":"2021-10-12"},{"lineNumber":97,"author":{"gitId":"Mist0919"},"content":"            }","lastModifiedDate":"2021-10-12"},{"lineNumber":98,"author":{"gitId":"Mist0919"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":99,"author":{"gitId":"Mist0919"},"content":"        printEndingMessage();","lastModifiedDate":"2021-10-12"},{"lineNumber":100,"author":{"gitId":"LilyDaytoy"},"content":"        return isWin;","lastModifiedDate":"2021-10-12"},{"lineNumber":101,"author":{"gitId":"Mist0919"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":102,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":103,"author":{"gitId":"Mist0919"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":104,"author":{"gitId":"Mist0919"},"content":"     * prints the messege that the user have guessed the secrect number.","lastModifiedDate":"2021-10-21"},{"lineNumber":105,"author":{"gitId":"Mist0919"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":106,"author":{"gitId":"Mist0919"},"content":"    public void printSuccessfulMessage() {","lastModifiedDate":"2021-10-12"},{"lineNumber":107,"author":{"gitId":"Yuxinn-J"},"content":"        System.out.println(\"Nice! You have guess the secret number \" + this.secretNum","lastModifiedDate":"2021-10-14"},{"lineNumber":108,"author":{"gitId":"Yuxinn-J"},"content":"                + \" in \" + (MAX_TRIES - this.remainingTries) + \" attempts.\\n\");","lastModifiedDate":"2021-10-14"},{"lineNumber":109,"author":{"gitId":"Mist0919"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":110,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":111,"author":{"gitId":"Mist0919"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":112,"author":{"gitId":"Mist0919"},"content":"     * prints the rule of the guessing number game.","lastModifiedDate":"2021-10-21"},{"lineNumber":113,"author":{"gitId":"Mist0919"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":114,"author":{"gitId":"Mist0919"},"content":"    public void displayGameDetails() {","lastModifiedDate":"2021-10-21"},{"lineNumber":115,"author":{"gitId":"Mist0919"},"content":"        System.out.println(LOGO);","lastModifiedDate":"2021-10-21"},{"lineNumber":116,"author":{"gitId":"Mist0919"},"content":"        System.out.println(GAME_RULES);","lastModifiedDate":"2021-10-21"},{"lineNumber":117,"author":{"gitId":"Mist0919"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":118,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":119,"author":{"gitId":"Mist0919"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":120,"author":{"gitId":"Mist0919"},"content":"     * prints the messege that the guess is incorrect and displays the number of remaining tries.","lastModifiedDate":"2021-10-21"},{"lineNumber":121,"author":{"gitId":"Mist0919"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":122,"author":{"gitId":"Mist0919"},"content":"    public void printFailingMessage(int guess) {","lastModifiedDate":"2021-10-12"},{"lineNumber":123,"author":{"gitId":"Yuxinn-J"},"content":"        if (guess \u003e this.secretNum) {","lastModifiedDate":"2021-10-14"},{"lineNumber":124,"author":{"gitId":"Yuxinn-J"},"content":"            System.out.println(\"This number is larger than the secret number :(\");","lastModifiedDate":"2021-10-14"},{"lineNumber":125,"author":{"gitId":"Mist0919"},"content":"        } else {","lastModifiedDate":"2021-10-12"},{"lineNumber":126,"author":{"gitId":"Yuxinn-J"},"content":"            System.out.println(\"This number is smaller than the secret number :(\");","lastModifiedDate":"2021-10-14"},{"lineNumber":127,"author":{"gitId":"Mist0919"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":128,"author":{"gitId":"Mist0919"},"content":"        System.out.println(\"Come on! You still have \" + this.remainingTries + \" chances.\\n\");","lastModifiedDate":"2021-10-12"},{"lineNumber":129,"author":{"gitId":"Mist0919"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":130,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":131,"author":{"gitId":"Mist0919"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":132,"author":{"gitId":"Mist0919"},"content":"     * prints the messege that the tries have been used up.","lastModifiedDate":"2021-10-21"},{"lineNumber":133,"author":{"gitId":"Mist0919"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":134,"author":{"gitId":"Mist0919"},"content":"    public void printEndingMessage() {","lastModifiedDate":"2021-10-12"},{"lineNumber":135,"author":{"gitId":"Mist0919"},"content":"        System.out.println(\"Oops! You have used up the chances. Game over :(\");","lastModifiedDate":"2021-10-12"},{"lineNumber":136,"author":{"gitId":"Mist0919"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":137,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":138,"author":{"gitId":"Mist0919"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":139,"author":{"gitId":"Mist0919"},"content":"     * prints the messege telling the unser to enter a number for guessing.","lastModifiedDate":"2021-10-21"},{"lineNumber":140,"author":{"gitId":"Mist0919"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":141,"author":{"gitId":"Mist0919"},"content":"    public void printEnterMessage() {","lastModifiedDate":"2021-10-12"},{"lineNumber":142,"author":{"gitId":"Mist0919"},"content":"        System.out.println(\"Please guess a number: \\n\");","lastModifiedDate":"2021-10-12"},{"lineNumber":143,"author":{"gitId":"Mist0919"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":144,"author":{"gitId":"Mist0919"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"Yuxinn-J":12,"oneScotch":3,"Mist0919":121,"LilyDaytoy":8}},{"path":"src/main/java/data/game/HangmanGame.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"oneScotch"},"content":"package data.game;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"Vincent6896"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"oneScotch"},"content":"import java.io.Serializable;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"Vincent6896"},"content":"import java.util.Random;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"Vincent6896"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"Vincent6896"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"oneScotch"},"content":"public class HangmanGame extends Game implements Serializable {","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"oneScotch"},"content":"    private static final long serialVersionUID \u003d -9135686500512288865L;","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"Vincent6896"},"content":"    // Coding Terminologies","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"Yuxinn-J"},"content":"    public static final String[] WORDS \u003d {\"algorithm\", \"argument\", \"arrays\", \"c\", \"loops\", \"java\", \"linux\",","lastModifiedDate":"2021-10-14"},{"lineNumber":11,"author":{"gitId":"Yuxinn-J"},"content":"        \"python\", \"statement\", \"variable\", \"while\"};","lastModifiedDate":"2021-10-14"},{"lineNumber":12,"author":{"gitId":"Mist0919"},"content":"    public static final String name \u003d \"Hangman\";","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"Vincent6896"},"content":"    public static final Random RANDOM \u003d new Random();","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"Vincent6896"},"content":"    public static final int MAX_TRIES \u003d 5;","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"Mist0919"},"content":"    public static final String LOGO \u003d \"\\n\"","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"Mist0919"},"content":"            + \"        .-------------------------------------------------------------------------------.\\n\"","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"Mist0919"},"content":"            + \"        |      _      _                                                                  |\\n\"","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"Mist0919"},"content":"            + \"        |     | |    | |   __ _    _ __      __ _        /\\\\/\\\\      __ _    _ __          |\\n\"","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"Mist0919"},"content":"            + \"        |     | |----| |  / _  |  |  _ \\\\    / _` |      /    \\\\    / _  |  |  _  \\\\        |\\n\"","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"Mist0919"},"content":"            + \"        |     | |----| | | (_| |  | | | |  | (_| |     / /\\\\/\\\\ |  | (_| |  | | | |        |\\n\"","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"Mist0919"},"content":"            + \"        |     |_|    |_|  \\\\_ _ |  |_| |_|   \\\\__, |     \\\\/    \\\\/   \\\\_ _ |  |_| |_|        |\\n\"","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"Mist0919"},"content":"            + \"        |                                    |___/                                       |\\n\"","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"Mist0919"},"content":"            + \"        .--------------------------------------------------------------------------------.\\n\";","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"Mist0919"},"content":"    public static final String GAME_RULES \u003d \"The purpose of this game is to guess an coding terminology, \"","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"Mist0919"},"content":"            + \"secretly chosen by the application\\n\\n\"","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"Mist0919"},"content":"            + \"You have to guess one letter at a time and you can have \" + MAX_TRIES + \" wrong attempts\\n\\n\"","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"Mist0919"},"content":"            + \"Enter a lower-case letter and don\u0027t forget to enter key after each guess\\n\\n\"","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"Mist0919"},"content":"            + \"Let\u0027s play the game!\\n\\n\";","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"Vincent6896"},"content":"    Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"Vincent6896"},"content":"    private String secretWord;","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"Vincent6896"},"content":"    private int length;","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"Vincent6896"},"content":"    private char[] guessWord;","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"Vincent6896"},"content":"    private int remainingTries;","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"LilyDaytoy"},"content":"    private static int startID \u003d 31;","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"Vincent6896"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"Vincent6896"},"content":"    public HangmanGame() {","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"Vincent6896"},"content":"        this.secretWord \u003d chooseSecretWord();","lastModifiedDate":"2021-10-07"},{"lineNumber":38,"author":{"gitId":"Vincent6896"},"content":"        this.length \u003d secretWord.length();","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"Vincent6896"},"content":"        this.remainingTries \u003d MAX_TRIES;","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"Vincent6896"},"content":"        this.guessWord \u003d new char[length];","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"Vincent6896"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"Vincent6896"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"Vincent6896"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"LilyDaytoy"},"content":"    public int execute() {","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"Vincent6896"},"content":"        boolean isPlay \u003d true;","lastModifiedDate":"2021-10-07"},{"lineNumber":46,"author":{"gitId":"Vincent6896"},"content":"        displayGameDetails();","lastModifiedDate":"2021-10-07"},{"lineNumber":47,"author":{"gitId":"Vincent6896"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":48,"author":{"gitId":"LilyDaytoy"},"content":"        HangmanGame hangmanGame \u003d new HangmanGame();","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"LilyDaytoy"},"content":"        boolean isWin \u003d hangmanGame.play();","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"LilyDaytoy"},"content":"        /*","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"Vincent6896"},"content":"        while (isPlay) {","lastModifiedDate":"2021-10-07"},{"lineNumber":52,"author":{"gitId":"Vincent6896"},"content":"            HangmanGame hangmanGame \u003d new HangmanGame();","lastModifiedDate":"2021-10-07"},{"lineNumber":53,"author":{"gitId":"LilyDaytoy"},"content":"            boolean isWin \u003d hangmanGame.play();","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"LilyDaytoy"},"content":"            isPlay \u003d false; // todo: startNewGame();","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"Vincent6896"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":56,"author":{"gitId":"LilyDaytoy"},"content":"        */","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"LilyDaytoy"},"content":"        return isWin ? startID : 0;","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"Vincent6896"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":59,"author":{"gitId":"Vincent6896"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":60,"author":{"gitId":"Vincent6896"},"content":"    @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":61,"author":{"gitId":"Vincent6896"},"content":"    public String getName() {","lastModifiedDate":"2021-10-08"},{"lineNumber":62,"author":{"gitId":"Yuxinn-J"},"content":"        return \"Hang Man\";","lastModifiedDate":"2021-10-08"},{"lineNumber":63,"author":{"gitId":"Vincent6896"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":64,"author":{"gitId":"Vincent6896"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":65,"author":{"gitId":"Vincent6896"},"content":"    public void displayGameDetails() {","lastModifiedDate":"2021-10-07"},{"lineNumber":66,"author":{"gitId":"Vincent6896"},"content":"        System.out.println(LOGO);","lastModifiedDate":"2021-10-07"},{"lineNumber":67,"author":{"gitId":"Vincent6896"},"content":"        System.out.println(GAME_RULES);","lastModifiedDate":"2021-10-07"},{"lineNumber":68,"author":{"gitId":"Vincent6896"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":69,"author":{"gitId":"Vincent6896"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":70,"author":{"gitId":"LilyDaytoy"},"content":"    public boolean play() {","lastModifiedDate":"2021-10-12"},{"lineNumber":71,"author":{"gitId":"Yuxinn-J"},"content":"        boolean isWin \u003d false;","lastModifiedDate":"2021-10-14"},{"lineNumber":72,"author":{"gitId":"Vincent6896"},"content":"        replaceDashes();","lastModifiedDate":"2021-10-07"},{"lineNumber":73,"author":{"gitId":"Vincent6896"},"content":"        System.out.println(\"Your guess word is:\");","lastModifiedDate":"2021-10-07"},{"lineNumber":74,"author":{"gitId":"Vincent6896"},"content":"        displayWord();","lastModifiedDate":"2021-10-07"},{"lineNumber":75,"author":{"gitId":"Vincent6896"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":76,"author":{"gitId":"Vincent6896"},"content":"        while (this.remainingTries \u003e 0) {","lastModifiedDate":"2021-10-07"},{"lineNumber":77,"author":{"gitId":"Vincent6896"},"content":"            System.out.println(\"\\nEnter your guess letter:\");","lastModifiedDate":"2021-10-07"},{"lineNumber":78,"author":{"gitId":"Vincent6896"},"content":"            char guessLetter \u003d in.next().charAt(0);","lastModifiedDate":"2021-10-07"},{"lineNumber":79,"author":{"gitId":"Vincent6896"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":80,"author":{"gitId":"Vincent6896"},"content":"            int guess \u003d isGuessTrue(guessLetter);","lastModifiedDate":"2021-10-07"},{"lineNumber":81,"author":{"gitId":"Vincent6896"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":82,"author":{"gitId":"Vincent6896"},"content":"            if (guess \u003d\u003d 0) {","lastModifiedDate":"2021-10-07"},{"lineNumber":83,"author":{"gitId":"Vincent6896"},"content":"                remainingTries--;","lastModifiedDate":"2021-10-07"},{"lineNumber":84,"author":{"gitId":"Vincent6896"},"content":"                System.out.println(\"\\nWhoops! that letter is not present in the word\");","lastModifiedDate":"2021-10-07"},{"lineNumber":85,"author":{"gitId":"Vincent6896"},"content":"                displayMan(remainingTries);","lastModifiedDate":"2021-10-07"},{"lineNumber":86,"author":{"gitId":"Vincent6896"},"content":"            }","lastModifiedDate":"2021-10-07"},{"lineNumber":87,"author":{"gitId":"Vincent6896"},"content":"            if (guess \u003d\u003d 1) {","lastModifiedDate":"2021-10-07"},{"lineNumber":88,"author":{"gitId":"Vincent6896"},"content":"                System.out.println(\"\\nYay! You have found the letter\");","lastModifiedDate":"2021-10-07"},{"lineNumber":89,"author":{"gitId":"Vincent6896"},"content":"            }","lastModifiedDate":"2021-10-07"},{"lineNumber":90,"author":{"gitId":"Vincent6896"},"content":"            if (guess \u003d\u003d 2) {","lastModifiedDate":"2021-10-07"},{"lineNumber":91,"author":{"gitId":"Vincent6896"},"content":"                System.out.println(\"\\nYou have already guessed this letter. Try something else!\");","lastModifiedDate":"2021-10-07"},{"lineNumber":92,"author":{"gitId":"Vincent6896"},"content":"            }","lastModifiedDate":"2021-10-07"},{"lineNumber":93,"author":{"gitId":"Vincent6896"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":94,"author":{"gitId":"Vincent6896"},"content":"            System.out.println(\"You can have \" + this.remainingTries + \" more wrong attempts\");","lastModifiedDate":"2021-10-07"},{"lineNumber":95,"author":{"gitId":"Vincent6896"},"content":"            System.out.println(\"Your guess word is:\");","lastModifiedDate":"2021-10-07"},{"lineNumber":96,"author":{"gitId":"Vincent6896"},"content":"            displayWord();","lastModifiedDate":"2021-10-07"},{"lineNumber":97,"author":{"gitId":"Vincent6896"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":98,"author":{"gitId":"Vincent6896"},"content":"            if (secretWord.equals(new String(guessWord))) {","lastModifiedDate":"2021-10-07"},{"lineNumber":99,"author":{"gitId":"Vincent6896"},"content":"                System.out.println(\"\\nCongratulation! You won.\");","lastModifiedDate":"2021-10-07"},{"lineNumber":100,"author":{"gitId":"Yuxinn-J"},"content":"                isWin \u003d true;   // changed","lastModifiedDate":"2021-10-14"},{"lineNumber":101,"author":{"gitId":"Yuxinn-J"},"content":"                break;","lastModifiedDate":"2021-10-14"},{"lineNumber":102,"author":{"gitId":"Vincent6896"},"content":"            }","lastModifiedDate":"2021-10-07"},{"lineNumber":103,"author":{"gitId":"Vincent6896"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":104,"author":{"gitId":"Vincent6896"},"content":"        if (!secretWord.equals(new String(guessWord))) {","lastModifiedDate":"2021-10-07"},{"lineNumber":105,"author":{"gitId":"Vincent6896"},"content":"            System.out.println(\"\\nToo many Guesses! You have been hanged.\");","lastModifiedDate":"2021-10-07"},{"lineNumber":106,"author":{"gitId":"Vincent6896"},"content":"            System.out.println(\"\\nThe secret word was: \" + this.secretWord);","lastModifiedDate":"2021-10-07"},{"lineNumber":107,"author":{"gitId":"Vincent6896"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":108,"author":{"gitId":"Yuxinn-J"},"content":"        return isWin;  // changed","lastModifiedDate":"2021-10-14"},{"lineNumber":109,"author":{"gitId":"Vincent6896"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":110,"author":{"gitId":"Vincent6896"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":111,"author":{"gitId":"Vincent6896"},"content":"    // choose next word randomly","lastModifiedDate":"2021-10-07"},{"lineNumber":112,"author":{"gitId":"Vincent6896"},"content":"    public String chooseSecretWord() {","lastModifiedDate":"2021-10-07"},{"lineNumber":113,"author":{"gitId":"Vincent6896"},"content":"        return WORDS[RANDOM.nextInt(WORDS.length)];","lastModifiedDate":"2021-10-07"},{"lineNumber":114,"author":{"gitId":"Vincent6896"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":115,"author":{"gitId":"Vincent6896"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":116,"author":{"gitId":"Vincent6896"},"content":"    public void replaceDashes() {","lastModifiedDate":"2021-10-07"},{"lineNumber":117,"author":{"gitId":"Vincent6896"},"content":"        for (int i \u003d 0; i \u003c this.length; i++) {","lastModifiedDate":"2021-10-07"},{"lineNumber":118,"author":{"gitId":"Vincent6896"},"content":"            this.guessWord[i] \u003d \u0027-\u0027;","lastModifiedDate":"2021-10-07"},{"lineNumber":119,"author":{"gitId":"Vincent6896"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":120,"author":{"gitId":"Vincent6896"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":121,"author":{"gitId":"Vincent6896"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":122,"author":{"gitId":"Vincent6896"},"content":"    public void displayWord() {","lastModifiedDate":"2021-10-07"},{"lineNumber":123,"author":{"gitId":"Vincent6896"},"content":"        for (int i \u003d 0; i \u003c this.length; i++) {","lastModifiedDate":"2021-10-07"},{"lineNumber":124,"author":{"gitId":"Vincent6896"},"content":"            System.out.print(this.guessWord[i]);","lastModifiedDate":"2021-10-07"},{"lineNumber":125,"author":{"gitId":"Vincent6896"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":126,"author":{"gitId":"Vincent6896"},"content":"        System.lineSeparator();","lastModifiedDate":"2021-10-07"},{"lineNumber":127,"author":{"gitId":"Vincent6896"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":128,"author":{"gitId":"Vincent6896"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":129,"author":{"gitId":"Vincent6896"},"content":"    public int isGuessTrue(char letter) {","lastModifiedDate":"2021-10-07"},{"lineNumber":130,"author":{"gitId":"Vincent6896"},"content":"        int flag \u003d 0;","lastModifiedDate":"2021-10-07"},{"lineNumber":131,"author":{"gitId":"Vincent6896"},"content":"        for (int i \u003d 0; i \u003c this.length; i++) {","lastModifiedDate":"2021-10-07"},{"lineNumber":132,"author":{"gitId":"Vincent6896"},"content":"            if (this.secretWord.charAt(i) \u003d\u003d letter) {","lastModifiedDate":"2021-10-07"},{"lineNumber":133,"author":{"gitId":"Vincent6896"},"content":"                if (this.guessWord[i] \u003d\u003d this.secretWord.charAt(i)) {","lastModifiedDate":"2021-10-07"},{"lineNumber":134,"author":{"gitId":"Vincent6896"},"content":"                    flag \u003d 2;","lastModifiedDate":"2021-10-07"},{"lineNumber":135,"author":{"gitId":"Vincent6896"},"content":"                } else {","lastModifiedDate":"2021-10-07"},{"lineNumber":136,"author":{"gitId":"Vincent6896"},"content":"                    this.guessWord[i] \u003d this.secretWord.charAt(i);","lastModifiedDate":"2021-10-07"},{"lineNumber":137,"author":{"gitId":"Vincent6896"},"content":"                    flag \u003d 1;","lastModifiedDate":"2021-10-07"},{"lineNumber":138,"author":{"gitId":"Vincent6896"},"content":"                }","lastModifiedDate":"2021-10-07"},{"lineNumber":139,"author":{"gitId":"Vincent6896"},"content":"            }","lastModifiedDate":"2021-10-07"},{"lineNumber":140,"author":{"gitId":"Vincent6896"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":141,"author":{"gitId":"Vincent6896"},"content":"        return flag;","lastModifiedDate":"2021-10-07"},{"lineNumber":142,"author":{"gitId":"Vincent6896"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":143,"author":{"gitId":"Vincent6896"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":144,"author":{"gitId":"Vincent6896"},"content":"    public void displayMan(int remainingGuess) {","lastModifiedDate":"2021-10-07"},{"lineNumber":145,"author":{"gitId":"Vincent6896"},"content":"        String[] bodyPart \u003d {\"\", \"\", \"\", \"\"};","lastModifiedDate":"2021-10-07"},{"lineNumber":146,"author":{"gitId":"Vincent6896"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":147,"author":{"gitId":"Yuxinn-J"},"content":"        if (remainingGuess \u003d\u003d 0) {","lastModifiedDate":"2021-10-08"},{"lineNumber":148,"author":{"gitId":"Yuxinn-J"},"content":"            bodyPart[0] \u003d \"( )\";","lastModifiedDate":"2021-10-08"},{"lineNumber":149,"author":{"gitId":"Yuxinn-J"},"content":"            bodyPart[1] \u003d \"/|\\\\\";","lastModifiedDate":"2021-10-08"},{"lineNumber":150,"author":{"gitId":"Yuxinn-J"},"content":"            bodyPart[2] \u003d \"/|\\\\\";","lastModifiedDate":"2021-10-08"},{"lineNumber":151,"author":{"gitId":"Vincent6896"},"content":"            bodyPart[3] \u003d \" |\";","lastModifiedDate":"2021-10-07"},{"lineNumber":152,"author":{"gitId":"Yuxinn-J"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":153,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":154,"author":{"gitId":"Yuxinn-J"},"content":"        if (remainingGuess \u003d\u003d 1) {","lastModifiedDate":"2021-10-08"},{"lineNumber":155,"author":{"gitId":"Yuxinn-J"},"content":"            bodyPart[0] \u003d \"( )\";","lastModifiedDate":"2021-10-08"},{"lineNumber":156,"author":{"gitId":"Yuxinn-J"},"content":"            bodyPart[1] \u003d \"/|\\\\\";","lastModifiedDate":"2021-10-08"},{"lineNumber":157,"author":{"gitId":"Vincent6896"},"content":"            bodyPart[2] \u003d \"/|\\\\\";","lastModifiedDate":"2021-10-07"},{"lineNumber":158,"author":{"gitId":"Yuxinn-J"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":159,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":160,"author":{"gitId":"Yuxinn-J"},"content":"        if (remainingGuess \u003d\u003d 2) {","lastModifiedDate":"2021-10-08"},{"lineNumber":161,"author":{"gitId":"Yuxinn-J"},"content":"            bodyPart[0] \u003d \"( )\";","lastModifiedDate":"2021-10-08"},{"lineNumber":162,"author":{"gitId":"Vincent6896"},"content":"            bodyPart[1] \u003d \"/|\\\\\";","lastModifiedDate":"2021-10-07"},{"lineNumber":163,"author":{"gitId":"Yuxinn-J"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":164,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":165,"author":{"gitId":"Yuxinn-J"},"content":"        if (remainingGuess \u003d\u003d 3) {","lastModifiedDate":"2021-10-08"},{"lineNumber":166,"author":{"gitId":"Vincent6896"},"content":"            bodyPart[0] \u003d \"( )\";","lastModifiedDate":"2021-10-07"},{"lineNumber":167,"author":{"gitId":"Vincent6896"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":168,"author":{"gitId":"Vincent6896"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":169,"author":{"gitId":"Vincent6896"},"content":"        String hangMan \u003d \"--------------\"","lastModifiedDate":"2021-10-07"},{"lineNumber":170,"author":{"gitId":"Vincent6896"},"content":"                + \"\\n  |       \" + bodyPart[3]","lastModifiedDate":"2021-10-07"},{"lineNumber":171,"author":{"gitId":"Vincent6896"},"content":"                + \"\\n  |       \" + bodyPart[3]","lastModifiedDate":"2021-10-07"},{"lineNumber":172,"author":{"gitId":"Vincent6896"},"content":"                + \"\\n  |       \" + bodyPart[0]","lastModifiedDate":"2021-10-07"},{"lineNumber":173,"author":{"gitId":"Vincent6896"},"content":"                + \"\\n  |       \" + bodyPart[1]","lastModifiedDate":"2021-10-07"},{"lineNumber":174,"author":{"gitId":"Vincent6896"},"content":"                + \"\\n  |       \" + bodyPart[2]","lastModifiedDate":"2021-10-07"},{"lineNumber":175,"author":{"gitId":"Vincent6896"},"content":"                + \"\\n  |\\n\"","lastModifiedDate":"2021-10-07"},{"lineNumber":176,"author":{"gitId":"Vincent6896"},"content":"                + \"\\n  |\\n\"","lastModifiedDate":"2021-10-07"},{"lineNumber":177,"author":{"gitId":"Vincent6896"},"content":"                + \"--------------\\n\";","lastModifiedDate":"2021-10-07"},{"lineNumber":178,"author":{"gitId":"Vincent6896"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":179,"author":{"gitId":"Vincent6896"},"content":"        System.out.println(hangMan);","lastModifiedDate":"2021-10-07"},{"lineNumber":180,"author":{"gitId":"Vincent6896"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":181,"author":{"gitId":"Vincent6896"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":182,"author":{"gitId":"Vincent6896"},"content":"    public boolean startNewGame() {","lastModifiedDate":"2021-10-07"},{"lineNumber":183,"author":{"gitId":"Vincent6896"},"content":"        System.out.println(\"\\nWould you like to play again? [y/n]\");","lastModifiedDate":"2021-10-07"},{"lineNumber":184,"author":{"gitId":"Vincent6896"},"content":"        char again \u003d in.next().charAt(0);","lastModifiedDate":"2021-10-07"},{"lineNumber":185,"author":{"gitId":"Vincent6896"},"content":"        return again \u003d\u003d \u0027y\u0027;","lastModifiedDate":"2021-10-07"},{"lineNumber":186,"author":{"gitId":"Vincent6896"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":187,"author":{"gitId":"Vincent6896"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"Yuxinn-J":23,"oneScotch":4,"Mist0919":15,"Vincent6896":135,"LilyDaytoy":10}},{"path":"src/main/java/data/game/QuizGame.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Vincent6896"},"content":"package data.game;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"Vincent6896"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"oneScotch"},"content":"import java.io.Serializable;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"Vincent6896"},"content":"import java.util.Locale;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"Vincent6896"},"content":"import java.util.Random;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"Vincent6896"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"Vincent6896"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"oneScotch"},"content":"public class QuizGame extends Game implements Serializable {","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"oneScotch"},"content":"    private static final long serialVersionUID \u003d -9135686500512288865L;","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"Vincent6896"},"content":"    public static String MCQName \u003d \"multiple-choice question\";","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"Vincent6896"},"content":"    public static String MRQName \u003d \"multiple-response question\";","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"Vincent6896"},"content":"    public static String TFQName \u003d \" true-false question\";","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"Vincent6896"},"content":"    public static String FillInBlankName \u003d \"fill-in-the-blanks question\";","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"Vincent6896"},"content":"    public static final Random RANDOM \u003d new Random();","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"Vincent6896"},"content":"    public static final int NumberOfQuestions \u003d 4;","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"Vincent6896"},"content":"    public static int NumOfCorrect \u003d 0;","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"Vincent6896"},"content":"    public static int NumOfUserAnswer \u003d 0;","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"Vincent6896"},"content":"    public String level;","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"LilyDaytoy"},"content":"    private static int startID \u003d 21;","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"Vincent6896"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"Vincent6896"},"content":"    public QuizGame(String level) {","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"Vincent6896"},"content":"        this.level \u003d level;","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"Vincent6896"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"Vincent6896"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"Vincent6896"},"content":"    @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"LilyDaytoy"},"content":"    public int execute() {","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"LilyDaytoy"},"content":"        boolean isWin \u003d false;   // changed","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"Vincent6896"},"content":"        while (NumOfCorrect \u003c 4) {","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"Vincent6896"},"content":"            System.out.println(NumOfUserAnswer + 1);","lastModifiedDate":"2021-10-14"},{"lineNumber":30,"author":{"gitId":"Vincent6896"},"content":"            switch (NumOfUserAnswer % 4) {","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"Vincent6896"},"content":"            case 0:","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"Vincent6896"},"content":"                getQuestion(MCQ, MCQAnswers);","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"Vincent6896"},"content":"                break;","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"Vincent6896"},"content":"            case 1:","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"Vincent6896"},"content":"                getQuestion(MRQ, MRQAnswers);","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"Vincent6896"},"content":"                break;","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"Vincent6896"},"content":"            case 2:","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"Vincent6896"},"content":"                getQuestion(TFQ, TFQAnswers);","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"Vincent6896"},"content":"                break;","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"Vincent6896"},"content":"            case 3:","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"Vincent6896"},"content":"                getQuestion(FIB, FIBAnswers);","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"Vincent6896"},"content":"                break;","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"Vincent6896"},"content":"            default:","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"Vincent6896"},"content":"                System.out.println(\"Error\");","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"Vincent6896"},"content":"            }","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"Vincent6896"},"content":"            if (NumOfUserAnswer \u003d\u003d 4 \u0026\u0026 NumOfCorrect \u003d\u003d 4) {","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"LilyDaytoy"},"content":"                isWin \u003d true;   //added","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"Vincent6896"},"content":"                System.out.println(\"Good! You achieve full mark.\\n\");","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"Vincent6896"},"content":"                break;","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"Vincent6896"},"content":"            } else if (NumOfUserAnswer \u003d\u003d 4 \u0026\u0026 NumOfCorrect \u003c 4) {","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"Yuxinn-J"},"content":"                System.out.println(\"Sorry! You did not pass this challenge. Please try again.\\n\");","lastModifiedDate":"2021-10-14"},{"lineNumber":52,"author":{"gitId":"Vincent6896"},"content":"                NumOfCorrect \u003d 0;","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"Vincent6896"},"content":"                NumOfUserAnswer \u003d 0;","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"Vincent6896"},"content":"            }","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"Vincent6896"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"Vincent6896"},"content":"        System.out.println(\"end\");","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"LilyDaytoy"},"content":"        return isWin ? startID : 0;   // added","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"Vincent6896"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"Vincent6896"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"Vincent6896"},"content":"    public void getQuestion(String[] questions, String[] answers) {","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"Vincent6896"},"content":"        int index \u003d chooseQuestion(questions);","lastModifiedDate":"2021-10-12"},{"lineNumber":62,"author":{"gitId":"Vincent6896"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2021-10-12"},{"lineNumber":63,"author":{"gitId":"Vincent6896"},"content":"        String answer \u003d in.nextLine();","lastModifiedDate":"2021-10-12"},{"lineNumber":64,"author":{"gitId":"Vincent6896"},"content":"        if (answer.equals(answers[index])) {","lastModifiedDate":"2021-10-12"},{"lineNumber":65,"author":{"gitId":"Vincent6896"},"content":"            System.out.println(\"Congratulations! The answer is correct!\\n\");","lastModifiedDate":"2021-10-12"},{"lineNumber":66,"author":{"gitId":"Vincent6896"},"content":"            NumOfCorrect++;","lastModifiedDate":"2021-10-12"},{"lineNumber":67,"author":{"gitId":"Vincent6896"},"content":"        } else {","lastModifiedDate":"2021-10-12"},{"lineNumber":68,"author":{"gitId":"Vincent6896"},"content":"            System.out.println(\"Oops! The answer is not correct.\\n\");","lastModifiedDate":"2021-10-12"},{"lineNumber":69,"author":{"gitId":"Vincent6896"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":70,"author":{"gitId":"Vincent6896"},"content":"        NumOfUserAnswer++;","lastModifiedDate":"2021-10-12"},{"lineNumber":71,"author":{"gitId":"Vincent6896"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":72,"author":{"gitId":"Vincent6896"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":73,"author":{"gitId":"Vincent6896"},"content":"    public int chooseQuestion(String[] questions) {","lastModifiedDate":"2021-10-12"},{"lineNumber":74,"author":{"gitId":"Vincent6896"},"content":"        int index \u003d RANDOM.nextInt(questions.length);","lastModifiedDate":"2021-10-12"},{"lineNumber":75,"author":{"gitId":"Vincent6896"},"content":"        System.out.println(questions[index]);","lastModifiedDate":"2021-10-12"},{"lineNumber":76,"author":{"gitId":"Vincent6896"},"content":"        return index;","lastModifiedDate":"2021-10-12"},{"lineNumber":77,"author":{"gitId":"Vincent6896"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":78,"author":{"gitId":"Vincent6896"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":79,"author":{"gitId":"Vincent6896"},"content":"    @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":80,"author":{"gitId":"Vincent6896"},"content":"    public String getName() {","lastModifiedDate":"2021-10-12"},{"lineNumber":81,"author":{"gitId":"Vincent6896"},"content":"        return \"QuizGame\";","lastModifiedDate":"2021-10-12"},{"lineNumber":82,"author":{"gitId":"Vincent6896"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":83,"author":{"gitId":"Vincent6896"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":84,"author":{"gitId":"Vincent6896"},"content":"    public static String[] MCQ \u003d {\"Who is the person that writes code and communicates instructions to a computer? \"","lastModifiedDate":"2021-10-12"},{"lineNumber":85,"author":{"gitId":"Vincent6896"},"content":"            + \"\\n[A: Code][B: Programmer][C: Command][D: Algorithm]\",","lastModifiedDate":"2021-10-12"},{"lineNumber":86,"author":{"gitId":"Vincent6896"},"content":"        \"What is the action of finding and fixing errors or mistakes in programs? \"","lastModifiedDate":"2021-10-12"},{"lineNumber":87,"author":{"gitId":"Vincent6896"},"content":"            + \"\\n[A: Looping][B: Sequencing][C: Debugging][D: Decomposing]\",","lastModifiedDate":"2021-10-12"},{"lineNumber":88,"author":{"gitId":"Vincent6896"},"content":"        \"What is an error or mistake called in a program? \"","lastModifiedDate":"2021-10-12"},{"lineNumber":89,"author":{"gitId":"Vincent6896"},"content":"            + \"\\n[A: Bug][B: Program][C: Code][D: Loop]\",","lastModifiedDate":"2021-10-12"},{"lineNumber":90,"author":{"gitId":"Vincent6896"},"content":"        \"Who invented Java language? \\n[A: Jackie Chan][B: Linus Torvalds][C: Fabrice Bellard][D: James Gosling]\",","lastModifiedDate":"2021-10-12"},{"lineNumber":91,"author":{"gitId":"Vincent6896"},"content":"        \"Of the following, if statements, which one returns true?\"","lastModifiedDate":"2021-10-12"},{"lineNumber":92,"author":{"gitId":"Vincent6896"},"content":"            + \"\\n[A: X \u003d 1; X \u003e 0;][B: X \u003d \\\"hi\\\"; X \u003d\u003d \\\"hello\\\";][C: X \u003d 0; X \u003d\u003d 1;][D: X \u003d \\\"k\\\"; X \u003d\u003d 1]\"};","lastModifiedDate":"2021-10-12"},{"lineNumber":93,"author":{"gitId":"Vincent6896"},"content":"    public static String[] MRQ \u003d {\"Which will the following statement return true?\"","lastModifiedDate":"2021-10-12"},{"lineNumber":94,"author":{"gitId":"Yuxinn-J"},"content":"            + \"\\n[A: 1 \u003d\u003d 1][B: \\\"abc\\\" \u003d\u003d \\\"bcd\\\"][C: \\\"Hello\\\" \u003d\u003d \\\"hello\\\"][D: \\\"Hello\\\" \u003d\u003d \\\"Hello\\\"]\",","lastModifiedDate":"2021-10-14"},{"lineNumber":95,"author":{"gitId":"Vincent6896"},"content":"        \"Choose are programming languages.\\n[A: Python][B: Chinese][C: Java][D: C-+]\",","lastModifiedDate":"2021-10-12"},{"lineNumber":96,"author":{"gitId":"Vincent6896"},"content":"        \"Choose all the correct codes. \\n[A: 1 \u003d x;[B: x++;][C: return x;][D: return y]\",","lastModifiedDate":"2021-10-12"},{"lineNumber":97,"author":{"gitId":"Vincent6896"},"content":"        \"Choose correct statements which satisfy Java coding style.\"","lastModifiedDate":"2021-10-12"},{"lineNumber":98,"author":{"gitId":"Vincent6896"},"content":"            + \"\\n[A: x\u003d1][B: int a[] \u003d new int[20];][C: int[] a \u003d new int[20];][D: x \u003d 2]\",","lastModifiedDate":"2021-10-12"},{"lineNumber":99,"author":{"gitId":"Vincent6896"},"content":"        \"Choose all Java Language Keywords. \\n[A: continue][B: final][C: hello][D: private]\"};","lastModifiedDate":"2021-10-12"},{"lineNumber":100,"author":{"gitId":"Vincent6896"},"content":"    public static String[] TFQ \u003d {\"Is \\\"R\\\" a programming language? \\n[True][False]\",","lastModifiedDate":"2021-10-12"},{"lineNumber":101,"author":{"gitId":"Vincent6896"},"content":"        \"Can \\\"for\\\" and \\\"while\\\" both be used to form a loop? \\n[True][False]\",","lastModifiedDate":"2021-10-12"},{"lineNumber":102,"author":{"gitId":"Vincent6896"},"content":"        \"\\\"do while\\\" may not necessarily be executed. \\n[True][False]\",","lastModifiedDate":"2021-10-12"},{"lineNumber":103,"author":{"gitId":"Vincent6896"},"content":"        \"\\\"hello\\\" is a Java Language Keywords. \\n[True][False]\"};","lastModifiedDate":"2021-10-12"},{"lineNumber":104,"author":{"gitId":"Vincent6896"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":105,"author":{"gitId":"Vincent6896"},"content":"    public static String[] FIB \u003d {\"What is loop that can loop endlessly?\",","lastModifiedDate":"2021-10-12"},{"lineNumber":106,"author":{"gitId":"Vincent6896"},"content":"        \"Which integer number represents false in Java?\",","lastModifiedDate":"2021-10-12"},{"lineNumber":107,"author":{"gitId":"Vincent6896"},"content":"        \"______ is the process of finding errors and fixing them within a program.\",","lastModifiedDate":"2021-10-12"},{"lineNumber":108,"author":{"gitId":"Vincent6896"},"content":"        \"______ defines the common variables and methods of a set of objects.\",","lastModifiedDate":"2021-10-12"},{"lineNumber":109,"author":{"gitId":"Vincent6896"},"content":"        \"If A\u003d10, then after B\u003d++A, the value of B is _______.\"};","lastModifiedDate":"2021-10-12"},{"lineNumber":110,"author":{"gitId":"Vincent6896"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":111,"author":{"gitId":"Vincent6896"},"content":"    public static String[] MCQAnswers \u003d {\"B\", \"C\", \"A\", \"D\", \"A\"};","lastModifiedDate":"2021-10-12"},{"lineNumber":112,"author":{"gitId":"Vincent6896"},"content":"    public static String[] MRQAnswers \u003d {\"AD\", \"AC\", \"BC\", \"CD\", \"ABD\"};","lastModifiedDate":"2021-10-12"},{"lineNumber":113,"author":{"gitId":"Vincent6896"},"content":"    public static String[] TFQAnswers \u003d {\"True\", \"True\", \"False\", \"False\"};","lastModifiedDate":"2021-10-12"},{"lineNumber":114,"author":{"gitId":"Vincent6896"},"content":"    public static String[] FIBAnswers \u003d {\"infinite loop\", \"0\", \"debugging\", \"class\", \"11\"};","lastModifiedDate":"2021-10-12"},{"lineNumber":115,"author":{"gitId":"Vincent6896"},"content":"}","lastModifiedDate":"2021-10-12"},{"lineNumber":116,"author":{"gitId":"Vincent6896"},"content":"","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"Yuxinn-J":2,"oneScotch":3,"Vincent6896":106,"LilyDaytoy":5}},{"path":"src/main/java/data/game/TreasureHuntGame.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Mist0919"},"content":"package data.game;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"oneScotch"},"content":"import java.io.Serializable;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"Mist0919"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"oneScotch"},"content":"public class TreasureHuntGame extends Game implements Serializable {","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"oneScotch"},"content":"    private static final long serialVersionUID \u003d -9135686500512288865L;","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"Mist0919"},"content":"    public static final String name \u003d \"Treasure Hunt\";","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"Mist0919"},"content":"    public static final String GAME_RULES \u003d \"The purpose of the game is to control the treasure hunter\u0027s\"","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"Mist0919"},"content":"            + \" to get the treasure. The position of the treasure is marked as \u0027*\u0027 on the map, \"","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"Mist0919"},"content":"            + \"you need to choose a proper sequence of movement to reach that position.\";","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"Mist0919"},"content":"    private static int[][] map;","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"LilyDaytoy"},"content":"    private static int startID \u003d 1;   // the start ID","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"Mist0919"},"content":"    public TreasureHuntGame() {","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"Mist0919"},"content":"        this.map \u003d new TreasureHuntMap().getMap();","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"Mist0919"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"LilyDaytoy"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"LilyDaytoy"},"content":"     * execute the game and return cardID collected.","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"LilyDaytoy"},"content":"     * @return cardID of the card to collect in the Player class; return 0 if lose","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"LilyDaytoy"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"Mist0919"},"content":"    @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"LilyDaytoy"},"content":"    public int execute() {","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"Mist0919"},"content":"        displayGameDetails();","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"Mist0919"},"content":"        displayMovements();","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"Mist0919"},"content":"        displayMapDetails();","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"Mist0919"},"content":"        displayMap();","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"Mist0919"},"content":"        TreasureHuntGame g \u003d new TreasureHuntGame();","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"LilyDaytoy"},"content":"        boolean isWin \u003d g.play();    //changed","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"LilyDaytoy"},"content":"        return isWin ? startID : 0;    // return startID if win return 0 indicates lose","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"Mist0919"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"Mist0919"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"Mist0919"},"content":"     * gets the name of this game.","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"Mist0919"},"content":"     * @return string the name of the game","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"Mist0919"},"content":"     *","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"Mist0919"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"Mist0919"},"content":"    @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"Mist0919"},"content":"    public String getName() {","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"Mist0919"},"content":"        return this.name;","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"Mist0919"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"Mist0919"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":45,"author":{"gitId":"Mist0919"},"content":"     * executes the main part of game which the user can play with.","lastModifiedDate":"2021-10-21"},{"lineNumber":46,"author":{"gitId":"Mist0919"},"content":"     * @return boolean whether the user has won this game","lastModifiedDate":"2021-10-21"},{"lineNumber":47,"author":{"gitId":"Mist0919"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":48,"author":{"gitId":"LilyDaytoy"},"content":"    public boolean play() {","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"LilyDaytoy"},"content":"        boolean isWin \u003d false; // todo: add limited attempts to lose the game","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"Mist0919"},"content":"        int x \u003d 1;","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"Mist0919"},"content":"        int y \u003d 1;","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"Mist0919"},"content":"        boolean find \u003d false;","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"Mist0919"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"Mist0919"},"content":"        while (!find) {","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"Mist0919"},"content":"            String input \u003d in.nextLine();","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"Mist0919"},"content":"            if (!isValidCommand(input)) {","lastModifiedDate":"2021-10-21"},{"lineNumber":57,"author":{"gitId":"Mist0919"},"content":"                continue;","lastModifiedDate":"2021-10-21"},{"lineNumber":58,"author":{"gitId":"Mist0919"},"content":"            }","lastModifiedDate":"2021-10-21"},{"lineNumber":59,"author":{"gitId":"Mist0919"},"content":"            for (int i \u003d 0; i \u003c input.length(); i++) {","lastModifiedDate":"2021-10-21"},{"lineNumber":60,"author":{"gitId":"Mist0919"},"content":"                if (input.charAt(i) \u003d\u003d \u00271\u0027) {","lastModifiedDate":"2021-10-21"},{"lineNumber":61,"author":{"gitId":"Mist0919"},"content":"                    x \u003d x + 1;","lastModifiedDate":"2021-10-12"},{"lineNumber":62,"author":{"gitId":"Mist0919"},"content":"                } else if (input.charAt(i) \u003d\u003d \u00272\u0027) {","lastModifiedDate":"2021-10-21"},{"lineNumber":63,"author":{"gitId":"Mist0919"},"content":"                    x \u003d x - 1;","lastModifiedDate":"2021-10-12"},{"lineNumber":64,"author":{"gitId":"Mist0919"},"content":"                } else if (input.charAt(i) \u003d\u003d \u00273\u0027) {","lastModifiedDate":"2021-10-21"},{"lineNumber":65,"author":{"gitId":"Mist0919"},"content":"                    y \u003d y - 1;","lastModifiedDate":"2021-10-12"},{"lineNumber":66,"author":{"gitId":"Mist0919"},"content":"                } else if (input.charAt(i) \u003d\u003d \u00274\u0027) {","lastModifiedDate":"2021-10-21"},{"lineNumber":67,"author":{"gitId":"Mist0919"},"content":"                    y \u003d y + 1;","lastModifiedDate":"2021-10-12"},{"lineNumber":68,"author":{"gitId":"Mist0919"},"content":"                }","lastModifiedDate":"2021-10-12"},{"lineNumber":69,"author":{"gitId":"Mist0919"},"content":"                if (canMove(x, y)) {","lastModifiedDate":"2021-10-12"},{"lineNumber":70,"author":{"gitId":"Mist0919"},"content":"                    if (found(x, y)) {","lastModifiedDate":"2021-10-12"},{"lineNumber":71,"author":{"gitId":"Mist0919"},"content":"                        find \u003d true;","lastModifiedDate":"2021-10-12"},{"lineNumber":72,"author":{"gitId":"Mist0919"},"content":"                        break;","lastModifiedDate":"2021-10-12"},{"lineNumber":73,"author":{"gitId":"Mist0919"},"content":"                    }","lastModifiedDate":"2021-10-12"},{"lineNumber":74,"author":{"gitId":"Mist0919"},"content":"                    move(x, y);","lastModifiedDate":"2021-10-12"},{"lineNumber":75,"author":{"gitId":"Mist0919"},"content":"                } else {","lastModifiedDate":"2021-10-12"},{"lineNumber":76,"author":{"gitId":"Mist0919"},"content":"                    printCannotMoveMessage();","lastModifiedDate":"2021-10-12"},{"lineNumber":77,"author":{"gitId":"Mist0919"},"content":"                    displayMap();","lastModifiedDate":"2021-10-21"},{"lineNumber":78,"author":{"gitId":"Mist0919"},"content":"                    resetMap();","lastModifiedDate":"2021-10-21"},{"lineNumber":79,"author":{"gitId":"Mist0919"},"content":"                    x \u003d 1;","lastModifiedDate":"2021-10-12"},{"lineNumber":80,"author":{"gitId":"Mist0919"},"content":"                    y \u003d 1;","lastModifiedDate":"2021-10-12"},{"lineNumber":81,"author":{"gitId":"Mist0919"},"content":"                    break;","lastModifiedDate":"2021-10-12"},{"lineNumber":82,"author":{"gitId":"Mist0919"},"content":"                }","lastModifiedDate":"2021-10-12"},{"lineNumber":83,"author":{"gitId":"Mist0919"},"content":"            }","lastModifiedDate":"2021-10-12"},{"lineNumber":84,"author":{"gitId":"Mist0919"},"content":"            displayMap();","lastModifiedDate":"2021-10-12"},{"lineNumber":85,"author":{"gitId":"Mist0919"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":86,"author":{"gitId":"LilyDaytoy"},"content":"        // win","lastModifiedDate":"2021-10-12"},{"lineNumber":87,"author":{"gitId":"Mist0919"},"content":"        printSuccessfulMessage();","lastModifiedDate":"2021-10-12"},{"lineNumber":88,"author":{"gitId":"LilyDaytoy"},"content":"        isWin \u003d true;","lastModifiedDate":"2021-10-12"},{"lineNumber":89,"author":{"gitId":"LilyDaytoy"},"content":"        return isWin;","lastModifiedDate":"2021-10-12"},{"lineNumber":90,"author":{"gitId":"Mist0919"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":91,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":92,"author":{"gitId":"Mist0919"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":93,"author":{"gitId":"Mist0919"},"content":"     * checks whether the input command is valid.","lastModifiedDate":"2021-10-21"},{"lineNumber":94,"author":{"gitId":"Mist0919"},"content":"     * @return boolean whether the input command is valid","lastModifiedDate":"2021-10-21"},{"lineNumber":95,"author":{"gitId":"Mist0919"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":96,"author":{"gitId":"Mist0919"},"content":"    public boolean isValidCommand(String input) {","lastModifiedDate":"2021-10-21"},{"lineNumber":97,"author":{"gitId":"Mist0919"},"content":"        for (int i \u003d 0;i \u003c input.length(); i++) {","lastModifiedDate":"2021-10-21"},{"lineNumber":98,"author":{"gitId":"Mist0919"},"content":"            if (input.charAt(i) \u003c 49 || input.charAt(i) \u003e 52) {","lastModifiedDate":"2021-10-21"},{"lineNumber":99,"author":{"gitId":"Mist0919"},"content":"                return false;","lastModifiedDate":"2021-10-21"},{"lineNumber":100,"author":{"gitId":"Mist0919"},"content":"            }","lastModifiedDate":"2021-10-21"},{"lineNumber":101,"author":{"gitId":"Mist0919"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":102,"author":{"gitId":"Mist0919"},"content":"        return true;","lastModifiedDate":"2021-10-21"},{"lineNumber":103,"author":{"gitId":"Mist0919"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":104,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":105,"author":{"gitId":"Mist0919"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":106,"author":{"gitId":"Mist0919"},"content":"     * parses the command entered by the user.","lastModifiedDate":"2021-10-21"},{"lineNumber":107,"author":{"gitId":"Mist0919"},"content":"     * @return int array of the encoded command sequence","lastModifiedDate":"2021-10-21"},{"lineNumber":108,"author":{"gitId":"Mist0919"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":109,"author":{"gitId":"Mist0919"},"content":"    public int[] parseCommand(String input) {","lastModifiedDate":"2021-10-12"},{"lineNumber":110,"author":{"gitId":"Mist0919"},"content":"        String commandString \u003d input.replace(\" \", \"\");","lastModifiedDate":"2021-10-12"},{"lineNumber":111,"author":{"gitId":"Mist0919"},"content":"        int[] commandArray \u003d new int[commandString.length()];","lastModifiedDate":"2021-10-12"},{"lineNumber":112,"author":{"gitId":"Mist0919"},"content":"        for (int index \u003d 0; index \u003c commandString.length(); index++) {","lastModifiedDate":"2021-10-12"},{"lineNumber":113,"author":{"gitId":"Mist0919"},"content":"            if (commandString.charAt(index) \u003d\u003d \u00271\u0027) {","lastModifiedDate":"2021-10-12"},{"lineNumber":114,"author":{"gitId":"Mist0919"},"content":"                commandArray[index] \u003d 1;","lastModifiedDate":"2021-10-12"},{"lineNumber":115,"author":{"gitId":"Mist0919"},"content":"            } else if (commandString.charAt(index) \u003d\u003d \u00272\u0027) {","lastModifiedDate":"2021-10-12"},{"lineNumber":116,"author":{"gitId":"Mist0919"},"content":"                commandArray[index] \u003d 2;","lastModifiedDate":"2021-10-12"},{"lineNumber":117,"author":{"gitId":"Mist0919"},"content":"            } else if (commandString.charAt(index) \u003d\u003d \u00273\u0027) {","lastModifiedDate":"2021-10-12"},{"lineNumber":118,"author":{"gitId":"Mist0919"},"content":"                commandArray[index] \u003d 3;","lastModifiedDate":"2021-10-12"},{"lineNumber":119,"author":{"gitId":"Mist0919"},"content":"            } else if (commandString.charAt(index) \u003d\u003d \u00274\u0027) {","lastModifiedDate":"2021-10-12"},{"lineNumber":120,"author":{"gitId":"Mist0919"},"content":"                commandArray[index] \u003d 4;","lastModifiedDate":"2021-10-12"},{"lineNumber":121,"author":{"gitId":"Mist0919"},"content":"            } else {","lastModifiedDate":"2021-10-12"},{"lineNumber":122,"author":{"gitId":"Mist0919"},"content":"                return commandArray;","lastModifiedDate":"2021-10-12"},{"lineNumber":123,"author":{"gitId":"Mist0919"},"content":"            }","lastModifiedDate":"2021-10-12"},{"lineNumber":124,"author":{"gitId":"Mist0919"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":125,"author":{"gitId":"Mist0919"},"content":"        return commandArray;","lastModifiedDate":"2021-10-12"},{"lineNumber":126,"author":{"gitId":"Mist0919"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":127,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":128,"author":{"gitId":"Mist0919"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":129,"author":{"gitId":"Mist0919"},"content":"     * determines whether the move is available.","lastModifiedDate":"2021-10-21"},{"lineNumber":130,"author":{"gitId":"Mist0919"},"content":"     * @return boolean whether the move is available","lastModifiedDate":"2021-10-21"},{"lineNumber":131,"author":{"gitId":"Mist0919"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":132,"author":{"gitId":"Mist0919"},"content":"    public boolean canMove(int x, int y) {","lastModifiedDate":"2021-10-12"},{"lineNumber":133,"author":{"gitId":"Mist0919"},"content":"        if (this.map[y][x] !\u003d 1) {","lastModifiedDate":"2021-10-12"},{"lineNumber":134,"author":{"gitId":"Mist0919"},"content":"            return true;","lastModifiedDate":"2021-10-12"},{"lineNumber":135,"author":{"gitId":"Mist0919"},"content":"        } else {","lastModifiedDate":"2021-10-12"},{"lineNumber":136,"author":{"gitId":"Mist0919"},"content":"            return false;","lastModifiedDate":"2021-10-12"},{"lineNumber":137,"author":{"gitId":"Mist0919"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":138,"author":{"gitId":"Mist0919"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":139,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":140,"author":{"gitId":"Mist0919"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":141,"author":{"gitId":"Mist0919"},"content":"     * moves the treasure hunter in the map.","lastModifiedDate":"2021-10-21"},{"lineNumber":142,"author":{"gitId":"Mist0919"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":143,"author":{"gitId":"Mist0919"},"content":"    public void move(int x, int y) {","lastModifiedDate":"2021-10-12"},{"lineNumber":144,"author":{"gitId":"Mist0919"},"content":"        this.map[y][x] \u003d 3;","lastModifiedDate":"2021-10-12"},{"lineNumber":145,"author":{"gitId":"Mist0919"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":146,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":147,"author":{"gitId":"Mist0919"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":148,"author":{"gitId":"Mist0919"},"content":"     * determines whether the treature hunter have found the treasure.","lastModifiedDate":"2021-10-21"},{"lineNumber":149,"author":{"gitId":"Mist0919"},"content":"     * @return boolean whether the treasure is found","lastModifiedDate":"2021-10-21"},{"lineNumber":150,"author":{"gitId":"Mist0919"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":151,"author":{"gitId":"Mist0919"},"content":"    public boolean found(int x, int y) {","lastModifiedDate":"2021-10-12"},{"lineNumber":152,"author":{"gitId":"Mist0919"},"content":"        if (this.map[x][y] \u003d\u003d -1) {","lastModifiedDate":"2021-10-12"},{"lineNumber":153,"author":{"gitId":"Mist0919"},"content":"            return true;","lastModifiedDate":"2021-10-12"},{"lineNumber":154,"author":{"gitId":"Mist0919"},"content":"        } else {","lastModifiedDate":"2021-10-12"},{"lineNumber":155,"author":{"gitId":"Mist0919"},"content":"            return false;","lastModifiedDate":"2021-10-12"},{"lineNumber":156,"author":{"gitId":"Mist0919"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":157,"author":{"gitId":"Mist0919"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":158,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":159,"author":{"gitId":"Mist0919"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":160,"author":{"gitId":"Mist0919"},"content":"     * resets the map.","lastModifiedDate":"2021-10-21"},{"lineNumber":161,"author":{"gitId":"Mist0919"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":162,"author":{"gitId":"Mist0919"},"content":"    public void resetMap() {","lastModifiedDate":"2021-10-21"},{"lineNumber":163,"author":{"gitId":"Mist0919"},"content":"        for (int i \u003d 0; i \u003c this.map.length; i++) {","lastModifiedDate":"2021-10-21"},{"lineNumber":164,"author":{"gitId":"Mist0919"},"content":"            for (int j \u003d 0; j \u003c this.map[0].length; j++) {","lastModifiedDate":"2021-10-21"},{"lineNumber":165,"author":{"gitId":"Mist0919"},"content":"                if (this.map[i][j] \u003d\u003d 3) {","lastModifiedDate":"2021-10-21"},{"lineNumber":166,"author":{"gitId":"Mist0919"},"content":"                    this.map[i][j] \u003d 0;","lastModifiedDate":"2021-10-21"},{"lineNumber":167,"author":{"gitId":"Mist0919"},"content":"                }","lastModifiedDate":"2021-10-21"},{"lineNumber":168,"author":{"gitId":"Mist0919"},"content":"            }","lastModifiedDate":"2021-10-21"},{"lineNumber":169,"author":{"gitId":"Mist0919"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":170,"author":{"gitId":"Mist0919"},"content":"        System.out.println(\"Restarted.\\n\");","lastModifiedDate":"2021-10-21"},{"lineNumber":171,"author":{"gitId":"Mist0919"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":172,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":173,"author":{"gitId":"Mist0919"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":174,"author":{"gitId":"Mist0919"},"content":"     * prints the message that the input move is not available.","lastModifiedDate":"2021-10-21"},{"lineNumber":175,"author":{"gitId":"Mist0919"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":176,"author":{"gitId":"Mist0919"},"content":"    public void printCannotMoveMessage() {","lastModifiedDate":"2021-10-12"},{"lineNumber":177,"author":{"gitId":"Mist0919"},"content":"        System.out.println(\"Sorry, you cannot move like that :(\");","lastModifiedDate":"2021-10-12"},{"lineNumber":178,"author":{"gitId":"Mist0919"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":179,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":180,"author":{"gitId":"Mist0919"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":181,"author":{"gitId":"Mist0919"},"content":"     * prints the messege that the treasure hunter have found the treasure.","lastModifiedDate":"2021-10-21"},{"lineNumber":182,"author":{"gitId":"Mist0919"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":183,"author":{"gitId":"Mist0919"},"content":"    public void printSuccessfulMessage() {","lastModifiedDate":"2021-10-12"},{"lineNumber":184,"author":{"gitId":"Mist0919"},"content":"        System.out.println(\"Congratulaitons! You have found the treasure!\");","lastModifiedDate":"2021-10-12"},{"lineNumber":185,"author":{"gitId":"Mist0919"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":186,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":187,"author":{"gitId":"Mist0919"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":188,"author":{"gitId":"Mist0919"},"content":"     * prints the rule of the treasure hunt game.","lastModifiedDate":"2021-10-21"},{"lineNumber":189,"author":{"gitId":"Mist0919"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":190,"author":{"gitId":"Mist0919"},"content":"    public void displayGameDetails() {","lastModifiedDate":"2021-10-12"},{"lineNumber":191,"author":{"gitId":"Mist0919"},"content":"        System.out.println(GAME_RULES);","lastModifiedDate":"2021-10-12"},{"lineNumber":192,"author":{"gitId":"Mist0919"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":193,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":194,"author":{"gitId":"Mist0919"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":195,"author":{"gitId":"Mist0919"},"content":"     * prints the choices of movement and corresponding instruction numbers.","lastModifiedDate":"2021-10-21"},{"lineNumber":196,"author":{"gitId":"Mist0919"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":197,"author":{"gitId":"Mist0919"},"content":"    public void displayMovements() {","lastModifiedDate":"2021-10-12"},{"lineNumber":198,"author":{"gitId":"Mist0919"},"content":"        System.out.println(\"Enter a sequence of movement(enter the index e.g. 12321):\\n\"","lastModifiedDate":"2021-10-12"},{"lineNumber":199,"author":{"gitId":"Mist0919"},"content":"                + \"1. moveRight()\\n\"","lastModifiedDate":"2021-10-12"},{"lineNumber":200,"author":{"gitId":"Mist0919"},"content":"                + \"2. moveLeft()\\n\"","lastModifiedDate":"2021-10-12"},{"lineNumber":201,"author":{"gitId":"Mist0919"},"content":"                + \"3. moveUp()\\n\"","lastModifiedDate":"2021-10-12"},{"lineNumber":202,"author":{"gitId":"Mist0919"},"content":"                + \"4. moveDown()\\n\");","lastModifiedDate":"2021-10-12"},{"lineNumber":203,"author":{"gitId":"Mist0919"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":204,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":205,"author":{"gitId":"Mist0919"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":206,"author":{"gitId":"Mist0919"},"content":"     * prints the explanation of the map.","lastModifiedDate":"2021-10-21"},{"lineNumber":207,"author":{"gitId":"Mist0919"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":208,"author":{"gitId":"Mist0919"},"content":"    public void displayMapDetails() {","lastModifiedDate":"2021-10-21"},{"lineNumber":209,"author":{"gitId":"Mist0919"},"content":"        System.out.println(\"Introduction of the map:\\n\"","lastModifiedDate":"2021-10-21"},{"lineNumber":210,"author":{"gitId":"Mist0919"},"content":"                + \"x: walls. You cannot go across it.\\n\"","lastModifiedDate":"2021-10-21"},{"lineNumber":211,"author":{"gitId":"Mist0919"},"content":"                + \"O: start position of the treasure hunter.\\n\"","lastModifiedDate":"2021-10-21"},{"lineNumber":212,"author":{"gitId":"Mist0919"},"content":"                + \"*: treasure position. You need get to there!\\n\"","lastModifiedDate":"2021-10-21"},{"lineNumber":213,"author":{"gitId":"Mist0919"},"content":"                + \"·: noting the path you have covered.\\n\");","lastModifiedDate":"2021-10-21"},{"lineNumber":214,"author":{"gitId":"Mist0919"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":215,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":216,"author":{"gitId":"Mist0919"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":217,"author":{"gitId":"Mist0919"},"content":"     * prints the map for the user.","lastModifiedDate":"2021-10-21"},{"lineNumber":218,"author":{"gitId":"Mist0919"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":219,"author":{"gitId":"Mist0919"},"content":"    public void displayMap() {","lastModifiedDate":"2021-10-12"},{"lineNumber":220,"author":{"gitId":"Mist0919"},"content":"        for (int i \u003d 0; i \u003c this.map.length; i++) {","lastModifiedDate":"2021-10-12"},{"lineNumber":221,"author":{"gitId":"Mist0919"},"content":"            for (int j \u003d 0; j \u003c this.map[0].length; j++) {","lastModifiedDate":"2021-10-12"},{"lineNumber":222,"author":{"gitId":"Mist0919"},"content":"                if (this.map[i][j] \u003d\u003d 1) {","lastModifiedDate":"2021-10-12"},{"lineNumber":223,"author":{"gitId":"Mist0919"},"content":"                    System.out.print(\"x\");","lastModifiedDate":"2021-10-12"},{"lineNumber":224,"author":{"gitId":"Mist0919"},"content":"                } else if (this.map[i][j] \u003d\u003d 0) {","lastModifiedDate":"2021-10-12"},{"lineNumber":225,"author":{"gitId":"Mist0919"},"content":"                    System.out.print(\" \");","lastModifiedDate":"2021-10-12"},{"lineNumber":226,"author":{"gitId":"Mist0919"},"content":"                } else if (this.map[i][j] \u003d\u003d 2) {","lastModifiedDate":"2021-10-12"},{"lineNumber":227,"author":{"gitId":"Mist0919"},"content":"                    System.out.print(\"O\");","lastModifiedDate":"2021-10-12"},{"lineNumber":228,"author":{"gitId":"Mist0919"},"content":"                } else if (this.map[i][j] \u003d\u003d -1) {","lastModifiedDate":"2021-10-12"},{"lineNumber":229,"author":{"gitId":"Mist0919"},"content":"                    System.out.print(\"*\");","lastModifiedDate":"2021-10-12"},{"lineNumber":230,"author":{"gitId":"Mist0919"},"content":"                } else {","lastModifiedDate":"2021-10-12"},{"lineNumber":231,"author":{"gitId":"Mist0919"},"content":"                    System.out.print(\"·\");","lastModifiedDate":"2021-10-12"},{"lineNumber":232,"author":{"gitId":"Mist0919"},"content":"                }","lastModifiedDate":"2021-10-12"},{"lineNumber":233,"author":{"gitId":"Mist0919"},"content":"            }","lastModifiedDate":"2021-10-12"},{"lineNumber":234,"author":{"gitId":"Mist0919"},"content":"            System.out.println();","lastModifiedDate":"2021-10-12"},{"lineNumber":235,"author":{"gitId":"Mist0919"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":236,"author":{"gitId":"Mist0919"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":237,"author":{"gitId":"Mist0919"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"oneScotch":3,"Mist0919":221,"LilyDaytoy":13}},{"path":"src/main/java/data/game/TreasureHuntMap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Mist0919"},"content":"package data.game;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"oneScotch"},"content":"import java.io.Serializable;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"oneScotch"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"oneScotch"},"content":"public class TreasureHuntMap implements Serializable {","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"oneScotch"},"content":"    private static final long serialVersionUID \u003d -9135686500512288865L;","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"Mist0919"},"content":"    private final int[][][] mapList \u003d {{{1, 1, 1, 1, 1, 1}, {1, 2, 0, 0, 0, 1},","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"Mist0919"},"content":"            {1, 1, 1, 1, 0, 1}, {1, 0, 0, -1, 0, 1}, {1, 1, 1, 1, 1, 1}},","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"Mist0919"},"content":"        {{1, 1, 1, 1, 1, 1, 1, 1}, {1, 2, 0, 0, 0, 0, 0, 1}, {1, 1, 1, 1, 1, 0, 0, 1},","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"Mist0919"},"content":"            {1, 0, 0, 0, 0, 0, 0, 1}, {1, 1, 1, 0, 1, 1, 1, 1}, {1, -1, 0, 0, 0, 0, 0, 1},","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"Mist0919"},"content":"            {1, 1, 1, 1, 1, 1, 1, 1}}};","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"Mist0919"},"content":"    private final int size \u003d this.mapList.length;","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"Mist0919"},"content":"    public final int[][] getMap() {","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"Mist0919"},"content":"        final double randomNum \u003d Math.random();","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"Mist0919"},"content":"        return this.mapList[(int) (randomNum * 100) % this.mapList.length];","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"Mist0919"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"Mist0919"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"oneScotch":4,"Mist0919":14}},{"path":"src/main/java/game/Game.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"oneScotch"},"content":"package game;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"oneScotch"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"oneScotch"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"oneScotch"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"oneScotch"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"oneScotch"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"oneScotch"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"oneScotch"},"content":"import logger.MyLogger;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"oneScotch"},"content":"import ui.main.GameMainMenu;","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"oneScotch"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"oneScotch"},"content":"/**","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"oneScotch"},"content":" * The main of the programme.","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"oneScotch"},"content":" */","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"oneScotch"},"content":"public class Game {","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"oneScotch"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"oneScotch"},"content":"     * Set the logger.","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"oneScotch"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"oneScotch"},"content":"    private static Logger logger \u003d Logger.getLogger(Logger.GLOBAL_LOGGER_NAME);","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"oneScotch"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"oneScotch"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"oneScotch"},"content":"        try {","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"oneScotch"},"content":"            MyLogger.setup();","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"oneScotch"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"oneScotch"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"oneScotch"},"content":"            throw new RuntimeException(\"Problems with creating the log files\");","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"oneScotch"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"oneScotch"},"content":"        logger.log(Level.INFO, \"going to start processing\");","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"oneScotch"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"oneScotch"},"content":"        GameMainMenu mainMenu \u003d new GameMainMenu(in);","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"oneScotch"},"content":"        mainMenu.enter();","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"oneScotch"},"content":"        logger.log(Level.INFO, \"end of processing\");","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"oneScotch"},"content":"        in.close();","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"oneScotch"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"oneScotch"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"oneScotch":34}},{"path":"src/main/java/logger/MyFormatter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"oneScotch"},"content":"package logger;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"oneScotch"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"oneScotch"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"oneScotch"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"oneScotch"},"content":"import java.util.Date;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"oneScotch"},"content":"import java.util.logging.Formatter;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"oneScotch"},"content":"import java.util.logging.Handler;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"oneScotch"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"oneScotch"},"content":"import java.util.logging.LogRecord;","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"oneScotch"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"oneScotch"},"content":"// this custom formatter formats parts of a log record to a single line","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"oneScotch"},"content":"class MyFormatter extends Formatter {","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"oneScotch"},"content":"    // this method is called for every log records","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"oneScotch"},"content":"    public String format(LogRecord rec) {","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"oneScotch"},"content":"        StringBuffer buf \u003d new StringBuffer(1000);","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"oneScotch"},"content":"        buf.append(\"\u003ctr\u003e\\n\");","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"oneScotch"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"oneScotch"},"content":"        // colorize any levels \u003e\u003d WARNING in red","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"oneScotch"},"content":"        if (rec.getLevel().intValue() \u003e\u003d Level.WARNING.intValue()) {","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"oneScotch"},"content":"            buf.append(\"\\t\u003ctd style\u003d\\\"color:red\\\"\u003e\");","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"oneScotch"},"content":"            buf.append(\"\u003cb\u003e\");","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"oneScotch"},"content":"            buf.append(rec.getLevel());","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"oneScotch"},"content":"            buf.append(\"\u003c/b\u003e\");","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"oneScotch"},"content":"        } else {","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"oneScotch"},"content":"            buf.append(\"\\t\u003ctd\u003e\");","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"oneScotch"},"content":"            buf.append(rec.getLevel());","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"oneScotch"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"oneScotch"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"oneScotch"},"content":"        buf.append(\"\u003c/td\u003e\\n\");","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"oneScotch"},"content":"        buf.append(\"\\t\u003ctd\u003e\");","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"oneScotch"},"content":"        buf.append(calcDate(rec.getMillis()));","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"oneScotch"},"content":"        buf.append(\"\u003c/td\u003e\\n\");","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"oneScotch"},"content":"        buf.append(\"\\t\u003ctd\u003e\");","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"oneScotch"},"content":"        buf.append(formatMessage(rec));","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"oneScotch"},"content":"        buf.append(\"\u003c/td\u003e\\n\");","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"oneScotch"},"content":"        buf.append(\"\u003c/tr\u003e\\n\");","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"oneScotch"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"oneScotch"},"content":"        return buf.toString();","lastModifiedDate":"2021-10-11"},{"lineNumber":39,"author":{"gitId":"oneScotch"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":40,"author":{"gitId":"oneScotch"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"oneScotch"},"content":"    private String calcDate(long millisecs) {","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"oneScotch"},"content":"        SimpleDateFormat dateFormat \u003d new SimpleDateFormat(\"MMM dd,yyyy HH:mm\");","lastModifiedDate":"2021-10-11"},{"lineNumber":43,"author":{"gitId":"Yuxinn-J"},"content":"        Date resultDate \u003d new Date(millisecs);","lastModifiedDate":"2021-10-14"},{"lineNumber":44,"author":{"gitId":"Yuxinn-J"},"content":"        return dateFormat.format(resultDate);","lastModifiedDate":"2021-10-14"},{"lineNumber":45,"author":{"gitId":"oneScotch"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":46,"author":{"gitId":"oneScotch"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":47,"author":{"gitId":"oneScotch"},"content":"    // this method is called just after the handler using this","lastModifiedDate":"2021-10-11"},{"lineNumber":48,"author":{"gitId":"oneScotch"},"content":"    // formatter is created","lastModifiedDate":"2021-10-11"},{"lineNumber":49,"author":{"gitId":"oneScotch"},"content":"    public String getHead(Handler h) {","lastModifiedDate":"2021-10-11"},{"lineNumber":50,"author":{"gitId":"oneScotch"},"content":"        return \"\u003c!DOCTYPE html\u003e\\n\u003chead\u003e\\n\u003cstyle\u003e\\n\"","lastModifiedDate":"2021-10-11"},{"lineNumber":51,"author":{"gitId":"oneScotch"},"content":"                + \"table { width: 100% }\\n\"","lastModifiedDate":"2021-10-11"},{"lineNumber":52,"author":{"gitId":"oneScotch"},"content":"                + \"th { font:bold 10pt Tahoma; }\\n\"","lastModifiedDate":"2021-10-11"},{"lineNumber":53,"author":{"gitId":"oneScotch"},"content":"                + \"td { font:normal 10pt Tahoma; }\\n\"","lastModifiedDate":"2021-10-11"},{"lineNumber":54,"author":{"gitId":"oneScotch"},"content":"                + \"h1 {font:normal 11pt Tahoma;}\\n\"","lastModifiedDate":"2021-10-11"},{"lineNumber":55,"author":{"gitId":"oneScotch"},"content":"                + \"\u003c/style\u003e\\n\"","lastModifiedDate":"2021-10-11"},{"lineNumber":56,"author":{"gitId":"oneScotch"},"content":"                + \"\u003c/head\u003e\\n\"","lastModifiedDate":"2021-10-11"},{"lineNumber":57,"author":{"gitId":"oneScotch"},"content":"                + \"\u003cbody\u003e\\n\"","lastModifiedDate":"2021-10-11"},{"lineNumber":58,"author":{"gitId":"oneScotch"},"content":"                + \"\u003ch1\u003e\" + (new Date()) + \"\u003c/h1\u003e\\n\"","lastModifiedDate":"2021-10-11"},{"lineNumber":59,"author":{"gitId":"oneScotch"},"content":"                + \"\u003ctable border\u003d\\\"0\\\" cellpadding\u003d\\\"5\\\" cellspacing\u003d\\\"3\\\"\u003e\\n\"","lastModifiedDate":"2021-10-11"},{"lineNumber":60,"author":{"gitId":"oneScotch"},"content":"                + \"\u003ctr align\u003d\\\"left\\\"\u003e\\n\"","lastModifiedDate":"2021-10-11"},{"lineNumber":61,"author":{"gitId":"oneScotch"},"content":"                + \"\\t\u003cth style\u003d\\\"width:10%\\\"\u003eLoglevel\u003c/th\u003e\\n\"","lastModifiedDate":"2021-10-11"},{"lineNumber":62,"author":{"gitId":"oneScotch"},"content":"                + \"\\t\u003cth style\u003d\\\"width:15%\\\"\u003eTime\u003c/th\u003e\\n\"","lastModifiedDate":"2021-10-11"},{"lineNumber":63,"author":{"gitId":"oneScotch"},"content":"                + \"\\t\u003cth style\u003d\\\"width:75%\\\"\u003eLog Message\u003c/th\u003e\\n\"","lastModifiedDate":"2021-10-11"},{"lineNumber":64,"author":{"gitId":"oneScotch"},"content":"                + \"\u003c/tr\u003e\\n\";","lastModifiedDate":"2021-10-11"},{"lineNumber":65,"author":{"gitId":"oneScotch"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":66,"author":{"gitId":"oneScotch"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":67,"author":{"gitId":"oneScotch"},"content":"    // this method is called just after the handler using this","lastModifiedDate":"2021-10-11"},{"lineNumber":68,"author":{"gitId":"oneScotch"},"content":"    // formatter is closed","lastModifiedDate":"2021-10-11"},{"lineNumber":69,"author":{"gitId":"oneScotch"},"content":"    public String getTail(Handler h) {","lastModifiedDate":"2021-10-11"},{"lineNumber":70,"author":{"gitId":"oneScotch"},"content":"        return \"\u003c/table\u003e\\n\u003c/body\u003e\\n\u003c/html\u003e\";","lastModifiedDate":"2021-10-11"},{"lineNumber":71,"author":{"gitId":"oneScotch"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":72,"author":{"gitId":"oneScotch"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"Yuxinn-J":2,"oneScotch":70}},{"path":"src/main/java/logger/MyLogger.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"oneScotch"},"content":"package logger;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"oneScotch"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"oneScotch"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"oneScotch"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"oneScotch"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"oneScotch"},"content":"import java.util.logging.Handler;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"oneScotch"},"content":"import java.util.logging.FileHandler;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"oneScotch"},"content":"import java.util.logging.ConsoleHandler;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"oneScotch"},"content":"import java.util.logging.SimpleFormatter;","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"oneScotch"},"content":"import java.util.logging.Formatter;","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"oneScotch"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"oneScotch"},"content":"public class MyLogger {","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"oneScotch"},"content":"    private static FileHandler fileTxt;","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"oneScotch"},"content":"    private static SimpleFormatter formatterTxt;","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"oneScotch"},"content":"    private static FileHandler fileHTML;","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"oneScotch"},"content":"    private static Formatter formatterHTML;","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"oneScotch"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"oneScotch"},"content":"    public static void setup() throws IOException {","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"oneScotch"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"oneScotch"},"content":"        // get the global logger to configure it","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"oneScotch"},"content":"        Logger logger \u003d Logger.getLogger(Logger.GLOBAL_LOGGER_NAME);","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"oneScotch"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"oneScotch"},"content":"        // suppress the logging output to the console","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"oneScotch"},"content":"        Logger rootLogger \u003d Logger.getLogger(\"\");","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"oneScotch"},"content":"        Handler[] handlers \u003d rootLogger.getHandlers();","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"oneScotch"},"content":"        if (handlers[0] instanceof ConsoleHandler) {","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"oneScotch"},"content":"            rootLogger.removeHandler(handlers[0]);","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"oneScotch"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"oneScotch"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"oneScotch"},"content":"        logger.setLevel(Level.INFO);","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"oneScotch"},"content":"        fileTxt \u003d new FileHandler(\"Logging.txt\");","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"oneScotch"},"content":"        fileHTML \u003d new FileHandler(\"Logging.html\");","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"oneScotch"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"oneScotch"},"content":"        // create a TXT formatter","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"oneScotch"},"content":"        formatterTxt \u003d new SimpleFormatter();","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"oneScotch"},"content":"        fileTxt.setFormatter(formatterTxt);","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"oneScotch"},"content":"        logger.addHandler(fileTxt);","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"oneScotch"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":39,"author":{"gitId":"oneScotch"},"content":"        // create an HTML formatter","lastModifiedDate":"2021-10-11"},{"lineNumber":40,"author":{"gitId":"oneScotch"},"content":"        formatterHTML \u003d new MyFormatter();","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"oneScotch"},"content":"        fileHTML.setFormatter(formatterHTML);","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"oneScotch"},"content":"        logger.addHandler(fileHTML);","lastModifiedDate":"2021-10-11"},{"lineNumber":43,"author":{"gitId":"oneScotch"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":44,"author":{"gitId":"oneScotch"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"oneScotch":44}},{"path":"src/main/java/seedu/duke/Duke.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.duke;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"     * Main entry-point for the java.duke.Duke application.","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"Vincent6896"},"content":"            + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"Vincent6896"},"content":"            + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"Vincent6896"},"content":"            + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"Vincent6896"},"content":"            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"Vincent6896"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        System.out.println(\"What is your name?\");","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"Vincent6896"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        System.out.println(\"Hello \" + in.nextLine());","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"Vincent6896"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"Vincent6896"},"content":"    public static String echoMessage(String message) {","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"Vincent6896"},"content":"        return message;","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"Vincent6896"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"Vincent6896"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"-":16,"Vincent6896":11}},{"path":"src/main/java/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Yuxinn-J"},"content":"package storage;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"Vincent6896"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"Mist0919"},"content":"import java.io.File;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"Mist0919"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"Mist0919"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"Mist0919"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"Mist0919"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"oneScotch"},"content":"import data.game.Game;","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"oneScotch"},"content":"import data.game.GameRecord;","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"oneScotch"},"content":"import data.game.HangmanGame;","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"Mist0919"},"content":"public class Storage {","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"Mist0919"},"content":"    private static File save;","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"Mist0919"},"content":"    private static String path;","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"Mist0919"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"Mist0919"},"content":"        path \u003d filePath;","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"Mist0919"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"Mist0919"},"content":"    public static GameRecord load() {","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"Mist0919"},"content":"        ArrayList\u003cGame\u003e games \u003d new ArrayList\u003cGame\u003e();","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"Mist0919"},"content":"        try {","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"Mist0919"},"content":"            File record \u003d new File(\"data\");","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"Mist0919"},"content":"            if (!record.exists()) {","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"Mist0919"},"content":"                record.mkdir();","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"Mist0919"},"content":"            }","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"Mist0919"},"content":"            save \u003d new File(path);","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"Mist0919"},"content":"            if (!save.exists()) {","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"Mist0919"},"content":"                save.createNewFile();","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"Mist0919"},"content":"            }","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"Mist0919"},"content":"            Scanner s \u003d new Scanner(save);","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"Mist0919"},"content":"            while (s.hasNext()) {","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"Mist0919"},"content":"                String reading \u003d s.nextLine();","lastModifiedDate":"2021-10-07"},{"lineNumber":38,"author":{"gitId":"Mist0919"},"content":"                if (reading.equals(\"Hang man\")) {","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"oneScotch"},"content":"                    games.add(new HangmanGame());","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"Mist0919"},"content":"                }","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"Mist0919"},"content":"            }","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"Mist0919"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"Mist0919"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"Mist0919"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":45,"author":{"gitId":"Mist0919"},"content":"        return new GameRecord(games);","lastModifiedDate":"2021-10-07"},{"lineNumber":46,"author":{"gitId":"Mist0919"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":47,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":48,"author":{"gitId":"Mist0919"},"content":"    public void writeToFile(GameRecord games) throws IOException {","lastModifiedDate":"2021-10-07"},{"lineNumber":49,"author":{"gitId":"Vincent6896"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":50,"author":{"gitId":"Mist0919"},"content":"        try {","lastModifiedDate":"2021-10-07"},{"lineNumber":51,"author":{"gitId":"Mist0919"},"content":"            FileWriter fw \u003d new FileWriter(save);","lastModifiedDate":"2021-10-07"},{"lineNumber":52,"author":{"gitId":"Mist0919"},"content":"            for (Game game : games.games) {","lastModifiedDate":"2021-10-07"},{"lineNumber":53,"author":{"gitId":"Yuxinn-J"},"content":"                if (game.getName().equals(\"Hang Man\")) {","lastModifiedDate":"2021-10-08"},{"lineNumber":54,"author":{"gitId":"Yuxinn-J"},"content":"                    fw.write(\"Hang Man\\n\");","lastModifiedDate":"2021-10-08"},{"lineNumber":55,"author":{"gitId":"Mist0919"},"content":"                }","lastModifiedDate":"2021-10-07"},{"lineNumber":56,"author":{"gitId":"Mist0919"},"content":"            }","lastModifiedDate":"2021-10-08"},{"lineNumber":57,"author":{"gitId":"Mist0919"},"content":"            fw.close();","lastModifiedDate":"2021-10-07"},{"lineNumber":58,"author":{"gitId":"Mist0919"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-10-07"},{"lineNumber":59,"author":{"gitId":"Mist0919"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2021-10-07"},{"lineNumber":60,"author":{"gitId":"Mist0919"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":61,"author":{"gitId":"Mist0919"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":62,"author":{"gitId":"Mist0919"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"Yuxinn-J":3,"oneScotch":4,"Mist0919":53,"Vincent6896":2}},{"path":"src/main/java/ui/Menu.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"oneScotch"},"content":"package ui;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"oneScotch"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"oneScotch"},"content":"/**","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"oneScotch"},"content":" * Abstract class {@code Menu}. Defines the common behaviours of the system\u0027s menus.","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"oneScotch"},"content":" *","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"oneScotch"},"content":" * @author Wang Ruisi","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"oneScotch"},"content":" */","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"oneScotch"},"content":"public abstract class Menu {","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"oneScotch"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"oneScotch"},"content":"     * Shows the menu.","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"oneScotch"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"oneScotch"},"content":"    public abstract void enter();","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"oneScotch"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"oneScotch":13}},{"path":"src/main/java/ui/card/CardCommandType.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Yuxinn-J"},"content":"package ui.card;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"Yuxinn-J"},"content":"import utils.message.Strings;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"Yuxinn-J"},"content":"public enum CardCommandType {","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"Yuxinn-J"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"Yuxinn-J"},"content":"     * Command \"list\".","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"Yuxinn-J"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"Yuxinn-J"},"content":"    LIST(\"list\", \"Show your package of all holding.\"),","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"Yuxinn-J"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"Yuxinn-J"},"content":"     * Command \"delete\".","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"Yuxinn-J"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"Yuxinn-J"},"content":"    DELETE(\"delete\", \"Delete an unwanted card in your package.\"),","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"Yuxinn-J"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"Yuxinn-J"},"content":"     * Command \"find\".","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"Yuxinn-J"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"Yuxinn-J"},"content":"    FIND(\"find\", \"Search cards by keyword.\"),","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"Yuxinn-J"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"Yuxinn-J"},"content":"     * Command \"help\".","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"Yuxinn-J"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"Yuxinn-J"},"content":"    HELP(\"help\", \"Display a list of available commands.\"),","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"Yuxinn-J"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"Yuxinn-J"},"content":"     * Command \"back\".","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"Yuxinn-J"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"Yuxinn-J"},"content":"    BACK(\"back\", \"Back to game menu.\"),","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"Yuxinn-J"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"Yuxinn-J"},"content":"     * Command \"exit\".","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"Yuxinn-J"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"Yuxinn-J"},"content":"    EXIT(\"exit\", String.format(\"Exit %s.\", Strings.APP_NAME_SHORT));","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"Yuxinn-J"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"Yuxinn-J"},"content":"     * The command corresponding to the command type.","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"Yuxinn-J"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"Yuxinn-J"},"content":"    private final String command;","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"Yuxinn-J"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"Yuxinn-J"},"content":"     * Information of the command.","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"Yuxinn-J"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"Yuxinn-J"},"content":"    private final String info;","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"Yuxinn-J"},"content":"    CardCommandType(String command, String info) {","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"Yuxinn-J"},"content":"        this.command \u003d command.toLowerCase();","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"Yuxinn-J"},"content":"        this.info \u003d info;","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"Yuxinn-J"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"Yuxinn-J"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"Yuxinn-J"},"content":"     * Get command type from a string.","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"Yuxinn-J"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"Yuxinn-J"},"content":"     * @param command the command as a string","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"Yuxinn-J"},"content":"     * @return the corresponding command type if there is a match; {@code null} otherwise","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"Yuxinn-J"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"Yuxinn-J"},"content":"    public static CardCommandType getCommandType(String command) {","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"Yuxinn-J"},"content":"        for (CardCommandType commandType : CardCommandType.values()) {","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"Yuxinn-J"},"content":"            if (command.toLowerCase().equals(commandType.getCommand())) {","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"Yuxinn-J"},"content":"                return commandType;","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"Yuxinn-J"},"content":"            }","lastModifiedDate":"2021-10-12"},{"lineNumber":62,"author":{"gitId":"Yuxinn-J"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":63,"author":{"gitId":"Yuxinn-J"},"content":"        return null;","lastModifiedDate":"2021-10-12"},{"lineNumber":64,"author":{"gitId":"Yuxinn-J"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":65,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":66,"author":{"gitId":"Yuxinn-J"},"content":"    public String getCommand() {","lastModifiedDate":"2021-10-12"},{"lineNumber":67,"author":{"gitId":"Yuxinn-J"},"content":"        return command;","lastModifiedDate":"2021-10-12"},{"lineNumber":68,"author":{"gitId":"Yuxinn-J"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":69,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":70,"author":{"gitId":"Yuxinn-J"},"content":"    public String getInfo() {","lastModifiedDate":"2021-10-12"},{"lineNumber":71,"author":{"gitId":"Yuxinn-J"},"content":"        return info;","lastModifiedDate":"2021-10-12"},{"lineNumber":72,"author":{"gitId":"Yuxinn-J"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":73,"author":{"gitId":"Yuxinn-J"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"Yuxinn-J":73}},{"path":"src/main/java/ui/card/CardMenu.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Yuxinn-J"},"content":"package ui.card;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"Yuxinn-J"},"content":"import data.Player;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"Yuxinn-J"},"content":"import ui.Menu;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"Yuxinn-J"},"content":"import ui.game.DifficultMenu;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"Yuxinn-J"},"content":"import ui.game.EasyMenu;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"Yuxinn-J"},"content":"import ui.game.GameCommandType;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"Yuxinn-J"},"content":"import ui.game.GameMenu;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"Yuxinn-J"},"content":"import ui.main.GameMainCommandType;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"Yuxinn-J"},"content":"import ui.main.GameMainMenu;","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"Yuxinn-J"},"content":"import utils.Errors;","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"Yuxinn-J"},"content":"import utils.StringParser;","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"Yuxinn-J"},"content":"import utils.message.Strings;","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"Yuxinn-J"},"content":"import java.util.NoSuchElementException;","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"Yuxinn-J"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"Yuxinn-J"},"content":"/**","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"Yuxinn-J"},"content":" * The card menu of the CodeHunt System.","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"Yuxinn-J"},"content":" */","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"Yuxinn-J"},"content":"public class CardMenu extends Menu {","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"Yuxinn-J"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"Yuxinn-J"},"content":"     * The {@code Scanner} for the menu to consume input.","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"Yuxinn-J"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"Yuxinn-J"},"content":"    private final Scanner in;","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"Yuxinn-J"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"Yuxinn-J"},"content":"     * The parser with the rest of the command to be consumed by the menu.","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"Yuxinn-J"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"Yuxinn-J"},"content":"    private final StringParser parser;","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"Yuxinn-J"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"Yuxinn-J"},"content":"     * Creates a new instance of the card menu.","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"Yuxinn-J"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"Yuxinn-J"},"content":"    public CardMenu(Scanner in, StringParser parser) {","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"Yuxinn-J"},"content":"        this.in \u003d in;","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"Yuxinn-J"},"content":"        this.parser \u003d parser;","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"Yuxinn-J"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"Yuxinn-J"},"content":"    @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"Yuxinn-J"},"content":"    public void enter() {","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"Yuxinn-J"},"content":"        welcome();","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"Yuxinn-J"},"content":"        try {","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"Yuxinn-J"},"content":"            while (true) {","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"Yuxinn-J"},"content":"                prompt();","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"Yuxinn-J"},"content":"                String command \u003d in.nextLine();","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"Yuxinn-J"},"content":"                StringParser parser \u003d new StringParser(command);","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"Yuxinn-J"},"content":"                CardCommandType commandType \u003d CardCommandType.getCommandType(parser.nextToken());","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"Yuxinn-J"},"content":"                if (commandType \u003d\u003d null) {","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"Yuxinn-J"},"content":"                    Errors.print(parser.getString(), Strings.ERR_UNKNOWN_COMMAND);","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"Yuxinn-J"},"content":"                    return;","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"Yuxinn-J"},"content":"                }","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"Yuxinn-J"},"content":"                if (parser.hasMoreTokens()) {","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"Yuxinn-J"},"content":"                    Errors.print(parser.getRemaining(), Strings.ERR_UNEXPECTED_INPUT);","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"Yuxinn-J"},"content":"                    return;","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"Yuxinn-J"},"content":"                }","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"Yuxinn-J"},"content":"                switch (commandType) {","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"Yuxinn-J"},"content":"                case LIST: {","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"Yuxinn-J"},"content":"                    System.out.println(Strings.LIST_CARD_MESSAGE);","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"Yuxinn-J"},"content":"                    if (parser.hasMoreTokens()) {","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"Yuxinn-J"},"content":"                        Errors.print(parser.getRemaining(), Strings.ERR_UNEXPECTED_INPUT);","lastModifiedDate":"2021-10-12"},{"lineNumber":62,"author":{"gitId":"Yuxinn-J"},"content":"                        continue;","lastModifiedDate":"2021-10-12"},{"lineNumber":63,"author":{"gitId":"Yuxinn-J"},"content":"                    }","lastModifiedDate":"2021-10-12"},{"lineNumber":64,"author":{"gitId":"Yuxinn-J"},"content":"                    listCards();","lastModifiedDate":"2021-10-12"},{"lineNumber":65,"author":{"gitId":"Yuxinn-J"},"content":"                    break;","lastModifiedDate":"2021-10-12"},{"lineNumber":66,"author":{"gitId":"Yuxinn-J"},"content":"                }","lastModifiedDate":"2021-10-12"},{"lineNumber":67,"author":{"gitId":"Yuxinn-J"},"content":"                case DELETE: {","lastModifiedDate":"2021-10-12"},{"lineNumber":68,"author":{"gitId":"Yuxinn-J"},"content":"                    if (parser.hasMoreTokens()) {","lastModifiedDate":"2021-10-12"},{"lineNumber":69,"author":{"gitId":"Yuxinn-J"},"content":"                        Errors.print(parser.getRemaining(), Strings.ERR_UNEXPECTED_INPUT);","lastModifiedDate":"2021-10-12"},{"lineNumber":70,"author":{"gitId":"Yuxinn-J"},"content":"                        continue;","lastModifiedDate":"2021-10-12"},{"lineNumber":71,"author":{"gitId":"Yuxinn-J"},"content":"                    }","lastModifiedDate":"2021-10-12"},{"lineNumber":72,"author":{"gitId":"Yuxinn-J"},"content":"                    // TODO: add delete function","lastModifiedDate":"2021-10-12"},{"lineNumber":73,"author":{"gitId":"Yuxinn-J"},"content":"                    break;","lastModifiedDate":"2021-10-12"},{"lineNumber":74,"author":{"gitId":"Yuxinn-J"},"content":"                }","lastModifiedDate":"2021-10-12"},{"lineNumber":75,"author":{"gitId":"Yuxinn-J"},"content":"                case FIND: {","lastModifiedDate":"2021-10-12"},{"lineNumber":76,"author":{"gitId":"Yuxinn-J"},"content":"                    // TODO: add find function","lastModifiedDate":"2021-10-12"},{"lineNumber":77,"author":{"gitId":"Yuxinn-J"},"content":"                    break;","lastModifiedDate":"2021-10-12"},{"lineNumber":78,"author":{"gitId":"Yuxinn-J"},"content":"                }","lastModifiedDate":"2021-10-12"},{"lineNumber":79,"author":{"gitId":"Yuxinn-J"},"content":"                case HELP: {","lastModifiedDate":"2021-10-12"},{"lineNumber":80,"author":{"gitId":"Yuxinn-J"},"content":"                    if (parser.hasMoreTokens()) {","lastModifiedDate":"2021-10-12"},{"lineNumber":81,"author":{"gitId":"Yuxinn-J"},"content":"                        Errors.print(parser.getRemaining(), Strings.ERR_UNEXPECTED_INPUT);","lastModifiedDate":"2021-10-12"},{"lineNumber":82,"author":{"gitId":"Yuxinn-J"},"content":"                        continue;","lastModifiedDate":"2021-10-12"},{"lineNumber":83,"author":{"gitId":"Yuxinn-J"},"content":"                    }","lastModifiedDate":"2021-10-12"},{"lineNumber":84,"author":{"gitId":"Yuxinn-J"},"content":"                    help();","lastModifiedDate":"2021-10-12"},{"lineNumber":85,"author":{"gitId":"Yuxinn-J"},"content":"                    break;","lastModifiedDate":"2021-10-12"},{"lineNumber":86,"author":{"gitId":"Yuxinn-J"},"content":"                }","lastModifiedDate":"2021-10-12"},{"lineNumber":87,"author":{"gitId":"Yuxinn-J"},"content":"                case BACK: {","lastModifiedDate":"2021-10-12"},{"lineNumber":88,"author":{"gitId":"Yuxinn-J"},"content":"                    if (parser.hasMoreTokens()) {","lastModifiedDate":"2021-10-12"},{"lineNumber":89,"author":{"gitId":"Yuxinn-J"},"content":"                        Errors.print(parser.getRemaining(), Strings.ERR_UNEXPECTED_INPUT);","lastModifiedDate":"2021-10-12"},{"lineNumber":90,"author":{"gitId":"Yuxinn-J"},"content":"                        continue;","lastModifiedDate":"2021-10-12"},{"lineNumber":91,"author":{"gitId":"Yuxinn-J"},"content":"                    }","lastModifiedDate":"2021-10-12"},{"lineNumber":92,"author":{"gitId":"Yuxinn-J"},"content":"                    return;","lastModifiedDate":"2021-10-12"},{"lineNumber":93,"author":{"gitId":"Yuxinn-J"},"content":"                }","lastModifiedDate":"2021-10-12"},{"lineNumber":94,"author":{"gitId":"Yuxinn-J"},"content":"                case EXIT: {","lastModifiedDate":"2021-10-12"},{"lineNumber":95,"author":{"gitId":"Yuxinn-J"},"content":"                    if (parser.hasMoreTokens()) {","lastModifiedDate":"2021-10-12"},{"lineNumber":96,"author":{"gitId":"Yuxinn-J"},"content":"                        Errors.print(parser.getRemaining(), Strings.ERR_UNEXPECTED_INPUT);","lastModifiedDate":"2021-10-12"},{"lineNumber":97,"author":{"gitId":"Yuxinn-J"},"content":"                        continue;","lastModifiedDate":"2021-10-12"},{"lineNumber":98,"author":{"gitId":"Yuxinn-J"},"content":"                    }","lastModifiedDate":"2021-10-12"},{"lineNumber":99,"author":{"gitId":"Yuxinn-J"},"content":"                    exit(true);","lastModifiedDate":"2021-10-12"},{"lineNumber":100,"author":{"gitId":"Yuxinn-J"},"content":"                    return;","lastModifiedDate":"2021-10-12"},{"lineNumber":101,"author":{"gitId":"Yuxinn-J"},"content":"                }","lastModifiedDate":"2021-10-12"},{"lineNumber":102,"author":{"gitId":"Yuxinn-J"},"content":"                default: {","lastModifiedDate":"2021-10-12"},{"lineNumber":103,"author":{"gitId":"Yuxinn-J"},"content":"                    break;","lastModifiedDate":"2021-10-12"},{"lineNumber":104,"author":{"gitId":"Yuxinn-J"},"content":"                }","lastModifiedDate":"2021-10-12"},{"lineNumber":105,"author":{"gitId":"Yuxinn-J"},"content":"                }","lastModifiedDate":"2021-10-12"},{"lineNumber":106,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":107,"author":{"gitId":"Yuxinn-J"},"content":"            }","lastModifiedDate":"2021-10-12"},{"lineNumber":108,"author":{"gitId":"Yuxinn-J"},"content":"        } catch (NoSuchElementException e) {","lastModifiedDate":"2021-10-12"},{"lineNumber":109,"author":{"gitId":"Yuxinn-J"},"content":"            exit(false);","lastModifiedDate":"2021-10-12"},{"lineNumber":110,"author":{"gitId":"Yuxinn-J"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":111,"author":{"gitId":"Yuxinn-J"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":112,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":113,"author":{"gitId":"Yuxinn-J"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":114,"author":{"gitId":"Yuxinn-J"},"content":"     * Displays the welcome message.","lastModifiedDate":"2021-10-12"},{"lineNumber":115,"author":{"gitId":"Yuxinn-J"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":116,"author":{"gitId":"Yuxinn-J"},"content":"    private void welcome() {","lastModifiedDate":"2021-10-12"},{"lineNumber":117,"author":{"gitId":"Yuxinn-J"},"content":"        System.out.println(Strings.CARD_WELCOME_MESSAGE);","lastModifiedDate":"2021-10-12"},{"lineNumber":118,"author":{"gitId":"Yuxinn-J"},"content":"        System.out.println();","lastModifiedDate":"2021-10-12"},{"lineNumber":119,"author":{"gitId":"Yuxinn-J"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":120,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":121,"author":{"gitId":"Yuxinn-J"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":122,"author":{"gitId":"Yuxinn-J"},"content":"     * Displays the prompt of the menu.","lastModifiedDate":"2021-10-12"},{"lineNumber":123,"author":{"gitId":"Yuxinn-J"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":124,"author":{"gitId":"Yuxinn-J"},"content":"    private void prompt() {","lastModifiedDate":"2021-10-12"},{"lineNumber":125,"author":{"gitId":"Yuxinn-J"},"content":"        System.out.print(Strings.MAIN_PROMPT);","lastModifiedDate":"2021-10-12"},{"lineNumber":126,"author":{"gitId":"Yuxinn-J"},"content":"        System.out.flush();","lastModifiedDate":"2021-10-12"},{"lineNumber":127,"author":{"gitId":"Yuxinn-J"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":128,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":129,"author":{"gitId":"Yuxinn-J"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":130,"author":{"gitId":"Yuxinn-J"},"content":"     * Display holding cards.","lastModifiedDate":"2021-10-12"},{"lineNumber":131,"author":{"gitId":"Yuxinn-J"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":132,"author":{"gitId":"Yuxinn-J"},"content":"    private void listCards() {","lastModifiedDate":"2021-10-12"},{"lineNumber":133,"author":{"gitId":"Yuxinn-J"},"content":"        Player.showCollectedCards();","lastModifiedDate":"2021-10-12"},{"lineNumber":134,"author":{"gitId":"Yuxinn-J"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":135,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":136,"author":{"gitId":"Yuxinn-J"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":137,"author":{"gitId":"Yuxinn-J"},"content":"     * Displays available commands and their corresponding details.","lastModifiedDate":"2021-10-12"},{"lineNumber":138,"author":{"gitId":"Yuxinn-J"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":139,"author":{"gitId":"Yuxinn-J"},"content":"    private void help() {","lastModifiedDate":"2021-10-12"},{"lineNumber":140,"author":{"gitId":"Yuxinn-J"},"content":"        for (CardCommandType commandType : CardCommandType.values()) {","lastModifiedDate":"2021-10-12"},{"lineNumber":141,"author":{"gitId":"Yuxinn-J"},"content":"            System.out.printf(\"%-12s%s\\n\", commandType.getCommand(), commandType.getInfo());","lastModifiedDate":"2021-10-12"},{"lineNumber":142,"author":{"gitId":"Yuxinn-J"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":143,"author":{"gitId":"Yuxinn-J"},"content":"        System.out.println();","lastModifiedDate":"2021-10-12"},{"lineNumber":144,"author":{"gitId":"Yuxinn-J"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":145,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":146,"author":{"gitId":"Yuxinn-J"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":147,"author":{"gitId":"Yuxinn-J"},"content":"     * The handler for command \"exit\". Does all necessary cleanups before the exit.","lastModifiedDate":"2021-10-12"},{"lineNumber":148,"author":{"gitId":"Yuxinn-J"},"content":"     * Note that the exit does not happen here. It is done by the {@code return}","lastModifiedDate":"2021-10-12"},{"lineNumber":149,"author":{"gitId":"Yuxinn-J"},"content":"     * statement under the {@link #enter()} method.","lastModifiedDate":"2021-10-12"},{"lineNumber":150,"author":{"gitId":"Yuxinn-J"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":151,"author":{"gitId":"Yuxinn-J"},"content":"     * @param promptToSave whether to prompt to save the current state or not","lastModifiedDate":"2021-10-12"},{"lineNumber":152,"author":{"gitId":"Yuxinn-J"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":153,"author":{"gitId":"Yuxinn-J"},"content":"    public void exit(boolean promptToSave) {","lastModifiedDate":"2021-10-12"},{"lineNumber":154,"author":{"gitId":"Yuxinn-J"},"content":"        // TODO: Implement \"prompt to save\" functionality","lastModifiedDate":"2021-10-12"},{"lineNumber":155,"author":{"gitId":"Yuxinn-J"},"content":"        System.out.println(Strings.MAIN_EXIT_MESSAGE);","lastModifiedDate":"2021-10-12"},{"lineNumber":156,"author":{"gitId":"Yuxinn-J"},"content":"        System.out.println();","lastModifiedDate":"2021-10-12"},{"lineNumber":157,"author":{"gitId":"Yuxinn-J"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":158,"author":{"gitId":"Yuxinn-J"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"Yuxinn-J":158}},{"path":"src/main/java/ui/game/DifficultMenu.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Yuxinn-J"},"content":"package ui.game;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"Yuxinn-J"},"content":"import ui.Menu;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"Yuxinn-J"},"content":"import utils.StringParser;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"Yuxinn-J"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"Yuxinn-J"},"content":"public class DifficultMenu extends Menu {","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"Yuxinn-J"},"content":"    public DifficultMenu(Scanner in, StringParser parser) {","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"Yuxinn-J"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"Yuxinn-J"},"content":"    @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"Yuxinn-J"},"content":"    public void enter() {","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"Yuxinn-J"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"Yuxinn-J"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"Yuxinn-J":18}},{"path":"src/main/java/ui/game/EasyMenu.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Yuxinn-J"},"content":"package ui.game;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"Yuxinn-J"},"content":"import data.Player;","lastModifiedDate":"2021-10-14"},{"lineNumber":4,"author":{"gitId":"Yuxinn-J"},"content":"import data.game.GuessingNumGame;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"Yuxinn-J"},"content":"import data.game.HangmanGame;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"Vincent6896"},"content":"import data.game.QuizGame;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"Yuxinn-J"},"content":"import data.game.TreasureHuntGame;","lastModifiedDate":"2021-10-14"},{"lineNumber":8,"author":{"gitId":"Yuxinn-J"},"content":"import ui.Menu;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"Yuxinn-J"},"content":"import utils.StringParser;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"Yuxinn-J"},"content":"import utils.message.Strings;","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"Yuxinn-J"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"Yuxinn-J"},"content":"/**","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"Yuxinn-J"},"content":" * The easy game mode menu of the CodeHunt game.","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"Yuxinn-J"},"content":" */","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"Yuxinn-J"},"content":"public class EasyMenu extends Menu {","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"Yuxinn-J"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"Yuxinn-J"},"content":"     * The {@code Scanner} for the menu to consume input.","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"Yuxinn-J"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"Yuxinn-J"},"content":"    private final Scanner in;","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"Yuxinn-J"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"Yuxinn-J"},"content":"     * The parser with the rest of the command to be consumed by the menu.","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"Yuxinn-J"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"Yuxinn-J"},"content":"    private final StringParser parser;","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"Yuxinn-J"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"Yuxinn-J"},"content":"     * Creates a new instance of the easy menu.","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"Yuxinn-J"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"Yuxinn-J"},"content":"    public EasyMenu(Scanner in, StringParser parser) {","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"Yuxinn-J"},"content":"        this.in \u003d in;","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"Yuxinn-J"},"content":"        this.parser \u003d parser;","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"Yuxinn-J"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"Yuxinn-J"},"content":"    @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"Yuxinn-J"},"content":"    public void enter() {","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"Yuxinn-J"},"content":"        int cardId;","lastModifiedDate":"2021-10-14"},{"lineNumber":39,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":40,"author":{"gitId":"Yuxinn-J"},"content":"        welcome();","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"Yuxinn-J"},"content":"        System.out.println(Strings.HANG_MAN_START);","lastModifiedDate":"2021-10-14"},{"lineNumber":43,"author":{"gitId":"Yuxinn-J"},"content":"        HangmanGame hangmanGame \u003d new HangmanGame();","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"Yuxinn-J"},"content":"        cardId \u003d hangmanGame.execute();","lastModifiedDate":"2021-10-14"},{"lineNumber":45,"author":{"gitId":"Yuxinn-J"},"content":"        Player.winCard(cardId);","lastModifiedDate":"2021-10-14"},{"lineNumber":46,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":47,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"Yuxinn-J"},"content":"        System.out.println(\"Well done! You have finished the first level!\");","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"Yuxinn-J"},"content":"        System.out.println(Strings.QUIZ_START);","lastModifiedDate":"2021-10-14"},{"lineNumber":51,"author":{"gitId":"Vincent6896"},"content":"        QuizGame quizGame \u003d new QuizGame(\"1\");","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"Yuxinn-J"},"content":"        cardId \u003d quizGame.execute();","lastModifiedDate":"2021-10-14"},{"lineNumber":53,"author":{"gitId":"Yuxinn-J"},"content":"        Player.winCard(cardId);","lastModifiedDate":"2021-10-14"},{"lineNumber":54,"author":{"gitId":"Vincent6896"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"Yuxinn-J"},"content":"        System.out.println(Strings.GUESS_NUM_START);","lastModifiedDate":"2021-10-14"},{"lineNumber":56,"author":{"gitId":"Vincent6896"},"content":"        GuessingNumGame guessingNumGame \u003d new GuessingNumGame();","lastModifiedDate":"2021-10-14"},{"lineNumber":57,"author":{"gitId":"Yuxinn-J"},"content":"        cardId \u003d guessingNumGame.execute();","lastModifiedDate":"2021-10-14"},{"lineNumber":58,"author":{"gitId":"Yuxinn-J"},"content":"        Player.winCard(cardId);","lastModifiedDate":"2021-10-14"},{"lineNumber":59,"author":{"gitId":"Vincent6896"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":60,"author":{"gitId":"Yuxinn-J"},"content":"        System.out.println(Strings.TREASURE_HUNT_START);","lastModifiedDate":"2021-10-14"},{"lineNumber":61,"author":{"gitId":"Yuxinn-J"},"content":"        TreasureHuntGame treasureHuntGame \u003d new TreasureHuntGame();","lastModifiedDate":"2021-10-14"},{"lineNumber":62,"author":{"gitId":"Yuxinn-J"},"content":"        cardId \u003d treasureHuntGame.execute();","lastModifiedDate":"2021-10-14"},{"lineNumber":63,"author":{"gitId":"Yuxinn-J"},"content":"        Player.winCard(cardId);","lastModifiedDate":"2021-10-14"},{"lineNumber":64,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":65,"author":{"gitId":"Yuxinn-J"},"content":"        System.out.println(Strings.FINISH_EASY_MODE);","lastModifiedDate":"2021-10-14"},{"lineNumber":66,"author":{"gitId":"Yuxinn-J"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":67,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":68,"author":{"gitId":"Yuxinn-J"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":69,"author":{"gitId":"Yuxinn-J"},"content":"     * Displays the welcome message and the background.","lastModifiedDate":"2021-10-12"},{"lineNumber":70,"author":{"gitId":"Yuxinn-J"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":71,"author":{"gitId":"Yuxinn-J"},"content":"    private void welcome() {","lastModifiedDate":"2021-10-12"},{"lineNumber":72,"author":{"gitId":"Yuxinn-J"},"content":"        System.out.println(Strings.EASY_LOGO);","lastModifiedDate":"2021-10-12"},{"lineNumber":73,"author":{"gitId":"Yuxinn-J"},"content":"        System.out.println(Strings.EASY_GAME_WELCOME_MESSAGE);","lastModifiedDate":"2021-10-12"},{"lineNumber":74,"author":{"gitId":"Yuxinn-J"},"content":"        System.out.println();","lastModifiedDate":"2021-10-12"},{"lineNumber":75,"author":{"gitId":"Yuxinn-J"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":76,"author":{"gitId":"Yuxinn-J"},"content":"}","lastModifiedDate":"2021-10-12"},{"lineNumber":77,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"Yuxinn-J":72,"Vincent6896":5}},{"path":"src/main/java/ui/game/GameCommandType.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Yuxinn-J"},"content":"package ui.game;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"Yuxinn-J"},"content":"import ui.main.GameMainCommandType;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"Yuxinn-J"},"content":"import utils.message.Strings;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"Yuxinn-J"},"content":"public enum GameCommandType {","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"Yuxinn-J"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"Yuxinn-J"},"content":"     * Command \"start\".","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"Yuxinn-J"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"Yuxinn-J"},"content":"    START(\"start\", \"Start and then choose your difficulty level.\"),","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"Yuxinn-J"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"Yuxinn-J"},"content":"     * Command \"check\".","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"Yuxinn-J"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"Yuxinn-J"},"content":"    CHECK(\"check\", \"Check Current Game Progress.\"),","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"Yuxinn-J"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"Yuxinn-J"},"content":"     * Command \"card\".","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"Yuxinn-J"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"Yuxinn-J"},"content":"    CARD(\"card\", \"Manage your holding cards.\"),","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"Yuxinn-J"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"Yuxinn-J"},"content":"     * Command \"back\".","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"Yuxinn-J"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"Yuxinn-J"},"content":"    BACK(\"back\", \"Back to main menu.\"),","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"Yuxinn-J"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"Yuxinn-J"},"content":"     * Command \"exit\".","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"Yuxinn-J"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"Yuxinn-J"},"content":"    EXIT(\"exit\", String.format(\"Exit %s.\", Strings.APP_NAME_SHORT));","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"Yuxinn-J"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"Yuxinn-J"},"content":"     * The command corresponding to the command type.","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"Yuxinn-J"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"Yuxinn-J"},"content":"    private final String command;","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"Yuxinn-J"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"Yuxinn-J"},"content":"     * Information of the command.","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"Yuxinn-J"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"Yuxinn-J"},"content":"    private final String info;","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"Yuxinn-J"},"content":"    GameCommandType(String command, String info) {","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"Yuxinn-J"},"content":"        this.command \u003d command.toLowerCase();","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"Yuxinn-J"},"content":"        this.info \u003d info;","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"Yuxinn-J"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"Yuxinn-J"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"Yuxinn-J"},"content":"     * Get command type from a string.","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"Yuxinn-J"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"Yuxinn-J"},"content":"     * @param command the command as a string","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"Yuxinn-J"},"content":"     * @return the corresponding command type if there is a match; {@code null} otherwise","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"Yuxinn-J"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"Yuxinn-J"},"content":"    public static GameCommandType getCommandType(String command) {","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"Yuxinn-J"},"content":"        for (GameCommandType commandType : GameCommandType.values()) {","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"Yuxinn-J"},"content":"            if (command.toLowerCase().equals(commandType.getCommand())) {","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"Yuxinn-J"},"content":"                return commandType;","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"Yuxinn-J"},"content":"            }","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"Yuxinn-J"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"Yuxinn-J"},"content":"        return null;","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"Yuxinn-J"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":62,"author":{"gitId":"Yuxinn-J"},"content":"    public String getCommand() {","lastModifiedDate":"2021-10-12"},{"lineNumber":63,"author":{"gitId":"Yuxinn-J"},"content":"        return command;","lastModifiedDate":"2021-10-12"},{"lineNumber":64,"author":{"gitId":"Yuxinn-J"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":65,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":66,"author":{"gitId":"Yuxinn-J"},"content":"    public String getInfo() {","lastModifiedDate":"2021-10-12"},{"lineNumber":67,"author":{"gitId":"Yuxinn-J"},"content":"        return info;","lastModifiedDate":"2021-10-12"},{"lineNumber":68,"author":{"gitId":"Yuxinn-J"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":69,"author":{"gitId":"Yuxinn-J"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"Yuxinn-J":69}},{"path":"src/main/java/ui/game/GameMenu.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Yuxinn-J"},"content":"package ui.game;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"Yuxinn-J"},"content":"import data.Player;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"Yuxinn-J"},"content":"import ui.Menu;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"Yuxinn-J"},"content":"import ui.card.CardCommandType;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"Yuxinn-J"},"content":"import ui.card.CardMenu;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"Yuxinn-J"},"content":"import ui.main.GameMainCommandType;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"Yuxinn-J"},"content":"import ui.main.GameMainMenu;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"Yuxinn-J"},"content":"import utils.Errors;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"Yuxinn-J"},"content":"import utils.IO;","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"Yuxinn-J"},"content":"import utils.StringParser;","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"Yuxinn-J"},"content":"import utils.message.Strings;","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"Yuxinn-J"},"content":"import java.util.NoSuchElementException;","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"Yuxinn-J"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"Yuxinn-J"},"content":"/**","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"Yuxinn-J"},"content":" * The game menu after start the CodeHunt game.","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"Yuxinn-J"},"content":" */","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"Yuxinn-J"},"content":"public class GameMenu extends Menu {","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"Yuxinn-J"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"Yuxinn-J"},"content":"     * The {@code Scanner} for the menu to consume input.","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"Yuxinn-J"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"Yuxinn-J"},"content":"    private final Scanner in;","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"Yuxinn-J"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"Yuxinn-J"},"content":"     * The parser with the rest of the command to be consumed by the menu.","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"Yuxinn-J"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"Yuxinn-J"},"content":"    private final StringParser parser;","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"Yuxinn-J"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"Yuxinn-J"},"content":"     * Creates a new instance of the game menu.","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"Yuxinn-J"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"Yuxinn-J"},"content":"    public GameMenu(Scanner in, StringParser parser) {","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"Yuxinn-J"},"content":"        this.in \u003d in;","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"Yuxinn-J"},"content":"        this.parser \u003d parser;","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"Yuxinn-J"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"Yuxinn-J"},"content":"    @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"Yuxinn-J"},"content":"    public void enter() {","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"Yuxinn-J"},"content":"        welcome();","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"Yuxinn-J"},"content":"        try {","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"Yuxinn-J"},"content":"            while (true) {","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"Yuxinn-J"},"content":"                help();","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"Yuxinn-J"},"content":"                prompt();","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"Yuxinn-J"},"content":"                String command \u003d in.nextLine();","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"Yuxinn-J"},"content":"                StringParser parser \u003d new StringParser(command);","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"Yuxinn-J"},"content":"                GameCommandType commandType \u003d GameCommandType.getCommandType(parser.nextToken());","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"Yuxinn-J"},"content":"                if (commandType \u003d\u003d null) {","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"Yuxinn-J"},"content":"                    Errors.print(parser.getString(), Strings.ERR_UNKNOWN_COMMAND);","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"Yuxinn-J"},"content":"                    return;","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"Yuxinn-J"},"content":"                }","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"Yuxinn-J"},"content":"                if (parser.hasMoreTokens()) {","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"Yuxinn-J"},"content":"                    Errors.print(parser.getRemaining(), Strings.ERR_UNEXPECTED_INPUT);","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"Yuxinn-J"},"content":"                    return;","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"Yuxinn-J"},"content":"                }","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"Yuxinn-J"},"content":"                switch (commandType) {","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"Yuxinn-J"},"content":"                case START: {","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"Yuxinn-J"},"content":"                    System.out.println(Strings.CHOOSE_LEVEL_MESSAGE);","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"Yuxinn-J"},"content":"                    int selection \u003d in.nextInt();","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":62,"author":{"gitId":"Yuxinn-J"},"content":"                    if (selection \u003d\u003d 1) {","lastModifiedDate":"2021-10-12"},{"lineNumber":63,"author":{"gitId":"Yuxinn-J"},"content":"                        EasyMenu easyMenu \u003d new EasyMenu(in, parser);","lastModifiedDate":"2021-10-12"},{"lineNumber":64,"author":{"gitId":"Yuxinn-J"},"content":"                        easyMenu.enter();","lastModifiedDate":"2021-10-12"},{"lineNumber":65,"author":{"gitId":"Yuxinn-J"},"content":"                    } else if (selection \u003d\u003d 2) {","lastModifiedDate":"2021-10-12"},{"lineNumber":66,"author":{"gitId":"Yuxinn-J"},"content":"                        DifficultMenu easyMenu \u003d new DifficultMenu(in, parser);","lastModifiedDate":"2021-10-12"},{"lineNumber":67,"author":{"gitId":"Yuxinn-J"},"content":"                        easyMenu.enter();","lastModifiedDate":"2021-10-12"},{"lineNumber":68,"author":{"gitId":"Yuxinn-J"},"content":"                    } else {","lastModifiedDate":"2021-10-12"},{"lineNumber":69,"author":{"gitId":"Yuxinn-J"},"content":"                        Errors.print(Integer.toString(selection), Strings.ERR_INVALID_NUMBER);","lastModifiedDate":"2021-10-12"},{"lineNumber":70,"author":{"gitId":"Yuxinn-J"},"content":"                    }","lastModifiedDate":"2021-10-12"},{"lineNumber":71,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":72,"author":{"gitId":"Yuxinn-J"},"content":"                    break;","lastModifiedDate":"2021-10-12"},{"lineNumber":73,"author":{"gitId":"Yuxinn-J"},"content":"                }","lastModifiedDate":"2021-10-12"},{"lineNumber":74,"author":{"gitId":"Yuxinn-J"},"content":"                case CHECK: {","lastModifiedDate":"2021-10-12"},{"lineNumber":75,"author":{"gitId":"Yuxinn-J"},"content":"                    if (parser.hasMoreTokens()) {","lastModifiedDate":"2021-10-12"},{"lineNumber":76,"author":{"gitId":"Yuxinn-J"},"content":"                        Errors.print(parser.getRemaining(), Strings.ERR_UNEXPECTED_INPUT);","lastModifiedDate":"2021-10-12"},{"lineNumber":77,"author":{"gitId":"Yuxinn-J"},"content":"                        continue;","lastModifiedDate":"2021-10-12"},{"lineNumber":78,"author":{"gitId":"Yuxinn-J"},"content":"                    }","lastModifiedDate":"2021-10-12"},{"lineNumber":79,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":80,"author":{"gitId":"Yuxinn-J"},"content":"                    showRecord();","lastModifiedDate":"2021-10-12"},{"lineNumber":81,"author":{"gitId":"Yuxinn-J"},"content":"                    break;","lastModifiedDate":"2021-10-12"},{"lineNumber":82,"author":{"gitId":"Yuxinn-J"},"content":"                }","lastModifiedDate":"2021-10-12"},{"lineNumber":83,"author":{"gitId":"Yuxinn-J"},"content":"                case CARD: {","lastModifiedDate":"2021-10-12"},{"lineNumber":84,"author":{"gitId":"Yuxinn-J"},"content":"                    CardMenu cardMenu \u003d new CardMenu(in, parser);","lastModifiedDate":"2021-10-12"},{"lineNumber":85,"author":{"gitId":"Yuxinn-J"},"content":"                    cardMenu.enter();","lastModifiedDate":"2021-10-12"},{"lineNumber":86,"author":{"gitId":"Yuxinn-J"},"content":"                    break;","lastModifiedDate":"2021-10-12"},{"lineNumber":87,"author":{"gitId":"Yuxinn-J"},"content":"                }","lastModifiedDate":"2021-10-12"},{"lineNumber":88,"author":{"gitId":"Yuxinn-J"},"content":"                case BACK: {","lastModifiedDate":"2021-10-12"},{"lineNumber":89,"author":{"gitId":"Yuxinn-J"},"content":"                    if (parser.hasMoreTokens()) {","lastModifiedDate":"2021-10-12"},{"lineNumber":90,"author":{"gitId":"Yuxinn-J"},"content":"                        Errors.print(parser.getRemaining(), Strings.ERR_UNEXPECTED_INPUT);","lastModifiedDate":"2021-10-12"},{"lineNumber":91,"author":{"gitId":"Yuxinn-J"},"content":"                        continue;","lastModifiedDate":"2021-10-12"},{"lineNumber":92,"author":{"gitId":"Yuxinn-J"},"content":"                    }","lastModifiedDate":"2021-10-12"},{"lineNumber":93,"author":{"gitId":"Yuxinn-J"},"content":"                    return;","lastModifiedDate":"2021-10-12"},{"lineNumber":94,"author":{"gitId":"Yuxinn-J"},"content":"                }","lastModifiedDate":"2021-10-12"},{"lineNumber":95,"author":{"gitId":"Yuxinn-J"},"content":"                case EXIT: {","lastModifiedDate":"2021-10-12"},{"lineNumber":96,"author":{"gitId":"Yuxinn-J"},"content":"                    if (parser.hasMoreTokens()) {","lastModifiedDate":"2021-10-12"},{"lineNumber":97,"author":{"gitId":"Yuxinn-J"},"content":"                        Errors.print(parser.getRemaining(), Strings.ERR_UNEXPECTED_INPUT);","lastModifiedDate":"2021-10-12"},{"lineNumber":98,"author":{"gitId":"Yuxinn-J"},"content":"                        continue;","lastModifiedDate":"2021-10-12"},{"lineNumber":99,"author":{"gitId":"Yuxinn-J"},"content":"                    }","lastModifiedDate":"2021-10-12"},{"lineNumber":100,"author":{"gitId":"Yuxinn-J"},"content":"                    exit(true);","lastModifiedDate":"2021-10-12"},{"lineNumber":101,"author":{"gitId":"Yuxinn-J"},"content":"                    return;","lastModifiedDate":"2021-10-12"},{"lineNumber":102,"author":{"gitId":"Yuxinn-J"},"content":"                }","lastModifiedDate":"2021-10-12"},{"lineNumber":103,"author":{"gitId":"Yuxinn-J"},"content":"                default: {","lastModifiedDate":"2021-10-12"},{"lineNumber":104,"author":{"gitId":"Yuxinn-J"},"content":"                    break;","lastModifiedDate":"2021-10-12"},{"lineNumber":105,"author":{"gitId":"Yuxinn-J"},"content":"                }","lastModifiedDate":"2021-10-12"},{"lineNumber":106,"author":{"gitId":"Yuxinn-J"},"content":"                }","lastModifiedDate":"2021-10-12"},{"lineNumber":107,"author":{"gitId":"Yuxinn-J"},"content":"            }","lastModifiedDate":"2021-10-12"},{"lineNumber":108,"author":{"gitId":"Yuxinn-J"},"content":"        } catch (NoSuchElementException e) {","lastModifiedDate":"2021-10-12"},{"lineNumber":109,"author":{"gitId":"Yuxinn-J"},"content":"            exit(false);","lastModifiedDate":"2021-10-12"},{"lineNumber":110,"author":{"gitId":"Yuxinn-J"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":111,"author":{"gitId":"Yuxinn-J"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":112,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":113,"author":{"gitId":"Yuxinn-J"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":114,"author":{"gitId":"Yuxinn-J"},"content":"     * Displays the welcome message.","lastModifiedDate":"2021-10-12"},{"lineNumber":115,"author":{"gitId":"Yuxinn-J"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":116,"author":{"gitId":"Yuxinn-J"},"content":"    private void welcome() {","lastModifiedDate":"2021-10-12"},{"lineNumber":117,"author":{"gitId":"Yuxinn-J"},"content":"        System.out.println(Strings.GAME_WELCOME_MESSAGE);","lastModifiedDate":"2021-10-12"},{"lineNumber":118,"author":{"gitId":"Yuxinn-J"},"content":"        System.out.println();","lastModifiedDate":"2021-10-12"},{"lineNumber":119,"author":{"gitId":"Yuxinn-J"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":120,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":121,"author":{"gitId":"Yuxinn-J"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":122,"author":{"gitId":"Yuxinn-J"},"content":"     * Displays the prompt of the menu.","lastModifiedDate":"2021-10-12"},{"lineNumber":123,"author":{"gitId":"Yuxinn-J"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":124,"author":{"gitId":"Yuxinn-J"},"content":"    private void prompt() {","lastModifiedDate":"2021-10-12"},{"lineNumber":125,"author":{"gitId":"Yuxinn-J"},"content":"        System.out.print(Strings.MAIN_PROMPT);","lastModifiedDate":"2021-10-12"},{"lineNumber":126,"author":{"gitId":"Yuxinn-J"},"content":"        System.out.flush();","lastModifiedDate":"2021-10-12"},{"lineNumber":127,"author":{"gitId":"Yuxinn-J"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":128,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":129,"author":{"gitId":"Yuxinn-J"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":130,"author":{"gitId":"Yuxinn-J"},"content":"     * Displays the game history of this player.","lastModifiedDate":"2021-10-12"},{"lineNumber":131,"author":{"gitId":"Yuxinn-J"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":132,"author":{"gitId":"Yuxinn-J"},"content":"    private void showRecord() {","lastModifiedDate":"2021-10-12"},{"lineNumber":133,"author":{"gitId":"Yuxinn-J"},"content":"        System.out.println(Strings.GAME_RECORD_MESSAGE);","lastModifiedDate":"2021-10-12"},{"lineNumber":134,"author":{"gitId":"Yuxinn-J"},"content":"        Player.showGameProgress();","lastModifiedDate":"2021-10-12"},{"lineNumber":135,"author":{"gitId":"Yuxinn-J"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":136,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":137,"author":{"gitId":"Yuxinn-J"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":138,"author":{"gitId":"Yuxinn-J"},"content":"     * Displays available commands and their corresponding details.","lastModifiedDate":"2021-10-12"},{"lineNumber":139,"author":{"gitId":"Yuxinn-J"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":140,"author":{"gitId":"Yuxinn-J"},"content":"    private void help() {","lastModifiedDate":"2021-10-12"},{"lineNumber":141,"author":{"gitId":"Yuxinn-J"},"content":"        for (GameCommandType commandType : GameCommandType.values()) {","lastModifiedDate":"2021-10-12"},{"lineNumber":142,"author":{"gitId":"Yuxinn-J"},"content":"            System.out.printf(\"%-12s%s\\n\", commandType.getCommand(), commandType.getInfo());","lastModifiedDate":"2021-10-12"},{"lineNumber":143,"author":{"gitId":"Yuxinn-J"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":144,"author":{"gitId":"Yuxinn-J"},"content":"        System.out.println();","lastModifiedDate":"2021-10-12"},{"lineNumber":145,"author":{"gitId":"Yuxinn-J"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":146,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":147,"author":{"gitId":"Yuxinn-J"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":148,"author":{"gitId":"Yuxinn-J"},"content":"     * The handler for command \"exit\". Does all necessary cleanups before the exit.","lastModifiedDate":"2021-10-12"},{"lineNumber":149,"author":{"gitId":"Yuxinn-J"},"content":"     * Note that the exit does not happen here. It is done by the {@code return}","lastModifiedDate":"2021-10-12"},{"lineNumber":150,"author":{"gitId":"Yuxinn-J"},"content":"     * statement under the {@link #enter()} method.","lastModifiedDate":"2021-10-12"},{"lineNumber":151,"author":{"gitId":"Yuxinn-J"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":152,"author":{"gitId":"Yuxinn-J"},"content":"     * @param promptToSave whether to prompt to save the current state or not","lastModifiedDate":"2021-10-12"},{"lineNumber":153,"author":{"gitId":"Yuxinn-J"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":154,"author":{"gitId":"Yuxinn-J"},"content":"    public void exit(boolean promptToSave) {","lastModifiedDate":"2021-10-12"},{"lineNumber":155,"author":{"gitId":"Yuxinn-J"},"content":"        // TODO: Implement \"prompt to save\" functionality","lastModifiedDate":"2021-10-12"},{"lineNumber":156,"author":{"gitId":"Yuxinn-J"},"content":"        System.out.println(Strings.MAIN_EXIT_MESSAGE);","lastModifiedDate":"2021-10-12"},{"lineNumber":157,"author":{"gitId":"Yuxinn-J"},"content":"        System.out.println();","lastModifiedDate":"2021-10-12"},{"lineNumber":158,"author":{"gitId":"Yuxinn-J"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":159,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":160,"author":{"gitId":"Yuxinn-J"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"Yuxinn-J":160}},{"path":"src/main/java/ui/main/GameMainCommandType.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"oneScotch"},"content":"package ui.main;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"oneScotch"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"oneScotch"},"content":"import utils.message.Strings;","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"oneScotch"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"oneScotch"},"content":"public enum GameMainCommandType {","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"oneScotch"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"oneScotch"},"content":"     * Command \"newGame\".","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"oneScotch"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"oneScotch"},"content":"    NEWGAME(\"newGame\", \"Start a new game.\"),","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"oneScotch"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"oneScotch"},"content":"     * Command \"continue\".","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"oneScotch"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"Yuxinn-J"},"content":"    CONTINUE(\"continue\", \"Continue the game stored previously.\"),","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"oneScotch"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"oneScotch"},"content":"     * Command \"help\".","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"oneScotch"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"oneScotch"},"content":"    HELP(\"help\", \"Display a list of available commands.\"),","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"oneScotch"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"oneScotch"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"oneScotch"},"content":"     * Command \"about\".","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"oneScotch"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"oneScotch"},"content":"    ABOUT(\"about\", String.format(\"Display information about %s.\", Strings.APP_NAME_SHORT)),","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"oneScotch"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"oneScotch"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"oneScotch"},"content":"     * Command \"exit\".","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"oneScotch"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"oneScotch"},"content":"    EXIT(\"exit\", String.format(\"Exit %s.\", Strings.APP_NAME_SHORT));","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"oneScotch"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"oneScotch"},"content":"     * The command corresponding to the command type.","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"oneScotch"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":31,"author":{"gitId":"oneScotch"},"content":"    private final String command;","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"oneScotch"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"oneScotch"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":34,"author":{"gitId":"oneScotch"},"content":"     * Information of the command.","lastModifiedDate":"2021-10-10"},{"lineNumber":35,"author":{"gitId":"oneScotch"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":36,"author":{"gitId":"oneScotch"},"content":"    private final String info;","lastModifiedDate":"2021-10-10"},{"lineNumber":37,"author":{"gitId":"oneScotch"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":38,"author":{"gitId":"oneScotch"},"content":"    GameMainCommandType(String command, String info) {","lastModifiedDate":"2021-10-10"},{"lineNumber":39,"author":{"gitId":"oneScotch"},"content":"        this.command \u003d command.toLowerCase();","lastModifiedDate":"2021-10-10"},{"lineNumber":40,"author":{"gitId":"oneScotch"},"content":"        this.info \u003d info;","lastModifiedDate":"2021-10-10"},{"lineNumber":41,"author":{"gitId":"oneScotch"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":42,"author":{"gitId":"oneScotch"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":43,"author":{"gitId":"oneScotch"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":44,"author":{"gitId":"oneScotch"},"content":"     * Get command type from a string.","lastModifiedDate":"2021-10-10"},{"lineNumber":45,"author":{"gitId":"oneScotch"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":46,"author":{"gitId":"oneScotch"},"content":"     * @param command the command as a string","lastModifiedDate":"2021-10-10"},{"lineNumber":47,"author":{"gitId":"oneScotch"},"content":"     * @return the corresponding command type if there is a match; {@code null} otherwise","lastModifiedDate":"2021-10-10"},{"lineNumber":48,"author":{"gitId":"oneScotch"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":49,"author":{"gitId":"oneScotch"},"content":"    public static GameMainCommandType getCommandType(String command) {","lastModifiedDate":"2021-10-10"},{"lineNumber":50,"author":{"gitId":"oneScotch"},"content":"        for (GameMainCommandType commandType : GameMainCommandType.values()) {","lastModifiedDate":"2021-10-10"},{"lineNumber":51,"author":{"gitId":"oneScotch"},"content":"            if (command.toLowerCase().equals(commandType.getCommand())) {","lastModifiedDate":"2021-10-10"},{"lineNumber":52,"author":{"gitId":"oneScotch"},"content":"                return commandType;","lastModifiedDate":"2021-10-10"},{"lineNumber":53,"author":{"gitId":"oneScotch"},"content":"            }","lastModifiedDate":"2021-10-10"},{"lineNumber":54,"author":{"gitId":"oneScotch"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":55,"author":{"gitId":"oneScotch"},"content":"        return null;","lastModifiedDate":"2021-10-10"},{"lineNumber":56,"author":{"gitId":"oneScotch"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":57,"author":{"gitId":"oneScotch"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":58,"author":{"gitId":"oneScotch"},"content":"    public String getCommand() {","lastModifiedDate":"2021-10-10"},{"lineNumber":59,"author":{"gitId":"oneScotch"},"content":"        return command;","lastModifiedDate":"2021-10-10"},{"lineNumber":60,"author":{"gitId":"oneScotch"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":61,"author":{"gitId":"oneScotch"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":62,"author":{"gitId":"oneScotch"},"content":"    public String getInfo() {","lastModifiedDate":"2021-10-10"},{"lineNumber":63,"author":{"gitId":"oneScotch"},"content":"        return info;","lastModifiedDate":"2021-10-10"},{"lineNumber":64,"author":{"gitId":"oneScotch"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":65,"author":{"gitId":"oneScotch"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":66,"author":{"gitId":"oneScotch"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"Yuxinn-J":1,"oneScotch":65}},{"path":"src/main/java/ui/main/GameMainMenu.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"oneScotch"},"content":"package ui.main;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"Vincent6896"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"oneScotch"},"content":"import java.util.NoSuchElementException;","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"Vincent6896"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"oneScotch"},"content":"import data.Player;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"Yuxinn-J"},"content":"import ui.game.GameMenu;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"oneScotch"},"content":"import utils.IO;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"oneScotch"},"content":"import utils.message.Strings;","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"oneScotch"},"content":"import ui.Menu;","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"oneScotch"},"content":"import utils.Errors;","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"oneScotch"},"content":"import utils.StringParser;","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"oneScotch"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"oneScotch"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"oneScotch"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"Vincent6896"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"oneScotch"},"content":"/**","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"oneScotch"},"content":" * The main menu of the CodeHunt system.","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"oneScotch"},"content":" *","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"oneScotch"},"content":" * @author Wang Ruisi","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"oneScotch"},"content":" */","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"oneScotch"},"content":"public class GameMainMenu extends Menu {","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"oneScotch"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"oneScotch"},"content":"     * The {@code Scanner} for the menu to consume input.","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"oneScotch"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"Vincent6896"},"content":"    private final Scanner in;","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"Vincent6896"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"Vincent6896"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"oneScotch"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"Yuxinn-J"},"content":"     * Creates a new instance of the main menu.","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"oneScotch"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"oneScotch"},"content":"    public GameMainMenu(Scanner in) {","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"oneScotch"},"content":"        this.in \u003d in;","lastModifiedDate":"2021-10-10"},{"lineNumber":34,"author":{"gitId":"Vincent6896"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"Vincent6896"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"oneScotch"},"content":"    public void enter() {","lastModifiedDate":"2021-10-10"},{"lineNumber":37,"author":{"gitId":"oneScotch"},"content":"        welcome();","lastModifiedDate":"2021-10-10"},{"lineNumber":38,"author":{"gitId":"oneScotch"},"content":"        try {","lastModifiedDate":"2021-10-10"},{"lineNumber":39,"author":{"gitId":"oneScotch"},"content":"            while (true) {","lastModifiedDate":"2021-10-10"},{"lineNumber":40,"author":{"gitId":"oneScotch"},"content":"                prompt();","lastModifiedDate":"2021-10-10"},{"lineNumber":41,"author":{"gitId":"oneScotch"},"content":"                String command \u003d in.nextLine();","lastModifiedDate":"2021-10-10"},{"lineNumber":42,"author":{"gitId":"oneScotch"},"content":"                if (command.isBlank()) {","lastModifiedDate":"2021-10-10"},{"lineNumber":43,"author":{"gitId":"oneScotch"},"content":"                    continue;","lastModifiedDate":"2021-10-10"},{"lineNumber":44,"author":{"gitId":"oneScotch"},"content":"                }","lastModifiedDate":"2021-10-10"},{"lineNumber":45,"author":{"gitId":"oneScotch"},"content":"                StringParser parser \u003d new StringParser(command);","lastModifiedDate":"2021-10-10"},{"lineNumber":46,"author":{"gitId":"oneScotch"},"content":"                GameMainCommandType commandType \u003d GameMainCommandType.getCommandType(parser.nextToken());","lastModifiedDate":"2021-10-10"},{"lineNumber":47,"author":{"gitId":"oneScotch"},"content":"                if (commandType \u003d\u003d null) {","lastModifiedDate":"2021-10-10"},{"lineNumber":48,"author":{"gitId":"oneScotch"},"content":"                    Errors.print(parser.getString(), Strings.ERR_UNKNOWN_COMMAND);","lastModifiedDate":"2021-10-10"},{"lineNumber":49,"author":{"gitId":"oneScotch"},"content":"                    continue;","lastModifiedDate":"2021-10-10"},{"lineNumber":50,"author":{"gitId":"oneScotch"},"content":"                }","lastModifiedDate":"2021-10-10"},{"lineNumber":51,"author":{"gitId":"oneScotch"},"content":"                switch (commandType) {","lastModifiedDate":"2021-10-10"},{"lineNumber":52,"author":{"gitId":"oneScotch"},"content":"                case NEWGAME: {","lastModifiedDate":"2021-10-10"},{"lineNumber":53,"author":{"gitId":"oneScotch"},"content":"                    Player.loadPlayer();","lastModifiedDate":"2021-10-11"},{"lineNumber":54,"author":{"gitId":"Yuxinn-J"},"content":"                    GameMenu gameMenu \u003d new GameMenu(in, parser);","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"Yuxinn-J"},"content":"                    gameMenu.enter();","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"oneScotch"},"content":"                    break;","lastModifiedDate":"2021-10-10"},{"lineNumber":57,"author":{"gitId":"oneScotch"},"content":"                }","lastModifiedDate":"2021-10-10"},{"lineNumber":58,"author":{"gitId":"oneScotch"},"content":"                case CONTINUE: {","lastModifiedDate":"2021-10-10"},{"lineNumber":59,"author":{"gitId":"oneScotch"},"content":"                    String playerId \u003d IO.readString(in, Strings.MAIN_PLAYER_ID_ENTER_PROMPT).trim();","lastModifiedDate":"2021-10-11"},{"lineNumber":60,"author":{"gitId":"oneScotch"},"content":"                    assert playerId \u003d\u003d null : \"Nothing is inputted!!\";","lastModifiedDate":"2021-10-11"},{"lineNumber":61,"author":{"gitId":"oneScotch"},"content":"                    Player.loadPlayer(playerId);","lastModifiedDate":"2021-10-11"},{"lineNumber":62,"author":{"gitId":"Yuxinn-J"},"content":"                    GameMenu gameMenu \u003d new GameMenu(in, parser);","lastModifiedDate":"2021-10-12"},{"lineNumber":63,"author":{"gitId":"Yuxinn-J"},"content":"                    gameMenu.enter();","lastModifiedDate":"2021-10-12"},{"lineNumber":64,"author":{"gitId":"oneScotch"},"content":"                    break;","lastModifiedDate":"2021-10-10"},{"lineNumber":65,"author":{"gitId":"oneScotch"},"content":"                }","lastModifiedDate":"2021-10-10"},{"lineNumber":66,"author":{"gitId":"oneScotch"},"content":"                case HELP: {","lastModifiedDate":"2021-10-10"},{"lineNumber":67,"author":{"gitId":"oneScotch"},"content":"                    if (parser.hasMoreTokens()) {","lastModifiedDate":"2021-10-10"},{"lineNumber":68,"author":{"gitId":"oneScotch"},"content":"                        Errors.print(parser.getRemaining(), Strings.ERR_UNEXPECTED_INPUT);","lastModifiedDate":"2021-10-10"},{"lineNumber":69,"author":{"gitId":"oneScotch"},"content":"                        continue;","lastModifiedDate":"2021-10-10"},{"lineNumber":70,"author":{"gitId":"oneScotch"},"content":"                    }","lastModifiedDate":"2021-10-10"},{"lineNumber":71,"author":{"gitId":"oneScotch"},"content":"                    help();","lastModifiedDate":"2021-10-10"},{"lineNumber":72,"author":{"gitId":"oneScotch"},"content":"                    break;","lastModifiedDate":"2021-10-10"},{"lineNumber":73,"author":{"gitId":"oneScotch"},"content":"                }","lastModifiedDate":"2021-10-10"},{"lineNumber":74,"author":{"gitId":"oneScotch"},"content":"                case ABOUT: {","lastModifiedDate":"2021-10-10"},{"lineNumber":75,"author":{"gitId":"oneScotch"},"content":"                    if (parser.hasMoreTokens()) {","lastModifiedDate":"2021-10-10"},{"lineNumber":76,"author":{"gitId":"oneScotch"},"content":"                        Errors.print(parser.getRemaining(), Strings.ERR_UNEXPECTED_INPUT);","lastModifiedDate":"2021-10-10"},{"lineNumber":77,"author":{"gitId":"oneScotch"},"content":"                        continue;","lastModifiedDate":"2021-10-10"},{"lineNumber":78,"author":{"gitId":"oneScotch"},"content":"                    }","lastModifiedDate":"2021-10-10"},{"lineNumber":79,"author":{"gitId":"oneScotch"},"content":"                    about();","lastModifiedDate":"2021-10-10"},{"lineNumber":80,"author":{"gitId":"oneScotch"},"content":"                    break;","lastModifiedDate":"2021-10-10"},{"lineNumber":81,"author":{"gitId":"oneScotch"},"content":"                }","lastModifiedDate":"2021-10-10"},{"lineNumber":82,"author":{"gitId":"oneScotch"},"content":"                case EXIT: {","lastModifiedDate":"2021-10-10"},{"lineNumber":83,"author":{"gitId":"oneScotch"},"content":"                    if (parser.hasMoreTokens()) {","lastModifiedDate":"2021-10-10"},{"lineNumber":84,"author":{"gitId":"oneScotch"},"content":"                        Errors.print(parser.getRemaining(), Strings.ERR_UNEXPECTED_INPUT);","lastModifiedDate":"2021-10-10"},{"lineNumber":85,"author":{"gitId":"oneScotch"},"content":"                        continue;","lastModifiedDate":"2021-10-10"},{"lineNumber":86,"author":{"gitId":"oneScotch"},"content":"                    }","lastModifiedDate":"2021-10-10"},{"lineNumber":87,"author":{"gitId":"oneScotch"},"content":"                    exit(true);","lastModifiedDate":"2021-10-10"},{"lineNumber":88,"author":{"gitId":"oneScotch"},"content":"                    return;","lastModifiedDate":"2021-10-10"},{"lineNumber":89,"author":{"gitId":"oneScotch"},"content":"                }","lastModifiedDate":"2021-10-10"},{"lineNumber":90,"author":{"gitId":"oneScotch"},"content":"                default: {","lastModifiedDate":"2021-10-10"},{"lineNumber":91,"author":{"gitId":"oneScotch"},"content":"                    break;","lastModifiedDate":"2021-10-10"},{"lineNumber":92,"author":{"gitId":"oneScotch"},"content":"                }","lastModifiedDate":"2021-10-10"},{"lineNumber":93,"author":{"gitId":"oneScotch"},"content":"                }","lastModifiedDate":"2021-10-10"},{"lineNumber":94,"author":{"gitId":"oneScotch"},"content":"            }","lastModifiedDate":"2021-10-10"},{"lineNumber":95,"author":{"gitId":"oneScotch"},"content":"        } catch (NoSuchElementException e) {","lastModifiedDate":"2021-10-10"},{"lineNumber":96,"author":{"gitId":"oneScotch"},"content":"            exit(false);","lastModifiedDate":"2021-10-10"},{"lineNumber":97,"author":{"gitId":"oneScotch"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":98,"author":{"gitId":"Vincent6896"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":99,"author":{"gitId":"Vincent6896"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":100,"author":{"gitId":"oneScotch"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":101,"author":{"gitId":"oneScotch"},"content":"     * Displays the welcome message.","lastModifiedDate":"2021-10-10"},{"lineNumber":102,"author":{"gitId":"oneScotch"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":103,"author":{"gitId":"oneScotch"},"content":"    private void welcome() {","lastModifiedDate":"2021-10-10"},{"lineNumber":104,"author":{"gitId":"oneScotch"},"content":"        System.out.println(Strings.MAIN_WELCOME_MESSAGE);","lastModifiedDate":"2021-10-10"},{"lineNumber":105,"author":{"gitId":"oneScotch"},"content":"        System.out.println();","lastModifiedDate":"2021-10-10"},{"lineNumber":106,"author":{"gitId":"Vincent6896"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":107,"author":{"gitId":"Vincent6896"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":108,"author":{"gitId":"oneScotch"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":109,"author":{"gitId":"oneScotch"},"content":"     * Displays the prompt of the menu.","lastModifiedDate":"2021-10-10"},{"lineNumber":110,"author":{"gitId":"oneScotch"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":111,"author":{"gitId":"oneScotch"},"content":"    private void prompt() {","lastModifiedDate":"2021-10-10"},{"lineNumber":112,"author":{"gitId":"oneScotch"},"content":"        System.out.print(Strings.MAIN_PROMPT);","lastModifiedDate":"2021-10-10"},{"lineNumber":113,"author":{"gitId":"oneScotch"},"content":"        System.out.flush();","lastModifiedDate":"2021-10-10"},{"lineNumber":114,"author":{"gitId":"Vincent6896"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":115,"author":{"gitId":"Vincent6896"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":116,"author":{"gitId":"oneScotch"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":117,"author":{"gitId":"oneScotch"},"content":"     * The handler for command \"help\". Displays help message consisting of commands","lastModifiedDate":"2021-10-10"},{"lineNumber":118,"author":{"gitId":"oneScotch"},"content":"     * available and their corresponding details.","lastModifiedDate":"2021-10-10"},{"lineNumber":119,"author":{"gitId":"oneScotch"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":120,"author":{"gitId":"oneScotch"},"content":"    private void help() {","lastModifiedDate":"2021-10-10"},{"lineNumber":121,"author":{"gitId":"oneScotch"},"content":"        for (GameMainCommandType commandType : GameMainCommandType.values()) {","lastModifiedDate":"2021-10-10"},{"lineNumber":122,"author":{"gitId":"oneScotch"},"content":"            System.out.printf(\"%-12s%s\\n\", commandType.getCommand(), commandType.getInfo());","lastModifiedDate":"2021-10-10"},{"lineNumber":123,"author":{"gitId":"Vincent6896"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":124,"author":{"gitId":"oneScotch"},"content":"        System.out.println();","lastModifiedDate":"2021-10-10"},{"lineNumber":125,"author":{"gitId":"Vincent6896"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":126,"author":{"gitId":"Vincent6896"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":127,"author":{"gitId":"oneScotch"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":128,"author":{"gitId":"oneScotch"},"content":"     * The handler for command \"about\". Displays information about the system.","lastModifiedDate":"2021-10-10"},{"lineNumber":129,"author":{"gitId":"oneScotch"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":130,"author":{"gitId":"oneScotch"},"content":"    private void about() {","lastModifiedDate":"2021-10-10"},{"lineNumber":131,"author":{"gitId":"oneScotch"},"content":"        System.out.println(Strings.MAIN_ABOUT_MESSAGE);","lastModifiedDate":"2021-10-10"},{"lineNumber":132,"author":{"gitId":"oneScotch"},"content":"        System.out.println();","lastModifiedDate":"2021-10-10"},{"lineNumber":133,"author":{"gitId":"Vincent6896"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":134,"author":{"gitId":"Vincent6896"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":135,"author":{"gitId":"Vincent6896"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":136,"author":{"gitId":"oneScotch"},"content":"     * The handler for command \"exit\". Does all necessary cleanups before the exit.","lastModifiedDate":"2021-10-10"},{"lineNumber":137,"author":{"gitId":"oneScotch"},"content":"     * Note that the exit does not happen here. It is done by the {@code return}","lastModifiedDate":"2021-10-10"},{"lineNumber":138,"author":{"gitId":"oneScotch"},"content":"     * statement under the {@link #enter()} method.","lastModifiedDate":"2021-10-10"},{"lineNumber":139,"author":{"gitId":"oneScotch"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":140,"author":{"gitId":"oneScotch"},"content":"     * @param promptToSave whether to prompt to save the current state or not","lastModifiedDate":"2021-10-10"},{"lineNumber":141,"author":{"gitId":"Vincent6896"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":142,"author":{"gitId":"oneScotch"},"content":"    public void exit(boolean promptToSave) {","lastModifiedDate":"2021-10-10"},{"lineNumber":143,"author":{"gitId":"oneScotch"},"content":"        // TODO: Implement \"prompt to save\" functionality","lastModifiedDate":"2021-10-10"},{"lineNumber":144,"author":{"gitId":"oneScotch"},"content":"        System.out.println(Strings.MAIN_EXIT_MESSAGE);","lastModifiedDate":"2021-10-10"},{"lineNumber":145,"author":{"gitId":"oneScotch"},"content":"        System.out.println();","lastModifiedDate":"2021-10-10"},{"lineNumber":146,"author":{"gitId":"oneScotch"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":147,"author":{"gitId":"Vincent6896"},"content":"}","lastModifiedDate":"2021-10-07"},{"lineNumber":148,"author":{"gitId":"oneScotch"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":149,"author":{"gitId":"oneScotch"},"content":"","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"Yuxinn-J":6,"oneScotch":120,"Mist0919":1,"Vincent6896":22}},{"path":"src/main/java/utils/Errors.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"oneScotch"},"content":"package utils;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"oneScotch"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"oneScotch"},"content":"/**","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"oneScotch"},"content":" * Error-related utilities.","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"oneScotch"},"content":" */","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"oneScotch"},"content":"public class Errors {","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"oneScotch"},"content":"    private Errors() {","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"oneScotch"},"content":"        // Disallow instantiation","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"oneScotch"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"oneScotch"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"oneScotch"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"oneScotch"},"content":"     * Prints out an error message.","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"oneScotch"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"oneScotch"},"content":"     * @param errorMessage the error message","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"oneScotch"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"oneScotch"},"content":"    public static void print(String errorMessage) {","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"oneScotch"},"content":"        print(errorMessage, true);","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"oneScotch"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"oneScotch"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"oneScotch"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"oneScotch"},"content":"     * Prints out an error message.","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"oneScotch"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"oneScotch"},"content":"     * @param errorMessage  the error message","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"oneScotch"},"content":"     * @param appendNewLine whether a new line is appended or not","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"oneScotch"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"oneScotch"},"content":"    public static void print(String errorMessage, boolean appendNewLine) {","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"oneScotch"},"content":"        System.err.println(errorMessage);","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"oneScotch"},"content":"        if (appendNewLine) {","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"oneScotch"},"content":"            System.err.println();","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"oneScotch"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":31,"author":{"gitId":"oneScotch"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"oneScotch"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"oneScotch"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":34,"author":{"gitId":"oneScotch"},"content":"     * Prints out an error message with the original erroneous command.","lastModifiedDate":"2021-10-10"},{"lineNumber":35,"author":{"gitId":"oneScotch"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":36,"author":{"gitId":"oneScotch"},"content":"     * @param source       the original erroneous command","lastModifiedDate":"2021-10-10"},{"lineNumber":37,"author":{"gitId":"oneScotch"},"content":"     * @param errorMessage the error message","lastModifiedDate":"2021-10-10"},{"lineNumber":38,"author":{"gitId":"oneScotch"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":39,"author":{"gitId":"oneScotch"},"content":"    public static void print(String source, String errorMessage) {","lastModifiedDate":"2021-10-10"},{"lineNumber":40,"author":{"gitId":"oneScotch"},"content":"        print(source, errorMessage, true);","lastModifiedDate":"2021-10-10"},{"lineNumber":41,"author":{"gitId":"oneScotch"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":42,"author":{"gitId":"oneScotch"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":43,"author":{"gitId":"oneScotch"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":44,"author":{"gitId":"oneScotch"},"content":"     * Prints out an error message with the original erroneous command.","lastModifiedDate":"2021-10-10"},{"lineNumber":45,"author":{"gitId":"oneScotch"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":46,"author":{"gitId":"oneScotch"},"content":"     * @param source        the original erroneous command","lastModifiedDate":"2021-10-10"},{"lineNumber":47,"author":{"gitId":"oneScotch"},"content":"     * @param errorMessage  the error message","lastModifiedDate":"2021-10-10"},{"lineNumber":48,"author":{"gitId":"oneScotch"},"content":"     * @param appendNewLine whether a new line is appended or not","lastModifiedDate":"2021-10-10"},{"lineNumber":49,"author":{"gitId":"oneScotch"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":50,"author":{"gitId":"oneScotch"},"content":"    public static void print(String source, String errorMessage, boolean appendNewLine) {","lastModifiedDate":"2021-10-10"},{"lineNumber":51,"author":{"gitId":"oneScotch"},"content":"        System.err.printf(\"%s: %s\\n\", source, errorMessage);","lastModifiedDate":"2021-10-10"},{"lineNumber":52,"author":{"gitId":"oneScotch"},"content":"        System.err.println();","lastModifiedDate":"2021-10-10"},{"lineNumber":53,"author":{"gitId":"oneScotch"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":54,"author":{"gitId":"oneScotch"},"content":"}","lastModifiedDate":"2021-10-10"},{"lineNumber":55,"author":{"gitId":"oneScotch"},"content":"","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"oneScotch":55}},{"path":"src/main/java/utils/IO.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"oneScotch"},"content":"package utils;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"oneScotch"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"oneScotch"},"content":"import utils.message.Strings;","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"oneScotch"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"oneScotch"},"content":"import java.text.ParseException;","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"oneScotch"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"oneScotch"},"content":"import java.util.Date;","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"oneScotch"},"content":"import java.util.InputMismatchException;","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"oneScotch"},"content":"import java.util.NoSuchElementException;","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"oneScotch"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"oneScotch"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"oneScotch"},"content":"/**","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"oneScotch"},"content":" * IO utilities.","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"oneScotch"},"content":" */","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"oneScotch"},"content":"public class IO {","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"oneScotch"},"content":"    private IO() {","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"oneScotch"},"content":"        // Disallow instantiation","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"oneScotch"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"oneScotch"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"oneScotch"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"oneScotch"},"content":"     * Reads a non-empty string from the {@code Scanner} provided.","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"oneScotch"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"oneScotch"},"content":"     * @param in     the {@code Scanner} from which input is read","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"oneScotch"},"content":"     * @param prompt the prompt to show","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"oneScotch"},"content":"     * @return the string read","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"oneScotch"},"content":"     * @throws NoSuchElementException if input is exhausted","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"oneScotch"},"content":"     * @throws IllegalStateException  if this scanner is closed","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"oneScotch"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"oneScotch"},"content":"    public static String readString(Scanner in, String prompt) throws NoSuchElementException, IllegalStateException {","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"oneScotch"},"content":"        String result \u003d null;","lastModifiedDate":"2021-10-10"},{"lineNumber":31,"author":{"gitId":"oneScotch"},"content":"        while (true) {","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"oneScotch"},"content":"            System.out.print(prompt);","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"oneScotch"},"content":"            result \u003d in.nextLine().trim();","lastModifiedDate":"2021-10-10"},{"lineNumber":34,"author":{"gitId":"oneScotch"},"content":"            if (!result.isBlank()) {","lastModifiedDate":"2021-10-10"},{"lineNumber":35,"author":{"gitId":"oneScotch"},"content":"                break;","lastModifiedDate":"2021-10-10"},{"lineNumber":36,"author":{"gitId":"oneScotch"},"content":"            }","lastModifiedDate":"2021-10-10"},{"lineNumber":37,"author":{"gitId":"oneScotch"},"content":"            Errors.print(Strings.ERR_EMPTY_STRING, false);","lastModifiedDate":"2021-10-10"},{"lineNumber":38,"author":{"gitId":"oneScotch"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":39,"author":{"gitId":"oneScotch"},"content":"        return result;","lastModifiedDate":"2021-10-10"},{"lineNumber":40,"author":{"gitId":"oneScotch"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":41,"author":{"gitId":"oneScotch"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":42,"author":{"gitId":"oneScotch"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":43,"author":{"gitId":"oneScotch"},"content":"     * Reads a string matching one of the available pre-defined values from the","lastModifiedDate":"2021-10-10"},{"lineNumber":44,"author":{"gitId":"oneScotch"},"content":"     * {@code Scanner} provided. Matching is case insensitive.","lastModifiedDate":"2021-10-10"},{"lineNumber":45,"author":{"gitId":"oneScotch"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":46,"author":{"gitId":"oneScotch"},"content":"     * @param in     the {@code Scanner} from which input is read","lastModifiedDate":"2021-10-10"},{"lineNumber":47,"author":{"gitId":"oneScotch"},"content":"     * @param prompt the prompt to show","lastModifiedDate":"2021-10-10"},{"lineNumber":48,"author":{"gitId":"oneScotch"},"content":"     * @return the string read","lastModifiedDate":"2021-10-10"},{"lineNumber":49,"author":{"gitId":"oneScotch"},"content":"     * @throws NoSuchElementException if input is exhausted, or the list of","lastModifiedDate":"2021-10-10"},{"lineNumber":50,"author":{"gitId":"oneScotch"},"content":"     *                                available strings is empty","lastModifiedDate":"2021-10-10"},{"lineNumber":51,"author":{"gitId":"oneScotch"},"content":"     * @throws IllegalStateException  if this scanner is closed","lastModifiedDate":"2021-10-10"},{"lineNumber":52,"author":{"gitId":"oneScotch"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":53,"author":{"gitId":"oneScotch"},"content":"    public static String readStringFromAvailable(Scanner in, String prompt, String[] available)","lastModifiedDate":"2021-10-10"},{"lineNumber":54,"author":{"gitId":"oneScotch"},"content":"            throws NoSuchElementException, IllegalStateException {","lastModifiedDate":"2021-10-10"},{"lineNumber":55,"author":{"gitId":"oneScotch"},"content":"        String result \u003d null;","lastModifiedDate":"2021-10-10"},{"lineNumber":56,"author":{"gitId":"oneScotch"},"content":"        while (true) {","lastModifiedDate":"2021-10-10"},{"lineNumber":57,"author":{"gitId":"oneScotch"},"content":"            result \u003d readString(in, prompt);","lastModifiedDate":"2021-10-10"},{"lineNumber":58,"author":{"gitId":"oneScotch"},"content":"            boolean matched \u003d false;","lastModifiedDate":"2021-10-10"},{"lineNumber":59,"author":{"gitId":"oneScotch"},"content":"            for (String str : available) {","lastModifiedDate":"2021-10-10"},{"lineNumber":60,"author":{"gitId":"oneScotch"},"content":"                if (result.toLowerCase().equals(str.toLowerCase())) {","lastModifiedDate":"2021-10-10"},{"lineNumber":61,"author":{"gitId":"oneScotch"},"content":"                    matched \u003d true;","lastModifiedDate":"2021-10-10"},{"lineNumber":62,"author":{"gitId":"oneScotch"},"content":"                    break;","lastModifiedDate":"2021-10-10"},{"lineNumber":63,"author":{"gitId":"oneScotch"},"content":"                }","lastModifiedDate":"2021-10-10"},{"lineNumber":64,"author":{"gitId":"oneScotch"},"content":"            }","lastModifiedDate":"2021-10-10"},{"lineNumber":65,"author":{"gitId":"oneScotch"},"content":"            if (matched) {","lastModifiedDate":"2021-10-10"},{"lineNumber":66,"author":{"gitId":"oneScotch"},"content":"                break;","lastModifiedDate":"2021-10-10"},{"lineNumber":67,"author":{"gitId":"oneScotch"},"content":"            }","lastModifiedDate":"2021-10-10"},{"lineNumber":68,"author":{"gitId":"oneScotch"},"content":"            Errors.print(Strings.ERR_UNKNOWN_INPUT, false);","lastModifiedDate":"2021-10-10"},{"lineNumber":69,"author":{"gitId":"oneScotch"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":70,"author":{"gitId":"oneScotch"},"content":"        return result;","lastModifiedDate":"2021-10-10"},{"lineNumber":71,"author":{"gitId":"oneScotch"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":72,"author":{"gitId":"oneScotch"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":73,"author":{"gitId":"oneScotch"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":74,"author":{"gitId":"oneScotch"},"content":"     * Reads an integer from the {@code Scanner} provided.","lastModifiedDate":"2021-10-10"},{"lineNumber":75,"author":{"gitId":"oneScotch"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":76,"author":{"gitId":"oneScotch"},"content":"     * @param in     the {@code Scanner} from which input is read","lastModifiedDate":"2021-10-10"},{"lineNumber":77,"author":{"gitId":"oneScotch"},"content":"     * @param prompt the prompt to show","lastModifiedDate":"2021-10-10"},{"lineNumber":78,"author":{"gitId":"oneScotch"},"content":"     * @return the integer read","lastModifiedDate":"2021-10-10"},{"lineNumber":79,"author":{"gitId":"oneScotch"},"content":"     * @throws NoSuchElementException if input is exhausted","lastModifiedDate":"2021-10-10"},{"lineNumber":80,"author":{"gitId":"oneScotch"},"content":"     * @throws IllegalStateException  if this scanner is closed","lastModifiedDate":"2021-10-10"},{"lineNumber":81,"author":{"gitId":"oneScotch"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":82,"author":{"gitId":"oneScotch"},"content":"    public static int readInt(Scanner in, String prompt) throws NoSuchElementException, IllegalStateException {","lastModifiedDate":"2021-10-10"},{"lineNumber":83,"author":{"gitId":"oneScotch"},"content":"        int result \u003d 0;","lastModifiedDate":"2021-10-10"},{"lineNumber":84,"author":{"gitId":"oneScotch"},"content":"        while (true) {","lastModifiedDate":"2021-10-10"},{"lineNumber":85,"author":{"gitId":"oneScotch"},"content":"            try {","lastModifiedDate":"2021-10-10"},{"lineNumber":86,"author":{"gitId":"oneScotch"},"content":"                System.out.print(prompt);","lastModifiedDate":"2021-10-10"},{"lineNumber":87,"author":{"gitId":"oneScotch"},"content":"                result \u003d in.nextInt();","lastModifiedDate":"2021-10-10"},{"lineNumber":88,"author":{"gitId":"oneScotch"},"content":"                in.nextLine();","lastModifiedDate":"2021-10-10"},{"lineNumber":89,"author":{"gitId":"oneScotch"},"content":"                break;","lastModifiedDate":"2021-10-10"},{"lineNumber":90,"author":{"gitId":"oneScotch"},"content":"            } catch (InputMismatchException ime) {","lastModifiedDate":"2021-10-10"},{"lineNumber":91,"author":{"gitId":"oneScotch"},"content":"                in.nextLine();","lastModifiedDate":"2021-10-10"},{"lineNumber":92,"author":{"gitId":"oneScotch"},"content":"                Errors.print(Strings.ERR_INPUT_MISMATCH_INT_EXPECTED, false);","lastModifiedDate":"2021-10-10"},{"lineNumber":93,"author":{"gitId":"oneScotch"},"content":"            }","lastModifiedDate":"2021-10-10"},{"lineNumber":94,"author":{"gitId":"oneScotch"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":95,"author":{"gitId":"oneScotch"},"content":"        return result;","lastModifiedDate":"2021-10-10"},{"lineNumber":96,"author":{"gitId":"oneScotch"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":97,"author":{"gitId":"oneScotch"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":98,"author":{"gitId":"oneScotch"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":99,"author":{"gitId":"oneScotch"},"content":"     * Reads a double from the {@code Scanner} provided.","lastModifiedDate":"2021-10-10"},{"lineNumber":100,"author":{"gitId":"oneScotch"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":101,"author":{"gitId":"oneScotch"},"content":"     * @param in     the {@code Scanner} from which input is read","lastModifiedDate":"2021-10-10"},{"lineNumber":102,"author":{"gitId":"oneScotch"},"content":"     * @param prompt the prompt to show","lastModifiedDate":"2021-10-10"},{"lineNumber":103,"author":{"gitId":"oneScotch"},"content":"     * @return the double read","lastModifiedDate":"2021-10-10"},{"lineNumber":104,"author":{"gitId":"oneScotch"},"content":"     * @throws NoSuchElementException if input is exhausted","lastModifiedDate":"2021-10-10"},{"lineNumber":105,"author":{"gitId":"oneScotch"},"content":"     * @throws IllegalStateException  if this scanner is closed","lastModifiedDate":"2021-10-10"},{"lineNumber":106,"author":{"gitId":"oneScotch"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":107,"author":{"gitId":"oneScotch"},"content":"    public static double readDouble(Scanner in, String prompt) throws NoSuchElementException, IllegalStateException {","lastModifiedDate":"2021-10-10"},{"lineNumber":108,"author":{"gitId":"oneScotch"},"content":"        double result \u003d 0;","lastModifiedDate":"2021-10-10"},{"lineNumber":109,"author":{"gitId":"oneScotch"},"content":"        while (true) {","lastModifiedDate":"2021-10-10"},{"lineNumber":110,"author":{"gitId":"oneScotch"},"content":"            try {","lastModifiedDate":"2021-10-10"},{"lineNumber":111,"author":{"gitId":"oneScotch"},"content":"                System.out.print(prompt);","lastModifiedDate":"2021-10-10"},{"lineNumber":112,"author":{"gitId":"oneScotch"},"content":"                result \u003d in.nextDouble();","lastModifiedDate":"2021-10-10"},{"lineNumber":113,"author":{"gitId":"oneScotch"},"content":"                in.nextLine();","lastModifiedDate":"2021-10-10"},{"lineNumber":114,"author":{"gitId":"oneScotch"},"content":"                break;","lastModifiedDate":"2021-10-10"},{"lineNumber":115,"author":{"gitId":"oneScotch"},"content":"            } catch (InputMismatchException ime) {","lastModifiedDate":"2021-10-10"},{"lineNumber":116,"author":{"gitId":"oneScotch"},"content":"                in.nextLine();","lastModifiedDate":"2021-10-10"},{"lineNumber":117,"author":{"gitId":"oneScotch"},"content":"                Errors.print(Strings.ERR_INPUT_MISMATCH_DOUBLE_EXPECTED, false);","lastModifiedDate":"2021-10-10"},{"lineNumber":118,"author":{"gitId":"oneScotch"},"content":"            }","lastModifiedDate":"2021-10-10"},{"lineNumber":119,"author":{"gitId":"oneScotch"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":120,"author":{"gitId":"oneScotch"},"content":"        return result;","lastModifiedDate":"2021-10-10"},{"lineNumber":121,"author":{"gitId":"oneScotch"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":122,"author":{"gitId":"oneScotch"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":123,"author":{"gitId":"oneScotch"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":124,"author":{"gitId":"oneScotch"},"content":"     * Reads a boolean from the {@code Scanner} provided.","lastModifiedDate":"2021-10-10"},{"lineNumber":125,"author":{"gitId":"oneScotch"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":126,"author":{"gitId":"oneScotch"},"content":"     * @param in     the {@code Scanner} from which input is read","lastModifiedDate":"2021-10-10"},{"lineNumber":127,"author":{"gitId":"oneScotch"},"content":"     * @param prompt the prompt to show","lastModifiedDate":"2021-10-10"},{"lineNumber":128,"author":{"gitId":"oneScotch"},"content":"     * @return the boolean read","lastModifiedDate":"2021-10-10"},{"lineNumber":129,"author":{"gitId":"oneScotch"},"content":"     * @throws NoSuchElementException if input is exhausted","lastModifiedDate":"2021-10-10"},{"lineNumber":130,"author":{"gitId":"oneScotch"},"content":"     * @throws IllegalStateException  if this scanner is closed","lastModifiedDate":"2021-10-10"},{"lineNumber":131,"author":{"gitId":"oneScotch"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":132,"author":{"gitId":"oneScotch"},"content":"    public static boolean readBoolean(Scanner in, String prompt) throws NoSuchElementException, IllegalStateException {","lastModifiedDate":"2021-10-10"},{"lineNumber":133,"author":{"gitId":"oneScotch"},"content":"        String input \u003d null;","lastModifiedDate":"2021-10-10"},{"lineNumber":134,"author":{"gitId":"oneScotch"},"content":"        while (true) {","lastModifiedDate":"2021-10-10"},{"lineNumber":135,"author":{"gitId":"oneScotch"},"content":"            input \u003d readString(in, prompt);","lastModifiedDate":"2021-10-10"},{"lineNumber":136,"author":{"gitId":"oneScotch"},"content":"            if (input.toLowerCase().equals(\"y\") || input.toLowerCase().equals(\"n\")) {","lastModifiedDate":"2021-10-10"},{"lineNumber":137,"author":{"gitId":"oneScotch"},"content":"                break;","lastModifiedDate":"2021-10-10"},{"lineNumber":138,"author":{"gitId":"oneScotch"},"content":"            }","lastModifiedDate":"2021-10-10"},{"lineNumber":139,"author":{"gitId":"oneScotch"},"content":"            Errors.print(Strings.ERR_BOOLEAN_INPUT, false);","lastModifiedDate":"2021-10-10"},{"lineNumber":140,"author":{"gitId":"oneScotch"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":141,"author":{"gitId":"oneScotch"},"content":"        return input.toLowerCase().equals(\"y\");","lastModifiedDate":"2021-10-10"},{"lineNumber":142,"author":{"gitId":"oneScotch"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":143,"author":{"gitId":"oneScotch"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":144,"author":{"gitId":"oneScotch"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":145,"author":{"gitId":"oneScotch"},"content":"     * Reads a date from the {@code Scanner} provided.","lastModifiedDate":"2021-10-10"},{"lineNumber":146,"author":{"gitId":"oneScotch"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":147,"author":{"gitId":"oneScotch"},"content":"     * @param in      the {@code Scanner} from which input is read","lastModifiedDate":"2021-10-10"},{"lineNumber":148,"author":{"gitId":"oneScotch"},"content":"     * @param prompt  the prompt to show","lastModifiedDate":"2021-10-10"},{"lineNumber":149,"author":{"gitId":"oneScotch"},"content":"     * @param pattern the pattern of the date string","lastModifiedDate":"2021-10-10"},{"lineNumber":150,"author":{"gitId":"oneScotch"},"content":"     * @return the date read, or {@code null} if the pattern is invalid","lastModifiedDate":"2021-10-10"},{"lineNumber":151,"author":{"gitId":"oneScotch"},"content":"     * @throws NoSuchElementException if input is exhausted","lastModifiedDate":"2021-10-10"},{"lineNumber":152,"author":{"gitId":"oneScotch"},"content":"     * @throws IllegalStateException  if this scanner is closed","lastModifiedDate":"2021-10-10"},{"lineNumber":153,"author":{"gitId":"oneScotch"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":154,"author":{"gitId":"oneScotch"},"content":"    public static Date readDate(Scanner in, String prompt, String pattern)","lastModifiedDate":"2021-10-10"},{"lineNumber":155,"author":{"gitId":"oneScotch"},"content":"            throws NoSuchElementException, IllegalStateException {","lastModifiedDate":"2021-10-10"},{"lineNumber":156,"author":{"gitId":"oneScotch"},"content":"        SimpleDateFormat sdf;","lastModifiedDate":"2021-10-10"},{"lineNumber":157,"author":{"gitId":"oneScotch"},"content":"        try {","lastModifiedDate":"2021-10-10"},{"lineNumber":158,"author":{"gitId":"oneScotch"},"content":"            sdf \u003d new SimpleDateFormat(pattern);","lastModifiedDate":"2021-10-10"},{"lineNumber":159,"author":{"gitId":"oneScotch"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2021-10-10"},{"lineNumber":160,"author":{"gitId":"oneScotch"},"content":"            return null;","lastModifiedDate":"2021-10-10"},{"lineNumber":161,"author":{"gitId":"oneScotch"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":162,"author":{"gitId":"oneScotch"},"content":"        while (true) {","lastModifiedDate":"2021-10-10"},{"lineNumber":163,"author":{"gitId":"oneScotch"},"content":"            String input \u003d readString(in, prompt);","lastModifiedDate":"2021-10-10"},{"lineNumber":164,"author":{"gitId":"oneScotch"},"content":"            try {","lastModifiedDate":"2021-10-10"},{"lineNumber":165,"author":{"gitId":"oneScotch"},"content":"                return sdf.parse(input);","lastModifiedDate":"2021-10-10"},{"lineNumber":166,"author":{"gitId":"oneScotch"},"content":"            } catch (ParseException e) {","lastModifiedDate":"2021-10-10"},{"lineNumber":167,"author":{"gitId":"oneScotch"},"content":"                Errors.print(Strings.ERR_DATE_INPUT, false);","lastModifiedDate":"2021-10-10"},{"lineNumber":168,"author":{"gitId":"oneScotch"},"content":"            }","lastModifiedDate":"2021-10-10"},{"lineNumber":169,"author":{"gitId":"oneScotch"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":170,"author":{"gitId":"oneScotch"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":171,"author":{"gitId":"oneScotch"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":172,"author":{"gitId":"oneScotch"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":173,"author":{"gitId":"Vincent6896"},"content":"     * Reads a time string from the {@code Scanner} provided.","lastModifiedDate":"2021-10-14"},{"lineNumber":174,"author":{"gitId":"oneScotch"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":175,"author":{"gitId":"oneScotch"},"content":"     * @param in      the {@code Scanner} from which input is read","lastModifiedDate":"2021-10-10"},{"lineNumber":176,"author":{"gitId":"oneScotch"},"content":"     * @param prompt  the prompt to show","lastModifiedDate":"2021-10-10"},{"lineNumber":177,"author":{"gitId":"Vincent6896"},"content":"     * @param pattern the pattern of the time string","lastModifiedDate":"2021-10-14"},{"lineNumber":178,"author":{"gitId":"Vincent6896"},"content":"     * @return the time string read, or {@code null} if the pattern is invalid","lastModifiedDate":"2021-10-14"},{"lineNumber":179,"author":{"gitId":"oneScotch"},"content":"     * @throws NoSuchElementException if input is exhausted","lastModifiedDate":"2021-10-10"},{"lineNumber":180,"author":{"gitId":"oneScotch"},"content":"     * @throws IllegalStateException  if this scanner is closed","lastModifiedDate":"2021-10-10"},{"lineNumber":181,"author":{"gitId":"oneScotch"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":182,"author":{"gitId":"Vincent6896"},"content":"    public static String readTimeString(Scanner in, String prompt, String pattern)","lastModifiedDate":"2021-10-14"},{"lineNumber":183,"author":{"gitId":"oneScotch"},"content":"            throws NoSuchElementException, IllegalStateException {","lastModifiedDate":"2021-10-10"},{"lineNumber":184,"author":{"gitId":"oneScotch"},"content":"        SimpleDateFormat sdf;","lastModifiedDate":"2021-10-10"},{"lineNumber":185,"author":{"gitId":"oneScotch"},"content":"        try {","lastModifiedDate":"2021-10-10"},{"lineNumber":186,"author":{"gitId":"oneScotch"},"content":"            sdf \u003d new SimpleDateFormat(pattern);","lastModifiedDate":"2021-10-10"},{"lineNumber":187,"author":{"gitId":"oneScotch"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2021-10-10"},{"lineNumber":188,"author":{"gitId":"oneScotch"},"content":"            return null;","lastModifiedDate":"2021-10-10"},{"lineNumber":189,"author":{"gitId":"oneScotch"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":190,"author":{"gitId":"oneScotch"},"content":"        while (true) {","lastModifiedDate":"2021-10-10"},{"lineNumber":191,"author":{"gitId":"oneScotch"},"content":"            String input \u003d readString(in, prompt);","lastModifiedDate":"2021-10-10"},{"lineNumber":192,"author":{"gitId":"oneScotch"},"content":"            try {","lastModifiedDate":"2021-10-10"},{"lineNumber":193,"author":{"gitId":"oneScotch"},"content":"                sdf.parse(input);","lastModifiedDate":"2021-10-10"},{"lineNumber":194,"author":{"gitId":"oneScotch"},"content":"                return input;","lastModifiedDate":"2021-10-10"},{"lineNumber":195,"author":{"gitId":"oneScotch"},"content":"            } catch (ParseException e) {","lastModifiedDate":"2021-10-10"},{"lineNumber":196,"author":{"gitId":"Vincent6896"},"content":"                Errors.print(Strings.ERR_TIME_INPUT, false);","lastModifiedDate":"2021-10-14"},{"lineNumber":197,"author":{"gitId":"oneScotch"},"content":"            }","lastModifiedDate":"2021-10-10"},{"lineNumber":198,"author":{"gitId":"oneScotch"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":199,"author":{"gitId":"oneScotch"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":200,"author":{"gitId":"oneScotch"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":201,"author":{"gitId":"oneScotch"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":202,"author":{"gitId":"Vincent6896"},"content":"     * Reads a date string from the {@code Scanner} provided.","lastModifiedDate":"2021-10-14"},{"lineNumber":203,"author":{"gitId":"oneScotch"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":204,"author":{"gitId":"oneScotch"},"content":"     * @param in      the {@code Scanner} from which input is read","lastModifiedDate":"2021-10-10"},{"lineNumber":205,"author":{"gitId":"oneScotch"},"content":"     * @param prompt  the prompt to show","lastModifiedDate":"2021-10-10"},{"lineNumber":206,"author":{"gitId":"Vincent6896"},"content":"     * @param pattern the pattern of the date string","lastModifiedDate":"2021-10-14"},{"lineNumber":207,"author":{"gitId":"Vincent6896"},"content":"     * @return the date string read, or {@code null} if the pattern is invalid","lastModifiedDate":"2021-10-14"},{"lineNumber":208,"author":{"gitId":"oneScotch"},"content":"     * @throws NoSuchElementException if input is exhausted","lastModifiedDate":"2021-10-10"},{"lineNumber":209,"author":{"gitId":"oneScotch"},"content":"     * @throws IllegalStateException  if this scanner is closed","lastModifiedDate":"2021-10-10"},{"lineNumber":210,"author":{"gitId":"oneScotch"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":211,"author":{"gitId":"Vincent6896"},"content":"    public static String readDateString(Scanner in, String prompt, String pattern)","lastModifiedDate":"2021-10-14"},{"lineNumber":212,"author":{"gitId":"oneScotch"},"content":"        throws NoSuchElementException, IllegalStateException {","lastModifiedDate":"2021-10-10"},{"lineNumber":213,"author":{"gitId":"oneScotch"},"content":"        SimpleDateFormat sdf;","lastModifiedDate":"2021-10-10"},{"lineNumber":214,"author":{"gitId":"oneScotch"},"content":"        try {","lastModifiedDate":"2021-10-10"},{"lineNumber":215,"author":{"gitId":"oneScotch"},"content":"            sdf \u003d new SimpleDateFormat(pattern);","lastModifiedDate":"2021-10-10"},{"lineNumber":216,"author":{"gitId":"oneScotch"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2021-10-10"},{"lineNumber":217,"author":{"gitId":"oneScotch"},"content":"            return null;","lastModifiedDate":"2021-10-10"},{"lineNumber":218,"author":{"gitId":"oneScotch"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":219,"author":{"gitId":"oneScotch"},"content":"        while (true) {","lastModifiedDate":"2021-10-10"},{"lineNumber":220,"author":{"gitId":"oneScotch"},"content":"            String input \u003d readString(in, prompt);","lastModifiedDate":"2021-10-10"},{"lineNumber":221,"author":{"gitId":"oneScotch"},"content":"            try {","lastModifiedDate":"2021-10-10"},{"lineNumber":222,"author":{"gitId":"oneScotch"},"content":"                sdf.parse(input);","lastModifiedDate":"2021-10-10"},{"lineNumber":223,"author":{"gitId":"oneScotch"},"content":"                return input;","lastModifiedDate":"2021-10-10"},{"lineNumber":224,"author":{"gitId":"oneScotch"},"content":"            } catch (ParseException e) {","lastModifiedDate":"2021-10-10"},{"lineNumber":225,"author":{"gitId":"Vincent6896"},"content":"                Errors.print(Strings.ERR_DATE_INPUT, false);","lastModifiedDate":"2021-10-14"},{"lineNumber":226,"author":{"gitId":"oneScotch"},"content":"            }","lastModifiedDate":"2021-10-10"},{"lineNumber":227,"author":{"gitId":"oneScotch"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":228,"author":{"gitId":"oneScotch"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":229,"author":{"gitId":"oneScotch"},"content":"}","lastModifiedDate":"2021-10-10"},{"lineNumber":230,"author":{"gitId":"oneScotch"},"content":"","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"oneScotch":220,"Vincent6896":10}},{"path":"src/main/java/utils/StringParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"oneScotch"},"content":"package utils;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"oneScotch"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"oneScotch"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"oneScotch"},"content":"import java.util.List;","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"oneScotch"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"oneScotch"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"oneScotch"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"oneScotch"},"content":"/**","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"oneScotch"},"content":" * A string parser utility that implements some core functionalities of the","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"oneScotch"},"content":" * built-in {@code StringTokenizer}, but also with some additional","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"oneScotch"},"content":" * application-specific ones.","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"oneScotch"},"content":" *","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"oneScotch"},"content":" * @see java.util.StringTokenizer","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"oneScotch"},"content":" */","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"oneScotch"},"content":"public class StringParser {","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"oneScotch"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"oneScotch"},"content":"     * The type of a token.","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"oneScotch"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"oneScotch"},"content":"    private enum TokenType {","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"oneScotch"},"content":"        /**","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"oneScotch"},"content":"         * Double quoted token.","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"oneScotch"},"content":"         */","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"oneScotch"},"content":"        DOUBLE_QUOTED,","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"oneScotch"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"oneScotch"},"content":"        /**","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"oneScotch"},"content":"         * Single quoted token.","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"oneScotch"},"content":"         */","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"oneScotch"},"content":"        SINGLE_QUOTED,","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"oneScotch"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"oneScotch"},"content":"        /**","lastModifiedDate":"2021-10-10"},{"lineNumber":31,"author":{"gitId":"oneScotch"},"content":"         * Unquoted token.","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"oneScotch"},"content":"         */","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"oneScotch"},"content":"        UNQUOTED;","lastModifiedDate":"2021-10-10"},{"lineNumber":34,"author":{"gitId":"oneScotch"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":35,"author":{"gitId":"oneScotch"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":36,"author":{"gitId":"oneScotch"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":37,"author":{"gitId":"oneScotch"},"content":"     * A token consumed by the parser.","lastModifiedDate":"2021-10-10"},{"lineNumber":38,"author":{"gitId":"oneScotch"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":39,"author":{"gitId":"oneScotch"},"content":"    private class Token {","lastModifiedDate":"2021-10-10"},{"lineNumber":40,"author":{"gitId":"oneScotch"},"content":"        /**","lastModifiedDate":"2021-10-10"},{"lineNumber":41,"author":{"gitId":"oneScotch"},"content":"         * The type of this token.","lastModifiedDate":"2021-10-10"},{"lineNumber":42,"author":{"gitId":"oneScotch"},"content":"         */","lastModifiedDate":"2021-10-10"},{"lineNumber":43,"author":{"gitId":"oneScotch"},"content":"        TokenType tokenType;","lastModifiedDate":"2021-10-10"},{"lineNumber":44,"author":{"gitId":"oneScotch"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":45,"author":{"gitId":"oneScotch"},"content":"        /**","lastModifiedDate":"2021-10-10"},{"lineNumber":46,"author":{"gitId":"oneScotch"},"content":"         * The value of this token.","lastModifiedDate":"2021-10-10"},{"lineNumber":47,"author":{"gitId":"oneScotch"},"content":"         */","lastModifiedDate":"2021-10-10"},{"lineNumber":48,"author":{"gitId":"oneScotch"},"content":"        String token;","lastModifiedDate":"2021-10-10"},{"lineNumber":49,"author":{"gitId":"oneScotch"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":50,"author":{"gitId":"oneScotch"},"content":"        /**","lastModifiedDate":"2021-10-10"},{"lineNumber":51,"author":{"gitId":"oneScotch"},"content":"         * Initialises a token.","lastModifiedDate":"2021-10-10"},{"lineNumber":52,"author":{"gitId":"oneScotch"},"content":"         *","lastModifiedDate":"2021-10-10"},{"lineNumber":53,"author":{"gitId":"oneScotch"},"content":"         * @param tokenType the type of the token","lastModifiedDate":"2021-10-10"},{"lineNumber":54,"author":{"gitId":"oneScotch"},"content":"         * @param token     the value of the token","lastModifiedDate":"2021-10-10"},{"lineNumber":55,"author":{"gitId":"oneScotch"},"content":"         */","lastModifiedDate":"2021-10-10"},{"lineNumber":56,"author":{"gitId":"oneScotch"},"content":"        Token(TokenType tokenType, String token) {","lastModifiedDate":"2021-10-10"},{"lineNumber":57,"author":{"gitId":"oneScotch"},"content":"            this.tokenType \u003d tokenType;","lastModifiedDate":"2021-10-10"},{"lineNumber":58,"author":{"gitId":"oneScotch"},"content":"            this.token \u003d token;","lastModifiedDate":"2021-10-10"},{"lineNumber":59,"author":{"gitId":"oneScotch"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":60,"author":{"gitId":"oneScotch"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":61,"author":{"gitId":"oneScotch"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":62,"author":{"gitId":"oneScotch"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":63,"author":{"gitId":"oneScotch"},"content":"     * The RegEx pattern that matches any of the following, seperated by any number","lastModifiedDate":"2021-10-10"},{"lineNumber":64,"author":{"gitId":"oneScotch"},"content":"     * of whitespace characters:","lastModifiedDate":"2021-10-10"},{"lineNumber":65,"author":{"gitId":"oneScotch"},"content":"     * \u003cul\u003e","lastModifiedDate":"2021-10-10"},{"lineNumber":66,"author":{"gitId":"oneScotch"},"content":"     * \u003cli\u003e\"Double quoted tokens\" with escape {@code \\\"};\u003c/li\u003e","lastModifiedDate":"2021-10-10"},{"lineNumber":67,"author":{"gitId":"oneScotch"},"content":"     * \u003cli\u003e\u0027Single quoted tokens\u0027 with escape {@code \\\u0027};\u003c/li\u003e","lastModifiedDate":"2021-10-10"},{"lineNumber":68,"author":{"gitId":"oneScotch"},"content":"     * \u003cli\u003eUnquoted single tokens.\u003c/li\u003e","lastModifiedDate":"2021-10-10"},{"lineNumber":69,"author":{"gitId":"oneScotch"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2021-10-10"},{"lineNumber":70,"author":{"gitId":"oneScotch"},"content":"     * The pattern is","lastModifiedDate":"2021-10-10"},{"lineNumber":71,"author":{"gitId":"oneScotch"},"content":"     * {@code (\"[^\"\\\\]*(?:\\\\.[^\"\\\\]*)*\")|(\u0027[^\u0027\\\\]*(?:\\\\.[^\u0027\\\\]*)*\u0027)|(\\S+)}.","lastModifiedDate":"2021-10-10"},{"lineNumber":72,"author":{"gitId":"oneScotch"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":73,"author":{"gitId":"oneScotch"},"content":"    private static final String REGEX \u003d String.format(\"(%s)|(%s)|(%s)\", \"\\\"[^\\\"\\\\\\\\]*(?:\\\\\\\\.[^\\\"\\\\\\\\]*)*\\\"\",","lastModifiedDate":"2021-10-10"},{"lineNumber":74,"author":{"gitId":"oneScotch"},"content":"            \"\u0027[^\u0027\\\\\\\\]*(?:\\\\\\\\.[^\u0027\\\\\\\\]*)*\u0027\", \"\\\\S+\");","lastModifiedDate":"2021-10-10"},{"lineNumber":75,"author":{"gitId":"oneScotch"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":76,"author":{"gitId":"oneScotch"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":77,"author":{"gitId":"oneScotch"},"content":"     * The string that needs to be processed by the parser.","lastModifiedDate":"2021-10-10"},{"lineNumber":78,"author":{"gitId":"oneScotch"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":79,"author":{"gitId":"oneScotch"},"content":"    private final String string;","lastModifiedDate":"2021-10-10"},{"lineNumber":80,"author":{"gitId":"oneScotch"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":81,"author":{"gitId":"oneScotch"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":82,"author":{"gitId":"oneScotch"},"content":"     * The list of tokens parsed by the parser.","lastModifiedDate":"2021-10-10"},{"lineNumber":83,"author":{"gitId":"oneScotch"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":84,"author":{"gitId":"oneScotch"},"content":"    private final List\u003cToken\u003e tokens;","lastModifiedDate":"2021-10-10"},{"lineNumber":85,"author":{"gitId":"oneScotch"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":86,"author":{"gitId":"oneScotch"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":87,"author":{"gitId":"oneScotch"},"content":"     * Pointer to the next unread token.","lastModifiedDate":"2021-10-10"},{"lineNumber":88,"author":{"gitId":"oneScotch"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":89,"author":{"gitId":"oneScotch"},"content":"    private int next \u003d 0;","lastModifiedDate":"2021-10-10"},{"lineNumber":90,"author":{"gitId":"oneScotch"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":91,"author":{"gitId":"oneScotch"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":92,"author":{"gitId":"oneScotch"},"content":"     * Initialises a parser with the string given.","lastModifiedDate":"2021-10-10"},{"lineNumber":93,"author":{"gitId":"oneScotch"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":94,"author":{"gitId":"oneScotch"},"content":"     * @param string the string for the parser to consume","lastModifiedDate":"2021-10-10"},{"lineNumber":95,"author":{"gitId":"oneScotch"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":96,"author":{"gitId":"oneScotch"},"content":"    public StringParser(String string) {","lastModifiedDate":"2021-10-10"},{"lineNumber":97,"author":{"gitId":"oneScotch"},"content":"        this.string \u003d string;","lastModifiedDate":"2021-10-10"},{"lineNumber":98,"author":{"gitId":"oneScotch"},"content":"        this.tokens \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-10"},{"lineNumber":99,"author":{"gitId":"oneScotch"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":100,"author":{"gitId":"oneScotch"},"content":"        Matcher matcher \u003d Pattern.compile(REGEX).matcher(string);","lastModifiedDate":"2021-10-10"},{"lineNumber":101,"author":{"gitId":"oneScotch"},"content":"        while (matcher.find()) {","lastModifiedDate":"2021-10-10"},{"lineNumber":102,"author":{"gitId":"oneScotch"},"content":"            String token \u003d matcher.group();","lastModifiedDate":"2021-10-10"},{"lineNumber":103,"author":{"gitId":"oneScotch"},"content":"            TokenType tokenType;","lastModifiedDate":"2021-10-10"},{"lineNumber":104,"author":{"gitId":"oneScotch"},"content":"            if (matcher.group(1) !\u003d null) {","lastModifiedDate":"2021-10-10"},{"lineNumber":105,"author":{"gitId":"oneScotch"},"content":"                token \u003d token.substring(1, token.length() - 1);","lastModifiedDate":"2021-10-10"},{"lineNumber":106,"author":{"gitId":"oneScotch"},"content":"                tokenType \u003d TokenType.DOUBLE_QUOTED;","lastModifiedDate":"2021-10-10"},{"lineNumber":107,"author":{"gitId":"oneScotch"},"content":"            } else if (matcher.group(2) !\u003d null) {","lastModifiedDate":"2021-10-10"},{"lineNumber":108,"author":{"gitId":"oneScotch"},"content":"                token \u003d token.substring(1, token.length() - 1);","lastModifiedDate":"2021-10-10"},{"lineNumber":109,"author":{"gitId":"oneScotch"},"content":"                tokenType \u003d TokenType.SINGLE_QUOTED;","lastModifiedDate":"2021-10-10"},{"lineNumber":110,"author":{"gitId":"oneScotch"},"content":"            } else {","lastModifiedDate":"2021-10-10"},{"lineNumber":111,"author":{"gitId":"oneScotch"},"content":"                tokenType \u003d TokenType.UNQUOTED;","lastModifiedDate":"2021-10-10"},{"lineNumber":112,"author":{"gitId":"oneScotch"},"content":"            }","lastModifiedDate":"2021-10-10"},{"lineNumber":113,"author":{"gitId":"oneScotch"},"content":"            if (!token.isBlank()) {","lastModifiedDate":"2021-10-10"},{"lineNumber":114,"author":{"gitId":"oneScotch"},"content":"                tokens.add(new Token(tokenType, token));","lastModifiedDate":"2021-10-10"},{"lineNumber":115,"author":{"gitId":"oneScotch"},"content":"            }","lastModifiedDate":"2021-10-10"},{"lineNumber":116,"author":{"gitId":"oneScotch"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":117,"author":{"gitId":"oneScotch"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":118,"author":{"gitId":"oneScotch"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":119,"author":{"gitId":"oneScotch"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":120,"author":{"gitId":"oneScotch"},"content":"     * Finds if this parser has more unread tokens.","lastModifiedDate":"2021-10-10"},{"lineNumber":121,"author":{"gitId":"oneScotch"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":122,"author":{"gitId":"oneScotch"},"content":"     * @return {@code true} if there are more tokens to be read; {@code false} otherwise","lastModifiedDate":"2021-10-10"},{"lineNumber":123,"author":{"gitId":"oneScotch"},"content":"     * @see java.util.StringTokenizer#hasMoreTokens()","lastModifiedDate":"2021-10-10"},{"lineNumber":124,"author":{"gitId":"oneScotch"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":125,"author":{"gitId":"oneScotch"},"content":"    public boolean hasMoreTokens() {","lastModifiedDate":"2021-10-10"},{"lineNumber":126,"author":{"gitId":"oneScotch"},"content":"        return next \u003c tokens.size();","lastModifiedDate":"2021-10-10"},{"lineNumber":127,"author":{"gitId":"oneScotch"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":128,"author":{"gitId":"oneScotch"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":129,"author":{"gitId":"oneScotch"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":130,"author":{"gitId":"oneScotch"},"content":"     * Gets the next unread token from this parser.","lastModifiedDate":"2021-10-10"},{"lineNumber":131,"author":{"gitId":"oneScotch"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":132,"author":{"gitId":"oneScotch"},"content":"     * @return the next token string, if exists; {@code null} otherwise","lastModifiedDate":"2021-10-10"},{"lineNumber":133,"author":{"gitId":"oneScotch"},"content":"     * @see java.util.StringTokenizer#nextToken()","lastModifiedDate":"2021-10-10"},{"lineNumber":134,"author":{"gitId":"oneScotch"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":135,"author":{"gitId":"oneScotch"},"content":"    public String nextToken() {","lastModifiedDate":"2021-10-10"},{"lineNumber":136,"author":{"gitId":"oneScotch"},"content":"        if (hasMoreTokens()) {","lastModifiedDate":"2021-10-10"},{"lineNumber":137,"author":{"gitId":"oneScotch"},"content":"            return tokens.get(next++).token;","lastModifiedDate":"2021-10-10"},{"lineNumber":138,"author":{"gitId":"oneScotch"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":139,"author":{"gitId":"oneScotch"},"content":"        return null;","lastModifiedDate":"2021-10-10"},{"lineNumber":140,"author":{"gitId":"oneScotch"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":141,"author":{"gitId":"oneScotch"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":142,"author":{"gitId":"oneScotch"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":143,"author":{"gitId":"oneScotch"},"content":"     * Calculates the number of times that this parser\u0027s {@code nextToken} method","lastModifiedDate":"2021-10-10"},{"lineNumber":144,"author":{"gitId":"oneScotch"},"content":"     * can be called before it returns {@code null}. The current position is not","lastModifiedDate":"2021-10-10"},{"lineNumber":145,"author":{"gitId":"oneScotch"},"content":"     * advanced.","lastModifiedDate":"2021-10-10"},{"lineNumber":146,"author":{"gitId":"oneScotch"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":147,"author":{"gitId":"oneScotch"},"content":"     * @return the number of tokens remaining in the string using the current delimiter set.","lastModifiedDate":"2021-10-10"},{"lineNumber":148,"author":{"gitId":"oneScotch"},"content":"     * @see java.util.StringTokenizer#countTokens()","lastModifiedDate":"2021-10-10"},{"lineNumber":149,"author":{"gitId":"oneScotch"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":150,"author":{"gitId":"oneScotch"},"content":"    public int countTokens() {","lastModifiedDate":"2021-10-10"},{"lineNumber":151,"author":{"gitId":"oneScotch"},"content":"        return tokens.size();","lastModifiedDate":"2021-10-10"},{"lineNumber":152,"author":{"gitId":"oneScotch"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":153,"author":{"gitId":"oneScotch"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":154,"author":{"gitId":"oneScotch"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":155,"author":{"gitId":"oneScotch"},"content":"     * Gets the underlying string of this parser.","lastModifiedDate":"2021-10-10"},{"lineNumber":156,"author":{"gitId":"oneScotch"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":157,"author":{"gitId":"oneScotch"},"content":"     * @return the underlying string","lastModifiedDate":"2021-10-10"},{"lineNumber":158,"author":{"gitId":"oneScotch"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":159,"author":{"gitId":"oneScotch"},"content":"    public String getString() {","lastModifiedDate":"2021-10-10"},{"lineNumber":160,"author":{"gitId":"oneScotch"},"content":"        return string;","lastModifiedDate":"2021-10-10"},{"lineNumber":161,"author":{"gitId":"oneScotch"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":162,"author":{"gitId":"oneScotch"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":163,"author":{"gitId":"oneScotch"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":164,"author":{"gitId":"oneScotch"},"content":"     * Gets the unread tokens, combined as a string.","lastModifiedDate":"2021-10-10"},{"lineNumber":165,"author":{"gitId":"oneScotch"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":166,"author":{"gitId":"oneScotch"},"content":"     * @return the unread tokens, combined as a string","lastModifiedDate":"2021-10-10"},{"lineNumber":167,"author":{"gitId":"oneScotch"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":168,"author":{"gitId":"oneScotch"},"content":"    public String getRemaining() {","lastModifiedDate":"2021-10-10"},{"lineNumber":169,"author":{"gitId":"oneScotch"},"content":"        List\u003cToken\u003e remainingTokens \u003d tokens.subList(next, tokens.size());","lastModifiedDate":"2021-10-10"},{"lineNumber":170,"author":{"gitId":"oneScotch"},"content":"        List\u003cString\u003e remainingStrings \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-10"},{"lineNumber":171,"author":{"gitId":"oneScotch"},"content":"        for (Token token : remainingTokens) {","lastModifiedDate":"2021-10-10"},{"lineNumber":172,"author":{"gitId":"oneScotch"},"content":"            String quotes;","lastModifiedDate":"2021-10-10"},{"lineNumber":173,"author":{"gitId":"oneScotch"},"content":"            switch (token.tokenType) {","lastModifiedDate":"2021-10-10"},{"lineNumber":174,"author":{"gitId":"oneScotch"},"content":"            case DOUBLE_QUOTED: {","lastModifiedDate":"2021-10-10"},{"lineNumber":175,"author":{"gitId":"oneScotch"},"content":"                quotes \u003d \"\\\"\";","lastModifiedDate":"2021-10-10"},{"lineNumber":176,"author":{"gitId":"oneScotch"},"content":"                break;","lastModifiedDate":"2021-10-10"},{"lineNumber":177,"author":{"gitId":"oneScotch"},"content":"            }","lastModifiedDate":"2021-10-10"},{"lineNumber":178,"author":{"gitId":"oneScotch"},"content":"            case SINGLE_QUOTED: {","lastModifiedDate":"2021-10-10"},{"lineNumber":179,"author":{"gitId":"oneScotch"},"content":"                quotes \u003d \"\u0027\";","lastModifiedDate":"2021-10-10"},{"lineNumber":180,"author":{"gitId":"oneScotch"},"content":"                break;","lastModifiedDate":"2021-10-10"},{"lineNumber":181,"author":{"gitId":"oneScotch"},"content":"            }","lastModifiedDate":"2021-10-10"},{"lineNumber":182,"author":{"gitId":"oneScotch"},"content":"            case UNQUOTED:","lastModifiedDate":"2021-10-10"},{"lineNumber":183,"author":{"gitId":"oneScotch"},"content":"            default: {","lastModifiedDate":"2021-10-10"},{"lineNumber":184,"author":{"gitId":"oneScotch"},"content":"                quotes \u003d \"\";","lastModifiedDate":"2021-10-10"},{"lineNumber":185,"author":{"gitId":"oneScotch"},"content":"                break;","lastModifiedDate":"2021-10-10"},{"lineNumber":186,"author":{"gitId":"oneScotch"},"content":"            }","lastModifiedDate":"2021-10-10"},{"lineNumber":187,"author":{"gitId":"oneScotch"},"content":"            }","lastModifiedDate":"2021-10-10"},{"lineNumber":188,"author":{"gitId":"oneScotch"},"content":"            remainingStrings.add(String.format(\"%s%s%s\", quotes, token.token, quotes));","lastModifiedDate":"2021-10-10"},{"lineNumber":189,"author":{"gitId":"oneScotch"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":190,"author":{"gitId":"oneScotch"},"content":"        return String.join(\" \", remainingStrings);","lastModifiedDate":"2021-10-10"},{"lineNumber":191,"author":{"gitId":"oneScotch"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":192,"author":{"gitId":"oneScotch"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"oneScotch":192}},{"path":"src/main/java/utils/message/Numbers.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"oneScotch"},"content":"package utils.message;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"oneScotch"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"oneScotch"},"content":"public class Numbers {","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"oneScotch"},"content":"    //常量","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"oneScotch"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"oneScotch":5}},{"path":"src/main/java/utils/message/Strings.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"oneScotch"},"content":"package utils.message;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"oneScotch"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"oneScotch"},"content":"/**","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"oneScotch"},"content":" * String constants used in the program.","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"oneScotch"},"content":" */","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"oneScotch"},"content":"public class Strings {","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"oneScotch"},"content":"    private Strings() {","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"oneScotch"},"content":"        // Disallow instantiation","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"oneScotch"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"oneScotch"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"oneScotch"},"content":"    // Application name and version","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"oneScotch"},"content":"    public static final String APP_NAME_LONG \u003d \"A text-based code game for children ages 6 and up(Code Hunt)\";","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"oneScotch"},"content":"    public static final String APP_NAME_SHORT \u003d \"Code Hunt\";","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"oneScotch"},"content":"    public static final String APP_VERSION \u003d \"1.0\";","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"oneScotch"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"oneScotch"},"content":"    // Prompt","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"oneScotch"},"content":"    public static final String MAIN_PROMPT \u003d String.format(\"%s \u003e \", APP_NAME_SHORT);","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"oneScotch"},"content":"    public static final String HELP_MESSAGE \u003d \"Type \\\"help\\\" to see a list of available commands.\";","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"oneScotch"},"content":"    public static final String SUBCOMMAND_HELP_MESSAGE \u003d \"Please provide a subcommand.\";","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"oneScotch"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"oneScotch"},"content":"    // Main menu messages","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"Yuxinn-J"},"content":"    private static final String LOGO \u003d \"____          _        _   _             _  \\n\"","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"oneScotch"},"content":"            + \" / ___|___   __| | ___  | | | |_   _ _ __ | |_ \\n\"","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"oneScotch"},"content":"            + \"| |   / _ \\\\ / _` |/ _ \\\\ | |_| | | | | \u0027_ \\\\| __|\\n\"","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"oneScotch"},"content":"            + \"| |__| (_) | (_| |  __/ |  _  | |_| | | | | |_\\n\"","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"oneScotch"},"content":"            + \" \\\\____\\\\___/ \\\\__,_|\\\\___| |_| |_|\\\\__,_|_| |_|\\\\__|\\n\";","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"Yuxinn-J"},"content":"    public static final String MAIN_WELCOME_MESSAGE \u003d LOGO","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"oneScotch"},"content":"            + String.format(\"Welcome to %s.Are you ready to play?\\n\", APP_NAME_LONG) + HELP_MESSAGE;","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"oneScotch"},"content":"    public static final String MAIN_ABOUT_MESSAGE \u003d String.format(\"%s (Version %s)\\n\", APP_NAME_LONG, APP_VERSION)","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"oneScotch"},"content":"            + \"Developed by Wang Chuhan, Jiang Yuxin, Xue Yushan, Wang Ruisi, Peng Wenxuan\";","lastModifiedDate":"2021-10-10"},{"lineNumber":31,"author":{"gitId":"oneScotch"},"content":"    public static final String MAIN_EXIT_MESSAGE \u003d","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"oneScotch"},"content":"            String.format(\"Thank you playing %s ! Have a nice day~~\", APP_NAME_SHORT);","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"oneScotch"},"content":"    public static final String MAIN_PLAYER_ID_ENTER_PROMPT \u003d \"Enter your player ID: \";","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"oneScotch"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":35,"author":{"gitId":"Yuxinn-J"},"content":"    // Game menu messages","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"Yuxinn-J"},"content":"    public static final String GAME_WELCOME_MESSAGE \u003d LOGO","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"Yuxinn-J"},"content":"            + \"There you go!\";","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"Yuxinn-J"},"content":"    public static final String CHOOSE_LEVEL_MESSAGE \u003d \"Please choose your game mode: \\n\"","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"Yuxinn-J"},"content":"            + \"(1) Easy Mode | (2) Difficult Mode.\";","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"Yuxinn-J"},"content":"    public static final String GAME_RECORD_MESSAGE \u003d \"Here is your Game History.\";","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"Yuxinn-J"},"content":"    // Easy game messages","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"Yuxinn-J"},"content":"    private static final String DIVIDER \u003d \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\";","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"Yuxinn-J"},"content":"    public static final String EASY_LOGO \u003d \"            _.------.                        .----.__\\n\"","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"Yuxinn-J"},"content":"            + \"           /         \\\\_.       ._           /---.__  \\\\\\n\"","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"Yuxinn-J"},"content":"            + \"          |  O    O   |\\\\\\\\___  //|          /       `\\\\ |\\n\"","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"Yuxinn-J"},"content":"            + \"          |  .vvvvv.  | )   `(/ |         | o     o  \\\\|\\n\"","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"Yuxinn-J"},"content":"            + \"          /  |     |  |/      \\\\ |  /|   ./| .vvvvv.  |\\\\\\n\"","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"Yuxinn-J"},"content":"            + \"         /   `^^^^^\u0027  / _   _  `|_ ||  / /| |     |  | \\\\\\n\"","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"Yuxinn-J"},"content":"            + \"       ./  /|         | O)  O   ) \\\\|| //\u0027 | `^vvvv\u0027  |/\\\\\\\\\\n\"","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"Yuxinn-J"},"content":"            + \"      /   / |         \\\\        /  | | ~   \\\\          |  \\\\\\\\\\n\"","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"Yuxinn-J"},"content":"            + \"      \\\\  /  |        / \\\\ Y   /\u0027   | \\\\     |          |   ~\\n\"","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"Yuxinn-J"},"content":"            + \"       `\u0027   |  _     |  `._/\u0027 |   |  \\\\     7        /\\n\"","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"Yuxinn-J"},"content":"            + \"         _.-\u0027-\u0027 `-\u0027-\u0027|  |`-._/   /    \\\\ _ /    .    |\\n\"","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"Yuxinn-J"},"content":"            + \"    __.-\u0027            \\\\  \\\\   .   / \\\\_.  \\\\ -|_/\\\\/ `--.|_\\n\"","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"Yuxinn-J"},"content":"            + \" --\u0027                  \\\\  \\\\ |   /    |  |              `-\\n\"","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"Yuxinn-J"},"content":"            + \"                       \\\\uU \\\\UU/     |  /   :F_P:\\n\";","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"Yuxinn-J"},"content":"    public static final String EASY_GAME_WELCOME_MESSAGE \u003d DIVIDER + \"\\nHello! Brave cool kids!\\n\"","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"Yuxinn-J"},"content":"            + \"We are the Avengers. To protect the world from devastation, we need your help!\\n\"","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"Yuxinn-J"},"content":"            + \"We need to get as many cards ad possible for the last Infinity Gem.\\n\"","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"Yuxinn-J"},"content":"            + \"Win following games and collect the cards.\\n\"","lastModifiedDate":"2021-10-12"},{"lineNumber":62,"author":{"gitId":"Yuxinn-J"},"content":"            + \"Good luck!\\n\"","lastModifiedDate":"2021-10-12"},{"lineNumber":63,"author":{"gitId":"Yuxinn-J"},"content":"            + \"We will be waiting for you and the cards!\\n\" + DIVIDER;","lastModifiedDate":"2021-10-12"},{"lineNumber":64,"author":{"gitId":"Yuxinn-J"},"content":"    public static final String HANG_MAN_START \u003d \"\\n******************** Level 1: Hang Man ********************\\n\";","lastModifiedDate":"2021-10-14"},{"lineNumber":65,"author":{"gitId":"Yuxinn-J"},"content":"    public static final String QUIZ_START \u003d \"\\n******************** Level 2: How Code Works ********************\\n\";","lastModifiedDate":"2021-10-14"},{"lineNumber":66,"author":{"gitId":"Yuxinn-J"},"content":"    public static final String GUESS_NUM_START \u003d \"\\n******************** Level 3: Guess Number ********************\\n\";","lastModifiedDate":"2021-10-14"},{"lineNumber":67,"author":{"gitId":"Yuxinn-J"},"content":"    public static final String TREASURE_HUNT_START \u003d \"\\n******************** \"","lastModifiedDate":"2021-10-14"},{"lineNumber":68,"author":{"gitId":"Yuxinn-J"},"content":"            + \"Level 4: Treasure Hunt ********************\\n\";","lastModifiedDate":"2021-10-14"},{"lineNumber":69,"author":{"gitId":"Yuxinn-J"},"content":"    public static final String FINISH_EASY_MODE \u003d \"Well done! You have finished all the task!!\";","lastModifiedDate":"2021-10-14"},{"lineNumber":70,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":71,"author":{"gitId":"Yuxinn-J"},"content":"    // Card menu messages","lastModifiedDate":"2021-10-12"},{"lineNumber":72,"author":{"gitId":"Yuxinn-J"},"content":"    private static final String PACKAGE \u003d \"\\n\"","lastModifiedDate":"2021-10-12"},{"lineNumber":73,"author":{"gitId":"Yuxinn-J"},"content":"            + \"      ___           ___           ___          _____    \\n\"","lastModifiedDate":"2021-10-14"},{"lineNumber":74,"author":{"gitId":"Yuxinn-J"},"content":"            + \"     /  /\\\\         /  /\\\\         /  /\\\\        /  /::\\\\   \\n\"","lastModifiedDate":"2021-10-14"},{"lineNumber":75,"author":{"gitId":"Yuxinn-J"},"content":"            + \"    /  /:/        /  /::\\\\       /  /::\\\\      /  /:/\\\\:\\\\  \\n\"","lastModifiedDate":"2021-10-14"},{"lineNumber":76,"author":{"gitId":"Yuxinn-J"},"content":"            + \"   /  /:/        /  /:/\\\\:\\\\     /  /:/\\\\:\\\\    /  /:/  \\\\:\\\\ \\n\"","lastModifiedDate":"2021-10-14"},{"lineNumber":77,"author":{"gitId":"Yuxinn-J"},"content":"            + \"  /  /:/  ___   /  /:/~/::\\\\   /  /:/~/:/   /__/:/ \\\\__\\\\:|\\n\"","lastModifiedDate":"2021-10-14"},{"lineNumber":78,"author":{"gitId":"Yuxinn-J"},"content":"            + \" /__/:/  /  /\\\\ /__/:/ /:/\\\\:\\\\ /__/:/ /:/___ \\\\  \\\\:\\\\ /  /:/\\n\"","lastModifiedDate":"2021-10-14"},{"lineNumber":79,"author":{"gitId":"Yuxinn-J"},"content":"            + \" \\\\  \\\\:\\\\ /  /:/ \\\\  \\\\:\\\\/:/__\\\\/ \\\\  \\\\:\\\\/:::::/  \\\\  \\\\:\\\\  /:/ \\n\"","lastModifiedDate":"2021-10-14"},{"lineNumber":80,"author":{"gitId":"Yuxinn-J"},"content":"            + \"  \\\\  \\\\:\\\\  /:/   \\\\  \\\\::/       \\\\  \\\\::/~~~~    \\\\  \\\\:\\\\/:/  \\n\"","lastModifiedDate":"2021-10-14"},{"lineNumber":81,"author":{"gitId":"Yuxinn-J"},"content":"            + \"   \\\\  \\\\:\\\\/:/     \\\\  \\\\:\\\\        \\\\  \\\\:\\\\         \\\\  \\\\::/   \\n\"","lastModifiedDate":"2021-10-14"},{"lineNumber":82,"author":{"gitId":"Yuxinn-J"},"content":"            + \"    \\\\  \\\\::/       \\\\  \\\\:\\\\        \\\\  \\\\:\\\\         \\\\__\\\\/    \\n\"","lastModifiedDate":"2021-10-14"},{"lineNumber":83,"author":{"gitId":"Yuxinn-J"},"content":"            + \"     \\\\__\\\\/         \\\\__\\\\/         \\\\__\\\\/                  \\n\";","lastModifiedDate":"2021-10-14"},{"lineNumber":84,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":85,"author":{"gitId":"Yuxinn-J"},"content":"    public static final String CARD_WELCOME_MESSAGE \u003d PACKAGE","lastModifiedDate":"2021-10-12"},{"lineNumber":86,"author":{"gitId":"Yuxinn-J"},"content":"            + \"Here is your package of cards!\\n\" + HELP_MESSAGE;","lastModifiedDate":"2021-10-12"},{"lineNumber":87,"author":{"gitId":"Yuxinn-J"},"content":"    public static final String LIST_CARD_MESSAGE \u003d \"Here is all of your cards!\";","lastModifiedDate":"2021-10-12"},{"lineNumber":88,"author":{"gitId":"Yuxinn-J"},"content":"    public static final String CARD_DIVIDER_MESSAGE \u003d \"\\n♠♡♢♣♤♥♦♧♠♡♢♣♤♥♦♧♠♡♢♣♤♥♦♧♠♡♢♣♤♥♦♧♠♡♢♣♤♥♦♧♠♡♢♣♤♥♦♧\\n\";","lastModifiedDate":"2021-10-14"},{"lineNumber":89,"author":{"gitId":"oneScotch"},"content":"    //Player messages","lastModifiedDate":"2021-10-11"},{"lineNumber":90,"author":{"gitId":"oneScotch"},"content":"    public static final String PLAYER_NAME_ENTER_PROMPT \u003d \"Enter your player name: \";","lastModifiedDate":"2021-10-11"},{"lineNumber":91,"author":{"gitId":"oneScotch"},"content":"    public static final String PLAYER_ID_PROMPT \u003d \"Remember your ID to continue your game next time: %s\\n\";","lastModifiedDate":"2021-10-11"},{"lineNumber":92,"author":{"gitId":"oneScotch"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":93,"author":{"gitId":"oneScotch"},"content":"    // Error messages","lastModifiedDate":"2021-10-10"},{"lineNumber":94,"author":{"gitId":"oneScotch"},"content":"    public static final String ERR_PLAYER_FILE_NOTFOUND_MESSAGE \u003d","lastModifiedDate":"2021-10-11"},{"lineNumber":95,"author":{"gitId":"oneScotch"},"content":"            \" not found or does not exists. Default settings will be loaded.\";","lastModifiedDate":"2021-10-11"},{"lineNumber":96,"author":{"gitId":"oneScotch"},"content":"    public static final String ERR_PLAYER_FILE_CORRUPTED_MESSAGE \u003d","lastModifiedDate":"2021-10-11"},{"lineNumber":97,"author":{"gitId":"oneScotch"},"content":"            \"Data file %s is corrupted. Default settings will be loaded instead.\";","lastModifiedDate":"2021-10-11"},{"lineNumber":98,"author":{"gitId":"oneScotch"},"content":"    public static final String ERR_UNKNOWN_COMMAND \u003d \"Unknown command.\\n\" + HELP_MESSAGE;","lastModifiedDate":"2021-10-10"},{"lineNumber":99,"author":{"gitId":"oneScotch"},"content":"    public static final String ERR_UNEXPECTED_INPUT \u003d \"Unexpected input.\\n\" + HELP_MESSAGE;","lastModifiedDate":"2021-10-10"},{"lineNumber":100,"author":{"gitId":"oneScotch"},"content":"    public static final String ERR_EMPTY_STRING \u003d \"Please provide an input.\";","lastModifiedDate":"2021-10-10"},{"lineNumber":101,"author":{"gitId":"oneScotch"},"content":"    public static final String ERR_UNKNOWN_INPUT \u003d \"Please enter one of the options provided.\";","lastModifiedDate":"2021-10-10"},{"lineNumber":102,"author":{"gitId":"oneScotch"},"content":"    public static final String ERR_INPUT_MISMATCH_INT_EXPECTED \u003d \"Please enter an integer.\";","lastModifiedDate":"2021-10-10"},{"lineNumber":103,"author":{"gitId":"oneScotch"},"content":"    public static final String ERR_INPUT_MISMATCH_DOUBLE_EXPECTED \u003d \"Please enter a number.\";","lastModifiedDate":"2021-10-10"},{"lineNumber":104,"author":{"gitId":"oneScotch"},"content":"    public static final String ERR_BOOLEAN_INPUT \u003d \"Please enter \\\"y\\\" for yes, \\\"n\\\" for no.\";","lastModifiedDate":"2021-10-10"},{"lineNumber":105,"author":{"gitId":"oneScotch"},"content":"    public static final String ERR_DATE_INPUT \u003d \"Please enter a valid date.\";","lastModifiedDate":"2021-10-10"},{"lineNumber":106,"author":{"gitId":"oneScotch"},"content":"    public static final String ERR_TIME_INPUT \u003d \"Please enter a valid time.\";","lastModifiedDate":"2021-10-10"},{"lineNumber":107,"author":{"gitId":"Yuxinn-J"},"content":"    public static final String ERR_INVALID_NUMBER \u003d \"Please enter a number from either 1 or 2.\";","lastModifiedDate":"2021-10-12"},{"lineNumber":108,"author":{"gitId":"oneScotch"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":109,"author":{"gitId":"oneScotch"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"Yuxinn-J":57,"oneScotch":52}},{"path":"src/test/java/card/CardManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Vincent6896"},"content":"package card;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"Vincent6896"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"LilyDaytoy"},"content":"import data.card.Card;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"LilyDaytoy"},"content":"import data.card.CardManager;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"LilyDaytoy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"oneScotch"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"LilyDaytoy"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"LilyDaytoy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"Vincent6896"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"Vincent6896"},"content":"class CardManagerTest {","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"LilyDaytoy"},"content":"    CardManager cards;","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"LilyDaytoy"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"LilyDaytoy"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"LilyDaytoy"},"content":"    void setUp() {","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"LilyDaytoy"},"content":"        ArrayList\u003cCard\u003e cardList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"LilyDaytoy"},"content":"        cardList.add(new Card(\"Loops can execute a block of code as long as a specified condition is reached.\", 1));","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"LilyDaytoy"},"content":"        cardList.add(new Card(\"Arrays are used to store multiple values in a single variable\", 2));","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"LilyDaytoy"},"content":"        cardList.add(new Card(\"Use the if statement to specify code to be executed if a condition is true.\", 3));","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"LilyDaytoy"},"content":"        cards \u003d new CardManager(cardList);","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"LilyDaytoy"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"Vincent6896"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"LilyDaytoy"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"LilyDaytoy"},"content":"    public void testDeleteCard() {","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"LilyDaytoy"},"content":"        String content \u003d \"Loops can execute a block of code as long as a specified condition is reached.\";","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"LilyDaytoy"},"content":"        Assertions.assertTrue(cards.deleteCard(1).toString().equals(content));","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"LilyDaytoy"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"LilyDaytoy"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"LilyDaytoy"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"LilyDaytoy"},"content":"    public void testExchange() {","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"LilyDaytoy"},"content":"        Assertions.assertTrue(cards.exchange(1));","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"LilyDaytoy"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"Vincent6896"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"oneScotch":1,"Vincent6896":6,"LilyDaytoy":25}},{"path":"src/test/java/card/CardTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Vincent6896"},"content":"package card;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"Vincent6896"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"oneScotch"},"content":"import data.card.Card;","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"Vincent6896"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"LilyDaytoy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"Vincent6896"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"Vincent6896"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"Vincent6896"},"content":"class CardTest {","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"LilyDaytoy"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"Vincent6896"},"content":"    public void testOutput() {","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"LilyDaytoy"},"content":"        Assertions.assertTrue(new Card(\"loop\", 1).toString().equals(\"loop\"));","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"Vincent6896"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"LilyDaytoy"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"LilyDaytoy"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"LilyDaytoy"},"content":"    public void testIsUsed() {","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"LilyDaytoy"},"content":"        Assertions.assertFalse(new Card(\"loop\", 1).checkIfIsUsed());","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"LilyDaytoy"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"Vincent6896"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"oneScotch":1,"Vincent6896":9,"LilyDaytoy":8}},{"path":"src/test/java/game/GameListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Mist0919"},"content":"package game;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"oneScotch"},"content":"import data.card.Card;","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"oneScotch"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"oneScotch"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"oneScotch"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"Mist0919"},"content":"public class GameListTest {","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"Mist0919"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"oneScotch":4,"Mist0919":4}},{"path":"src/test/java/game/GameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Vincent6896"},"content":"package game;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"Vincent6896"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"oneScotch"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"oneScotch"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"Vincent6896"},"content":"class GameTest {","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"Vincent6896"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"Vincent6896"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"oneScotch":2,"Vincent6896":5}},{"path":"src/test/java/game/GuessNumberTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"oneScotch"},"content":"package game;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"oneScotch"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"oneScotch"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"oneScotch"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"oneScotch"},"content":"public class GuessNumberTest {","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"oneScotch"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"oneScotch":6}},{"path":"src/test/java/game/HangmanGameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Vincent6896"},"content":"package game;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"Vincent6896"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"oneScotch"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"oneScotch"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"Vincent6896"},"content":"public class HangmanGameTest {","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"Vincent6896"},"content":"}","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"Vincent6896"},"content":"","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"oneScotch":2,"Vincent6896":5}},{"path":"src/test/java/seedu/duke/DukeTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.duke;","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"oneScotch"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"class DukeTest {","lastModifiedDate":"2020-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2020-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public void sampleTest() {","lastModifiedDate":"2020-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        assertTrue(true);","lastModifiedDate":"2020-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-24"},{"lineNumber":13,"author":{"gitId":"oneScotch"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"oneScotch"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"oneScotch"},"content":"    void checkEchoFunction() {","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"LilyDaytoy"},"content":"        assertEquals(\"Test Message\", seedu.duke.Duke.echoMessage(\"Test Message\"));","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"oneScotch"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"oneScotch":5,"-":12,"LilyDaytoy":1}},{"path":"src/test/java/storage/StorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Vincent6896"},"content":"package storage;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"oneScotch"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"oneScotch"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"Vincent6896"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"Vincent6896"},"content":"public class StorageTest {","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"Vincent6896"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"oneScotch":2,"Vincent6896":4}},{"path":"src/test/java/ui/CardMenuTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Yuxinn-J"},"content":"package ui;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"Yuxinn-J"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"Yuxinn-J"},"content":"public class CardMenuTest {","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"Yuxinn-J"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"Yuxinn-J":6}},{"path":"src/test/java/ui/DifficultMenuTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Yuxinn-J"},"content":"package ui;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"Yuxinn-J"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"Yuxinn-J"},"content":"public class DifficultMenuTest {","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"Yuxinn-J"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"Yuxinn-J":6}},{"path":"src/test/java/ui/EasyMenuTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Yuxinn-J"},"content":"package ui;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"Yuxinn-J"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"Yuxinn-J"},"content":"public class EasyMenuTest {","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"Yuxinn-J"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"Yuxinn-J":6}},{"path":"src/test/java/ui/GameMainMenuTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Vincent6896"},"content":"package ui;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"oneScotch"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"oneScotch"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"Vincent6896"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"Vincent6896"},"content":"public class GameMainMenuTest {","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"Vincent6896"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"oneScotch":2,"Vincent6896":4}},{"path":"src/test/java/ui/GameMenuTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Yuxinn-J"},"content":"package ui;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"Yuxinn-J"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"Yuxinn-J"},"content":"public class GameMenuTest {","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"Yuxinn-J"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"Yuxinn-J":6}}]
